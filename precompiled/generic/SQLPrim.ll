@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN19SMLSharp__SQL__Errors4ExecE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors4LinkE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors6FormatE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors7ConnectE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric12fromLargeIntE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric13fromLargeRealE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric1_JE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric1_KE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric1_ME=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric3remE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric4quotE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric7compareE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric7fromIntE=external local_unnamed_addr global i8*
@_SMLZN22SMLSharp__SQL__TimeStamp7compareE=external local_unnamed_addr global i8*
@_SMLZN4Char7compareE=external local_unnamed_addr global i8*
@_SMLZN4Char7toLowerE=external local_unnamed_addr global i8*
@_SMLZN5Int327compareE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_JE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_KE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_ME=external local_unnamed_addr global i8*
@_SMLZN6IntInf3remE=external local_unnamed_addr global i8*
@_SMLZN6IntInf4quotE=external local_unnamed_addr global i8*
@_SMLZN6IntInf7compareE=external local_unnamed_addr global i8*
@_SMLZN6Real327compareE=external local_unnamed_addr global i8*
@_SMLZN6Real647compareE=external local_unnamed_addr global i8*
@_SMLZN6String1_ZE=external local_unnamed_addr global i8*
@_SMLZN6String7compareE=external local_unnamed_addr global i8*
@_SMLZN6Word327compareE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@_SMLZ8Overflow=external unnamed_addr constant i8*
@_SMLZ3Div=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"SMLSharp_SQL_Prim.Toy\00"}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL260=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@b,i32 0,i32 0,i32 0),i32 8)}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_263 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1623 to void(...)*),i32 -2147483647}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_265 to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1624 to void(...)*),i32 -2147483647}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"int\00"}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@e,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"intInf\00"}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@g,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"word\00"}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@i,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"char\00"}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@k,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"string\00"}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@m,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"real\00"}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@o,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"real32\00"}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@q,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"bool\00"}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@s,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"timestamp\00"}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@u,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"numeric\00"}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c" option\00"}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@w,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"unsupported (\00"}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c")\00"}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"src/sql/main/SQLPrim.sml:83.10(2571)\00"}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:102.36(3251)\00"}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"cannot create table `\00"}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"': type `\00"}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"' is not supported\00"}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:124.31(4289)\00"}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"type mismatch of column `\00"}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"': expected `\00"}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"', but actual `\00"}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:119.34(3996)\00"}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"column `\00"}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"' of table `\00"}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:134.26(4836)\00"}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"' has column `\00"}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"' but not declared.\00"}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:156.14(5642)\00"}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c", \00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"`\00"}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"'\00"}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim4linkE_359 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim4linkE_1639 to void(...)*),i32 -2147483647}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"tables \00"}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c" are not found.\00"}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:154.14(5561)\00"}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"table `\00"}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"' is not found.\00"}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLN17SMLSharp__SQL__Prim4linkE_366 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim4linkE_1640 to void(...)*),i32 -2147483647}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_369 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_1642 to void(...)*),i32 -2147483647}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:188.12(6635)\00"}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLL3ast_388 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3ast_1648 to void(...)*),i32 1}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ad,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLL3ast_396 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3ast_1650 to void(...)*),i32 1}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@af,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:227.12(7780)\00"}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"closed connection\00"}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:232.12(7959)\00"}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:237.12(8136)\00"}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"closed cursor\00"}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11fromSQL__intE_1660 to void(...)*),i32 -2147483647}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__intInfE_1661 to void(...)*),i32 -2147483647}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__wordE_1662 to void(...)*),i32 -2147483647}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__charE_1663 to void(...)*),i32 -2147483647}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__boolE_1664 to void(...)*),i32 -2147483647}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__stringE_1665 to void(...)*),i32 -2147483647}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__realE_1666 to void(...)*),i32 -2147483647}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__real32E_1667 to void(...)*),i32 -2147483647}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17fromSQL__timestampE_1668 to void(...)*),i32 -2147483647}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:254.27(8631)\00"}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15fromSQL__numericE_1669 to void(...)*),i32 -2147483647}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12compare__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12compare__boolE_1672 to void(...)*),i32 -2147483647}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_1676 to void(...)*),i32 -2147483647}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:355.4(12768)\00"}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool34and3E_1677 to void(...)*),i32 -2147483647}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:361.4(12938)\00"}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool33or3E_1678 to void(...)*),i32 -2147483647}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:400.14(13931)\00"}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL4sort_502 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4sort_1687 to void(...)*),i32 -2147483647}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLFN17SMLSharp__SQL__Prim8mod__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8mod__realE_1698 to void(...)*),i32 -2147483647}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLFN17SMLSharp__SQL__Prim10mod__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10mod__real32E_1699 to void(...)*),i32 -2147483647}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_543 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_1702 to void(...)*),i32 -2147483647}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_1703 to void(...)*),i32 -2147483647}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_556 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1706 to void(...)*),i32 -2147483647}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_558 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1707 to void(...)*),i32 -2147483647}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1708 to void(...)*),i32 -2147483647}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_565 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1710 to void(...)*),i32 -2147483647}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_567 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1711 to void(...)*),i32 -2147483647}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1712 to void(...)*),i32 -2147483647}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_572 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_1713 to void(...)*),i32 -2147483647}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_1715 to void(...)*),i32 -2147483647}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_592 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1718 to void(...)*),i32 -2147483647}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1719 to void(...)*),i32 -2147483647}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_599 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1721 to void(...)*),i32 -2147483647}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1722 to void(...)*),i32 -2147483647}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List24joinE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_1723 to void(...)*),i32 -2147483647}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1724 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim3ToyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL260,i64 0,i32 2)to i8*)
@aX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLFN17SMLSharp__SQL__Prim8closeResE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8closeResE_1725 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8closeResE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aX,i64 0,i32 2)to i8*)
@aY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLFN17SMLSharp__SQL__Prim12closeCommandE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12closeCommandE_1726 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12closeCommandE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aY,i64 0,i32 2)to i8*)
@aZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11dummyCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1727 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11dummyCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aZ,i64 0,i32 2)to i8*)
@a0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_619 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_1728 to void(...)*),i32 -2147483647}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9newCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_1729 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9newCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a1,i64 0,i32 2)to i8*)
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim12queryCommandE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_1730 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12queryCommandE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a2,i64 0,i32 2)to i8*)
@a3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim16sqlserver__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1731 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16sqlserver__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a3,i64 0,i32 2)to i8*)
@a4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim17sqlserver__backendE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1732 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17sqlserver__backendE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a4,i64 0,i32 2)to i8*)
@a5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_1733 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7sqlevalE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a5,i64 0,i32 2)to i8*)
@a6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim7connectE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7connectE_1734 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7connectE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a6,i64 0,i32 2)to i8*)
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim16connectAndCreateE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16connectAndCreateE_1735 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16connectAndCreateE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a7,i64 0,i32 2)to i8*)
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9closeConnE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1737 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9closeConnE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a8,i64 0,i32 2)to i8*)
@a9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11closeCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1739 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11closeCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a9,i64 0,i32 2)to i8*)
@ba=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5fetchE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5fetchE_1740 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5fetchE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ba,i64 0,i32 2)to i8*)
@bb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_1741 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8fetchAllE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bb,i64 0,i32 2)to i8*)
@bc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim3toyE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_1742 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim3toyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bc,i64 0,i32 2)to i8*)
@bd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_1743 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15commandToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bd,i64 0,i32 2)to i8*)
@be=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_1744 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13queryToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@be,i64 0,i32 2)to i8*)
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11expToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_1745 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11expToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bf,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11fromSQL__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@am,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@an,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ao,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ap,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ar,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@as,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@at,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17fromSQL__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@au,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15fromSQL__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aw,i64 0,i32 2)to i8*)
@bg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17fromSQL__intOptionE_1746 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17fromSQL__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bg,i64 0,i32 2)to i8*)
@bh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE_1747 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bh,i64 0,i32 2)to i8*)
@bi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__wordOptionE_1748 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bi,i64 0,i32 2)to i8*)
@bj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__charOptionE_1749 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bj,i64 0,i32 2)to i8*)
@bk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__boolOptionE_1750 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bk,i64 0,i32 2)to i8*)
@bl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__stringOptionE_1751 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bl,i64 0,i32 2)to i8*)
@bm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__realOptionE_1752 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bm,i64 0,i32 2)to i8*)
@bn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__real32OptionE_1753 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bn,i64 0,i32 2)to i8*)
@bo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE_1754 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bo,i64 0,i32 2)to i8*)
@bp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim21fromSQL__numericOptionE_1755 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim21fromSQL__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bp,i64 0,i32 2)to i8*)
@bq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9toSQL__intE_1756 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9toSQL__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bq,i64 0,i32 2)to i8*)
@br=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12toSQL__intInfE_1757 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12toSQL__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@br,i64 0,i32 2)to i8*)
@bs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10toSQL__wordE_1758 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10toSQL__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bs,i64 0,i32 2)to i8*)
@bt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10toSQL__charE_1759 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10toSQL__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bt,i64 0,i32 2)to i8*)
@bu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10toSQL__boolE_1760 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10toSQL__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bu,i64 0,i32 2)to i8*)
@bv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12toSQL__stringE_1761 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12toSQL__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bv,i64 0,i32 2)to i8*)
@bw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i64)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10toSQL__realE_1762 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10toSQL__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bw,i64 0,i32 2)to i8*)
@bx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12toSQL__real32E_1763 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12toSQL__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bx,i64 0,i32 2)to i8*)
@by=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15toSQL__timestampE_1764 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15toSQL__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@by,i64 0,i32 2)to i8*)
@bz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13toSQL__numericE_1765 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13toSQL__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bz,i64 0,i32 2)to i8*)
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15toSQL__intOptionE_1766 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15toSQL__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bA,i64 0,i32 2)to i8*)
@bB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18toSQL__intInfOptionE_1767 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18toSQL__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bB,i64 0,i32 2)to i8*)
@bC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16toSQL__wordOptionE_1768 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16toSQL__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bC,i64 0,i32 2)to i8*)
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16toSQL__charOptionE_1769 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16toSQL__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bD,i64 0,i32 2)to i8*)
@bE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16toSQL__boolOptionE_1770 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16toSQL__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bE,i64 0,i32 2)to i8*)
@bF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18toSQL__stringOptionE_1771 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18toSQL__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bF,i64 0,i32 2)to i8*)
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16toSQL__realOptionE_1772 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16toSQL__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bG,i64 0,i32 2)to i8*)
@bH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18toSQL__real32OptionE_1773 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18toSQL__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bH,i64 0,i32 2)to i8*)
@bI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim21toSQL__timestampOptionE_1774 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim21toSQL__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bI,i64 0,i32 2)to i8*)
@bJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19toSQL__numericOptionE_1775 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19toSQL__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bJ,i64 0,i32 2)to i8*)
@bK=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"src/sql/main/SQLPrim.sml:34.27(1002)\00"}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL260,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@bK,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_727 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_1776 to void(...)*),i32 1}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9toyServerE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_1777 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9toyServerE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bN,i64 0,i32 2)to i8*)
@bO=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@b8,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim6ty__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6ty__intE_1778 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6ty__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bP,i64 0,i32 2)to i8*)
@bQ=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cb,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ty__intInfE_1779 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ty__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bR,i64 0,i32 2)to i8*)
@bS=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ce,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ty__wordE_1780 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ty__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bT,i64 0,i32 2)to i8*)
@bU=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ch,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ty__charE_1781 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ty__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bV,i64 0,i32 2)to i8*)
@bW=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ck,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ty__boolE_1782 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ty__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bX,i64 0,i32 2)to i8*)
@bY=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cn,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ty__stringE_1783 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ty__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bZ,i64 0,i32 2)to i8*)
@b0=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cq,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ty__realE_1784 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ty__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b1,i64 0,i32 2)to i8*)
@b2=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ct,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ty__real32E_1785 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ty__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b3,i64 0,i32 2)to i8*)
@b4=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cw,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ty__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12ty__timestampE_1786 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12ty__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b5,i64 0,i32 2)to i8*)
@b6=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cz,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10ty__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10ty__numericE_1787 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10ty__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b7,i64 0,i32 2)to i8*)
@b8=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 2,[4x i8]zeroinitializer,i32 0}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@b8,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ty__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12ty__intOptionE_1788 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12ty__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ca,i64 0,i32 2)to i8*)
@cb=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 3,[4x i8]zeroinitializer,i32 0}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cb,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ty__intInfOptionE_1789 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ty__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cd,i64 0,i32 2)to i8*)
@ce=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 10,[4x i8]zeroinitializer,i32 0}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ce,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ty__wordOptionE_1790 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ty__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cg,i64 0,i32 2)to i8*)
@ch=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 1,[4x i8]zeroinitializer,i32 0}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ch,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ty__charOptionE_1791 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ty__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cj,i64 0,i32 2)to i8*)
@ck=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,[4x i8]zeroinitializer,i32 0}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ck,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ty__boolOptionE_1792 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ty__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cm,i64 0,i32 2)to i8*)
@cn=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 7,[4x i8]zeroinitializer,i32 0}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cn,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ty__stringOptionE_1793 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ty__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cp,i64 0,i32 2)to i8*)
@cq=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 5,[4x i8]zeroinitializer,i32 0}>,align 8
@cr=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cq,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ty__realOptionE_1794 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ty__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cs,i64 0,i32 2)to i8*)
@ct=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,[4x i8]zeroinitializer,i32 0}>,align 8
@cu=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ct,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ty__real32OptionE_1795 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ty__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cv,i64 0,i32 2)to i8*)
@cw=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 8,[4x i8]zeroinitializer,i32 0}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cw,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18ty__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18ty__timestampOptionE_1796 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18ty__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cy,i64 0,i32 2)to i8*)
@cz=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 4,[4x i8]zeroinitializer,i32 0}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@cz,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16ty__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16ty__numericOptionE_1797 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16ty__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12compare__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*)
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17compare__intOptionE_1798 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17compare__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cC,i64 0,i32 2)to i8*)
@cD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20compare__intInfOptionE_1799 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20compare__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cD,i64 0,i32 2)to i8*)
@cE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18compare__wordOptionE_1800 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18compare__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cE,i64 0,i32 2)to i8*)
@cF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18compare__charOptionE_1801 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18compare__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cF,i64 0,i32 2)to i8*)
@cG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18compare__boolOptionE_1802 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18compare__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cG,i64 0,i32 2)to i8*)
@cH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20compare__stringOptionE_1803 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20compare__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cH,i64 0,i32 2)to i8*)
@cI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18compare__realOptionE_1804 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18compare__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cI,i64 0,i32 2)to i8*)
@cJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20compare__real32OptionE_1805 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20compare__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cJ,i64 0,i32 2)to i8*)
@cK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim23compare__timestampOptionE_1806 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim23compare__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cK,i64 0,i32 2)to i8*)
@cL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim21compare__numericOptionE_1807 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim21compare__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cL,i64 0,i32 2)to i8*)
@cM=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:332.4(12292)\00"}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General212reverseOrderE_1808 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8General212reverseOrderE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cN,i64 0,i32 2)to i8*)
@cO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_1809 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8General211comparePairE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cO,i64 0,i32 2)to i8*)
@cP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool38fromBoolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool38fromBoolE_1810 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5Bool38fromBoolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cP,i64 0,i32 2)to i8*)
@cQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool36isTrueE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool36isTrueE_1811 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5Bool36isTrueE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool32isE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ay,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool34and3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool33or3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aC,i64 0,i32 2)to i8*)
@cR=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:367.4(13102)\00"}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool34not3E_1812 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5Bool34not3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cS,i64 0,i32 2)to i8*)
@cT=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:377.26(13273)\00"}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL260,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@cT,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27onlyOneE_1813 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List27onlyOneE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cV,i64 0,i32 2)to i8*)
@cW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_849 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1814 to void(...)*),i32 -2147483647}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List210isNotEmptyE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1815 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List210isNotEmptyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cX,i64 0,i32 2)to i8*)
@cY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List24prodE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_1816 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List24prodE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cY,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List24joinE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aV,i64 0,i32 2)to i8*)
@cZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List23nubE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_1817 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List23nubE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cZ,i64 0,i32 2)to i8*)
@c0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_1818 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List26sortByE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c0,i64 0,i32 2)to i8*)
@c1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_1819 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5List27groupByE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c1,i64 0,i32 2)to i8*)
@c2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_866 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_1820 to void(...)*),i32 -2147483647}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_1821 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13add__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c3,i64 0,i32 2)to i8*)
@c4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_870 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1822 to void(...)*),i32 -2147483647}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1823 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16add__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c5,i64 0,i32 2)to i8*)
@c6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_874 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_1824 to void(...)*),i32 -2147483647}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_1825 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14add__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c7,i64 0,i32 2)to i8*)
@c8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_878 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_1826 to void(...)*),i32 -2147483647}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_1827 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14add__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c9,i64 0,i32 2)to i8*)
@da=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_882 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_1828 to void(...)*),i32 -2147483647}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_1829 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16add__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@db,i64 0,i32 2)to i8*)
@dc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17add__numericOptionE_1830 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17add__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dc,i64 0,i32 2)to i8*)
@dd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_888 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_1831 to void(...)*),i32 -2147483647}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_1832 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13sub__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@de,i64 0,i32 2)to i8*)
@df=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_892 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1833 to void(...)*),i32 -2147483647}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1834 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16sub__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dg,i64 0,i32 2)to i8*)
@dh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_896 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1835 to void(...)*),i32 -2147483647}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1836 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14sub__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@di,i64 0,i32 2)to i8*)
@dj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_900 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_1837 to void(...)*),i32 -2147483647}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_1838 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14sub__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dk,i64 0,i32 2)to i8*)
@dl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_904 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1839 to void(...)*),i32 -2147483647}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1840 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16sub__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dm,i64 0,i32 2)to i8*)
@dn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17sub__numericOptionE_1841 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17sub__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dn,i64 0,i32 2)to i8*)
@do=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_910 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_1842 to void(...)*),i32 -2147483647}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_1843 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13mul__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dp,i64 0,i32 2)to i8*)
@dq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_914 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1844 to void(...)*),i32 -2147483647}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1845 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16mul__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dr,i64 0,i32 2)to i8*)
@ds=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_918 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1846 to void(...)*),i32 -2147483647}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1847 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14mul__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dt,i64 0,i32 2)to i8*)
@du=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_922 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_1848 to void(...)*),i32 -2147483647}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_1849 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14mul__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dv,i64 0,i32 2)to i8*)
@dw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_926 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1850 to void(...)*),i32 -2147483647}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1851 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16mul__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dx,i64 0,i32 2)to i8*)
@dy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17mul__numericOptionE_1852 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17mul__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dy,i64 0,i32 2)to i8*)
@dz=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:484.31(16944)\00"}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_934 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_1853 to void(...)*),i32 -2147483647}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_1854 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13div__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dB,i64 0,i32 2)to i8*)
@dC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16div__intInfOptionE_1855 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16div__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dC,i64 0,i32 2)to i8*)
@dD=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:486.32(17035)\00"}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_941 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_1856 to void(...)*),i32 -2147483647}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_1857 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14div__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dF,i64 0,i32 2)to i8*)
@dG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_945 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_1858 to void(...)*),i32 -2147483647}>,align 8
@dH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_1859 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14div__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dH,i64 0,i32 2)to i8*)
@dI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_949 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_1860 to void(...)*),i32 -2147483647}>,align 8
@dJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_1861 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16div__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dJ,i64 0,i32 2)to i8*)
@dK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17div__numericOptionE_1862 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17div__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8mod__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10mod__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aG,i64 0,i32 2)to i8*)
@dL=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:493.31(17316)\00"}>,align 8
@dM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_956 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_1863 to void(...)*),i32 -2147483647}>,align 8
@dN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_1864 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13mod__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dN,i64 0,i32 2)to i8*)
@dO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mod__intInfOptionE_1865 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16mod__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dO,i64 0,i32 2)to i8*)
@dP=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:495.32(17405)\00"}>,align 8
@dQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_963 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1866 to void(...)*),i32 -2147483647}>,align 8
@dR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1867 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14mod__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dR,i64 0,i32 2)to i8*)
@dS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14mod__realOptionE_1868 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14mod__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dS,i64 0,i32 2)to i8*)
@dT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16mod__real32OptionE_1869 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16mod__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dT,i64 0,i32 2)to i8*)
@dU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17mod__numericOptionE_1870 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17mod__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dU,i64 0,i32 2)to i8*)
@dV=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:500.31(17587)\00"}>,align 8
@dW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13neg__intOptionE_1871 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13neg__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dW,i64 0,i32 2)to i8*)
@dX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neg__intInfOptionE_1872 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16neg__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dX,i64 0,i32 2)to i8*)
@dY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neg__wordOptionE_1873 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neg__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dY,i64 0,i32 2)to i8*)
@dZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neg__realOptionE_1874 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neg__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dZ,i64 0,i32 2)to i8*)
@d0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neg__real32OptionE_1875 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16neg__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d0,i64 0,i32 2)to i8*)
@d1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17neg__numericOptionE_1876 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17neg__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d1,i64 0,i32 2)to i8*)
@d2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim8abs__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8abs__wordE_1877 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8abs__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d2,i64 0,i32 2)to i8*)
@d3=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:508.31(17874)\00"}>,align 8
@d4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13abs__intOptionE_1878 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13abs__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d4,i64 0,i32 2)to i8*)
@d5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16abs__intInfOptionE_1879 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16abs__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d5,i64 0,i32 2)to i8*)
@d6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14abs__wordOptionE_1880 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14abs__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d6,i64 0,i32 2)to i8*)
@d7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14abs__realOptionE_1881 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14abs__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d7,i64 0,i32 2)to i8*)
@d8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16abs__real32OptionE_1882 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16abs__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d8,i64 0,i32 2)to i8*)
@d9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17abs__numericOptionE_1883 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17abs__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d9,i64 0,i32 2)to i8*)
@ea=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6lt__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6lt__intE_1884 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6lt__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ea,i64 0,i32 2)to i8*)
@eb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9lt__intInfE_1885 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9lt__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eb,i64 0,i32 2)to i8*)
@ec=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7lt__wordE_1886 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7lt__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ec,i64 0,i32 2)to i8*)
@ed=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7lt__charE_1887 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7lt__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ed,i64 0,i32 2)to i8*)
@ee=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7lt__boolE_1888 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7lt__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ee,i64 0,i32 2)to i8*)
@ef=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9lt__stringE_1889 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9lt__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ef,i64 0,i32 2)to i8*)
@eg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7lt__realE_1890 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7lt__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eg,i64 0,i32 2)to i8*)
@eh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9lt__real32E_1891 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9lt__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eh,i64 0,i32 2)to i8*)
@ei=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12lt__timestampE_1892 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12lt__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ei,i64 0,i32 2)to i8*)
@ej=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10lt__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10lt__numericE_1893 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10lt__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ej,i64 0,i32 2)to i8*)
@ek=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1021 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1894 to void(...)*),i32 -2147483647}>,align 8
@el=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1895 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12lt__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@el,i64 0,i32 2)to i8*)
@em=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1025 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1896 to void(...)*),i32 -2147483647}>,align 8
@en=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1897 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15lt__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@en,i64 0,i32 2)to i8*)
@eo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1029 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1898 to void(...)*),i32 -2147483647}>,align 8
@ep=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1899 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13lt__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ep,i64 0,i32 2)to i8*)
@eq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1033 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1900 to void(...)*),i32 -2147483647}>,align 8
@er=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1901 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13lt__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@er,i64 0,i32 2)to i8*)
@es=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1037 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1902 to void(...)*),i32 -2147483647}>,align 8
@et=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1903 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13lt__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@et,i64 0,i32 2)to i8*)
@eu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1041 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1904 to void(...)*),i32 -2147483647}>,align 8
@ev=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1905 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15lt__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ev,i64 0,i32 2)to i8*)
@ew=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1045 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1906 to void(...)*),i32 -2147483647}>,align 8
@ex=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1907 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13lt__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ex,i64 0,i32 2)to i8*)
@ey=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1049 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1908 to void(...)*),i32 -2147483647}>,align 8
@ez=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1909 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15lt__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ez,i64 0,i32 2)to i8*)
@eA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1053 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1910 to void(...)*),i32 -2147483647}>,align 8
@eB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1911 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18lt__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eB,i64 0,i32 2)to i8*)
@eC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1057 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1912 to void(...)*),i32 -2147483647}>,align 8
@eD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1913 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16lt__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eD,i64 0,i32 2)to i8*)
@eE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6gt__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6gt__intE_1914 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6gt__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eE,i64 0,i32 2)to i8*)
@eF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9gt__intInfE_1915 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9gt__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eF,i64 0,i32 2)to i8*)
@eG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7gt__wordE_1916 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7gt__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eG,i64 0,i32 2)to i8*)
@eH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7gt__charE_1917 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7gt__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eH,i64 0,i32 2)to i8*)
@eI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7gt__boolE_1918 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7gt__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eI,i64 0,i32 2)to i8*)
@eJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9gt__stringE_1919 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9gt__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eJ,i64 0,i32 2)to i8*)
@eK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7gt__realE_1920 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7gt__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eK,i64 0,i32 2)to i8*)
@eL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9gt__real32E_1921 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9gt__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eL,i64 0,i32 2)to i8*)
@eM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12gt__timestampE_1922 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12gt__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eM,i64 0,i32 2)to i8*)
@eN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10gt__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10gt__numericE_1923 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10gt__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eN,i64 0,i32 2)to i8*)
@eO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1081 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1924 to void(...)*),i32 -2147483647}>,align 8
@eP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1925 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12gt__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eP,i64 0,i32 2)to i8*)
@eQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1085 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1926 to void(...)*),i32 -2147483647}>,align 8
@eR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1927 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15gt__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eR,i64 0,i32 2)to i8*)
@eS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1089 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1928 to void(...)*),i32 -2147483647}>,align 8
@eT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1929 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13gt__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eT,i64 0,i32 2)to i8*)
@eU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1093 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1930 to void(...)*),i32 -2147483647}>,align 8
@eV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1931 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13gt__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eV,i64 0,i32 2)to i8*)
@eW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1097 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1932 to void(...)*),i32 -2147483647}>,align 8
@eX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1933 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13gt__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eX,i64 0,i32 2)to i8*)
@eY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1101 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1934 to void(...)*),i32 -2147483647}>,align 8
@eZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1935 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15gt__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eZ,i64 0,i32 2)to i8*)
@e0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1105 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1936 to void(...)*),i32 -2147483647}>,align 8
@e1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1937 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13gt__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e1,i64 0,i32 2)to i8*)
@e2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1109 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1938 to void(...)*),i32 -2147483647}>,align 8
@e3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1939 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15gt__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e3,i64 0,i32 2)to i8*)
@e4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1113 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1940 to void(...)*),i32 -2147483647}>,align 8
@e5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1941 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18gt__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e5,i64 0,i32 2)to i8*)
@e6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1117 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1942 to void(...)*),i32 -2147483647}>,align 8
@e7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1943 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16gt__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e7,i64 0,i32 2)to i8*)
@e8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6le__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6le__intE_1944 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6le__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e8,i64 0,i32 2)to i8*)
@e9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9le__intInfE_1945 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9le__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e9,i64 0,i32 2)to i8*)
@fa=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7le__wordE_1946 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7le__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fa,i64 0,i32 2)to i8*)
@fb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7le__charE_1947 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7le__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fb,i64 0,i32 2)to i8*)
@fc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7le__boolE_1948 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7le__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fc,i64 0,i32 2)to i8*)
@fd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9le__stringE_1949 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9le__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fd,i64 0,i32 2)to i8*)
@fe=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7le__realE_1950 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7le__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fe,i64 0,i32 2)to i8*)
@ff=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9le__real32E_1951 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9le__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ff,i64 0,i32 2)to i8*)
@fg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12le__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12le__timestampE_1952 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12le__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fg,i64 0,i32 2)to i8*)
@fh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10le__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10le__numericE_1953 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10le__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fh,i64 0,i32 2)to i8*)
@fi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1141 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1954 to void(...)*),i32 -2147483647}>,align 8
@fj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1955 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12le__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fj,i64 0,i32 2)to i8*)
@fk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1145 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1956 to void(...)*),i32 -2147483647}>,align 8
@fl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1957 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15le__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fl,i64 0,i32 2)to i8*)
@fm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1149 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1958 to void(...)*),i32 -2147483647}>,align 8
@fn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1959 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13le__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fn,i64 0,i32 2)to i8*)
@fo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1153 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1960 to void(...)*),i32 -2147483647}>,align 8
@fp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1961 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13le__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fp,i64 0,i32 2)to i8*)
@fq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1157 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1962 to void(...)*),i32 -2147483647}>,align 8
@fr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1963 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13le__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fr,i64 0,i32 2)to i8*)
@fs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1161 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1964 to void(...)*),i32 -2147483647}>,align 8
@ft=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1965 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15le__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ft,i64 0,i32 2)to i8*)
@fu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1165 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1966 to void(...)*),i32 -2147483647}>,align 8
@fv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1967 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13le__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fv,i64 0,i32 2)to i8*)
@fw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1169 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1968 to void(...)*),i32 -2147483647}>,align 8
@fx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1969 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15le__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fx,i64 0,i32 2)to i8*)
@fy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1173 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1970 to void(...)*),i32 -2147483647}>,align 8
@fz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1971 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18le__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fz,i64 0,i32 2)to i8*)
@fA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1177 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1972 to void(...)*),i32 -2147483647}>,align 8
@fB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1973 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16le__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fB,i64 0,i32 2)to i8*)
@fC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6ge__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6ge__intE_1974 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6ge__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fC,i64 0,i32 2)to i8*)
@fD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ge__intInfE_1975 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ge__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fD,i64 0,i32 2)to i8*)
@fE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ge__wordE_1976 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ge__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fE,i64 0,i32 2)to i8*)
@fF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ge__charE_1977 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ge__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fF,i64 0,i32 2)to i8*)
@fG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ge__boolE_1978 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ge__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fG,i64 0,i32 2)to i8*)
@fH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ge__stringE_1979 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ge__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fH,i64 0,i32 2)to i8*)
@fI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7ge__realE_1980 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7ge__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fI,i64 0,i32 2)to i8*)
@fJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9ge__real32E_1981 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9ge__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fJ,i64 0,i32 2)to i8*)
@fK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12ge__timestampE_1982 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12ge__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fK,i64 0,i32 2)to i8*)
@fL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10ge__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10ge__numericE_1983 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10ge__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fL,i64 0,i32 2)to i8*)
@fM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1201 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1984 to void(...)*),i32 -2147483647}>,align 8
@fN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1985 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12ge__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fN,i64 0,i32 2)to i8*)
@fO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1205 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1986 to void(...)*),i32 -2147483647}>,align 8
@fP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1987 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ge__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fP,i64 0,i32 2)to i8*)
@fQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1209 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1988 to void(...)*),i32 -2147483647}>,align 8
@fR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1989 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ge__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*)
@fS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1213 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1990 to void(...)*),i32 -2147483647}>,align 8
@fT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1991 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ge__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*)
@fU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1217 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1992 to void(...)*),i32 -2147483647}>,align 8
@fV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1993 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ge__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*)
@fW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1221 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1994 to void(...)*),i32 -2147483647}>,align 8
@fX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1995 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ge__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*)
@fY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1225 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1996 to void(...)*),i32 -2147483647}>,align 8
@fZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1997 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13ge__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*)
@f0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1229 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1998 to void(...)*),i32 -2147483647}>,align 8
@f1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1999 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15ge__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f1,i64 0,i32 2)to i8*)
@f2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_1233 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_2000 to void(...)*),i32 -2147483647}>,align 8
@f3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_2001 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18ge__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*)
@f4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_1237 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_2002 to void(...)*),i32 -2147483647}>,align 8
@f5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_2003 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16ge__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f5,i64 0,i32 2)to i8*)
@f6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6eq__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6eq__intE_2004 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim6eq__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f6,i64 0,i32 2)to i8*)
@f7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9eq__intInfE_2005 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9eq__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f7,i64 0,i32 2)to i8*)
@f8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7eq__wordE_2006 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7eq__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f8,i64 0,i32 2)to i8*)
@f9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7eq__charE_2007 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7eq__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f9,i64 0,i32 2)to i8*)
@ga=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7eq__boolE_2008 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7eq__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ga,i64 0,i32 2)to i8*)
@gb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9eq__stringE_2009 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9eq__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gb,i64 0,i32 2)to i8*)
@gc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7eq__realE_2010 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7eq__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gc,i64 0,i32 2)to i8*)
@gd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9eq__real32E_2011 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim9eq__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gd,i64 0,i32 2)to i8*)
@ge=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12eq__timestampE_2012 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12eq__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ge,i64 0,i32 2)to i8*)
@gf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10eq__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10eq__numericE_2013 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10eq__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gf,i64 0,i32 2)to i8*)
@gg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_1261 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_2014 to void(...)*),i32 -2147483647}>,align 8
@gh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_2015 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12eq__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gh,i64 0,i32 2)to i8*)
@gi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_1265 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_2016 to void(...)*),i32 -2147483647}>,align 8
@gj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_2017 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15eq__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gj,i64 0,i32 2)to i8*)
@gk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_1269 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_2018 to void(...)*),i32 -2147483647}>,align 8
@gl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_2019 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13eq__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gl,i64 0,i32 2)to i8*)
@gm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_1273 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_2020 to void(...)*),i32 -2147483647}>,align 8
@gn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_2021 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13eq__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gn,i64 0,i32 2)to i8*)
@go=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_1277 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_2022 to void(...)*),i32 -2147483647}>,align 8
@gp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_2023 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13eq__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gp,i64 0,i32 2)to i8*)
@gq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_1281 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_2024 to void(...)*),i32 -2147483647}>,align 8
@gr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_2025 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15eq__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gr,i64 0,i32 2)to i8*)
@gs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_1285 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_2026 to void(...)*),i32 -2147483647}>,align 8
@gt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_2027 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13eq__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gt,i64 0,i32 2)to i8*)
@gu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_1289 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_2028 to void(...)*),i32 -2147483647}>,align 8
@gv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_2029 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim15eq__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gv,i64 0,i32 2)to i8*)
@gw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_1293 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_2030 to void(...)*),i32 -2147483647}>,align 8
@gx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_2031 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim18eq__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gx,i64 0,i32 2)to i8*)
@gy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_1297 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_2032 to void(...)*),i32 -2147483647}>,align 8
@gz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_2033 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16eq__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gz,i64 0,i32 2)to i8*)
@gA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7neq__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7neq__intE_2034 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7neq__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gA,i64 0,i32 2)to i8*)
@gB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10neq__intInfE_2035 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10neq__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gB,i64 0,i32 2)to i8*)
@gC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8neq__wordE_2036 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8neq__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gC,i64 0,i32 2)to i8*)
@gD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8neq__charE_2037 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8neq__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gD,i64 0,i32 2)to i8*)
@gE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8neq__boolE_2038 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8neq__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gE,i64 0,i32 2)to i8*)
@gF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10neq__stringE_2039 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10neq__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gF,i64 0,i32 2)to i8*)
@gG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8neq__realE_2040 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8neq__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gG,i64 0,i32 2)to i8*)
@gH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10neq__real32E_2041 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10neq__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gH,i64 0,i32 2)to i8*)
@gI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13neq__timestampE_2042 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13neq__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gI,i64 0,i32 2)to i8*)
@gJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11neq__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11neq__numericE_2043 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11neq__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gJ,i64 0,i32 2)to i8*)
@gK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_1321 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_2044 to void(...)*),i32 -2147483647}>,align 8
@gL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_2045 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13neq__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gL,i64 0,i32 2)to i8*)
@gM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_1325 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_2046 to void(...)*),i32 -2147483647}>,align 8
@gN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_2047 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16neq__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gN,i64 0,i32 2)to i8*)
@gO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_1329 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_2048 to void(...)*),i32 -2147483647}>,align 8
@gP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_2049 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neq__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gP,i64 0,i32 2)to i8*)
@gQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_1333 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_2050 to void(...)*),i32 -2147483647}>,align 8
@gR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_2051 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neq__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gR,i64 0,i32 2)to i8*)
@gS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_1337 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_2052 to void(...)*),i32 -2147483647}>,align 8
@gT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_2053 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neq__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gT,i64 0,i32 2)to i8*)
@gU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_1341 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_2054 to void(...)*),i32 -2147483647}>,align 8
@gV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_2055 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16neq__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gV,i64 0,i32 2)to i8*)
@gW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_1345 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_2056 to void(...)*),i32 -2147483647}>,align 8
@gX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_2057 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14neq__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gX,i64 0,i32 2)to i8*)
@gY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_1349 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_2058 to void(...)*),i32 -2147483647}>,align 8
@gZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_2059 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16neq__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gZ,i64 0,i32 2)to i8*)
@g0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_1353 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_2060 to void(...)*),i32 -2147483647}>,align 8
@g1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_2061 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19neq__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g1,i64 0,i32 2)to i8*)
@g2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_1357 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_2062 to void(...)*),i32 -2147483647}>,align 8
@g3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_2063 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17neq__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g3,i64 0,i32 2)to i8*)
@g4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19concat__stringOptionE_2064 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19concat__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g4,i64 0,i32 2)to i8*)
@g5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11like__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11like__stringE_2065 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11like__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17like__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aI,i64 0,i32 2)to i8*)
@g6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16nullif__intOptionE_2066 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16nullif__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g6,i64 0,i32 2)to i8*)
@g7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19nullif__intInfOptionE_2067 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19nullif__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g7,i64 0,i32 2)to i8*)
@g8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17nullif__wordOptionE_2068 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17nullif__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g8,i64 0,i32 2)to i8*)
@g9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17nullif__charOptionE_2069 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17nullif__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g9,i64 0,i32 2)to i8*)
@ha=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17nullif__boolOptionE_2070 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17nullif__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ha,i64 0,i32 2)to i8*)
@hb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19nullif__stringOptionE_2071 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19nullif__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hb,i64 0,i32 2)to i8*)
@hc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17nullif__realOptionE_2072 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17nullif__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hc,i64 0,i32 2)to i8*)
@hd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19nullif__real32OptionE_2073 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19nullif__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hd,i64 0,i32 2)to i8*)
@he=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim22nullif__timestampOptionE_2074 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim22nullif__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@he,i64 0,i32 2)to i8*)
@hf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim20nullif__numericOptionE_2075 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim20nullif__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hf,i64 0,i32 2)to i8*)
@hg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7avg__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7avg__intE_2076 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7avg__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hg,i64 0,i32 2)to i8*)
@hh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10avg__intInfE_2077 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10avg__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hh,i64 0,i32 2)to i8*)
@hi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_1389 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_2078 to void(...)*),i32 -2147483647}>,align 8
@hj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_2079 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8avg__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hj,i64 0,i32 2)to i8*)
@hk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8avg__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8avg__realE_2080 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8avg__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hk,i64 0,i32 2)to i8*)
@hl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_1397 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_2082 to void(...)*),i32 -2147483647}>,align 8
@hm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_2083 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10avg__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hm,i64 0,i32 2)to i8*)
@hn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_1401 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_2084 to void(...)*),i32 -2147483647}>,align 8
@ho=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_2085 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11avg__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ho,i64 0,i32 2)to i8*)
@hp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_1405 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_2086 to void(...)*),i32 -2147483647}>,align 8
@hq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_2087 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13avg__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hq,i64 0,i32 2)to i8*)
@hr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_1409 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_2088 to void(...)*),i32 -2147483647}>,align 8
@hs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_2089 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16avg__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hs,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14avg__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aL,i64 0,i32 2)to i8*)
@ht=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_1413 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_2090 to void(...)*),i32 -2147483647}>,align 8
@hu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_2091 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14avg__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16avg__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aO,i64 0,i32 2)to i8*)
@hv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1417 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2092 to void(...)*),i32 -2147483647}>,align 8
@hw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1419 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2093 to void(...)*),i32 -2147483647}>,align 8
@hx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2094 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17avg__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hx,i64 0,i32 2)to i8*)
@hy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim7sum__intE_1423 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sum__intE_2095 to void(...)*),i32 -2147483647}>,align 8
@hz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7sum__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sum__intE_2096 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7sum__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hz,i64 0,i32 2)to i8*)
@hA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10sum__intInfE_2097 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10sum__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hA,i64 0,i32 2)to i8*)
@hB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_1430 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_2098 to void(...)*),i32 -2147483647}>,align 8
@hC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_2099 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8sum__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hC,i64 0,i32 2)to i8*)
@hD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__realE_1434 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__realE_2100 to void(...)*),i32 -2147483647}>,align 8
@hE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8sum__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8sum__realE_2101 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8sum__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hE,i64 0,i32 2)to i8*)
@hF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_1438 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_2102 to void(...)*),i32 -2147483647}>,align 8
@hG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_2103 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10sum__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hG,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11sum__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aQ,i64 0,i32 2)to i8*)
@hH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_1442 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_2104 to void(...)*),i32 -2147483647}>,align 8
@hI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_2105 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13sum__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hI,i64 0,i32 2)to i8*)
@hJ=private unnamed_addr constant[2x i8]c"0\00"
@hK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_2106 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16sum__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hK,i64 0,i32 2)to i8*)
@hL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1449 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_2107 to void(...)*),i32 -2147483647}>,align 8
@hM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_2108 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14sum__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hM,i64 0,i32 2)to i8*)
@hN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_1453 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_2109 to void(...)*),i32 -2147483647}>,align 8
@hO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_2110 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14sum__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hO,i64 0,i32 2)to i8*)
@hP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1457 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_2111 to void(...)*),i32 -2147483647}>,align 8
@hQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_2112 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16sum__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hQ,i64 0,i32 2)to i8*)
@hR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17sum__numericOptionE_2113 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17sum__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hR,i64 0,i32 2)to i8*)
@hS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7max__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7max__intE_2114 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7max__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hS,i64 0,i32 2)to i8*)
@hT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10max__intInfE_2115 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10max__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hT,i64 0,i32 2)to i8*)
@hU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8max__wordE_2116 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8max__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hU,i64 0,i32 2)to i8*)
@hV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8max__charE_2117 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8max__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hV,i64 0,i32 2)to i8*)
@hW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8max__boolE_2118 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8max__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hW,i64 0,i32 2)to i8*)
@hX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10max__stringE_2119 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10max__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hX,i64 0,i32 2)to i8*)
@hY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8max__realE_2120 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8max__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hY,i64 0,i32 2)to i8*)
@hZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10max__real32E_2121 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10max__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hZ,i64 0,i32 2)to i8*)
@h0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13max__timestampE_2122 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13max__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h0,i64 0,i32 2)to i8*)
@h1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11max__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11max__numericE_2123 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11max__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h1,i64 0,i32 2)to i8*)
@h2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_1483 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_2124 to void(...)*),i32 -2147483647}>,align 8
@h3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_2125 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13max__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h3,i64 0,i32 2)to i8*)
@h4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1487 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_2126 to void(...)*),i32 -2147483647}>,align 8
@h5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_2127 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16max__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h5,i64 0,i32 2)to i8*)
@h6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_1491 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_2128 to void(...)*),i32 -2147483647}>,align 8
@h7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_2129 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14max__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h7,i64 0,i32 2)to i8*)
@h8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_1495 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_2130 to void(...)*),i32 -2147483647}>,align 8
@h9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_2131 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14max__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h9,i64 0,i32 2)to i8*)
@ia=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_1499 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_2132 to void(...)*),i32 -2147483647}>,align 8
@ib=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_2133 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14max__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ib,i64 0,i32 2)to i8*)
@ic=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_1503 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_2134 to void(...)*),i32 -2147483647}>,align 8
@id=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_2135 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16max__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@id,i64 0,i32 2)to i8*)
@ie=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_1507 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_2136 to void(...)*),i32 -2147483647}>,align 8
@if=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_2137 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14max__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@if,i64 0,i32 2)to i8*)
@ig=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_1511 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_2138 to void(...)*),i32 -2147483647}>,align 8
@ih=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_2139 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16max__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ih,i64 0,i32 2)to i8*)
@ii=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1515 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_2140 to void(...)*),i32 -2147483647}>,align 8
@ij=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_2141 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19max__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ij,i64 0,i32 2)to i8*)
@ik=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_1519 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_2142 to void(...)*),i32 -2147483647}>,align 8
@il=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_2143 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17max__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@il,i64 0,i32 2)to i8*)
@im=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7min__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7min__intE_2144 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7min__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@im,i64 0,i32 2)to i8*)
@in=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10min__intInfE_2145 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10min__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@in,i64 0,i32 2)to i8*)
@io=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8min__wordE_2146 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8min__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@io,i64 0,i32 2)to i8*)
@ip=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8min__charE_2147 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8min__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ip,i64 0,i32 2)to i8*)
@iq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8min__boolE_2148 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8min__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iq,i64 0,i32 2)to i8*)
@ir=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10min__stringE_2149 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10min__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ir,i64 0,i32 2)to i8*)
@is=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8min__realE_2150 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8min__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@is,i64 0,i32 2)to i8*)
@it=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10min__real32E_2151 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10min__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@it,i64 0,i32 2)to i8*)
@iu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13min__timestampE_2152 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13min__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iu,i64 0,i32 2)to i8*)
@iv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11min__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11min__numericE_2153 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11min__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iv,i64 0,i32 2)to i8*)
@iw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_1543 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_2154 to void(...)*),i32 -2147483647}>,align 8
@ix=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_2155 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13min__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ix,i64 0,i32 2)to i8*)
@iy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1547 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_2156 to void(...)*),i32 -2147483647}>,align 8
@iz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_2157 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16min__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iz,i64 0,i32 2)to i8*)
@iA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_1551 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_2158 to void(...)*),i32 -2147483647}>,align 8
@iB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_2159 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14min__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iB,i64 0,i32 2)to i8*)
@iC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_1555 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_2160 to void(...)*),i32 -2147483647}>,align 8
@iD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_2161 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14min__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iD,i64 0,i32 2)to i8*)
@iE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_1559 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_2162 to void(...)*),i32 -2147483647}>,align 8
@iF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_2163 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14min__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iF,i64 0,i32 2)to i8*)
@iG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_1563 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_2164 to void(...)*),i32 -2147483647}>,align 8
@iH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_2165 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16min__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iH,i64 0,i32 2)to i8*)
@iI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_1567 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_2166 to void(...)*),i32 -2147483647}>,align 8
@iJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_2167 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14min__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iJ,i64 0,i32 2)to i8*)
@iK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_1571 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_2168 to void(...)*),i32 -2147483647}>,align 8
@iL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_2169 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16min__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iL,i64 0,i32 2)to i8*)
@iM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1575 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_2170 to void(...)*),i32 -2147483647}>,align 8
@iN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_2171 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim19min__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iN,i64 0,i32 2)to i8*)
@iO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_1579 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_2172 to void(...)*),i32 -2147483647}>,align 8
@iP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_2173 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17min__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iP,i64 0,i32 2)to i8*)
@iQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5countE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5countE_2175 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim5countE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iQ,i64 0,i32 2)to i8*)
@iR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_1586 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2176 to void(...)*),i32 -2147483647}>,align 8
@iS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim12count__optionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2178 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim12count__optionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iS,i64 0,i32 2)to i8*)
@iT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim7Num__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7Num__intE_2179 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim7Num__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iT,i64 0,i32 2)to i8*)
@iU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10Num__intInfE_2180 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10Num__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iU,i64 0,i32 2)to i8*)
@iV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8Num__wordE_2181 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8Num__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iV,i64 0,i32 2)to i8*)
@iW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i64)*@_SMLFN17SMLSharp__SQL__Prim8Num__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8Num__realE_2182 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim8Num__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iW,i64 0,i32 2)to i8*)
@iX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim10Num__real32E_2183 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim10Num__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iX,i64 0,i32 2)to i8*)
@iY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11Num__numericE_2184 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim11Num__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iY,i64 0,i32 2)to i8*)
@iZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13Num__intOptionE_2185 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim13Num__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iZ,i64 0,i32 2)to i8*)
@i0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16Num__intInfOptionE_2186 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim16Num__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i0,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14Num__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aS,i64 0,i32 2)to i8*)
@i1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14Num__realOptionE_2187 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim14Num__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16Num__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aU,i64 0,i32 2)to i8*)
@i2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17Num__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17Num__numericOptionE_2188 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim17Num__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i2,i64 0,i32 2)to i8*)
@i3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op8coalesceE_2189 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim2Op8coalesceE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i3,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim2Op9coalesce_GE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aW,i64 0,i32 2)to i8*)
@i4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4SomeE_2190 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim2Op4SomeE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i4,i64 0,i32 2)to i8*)
@i5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_1617 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_2191 to void(...)*),i32 -2147483647}>,align 8
@i6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_2192 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim2Op4PartE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i6,i64 0,i32 2)to i8*)
@_SML_ftab19fa241627f4e962_SQLPrim=external global i8
@i7=private unnamed_addr global i8 0
@i8=private unnamed_addr constant[3x i32][i32 0,i32 2,i32 1]
@i9=private unnamed_addr constant[3x i32][i32 1,i32 0,i32 2]
declare float@llvm.fabs.f32(float)#0
declare double@llvm.fabs.f64(double)#0
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare i8*@sml_load_intinf(i8*inreg)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_obj_equal(i8*inreg,i8*inreg)local_unnamed_addr#0
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare i8*@sml_save()local_unnamed_addr#0
declare void@sml_unsave()local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN10CharVector3mapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query14format__exp__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query16format__query__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Backend7defaultE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_eE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric3absE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Char7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List2hdE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3revE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6concatE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6filterE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6lengthE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List9partitionE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5Int327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf1_eE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf3absE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6IntInf7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Real327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare float@_SMLFN6Real327realModE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Real647compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare double@_SMLFN6Real647realModE(i64 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String10concatWithE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String1_ZE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6String7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Word3210toLargeIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Word327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9Substring4fullE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9Substring4getcE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main9d24bdf03f9e5ec9_Real64()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5d4c3ea7bd6f9540_IntInf()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5148a836b3728be9_Int32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main145db56e6796da5b_Substring()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maince7036f3433e1102_Char()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainadbb5309e852b68c_CharVector()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main629da514a4193178_Real32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf19563e8df97169c_Word32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main117fff510d821df0_TimeStamp()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf0940cae3cd2cc58_Numeric()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainb7b2ff6092aebc11_Backend()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindcdf3bbf6cbeefdd_SMLFormat()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5008f062fc7efcc4_SQLErrors()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main99165f19d9fdf0e8_SQLQuery_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load9d24bdf03f9e5ec9_Real64(i8*)local_unnamed_addr
declare void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*)local_unnamed_addr
declare void@_SML_load5148a836b3728be9_Int32(i8*)local_unnamed_addr
declare void@_SML_load145db56e6796da5b_Substring(i8*)local_unnamed_addr
declare void@_SML_loadce7036f3433e1102_Char(i8*)local_unnamed_addr
declare void@_SML_loadadbb5309e852b68c_CharVector(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load629da514a4193178_Real32(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_loadf19563e8df97169c_Word32(i8*)local_unnamed_addr
declare void@_SML_load117fff510d821df0_TimeStamp(i8*)local_unnamed_addr
declare void@_SML_loadf0940cae3cd2cc58_Numeric(i8*)local_unnamed_addr
declare void@_SML_loadb7b2ff6092aebc11_Backend(i8*)local_unnamed_addr
declare void@_SML_loaddcdf3bbf6cbeefdd_SMLFormat(i8*)local_unnamed_addr
declare void@_SML_load5008f062fc7efcc4_SQLErrors(i8*)local_unnamed_addr
declare void@_SML_load99165f19d9fdf0e8_SQLQuery_ppg(i8*)local_unnamed_addr
define private void@_SML_tabb19fa241627f4e962_SQLPrim()#3{
unreachable
}
define void@_SML_load19fa241627f4e962_SQLPrim(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@i7,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@i7,align 1
tail call void@_SML_load9d24bdf03f9e5ec9_Real64(i8*%a)#0
tail call void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*%a)#0
tail call void@_SML_load5148a836b3728be9_Int32(i8*%a)#0
tail call void@_SML_load145db56e6796da5b_Substring(i8*%a)#0
tail call void@_SML_loadce7036f3433e1102_Char(i8*%a)#0
tail call void@_SML_loadadbb5309e852b68c_CharVector(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load629da514a4193178_Real32(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_loadf19563e8df97169c_Word32(i8*%a)#0
tail call void@_SML_load117fff510d821df0_TimeStamp(i8*%a)#0
tail call void@_SML_loadf0940cae3cd2cc58_Numeric(i8*%a)#0
tail call void@_SML_loadb7b2ff6092aebc11_Backend(i8*%a)#0
tail call void@_SML_loaddcdf3bbf6cbeefdd_SMLFormat(i8*%a)#0
tail call void@_SML_load5008f062fc7efcc4_SQLErrors(i8*%a)#0
tail call void@_SML_load99165f19d9fdf0e8_SQLQuery_ppg(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb19fa241627f4e962_SQLPrim,i8*@_SML_ftab19fa241627f4e962_SQLPrim,i8*null)#0
ret void
}
define void@_SML_main19fa241627f4e962_SQLPrim()local_unnamed_addr#2 gc"smlsharp"{
%a=load i8,i8*@i7,align 1
%b=and i8%a,2
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 3,i8*@i7,align 1
tail call void@_SML_main9d24bdf03f9e5ec9_Real64()#2
tail call void@_SML_main5d4c3ea7bd6f9540_IntInf()#2
tail call void@_SML_main5148a836b3728be9_Int32()#2
tail call void@_SML_main145db56e6796da5b_Substring()#2
tail call void@_SML_maince7036f3433e1102_Char()#2
tail call void@_SML_mainadbb5309e852b68c_CharVector()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main629da514a4193178_Real32()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_mainf19563e8df97169c_Word32()#2
tail call void@_SML_main117fff510d821df0_TimeStamp()#2
tail call void@_SML_mainf0940cae3cd2cc58_Numeric()#2
tail call void@_SML_mainb7b2ff6092aebc11_Backend()#2
tail call void@_SML_maindcdf3bbf6cbeefdd_SMLFormat()#2
tail call void@_SML_main5008f062fc7efcc4_SQLErrors()#2
tail call void@_SML_main99165f19d9fdf0e8_SQLQuery_ppg()#2
br label%d
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim12closeCommandE_261(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
f:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
br label%d
d:
%e=phi i8*[%a,%f],[%D,%k]
store i8*%e,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%e,%d]
%m=getelementptr inbounds i8,i8*%l,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 4)#0
%v=bitcast i8*%u to i32*
%w=getelementptr inbounds i8,i8*%u,i64 -4
%x=bitcast i8*%w to i32*
store i32 4,i32*%x,align 4
store i32 0,i32*%v,align 4
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=call fastcc i8*%r(i8*inreg%y,i8*inreg%u)
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=icmp eq i32%B,0
%D=load i8*,i8**%b,align 8
br i1%C,label%E,label%d
E:
%F=bitcast i8*%D to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%b,align 8
%M=call i8*@sml_alloc(i32 inreg 4)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 4,i32*%P,align 4
store i32 0,i32*%N,align 4
%Q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%R=call fastcc i8*%J(i8*inreg%Q,i8*inreg%M)
ret void
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_263(i8*inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 8)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 805306376,i32*%d,align 4
%e=bitcast i8*%b to i64*
store i64 0,i64*%e,align 1
%f=bitcast i8*%b to i8**
tail call void@sml_write(i8*inreg%b,i8**inreg%f,i8*inreg null)#0
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_265(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_267(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%e,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177288,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%O to i8**
call void@sml_write(i8*inreg%O,i8**inreg%P,i8*inreg%H)#0
%Q=load i8*,i8**%e,align 8
ret i8*%Q
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_268(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
store i8*%k,i8**%d,align 8
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_267 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_267 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
%C=bitcast i8**%c to i8***
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%F,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%F,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
%K=bitcast i8*%F to i32*
store i32 5,i32*%K,align 4
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%F,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
store i8*%Q,i8**%c,align 8
%T=load i8*,i8**%d,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d,i64 0,i32 2)to i8*),i8**%W,align 8
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%Q,i64 24
%ab=bitcast i8*%aa to i32*
store i32 7,i32*%ab,align 4
store i8*null,i8**%f,align 8
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
store i8*null,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 4
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
%ai=call i8*@sml_alloc(i32 inreg 4)#0
%aj=bitcast i8*%ai to i32*
%ak=getelementptr inbounds i8,i8*%ai,i64 -4
%al=bitcast i8*%ak to i32*
store i32 4,i32*%al,align 4
store i8*%ai,i8**%e,align 8
store i32%ae,i32*%aj,align 4
%am=call i8*@sml_alloc(i32 inreg 4)#0
%an=bitcast i8*%am to i32*
%ao=getelementptr inbounds i8,i8*%am,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 4,i32*%ap,align 4
store i32%ah,i32*%an,align 4
store i8*null,i8**%f,align 8
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*),i8**%e,align 8
%aq=load i8*,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%c,align 8
%au=call i8*@sml_alloc(i32 inreg 28)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177304,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=load i8*,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%au,i64 16
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%au,i64 24
%aG=bitcast i8*%aF to i32*
store i32 7,i32*%aG,align 4
ret i8*%au
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_271(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
store i8*null,i8**%b,align 8
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8*,i8**%n,i64 1
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=bitcast i8*%j to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLFN20SMLSharp__SQL__Backend7defaultE(i8*inreg%s)
store i8*%t,i8**%b,align 8
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=load i8*,i8**%b,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%u,i64 24
%G=bitcast i8*%F to i32*
store i32 7,i32*%G,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_275(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%b,align 8
%g=getelementptr inbounds i8,i8*%a,i64 8
%h=bitcast i8*%g to i8***
%i=load i8**,i8***%h,align 8
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%c,align 8
%k=getelementptr inbounds i8*,i8**%i,i64 1
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%d,align 8
%m=call i8*@sml_alloc(i32 inreg 28)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177304,i32*%o,align 4
%p=load i8*,i8**%c,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=load i8*,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i8**
store i8*%r,i8**%t,align 8
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%m,i64 24
%y=bitcast i8*%x to i32*
store i32 7,i32*%y,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8typenameE_321(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 2,label%a9
i32 3,label%a3
i32 10,label%aX
i32 1,label%aR
i32 7,label%aL
i32 5,label%aF
i32 6,label%az
i32 0,label%at
i32 8,label%an
i32 4,label%af
i32 9,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@B,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%m,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%b,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
%O=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@z,i64 0,i32 2,i64 0),i8**%O,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%L)
store i8*%U,i8**%b,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%b,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@A,i64 0,i32 2,i64 0),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%V)
ret i8*%ae
af:
%ag=bitcast i8*%i to i32*
%ah=load i32,i32*%ag,align 4
%ai=icmp eq i32%ah,0
br i1%ai,label%al,label%aj
aj:
%ak=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@y,i64 0,i32 2)to i8*))
ret i8*%ak
al:
%am=phi i8*[getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@w,i64 0,i32 2,i64 0),%af],[getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@u,i64 0,i32 2,i64 0),%an],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@s,i64 0,i32 2,i64 0),%at],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@q,i64 0,i32 2,i64 0),%az],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@o,i64 0,i32 2,i64 0),%aF],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@m,i64 0,i32 2,i64 0),%aL],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@k,i64 0,i32 2,i64 0),%aR],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@i,i64 0,i32 2,i64 0),%aX],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@g,i64 0,i32 2,i64 0),%a3],[getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@e,i64 0,i32 2,i64 0),%a9]
ret i8*%am
an:
%ao=bitcast i8*%i to i32*
%ap=load i32,i32*%ao,align 4
%aq=icmp eq i32%ap,0
br i1%aq,label%al,label%ar
ar:
%as=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@v,i64 0,i32 2)to i8*))
ret i8*%as
at:
%au=bitcast i8*%i to i32*
%av=load i32,i32*%au,align 4
%aw=icmp eq i32%av,0
br i1%aw,label%al,label%ax
ax:
%ay=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@t,i64 0,i32 2)to i8*))
ret i8*%ay
az:
%aA=bitcast i8*%i to i32*
%aB=load i32,i32*%aA,align 4
%aC=icmp eq i32%aB,0
br i1%aC,label%al,label%aD
aD:
%aE=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@r,i64 0,i32 2)to i8*))
ret i8*%aE
aF:
%aG=bitcast i8*%i to i32*
%aH=load i32,i32*%aG,align 4
%aI=icmp eq i32%aH,0
br i1%aI,label%al,label%aJ
aJ:
%aK=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
ret i8*%aK
aL:
%aM=bitcast i8*%i to i32*
%aN=load i32,i32*%aM,align 4
%aO=icmp eq i32%aN,0
br i1%aO,label%al,label%aP
aP:
%aQ=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@n,i64 0,i32 2)to i8*))
ret i8*%aQ
aR:
%aS=bitcast i8*%i to i32*
%aT=load i32,i32*%aS,align 4
%aU=icmp eq i32%aT,0
br i1%aU,label%al,label%aV
aV:
%aW=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
ret i8*%aW
aX:
%aY=bitcast i8*%i to i32*
%aZ=load i32,i32*%aY,align 4
%a0=icmp eq i32%aZ,0
br i1%a0,label%al,label%a1
a1:
%a2=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@j,i64 0,i32 2)to i8*))
ret i8*%a2
a3:
%a4=bitcast i8*%i to i32*
%a5=load i32,i32*%a4,align 4
%a6=icmp eq i32%a5,0
br i1%a6,label%al,label%a7
a7:
%a8=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h,i64 0,i32 2)to i8*))
ret i8*%a8
a9:
%ba=bitcast i8*%i to i32*
%bb=load i32,i32*%ba,align 4
%bc=icmp eq i32%bb,0
br i1%bc,label%al,label%bd
bd:
%be=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@f,i64 0,i32 2)to i8*))
ret i8*%be
}
define internal fastcc i8*@_SMLL7columns_327(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8*%b to i8**
br label%q
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%f to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%l],[%j,%i]
%s=phi i8**[%n,%l],[%k,%i]
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 1
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=load i8*,i8**%r,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%v,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*%E(i8*inreg%G,i8*inreg%J)
store i8*%K,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=and i32%N,268435455
%P=icmp eq i32%O,1
br i1%P,label%am,label%Q
Q:
store i8*null,i8**%c,align 8
store i8*null,i8**%f,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%R,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
%W=bitcast i8*%R to i32*
store i32%x,i32*%W,align 4
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
ret i8*%ac
am:
%an=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%an,i8**%e,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=bitcast i8*%as to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@D,i64 0,i32 2,i64 0),i8**%av,align 8
%aw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%as)
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@E,i64 0,i32 2,i64 0),i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aC)
store i8*%aL,i8**%d,align 8
%aM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aN=getelementptr inbounds i8,i8*%aM,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8typenameE_321(i8*inreg%aP)
store i8*%aQ,i8**%c,align 8
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
%aU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aR,i64 16
%a0=bitcast i8*%aZ to i32*
store i32 3,i32*%a0,align 4
%a1=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aR)
store i8*%a1,i8**%c,align 8
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@F,i64 0,i32 2,i64 0),i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%a2)
store i8*%bb,i8**%c,align 8
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
store i8*%bc,i8**%d,align 8
%bf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@C,i64 0,i32 2,i64 0),i8**%bi,align 8
%bj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bk=getelementptr inbounds i8,i8*%bc,i64 16
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bc,i64 24
%bn=bitcast i8*%bm to i32*
store i32 7,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 60)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177336,i32*%bq,align 4
%br=getelementptr inbounds i8,i8*%bo,i64 56
%bs=bitcast i8*%br to i32*
store i32 1,i32*%bs,align 4
%bt=load i8*,i8**%d,align 8
%bu=bitcast i8*%bo to i8**
store i8*%bt,i8**%bu,align 8
call void@sml_raise(i8*inreg%bo)#1
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18createTableCommandE_328(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=bitcast i8**%e to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%g,align 8
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7columns_327 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7columns_327 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
%V=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%W=call fastcc i8*%u(i8*inreg%V,i8*inreg%K)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
%ag=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%af)
store i8*%ag,i8**%c,align 8
%ah=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%g,align 8
%an=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg 0,i32 inreg 4)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%e,align 8
%at=call i8*@sml_alloc(i32 inreg 4)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 4,i32*%aw,align 4
store i32 0,i32*%au,align 4
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=call fastcc i8*%aq(i8*inreg%ax,i8*inreg%at)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%f,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%e,align 8
%aH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aE,i64 16
%aN=bitcast i8*%aM to i32*
store i32 3,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=bitcast i8*%aO to i32*
%aQ=getelementptr inbounds i8,i8*%aO,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
%aS=getelementptr inbounds i8,i8*%aO,i64 4
%aT=bitcast i8*%aS to i32*
store i32 0,i32*%aT,align 1
store i32 2,i32*%aP,align 4
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 16
%aY=bitcast i8*%aX to i32*
store i32 2,i32*%aY,align 4
%aZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a0=call fastcc i8*%aB(i8*inreg%aZ,i8*inreg%aO)
%a1=load i8*,i8**%g,align 8
%a2=tail call fastcc i8*%ak(i8*inreg%a1,i8*inreg%a0)
ret i8*%a2
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim9equalNameE_331(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%j=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%i)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=bitcast i8**%c to i8***
%q=load i8**,i8***%p,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%m(i8*inreg%o,i8*inreg%r)
store i8*%s,i8**%c,align 8
%t=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%u=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=bitcast i8**%d to i8***
%B=load i8**,i8***%A,align 8
store i8*null,i8**%d,align 8
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%x(i8*inreg%z,i8*inreg%C)
%E=load i8*,i8**%c,align 8
%F=call i32@sml_obj_equal(i8*inreg%E,i8*inreg%D)#0
ret i32%F
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_332(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_331 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_1632 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_344(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=load i8*,i8**%c,align 8
%A=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_332(i8*inreg%z)
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=call fastcc i8*%w(i8*inreg%B,i8*inreg%A)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8**%f to i8***
%J=load i8**,i8***%I,align 8
%K=load i8*,i8**%J,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*%F(i8*inreg%H,i8*inreg%N)
%P=icmp eq i8*%O,null
br i1%P,label%Q,label%a4
Q:
%R=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@L,i64 0,i32 2,i64 0),i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%S)
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@M,i64 0,i32 2,i64 0),i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ac)
store i8*%al,i8**%c,align 8
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%am,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%e,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aq)
store i8*%aA,i8**%c,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aB)
store i8*%aK,i8**%c,align 8
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
store i8*%aL,i8**%e,align 8
%aO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@K,i64 0,i32 2,i64 0),i8**%aR,align 8
%aS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aL,i64 24
%aW=bitcast i8*%aV to i32*
store i32 7,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 60)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177336,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aX,i64 56
%a1=bitcast i8*%a0 to i32*
store i32 1,i32*%a1,align 4
%a2=load i8*,i8**%e,align 8
%a3=bitcast i8*%aX to i8**
store i8*%a2,i8**%a3,align 8
call void@sml_raise(i8*inreg%aX)#1
unreachable
a4:
%a5=bitcast i8*%O to i8**
%a6=load i8*,i8**%a5,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%e,align 8
%ba=load i8*,i8**%d,align 8
%bb=call i32@sml_obj_equal(i8*inreg%ba,i8*inreg%a9)#0
%bc=icmp eq i32%bb,0
br i1%bc,label%be,label%bd
bd:
ret void
be:
%bf=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%bf,i8**%g,align 8
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=bitcast i8*%bg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@H,i64 0,i32 2,i64 0),i8**%bj,align 8
%bk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
%bp=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bg)
store i8*%bp,i8**%c,align 8
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177296,i32*%bs,align 4
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bq,i64 8
%bw=bitcast i8*%bv to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@M,i64 0,i32 2,i64 0),i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bq)
store i8*%bz,i8**%c,align 8
%bA=load i8*,i8**%f,align 8
%bB=getelementptr inbounds i8,i8*%bA,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%f,align 8
%bE=call i8*@sml_alloc(i32 inreg 20)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177296,i32*%bG,align 4
%bH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bE,i64 16
%bN=bitcast i8*%bM to i32*
store i32 3,i32*%bN,align 4
%bO=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bE)
store i8*%bO,i8**%c,align 8
%bP=call i8*@sml_alloc(i32 inreg 20)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177296,i32*%bR,align 4
%bS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bP,i64 8
%bV=bitcast i8*%bU to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@I,i64 0,i32 2,i64 0),i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bP,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
%bY=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bP)
store i8*%bY,i8**%c,align 8
%bZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b0=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8typenameE_321(i8*inreg%bZ)
store i8*%b0,i8**%d,align 8
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%b1)
store i8*%cb,i8**%c,align 8
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%cc,i64 8
%ci=bitcast i8*%ch to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@J,i64 0,i32 2,i64 0),i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cc,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cc)
store i8*%cl,i8**%c,align 8
%cm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cn=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8typenameE_321(i8*inreg%cm)
store i8*%cn,i8**%d,align 8
%co=call i8*@sml_alloc(i32 inreg 20)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177296,i32*%cq,align 4
%cr=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cs=bitcast i8*%co to i8**
store i8*%cr,i8**%cs,align 8
%ct=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cu=getelementptr inbounds i8,i8*%co,i64 8
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%co,i64 16
%cx=bitcast i8*%cw to i32*
store i32 3,i32*%cx,align 4
%cy=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%co)
store i8*%cy,i8**%c,align 8
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177296,i32*%cB,align 4
%cC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cz,i64 8
%cF=bitcast i8*%cE to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@T,i64 0,i32 2,i64 0),i8**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cz,i64 16
%cH=bitcast i8*%cG to i32*
store i32 3,i32*%cH,align 4
%cI=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cz)
store i8*%cI,i8**%c,align 8
%cJ=call i8*@sml_alloc(i32 inreg 28)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177304,i32*%cL,align 4
store i8*%cJ,i8**%d,align 8
%cM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cJ,i64 8
%cP=bitcast i8*%cO to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@G,i64 0,i32 2,i64 0),i8**%cP,align 8
%cQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cR=getelementptr inbounds i8,i8*%cJ,i64 16
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cJ,i64 24
%cU=bitcast i8*%cT to i32*
store i32 7,i32*%cU,align 4
%cV=call i8*@sml_alloc(i32 inreg 60)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177336,i32*%cX,align 4
%cY=getelementptr inbounds i8,i8*%cV,i64 56
%cZ=bitcast i8*%cY to i32*
store i32 1,i32*%cZ,align 4
%c0=load i8*,i8**%d,align 8
%c1=bitcast i8*%cV to i8**
store i8*%c0,i8**%c1,align 8
call void@sml_raise(i8*inreg%cV)#1
unreachable
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_349(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%b to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%d,align 8
%w=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_332(i8*inreg%v)
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=call fastcc i8*%s(i8*inreg%x,i8*inreg%w)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%c to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*%B(i8*inreg%D,i8*inreg%J)
%L=icmp eq i8*%K,null
br i1%L,label%M,label%a0
M:
%N=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%N,i8**%e,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@Y,i64 0,i32 2,i64 0),i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%S)
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@O,i64 0,i32 2,i64 0),i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ac)
store i8*%al,i8**%c,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%am)
store i8*%aw,i8**%c,align 8
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@P,i64 0,i32 2,i64 0),i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ax)
store i8*%aG,i8**%c,align 8
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aH,i64 8
%aN=bitcast i8*%aM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@N,i64 0,i32 2,i64 0),i8**%aN,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aH,i64 24
%aS=bitcast i8*%aR to i32*
store i32 7,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 60)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177336,i32*%aV,align 4
%aW=getelementptr inbounds i8,i8*%aT,i64 56
%aX=bitcast i8*%aW to i32*
store i32 1,i32*%aX,align 4
%aY=load i8*,i8**%d,align 8
%aZ=bitcast i8*%aT to i8**
store i8*%aY,i8**%aZ,align 8
call void@sml_raise(i8*inreg%aT)#1
unreachable
a0:
ret void
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_352(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%g,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%g,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%h,align 8
%w=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%j,align 8
%C=load i8*,i8**%g,align 8
%D=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_332(i8*inreg%C)
%E=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%F=call fastcc i8*%z(i8*inreg%E,i8*inreg%D)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=bitcast i8**%i to i8***
%M=load i8**,i8***%L,align 8
store i8*null,i8**%i,align 8
%N=load i8*,i8**%M,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%I(i8*inreg%K,i8*inreg%Q)
%S=icmp eq i8*%R,null
br i1%S,label%T,label%U
T:
ret i32 1
U:
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%i,align 8
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%aa,i64 24
%am=bitcast i8*%al to i32*
store i32 7,i32*%am,align 4
%an=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%an)
%ao=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ao)
%ap=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ap)
%aq=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aq)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%aa,i8**%c,align 8
%ar=load atomic i32,i32*@sml_check_flag unordered,align 4
%as=icmp eq i32%ar,0
br i1%as,label%ax,label%at
at:
call void@sml_check(i32 inreg%ar)
%au=bitcast i8**%c to i8***
%av=load i8**,i8***%au,align 8
%aw=load i8*,i8**%av,align 8
br label%ax
ax:
%ay=phi i8*[%aw,%at],[%ad,%U]
store i8*%ay,i8**%d,align 8
%az=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%e,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
store i8*%aF,i8**%f,align 8
%aI=load i8*,i8**%c,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%d,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_344 to void(...)*),void(...)**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_1634 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 -2147483647,i32*%aZ,align 4
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=call fastcc i8*%aC(i8*inreg%a0,i8*inreg%aP)
%a2=getelementptr inbounds i8,i8*%a1,i64 16
%a3=bitcast i8*%a2 to i8*(i8*,i8*)**
%a4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a3,align 8
%a5=bitcast i8*%a1 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=load i8*,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%a7,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
%bb=call fastcc i8*%a4(i8*inreg%a6,i8*inreg%ba)
%bc=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%e,align 8
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
store i8*%bi,i8**%f,align 8
%bl=load i8*,i8**%c,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_349 to void(...)*),void(...)**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_1635 to void(...)*),void(...)**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 24
%bC=bitcast i8*%bB to i32*
store i32 -2147483647,i32*%bC,align 4
%bD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bE=call fastcc i8*%bf(i8*inreg%bD,i8*inreg%bs)
%bF=getelementptr inbounds i8,i8*%bE,i64 16
%bG=bitcast i8*%bF to i8*(i8*,i8*)**
%bH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bG,align 8
%bI=bitcast i8*%bE to i8**
%bJ=load i8*,i8**%bI,align 8
%bK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 16
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
%bO=call fastcc i8*%bH(i8*inreg%bJ,i8*inreg%bN)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%an)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ao)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ap)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aq)
ret i32 0
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_353(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN4List6filterE(i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
store i8*%o,i8**%d,align 8
%r=load i8*,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i32*
store i32 1,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 28)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177304,i32*%x,align 4
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_352 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_1637 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 24
%F=bitcast i8*%E to i32*
store i32 -2147483647,i32*%F,align 4
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%l(i8*inreg%G,i8*inreg%v)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=bitcast i8**%b to i8***
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
%Q=tail call fastcc i8*%K(i8*inreg%M,i8*inreg%P)
ret i8*%Q
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim4linkE_359(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
%p=bitcast i8*%m to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@S,i64 0,i32 2,i64 0),i8**%p,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%m)
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@T,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%w)
ret i8*%F
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim4linkE_366(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=bitcast i8*%j to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%b,align 8
%y=call i8*@sml_alloc(i32 inreg 4)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 4,i32*%B,align 4
store i32 0,i32*%z,align 4
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=call fastcc i8*%v(i8*inreg%C,i8*inreg%y)
store i8*%D,i8**%b,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_353(i8*inreg%E)
store i8*%O,i8**%b,align 8
%P=icmp eq i8*%O,null
br i1%P,label%Q,label%R
Q:
ret void
R:
%S=bitcast i8*%O to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=icmp eq i8*%X,null
br i1%Y,label%Z,label%aO
Z:
store i8*null,i8**%b,align 8
%aa=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=bitcast i8*%ab to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@Y,i64 0,i32 2,i64 0),i8**%ae,align 8
%af=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
%ak=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ab)
store i8*%ak,i8**%b,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
%au=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%al)
store i8*%au,i8**%b,align 8
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
store i8*%av,i8**%c,align 8
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@X,i64 0,i32 2,i64 0),i8**%aB,align 8
%aC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aD=getelementptr inbounds i8,i8*%av,i64 16
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%av,i64 24
%aG=bitcast i8*%aF to i32*
store i32 7,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 60)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177336,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%aH,i64 56
%aL=bitcast i8*%aK to i32*
store i32 1,i32*%aL,align 4
%aM=load i8*,i8**%c,align 8
%aN=bitcast i8*%aH to i8**
store i8*%aM,i8**%aN,align 8
call void@sml_raise(i8*inreg%aH)#1
unreachable
aO:
%aP=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%aP,i8**%c,align 8
%aQ=call fastcc i8*@_SMLFN6String10concatWithE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@R,i64 0,i32 2,i64 0))
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%d,align 8
%aW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8*(i8*,i8*)**
%aZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aY,align 8
%a0=bitcast i8*%aW to i8**
%a1=load i8*,i8**%a0,align 8
%a2=call fastcc i8*%aZ(i8*inreg%a1,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@U,i64 0,i32 2)to i8*))
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a9=call fastcc i8*%a5(i8*inreg%a7,i8*inreg%a8)
%ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bb=call fastcc i8*%aT(i8*inreg%ba,i8*inreg%a9)
store i8*%bb,i8**%b,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
%bf=bitcast i8*%bc to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@V,i64 0,i32 2,i64 0),i8**%bf,align 8
%bg=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bc)
store i8*%bl,i8**%b,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
%bp=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bm,i64 8
%bs=bitcast i8*%br to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@W,i64 0,i32 2,i64 0),i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
%bv=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bm)
store i8*%bv,i8**%b,align 8
%bw=call i8*@sml_alloc(i32 inreg 28)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177304,i32*%by,align 4
store i8*%bw,i8**%d,align 8
%bz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Q,i64 0,i32 2,i64 0),i8**%bC,align 8
%bD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bw,i64 24
%bH=bitcast i8*%bG to i32*
store i32 7,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 60)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177336,i32*%bK,align 4
%bL=getelementptr inbounds i8,i8*%bI,i64 56
%bM=bitcast i8*%bL to i32*
store i32 1,i32*%bM,align 4
%bN=load i8*,i8**%d,align 8
%bO=bitcast i8*%bI to i8**
store i8*%bN,i8**%bO,align 8
call void@sml_raise(i8*inreg%bI)#1
unreachable
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_368(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8***
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%p=load i8**,i8***%n,align 8
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%o)
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim12closeCommandE_261(i8*inreg%z)
ret void
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_369(i8*inreg%a)#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
store i8*%m,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 24
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 4)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 4,i32*%E,align 4
store i32 0,i32*%C,align 4
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=call fastcc i8*%y(i8*inreg%F,i8*inreg%B)
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_353(i8*inreg%H)
store i8*%R,i8**%d,align 8
%S=icmp eq i8*%R,null
br i1%S,label%T,label%U
T:
ret void
U:
%V=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%f,align 8
%ab=bitcast i8**%e to i8***
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
%ae=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ae)
%af=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%af)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%ad,i8**%b,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
store i8*%ag,i8**%c,align 8
%aj=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
%aq=load i8*,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18createTableCommandE_328 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim18createTableCommandE_328 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 24
%ax=bitcast i8*%aw to i32*
store i32 -2147483647,i32*%ax,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ae)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%af)
%ay=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%az=call fastcc i8*%Y(i8*inreg%ay,i8*inreg%an)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aF)
store i8*%aG,i8**%d,align 8
%aH=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%f,align 8
%aN=call i8*@sml_alloc(i32 inreg 12)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177288,i32*%aP,align 4
store i8*%aN,i8**%g,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aN,i64 8
%aT=bitcast i8*%aS to i32*
store i32 1,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 28)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177304,i32*%aW,align 4
%aX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_368 to void(...)*),void(...)**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_1641 to void(...)*),void(...)**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 24
%a4=bitcast i8*%a3 to i32*
store i32 -2147483647,i32*%a4,align 4
%a5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a6=call fastcc i8*%aK(i8*inreg%a5,i8*inreg%aU)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bd=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%bc)
ret void
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_371(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 4)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 4,i32*%E,align 4
store i32 0,i32*%C,align 4
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=call fastcc i8*%y(i8*inreg%F,i8*inreg%B)
store i8*%G,i8**%c,align 8
%H=bitcast i8**%f to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%f,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aa=invoke fastcc i8*%M(i8*inreg%Z,i8*inreg%P)
to label%ao unwind label%ab
ab:
%ac=landingpad{i8*,i8*}
catch i8*null
%ad=extractvalue{i8*,i8*}%ac,1
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=icmp eq i8*%ag,null
br i1%an,label%ao,label%aN
ao:
%ap=call i8*@sml_alloc(i32 inreg 8)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 805306376,i32*%ar,align 4
store i8*%ap,i8**%f,align 8
%as=bitcast i8*%ap to i64*
store i64 0,i64*%as,align 1
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
store i8*%at,i8**%d,align 8
%aw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 12)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177288,i32*%aF,align 4
%aG=load i8*,i8**%d,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i32*
store i32 1,i32*%aJ,align 4
%aK=load i8*,i8**%f,align 8
%aL=bitcast i8*%aK to i8**
call void@sml_write(i8*inreg%aK,i8**inreg%aL,i8*inreg%aD)#0
%aM=load i8*,i8**%f,align 8
ret i8*%aM
aN:
store i8*null,i8**%e,align 8
%aO=bitcast i8**%c to i8***
%aP=load i8**,i8***%aO,align 8
%aQ=load i8*,i8**%aP,align 8
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%c,align 8
%aW=call i8*@sml_alloc(i32 inreg 4)#0
%aX=bitcast i8*%aW to i32*
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 4,i32*%aZ,align 4
store i32 0,i32*%aX,align 4
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=call fastcc i8*%aT(i8*inreg%a0,i8*inreg%aW)
%a2=call i8*@sml_alloc(i32 inreg 60)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177336,i32*%a4,align 4
%a5=getelementptr inbounds i8,i8*%a2,i64 56
%a6=bitcast i8*%a5 to i32*
store i32 1,i32*%a6,align 4
%a7=load i8*,i8**%d,align 8
%a8=bitcast i8*%a2 to i8**
store i8*%a7,i8**%a8,align 8
call void@sml_raise(i8*inreg%a2)#1
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_372(i8*inreg%a,i32 inreg%b,i32 inreg%c)#4 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
%r=load i8*,i8**%e,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_371 to void(...)*),void(...)**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_371 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 -2147483647,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_373(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i32,i32)*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_372 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_1643 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_377(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%n
k:
%l=bitcast i8*%b to i8**
%m=bitcast i8**%c to i8***
br label%q
n:
call void@sml_check(i32 inreg%i)
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8***[%m,%k],[%o,%n]
%s=phi i8**[%l,%k],[%p,%n]
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%v,label%P
v:
store i8*null,i8**%h,align 8
%w=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@ac,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@ai,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 7,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=bitcast i8*%t to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=bitcast i8**%h to i8***
%W=load i8**,i8***%V,align 8
%X=load i8*,i8**%W,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%e,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=bitcast i8*%ad to i64*
store i64 0,i64*%ag,align 4
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 2,i32*%al,align 4
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=call fastcc i8*%aa(i8*inreg%am,i8*inreg%ad)
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%an,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%an,i64 16
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%g,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%c,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aw,i64 24
%aI=bitcast i8*%aH to i32*
store i32 7,i32*%aI,align 4
%aJ=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%f,align 8
%aP=load i8*,i8**%h,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 8
%aR=bitcast i8*%aQ to i32*
%aS=load i32,i32*%aR,align 4
store i8*null,i8**%h,align 8
%aT=getelementptr inbounds i8,i8*%aP,i64 12
%aU=bitcast i8*%aT to i32*
%aV=load i32,i32*%aU,align 4
%aW=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg%aS,i32 inreg%aV)
%aX=getelementptr inbounds i8,i8*%aW,i64 16
%aY=bitcast i8*%aX to i8*(i8*,i8*)**
%aZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aY,align 8
%a0=bitcast i8*%aW to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=call i8*@sml_alloc(i32 inreg 4)#0
%a3=bitcast i8*%a2 to i32*
%a4=getelementptr inbounds i8,i8*%a2,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 4,i32*%a5,align 4
store i32 0,i32*%a3,align 4
%a6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a7=call fastcc i8*%aZ(i8*inreg%a6,i8*inreg%a2)
%a8=getelementptr inbounds i8,i8*%a7,i64 16
%a9=bitcast i8*%a8 to i8*(i8*,i8*)**
%ba=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a9,align 8
%bb=bitcast i8*%a7 to i8**
%bc=load i8*,i8**%bb,align 8
%bd=load i8**,i8***%r,align 8
%be=load i8*,i8**%bd,align 8
%bf=call fastcc i8*%ba(i8*inreg%bc,i8*inreg%be)
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=call fastcc i8*%aM(i8*inreg%bg,i8*inreg%bf)
%bi=bitcast i8**%d to i8***
%bj=load i8**,i8***%bi,align 8
store i8*null,i8**%d,align 8
%bk=load i8*,i8**%bj,align 8
%bl=getelementptr inbounds i8,i8*%bk,i64 16
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
%bt=call fastcc i8*%bq(i8*inreg%bs,i8*inreg%bh)
%bu=load i8*,i8**%c,align 8
%bv=getelementptr inbounds i8,i8*%bu,i64 16
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
%by=getelementptr inbounds i8,i8*%bx,i64 16
%bz=bitcast i8*%by to i8*(i8*,i8*)**
%bA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bz,align 8
%bB=bitcast i8*%bx to i8**
%bC=load i8*,i8**%bB,align 8
%bD=tail call fastcc i8*%bA(i8*inreg%bC,i8*inreg%bt)
ret i8*%bD
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_378(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_377 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_377 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLL5toyFn_381(i8*inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
%i=bitcast i8*%a to i8**
%j=load i8*,i8**%i,align 8
ret i8*%j
k:
%l=getelementptr inbounds i8,i8*%a,i64 12
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg%n)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32%n,i32*%q,align 4
%r=load i8*,i8**%c,align 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%o,i8*%r,i32%n,i1 false)
ret i8*%o
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3toyE_382(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%k,i64 12
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
store i8*null,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%c,align 8
%C=icmp eq i32%o,0
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
br i1%C,label%G,label%E
E:
%F=bitcast i8*%z to i8**
store i8*%D,i8**%F,align 8
br label%H
G:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%D,i32%y,i1 false)
br label%H
H:
%I=getelementptr inbounds i8,i8*%z,i64 8
%J=bitcast i8*%I to i32*
store i32%o,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%z,i64 12
%L=bitcast i8*%K to i32*
store i32%y,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%z,i64 16
%N=bitcast i8*%M to i32*
store i32%o,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
store i8*%O,i8**%d,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLL5toyFn_381 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5toyFn_1646 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=bitcast i8*%Z to i64*
store i64 0,i64*%ac,align 4
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=call fastcc i8*%t(i8*inreg%ai,i8*inreg%Z)
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=tail call fastcc i8*%ap(i8*inreg%ar,i8*inreg null)
ret i8*%as
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3toyE_383(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_382 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_382 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLL3ast_388(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bL,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_391(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%k,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%o(i8*inreg%q,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ae,i64 0,i32 2)to i8*))
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg%C,i32 inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 4)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 4,i32*%P,align 4
store i32 0,i32*%N,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%J(i8*inreg%Q,i8*inreg%M)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%x(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define internal fastcc i8*@_SMLL3ast_396(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bL,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_399(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%k,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%o(i8*inreg%q,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ag,i64 0,i32 2)to i8*))
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query16format__query__astE(i32 inreg%C,i32 inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 4)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 4,i32*%P,align 4
store i32 0,i32*%N,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%J(i8*inreg%Q,i8*inreg%M)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%x(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_402(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=load i8*,i8**%d,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query14format__exp__astE(i32 inreg%r,i32 inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 4)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 4,i32*%E,align 4
store i32 0,i32*%C,align 4
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=call fastcc i8*%y(i8*inreg%F,i8*inreg%B)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=bitcast i8**%c to i8***
%N=load i8**,i8***%M,align 8
store i8*null,i8**%c,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%J(i8*inreg%L,i8*inreg%O)
%Q=load i8*,i8**%e,align 8
%R=tail call fastcc i8*%m(i8*inreg%Q,i8*inreg%P)
ret i8*%R
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim9closeConnE_407(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%H
n:
%o=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors7ConnectE,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@ah,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@ai,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 7,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=bitcast i8*%l to i8****
%J=load i8***,i8****%I,align 8
call void@sml_write(i8*inreg%i,i8**inreg%k,i8*inreg null)#0
%K=load i8**,i8***%J,align 8
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 4)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 4,i32*%U,align 4
store i32 0,i32*%S,align 4
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%O(i8*inreg%V,i8*inreg%R)
ret void
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_413(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%H
n:
%o=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@aj,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@al,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 7,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=bitcast i8*%l to i8****
%J=load i8***,i8****%I,align 8
%K=load i8**,i8***%J,align 8
call void@sml_write(i8*inreg%i,i8**inreg%k,i8*inreg null)#0
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 4)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 4,i32*%U,align 4
store i32 0,i32*%S,align 4
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%O(i8*inreg%V,i8*inreg%R)
ret void
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_421(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%f,align 8
br label%p
p:
%q=phi i8*[%o,%l],[%a,%j]
%r=phi i8**[%n,%l],[%k,%j]
%s=getelementptr inbounds i8,i8*%q,i64 4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=add i32%u,-1
%w=sub i32 0,%u
%x=and i32%v,%w
%y=add i32%u,7
%z=add i32%y,%x
%A=and i32%z,-8
%B=bitcast i8*%q to i32*
%C=load i32,i32*%B,align 4
%D=or i32%A,4
%E=load i8*,i8**%r,align 8
%F=icmp eq i8*%E,null
br i1%F,label%G,label%aa
G:
store i8*null,i8**%f,align 8
%H=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%H,i8**%c,align 8
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
store i8*%I,i8**%d,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@ak,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@al,i64 0,i32 2,i64 0),i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 60)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177336,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 56
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%T to i8**
store i8*%Y,i8**%Z,align 8
call void@sml_raise(i8*inreg%T)#1
unreachable
aa:
%ab=bitcast i8*%E to i8**
%ac=load i8*,i8**%ab,align 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=icmp eq i8*%ah,null
br i1%ai,label%aj,label%ak
aj:
ret i8*null
ak:
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=call i8*@sml_alloc(i32 inreg 4)#0
%aw=bitcast i8*%av to i32*
%ax=getelementptr inbounds i8,i8*%av,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 4,i32*%ay,align 4
store i32 0,i32*%aw,align 4
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=call fastcc i8*%as(i8*inreg%az,i8*inreg%av)
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=icmp eq i32%aC,0
br i1%aD,label%bm,label%aE
aE:
store i8*null,i8**%c,align 8
%aF=load i8*,i8**%f,align 8
%aG=bitcast i8*%aF to i32*
%aH=load i32,i32*%aG,align 4
%aI=getelementptr inbounds i8,i8*%aF,i64 4
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=call fastcc i8*@_SMLFN4List2hdE(i32 inreg%aH,i32 inreg%aK)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%c,align 8
%aR=load i8*,i8**%e,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
store i8*null,i8**%e,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=call fastcc i8*%aU(i8*inreg%aW,i8*inreg%aX)
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=call fastcc i8*%aO(i8*inreg%aZ,i8*inreg%aY)
store i8*%a0,i8**%c,align 8
%a1=load i8*,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 4
%a3=bitcast i8*%a2 to i32*
%a4=load i32,i32*%a3,align 4
store i8*null,i8**%f,align 8
%a5=bitcast i8*%a1 to i32*
%a6=load i32,i32*%a5,align 4
%a7=call i8*@sml_alloc(i32 inreg%D)#0
%a8=or i32%A,1342177280
%a9=getelementptr inbounds i8,i8*%a7,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32%a8,i32*%ba,align 4
call void@llvm.memset.p0i8.i32(i8*%a7,i8 0,i32%D,i1 false)
%bb=icmp eq i32%a6,0
%bc=load i8*,i8**%c,align 8
%bd=sext i32%x to i64
%be=getelementptr inbounds i8,i8*%a7,i64%bd
br i1%bb,label%bh,label%bf
bf:
%bg=bitcast i8*%be to i8**
store i8*%bc,i8**%bg,align 8
br label%bi
bh:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%be,i8*%bc,i32%a4,i1 false)
br label%bi
bi:
%bj=sext i32%A to i64
%bk=getelementptr inbounds i8,i8*%a7,i64%bj
%bl=bitcast i8*%bk to i32*
store i32%C,i32*%bl,align 4
ret i8*%a7
bm:
store i8*null,i8**%e,align 8
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bn,i64 8
%bt=bitcast i8*%bs to i8**
store i8*null,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 12)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177288,i32*%by,align 4
%bz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=load i8*,i8**%c,align 8
%bE=bitcast i8*%bD to i8**
call void@sml_write(i8*inreg%bD,i8**inreg%bE,i8*inreg%bw)#0
store i8*null,i8**%c,align 8
%bF=load i8*,i8**%f,align 8
%bG=bitcast i8*%bF to i32*
%bH=load i32,i32*%bG,align 4
store i8*null,i8**%f,align 8
%bI=getelementptr inbounds i8,i8*%bF,i64 4
%bJ=bitcast i8*%bI to i32*
%bK=load i32,i32*%bJ,align 4
%bL=call i8*@sml_alloc(i32 inreg 4)#0
%bM=bitcast i8*%bL to i32*
%bN=getelementptr inbounds i8,i8*%bL,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 4,i32*%bO,align 4
store i8*%bL,i8**%d,align 8
store i32%bH,i32*%bM,align 4
%bP=call i8*@sml_alloc(i32 inreg 4)#0
%bQ=bitcast i8*%bP to i32*
%bR=getelementptr inbounds i8,i8*%bP,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 4,i32*%bS,align 4
store i32%bK,i32*%bQ,align 4
ret i8*null
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_422(i32 inreg%a,i32 inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5fetchE_421 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5fetchE_421 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL4loop_424(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
i:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
%f=bitcast i8**%e to i8***
br label%g
g:
%h=phi i8*[%aB,%aL],[%b,%i]
store i8*%h,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
%n=load i8*,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%n,i64 12
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=add i32%q,-1
%s=sub i32 0,%q
%t=and i32%r,%s
%u=add i32%q,7
%v=add i32%u,%t
%w=and i32%v,-8
%x=add i32%w,15
%y=and i32%x,-8
%z=lshr i32%v,3
%A=lshr i32%t,3
%B=sub nsw i32%z,%A
%C=shl i32 1,%B
%D=getelementptr inbounds i8,i8*%n,i64 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=or i32%C,%F
%H=or i32%y,4
%I=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_422(i32 inreg%F,i32 inreg%q)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8**,i8***%f,align 8
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%L(i8*inreg%N,i8*inreg%P)
store i8*%Q,i8**%d,align 8
%R=icmp eq i8*%Q,null
br i1%R,label%S,label%U
S:
%T=load i8*,i8**%c,align 8
ret i8*%T
U:
%V=load i8*,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i32*
%Y=load i32,i32*%X,align 4
%Z=icmp eq i32%Y,0
br i1%Z,label%af,label%aa
aa:
store i8*null,i8**%d,align 8
%ab=sext i32%t to i64
%ac=getelementptr inbounds i8,i8*%Q,i64%ab
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
br label%at
af:
%ag=getelementptr inbounds i8,i8*%V,i64 12
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=call i8*@sml_alloc(i32 inreg%ai)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32%ai,i32*%al,align 4
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=sext i32%t to i64
%ao=getelementptr inbounds i8,i8*%am,i64%an
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aj,i8*%ao,i32%ai,i1 false)
%ap=load i8*,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i32*
%as=load i32,i32*%ar,align 4
br label%at
at:
%au=phi i64[%an,%af],[%ab,%aa]
%av=phi i32[%as,%af],[%Y,%aa]
%aw=phi i8*[%ap,%af],[%V,%aa]
%ax=phi i8*[%aj,%af],[%ae,%aa]
store i8*%ax,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%aw,i64 12
%az=bitcast i8*%ay to i32*
%aA=load i32,i32*%az,align 4
%aB=call i8*@sml_alloc(i32 inreg%H)#0
%aC=or i32%y,1342177280
%aD=getelementptr inbounds i8,i8*%aB,i64 -4
%aE=bitcast i8*%aD to i32*
store i32%aC,i32*%aE,align 4
call void@llvm.memset.p0i8.i32(i8*%aB,i8 0,i32%H,i1 false)
%aF=icmp eq i32%av,0
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64%au
br i1%aF,label%aK,label%aI
aI:
%aJ=bitcast i8*%aH to i8**
store i8*%aG,i8**%aJ,align 8
br label%aL
aK:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aH,i8*%aG,i32%aA,i1 false)
br label%aL
aL:
%aM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aN=sext i32%w to i64
%aO=getelementptr inbounds i8,i8*%aB,i64%aN
%aP=bitcast i8*%aO to i8**
store i8*%aM,i8**%aP,align 8
%aQ=sext i32%y to i64
%aR=getelementptr inbounds i8,i8*%aB,i64%aQ
%aS=bitcast i8*%aR to i32*
store i32%G,i32*%aS,align 4
br label%g
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_425(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32%n,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%r,i64 12
%z=bitcast i8*%y to i32*
store i32%q,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4loop_424 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4loop_424 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
store i8*null,i8**%d,align 8
%N=call fastcc i8*@_SMLL4loop_424(i8*inreg%F,i8*inreg null)
store i8*%N,i8**%d,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1655(i8*inreg null,i8*inreg%O)
%Q=load i8*,i8**%e,align 8
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
store i8*null,i8**%e,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
%W=call fastcc i8*@_SMLFN4List3revE(i32 inreg%S,i32 inreg%V)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%d,align 8
%ad=tail call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
ret i8*%ad
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 32
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 40
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 88
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 24
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=load i8,i8*%C,align 1
ret i8%X
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 72
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc double@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 56
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to double*
%Y=load double,double*%X,align 8
ret double%Y
}
define fastcc float@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 64
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to float*
%Y=load float,float*%X,align 4
ret float%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 80
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 48
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=getelementptr inbounds i8,i8*%i,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%w,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%r(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@av,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_458(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=add i32%r,-1
%t=sub i32 0,%r
%u=and i32%s,%t
%v=getelementptr inbounds i8,i8*%m,i64 20
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=add i32%x,-1
%z=sub i32 0,%x
%A=and i32%y,%z
%B=add i32%s,%x
%C=add i32%B,%u
%D=and i32%C,%z
%E=add i32%x,7
%F=add i32%E,%D
%G=and i32%F,-8
%H=lshr i32%D,3
%I=lshr i32%u,3
%J=sub nsw i32%H,%I
%K=getelementptr inbounds i8,i8*%m,i64 16
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=shl i32%M,%J
%O=getelementptr inbounds i8,i8*%m,i64 8
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=or i32%N,%Q
%S=or i32%G,4
%T=bitcast i8*%o to i8**
%U=load i8*,i8**%T,align 8
%V=icmp eq i8*%U,null
br i1%V,label%W,label%am
W:
%X=getelementptr inbounds i8,i8*%o,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=icmp eq i8*%Z,null
br i1%aa,label%ab,label%ad
ab:
%ac=phi i32[0,%W],[2,%aB],[1,%ad],[1,%af]
ret i32%ac
ad:
store i8*%Z,i8**%c,align 8
%ae=icmp eq i32%M,0
br i1%ae,label%af,label%ab
af:
store i8*null,i8**%e,align 8
%ag=call i8*@sml_alloc(i32 inreg%x)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32%x,i32*%ai,align 4
%aj=load i8*,i8**%c,align 8
%ak=sext i32%A to i64
%al=getelementptr inbounds i8,i8*%aj,i64%ak
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ag,i8*%al,i32%x,i1 false)
br label%ab
am:
store i8*%U,i8**%d,align 8
%an=icmp eq i32%Q,0
br i1%an,label%at,label%ao
ao:
store i8*null,i8**%d,align 8
%ap=sext i32%u to i64
%aq=getelementptr inbounds i8,i8*%U,i64%ap
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
br label%aB
at:
%au=call i8*@sml_alloc(i32 inreg%r)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32%r,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=sext i32%u to i64
%az=getelementptr inbounds i8,i8*%ax,i64%ay
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%au,i8*%az,i32%r,i1 false)
%aA=load i8*,i8**%c,align 8
br label%aB
aB:
%aC=phi i8*[%aA,%at],[%o,%ao]
%aD=phi i8*[%au,%at],[%as,%ao]
store i8*%aD,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%aC,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=icmp eq i8*%aG,null
br i1%aH,label%ab,label%aI
aI:
store i8*%aG,i8**%c,align 8
%aJ=load i8*,i8**%e,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i32*
%aM=load i32,i32*%aL,align 4
%aN=icmp eq i32%aM,0
br i1%aN,label%aU,label%aO
aO:
%aP=bitcast i8*%aJ to i8**
store i8*null,i8**%c,align 8
%aQ=sext i32%A to i64
%aR=getelementptr inbounds i8,i8*%aG,i64%aQ
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
br label%ba
aU:
%aV=getelementptr inbounds i8,i8*%aJ,i64 20
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
%aY=call i8*@sml_alloc(i32 inreg%aX)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32%aX,i32*%a0,align 4
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=sext i32%A to i64
%a3=getelementptr inbounds i8,i8*%a1,i64%a2
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aY,i8*%a3,i32%aX,i1 false)
%a4=bitcast i8**%e to i8***
%a5=load i8**,i8***%a4,align 8
%a6=bitcast i8**%a5 to i8*
%a7=getelementptr inbounds i8*,i8**%a5,i64 2
%a8=bitcast i8**%a7 to i32*
%a9=load i32,i32*%a8,align 4
br label%ba
ba:
%bb=phi i32[%a9,%aU],[%aM,%aO]
%bc=phi i8*[%a6,%aU],[%aJ,%aO]
%bd=phi i8**[%a5,%aU],[%aP,%aO]
%be=phi i8*[%aY,%aU],[%aT,%aO]
store i8*%be,i8**%c,align 8
%bf=load i8*,i8**%bd,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%f,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 12
%bm=bitcast i8*%bl to i32*
%bn=load i32,i32*%bm,align 4
%bo=getelementptr inbounds i8,i8*%bc,i64 8
%bp=bitcast i8*%bo to i32*
%bq=load i32,i32*%bp,align 4
%br=getelementptr inbounds i8,i8*%bc,i64 20
%bs=bitcast i8*%br to i32*
%bt=load i32,i32*%bs,align 4
store i8*null,i8**%e,align 8
%bu=call i8*@sml_alloc(i32 inreg%S)#0
%bv=or i32%G,1342177280
%bw=getelementptr inbounds i8,i8*%bu,i64 -4
%bx=bitcast i8*%bw to i32*
store i32%bv,i32*%bx,align 4
call void@llvm.memset.p0i8.i32(i8*%bu,i8 0,i32%S,i1 false)
%by=icmp eq i32%bq,0
%bz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bA=sext i32%u to i64
%bB=getelementptr inbounds i8,i8*%bu,i64%bA
br i1%by,label%bE,label%bC
bC:
%bD=bitcast i8*%bB to i8**
store i8*%bz,i8**%bD,align 8
br label%bF
bE:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bB,i8*%bz,i32%bn,i1 false)
br label%bF
bF:
%bG=icmp eq i32%bb,0
%bH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bI=sext i32%D to i64
%bJ=getelementptr inbounds i8,i8*%bu,i64%bI
br i1%bG,label%bM,label%bK
bK:
%bL=bitcast i8*%bJ to i8**
store i8*%bH,i8**%bL,align 8
br label%bN
bM:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bJ,i8*%bH,i32%bt,i1 false)
br label%bN
bN:
%bO=sext i32%G to i64
%bP=getelementptr inbounds i8,i8*%bu,i64%bO
%bQ=bitcast i8*%bP to i32*
store i32%R,i32*%bQ,align 4
%bR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bS=call fastcc i8*%bi(i8*inreg%bR,i8*inreg%bu)
%bT=bitcast i8*%bS to i32*
%bU=load i32,i32*%bT,align 4
ret i32%bU
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_459(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_458 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_1670 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)unnamed_addr#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_459 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_459 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12compare__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
ret i32%k
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_464(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%n
k:
%l=bitcast i8*%b to i8**
%m=bitcast i8**%c to i8***
br label%r
n:
call void@sml_check(i32 inreg%i)
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%g,align 8
br label%r
r:
%s=phi i8***[%m,%k],[%o,%n]
%t=phi i8*[%a,%k],[%q,%n]
%u=phi i8**[%l,%k],[%p,%n]
%v=getelementptr inbounds i8,i8*%t,i64 12
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=add i32%x,-1
%z=sub i32 0,%x
%A=and i32%y,%z
%B=add i32%A,%x
%C=getelementptr inbounds i8,i8*%t,i64 28
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=add i32%E,-1
%G=add i32%F,%B
%H=sub i32 0,%E
%I=and i32%G,%H
%J=getelementptr inbounds i8,i8*%t,i64 20
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=add i32%L,-1
%N=sub i32 0,%L
%O=and i32%M,%N
%P=getelementptr inbounds i8,i8*%t,i64 36
%Q=bitcast i8*%P to i32*
%R=load i32,i32*%Q,align 4
%S=add i32%M,%R
%T=add i32%S,%O
%U=sub i32 0,%R
%V=and i32%T,%U
%W=add i32%M,%B
%X=and i32%W,%N
%Y=add i32%L,7
%Z=add i32%Y,%X
%aa=and i32%Z,-8
%ab=lshr i32%X,3
%ac=lshr i32%A,3
%ad=sub nsw i32%ab,%ac
%ae=getelementptr inbounds i8,i8*%t,i64 16
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
%ah=shl i32%ag,%ad
%ai=getelementptr inbounds i8,i8*%t,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=or i32%ah,%ak
%am=or i32%aa,4
%an=and i32%F,%H
%ao=add i32%F,%an
%ap=add i32%ao,%R
%aq=and i32%ap,%U
%ar=add i32%R,7
%as=add i32%ar,%aq
%at=and i32%as,-8
%au=lshr i32%aq,3
%av=lshr i32%an,3
%aw=sub nsw i32%au,%av
%ax=getelementptr inbounds i8,i8*%t,i64 32
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=shl i32%az,%aw
%aB=getelementptr inbounds i8,i8*%t,i64 24
%aC=bitcast i8*%aB to i32*
%aD=load i32,i32*%aC,align 4
%aE=or i32%aA,%aD
%aF=or i32%at,4
%aG=load i8*,i8**%u,align 8
store i8*%aG,i8**%d,align 8
%aH=icmp eq i32%ak,0
br i1%aH,label%aN,label%aI
aI:
store i8*null,i8**%d,align 8
%aJ=sext i32%A to i64
%aK=getelementptr inbounds i8,i8*%aG,i64%aJ
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
br label%aY
aN:
%aO=call i8*@sml_alloc(i32 inreg%x)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32%x,i32*%aQ,align 4
%aR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aS=sext i32%A to i64
%aT=getelementptr inbounds i8,i8*%aR,i64%aS
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aO,i8*%aT,i32%x,i1 false)
%aU=load i8*,i8**%g,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 24
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
br label%aY
aY:
%aZ=phi i8*[%aU,%aN],[%t,%aI]
%a0=phi i32[%aX,%aN],[%aD,%aI]
%a1=phi i8*[%aO,%aN],[%aM,%aI]
store i8*%a1,i8**%d,align 8
%a2=load i8**,i8***%s,align 8
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%e,align 8
%a4=icmp eq i32%a0,0
br i1%a4,label%bb,label%a5
a5:
%a6=bitcast i8**%a2 to i8*
store i8*null,i8**%e,align 8
%a7=sext i32%I to i64
%a8=getelementptr inbounds i8,i8*%a3,i64%a7
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
br label%bn
bb:
%bc=getelementptr inbounds i8,i8*%aZ,i64 28
%bd=bitcast i8*%bc to i32*
%be=load i32,i32*%bd,align 4
%bf=call i8*@sml_alloc(i32 inreg%be)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32%be,i32*%bh,align 4
%bi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bj=sext i32%I to i64
%bk=getelementptr inbounds i8,i8*%bi,i64%bj
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bf,i8*%bk,i32%be,i1 false)
%bl=load i8*,i8**%c,align 8
%bm=load i8*,i8**%g,align 8
br label%bn
bn:
%bo=phi i8*[%bm,%bb],[%aZ,%a5]
%bp=phi i8*[%bl,%bb],[%a6,%a5]
%bq=phi i8*[%bf,%bb],[%ba,%a5]
store i8*%bq,i8**%e,align 8
%br=getelementptr inbounds i8,i8*%bp,i64 8
%bs=bitcast i8*%br to i8**
%bt=load i8*,i8**%bs,align 8
store i8*%bt,i8**%f,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 16
%bv=bitcast i8*%bu to i32*
%bw=load i32,i32*%bv,align 4
%bx=icmp eq i32%bw,0
br i1%bx,label%bD,label%by
by:
store i8*null,i8**%f,align 8
%bz=sext i32%O to i64
%bA=getelementptr inbounds i8,i8*%bt,i64%bz
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
br label%bP
bD:
%bE=getelementptr inbounds i8,i8*%bo,i64 20
%bF=bitcast i8*%bE to i32*
%bG=load i32,i32*%bF,align 4
%bH=call i8*@sml_alloc(i32 inreg%bG)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32%bG,i32*%bJ,align 4
%bK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bL=sext i32%O to i64
%bM=getelementptr inbounds i8,i8*%bK,i64%bL
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bH,i8*%bM,i32%bG,i1 false)
%bN=load i8*,i8**%c,align 8
%bO=load i8*,i8**%g,align 8
br label%bP
bP:
%bQ=phi i8*[%bO,%bD],[%bo,%by]
%bR=phi i8*[%bN,%bD],[%bp,%by]
%bS=phi i8*[%bH,%bD],[%bC,%by]
store i8*%bS,i8**%f,align 8
%bT=getelementptr inbounds i8,i8*%bR,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
store i8*%bV,i8**%c,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 32
%bX=bitcast i8*%bW to i32*
%bY=load i32,i32*%bX,align 4
%bZ=icmp eq i32%bY,0
br i1%bZ,label%b6,label%b0
b0:
%b1=bitcast i8*%bQ to i8***
store i8*null,i8**%c,align 8
%b2=sext i32%V to i64
%b3=getelementptr inbounds i8,i8*%bV,i64%b2
%b4=bitcast i8*%b3 to i8**
%b5=load i8*,i8**%b4,align 8
br label%cj
b6:
%b7=getelementptr inbounds i8,i8*%bQ,i64 36
%b8=bitcast i8*%b7 to i32*
%b9=load i32,i32*%b8,align 4
%ca=call i8*@sml_alloc(i32 inreg%b9)#0
%cb=getelementptr inbounds i8,i8*%ca,i64 -4
%cc=bitcast i8*%cb to i32*
store i32%b9,i32*%cc,align 4
%cd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ce=sext i32%V to i64
%cf=getelementptr inbounds i8,i8*%cd,i64%ce
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ca,i8*%cf,i32%b9,i1 false)
%cg=bitcast i8**%g to i8****
%ch=load i8***,i8****%cg,align 8
%ci=bitcast i8***%ch to i8*
br label%cj
cj:
%ck=phi i8*[%ci,%b6],[%bQ,%b0]
%cl=phi i8***[%ch,%b6],[%b1,%b0]
%cm=phi i8*[%ca,%b6],[%b5,%b0]
store i8*%cm,i8**%c,align 8
%cn=load i8**,i8***%cl,align 8
%co=load i8*,i8**%cn,align 8
%cp=getelementptr inbounds i8,i8*%co,i64 16
%cq=bitcast i8*%cp to i8*(i8*,i8*)**
%cr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cq,align 8
%cs=bitcast i8*%co to i8**
%ct=load i8*,i8**%cs,align 8
store i8*%ct,i8**%h,align 8
%cu=getelementptr inbounds i8,i8*%ck,i64 12
%cv=bitcast i8*%cu to i32*
%cw=load i32,i32*%cv,align 4
%cx=getelementptr inbounds i8,i8*%ck,i64 8
%cy=bitcast i8*%cx to i32*
%cz=load i32,i32*%cy,align 4
%cA=getelementptr inbounds i8,i8*%ck,i64 20
%cB=bitcast i8*%cA to i32*
%cC=load i32,i32*%cB,align 4
%cD=getelementptr inbounds i8,i8*%ck,i64 16
%cE=bitcast i8*%cD to i32*
%cF=load i32,i32*%cE,align 4
%cG=call i8*@sml_alloc(i32 inreg%am)#0
%cH=or i32%aa,1342177280
%cI=getelementptr inbounds i8,i8*%cG,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32%cH,i32*%cJ,align 4
call void@llvm.memset.p0i8.i32(i8*%cG,i8 0,i32%am,i1 false)
%cK=icmp eq i32%cz,0
%cL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cM=sext i32%A to i64
%cN=getelementptr inbounds i8,i8*%cG,i64%cM
br i1%cK,label%cQ,label%cO
cO:
%cP=bitcast i8*%cN to i8**
store i8*%cL,i8**%cP,align 8
br label%cR
cQ:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cN,i8*%cL,i32%cw,i1 false)
br label%cR
cR:
%cS=icmp eq i32%cF,0
%cT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cU=sext i32%X to i64
%cV=getelementptr inbounds i8,i8*%cG,i64%cU
br i1%cS,label%cY,label%cW
cW:
%cX=bitcast i8*%cV to i8**
store i8*%cT,i8**%cX,align 8
br label%cZ
cY:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cV,i8*%cT,i32%cC,i1 false)
br label%cZ
cZ:
%c0=sext i32%aa to i64
%c1=getelementptr inbounds i8,i8*%cG,i64%c0
%c2=bitcast i8*%c1 to i32*
store i32%al,i32*%c2,align 4
%c3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c4=call fastcc i8*%cr(i8*inreg%c3,i8*inreg%cG)
%c5=bitcast i8*%c4 to i32*
%c6=load i32,i32*%c5,align 4
%c7=icmp eq i32%c6,0
br i1%c7,label%c9,label%c8
c8:
ret i32%c6
c9:
%da=bitcast i8**%g to i8***
%db=load i8**,i8***%da,align 8
%dc=load i8*,i8**%db,align 8
%dd=getelementptr inbounds i8,i8*%dc,i64 8
%de=bitcast i8*%dd to i8**
%df=load i8*,i8**%de,align 8
%dg=getelementptr inbounds i8,i8*%df,i64 16
%dh=bitcast i8*%dg to i8*(i8*,i8*)**
%di=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dh,align 8
%dj=bitcast i8*%df to i8**
%dk=load i8*,i8**%dj,align 8
store i8*%dk,i8**%d,align 8
%dl=bitcast i8**%db to i8*
%dm=getelementptr inbounds i8,i8*%dl,i64 28
%dn=bitcast i8*%dm to i32*
%do=load i32,i32*%dn,align 4
%dp=getelementptr inbounds i8*,i8**%db,i64 3
%dq=bitcast i8**%dp to i32*
%dr=load i32,i32*%dq,align 4
%ds=getelementptr inbounds i8,i8*%dl,i64 36
%dt=bitcast i8*%ds to i32*
%du=load i32,i32*%dt,align 4
store i8*null,i8**%g,align 8
%dv=getelementptr inbounds i8*,i8**%db,i64 4
%dw=bitcast i8**%dv to i32*
%dx=load i32,i32*%dw,align 4
%dy=call i8*@sml_alloc(i32 inreg%aF)#0
%dz=or i32%at,1342177280
%dA=getelementptr inbounds i8,i8*%dy,i64 -4
%dB=bitcast i8*%dA to i32*
store i32%dz,i32*%dB,align 4
call void@llvm.memset.p0i8.i32(i8*%dy,i8 0,i32%aF,i1 false)
%dC=icmp eq i32%dr,0
%dD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dE=sext i32%an to i64
%dF=getelementptr inbounds i8,i8*%dy,i64%dE
br i1%dC,label%dI,label%dG
dG:
%dH=bitcast i8*%dF to i8**
store i8*%dD,i8**%dH,align 8
br label%dJ
dI:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%dF,i8*%dD,i32%do,i1 false)
br label%dJ
dJ:
%dK=icmp eq i32%dx,0
%dL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dM=sext i32%aq to i64
%dN=getelementptr inbounds i8,i8*%dy,i64%dM
br i1%dK,label%dQ,label%dO
dO:
%dP=bitcast i8*%dN to i8**
store i8*%dL,i8**%dP,align 8
br label%dR
dQ:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%dN,i8*%dL,i32%du,i1 false)
br label%dR
dR:
%dS=sext i32%at to i64
%dT=getelementptr inbounds i8,i8*%dy,i64%dS
%dU=bitcast i8*%dT to i32*
store i32%aE,i32*%dU,align 4
%dV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dW=call fastcc i8*%di(i8*inreg%dV,i8*inreg%dy)
%dX=bitcast i8*%dW to i32*
%dY=load i32,i32*%dX,align 4
ret i32%dY
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_465(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 20
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=getelementptr inbounds i8,i8*%a,i64 24
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%a,i64 28
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 44)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177320,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32%f,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%B,i64 12
%J=bitcast i8*%I to i32*
store i32%i,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32%l,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%B,i64 20
%N=bitcast i8*%M to i32*
store i32%o,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%B,i64 24
%P=bitcast i8*%O to i32*
store i32%r,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%B,i64 28
%R=bitcast i8*%Q to i32*
store i32%u,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%B,i64 32
%T=bitcast i8*%S to i32*
store i32%x,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%B,i64 36
%V=bitcast i8*%U to i32*
store i32%A,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%B,i64 40
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_464 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_1673 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_468(i8*inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,%b
%f=zext i1%e to i32
ret i32%f
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE(i32 inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=call i8*@sml_alloc(i32 inreg 12)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%c,i8**%b,align 8
store i32%a,i32*%d,align 4
%g=getelementptr inbounds i8,i8*%c,i64 8
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 4
%i=call i8*@sml_alloc(i32 inreg 28)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_468 to void(...)*),void(...)**%o,align 8
%p=getelementptr inbounds i8,i8*%i,i64 16
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_1675 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%i,i64 24
%s=bitcast i8*%r to i32*
store i32 -2147483647,i32*%s,align 4
ret i8*%i
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 1,label%K
i32 0,label%ah
i32 2,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@az,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 4
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=icmp eq i32%H,0
%J=select i1%I,i32 0,i32 2
br label%ah
K:
%L=getelementptr inbounds i8,i8*%i,i64 4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=icmp ult i32%N,3
br i1%O,label%ah,label%P
P:
call void@sml_matchcomp_bug()
%Q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@az,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=phi i32[%N,%K],[%l,%h],[%J,%E]
ret i32%ai
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 1,label%ah
i32 0,label%K
i32 2,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@aB,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 4
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=icmp eq i32%H,1
%J=select i1%I,i32 1,i32 2
br label%ah
K:
%L=getelementptr inbounds i8,i8*%i,i64 4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=icmp ult i32%N,3
br i1%O,label%ah,label%P
P:
call void@sml_matchcomp_bug()
%Q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@aB,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=phi i32[%N,%K],[%l,%h],[%J,%E]
ret i32%ai
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_479(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 24
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=add i32%j,-1
%l=sub i32 0,%j
%m=and i32%k,%l
%n=getelementptr inbounds i8,i8*%a,i64 32
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%k,%p
%r=add i32%q,%m
%s=sub i32 0,%p
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%a,i64 20
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%w,-1
%y=sub i32 0,%w
%z=and i32%x,%y
%A=add i32%p,-1
%B=add i32%A,%w
%C=add i32%B,%z
%D=and i32%C,%s
%E=add i32%p,7
%F=add i32%E,%D
%G=and i32%F,-8
%H=lshr i32%D,3
%I=lshr i32%z,3
%J=sub nsw i32%H,%I
%K=getelementptr inbounds i8,i8*%a,i64 28
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=shl i32%M,%J
%O=getelementptr inbounds i8,i8*%a,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=or i32%N,%Q
%S=or i32%G,4
%T=icmp eq i32%M,0
br i1%T,label%aa,label%U
U:
%V=bitcast i8*%a to i8**
%W=sext i32%t to i64
%X=getelementptr inbounds i8,i8*%b,i64%W
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
br label%aj
aa:
%ab=call i8*@sml_alloc(i32 inreg%p)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32%p,i32*%ad,align 4
%ae=load i8*,i8**%c,align 8
%af=sext i32%t to i64
%ag=getelementptr inbounds i8,i8*%ae,i64%af
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ab,i8*%ag,i32%p,i1 false)
%ah=bitcast i8**%e to i8***
%ai=load i8**,i8***%ah,align 8
br label%aj
aj:
%ak=phi i8**[%ai,%aa],[%V,%U]
%al=phi i8*[%ab,%aa],[%Z,%U]
store i8*%al,i8**%d,align 8
%am=load i8*,i8**%ak,align 8
store i8*%am,i8**%f,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%g,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i32*
%aA=load i32,i32*%az,align 4
%aB=icmp eq i32%aA,0
br i1%aB,label%aG,label%aC
aC:
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
br label%aS
aG:
%aH=getelementptr inbounds i8,i8*%ax,i64 20
%aI=bitcast i8*%aH to i32*
%aJ=load i32,i32*%aI,align 4
%aK=call i8*@sml_alloc(i32 inreg%aJ)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32%aJ,i32*%aM,align 4
%aN=load i8*,i8**%e,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aK,i8*%aO,i32%aJ,i1 false)
%aP=getelementptr inbounds i8,i8*%aN,i64 16
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
br label%aS
aS:
%aT=phi i32[%aR,%aG],[%aA,%aC]
%aU=phi i8*[%aN,%aG],[%ax,%aC]
%aV=phi i8*[%aK,%aG],[%aF,%aC]
store i8*%aV,i8**%c,align 8
%aW=getelementptr inbounds i8,i8*%aU,i64 20
%aX=bitcast i8*%aW to i32*
%aY=load i32,i32*%aX,align 4
%aZ=getelementptr inbounds i8,i8*%aU,i64 32
%a0=bitcast i8*%aZ to i32*
%a1=load i32,i32*%a0,align 4
store i8*null,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 28
%a3=bitcast i8*%a2 to i32*
%a4=load i32,i32*%a3,align 4
%a5=call i8*@sml_alloc(i32 inreg%S)#0
%a6=or i32%G,1342177280
%a7=getelementptr inbounds i8,i8*%a5,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32%a6,i32*%a8,align 4
store i8*%a5,i8**%e,align 8
call void@llvm.memset.p0i8.i32(i8*%a5,i8 0,i32%S,i1 false)
%a9=icmp eq i32%aT,0
%ba=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bb=sext i32%z to i64
%bc=getelementptr inbounds i8,i8*%a5,i64%bb
br i1%a9,label%bf,label%bd
bd:
%be=bitcast i8*%bc to i8**
store i8*%ba,i8**%be,align 8
br label%bg
bf:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bc,i8*%ba,i32%aY,i1 false)
br label%bg
bg:
%bh=icmp eq i32%a4,0
%bi=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bj=sext i32%D to i64
%bk=getelementptr inbounds i8,i8*%a5,i64%bj
br i1%bh,label%bn,label%bl
bl:
%bm=bitcast i8*%bk to i8**
store i8*%bi,i8**%bm,align 8
br label%bo
bn:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bk,i8*%bi,i32%a1,i1 false)
br label%bo
bo:
%bp=sext i32%G to i64
%bq=getelementptr inbounds i8,i8*%a5,i64%bp
%br=bitcast i8*%bq to i32*
store i32%R,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=load i8*,i8**%g,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%e,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
ret i8*%bs
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_480(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 12
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=shl i32%q,1
%s=or i32%r,1
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%m,i64 16
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%w,%B
%D=add i32%C,%y
%E=sub i32 0,%B
%F=and i32%D,%E
%G=icmp eq i32%q,0
br i1%G,label%N,label%H
H:
%I=load i8*,i8**%c,align 8
%J=sext i32%F to i64
%K=getelementptr inbounds i8,i8*%I,i64%J
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
br label%U
N:
%O=call i8*@sml_alloc(i32 inreg%B)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32%B,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=sext i32%F to i64
%T=getelementptr inbounds i8,i8*%R,i64%S
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%O,i8*%T,i32%B,i1 false)
br label%U
U:
%V=phi i8*[%O,%N],[%M,%H]
store i8*%V,i8**%d,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%f,align 8
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
%ag=getelementptr inbounds i8,i8*%ac,i64 12
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=getelementptr inbounds i8,i8*%ac,i64 20
%ak=bitcast i8*%aj to i32*
%al=load i32,i32*%ak,align 4
%am=getelementptr inbounds i8,i8*%ac,i64 24
%an=bitcast i8*%am to i32*
%ao=load i32,i32*%an,align 4
%ap=getelementptr inbounds i8,i8*%ac,i64 28
%aq=bitcast i8*%ap to i32*
%ar=load i32,i32*%aq,align 4
%as=call i8*@sml_alloc(i32 inreg 44)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177320,i32*%au,align 4
store i8*%as,i8**%g,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=icmp eq i32%ai,0
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
br i1%ax,label%aC,label%aA
aA:
%aB=bitcast i8*%az to i8**
store i8*%ay,i8**%aB,align 8
br label%aD
aC:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%az,i8*%ay,i32%af,i1 false)
br label%aD
aD:
%aE=getelementptr inbounds i8,i8*%as,i64 16
%aF=bitcast i8*%aE to i32*
store i32%ai,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%as,i64 20
%aH=bitcast i8*%aG to i32*
store i32%af,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%as,i64 24
%aJ=bitcast i8*%aI to i32*
store i32%al,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%as,i64 28
%aL=bitcast i8*%aK to i32*
store i32%ao,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%as,i64 32
%aN=bitcast i8*%aM to i32*
store i32%ar,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%as,i64 40
%aP=bitcast i8*%aO to i32*
store i32%s,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 28)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177304,i32*%aS,align 4
%aT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_479 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_479 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 24
%a0=bitcast i8*%aZ to i32*
store i32 -2147483647,i32*%a0,align 4
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=call fastcc i8*%Z(i8*inreg%a1,i8*inreg%aQ)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=bitcast i8**%e to i8***
%a9=load i8**,i8***%a8,align 8
%ba=load i8*,i8**%a9,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=tail call fastcc i8*%a5(i8*inreg%a7,i8*inreg%bd)
ret i8*%be
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_481(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%f,align 8
%q=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=load i8*,i8**%d,align 8
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=getelementptr inbounds i8,i8*%w,i64 12
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=getelementptr inbounds i8,i8*%w,i64 16
%J=bitcast i8*%I to i32*
%K=load i32,i32*%J,align 4
store i8*null,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%w,i64 20
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 36)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177312,i32*%Q,align 4
store i8*%O,i8**%d,align 8
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32%y,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%O,i64 12
%W=bitcast i8*%V to i32*
store i32%B,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32%E,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%O,i64 20
%aa=bitcast i8*%Z to i32*
store i32%H,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%O,i64 24
%ac=bitcast i8*%ab to i32*
store i32%K,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%O,i64 28
%ae=bitcast i8*%ad to i32*
store i32%N,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%O,i64 32
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_480 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_480 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
%as=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%at=call fastcc i8*%t(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=bitcast i8**%c to i8***
%aA=load i8**,i8***%az,align 8
store i8*null,i8**%c,align 8
%aB=load i8*,i8**%aA,align 8
%aC=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%aB)
%aD=load i8*,i8**%f,align 8
%aE=tail call fastcc i8*%n(i8*inreg%aD,i8*inreg%aC)
ret i8*%aE
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_482(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)unnamed_addr#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_481 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_481 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_484(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%l to i8**
store i8*null,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%l,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=add i32%r,7
%t=sub i32 0,%r
%u=and i32%s,%t
%v=add i32%s,%u
%w=and i32%v,-8
%x=lshr i32%u,3
%y=getelementptr inbounds i8,i8*%l,i64 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=shl i32%A,%x
%C=or i32%B,1
%D=or i32%w,4
%E=bitcast i8*%n to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%d,align 8
%G=load i8*,i8**%o,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%n,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%J(i8*inreg%L,i8*inreg%O)
store i8*%P,i8**%c,align 8
%Q=load i8*,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 12
%S=bitcast i8*%R to i32*
%T=load i32,i32*%S,align 4
store i8*null,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%Q,i64 8
%V=bitcast i8*%U to i32*
%W=load i32,i32*%V,align 4
%X=call i8*@sml_alloc(i32 inreg%D)#0
%Y=or i32%w,1342177280
%Z=getelementptr inbounds i8,i8*%X,i64 -4
%aa=bitcast i8*%Z to i32*
store i32%Y,i32*%aa,align 4
call void@llvm.memset.p0i8.i32(i8*%X,i8 0,i32%D,i1 false)
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%X to i8**
store i8*%ab,i8**%ac,align 8
%ad=icmp eq i32%W,0
%ae=load i8*,i8**%c,align 8
%af=sext i32%u to i64
%ag=getelementptr inbounds i8,i8*%X,i64%af
br i1%ad,label%aj,label%ah
ah:
%ai=bitcast i8*%ag to i8**
store i8*%ae,i8**%ai,align 8
br label%ak
aj:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ag,i8*%ae,i32%T,i1 false)
br label%ak
ak:
%al=sext i32%w to i64
%am=getelementptr inbounds i8,i8*%X,i64%al
%an=bitcast i8*%am to i32*
store i32%C,i32*%an,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_485(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=bitcast i8**%e to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=bitcast i8**%B to i8*
%E=getelementptr inbounds i8*,i8**%B,i64 3
%F=bitcast i8**%E to i32*
%G=load i32,i32*%F,align 4
%H=getelementptr inbounds i8,i8*%D,i64 28
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%h,align 8
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32%G,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%K,i64 12
%S=bitcast i8*%R to i32*
store i32%J,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_484 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_484 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=call fastcc i8*%x(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%f,align 8
%an=load i8*,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 36
%ap=bitcast i8*%ao to i32*
%aq=load i32,i32*%ap,align 4
%ar=getelementptr inbounds i8,i8*%an,i64 8
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=getelementptr inbounds i8,i8*%an,i64 12
%av=bitcast i8*%au to i32*
%aw=load i32,i32*%av,align 4
%ax=getelementptr inbounds i8,i8*%an,i64 44
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=getelementptr inbounds i8,i8*%an,i64 16
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%an,i64 20
%aE=bitcast i8*%aD to i32*
%aF=load i32,i32*%aE,align 4
%aG=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_482(i32 inreg%aq,i32 inreg%at,i32 inreg%aw,i32 inreg%az,i32 inreg%aC,i32 inreg%aF)
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%e,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=call fastcc i8*%aJ(i8*inreg%aW,i8*inreg%aM)
%aY=load i8*,i8**%f,align 8
%aZ=tail call fastcc i8*%ak(i8*inreg%aY,i8*inreg%aX)
ret i8*%aZ
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_486(i8*inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e)#4 gc"smlsharp"{
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%f,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 20
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=getelementptr inbounds i8,i8*%a,i64 24
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%a,i64 28
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 52)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177328,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32%l,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%B,i64 12
%J=bitcast i8*%I to i32*
store i32%o,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32%r,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%B,i64 20
%N=bitcast i8*%M to i32*
store i32%u,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%B,i64 24
%P=bitcast i8*%O to i32*
store i32%x,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%B,i64 28
%R=bitcast i8*%Q to i32*
store i32%A,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%B,i64 32
%T=bitcast i8*%S to i32*
store i32%b,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%B,i64 36
%V=bitcast i8*%U to i32*
store i32%c,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%B,i64 40
%X=bitcast i8*%W to i32*
store i32%d,i32*%X,align 4
%Y=getelementptr inbounds i8,i8*%B,i64 44
%Z=bitcast i8*%Y to i32*
store i32%e,i32*%Z,align 4
%aa=getelementptr inbounds i8,i8*%B,i64 48
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
%af=load i8*,i8**%g,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_485 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_485 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 24
%am=bitcast i8*%al to i32*
store i32 -2147483647,i32*%am,align 4
ret i8*%ac
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_487(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 20
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 36)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177312,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32%f,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%v,i64 12
%D=bitcast i8*%C to i32*
store i32%i,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32%l,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%v,i64 20
%H=bitcast i8*%G to i32*
store i32%o,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%v,i64 24
%J=bitcast i8*%I to i32*
store i32%r,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%v,i64 28
%L=bitcast i8*%K to i32*
store i32%u,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%v,i64 32
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i32,i32,i32,i32)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_486 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_1680 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 -2147483647,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List23nubE_491(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 20
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%p,-1
%r=sub i32 0,%p
%s=and i32%q,%r
%t=shl i32%p,1
%u=add i32%t,-1
%v=add i32%u,%s
%w=and i32%v,%r
%x=add i32%p,7
%y=add i32%x,%w
%z=and i32%y,-8
%A=lshr i32%w,3
%B=lshr i32%s,3
%C=sub nsw i32%A,%B
%D=getelementptr inbounds i8,i8*%l,i64 16
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=shl i32%F,%C
%H=or i32%G,%F
%I=or i32%z,4
%J=bitcast i8*%l to i8**
%K=load i8*,i8**%J,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%f,align 8
%Q=icmp eq i32%F,0
br i1%Q,label%V,label%R
R:
%S=getelementptr inbounds i8,i8*%l,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
br label%ah
V:
%W=call i8*@sml_alloc(i32 inreg%p)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32%p,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%W,i8*%aa,i32%p,i1 false)
%ab=getelementptr inbounds i8,i8*%Z,i64 20
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=getelementptr inbounds i8,i8*%Z,i64 16
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
br label%ah
ah:
%ai=phi i32[%ag,%V],[%F,%R]
%aj=phi i32[%ad,%V],[%p,%R]
%ak=phi i8*[%W,%V],[%U,%R]
store i8*%ak,i8**%e,align 8
store i8*null,i8**%c,align 8
%al=call i8*@sml_alloc(i32 inreg%I)#0
%am=or i32%z,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%I,i1 false)
%ap=icmp eq i32%ai,0
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=sext i32%s to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%az,label%at
at:
%au=bitcast i8*%as to i8**
store i8*%aq,i8**%au,align 8
%av=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aw=sext i32%w to i64
%ax=getelementptr inbounds i8,i8*%al,i64%aw
%ay=bitcast i8*%ax to i8**
store i8*%av,i8**%ay,align 8
br label%aD
az:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%aj,i1 false)
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=sext i32%w to i64
%aC=getelementptr inbounds i8,i8*%al,i64%aB
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aC,i8*%aA,i32%aj,i1 false)
br label%aD
aD:
%aE=sext i32%z to i64
%aF=getelementptr inbounds i8,i8*%al,i64%aE
%aG=bitcast i8*%aF to i32*
store i32%H,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=call fastcc i8*%N(i8*inreg%aH,i8*inreg%al)
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=icmp ne i32%aK,0
%aM=zext i1%aL to i32
ret i32%aM
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_490(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%a,%q]
%r=phi i8*[%m,%l],[%c,%q]
%s=bitcast i8*%p to i32*
%t=load i32,i32*%s,align 4
%u=shl i32%t,1
%v=or i32%u,1
%w=getelementptr inbounds i8,i8*%p,i64 4
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=add i32%y,-1
%A=sub i32 0,%y
%B=and i32%z,%A
%C=add i32%y,7
%D=add i32%C,%B
%E=and i32%D,-8
%F=add i32%E,15
%G=and i32%F,-8
%H=lshr i32%D,3
%I=lshr i32%B,3
%J=sub nsw i32%H,%I
%K=shl i32 1,%J
%L=or i32%K,%t
%M=or i32%G,4
%N=icmp eq i8*%r,null
br i1%N,label%O,label%P
O:
ret i8*null
P:
%Q=icmp eq i32%t,0
br i1%Q,label%W,label%R
R:
%S=sext i32%B to i64
%T=getelementptr inbounds i8,i8*%r,i64%S
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
br label%ah
W:
%X=call i8*@sml_alloc(i32 inreg%y)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32%y,i32*%Z,align 4
%aa=load i8*,i8**%d,align 8
%ab=sext i32%B to i64
%ac=getelementptr inbounds i8,i8*%aa,i64%ab
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%X,i8*%ac,i32%y,i1 false)
%ad=load i8*,i8**%g,align 8
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 4
%ag=bitcast i8*%af to i32*
br label%ah
ah:
%ai=phi i32*[%ag,%W],[%x,%R]
%aj=phi i32*[%ae,%W],[%s,%R]
%ak=phi i8*[%X,%W],[%V,%R]
store i8*%ak,i8**%f,align 8
%al=load i32,i32*%aj,align 4
%am=load i32,i32*%ai,align 4
%an=call fastcc i8*@_SMLFN4List6filterE(i32 inreg%al,i32 inreg%am)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%h,align 8
%at=load i8*,i8**%g,align 8
%au=getelementptr inbounds i8,i8*%at,i64 4
%av=bitcast i8*%au to i32*
%aw=load i32,i32*%av,align 4
%ax=bitcast i8*%at to i32*
%ay=load i32,i32*%ax,align 4
%az=call i8*@sml_alloc(i32 inreg 28)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177304,i32*%aB,align 4
store i8*%az,i8**%i,align 8
%aC=load i8*,i8**%e,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=icmp eq i32%ay,0
%aF=load i8*,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 8
br i1%aE,label%aJ,label%aH
aH:
%aI=bitcast i8*%aG to i8**
store i8*%aF,i8**%aI,align 8
br label%aK
aJ:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aG,i8*%aF,i32%aw,i1 false)
br label%aK
aK:
%aL=getelementptr inbounds i8,i8*%az,i64 16
%aM=bitcast i8*%aL to i32*
store i32%ay,i32*%aM,align 4
%aN=getelementptr inbounds i8,i8*%az,i64 20
%aO=bitcast i8*%aN to i32*
store i32%aw,i32*%aO,align 4
%aP=getelementptr inbounds i8,i8*%az,i64 24
%aQ=bitcast i8*%aP to i32*
store i32%v,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
%aU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_491 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 16
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_1682 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 1,i32*%a1,align 4
%a2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a3=call fastcc i8*%aq(i8*inreg%a2,i8*inreg%aR)
%a4=getelementptr inbounds i8,i8*%a3,i64 16
%a5=bitcast i8*%a4 to i8*(i8*,i8*)**
%a6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a5,align 8
%a7=bitcast i8*%a3 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ba=sext i32%E to i64
%bb=getelementptr inbounds i8,i8*%a9,i64%ba
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=call fastcc i8*%a6(i8*inreg%a8,i8*inreg%bd)
%bf=load i8*,i8**%e,align 8
%bg=load i8*,i8**%g,align 8
store i8*null,i8**%e,align 8
%bh=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_490(i8*inreg%bg,i8*inreg%bf,i8*inreg%be)
store i8*%bh,i8**%d,align 8
%bi=load i8*,i8**%g,align 8
%bj=getelementptr inbounds i8,i8*%bi,i64 4
%bk=bitcast i8*%bj to i32*
%bl=load i32,i32*%bk,align 4
store i8*null,i8**%g,align 8
%bm=bitcast i8*%bi to i32*
%bn=load i32,i32*%bm,align 4
%bo=call i8*@sml_alloc(i32 inreg%M)#0
%bp=or i32%G,1342177280
%bq=getelementptr inbounds i8,i8*%bo,i64 -4
%br=bitcast i8*%bq to i32*
store i32%bp,i32*%br,align 4
call void@llvm.memset.p0i8.i32(i8*%bo,i8 0,i32%M,i1 false)
%bs=icmp eq i32%bn,0
%bt=load i8*,i8**%f,align 8
%bu=sext i32%B to i64
%bv=getelementptr inbounds i8,i8*%bo,i64%bu
br i1%bs,label%by,label%bw
bw:
%bx=bitcast i8*%bv to i8**
store i8*%bt,i8**%bx,align 8
br label%bz
by:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bv,i8*%bt,i32%bl,i1 false)
br label%bz
bz:
%bA=load i8*,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%bo,i64%ba
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=sext i32%G to i64
%bE=getelementptr inbounds i8,i8*%bo,i64%bD
%bF=bitcast i8*%bE to i32*
store i32%L,i32*%bF,align 4
ret i8*%bo
}
define internal fastcc i8*@_SMLL5merge_494(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%e,align 8
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%c,%q]
%r=phi i8*[%m,%l],[%b,%q]
%s=icmp eq i8*%r,null
br i1%s,label%t,label%x
t:
%u=icmp eq i8*%p,null
br i1%u,label%bv,label%v
v:
%w=phi i8*[%p,%t],[%r,%bv]
ret i8*%w
x:
%y=bitcast i8*%r to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=icmp eq i8*%p,null
br i1%A,label%bv,label%B
B:
%C=bitcast i8*%p to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%h,align 8
%E=load i8*,i8**%f,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%i,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=load i8*,i8**%g,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%h,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%V=call fastcc i8*%H(i8*inreg%U,i8*inreg%K)
%W=bitcast i8*%V to i32*
%X=load i32,i32*%W,align 4
switch i32%X,label%Y[
i32 0,label%a0
i32 1,label%aI
i32 2,label%aq
]
Y:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
call void@sml_matchcomp_bug()
%Z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Z,i8**%d,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
store i8*%aa,i8**%e,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@aD,i64 0,i32 2,i64 0),i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 60)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177336,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%aj,i64 56
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
%ap=bitcast i8*%aj to i8**
store i8*%ao,i8**%ap,align 8
call void@sml_raise(i8*inreg%aj)#1
unreachable
aq:
store i8*null,i8**%h,align 8
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%d,align 8
%aw=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%ax=call fastcc i8*@_SMLL5merge_494(i8*inreg%aw,i8*inreg%au,i8*inreg%av)
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
ret i8*%ay
aI:
store i8*null,i8**%g,align 8
%aJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
%aN=load i8*,i8**%e,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%aP=call fastcc i8*@_SMLL5merge_494(i8*inreg%aO,i8*inreg%aN,i8*inreg%aM)
store i8*%aP,i8**%d,align 8
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
%aT=load i8*,i8**%h,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%d,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aQ,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
ret i8*%aQ
a0:
%a1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
%a5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%a5,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ba=call fastcc i8*@_SMLL5merge_494(i8*inreg%a9,i8*inreg%a4,i8*inreg%a8)
store i8*%ba,i8**%d,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%e,align 8
%be=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
%bo=load i8*,i8**%g,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%e,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bl,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
ret i8*%bl
bv:
br label%v
}
define internal fastcc i8*@_SMLL10mergeLists_498(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
store i8*%l,i8**%d,align 8
%o=icmp eq i8*%n,null
br i1%o,label%p,label%q
p:
ret i8*null
q:
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=icmp eq i8*%v,null
br i1%w,label%x,label%H
x:
store i8*null,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*null,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%y
H:
store i8*%v,i8**%e,align 8
%I=bitcast i8*%v to i8**
%J=load i8*,i8**%I,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*@_SMLL5merge_494(i8*inreg%l,i8*inreg%s,i8*inreg%J)
store i8*%K,i8**%c,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%L,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=call fastcc i8*@_SMLL10mergeLists_498(i8*inreg%P,i8*inreg%O)
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLL4sort_502(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=getelementptr inbounds i8,i8*%c,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177296,i32*%e,align 4
%f=load i8*,i8**%b,align 8
%g=bitcast i8*%c to i8**
store i8*%f,i8**%g,align 8
%h=getelementptr inbounds i8,i8*%c,i64 8
%i=bitcast i8*%h to i8**
store i8*null,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%c,i64 16
%k=bitcast i8*%j to i32*
store i32 3,i32*%k,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLL4sort_504(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%f to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%f,align 8
%q=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aE,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
%E=load i8*,i8**%f,align 8
%F=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%F)
%G=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%G)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%E,i8**%c,align 8
br label%H
H:
%I=phi i8*[%ab,%aa],[%D,%n]
store i8*%I,i8**%d,align 8
%J=load atomic i32,i32*@sml_check_flag unordered,align 4
%K=icmp eq i32%J,0
br i1%K,label%N,label%L
L:
call void@sml_check(i32 inreg%J)
%M=load i8*,i8**%d,align 8
br label%N
N:
%O=phi i8*[%M,%L],[%I,%H]
store i8*null,i8**%d,align 8
%P=load i8*,i8**%c,align 8
%Q=icmp eq i8*%O,null
br i1%Q,label%R,label%S
R:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%G)
br label%ac
S:
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=icmp eq i8*%V,null
br i1%W,label%X,label%aa
X:
%Y=bitcast i8*%O to i8**
%Z=load i8*,i8**%Y,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%G)
br label%ac
aa:
%ab=call fastcc i8*@_SMLL10mergeLists_498(i8*inreg%P,i8*inreg%O)
br label%H
ac:
%ad=phi i8*[null,%R],[%Z,%X]
ret i8*%ad
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_507(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=getelementptr inbounds i8,i8*%a,i64 4
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=add i32%g,%l
%n=add i32%m,%i
%o=sub i32 0,%l
%p=and i32%n,%o
%q=bitcast i8*%a to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%y,label%t
t:
%u=sext i32%p to i64
%v=getelementptr inbounds i8,i8*%b,i64%u
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
y:
%z=call i8*@sml_alloc(i32 inreg%l)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32%l,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%p to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%E,i32%l,i1 false)
ret i8*%z
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_508(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%d,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%n to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%b,%i]
%r=phi i8**[%n,%k],[%j,%i]
%s=phi i8*[%l,%k],[%a,%i]
%t=getelementptr inbounds i8,i8*%s,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=shl i32%v,1
%A=add i32%z,-1
%B=add i32%A,%y
%C=and i32%B,%x
%D=add i32%v,7
%E=add i32%D,%C
%F=and i32%E,-8
%G=lshr i32%C,3
%H=lshr i32%y,3
%I=sub nsw i32%G,%H
%J=getelementptr inbounds i8,i8*%s,i64 8
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=shl i32%L,%I
%N=or i32%M,%L
%O=or i32%F,4
%P=bitcast i8*%s to i8**
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=load i8*,i8**%r,align 8
store i8*%W,i8**%e,align 8
%X=icmp eq i32%L,0
br i1%X,label%ag,label%Y
Y:
store i8*null,i8**%e,align 8
%Z=sext i32%y to i64
%aa=getelementptr inbounds i8,i8*%W,i64%Z
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%q,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%c,align 8
br label%az
ag:
%ah=call i8*@sml_alloc(i32 inreg%v)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32%v,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=sext i32%y to i64
%am=getelementptr inbounds i8,i8*%ak,i64%al
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ah,i8*%am,i32%v,i1 false)
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 12
%ap=bitcast i8*%ao to i32*
%aq=load i32,i32*%ap,align 4
%ar=getelementptr inbounds i8,i8*%an,i64 8
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=load i8*,i8**%c,align 8
store i8*%ah,i8**%e,align 8
%av=getelementptr inbounds i8,i8*%au,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%c,align 8
%ay=icmp eq i32%at,0
br i1%ay,label%aH,label%az
az:
%aA=phi i8*[%af,%Y],[%ax,%ag]
%aB=phi i32[%v,%Y],[%aq,%ag]
%aC=phi i32[%L,%Y],[%at,%ag]
store i8*null,i8**%c,align 8
%aD=sext i32%y to i64
%aE=getelementptr inbounds i8,i8*%aA,i64%aD
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
br label%aV
aH:
%aI=call i8*@sml_alloc(i32 inreg%aq)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32%aq,i32*%aK,align 4
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=sext i32%y to i64
%aN=getelementptr inbounds i8,i8*%aL,i64%aM
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aI,i8*%aN,i32%aq,i1 false)
%aO=load i8*,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 12
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=getelementptr inbounds i8,i8*%aO,i64 8
%aT=bitcast i8*%aS to i32*
%aU=load i32,i32*%aT,align 4
br label%aV
aV:
%aW=phi i1[true,%aH],[false,%az]
%aX=phi i32[%aq,%aH],[%aB,%az]
%aY=phi i64[%aM,%aH],[%aD,%az]
%aZ=phi i32[%aU,%aH],[%aC,%az]
%a0=phi i32[%aR,%aH],[%aB,%az]
%a1=phi i8*[%aI,%aH],[%aG,%az]
store i8*%a1,i8**%c,align 8
store i8*null,i8**%d,align 8
%a2=call i8*@sml_alloc(i32 inreg%O)#0
%a3=or i32%F,1342177280
%a4=getelementptr inbounds i8,i8*%a2,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32%a3,i32*%a5,align 4
call void@llvm.memset.p0i8.i32(i8*%a2,i8 0,i32%O,i1 false)
%a6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64%aY
br i1%aW,label%ba,label%a8
a8:
%a9=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a9,align 8
br label%bb
ba:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a7,i8*%a6,i32%aX,i1 false)
br label%bb
bb:
%bc=icmp eq i32%aZ,0
%bd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%be=sext i32%C to i64
%bf=getelementptr inbounds i8,i8*%a2,i64%be
br i1%bc,label%bi,label%bg
bg:
%bh=bitcast i8*%bf to i8**
store i8*%bd,i8**%bh,align 8
br label%bj
bi:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bf,i8*%bd,i32%a0,i1 false)
br label%bj
bj:
%bk=sext i32%F to i64
%bl=getelementptr inbounds i8,i8*%a2,i64%bk
%bm=bitcast i8*%bl to i32*
store i32%N,i32*%bm,align 4
%bn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bo=call fastcc i8*%T(i8*inreg%bn,i8*inreg%a2)
%bp=bitcast i8*%bo to i32*
%bq=load i32,i32*%bp,align 4
ret i32%bq
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_509(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%b,%m]
%n=phi i8*[%i,%h],[%a,%m]
%o=getelementptr inbounds i8,i8*%n,i64 20
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=add i32%q,-1
%s=sub i32 0,%q
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%n,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%r,%w
%y=add i32%x,%t
%z=sub i32 0,%w
%A=and i32%y,%z
%B=add i32%w,7
%C=add i32%B,%A
%D=and i32%C,-8
%E=lshr i32%A,3
%F=lshr i32%t,3
%G=sub nsw i32%E,%F
%H=getelementptr inbounds i8,i8*%n,i64 8
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=shl i32%J,%G
%L=getelementptr inbounds i8,i8*%n,i64 16
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=or i32%K,%N
%P=or i32%D,4
%Q=bitcast i8*%n to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%U(i8*inreg%W,i8*inreg%l)
store i8*%X,i8**%c,align 8
%Y=load i8*,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 20
%aa=bitcast i8*%Z to i32*
%ab=load i32,i32*%aa,align 4
%ac=getelementptr inbounds i8,i8*%Y,i64 16
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=getelementptr inbounds i8,i8*%Y,i64 12
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
store i8*null,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=call i8*@sml_alloc(i32 inreg%P)#0
%am=or i32%D,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%P,i1 false)
%ap=icmp eq i32%ae,0
%aq=load i8*,i8**%c,align 8
%ar=sext i32%t to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%av,label%at
at:
%au=bitcast i8*%as to i8**
store i8*%aq,i8**%au,align 8
br label%aw
av:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%ab,i1 false)
br label%aw
aw:
%ax=icmp eq i32%ak,0
%ay=load i8*,i8**%e,align 8
%az=sext i32%A to i64
%aA=getelementptr inbounds i8,i8*%al,i64%az
br i1%ax,label%aD,label%aB
aB:
%aC=bitcast i8*%aA to i8**
store i8*%ay,i8**%aC,align 8
br label%aE
aD:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aA,i8*%ay,i32%ah,i1 false)
br label%aE
aE:
%aF=sext i32%D to i64
%aG=getelementptr inbounds i8,i8*%al,i64%aF
%aH=bitcast i8*%aG to i32*
store i32%O,i32*%aH,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_510(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%f,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%a,%q]
%r=getelementptr inbounds i8,i8*%p,i64 16
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%p,i64 20
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg%t,i32 inreg%w)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%g,align 8
%D=load i8*,i8**%f,align 8
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=getelementptr inbounds i8,i8*%D,i64 20
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=getelementptr inbounds i8,i8*%D,i64 28
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=bitcast i8*%N to i32*
%P=getelementptr inbounds i8,i8*%N,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%N,i8**%h,align 8
store i32%G,i32*%O,align 4
%R=getelementptr inbounds i8,i8*%N,i64 4
%S=bitcast i8*%R to i32*
store i32%J,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i32*
store i32%M,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
%aa=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_507 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_507 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 24
%ah=bitcast i8*%ag to i32*
store i32 1,i32*%ah,align 4
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=call fastcc i8*%A(i8*inreg%ai,i8*inreg%X)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%j,align 8
%ap=load i8*,i8**%f,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%ap,i64 24
%au=bitcast i8*%at to i32*
%av=load i32,i32*%au,align 4
%aw=getelementptr inbounds i8,i8*%ap,i64 28
%ax=bitcast i8*%aw to i32*
%ay=load i32,i32*%ax,align 4
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%h,align 8
%aC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i32*
store i32%av,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%az,i64 12
%aH=bitcast i8*%aG to i32*
store i32%ay,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%az,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 1,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 28)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177304,i32*%aM,align 4
%aN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_508 to void(...)*),void(...)**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_1689 to void(...)*),void(...)**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 24
%aU=bitcast i8*%aT to i32*
store i32 -2147483647,i32*%aU,align 4
%aV=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aV)
%aW=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aW)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%aK,i8**%c,align 8
%aX=call i8*@sml_alloc(i32 inreg 12)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177288,i32*%aZ,align 4
store i8*%aX,i8**%d,align 8
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 28)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177304,i32*%a6,align 4
%a7=load i8*,i8**%d,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4sort_504 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4sort_504 to void(...)*),void(...)**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 24
%be=bitcast i8*%bd to i32*
store i32 -2147483647,i32*%be,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aW)
store i8*%a7,i8**%i,align 8
%bf=load i8*,i8**%f,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i32*
%bi=load i32,i32*%bh,align 4
%bj=getelementptr inbounds i8,i8*%bf,i64 20
%bk=bitcast i8*%bj to i32*
%bl=load i32,i32*%bk,align 4
%bm=call fastcc i8*@_SMLFN4List3mapE(i32 inreg%bi,i32 inreg%bl,i32 inreg 1,i32 inreg 8)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%h,align 8
%bs=bitcast i8**%f to i8***
%bt=load i8**,i8***%bs,align 8
%bu=load i8*,i8**%bt,align 8
store i8*%bu,i8**%g,align 8
%bv=bitcast i8**%bt to i8*
%bw=getelementptr inbounds i8*,i8**%bt,i64 2
%bx=bitcast i8**%bw to i32*
%by=load i32,i32*%bx,align 4
%bz=getelementptr inbounds i8,i8*%bv,i64 20
%bA=bitcast i8*%bz to i32*
%bB=load i32,i32*%bA,align 4
%bC=getelementptr inbounds i8*,i8**%bt,i64 3
%bD=bitcast i8**%bC to i32*
%bE=load i32,i32*%bD,align 4
store i8*null,i8**%f,align 8
%bF=getelementptr inbounds i8,i8*%bv,i64 28
%bG=bitcast i8*%bF to i32*
%bH=load i32,i32*%bG,align 4
%bI=call i8*@sml_alloc(i32 inreg 28)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177304,i32*%bK,align 4
store i8*%bI,i8**%f,align 8
%bL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to i32*
store i32%by,i32*%bO,align 4
%bP=getelementptr inbounds i8,i8*%bI,i64 12
%bQ=bitcast i8*%bP to i32*
store i32%bB,i32*%bQ,align 4
%bR=getelementptr inbounds i8,i8*%bI,i64 16
%bS=bitcast i8*%bR to i32*
store i32%bE,i32*%bS,align 4
%bT=getelementptr inbounds i8,i8*%bI,i64 20
%bU=bitcast i8*%bT to i32*
store i32%bH,i32*%bU,align 4
%bV=getelementptr inbounds i8,i8*%bI,i64 24
%bW=bitcast i8*%bV to i32*
store i32 1,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 28)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177304,i32*%bZ,align 4
%b0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bX,i64 8
%b3=bitcast i8*%b2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_509 to void(...)*),void(...)**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bX,i64 16
%b5=bitcast i8*%b4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_509 to void(...)*),void(...)**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bX,i64 24
%b7=bitcast i8*%b6 to i32*
store i32 1,i32*%b7,align 4
%b8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b9=call fastcc i8*%bp(i8*inreg%b8,i8*inreg%bX)
%ca=getelementptr inbounds i8,i8*%b9,i64 16
%cb=bitcast i8*%ca to i8*(i8*,i8*)**
%cc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cb,align 8
%cd=bitcast i8*%b9 to i8**
%ce=load i8*,i8**%cd,align 8
%cf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cg=call fastcc i8*%cc(i8*inreg%ce,i8*inreg%cf)
%ch=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ci=call fastcc i8*@_SMLL4sort_504(i8*inreg%ch,i8*inreg%cg)
%cj=load i8*,i8**%j,align 8
%ck=tail call fastcc i8*%am(i8*inreg%cj,i8*inreg%ci)
ret i8*%ck
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_511(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 12
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%a,i64 20
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=call i8*@sml_alloc(i32 inreg 36)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177312,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32%j,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%t,i64 20
%E=bitcast i8*%D to i32*
store i32%m,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%t,i64 24
%G=bitcast i8*%F to i32*
store i32%p,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%t,i64 28
%I=bitcast i8*%H to i32*
store i32%s,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%t,i64 32
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_510 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_510 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_512(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_511 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_511 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define internal fastcc i32@_SMLL4quot_518(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%j],[%a,%h]
%p=phi i8**[%l,%j],[%i,%h]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%o,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%t(i8*inreg%J,i8*inreg%z)
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=icmp eq i32%M,0
%O=zext i1%N to i32
ret i32%O
}
define internal fastcc i8*@_SMLL4quot_515(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=icmp eq i8*%m,null
br i1%o,label%p,label%q
p:
ret i8*null
q:
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=call fastcc i8*@_SMLFN4List9partitionE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%g,align 8
%C=load i8*,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
%M=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLL4quot_518 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4quot_1691 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 24
%T=bitcast i8*%S to i32*
store i32 -2147483647,i32*%T,align 4
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*%w(i8*inreg%U,i8*inreg%J)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ae)
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=call fastcc i8*@_SMLL4quot_515(i8*inreg%al,i8*inreg%ak)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%f,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%f,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
ret i8*%ax
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_519(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=getelementptr inbounds i8,i8*%a,i64 4
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=add i32%g,%l
%n=add i32%m,%i
%o=sub i32 0,%l
%p=and i32%n,%o
%q=bitcast i8*%a to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%y,label%t
t:
%u=sext i32%p to i64
%v=getelementptr inbounds i8,i8*%b,i64%u
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
y:
%z=call i8*@sml_alloc(i32 inreg%l)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32%l,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%p to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%E,i32%l,i1 false)
ret i8*%z
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_520(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%e,align 8
%o=bitcast i8**%m to i8*
br label%p
p:
%q=phi i8*[%n,%k],[%a,%i]
%r=phi i8*[%o,%k],[%b,%i]
%s=phi i8**[%m,%k],[%j,%i]
%t=getelementptr inbounds i8,i8*%q,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=shl i32%v,1
%A=add i32%z,-1
%B=add i32%A,%y
%C=and i32%B,%x
%D=add i32%v,7
%E=add i32%D,%C
%F=and i32%E,-8
%G=lshr i32%C,3
%H=lshr i32%y,3
%I=sub nsw i32%G,%H
%J=getelementptr inbounds i8,i8*%q,i64 8
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=shl i32%L,%I
%N=or i32%M,%L
%O=or i32%F,4
%P=load i8*,i8**%s,align 8
store i8*%P,i8**%d,align 8
%Q=icmp eq i32%L,0
br i1%Q,label%Z,label%R
R:
store i8*null,i8**%d,align 8
%S=sext i32%y to i64
%T=getelementptr inbounds i8,i8*%P,i64%S
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%r,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
br label%ap
Z:
%aa=call i8*@sml_alloc(i32 inreg%v)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32%v,i32*%ac,align 4
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=sext i32%y to i64
%af=getelementptr inbounds i8,i8*%ad,i64%ae
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aa,i8*%af,i32%v,i1 false)
%ag=load i8*,i8**%c,align 8
%ah=load i8*,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
store i8*%aa,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%c,align 8
%ao=icmp eq i32%ak,0
br i1%ao,label%ay,label%ap
ap:
%aq=phi i8*[%Y,%R],[%an,%Z]
%ar=phi i8*[%q,%R],[%ah,%Z]
%as=phi i32[%L,%R],[%ak,%Z]
%at=bitcast i8*%ar to i8**
store i8*null,i8**%c,align 8
%au=sext i32%y to i64
%av=getelementptr inbounds i8,i8*%aq,i64%au
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
br label%aO
ay:
%az=getelementptr inbounds i8,i8*%ah,i64 12
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
%aC=call i8*@sml_alloc(i32 inreg%aB)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32%aB,i32*%aE,align 4
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=sext i32%y to i64
%aH=getelementptr inbounds i8,i8*%aF,i64%aG
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aC,i8*%aH,i32%aB,i1 false)
%aI=bitcast i8**%e to i8***
%aJ=load i8**,i8***%aI,align 8
%aK=bitcast i8**%aJ to i8*
%aL=getelementptr inbounds i8*,i8**%aJ,i64 1
%aM=bitcast i8**%aL to i32*
%aN=load i32,i32*%aM,align 4
br label%aO
aO:
%aP=phi i64[%aG,%ay],[%au,%ap]
%aQ=phi i32[%aN,%ay],[%as,%ap]
%aR=phi i8*[%aK,%ay],[%ar,%ap]
%aS=phi i8**[%aJ,%ay],[%at,%ap]
%aT=phi i8*[%aC,%ay],[%ax,%ap]
store i8*%aT,i8**%c,align 8
%aU=load i8*,i8**%aS,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%f,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 12
%a1=bitcast i8*%a0 to i32*
%a2=load i32,i32*%a1,align 4
store i8*null,i8**%e,align 8
%a3=call i8*@sml_alloc(i32 inreg%O)#0
%a4=or i32%F,1342177280
%a5=getelementptr inbounds i8,i8*%a3,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32%a4,i32*%a6,align 4
call void@llvm.memset.p0i8.i32(i8*%a3,i8 0,i32%O,i1 false)
%a7=icmp eq i32%aQ,0
%a8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64%aP
br i1%a7,label%bg,label%ba
ba:
%bb=bitcast i8*%a9 to i8**
store i8*%a8,i8**%bb,align 8
%bc=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bd=sext i32%C to i64
%be=getelementptr inbounds i8,i8*%a3,i64%bd
%bf=bitcast i8*%be to i8**
store i8*%bc,i8**%bf,align 8
br label%bk
bg:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a9,i8*%a8,i32%a2,i1 false)
%bh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bi=sext i32%C to i64
%bj=getelementptr inbounds i8,i8*%a3,i64%bi
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bj,i8*%bh,i32%a2,i1 false)
br label%bk
bk:
%bl=sext i32%F to i64
%bm=getelementptr inbounds i8,i8*%a3,i64%bl
%bn=bitcast i8*%bm to i32*
store i32%N,i32*%bn,align 4
%bo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bp=call fastcc i8*%aX(i8*inreg%bo,i8*inreg%a3)
%bq=bitcast i8*%bp to i32*
%br=load i32,i32*%bq,align 4
ret i32%br
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_521(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%b,%m]
%n=phi i8*[%i,%h],[%a,%m]
%o=getelementptr inbounds i8,i8*%n,i64 20
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=add i32%q,-1
%s=sub i32 0,%q
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%n,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%r,%w
%y=add i32%x,%t
%z=sub i32 0,%w
%A=and i32%y,%z
%B=add i32%w,7
%C=add i32%B,%A
%D=and i32%C,-8
%E=lshr i32%A,3
%F=lshr i32%t,3
%G=sub nsw i32%E,%F
%H=getelementptr inbounds i8,i8*%n,i64 8
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=shl i32%J,%G
%L=getelementptr inbounds i8,i8*%n,i64 16
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=or i32%K,%N
%P=or i32%D,4
%Q=bitcast i8*%n to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%U(i8*inreg%W,i8*inreg%l)
store i8*%X,i8**%c,align 8
%Y=load i8*,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 20
%aa=bitcast i8*%Z to i32*
%ab=load i32,i32*%aa,align 4
%ac=getelementptr inbounds i8,i8*%Y,i64 16
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=getelementptr inbounds i8,i8*%Y,i64 12
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
store i8*null,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=call i8*@sml_alloc(i32 inreg%P)#0
%am=or i32%D,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%P,i1 false)
%ap=icmp eq i32%ae,0
%aq=load i8*,i8**%c,align 8
%ar=sext i32%t to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%av,label%at
at:
%au=bitcast i8*%as to i8**
store i8*%aq,i8**%au,align 8
br label%aw
av:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%ab,i1 false)
br label%aw
aw:
%ax=icmp eq i32%ak,0
%ay=load i8*,i8**%e,align 8
%az=sext i32%A to i64
%aA=getelementptr inbounds i8,i8*%al,i64%az
br i1%ax,label%aD,label%aB
aB:
%aC=bitcast i8*%aA to i8**
store i8*%ay,i8**%aC,align 8
br label%aE
aD:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aA,i8*%ay,i32%ah,i1 false)
br label%aE
aE:
%aF=sext i32%D to i64
%aG=getelementptr inbounds i8,i8*%al,i64%aF
%aH=bitcast i8*%aG to i32*
store i32%O,i32*%aH,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_522(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%f,align 8
%s=load i8*,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%s,i64 20
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg%v,i32 inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%e,align 8
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=getelementptr inbounds i8,i8*%F,i64 20
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=getelementptr inbounds i8,i8*%F,i64 28
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%P,i8**%g,align 8
store i32%I,i32*%Q,align 4
%T=getelementptr inbounds i8,i8*%P,i64 4
%U=bitcast i8*%T to i32*
store i32%L,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i32*
store i32%O,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_519 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_519 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=call fastcc i8*%C(i8*inreg%ak,i8*inreg%Z)
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=call fastcc i8*%p(i8*inreg%am,i8*inreg%al)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%g,align 8
%at=load i8*,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%at,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%at,i64 24
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=getelementptr inbounds i8,i8*%at,i64 28
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%f,align 8
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i32*
store i32%az,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%aD,i64 12
%aL=bitcast i8*%aK to i32*
store i32%aC,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i32*
store i32 1,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 28)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177304,i32*%aQ,align 4
store i8*%aO,i8**%h,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_520 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_1693 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 24
%aY=bitcast i8*%aX to i32*
store i32 -2147483647,i32*%aY,align 4
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i32*
%a2=load i32,i32*%a1,align 4
%a3=getelementptr inbounds i8,i8*%aZ,i64 20
%a4=bitcast i8*%a3 to i32*
%a5=load i32,i32*%a4,align 4
%a6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg%a2,i32 inreg%a5,i32 inreg 1,i32 inreg 8)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%f,align 8
%bc=bitcast i8**%d to i8***
%bd=load i8**,i8***%bc,align 8
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%e,align 8
%bf=bitcast i8**%bd to i8*
%bg=getelementptr inbounds i8*,i8**%bd,i64 2
%bh=bitcast i8**%bg to i32*
%bi=load i32,i32*%bh,align 4
%bj=getelementptr inbounds i8,i8*%bf,i64 20
%bk=bitcast i8*%bj to i32*
%bl=load i32,i32*%bk,align 4
%bm=getelementptr inbounds i8*,i8**%bd,i64 3
%bn=bitcast i8**%bm to i32*
%bo=load i32,i32*%bn,align 4
store i8*null,i8**%d,align 8
%bp=getelementptr inbounds i8,i8*%bf,i64 28
%bq=bitcast i8*%bp to i32*
%br=load i32,i32*%bq,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
store i8*%bs,i8**%d,align 8
%bv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i32*
store i32%bi,i32*%by,align 4
%bz=getelementptr inbounds i8,i8*%bs,i64 12
%bA=bitcast i8*%bz to i32*
store i32%bl,i32*%bA,align 4
%bB=getelementptr inbounds i8,i8*%bs,i64 16
%bC=bitcast i8*%bB to i32*
store i32%bo,i32*%bC,align 4
%bD=getelementptr inbounds i8,i8*%bs,i64 20
%bE=bitcast i8*%bD to i32*
store i32%br,i32*%bE,align 4
%bF=getelementptr inbounds i8,i8*%bs,i64 24
%bG=bitcast i8*%bF to i32*
store i32 1,i32*%bG,align 4
%bH=call i8*@sml_alloc(i32 inreg 28)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177304,i32*%bJ,align 4
%bK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bL=bitcast i8*%bH to i8**
store i8*%bK,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bH,i64 8
%bN=bitcast i8*%bM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_521 to void(...)*),void(...)**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 16
%bP=bitcast i8*%bO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_521 to void(...)*),void(...)**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bH,i64 24
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bT=call fastcc i8*%a9(i8*inreg%bS,i8*inreg%bH)
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8*(i8*,i8*)**
%bW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bV,align 8
%bX=bitcast i8*%bT to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=call fastcc i8*%bW(i8*inreg%bY,i8*inreg%bZ)
%b1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b2=call fastcc i8*@_SMLL4quot_515(i8*inreg%b1,i8*inreg%b0)
%b3=load i8*,i8**%g,align 8
%b4=tail call fastcc i8*%aq(i8*inreg%b3,i8*inreg%b2)
ret i8*%b4
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_523(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 12
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%a,i64 20
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=call i8*@sml_alloc(i32 inreg 36)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177312,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32%j,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%t,i64 20
%E=bitcast i8*%D to i32*
store i32%m,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%t,i64 24
%G=bitcast i8*%F to i32*
store i32%p,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%t,i64 28
%I=bitcast i8*%H to i32*
store i32%s,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%t,i64 32
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_522 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_522 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_524(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_523 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_523 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_527(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%e,align 8
%o=bitcast i8**%m to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%b,%i]
%r=phi i8*[%n,%k],[%a,%i]
%s=phi i8**[%m,%k],[%j,%i]
%t=getelementptr inbounds i8,i8*%r,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%r,i64 20
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%B,-1
%D=sub i32 0,%B
%E=and i32%C,%D
%F=add i32%w,%B
%G=add i32%F,%y
%H=and i32%G,%D
%I=add i32%B,7
%J=add i32%I,%H
%K=and i32%J,-8
%L=lshr i32%H,3
%M=lshr i32%y,3
%N=sub nsw i32%L,%M
%O=getelementptr inbounds i8,i8*%r,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=shl i32%Q,%N
%S=getelementptr inbounds i8,i8*%r,i64 8
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=or i32%R,%U
%W=or i32%K,4
%X=getelementptr inbounds i8,i8*%r,i64 28
%Y=bitcast i8*%X to i32*
%Z=load i32,i32*%Y,align 4
%aa=add i32%Z,-1
%ab=sub i32 0,%Z
%ac=and i32%aa,%ab
%ad=add i32%Z,7
%ae=add i32%ad,%ac
%af=and i32%ae,-8
%ag=getelementptr inbounds i8,i8*%r,i64 24
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=or i32%af,4
%ak=load i8*,i8**%s,align 8
%al=icmp eq i8*%ak,null
br i1%al,label%cf,label%am
am:
store i8*%ak,i8**%d,align 8
%an=icmp eq i32%U,0
br i1%an,label%at,label%ao
ao:
store i8*null,i8**%d,align 8
%ap=sext i32%y to i64
%aq=getelementptr inbounds i8,i8*%ak,i64%ap
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
br label%aB
at:
%au=call i8*@sml_alloc(i32 inreg%v)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32%v,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=sext i32%y to i64
%az=getelementptr inbounds i8,i8*%ax,i64%ay
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%au,i8*%az,i32%v,i1 false)
%aA=load i8*,i8**%c,align 8
br label%aB
aB:
%aC=phi i8*[%aA,%at],[%q,%ao]
%aD=phi i8*[%au,%at],[%as,%ao]
store i8*%aD,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%aC,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=icmp eq i8*%aG,null
br i1%aH,label%cf,label%aI
aI:
store i8*%aG,i8**%c,align 8
%aJ=load i8*,i8**%e,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i32*
%aM=load i32,i32*%aL,align 4
%aN=icmp eq i32%aM,0
br i1%aN,label%aU,label%aO
aO:
%aP=bitcast i8*%aJ to i8**
store i8*null,i8**%c,align 8
%aQ=sext i32%E to i64
%aR=getelementptr inbounds i8,i8*%aG,i64%aQ
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
br label%ba
aU:
%aV=getelementptr inbounds i8,i8*%aJ,i64 20
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
%aY=call i8*@sml_alloc(i32 inreg%aX)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32%aX,i32*%a0,align 4
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=sext i32%E to i64
%a3=getelementptr inbounds i8,i8*%a1,i64%a2
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aY,i8*%a3,i32%aX,i1 false)
%a4=bitcast i8**%e to i8***
%a5=load i8**,i8***%a4,align 8
%a6=bitcast i8**%a5 to i8*
%a7=getelementptr inbounds i8*,i8**%a5,i64 2
%a8=bitcast i8**%a7 to i32*
%a9=load i32,i32*%a8,align 4
br label%ba
ba:
%bb=phi i32[%a9,%aU],[%aM,%aO]
%bc=phi i8*[%a6,%aU],[%aJ,%aO]
%bd=phi i8**[%a5,%aU],[%aP,%aO]
%be=phi i8*[%aY,%aU],[%aT,%aO]
store i8*%be,i8**%c,align 8
%bf=load i8*,i8**%bd,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%f,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 12
%bm=bitcast i8*%bl to i32*
%bn=load i32,i32*%bm,align 4
%bo=getelementptr inbounds i8,i8*%bc,i64 8
%bp=bitcast i8*%bo to i32*
%bq=load i32,i32*%bp,align 4
%br=getelementptr inbounds i8,i8*%bc,i64 20
%bs=bitcast i8*%br to i32*
%bt=load i32,i32*%bs,align 4
%bu=call i8*@sml_alloc(i32 inreg%W)#0
%bv=or i32%K,1342177280
%bw=getelementptr inbounds i8,i8*%bu,i64 -4
%bx=bitcast i8*%bw to i32*
store i32%bv,i32*%bx,align 4
call void@llvm.memset.p0i8.i32(i8*%bu,i8 0,i32%W,i1 false)
%by=icmp eq i32%bq,0
%bz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bA=sext i32%y to i64
%bB=getelementptr inbounds i8,i8*%bu,i64%bA
br i1%by,label%bE,label%bC
bC:
%bD=bitcast i8*%bB to i8**
store i8*%bz,i8**%bD,align 8
br label%bF
bE:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bB,i8*%bz,i32%bn,i1 false)
br label%bF
bF:
%bG=icmp eq i32%bb,0
%bH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bI=sext i32%H to i64
%bJ=getelementptr inbounds i8,i8*%bu,i64%bI
br i1%bG,label%bM,label%bK
bK:
%bL=bitcast i8*%bJ to i8**
store i8*%bH,i8**%bL,align 8
br label%bN
bM:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bJ,i8*%bH,i32%bt,i1 false)
br label%bN
bN:
%bO=sext i32%K to i64
%bP=getelementptr inbounds i8,i8*%bu,i64%bO
%bQ=bitcast i8*%bP to i32*
store i32%V,i32*%bQ,align 4
%bR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bS=call fastcc i8*%bi(i8*inreg%bR,i8*inreg%bu)
store i8*%bS,i8**%c,align 8
%bT=load i8*,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 28
%bV=bitcast i8*%bU to i32*
%bW=load i32,i32*%bV,align 4
store i8*null,i8**%e,align 8
%bX=getelementptr inbounds i8,i8*%bT,i64 24
%bY=bitcast i8*%bX to i32*
%bZ=load i32,i32*%bY,align 4
%b0=call i8*@sml_alloc(i32 inreg%aj)#0
%b1=or i32%af,1342177280
%b2=getelementptr inbounds i8,i8*%b0,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32%b1,i32*%b3,align 4
call void@llvm.memset.p0i8.i32(i8*%b0,i8 0,i32%aj,i1 false)
%b4=icmp eq i32%bZ,0
%b5=load i8*,i8**%c,align 8
%b6=sext i32%ac to i64
%b7=getelementptr inbounds i8,i8*%b0,i64%b6
br i1%b4,label%ca,label%b8
b8:
%b9=bitcast i8*%b7 to i8**
store i8*%b5,i8**%b9,align 8
br label%cb
ca:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%b7,i8*%b5,i32%bW,i1 false)
br label%cb
cb:
%cc=sext i32%af to i64
%cd=getelementptr inbounds i8,i8*%b0,i64%cc
%ce=bitcast i8*%cd to i32*
store i32%ai,i32*%ce,align 4
ret i8*%b0
cf:
ret i8*null
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_528(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 20
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 36)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177312,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32%f,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%v,i64 12
%D=bitcast i8*%C to i32*
store i32%i,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32%l,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%v,i64 20
%H=bitcast i8*%G to i32*
store i32%o,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%v,i64 24
%J=bitcast i8*%I to i32*
store i32%r,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%v,i64 28
%L=bitcast i8*%K to i32*
store i32%u,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%v,i64 32
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6op2optE_527 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6op2optE_527 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 -2147483647,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)unnamed_addr#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6op2optE_528 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6op2optE_528 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_531(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%e,align 8
%o=bitcast i8**%m to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%b,%i]
%r=phi i8*[%n,%k],[%a,%i]
%s=phi i8**[%m,%k],[%j,%i]
%t=getelementptr inbounds i8,i8*%r,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%r,i64 20
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%B,-1
%D=sub i32 0,%B
%E=and i32%C,%D
%F=add i32%w,%B
%G=add i32%F,%y
%H=and i32%G,%D
%I=add i32%B,7
%J=add i32%I,%H
%K=and i32%J,-8
%L=lshr i32%H,3
%M=lshr i32%y,3
%N=sub nsw i32%L,%M
%O=getelementptr inbounds i8,i8*%r,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=shl i32%Q,%N
%S=getelementptr inbounds i8,i8*%r,i64 8
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=or i32%R,%U
%W=or i32%K,4
%X=load i8*,i8**%s,align 8
%Y=icmp eq i8*%X,null
br i1%Y,label%bI,label%Z
Z:
store i8*%X,i8**%d,align 8
%aa=icmp eq i32%U,0
br i1%aa,label%ag,label%ab
ab:
store i8*null,i8**%d,align 8
%ac=sext i32%y to i64
%ad=getelementptr inbounds i8,i8*%X,i64%ac
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
br label%ao
ag:
%ah=call i8*@sml_alloc(i32 inreg%v)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32%v,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=sext i32%y to i64
%am=getelementptr inbounds i8,i8*%ak,i64%al
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ah,i8*%am,i32%v,i1 false)
%an=load i8*,i8**%c,align 8
br label%ao
ao:
%ap=phi i8*[%an,%ag],[%q,%ab]
%aq=phi i8*[%ah,%ag],[%af,%ab]
store i8*%aq,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%ap,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=icmp eq i8*%at,null
br i1%au,label%bI,label%av
av:
store i8*%at,i8**%c,align 8
%aw=load i8*,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=icmp eq i32%az,0
br i1%aA,label%aH,label%aB
aB:
%aC=bitcast i8*%aw to i8**
store i8*null,i8**%c,align 8
%aD=sext i32%E to i64
%aE=getelementptr inbounds i8,i8*%at,i64%aD
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
br label%aX
aH:
%aI=getelementptr inbounds i8,i8*%aw,i64 20
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=call i8*@sml_alloc(i32 inreg%aK)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32%aK,i32*%aN,align 4
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=sext i32%E to i64
%aQ=getelementptr inbounds i8,i8*%aO,i64%aP
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aL,i8*%aQ,i32%aK,i1 false)
%aR=bitcast i8**%e to i8***
%aS=load i8**,i8***%aR,align 8
%aT=bitcast i8**%aS to i8*
%aU=getelementptr inbounds i8*,i8**%aS,i64 2
%aV=bitcast i8**%aU to i32*
%aW=load i32,i32*%aV,align 4
br label%aX
aX:
%aY=phi i32[%aW,%aH],[%az,%aB]
%aZ=phi i8*[%aT,%aH],[%aw,%aB]
%a0=phi i8**[%aS,%aH],[%aC,%aB]
%a1=phi i8*[%aL,%aH],[%aG,%aB]
store i8*%a1,i8**%c,align 8
%a2=load i8*,i8**%a0,align 8
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%f,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 12
%a9=bitcast i8*%a8 to i32*
%ba=load i32,i32*%a9,align 4
%bb=getelementptr inbounds i8,i8*%aZ,i64 8
%bc=bitcast i8*%bb to i32*
%bd=load i32,i32*%bc,align 4
%be=getelementptr inbounds i8,i8*%aZ,i64 20
%bf=bitcast i8*%be to i32*
%bg=load i32,i32*%bf,align 4
store i8*null,i8**%e,align 8
%bh=call i8*@sml_alloc(i32 inreg%W)#0
%bi=or i32%K,1342177280
%bj=getelementptr inbounds i8,i8*%bh,i64 -4
%bk=bitcast i8*%bj to i32*
store i32%bi,i32*%bk,align 4
call void@llvm.memset.p0i8.i32(i8*%bh,i8 0,i32%W,i1 false)
%bl=icmp eq i32%bd,0
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=sext i32%y to i64
%bo=getelementptr inbounds i8,i8*%bh,i64%bn
br i1%bl,label%br,label%bp
bp:
%bq=bitcast i8*%bo to i8**
store i8*%bm,i8**%bq,align 8
br label%bs
br:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bo,i8*%bm,i32%ba,i1 false)
br label%bs
bs:
%bt=icmp eq i32%aY,0
%bu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bv=sext i32%H to i64
%bw=getelementptr inbounds i8,i8*%bh,i64%bv
br i1%bt,label%bz,label%bx
bx:
%by=bitcast i8*%bw to i8**
store i8*%bu,i8**%by,align 8
br label%bA
bz:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bw,i8*%bu,i32%bg,i1 false)
br label%bA
bA:
%bB=sext i32%K to i64
%bC=getelementptr inbounds i8,i8*%bh,i64%bB
%bD=bitcast i8*%bC to i32*
store i32%V,i32*%bD,align 4
%bE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bF=call fastcc i8*%a5(i8*inreg%bE,i8*inreg%bh)
%bG=bitcast i8*%bF to i32*
%bH=load i32,i32*%bG,align 4
ret i32%bH
bI:
ret i32 2
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_532(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_531 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_1696 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)unnamed_addr#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_532 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_532 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define fastcc double@_SMLFN17SMLSharp__SQL__Prim8mod__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=fdiv double%k,%n
%p=bitcast double%o to i64
%q=call fastcc double@_SMLFN6Real647realModE(i64 inreg%p)
%r=fmul double%n,%q
ret double%r
}
define fastcc float@_SMLFN17SMLSharp__SQL__Prim10mod__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=fdiv float%k,%n
%p=bitcast float%o to i32
%q=call fastcc float@_SMLFN6Real327realModE(i32 inreg%p)
%r=fmul float%n,%q
ret float%r
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim9matchLikeE_541(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
q:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%h,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%h,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%a,%q]
%r=getelementptr inbounds i8,i8*%p,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLFN9Substring4fullE(i8*inreg%t)
store i8*%u,i8**%i,align 8
%v=bitcast i8**%h to i8***
%w=load i8**,i8***%v,align 8
store i8*null,i8**%h,align 8
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLFN9Substring4fullE(i8*inreg%x)
store i8*%y,i8**%h,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%j,align 8
%C=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
store i8*%M,i8**%h,align 8
store i8*null,i8**%i,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%h,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%i,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ac)
%ad=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ad)
%ae=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ae)
%af=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%af)
%ag=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ag)
%ah=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ah)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%S,i8**%b,align 8
br label%ai
ai:
%aj=phi i8*[%S,%o],[%dl,%dk]
%ak=load atomic i32,i32*@sml_check_flag unordered,align 4
%al=icmp eq i32%ak,0
br i1%al,label%ao,label%am
am:
call void@sml_check(i32 inreg%ak)
%an=load i8*,i8**%b,align 8
br label%ao
ao:
%ap=phi i8*[%an,%am],[%aj,%ai]
store i8*null,i8**%b,align 8
%aq=icmp eq i8*%ap,null
br i1%aq,label%dm,label%ar
ar:
%as=bitcast i8*%ap to i8**
%at=bitcast i8*%ap to i8***
%au=load i8**,i8***%at,align 8
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%d,align 8
%aw=load i8*,i8**%as,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%ap,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%f,align 8
%aD=call fastcc i8*@_SMLFN9Substring4getcE(i8*inreg%av)
store i8*%aD,i8**%b,align 8
%aE=load i8*,i8**%e,align 8
%aF=call fastcc i8*@_SMLFN9Substring4getcE(i8*inreg%aE)
store i8*%aF,i8**%c,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%b,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%c,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=icmp eq i8*%aJ,null
br i1%aQ,label%aR,label%aV
aR:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%aS=icmp eq i8*%aL,null
br i1%aS,label%dm,label%aT
aT:
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
store i8*%aU,i8**%b,align 8
br label%dk
aV:
%aW=bitcast i8*%aJ to i8**
%aX=load i8*,i8**%aW,align 8
%aY=load i8,i8*%aX,align 1
switch i8%aY,label%aZ[
i8 37,label%ca
i8 95,label%bD
]
aZ:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%b,align 8
%a3=icmp eq i8*%aL,null
br i1%a3,label%a4,label%a6
a4:
%a5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
store i8*%a5,i8**%b,align 8
br label%dk
a6:
%a7=bitcast i8*%aL to i8**
%a8=load i8*,i8**%a7,align 8
%a9=load i8,i8*%a8,align 1
%ba=getelementptr inbounds i8,i8*%a8,i64 8
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%c,align 8
%bd=icmp eq i8%aY,%a9
br i1%bd,label%be,label%bz
be:
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
store i8*%bf,i8**%d,align 8
%bi=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bl=getelementptr inbounds i8,i8*%bf,i64 8
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bf,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
%bs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bp,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
br label%bB
bz:
store i8*null,i8**%c,align 8
%bA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
br label%bB
bB:
%bC=phi i8*[%bp,%be],[%bA,%bz]
store i8*%bC,i8**%b,align 8
br label%dk
bD:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%bE=getelementptr inbounds i8,i8*%aX,i64 8
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%b,align 8
%bH=icmp eq i8*%aL,null
br i1%bH,label%bI,label%bK
bI:
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
store i8*%bJ,i8**%b,align 8
br label%dk
bK:
%bL=bitcast i8*%aL to i8**
%bM=load i8*,i8**%bL,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 8
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
store i8*%bP,i8**%c,align 8
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
store i8*%bQ,i8**%d,align 8
%bT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bQ,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 3,i32*%bZ,align 4
%b0=call i8*@sml_alloc(i32 inreg 20)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177296,i32*%b2,align 4
%b3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b6=getelementptr inbounds i8,i8*%b0,i64 8
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b0,i64 16
%b9=bitcast i8*%b8 to i32*
store i32 3,i32*%b9,align 4
store i8*%b0,i8**%b,align 8
br label%dk
ca:
%cb=getelementptr inbounds i8,i8*%aX,i64 8
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
store i8*%cd,i8**%b,align 8
%ce=icmp eq i8*%aL,null
br i1%ce,label%cf,label%cA
cf:
store i8*null,i8**%d,align 8
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
store i8*%cg,i8**%c,align 8
%cj=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cm=getelementptr inbounds i8,i8*%cg,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%cg,i64 16
%cp=bitcast i8*%co to i32*
store i32 3,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 20)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177296,i32*%cs,align 4
%ct=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cu=bitcast i8*%cq to i8**
store i8*%ct,i8**%cu,align 8
%cv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cw=getelementptr inbounds i8,i8*%cq,i64 8
%cx=bitcast i8*%cw to i8**
store i8*%cv,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%cq,i64 16
%cz=bitcast i8*%cy to i32*
store i32 3,i32*%cz,align 4
store i8*%cq,i8**%b,align 8
br label%dk
cA:
%cB=bitcast i8*%aL to i8**
%cC=load i8*,i8**%cB,align 8
%cD=getelementptr inbounds i8,i8*%cC,i64 8
%cE=bitcast i8*%cD to i8**
%cF=load i8*,i8**%cE,align 8
store i8*%cF,i8**%c,align 8
%cG=call i8*@sml_alloc(i32 inreg 20)#0
%cH=getelementptr inbounds i8,i8*%cG,i64 -4
%cI=bitcast i8*%cH to i32*
store i32 1342177296,i32*%cI,align 4
store i8*%cG,i8**%g,align 8
%cJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cK=bitcast i8*%cG to i8**
store i8*%cJ,i8**%cK,align 8
%cL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cM=getelementptr inbounds i8,i8*%cG,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cG,i64 16
%cP=bitcast i8*%cO to i32*
store i32 3,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%b,align 8
%cT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cQ,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
store i8*%c0,i8**%c,align 8
%c3=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=call i8*@sml_alloc(i32 inreg 20)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177296,i32*%dc,align 4
%dd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dg=getelementptr inbounds i8,i8*%da,i64 8
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%da,i64 16
%dj=bitcast i8*%di to i32*
store i32 3,i32*%dj,align 4
store i8*%da,i8**%b,align 8
br label%dk
dk:
%dl=phi i8*[%aU,%aT],[%a5,%a4],[%bC,%bB],[%bJ,%bI],[%b0,%bK],[%cq,%cf],[%da,%cA]
br label%ai
dm:
%dn=phi i32[0,%ao],[1,%aR]
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ac)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ad)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ae)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%af)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ag)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ah)
ret i32%dn
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_543(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLLN17SMLSharp__SQL__Prim9matchLikeE_541(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aH,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_547(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%e,align 8
%o=bitcast i8**%m to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%b,%i]
%r=phi i8*[%n,%k],[%a,%i]
%s=phi i8**[%m,%k],[%j,%i]
%t=getelementptr inbounds i8,i8*%r,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%r,i64 20
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%B,-1
%D=sub i32 0,%B
%E=and i32%C,%D
%F=add i32%y,%v
%G=add i32%C,%F
%H=and i32%G,%D
%I=add i32%B,7
%J=add i32%I,%H
%K=and i32%J,-8
%L=lshr i32%H,3
%M=lshr i32%y,3
%N=sub nsw i32%L,%M
%O=getelementptr inbounds i8,i8*%r,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=shl i32%Q,%N
%S=getelementptr inbounds i8,i8*%r,i64 8
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=or i32%R,%U
%W=or i32%K,4
%X=add i32%F,7
%Y=and i32%X,-8
%Z=or i32%Y,4
%aa=load i8*,i8**%s,align 8
%ab=icmp eq i8*%aa,null
br i1%ab,label%cb,label%ac
ac:
store i8*%aa,i8**%d,align 8
%ad=icmp eq i32%U,0
br i1%ad,label%aj,label%ae
ae:
store i8*null,i8**%d,align 8
%af=sext i32%y to i64
%ag=getelementptr inbounds i8,i8*%aa,i64%af
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
br label%ar
aj:
%ak=call i8*@sml_alloc(i32 inreg%v)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32%v,i32*%am,align 4
%an=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ao=sext i32%y to i64
%ap=getelementptr inbounds i8,i8*%an,i64%ao
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ak,i8*%ap,i32%v,i1 false)
%aq=load i8*,i8**%c,align 8
br label%ar
ar:
%as=phi i8*[%aq,%aj],[%q,%ae]
%at=phi i8*[%ak,%aj],[%ai,%ae]
store i8*%at,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%as,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
%ax=icmp eq i8*%aw,null
br i1%ax,label%ay,label%aB
ay:
%az=bitcast i8*%as to i8**
%aA=load i8*,i8**%az,align 8
br label%cb
aB:
store i8*%aw,i8**%c,align 8
%aC=load i8*,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i32*
%aF=load i32,i32*%aE,align 4
%aG=icmp eq i32%aF,0
br i1%aG,label%aN,label%aH
aH:
%aI=bitcast i8*%aC to i8**
store i8*null,i8**%c,align 8
%aJ=sext i32%E to i64
%aK=getelementptr inbounds i8,i8*%aw,i64%aJ
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
br label%a3
aN:
%aO=getelementptr inbounds i8,i8*%aC,i64 20
%aP=bitcast i8*%aO to i32*
%aQ=load i32,i32*%aP,align 4
%aR=call i8*@sml_alloc(i32 inreg%aQ)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32%aQ,i32*%aT,align 4
%aU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aV=sext i32%E to i64
%aW=getelementptr inbounds i8,i8*%aU,i64%aV
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aR,i8*%aW,i32%aQ,i1 false)
%aX=bitcast i8**%e to i8***
%aY=load i8**,i8***%aX,align 8
%aZ=bitcast i8**%aY to i8*
%a0=getelementptr inbounds i8*,i8**%aY,i64 2
%a1=bitcast i8**%a0 to i32*
%a2=load i32,i32*%a1,align 4
br label%a3
a3:
%a4=phi i32[%a2,%aN],[%aF,%aH]
%a5=phi i8*[%aZ,%aN],[%aC,%aH]
%a6=phi i8**[%aY,%aN],[%aI,%aH]
%a7=phi i8*[%aR,%aN],[%aM,%aH]
store i8*%a7,i8**%c,align 8
%a8=load i8*,i8**%a6,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 16
%ba=bitcast i8*%a9 to i8*(i8*,i8*)**
%bb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ba,align 8
%bc=bitcast i8*%a8 to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%f,align 8
%be=getelementptr inbounds i8,i8*%a5,i64 12
%bf=bitcast i8*%be to i32*
%bg=load i32,i32*%bf,align 4
%bh=getelementptr inbounds i8,i8*%a5,i64 8
%bi=bitcast i8*%bh to i32*
%bj=load i32,i32*%bi,align 4
%bk=getelementptr inbounds i8,i8*%a5,i64 20
%bl=bitcast i8*%bk to i32*
%bm=load i32,i32*%bl,align 4
%bn=call i8*@sml_alloc(i32 inreg%W)#0
%bo=or i32%K,1342177280
%bp=getelementptr inbounds i8,i8*%bn,i64 -4
%bq=bitcast i8*%bp to i32*
store i32%bo,i32*%bq,align 4
call void@llvm.memset.p0i8.i32(i8*%bn,i8 0,i32%W,i1 false)
%br=icmp eq i32%bj,0
%bs=load i8*,i8**%d,align 8
%bt=sext i32%y to i64
%bu=getelementptr inbounds i8,i8*%bn,i64%bt
br i1%br,label%bx,label%bv
bv:
%bw=bitcast i8*%bu to i8**
store i8*%bs,i8**%bw,align 8
br label%by
bx:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bu,i8*%bs,i32%bg,i1 false)
br label%by
by:
%bz=icmp eq i32%a4,0
%bA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bB=sext i32%H to i64
%bC=getelementptr inbounds i8,i8*%bn,i64%bB
br i1%bz,label%bF,label%bD
bD:
%bE=bitcast i8*%bC to i8**
store i8*%bA,i8**%bE,align 8
br label%bG
bF:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bC,i8*%bA,i32%bm,i1 false)
br label%bG
bG:
%bH=sext i32%K to i64
%bI=getelementptr inbounds i8,i8*%bn,i64%bH
%bJ=bitcast i8*%bI to i32*
store i32%V,i32*%bJ,align 4
%bK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bL=call fastcc i8*%bb(i8*inreg%bK,i8*inreg%bn)
%bM=bitcast i8*%bL to i32*
%bN=load i32,i32*%bM,align 4
%bO=icmp eq i32%bN,0
br i1%bO,label%cb,label%bP
bP:
%bQ=load i8*,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bQ,i64 12
%bS=bitcast i8*%bR to i32*
%bT=load i32,i32*%bS,align 4
store i8*null,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bQ,i64 8
%bV=bitcast i8*%bU to i32*
%bW=load i32,i32*%bV,align 4
%bX=call i8*@sml_alloc(i32 inreg%Z)#0
%bY=or i32%Y,1342177280
%bZ=getelementptr inbounds i8,i8*%bX,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32%bY,i32*%b0,align 4
call void@llvm.memset.p0i8.i32(i8*%bX,i8 0,i32%Z,i1 false)
%b1=icmp eq i32%bW,0
%b2=load i8*,i8**%d,align 8
%b3=getelementptr inbounds i8,i8*%bX,i64%bt
br i1%b1,label%b6,label%b4
b4:
%b5=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b5,align 8
br label%b7
b6:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%b3,i8*%b2,i32%bT,i1 false)
br label%b7
b7:
%b8=sext i32%Y to i64
%b9=getelementptr inbounds i8,i8*%bX,i64%b8
%ca=bitcast i8*%b9 to i32*
store i32%U,i32*%ca,align 4
ret i8*%bX
cb:
%cc=phi i8*[null,%bG],[%aA,%ay],[null,%p]
ret i8*%cc
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_548(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6nullifE_547 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6nullifE_547 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)unnamed_addr#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6nullifE_548 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6nullifE_548 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_551(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%m to i8**
%q=getelementptr inbounds i8,i8*%m,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=add i32%s,-1
%u=sub i32 0,%s
%v=and i32%t,%u
%w=add i32%s,7
%x=add i32%w,%v
%y=and i32%x,-8
%z=sext i32%y to i64
%A=getelementptr inbounds i8,i8*%o,i64%z
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=load i8*,i8**%p,align 8
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%f,align 8
%J=getelementptr inbounds i8,i8*%m,i64 8
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=icmp eq i32%L,0
store i8*null,i8**%e,align 8
br i1%M,label%S,label%N
N:
store i8*null,i8**%c,align 8
%O=sext i32%v to i64
%P=getelementptr inbounds i8,i8*%o,i64%O
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
br label%aa
S:
%T=call i8*@sml_alloc(i32 inreg%s)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32%s,i32*%V,align 4
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=sext i32%v to i64
%Y=getelementptr inbounds i8,i8*%W,i64%X
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%T,i8*%Y,i32%s,i1 false)
%Z=load i8*,i8**%f,align 8
br label%aa
aa:
%ab=phi i8*[%I,%N],[%Z,%S]
%ac=phi i8*[%R,%N],[%T,%S]
store i8*null,i8**%f,align 8
%ad=call fastcc i8*%G(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%c,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%c,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%ae)
ret i8*%ao
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_552(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=icmp eq i8*%m,null
br i1%o,label%p,label%q
p:
ret i8*null
q:
%r=load i8*,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=getelementptr inbounds i8,i8*%r,i64 12
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg%u,i32 inreg%x,i32 inreg 1,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=bitcast i8**%e to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=bitcast i8**%F to i8*
%I=getelementptr inbounds i8*,i8**%F,i64 1
%J=bitcast i8**%I to i32*
%K=load i32,i32*%J,align 4
%L=getelementptr inbounds i8,i8*%H,i64 12
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%g,align 8
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32%K,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%O,i64 12
%W=bitcast i8*%V to i32*
store i32%N,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_551 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_551 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=call fastcc i8*%B(i8*inreg%ak,i8*inreg%Z)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=call fastcc i8*%ao(i8*inreg%as,i8*inreg%ar)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**%c,align 8
%aA=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%az)
store i8*%aA,i8**%d,align 8
%aB=load i8*,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i32*
%aE=load i32,i32*%aD,align 4
store i8*null,i8**%e,align 8
%aF=getelementptr inbounds i8,i8*%aB,i64 12
%aG=bitcast i8*%aF to i32*
%aH=load i32,i32*%aG,align 4
%aI=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%aE,i32 inreg%aH)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=call fastcc i8*%aL(i8*inreg%aN,i8*inreg%aO)
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%aR)
store i8*%aS,i8**%c,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%aT)
store i8*%a3,i8**%c,align 8
%a4=call i8*@sml_alloc(i32 inreg 12)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177288,i32*%a6,align 4
%a7=load i8*,i8**%c,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i32*
store i32 1,i32*%ba,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_553(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_552 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_552 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg%a,i32 inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_553 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3avgE_553 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_556(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=tail call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%g=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%f)
ret i8*%g
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_558(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_560(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%d,align 8
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aK,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
%L=load i8*,i8**%d,align 8
%M=tail call fastcc i8*%u(i8*inreg%L,i8*inreg%K)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=bitcast i8*%h to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aJ,i64 0,i32 2)to i8*),i8**%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_560 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_560 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
%y=load i8*,i8**%b,align 8
%z=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_560(i8*inreg%q,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_565(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=bitcast i32%a to float
%g=fpext float%f to double
%h=bitcast double%g to i64
%i=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%h)
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_567(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_569(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%d,align 8
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aN,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
%L=load i8*,i8**%d,align 8
%M=tail call fastcc i8*%u(i8*inreg%L,i8*inreg%K)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=bitcast i8*%h to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aM,i64 0,i32 2)to i8*),i8**%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_569 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_569 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
%y=load i8*,i8**%b,align 8
%z=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_569(i8*inreg%q,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_572(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_574(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 28
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=add i32%o,-1
%q=sub i32 0,%o
%r=and i32%p,%q
%s=add i32%o,7
%t=add i32%s,%r
%u=and i32%t,-8
%v=getelementptr inbounds i8,i8*%k,i64 24
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=or i32%u,4
%z=getelementptr inbounds i8,i8*%k,i64 16
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=getelementptr inbounds i8,i8*%k,i64 20
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%B,i32 inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%I(i8*inreg%K,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aP,i64 0,i32 2)to i8*))
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%c,align 8
%T=icmp eq i8*%S,null
br i1%T,label%U,label%V
U:
ret i8*null
V:
%W=load i8*,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i32*
%Z=load i32,i32*%Y,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 20
%ab=bitcast i8*%aa to i32*
%ac=load i32,i32*%ab,align 4
%ad=getelementptr inbounds i8,i8*%W,i64 24
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
%ag=getelementptr inbounds i8,i8*%W,i64 28
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg%Z,i32 inreg%ac,i32 inreg%af,i32 inreg%ai)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=bitcast i8**%d to i8***
%aq=load i8**,i8***%ap,align 8
%ar=load i8*,i8**%aq,align 8
%as=call fastcc i8*%am(i8*inreg%ao,i8*inreg%ar)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%e,align 8
%ay=load i8*,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 24
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
%aC=icmp eq i32%aB,0
br i1%aC,label%aH,label%aD
aD:
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
br label%aR
aH:
%aI=getelementptr inbounds i8,i8*%ay,i64 28
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=call i8*@sml_alloc(i32 inreg%aK)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32%aK,i32*%aN,align 4
%aO=load i8*,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aL,i8*%aP,i32%aK,i1 false)
%aQ=load i8*,i8**%e,align 8
br label%aR
aR:
%aS=phi i8*[%ax,%aD],[%aQ,%aH]
%aT=phi i8*[%aG,%aD],[%aL,%aH]
store i8*null,i8**%e,align 8
%aU=call fastcc i8*%av(i8*inreg%aS,i8*inreg%aT)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a0)
store i8*%a1,i8**%c,align 8
%a2=load i8*,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%a2,i64 28
%a4=bitcast i8*%a3 to i32*
%a5=load i32,i32*%a4,align 4
store i8*null,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%a2,i64 24
%a7=bitcast i8*%a6 to i32*
%a8=load i32,i32*%a7,align 4
%a9=call i8*@sml_alloc(i32 inreg%y)#0
%ba=or i32%u,1342177280
%bb=getelementptr inbounds i8,i8*%a9,i64 -4
%bc=bitcast i8*%bb to i32*
store i32%ba,i32*%bc,align 4
call void@llvm.memset.p0i8.i32(i8*%a9,i8 0,i32%y,i1 false)
%bd=icmp eq i32%a8,0
%be=load i8*,i8**%c,align 8
%bf=sext i32%r to i64
%bg=getelementptr inbounds i8,i8*%a9,i64%bf
br i1%bd,label%bj,label%bh
bh:
%bi=bitcast i8*%bg to i8**
store i8*%be,i8**%bi,align 8
br label%bk
bj:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bg,i8*%be,i32%a5,i1 false)
br label%bk
bk:
%bl=sext i32%u to i64
%bm=getelementptr inbounds i8,i8*%a9,i64%bl
%bn=bitcast i8*%bm to i32*
store i32%x,i32*%bn,align 4
ret i8*%a9
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_575(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=getelementptr inbounds i8,i8*%a,i64 16
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=shl i32%h,1
%j=or i32%i,1
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%a,i64 20
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 12
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 36)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177312,i32*%x,align 4
store i8*%v,i8**%e,align 8
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=icmp eq i32%h,0
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
br i1%A,label%F,label%D
D:
%E=bitcast i8*%C to i8**
store i8*%B,i8**%E,align 8
br label%G
F:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%C,i8*%B,i32%o,i1 false)
br label%G
G:
%H=getelementptr inbounds i8,i8*%v,i64 16
%I=bitcast i8*%H to i32*
store i32%r,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%v,i64 20
%K=bitcast i8*%J to i32*
store i32%u,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%v,i64 24
%M=bitcast i8*%L to i32*
store i32%h,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%v,i64 28
%O=bitcast i8*%N to i32*
store i32%o,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%v,i64 32
%Q=bitcast i8*%P to i32*
store i32%j,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%e,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_574 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_574 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_576(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_575 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_575 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)unnamed_addr#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_576 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_576 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_579(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=icmp eq i8*%j,null
br i1%l,label%m,label%n
m:
ret i8*null
n:
%o=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_KE,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8**%d to i8***
%C=load i8**,i8***%B,align 8
store i8*null,i8**%d,align 8
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*%y(i8*inreg%A,i8*inreg%D)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%c,align 8
%M=call i8*@sml_alloc(i32 inreg 12)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177288,i32*%O,align 4
%P=load i8*,i8**%c,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_579 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_579 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=load i8*,i8**%b,align 8
%C=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_579(i8*inreg%t,i8*inreg%B)
ret i8*%C
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_582(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 12
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%p,-1
%r=sub i32 0,%p
%s=and i32%q,%r
%t=shl i32%p,1
%u=add i32%t,-1
%v=add i32%u,%s
%w=and i32%v,%r
%x=add i32%p,7
%y=add i32%x,%w
%z=and i32%y,-8
%A=lshr i32%w,3
%B=lshr i32%s,3
%C=sub nsw i32%A,%B
%D=getelementptr inbounds i8,i8*%l,i64 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=shl i32%F,%C
%H=or i32%G,%F
%I=or i32%z,4
%J=icmp eq i32%F,0
br i1%J,label%Q,label%K
K:
%L=load i8*,i8**%c,align 8
%M=sext i32%s to i64
%N=getelementptr inbounds i8,i8*%L,i64%M
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
br label%ac
Q:
%R=call i8*@sml_alloc(i32 inreg%p)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32%p,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=sext i32%s to i64
%W=getelementptr inbounds i8,i8*%U,i64%V
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%R,i8*%W,i32%p,i1 false)
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i32*
%aa=load i32,i32*%Z,align 4
store i8*%R,i8**%d,align 8
%ab=icmp eq i32%aa,0
br i1%ab,label%al,label%ac
ac:
%ad=phi i8*[%l,%K],[%X,%Q]
%ae=phi i32[%F,%K],[%aa,%Q]
%af=phi i8*[%L,%K],[%U,%Q]
%ag=bitcast i8*%ad to i8**
store i8*null,i8**%c,align 8
%ah=sext i32%w to i64
%ai=getelementptr inbounds i8,i8*%af,i64%ah
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
br label%aB
al:
%am=getelementptr inbounds i8,i8*%X,i64 12
%an=bitcast i8*%am to i32*
%ao=load i32,i32*%an,align 4
%ap=call i8*@sml_alloc(i32 inreg%ao)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32%ao,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=sext i32%w to i64
%au=getelementptr inbounds i8,i8*%as,i64%at
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ap,i8*%au,i32%ao,i1 false)
%av=bitcast i8**%e to i8***
%aw=load i8**,i8***%av,align 8
%ax=bitcast i8**%aw to i8*
%ay=getelementptr inbounds i8*,i8**%aw,i64 1
%az=bitcast i8**%ay to i32*
%aA=load i32,i32*%az,align 4
br label%aB
aB:
%aC=phi i32[%aA,%al],[%ae,%ac]
%aD=phi i8*[%ax,%al],[%ad,%ac]
%aE=phi i8**[%aw,%al],[%ag,%ac]
%aF=phi i8*[%ap,%al],[%ak,%ac]
store i8*%aF,i8**%c,align 8
%aG=load i8*,i8**%aE,align 8
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%f,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 12
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
store i8*null,i8**%e,align 8
%aP=call i8*@sml_alloc(i32 inreg%I)#0
%aQ=or i32%z,1342177280
%aR=getelementptr inbounds i8,i8*%aP,i64 -4
%aS=bitcast i8*%aR to i32*
store i32%aQ,i32*%aS,align 4
call void@llvm.memset.p0i8.i32(i8*%aP,i8 0,i32%I,i1 false)
%aT=icmp eq i32%aC,0
%aU=load i8*,i8**%d,align 8
%aV=sext i32%s to i64
%aW=getelementptr inbounds i8,i8*%aP,i64%aV
br i1%aT,label%a3,label%aX
aX:
%aY=bitcast i8*%aW to i8**
store i8*%aU,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
%a0=sext i32%w to i64
%a1=getelementptr inbounds i8,i8*%aP,i64%a0
%a2=bitcast i8*%a1 to i8**
store i8*%aZ,i8**%a2,align 8
br label%a7
a3:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aW,i8*%aU,i32%aO,i1 false)
%a4=load i8*,i8**%c,align 8
%a5=sext i32%w to i64
%a6=getelementptr inbounds i8,i8*%aP,i64%a5
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a6,i8*%a4,i32%aO,i1 false)
br label%a7
a7:
%a8=sext i32%z to i64
%a9=getelementptr inbounds i8,i8*%aP,i64%a8
%ba=bitcast i8*%a9 to i32*
store i32%H,i32*%ba,align 4
%bb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bc=call fastcc i8*%aJ(i8*inreg%bb,i8*inreg%aP)
%bd=bitcast i8*%bc to i32*
%be=load i32,i32*%bd,align 4
%bf=icmp eq i32%be,1
br i1%bf,label%bi,label%bg
bg:
%bh=load i8*,i8**%c,align 8
ret i8*%bh
bi:
%bj=load i8*,i8**%d,align 8
ret i8*%bj
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_583(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
%q=getelementptr inbounds i8,i8*%n,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=add i32%s,-1
%u=sub i32 0,%s
%v=and i32%t,%u
%w=add i32%s,7
%x=add i32%w,%v
%y=and i32%x,-8
%z=getelementptr inbounds i8,i8*%n,i64 8
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=or i32%y,4
%D=icmp eq i8*%p,null
br i1%D,label%E,label%F
E:
ret i8*null
F:
%G=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg%B,i32 inreg%s,i32 inreg%B,i32 inreg%s)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%f,align 8
%M=bitcast i8**%d to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%e,align 8
%P=bitcast i8**%N to i8*
%Q=getelementptr inbounds i8*,i8**%N,i64 1
%R=bitcast i8**%Q to i32*
%S=load i32,i32*%R,align 4
%T=getelementptr inbounds i8,i8*%P,i64 12
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
store i8*%W,i8**%g,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i32*
store i32%S,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%W,i64 12
%ae=bitcast i8*%ad to i32*
store i32%V,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%W,i64 16
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_582 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_582 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 1,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=call fastcc i8*%J(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=icmp eq i32%aC,0
br i1%aD,label%aK,label%aE
aE:
%aF=load i8*,i8**%c,align 8
%aG=sext i32%v to i64
%aH=getelementptr inbounds i8,i8*%aF,i64%aG
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
br label%aV
aK:
%aL=getelementptr inbounds i8,i8*%az,i64 12
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=call i8*@sml_alloc(i32 inreg%aN)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32%aN,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=sext i32%v to i64
%aT=getelementptr inbounds i8,i8*%aR,i64%aS
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aO,i8*%aT,i32%aN,i1 false)
%aU=load i8*,i8**%e,align 8
br label%aV
aV:
%aW=phi i64[%aS,%aK],[%aG,%aE]
%aX=phi i8*[%aU,%aK],[%ay,%aE]
%aY=phi i8*[%aO,%aK],[%aJ,%aE]
store i8*null,i8**%e,align 8
%aZ=call fastcc i8*%aw(i8*inreg%aX,i8*inreg%aY)
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i8*(i8*,i8*)**
%a2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a1,align 8
%a3=bitcast i8*%aZ to i8**
%a4=load i8*,i8**%a3,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=sext i32%y to i64
%a7=getelementptr inbounds i8,i8*%a5,i64%a6
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=call fastcc i8*%a2(i8*inreg%a4,i8*inreg%a9)
store i8*%ba,i8**%c,align 8
%bb=load i8*,i8**%d,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 12
%bd=bitcast i8*%bc to i32*
%be=load i32,i32*%bd,align 4
store i8*null,i8**%d,align 8
%bf=getelementptr inbounds i8,i8*%bb,i64 8
%bg=bitcast i8*%bf to i32*
%bh=load i32,i32*%bg,align 4
%bi=call i8*@sml_alloc(i32 inreg%C)#0
%bj=or i32%y,1342177280
%bk=getelementptr inbounds i8,i8*%bi,i64 -4
%bl=bitcast i8*%bk to i32*
store i32%bj,i32*%bl,align 4
call void@llvm.memset.p0i8.i32(i8*%bi,i8 0,i32%C,i1 false)
%bm=icmp eq i32%bh,0
%bn=load i8*,i8**%c,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64%aW
br i1%bm,label%br,label%bp
bp:
%bq=bitcast i8*%bo to i8**
store i8*%bn,i8**%bq,align 8
br label%bs
br:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bo,i8*%bn,i32%be,i1 false)
br label%bs
bs:
%bt=getelementptr inbounds i8,i8*%bi,i64%a6
%bu=bitcast i8*%bt to i32*
store i32%B,i32*%bu,align 4
ret i8*%bi
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_584(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_583 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_583 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg%a,i32 inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_584 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3maxE_584 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_587(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 12
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%p,-1
%r=sub i32 0,%p
%s=and i32%q,%r
%t=shl i32%p,1
%u=add i32%t,-1
%v=add i32%u,%s
%w=and i32%v,%r
%x=add i32%p,7
%y=add i32%x,%w
%z=and i32%y,-8
%A=lshr i32%w,3
%B=lshr i32%s,3
%C=sub nsw i32%A,%B
%D=getelementptr inbounds i8,i8*%l,i64 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=shl i32%F,%C
%H=or i32%G,%F
%I=or i32%z,4
%J=icmp eq i32%F,0
br i1%J,label%Q,label%K
K:
%L=load i8*,i8**%c,align 8
%M=sext i32%s to i64
%N=getelementptr inbounds i8,i8*%L,i64%M
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
br label%ac
Q:
%R=call i8*@sml_alloc(i32 inreg%p)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32%p,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=sext i32%s to i64
%W=getelementptr inbounds i8,i8*%U,i64%V
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%R,i8*%W,i32%p,i1 false)
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i32*
%aa=load i32,i32*%Z,align 4
store i8*%R,i8**%d,align 8
%ab=icmp eq i32%aa,0
br i1%ab,label%al,label%ac
ac:
%ad=phi i8*[%l,%K],[%X,%Q]
%ae=phi i32[%F,%K],[%aa,%Q]
%af=phi i8*[%L,%K],[%U,%Q]
%ag=bitcast i8*%ad to i8**
store i8*null,i8**%c,align 8
%ah=sext i32%w to i64
%ai=getelementptr inbounds i8,i8*%af,i64%ah
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
br label%aB
al:
%am=getelementptr inbounds i8,i8*%X,i64 12
%an=bitcast i8*%am to i32*
%ao=load i32,i32*%an,align 4
%ap=call i8*@sml_alloc(i32 inreg%ao)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32%ao,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=sext i32%w to i64
%au=getelementptr inbounds i8,i8*%as,i64%at
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ap,i8*%au,i32%ao,i1 false)
%av=bitcast i8**%e to i8***
%aw=load i8**,i8***%av,align 8
%ax=bitcast i8**%aw to i8*
%ay=getelementptr inbounds i8*,i8**%aw,i64 1
%az=bitcast i8**%ay to i32*
%aA=load i32,i32*%az,align 4
br label%aB
aB:
%aC=phi i32[%aA,%al],[%ae,%ac]
%aD=phi i8*[%ax,%al],[%ad,%ac]
%aE=phi i8**[%aw,%al],[%ag,%ac]
%aF=phi i8*[%ap,%al],[%ak,%ac]
store i8*%aF,i8**%c,align 8
%aG=load i8*,i8**%aE,align 8
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%f,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 12
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
store i8*null,i8**%e,align 8
%aP=call i8*@sml_alloc(i32 inreg%I)#0
%aQ=or i32%z,1342177280
%aR=getelementptr inbounds i8,i8*%aP,i64 -4
%aS=bitcast i8*%aR to i32*
store i32%aQ,i32*%aS,align 4
call void@llvm.memset.p0i8.i32(i8*%aP,i8 0,i32%I,i1 false)
%aT=icmp eq i32%aC,0
%aU=load i8*,i8**%d,align 8
%aV=sext i32%s to i64
%aW=getelementptr inbounds i8,i8*%aP,i64%aV
br i1%aT,label%a3,label%aX
aX:
%aY=bitcast i8*%aW to i8**
store i8*%aU,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
%a0=sext i32%w to i64
%a1=getelementptr inbounds i8,i8*%aP,i64%a0
%a2=bitcast i8*%a1 to i8**
store i8*%aZ,i8**%a2,align 8
br label%a7
a3:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aW,i8*%aU,i32%aO,i1 false)
%a4=load i8*,i8**%c,align 8
%a5=sext i32%w to i64
%a6=getelementptr inbounds i8,i8*%aP,i64%a5
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a6,i8*%a4,i32%aO,i1 false)
br label%a7
a7:
%a8=sext i32%z to i64
%a9=getelementptr inbounds i8,i8*%aP,i64%a8
%ba=bitcast i8*%a9 to i32*
store i32%H,i32*%ba,align 4
%bb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bc=call fastcc i8*%aJ(i8*inreg%bb,i8*inreg%aP)
%bd=bitcast i8*%bc to i32*
%be=load i32,i32*%bd,align 4
%bf=icmp eq i32%be,2
br i1%bf,label%bi,label%bg
bg:
%bh=load i8*,i8**%c,align 8
ret i8*%bh
bi:
%bj=load i8*,i8**%d,align 8
ret i8*%bj
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_588(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
%q=getelementptr inbounds i8,i8*%n,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=add i32%s,-1
%u=sub i32 0,%s
%v=and i32%t,%u
%w=add i32%s,7
%x=add i32%w,%v
%y=and i32%x,-8
%z=getelementptr inbounds i8,i8*%n,i64 8
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=or i32%y,4
%D=icmp eq i8*%p,null
br i1%D,label%E,label%F
E:
ret i8*null
F:
%G=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg%B,i32 inreg%s,i32 inreg%B,i32 inreg%s)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%f,align 8
%M=bitcast i8**%d to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%e,align 8
%P=bitcast i8**%N to i8*
%Q=getelementptr inbounds i8*,i8**%N,i64 1
%R=bitcast i8**%Q to i32*
%S=load i32,i32*%R,align 4
%T=getelementptr inbounds i8,i8*%P,i64 12
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
store i8*%W,i8**%g,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i32*
store i32%S,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%W,i64 12
%ae=bitcast i8*%ad to i32*
store i32%V,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%W,i64 16
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_587 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_587 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 1,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=call fastcc i8*%J(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=load i8*,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=icmp eq i32%aC,0
br i1%aD,label%aK,label%aE
aE:
%aF=load i8*,i8**%c,align 8
%aG=sext i32%v to i64
%aH=getelementptr inbounds i8,i8*%aF,i64%aG
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
br label%aV
aK:
%aL=getelementptr inbounds i8,i8*%az,i64 12
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=call i8*@sml_alloc(i32 inreg%aN)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32%aN,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=sext i32%v to i64
%aT=getelementptr inbounds i8,i8*%aR,i64%aS
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aO,i8*%aT,i32%aN,i1 false)
%aU=load i8*,i8**%e,align 8
br label%aV
aV:
%aW=phi i64[%aS,%aK],[%aG,%aE]
%aX=phi i8*[%aU,%aK],[%ay,%aE]
%aY=phi i8*[%aO,%aK],[%aJ,%aE]
store i8*null,i8**%e,align 8
%aZ=call fastcc i8*%aw(i8*inreg%aX,i8*inreg%aY)
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i8*(i8*,i8*)**
%a2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a1,align 8
%a3=bitcast i8*%aZ to i8**
%a4=load i8*,i8**%a3,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=sext i32%y to i64
%a7=getelementptr inbounds i8,i8*%a5,i64%a6
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=call fastcc i8*%a2(i8*inreg%a4,i8*inreg%a9)
store i8*%ba,i8**%c,align 8
%bb=load i8*,i8**%d,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 12
%bd=bitcast i8*%bc to i32*
%be=load i32,i32*%bd,align 4
store i8*null,i8**%d,align 8
%bf=getelementptr inbounds i8,i8*%bb,i64 8
%bg=bitcast i8*%bf to i32*
%bh=load i32,i32*%bg,align 4
%bi=call i8*@sml_alloc(i32 inreg%C)#0
%bj=or i32%y,1342177280
%bk=getelementptr inbounds i8,i8*%bi,i64 -4
%bl=bitcast i8*%bk to i32*
store i32%bj,i32*%bl,align 4
call void@llvm.memset.p0i8.i32(i8*%bi,i8 0,i32%C,i1 false)
%bm=icmp eq i32%bh,0
%bn=load i8*,i8**%c,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64%aW
br i1%bm,label%br,label%bp
bp:
%bq=bitcast i8*%bo to i8**
store i8*%bn,i8**%bq,align 8
br label%bs
br:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bo,i8*%bn,i32%be,i1 false)
br label%bs
bs:
%bt=getelementptr inbounds i8,i8*%bi,i64%a6
%bu=bitcast i8*%bt to i32*
store i32%B,i32*%bu,align 4
ret i8*%bi
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_589(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_588 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_588 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg%a,i32 inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_589 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3minE_589 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_592(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=tail call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%g=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%f)
ret i8*%g
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_594(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=icmp eq i8*%j,null
br i1%l,label%m,label%n
m:
ret i8*null
n:
%o=bitcast i8*%j to i32*
%p=load i32,i32*%o,align 4
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 4)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 4,i32*%B,align 4
store i32%p,i32*%z,align 4
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=call fastcc i8*%v(i8*inreg%C,i8*inreg%y)
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=bitcast i8*%h to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aR,i64 0,i32 2)to i8*),i8**%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_594 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_594 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
%y=load i8*,i8**%b,align 8
%z=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_594(i8*inreg%q,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_599(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=bitcast i32%a to float
%g=fpext float%f to double
%h=bitcast double%g to i64
%i=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%h)
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_601(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=icmp eq i8*%j,null
br i1%l,label%m,label%n
m:
ret i8*null
n:
%o=bitcast i8*%j to i32*
%p=load i32,i32*%o,align 4
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 4)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 4,i32*%B,align 4
store i32%p,i32*%z,align 4
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=call fastcc i8*%v(i8*inreg%C,i8*inreg%y)
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=bitcast i8*%h to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aT,i64 0,i32 2)to i8*),i8**%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_601 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_601 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
%y=load i8*,i8**%b,align 8
%z=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_601(i8*inreg%q,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_604(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%n to i8*
br label%p
p:
%q=phi i8*[%o,%l],[%a,%j]
%r=phi i8**[%n,%l],[%k,%j]
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*,i8*,i8*,i8*)**
%v=load i8*(i8*,i8*,i8*,i8*,i8*)*,i8*(i8*,i8*,i8*,i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%q,i64 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=getelementptr inbounds i8,i8*%q,i64 12
%C=bitcast i8*%B to i32*
%D=load i32,i32*%C,align 4
%E=getelementptr inbounds i8,i8*%q,i64 16
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%q,i64 20
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=call i8*@sml_alloc(i32 inreg 4)#0
%L=bitcast i8*%K to i32*
%M=getelementptr inbounds i8,i8*%K,i64 -4
%N=bitcast i8*%M to i32*
store i32 4,i32*%N,align 4
store i8*%K,i8**%d,align 8
store i32%A,i32*%L,align 4
%O=call i8*@sml_alloc(i32 inreg 4)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 4,i32*%R,align 4
store i8*%O,i8**%f,align 8
store i32%D,i32*%P,align 4
%S=call i8*@sml_alloc(i32 inreg 4)#0
%T=bitcast i8*%S to i32*
%U=getelementptr inbounds i8,i8*%S,i64 -4
%V=bitcast i8*%U to i32*
store i32 4,i32*%V,align 4
store i8*%S,i8**%g,align 8
store i32%G,i32*%T,align 4
%W=call i8*@sml_alloc(i32 inreg 4)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 4,i32*%Z,align 4
store i32%J,i32*%X,align 4
%aa=load i8*,i8**%e,align 8
%ab=load i8*,i8**%d,align 8
%ac=load i8*,i8**%f,align 8
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
%ae=call fastcc i8*%v(i8*inreg%aa,i8*inreg%ab,i8*inreg%ac,i8*inreg%ad,i8*inreg%W)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%ak)
ret i8*%al
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_605(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%k,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%k,i64 16
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%k,i64 20
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
%D=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%D)
call void@llvm.gcroot(i8**%c,i8*null)#0
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%E,i8**%c,align 8
store i32%n,i32*%F,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32%q,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i32*
store i32%t,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%E,i64 12
%N=bitcast i8*%M to i32*
store i32%w,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%E,i64 16
%P=bitcast i8*%O to i32*
store i32%z,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%E,i64 20
%R=bitcast i8*%Q to i32*
store i32%C,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%E,i64 24
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_487 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_487 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%D)
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_487(i8*inreg%X,i8*inreg%af)
store i8*%ag,i8**%d,align 8
%ah=load i8*,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 24
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=getelementptr inbounds i8,i8*%ah,i64 28
%am=bitcast i8*%al to i32*
%an=load i32,i32*%am,align 4
%ao=getelementptr inbounds i8,i8*%ah,i64 32
%ap=bitcast i8*%ao to i32*
%aq=load i32,i32*%ap,align 4
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%ah,i64 36
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=call i8*@sml_alloc(i32 inreg 28)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177304,i32*%aw,align 4
store i8*%au,i8**%e,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i32*
store i32%ak,i32*%aA,align 4
%aB=getelementptr inbounds i8,i8*%au,i64 12
%aC=bitcast i8*%aB to i32*
store i32%an,i32*%aC,align 4
%aD=getelementptr inbounds i8,i8*%au,i64 16
%aE=bitcast i8*%aD to i32*
store i32%aq,i32*%aE,align 4
%aF=getelementptr inbounds i8,i8*%au,i64 20
%aG=bitcast i8*%aF to i32*
store i32%at,i32*%aG,align 4
%aH=getelementptr inbounds i8,i8*%au,i64 24
%aI=bitcast i8*%aH to i32*
store i32 1,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 28)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177304,i32*%aL,align 4
%aM=load i8*,i8**%e,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_604 to void(...)*),void(...)**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 16
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_604 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 24
%aT=bitcast i8*%aS to i32*
store i32 -2147483647,i32*%aT,align 4
ret i8*%aJ
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24joinE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f,i32 inreg%g,i32 inreg%h,i32 inreg%i,i32 inreg%j)#4 gc"smlsharp"{
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%k,i8*null)#0
%l=call i8*@sml_alloc(i32 inreg 44)#0
%m=bitcast i8*%l to i32*
%n=getelementptr inbounds i8,i8*%l,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177320,i32*%o,align 4
store i8*%l,i8**%k,align 8
store i32%a,i32*%m,align 4
%p=getelementptr inbounds i8,i8*%l,i64 4
%q=bitcast i8*%p to i32*
store i32%b,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i32*
store i32%c,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%l,i64 12
%u=bitcast i8*%t to i32*
store i32%d,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%l,i64 16
%w=bitcast i8*%v to i32*
store i32%e,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%l,i64 20
%y=bitcast i8*%x to i32*
store i32%f,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%l,i64 24
%A=bitcast i8*%z to i32*
store i32%g,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%l,i64 28
%C=bitcast i8*%B to i32*
store i32%h,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%l,i64 32
%E=bitcast i8*%D to i32*
store i32%i,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%l,i64 36
%G=bitcast i8*%F to i32*
store i32%j,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%l,i64 40
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
%M=load i8*,i8**%k,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_605 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_605 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 24
%T=bitcast i8*%S to i32*
store i32 -2147483647,i32*%T,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_608(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,-1
%i=sub i32 0,%g
%j=and i32%h,%i
%k=add i32%g,7
%l=add i32%k,%j
%m=and i32%l,-8
%n=bitcast i8*%a to i32*
%o=load i32,i32*%n,align 4
%p=or i32%m,4
%q=bitcast i8*%b to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%t,label%x
t:
%u=getelementptr inbounds i8,i8*%b,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
br label%ak
x:
store i8*%r,i8**%c,align 8
%y=icmp eq i32%o,0
br i1%y,label%E,label%z
z:
store i8*null,i8**%c,align 8
%A=sext i32%j to i64
%B=getelementptr inbounds i8,i8*%r,i64%A
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
br label%P
E:
%F=call i8*@sml_alloc(i32 inreg%g)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32%g,i32*%H,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=sext i32%j to i64
%K=getelementptr inbounds i8,i8*%I,i64%J
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%F,i8*%K,i32%g,i1 false)
%L=load i8*,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%L,i64 4
%N=bitcast i8*%M to i32*
%O=bitcast i8*%L to i32*
br label%P
P:
%Q=phi i64[%J,%E],[%A,%z]
%R=phi i32*[%O,%E],[%n,%z]
%S=phi i32*[%N,%E],[%f,%z]
%T=phi i8*[%F,%E],[%D,%z]
store i8*%T,i8**%c,align 8
%U=load i32,i32*%S,align 4
store i8*null,i8**%d,align 8
%V=load i32,i32*%R,align 4
%W=call i8*@sml_alloc(i32 inreg%p)#0
%X=or i32%m,1342177280
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32%X,i32*%Z,align 4
call void@llvm.memset.p0i8.i32(i8*%W,i8 0,i32%p,i1 false)
%aa=icmp eq i32%V,0
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%W,i64%Q
br i1%aa,label%af,label%ad
ad:
%ae=bitcast i8*%ac to i8**
store i8*%ab,i8**%ae,align 8
br label%ag
af:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ac,i8*%ab,i32%U,i1 false)
br label%ag
ag:
%ah=sext i32%m to i64
%ai=getelementptr inbounds i8,i8*%W,i64%ah
%aj=bitcast i8*%ai to i32*
store i32%o,i32*%aj,align 4
br label%ak
ak:
%al=phi i8*[%w,%t],[%W,%ag]
ret i8*%al
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_608 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_608 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define fastcc void@_SMLFN17SMLSharp__SQL__Prim8closeResE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 4)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 4,i32*%u,align 4
store i32 0,i32*%s,align 4
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=call fastcc i8*%o(i8*inreg%v,i8*inreg%r)
ret void
}
define fastcc void@_SMLFN17SMLSharp__SQL__Prim12closeCommandE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim12closeCommandE_261(i8*inreg%h)
ret void
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_615(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%l=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_263(i8*inreg%j)#0
ret i8*%l
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11dummyCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_615 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_615 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_618(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%e,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i8*%n,i8**%f,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%e,align 8
%M=bitcast i8*%L to i8**
call void@sml_write(i8*inreg%L,i8**inreg%M,i8*inreg%E)#0
%N=load i8*,i8**%e,align 8
ret i8*%N
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_619(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_618 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_618 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9newCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a0,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_623(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
store i8*null,i8**%e,align 8
%r=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
call void@llvm.gcroot(i8**%c,i8*null)#0
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%s,i8**%c,align 8
store i32%n,i32*%t,align 4
%w=getelementptr inbounds i8,i8*%s,i64 4
%x=bitcast i8*%w to i32*
store i32%q,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_268 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_268 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_268(i8*inreg%D,i8*inreg%L)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12queryCommandE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_623 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_623 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%l=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_271(i8*inreg%j)
ret i8*%l
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sqlserver__stringE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_626 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_626 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_629(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%l=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_275(i8*inreg%j)#0
ret i8*%l
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sqlserver__backendE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_629 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_629 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_632(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%k,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%e,align 8
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%t,i8**%c,align 8
store i32%o,i32*%u,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32%r,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_378 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_378 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_378(i8*inreg%E,i8*inreg%M)
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_632 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_632 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7connectE_635(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_373(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aa,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*,i8*)**
%m=load i8*(i8*,i8*,i8*)*,i8*(i8*,i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=load i8*,i8**%d,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 4)#0
%w=bitcast i8*%v to i32*
%x=getelementptr inbounds i8,i8*%v,i64 -4
%y=bitcast i8*%x to i32*
store i32 4,i32*%y,align 4
store i8*%v,i8**%d,align 8
store i32%r,i32*%w,align 4
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32%u,i32*%A,align 4
%D=load i8*,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%F=call fastcc i8*%m(i8*inreg%D,i8*inreg%E,i8*inreg%z)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7connectE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7connectE_635 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim7connectE_635 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16connectAndCreateE_638(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_373(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ab,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*,i8*)**
%m=load i8*(i8*,i8*,i8*)*,i8*(i8*,i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=load i8*,i8**%d,align 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 4)#0
%w=bitcast i8*%v to i32*
%x=getelementptr inbounds i8,i8*%v,i64 -4
%y=bitcast i8*%x to i32*
store i32 4,i32*%y,align 4
store i8*%v,i8**%d,align 8
store i32%r,i32*%w,align 4
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32%u,i32*%A,align 4
%D=load i8*,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%F=call fastcc i8*%m(i8*inreg%D,i8*inreg%E,i8*inreg%z)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16connectAndCreateE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16connectAndCreateE_638 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim16connectAndCreateE_638 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim9closeConnE_641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%l=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1653(i8*inreg null,i8*inreg%j)
ret void
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9closeConnE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_641 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1736 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc void@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_644(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%l=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1655(i8*inreg null,i8*inreg%j)
ret void
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11closeCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_644 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1738 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_647(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_422(i32 inreg%m,i32 inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
ret i8*%x
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5fetchE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5fetchE_647 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5fetchE_647 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_650(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
store i8*null,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
call void@llvm.gcroot(i8**%c,i8*null)#0
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%s,i8**%c,align 8
store i32%n,i32*%t,align 4
%w=getelementptr inbounds i8,i8*%s,i64 4
%x=bitcast i8*%w to i32*
store i32%q,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_425 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_425 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_425(i8*inreg%D,i8*inreg%L)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_650 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_650 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3toyE_653(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
store i8*null,i8**%e,align 8
%r=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
call void@llvm.gcroot(i8**%c,i8*null)#0
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=bitcast i8*%s to i32*
%u=getelementptr inbounds i8,i8*%s,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%s,i8**%c,align 8
store i32%n,i32*%t,align 4
%w=getelementptr inbounds i8,i8*%s,i64 4
%x=bitcast i8*%w to i32*
store i32%q,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_383 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_383 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3toyE_383(i8*inreg%D,i8*inreg%L)
ret i8*%M
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim3toyE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_653 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim3toyE_653 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_656(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%k,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%e,align 8
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%t,i8**%c,align 8
store i32%o,i32*%u,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32%r,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_391 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_391 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_391(i8*inreg%E,i8*inreg%M)
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_656 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_656 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_659(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%k,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
store i8*null,i8**%e,align 8
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%t,i8**%c,align 8
store i32%o,i32*%u,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32%r,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_399 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_399 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_399(i8*inreg%E,i8*inreg%M)
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 28)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%h,i64 12
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%h,i64 16
%s=bitcast i8*%r to i32*
store i32%e,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%h,i64 20
%u=bitcast i8*%t to i32*
store i32%f,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%h,i64 24
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%g,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_659 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_659 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
store i8*null,i8**%e,align 8
%p=getelementptr inbounds i8,i8*%k,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%t,i8**%c,align 8
store i32%o,i32*%u,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32%r,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_402 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_402 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_402(i8*inreg%E,i8*inreg%M)
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11expToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_662 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_662 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 32
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 40
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 88
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 24
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 72
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 56
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 64
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 80
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%k,i64 48
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%h,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%v,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%q(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 2,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 3,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 10,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE(i8 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
%f=getelementptr inbounds i8,i8*%b,i64 5
tail call void@llvm.memset.p0i8.i32(i8*%f,i8 0,i32 3,i1 false)
store i32 1,i32*%c,align 4
%g=getelementptr inbounds i8,i8*%b,i64 4
store i8%a,i8*%g,align 1
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 0,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 8,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE(i64 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 20)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177296,i32*%e,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32 0,i32*%g,align 1
store i32 6,i32*%c,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i64*
store i64%a,i64*%i,align 4
%j=getelementptr inbounds i8,i8*%b,i64 16
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 7,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 9,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 5,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 2,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 3,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 10,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=load i8,i8*%a,align 1
%f=tail call i8*@sml_alloc(i32 inreg 12)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 5
tail call void@llvm.memset.p0i8.i32(i8*%j,i8 0,i32 3,i1 false)
store i32 1,i32*%g,align 4
%k=getelementptr inbounds i8,i8*%f,i64 4
store i8%e,i8*%k,align 1
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%f
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 0,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 8,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=tail call i8*@sml_alloc(i32 inreg 20)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32 6,i32*%h,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to double*
store double%f,double*%n,align 8
%o=getelementptr inbounds i8,i8*%g,i64 16
%p=bitcast i8*%o to i32*
store i32 0,i32*%p,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 7,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to float*
store float%f,float*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 9,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 5,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_727(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bL,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toyServerE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bM,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim6ty__intE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bO,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__intInfE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bQ,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__wordE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bS,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__charE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bU,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__boolE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bW,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__stringE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bY,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__realE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b0,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__real32E(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b2,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12ty__timestampE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b4,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10ty__numericE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b6,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12ty__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b9,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__intInfOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cc,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cf,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__charOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ci,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cl,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__stringOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@co,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cr,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cu,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18ty__timestampOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cx,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16ty__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cA,i64 0,i32 2)to i8*)
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN5Int327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Word327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN4Char7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6String7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real647compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_460(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=icmp ult i32%a,3
br i1%h,label%A,label%i
i:
call void@sml_matchcomp_bug()
%j=load i8*,i8**@_SMLZ5Match,align 8
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%c,align 8
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@cM,i64 0,i32 2,i64 0),i8**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 60)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177336,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%t,i64 56
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=load i8*,i8**%c,align 8
%z=bitcast i8*%t to i8**
store i8*%y,i8**%z,align 8
call void@sml_raise(i8*inreg%t)#1
unreachable
A:
%B=sext i32%a to i64
%C=getelementptr inbounds[3x i32],[3x i32]*@i8,i64 0,i64%B
%D=load i32,i32*%C,align 4
ret i32%D
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_834(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%k,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
store i8*null,i8**%e,align 8
%x=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%c,i8*null)#0
%y=call i8*@sml_alloc(i32 inreg 36)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177312,i32*%B,align 4
store i8*%y,i8**%c,align 8
store i32%n,i32*%z,align 4
%C=getelementptr inbounds i8,i8*%y,i64 4
%D=bitcast i8*%C to i32*
store i32%q,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%y,i64 12
%H=bitcast i8*%G to i32*
store i32%q,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%y,i64 16
%J=bitcast i8*%I to i32*
store i32%t,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%y,i64 20
%L=bitcast i8*%K to i32*
store i32%w,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%y,i64 24
%N=bitcast i8*%M to i32*
store i32%t,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%y,i64 28
%P=bitcast i8*%O to i32*
store i32%w,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%y,i64 32
%R=bitcast i8*%Q to i32*
store i32 0,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_465 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_465 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_465(i8*inreg%V,i8*inreg%ad)
ret i8*%ae
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_834 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_834 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool38fromBoolE(i32 inreg%a)#4 gc"smlsharp"{
%b=icmp ne i32%a,0
%c=zext i1%b to i32
ret i32%c
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool36isTrueE(i32 inreg%a)#4 gc"smlsharp"{
%b=icmp eq i32%a,1
%c=zext i1%b to i32
ret i32%c
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=icmp ult i32%a,3
br i1%h,label%A,label%i
i:
call void@sml_matchcomp_bug()
%j=load i8*,i8**@_SMLZ5Match,align 8
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%c,align 8
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@cR,i64 0,i32 2,i64 0),i8**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 60)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177336,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%t,i64 56
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=load i8*,i8**%c,align 8
%z=bitcast i8*%t to i8**
store i8*%y,i8**%z,align 8
call void@sml_raise(i8*inreg%t)#1
unreachable
A:
%B=sext i32%a to i64
%C=getelementptr inbounds[3x i32],[3x i32]*@i9,i64 0,i64%B
%D=load i32,i32*%C,align 4
ret i32%D
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27onlyOneE_846(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=icmp eq i8*%b,null
br i1%j,label%H,label%k
k:
%l=getelementptr inbounds i8,i8*%b,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
br i1%o,label%p,label%H
p:
%q=bitcast i8*%b to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=bitcast i8*%a to i32*
%t=load i32,i32*%s,align 4
%u=icmp eq i32%t,0
br i1%u,label%A,label%v
v:
%w=sext i32%i to i64
%x=getelementptr inbounds i8,i8*%r,i64%w
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
br label%O
A:
%B=call i8*@sml_alloc(i32 inreg%f)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32%f,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=sext i32%i to i64
%G=getelementptr inbounds i8,i8*%E,i64%F
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%B,i8*%G,i32%f,i1 false)
br label%O
H:
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=bitcast i8*%I to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cU,i64 0,i32 2)to i8*),i8**%N,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
O:
%P=phi i8*[%z,%v],[%B,%A]
ret i8*%P
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27onlyOneE_846 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27onlyOneE_846 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_849(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp ne i8*%a,null
%c=zext i1%b to i32
ret i32%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List210isNotEmptyE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cW,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_853(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%j,i64 12
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%j,i64 20
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%j,i64 24
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
store i8*null,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%j,i64 28
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
%D=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_482(i32 inreg%n,i32 inreg%q,i32 inreg%t,i32 inreg%w,i32 inreg%z,i32 inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
ret i8*%K
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24prodE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f,i32 inreg%g,i32 inreg%h)#4 gc"smlsharp"{
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
%j=call i8*@sml_alloc(i32 inreg 36)#0
%k=bitcast i8*%j to i32*
%l=getelementptr inbounds i8,i8*%j,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177312,i32*%m,align 4
store i8*%j,i8**%i,align 8
store i32%a,i32*%k,align 4
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
store i32%b,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i32*
store i32%c,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%j,i64 12
%s=bitcast i8*%r to i32*
store i32%d,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%j,i64 16
%u=bitcast i8*%t to i32*
store i32%e,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%j,i64 20
%w=bitcast i8*%v to i32*
store i32%f,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%j,i64 24
%y=bitcast i8*%x to i32*
store i32%g,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%j,i64 28
%A=bitcast i8*%z to i32*
store i32%h,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%j,i64 32
%C=bitcast i8*%B to i32*
store i32 0,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
%G=load i8*,i8**%i,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_853 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_853 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
ret i8*%D
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_856(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%k,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%t,i8**%c,align 8
store i32%o,i32*%u,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32%r,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_490 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_490 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%M=bitcast i8**%e to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%d,align 8
%Q=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_490(i8*inreg%E,i8*inreg%O,i8*inreg%P)
ret i8*%Q
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_857(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_856 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_856 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List23nubE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_857 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_857 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_860(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%k,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%c,i8*null)#0
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%y,i8**%c,align 8
store i32%n,i32*%z,align 4
%C=getelementptr inbounds i8,i8*%y,i64 4
%D=bitcast i8*%C to i32*
store i32%q,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i32*
store i32%t,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%y,i64 12
%H=bitcast i8*%G to i32*
store i32%w,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%y,i64 16
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_512 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_512 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_512(i8*inreg%N,i8*inreg%V)
ret i8*%W
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_860 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_860 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_863(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%k,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%c,i8*null)#0
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%y,i8**%c,align 8
store i32%n,i32*%z,align 4
%C=getelementptr inbounds i8,i8*%y,i64 4
%D=bitcast i8*%C to i32*
store i32%q,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i32*
store i32%t,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%y,i64 12
%H=bitcast i8*%G to i32*
store i32%w,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%y,i64 16
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_524 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_524 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_524(i8*inreg%N,i8*inreg%V)
ret i8*%W
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_863 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_863 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_866(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add nsw i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c2,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_870(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=tail call fastcc i8*%m(i8*inreg%o,i8*inreg%h)
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c4,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_874(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c6,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_878(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fadd double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c8,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_882(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fadd float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@da,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_KE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_888(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=sub nsw i32%c,%f
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dd,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_892(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN6IntInf1_ME,align 8
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=tail call fastcc i8*%m(i8*inreg%o,i8*inreg%h)
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@df,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_896(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=sub i32%c,%f
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dh,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_900(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fsub double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dj,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_904(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fsub float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dl,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_ME,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_910(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=mul nsw i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@do,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_914(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN6IntInf1_JE,align 8
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=tail call fastcc i8*%m(i8*inreg%o,i8*inreg%h)
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dq,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_918(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=mul i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ds,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_922(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fmul double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@du,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_926(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fmul float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dw,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_JE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_934(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i32*
%e=load i32,i32*%d,align 4
%f=getelementptr inbounds i8,i8*%a,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
br i1%i,label%I,label%j
j:
%k=xor i32%e,-2147483648
%l=add i32%h,1
%m=or i32%l,%k
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
%p=sdiv i32%e,%h
ret i32%p
q:
%r=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dz,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=load i8*,i8**@_SMLZ3Div,align 8
store i8*%J,i8**%b,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%c,align 8
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dz,i64 0,i32 2,i64 0),i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 60)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177336,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 56
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
%Z=bitcast i8*%T to i8**
store i8*%Y,i8**%Z,align 8
call void@sml_raise(i8*inreg%T)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dA,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf4quotE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_941(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,0
br i1%g,label%l,label%h
h:
%i=bitcast i8*%a to i32*
%j=load i32,i32*%i,align 4
%k=udiv i32%j,%f
ret i32%k
l:
%m=load i8*,i8**@_SMLZ3Div,align 8
store i8*%m,i8**%b,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%c,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dD,i64 0,i32 2,i64 0),i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 3,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 60)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177336,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%w,i64 56
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%w to i8**
store i8*%B,i8**%C,align 8
call void@sml_raise(i8*inreg%w)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dE,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_945(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fdiv double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dG,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_949(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fdiv float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dI,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric4quotE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_956(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
switch i32%f,label%g[
i32 0,label%l
i32 -1,label%k
]
g:
%h=bitcast i8*%a to i32*
%i=load i32,i32*%h,align 4
%j=srem i32%i,%f
ret i32%j
k:
ret i32 0
l:
%m=load i8*,i8**@_SMLZ3Div,align 8
store i8*%m,i8**%b,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%c,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dL,i64 0,i32 2,i64 0),i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 3,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 60)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177336,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%w,i64 56
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%w to i8**
store i8*%B,i8**%C,align 8
call void@sml_raise(i8*inreg%w)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dM,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf3remE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_963(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,0
br i1%g,label%l,label%h
h:
%i=bitcast i8*%a to i32*
%j=load i32,i32*%i,align 4
%k=urem i32%j,%f
ret i32%k
l:
%m=load i8*,i8**@_SMLZ3Div,align 8
store i8*%m,i8**%b,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%c,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dP,i64 0,i32 2,i64 0),i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 3,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 60)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177336,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%w,i64 56
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%w to i8**
store i8*%B,i8**%C,align 8
call void@sml_raise(i8*inreg%w)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dQ,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aF,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aG,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric3remE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=icmp eq i8*%a,null
br i1%d,label%e,label%f
e:
ret i8*null
f:
%g=bitcast i8*%a to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,-2147483648
br i1%i,label%t,label%j
j:
%k=sub nsw i32 0,%h
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=bitcast i8*%l to i32*
%n=getelementptr inbounds i8,i8*%l,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%l,i64 4
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 1
store i32%k,i32*%m,align 4
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
ret i8*%l
t:
%u=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%u,i8**%b,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@dV,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6IntInf1_eE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=sub i32 0,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32%g,i32*%i,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=fsub double 0.000000e+00,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=bitcast i8*%h to double*
store double%g,double*%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=fsub float 0.000000e+00,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to float*
store float%g,float*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_eE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8abs__wordE(i32 inreg%a)#4 gc"smlsharp"{
ret i32%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=icmp eq i8*%a,null
br i1%d,label%e,label%f
e:
ret i8*null
f:
%g=bitcast i8*%a to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,-2147483648
br i1%i,label%v,label%j
j:
%k=icmp slt i32%h,0
%l=sub nsw i32 0,%h
%m=select i1%k,i32%l,i32%h
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=bitcast i8*%n to i32*
%p=getelementptr inbounds i8,i8*%n,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%n,i64 4
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
store i32%m,i32*%o,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%n
v:
%w=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@d3,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6IntInf3absE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32%f,i32*%h,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=tail call double@llvm.fabs.f64(double%f)#0
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=bitcast i8*%h to double*
store double%g,double*%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=tail call float@llvm.fabs.f32(float%f)#0
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to float*
store float%g,float*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric3absE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6lt__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,2
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10lt__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1021(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ek,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1025(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@em,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1029(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eo,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1033(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eq,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1037(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,2
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@es,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1041(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eu,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1045(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ew,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1049(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ey,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1053(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eA,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1057(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eC,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6gt__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,1
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10gt__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1081(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eO,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1085(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eQ,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1089(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eS,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1093(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eU,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1097(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,1
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eW,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1101(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eY,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1105(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e0,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1109(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e2,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1113(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e4,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1117(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e6,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6le__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,1
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10le__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1141(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fi,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1145(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fk,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1149(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fm,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1153(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fo,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1157(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,1
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fq,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1161(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fs,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1165(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fu,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1169(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fw,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1173(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fy,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1177(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fA,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6ge__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,2
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10ge__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1201(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fM,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1205(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fO,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1209(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fQ,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1213(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1217(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,2
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fU,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1221(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fW,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1225(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1229(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f0,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_1233(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_1237(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f4,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6eq__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,0
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10eq__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_1261(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gg,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_1265(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gi,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_1269(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_1273(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gm,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_1277(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp eq i32%s,0
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@go,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_1281(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gq,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_1285(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gs,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_1289(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gu,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_1293(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gw,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_1297(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gy,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7neq__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__boolE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,0
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11neq__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_1321(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gK,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_1325(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gM,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_1329(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gO,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_1333(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gQ,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_1337(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=icmp eq i32%k,0
%m=getelementptr inbounds i8,i8*%h,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%l,i32%r,i32%q
%t=icmp ne i32%s,0
%u=zext i1%t to i32
ret i32%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gS,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_1341(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_1345(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gW,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_1349(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gY,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_1353(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g0,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_1357(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_533(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g2,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
ret i32%v
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6op2optE_529(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6String1_ZE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11like__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLLN17SMLSharp__SQL__Prim9matchLikeE_541(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN5Int327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Word327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN4Char7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6String7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real647compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6nullifE_549(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7avg__intE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7fromIntE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric12fromLargeIntE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_1389(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=tail call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%g=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%f)
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hi,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__realE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric13fromLargeRealE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_1397(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=bitcast i32%a to float
%g=fpext float%f to double
%h=bitcast double%g to i64
%i=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%h)
ret i8*%i
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hl,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_1401(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hn,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_1405(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7fromIntE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hp,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_1409(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric12fromLargeIntE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hr,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_1413(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric13fromLargeRealE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ht,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1417(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1419(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3avgE_554(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hv,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hw,i64 0,i32 2)to i8*))
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%G=call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
%H=load i8*,i8**%c,align 8
%I=tail call fastcc i8*%q(i8*inreg%H,i8*inreg%G)
ret i8*%I
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim7sum__intE_1423(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add nsw i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sum__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hy,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32%N,i32*%P,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%c,align 8
%A=call i8*@sml_save()#0
%B=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@hJ,i64 0,i64 0))#0
call void@sml_unsave()#0
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=call fastcc i8*%x(i8*inreg%C,i8*inreg%B)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%b,align 8
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
%O=load i8*,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
ret i8*%L
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_1430(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hB,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32%N,i32*%P,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim8sum__realE_1434(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fadd double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hD,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 8)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 8,i32*%B,align 4
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to double*
%N=load double,double*%M,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
%R=bitcast i8*%O to double*
store double%N,double*%R,align 8
%S=getelementptr inbounds i8,i8*%O,i64 8
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
ret i8*%O
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_1438(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fadd float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hF,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to float*
%N=load float,float*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%O,i64 4
%S=bitcast i8*%R to i32*
store i32 0,i32*%S,align 1
%T=bitcast i8*%O to float*
store float%N,float*%T,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_1442(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add nsw i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hH,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 4)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 4,i32*%w,align 4
store i32 0,i32*%u,align 4
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%q(i8*inreg%x,i8*inreg%t)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
%F=tail call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
ret i8*%F
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_save()#0
%v=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@hJ,i64 0,i64 0))#0
call void@sml_unsave()#0
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%r(i8*inreg%w,i8*inreg%v)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%b,align 8
%E=tail call fastcc i8*%A(i8*inreg%C,i8*inreg%D)
ret i8*%E
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1449(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hL,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 4)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 4,i32*%w,align 4
store i32 0,i32*%u,align 4
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%q(i8*inreg%x,i8*inreg%t)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
%F=tail call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
ret i8*%F
}
define internal fastcc double@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_1453(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fadd double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hN,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 8)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 8,i32*%v,align 4
%w=bitcast i8*%t to i64*
store i64 0,i64*%w,align 4
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%q(i8*inreg%x,i8*inreg%t)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
%F=tail call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
ret i8*%F
}
define internal fastcc float@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1457(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fadd float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hP,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 4)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 4,i32*%w,align 4
store i32 0,i32*%u,align 4
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%q(i8*inreg%x,i8*inreg%t)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
%F=tail call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
ret i8*%F
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_577(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_KE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%r(i8*inreg%v,i8*inreg%u)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%b,align 8
%D=tail call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
ret i8*%D
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7max__intE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN5Int327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__wordE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Word327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__charE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN4Char7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__boolE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__stringE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6String7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__realE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real647compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__real32E(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11max__numericE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_1483(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN5Int327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h2,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1487(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h4,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_1491(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Word327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h6,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_1495(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 1)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN4Char7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 1)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h8,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_1499(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ia,i64 0,i32 2)to i8*))
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%G=call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
%H=load i8*,i8**%c,align 8
%I=tail call fastcc i8*%q(i8*inreg%H,i8*inreg%G)
ret i8*%I
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_1503(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6String7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ic,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_1507(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Real647compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ie,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_1511(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Real327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ig,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1515(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ii,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_1519(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3maxE_585(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ik,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7min__intE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN5Int327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__wordE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Word327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__charE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 1)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN4Char7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__boolE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__stringE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6String7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__realE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real647compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__real32E(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN6Real327compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11min__numericE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_1543(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN5Int327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iw,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1547(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6IntInf7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iy,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_1551(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Word327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iA,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_1555(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 1)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN4Char7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 1)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iC,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_1559(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ax,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iE,i64 0,i32 2)to i8*))
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%G=call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
%H=load i8*,i8**%c,align 8
%I=tail call fastcc i8*%q(i8*inreg%H,i8*inreg%G)
ret i8*%I
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_1563(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6String7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iG,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_1567(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Real647compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iI,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_1571(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN6Real327compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iK,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1575(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN22SMLSharp__SQL__TimeStamp7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iM,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_1579(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3minE_590(i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7compareE,align 8
%o=call fastcc i8*%k(i8*inreg%m,i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iO,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=tail call fastcc i8*%r(i8*inreg%I,i8*inreg%H)
ret i8*%J
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim5countE_1583(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%m,i32 inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
ret i32%z
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5countE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5countE_1583 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim5countE_2174 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_1586(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLN17SMLSharp__SQL__Prim12count__optionE_1588(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%n,i32 inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
store i8*null,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%x,i64 4
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
%D=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%z,i32 inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iR,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=call fastcc i8*%u(i8*inreg%R,i8*inreg%Q)
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
ret i32%U
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12count__optionE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_1588 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2177 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7Num__intE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%a)
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=load i8*,i8**%b,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%h)
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
%n=load i8*,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%h=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%g)
store i8*%h,i8**%b,align 8
%i=call i8*@sml_alloc(i32 inreg 12)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i32*
store i32 1,i32*%o,align 4
ret i8*%i
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__realE(i64 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%a)
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=load i8*,i8**%b,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=bitcast i32%a to float
%h=fpext float%g to double
%i=bitcast double%h to i64
%j=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%i)
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
%n=load i8*,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 12)#0
%d=getelementptr inbounds i8,i8*%c,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
%f=load i8*,i8**%b,align 8
%g=bitcast i8*%c to i8**
store i8*%f,i8**%g,align 8
%h=getelementptr inbounds i8,i8*%c,i64 8
%i=bitcast i8*%h to i32*
store i32 1,i32*%i,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i64*
%n=load i64,i64*%m,align 4
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17Num__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op8coalesceE_1611(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=add i32%f,7
%k=and i32%j,%h
%l=bitcast i8*%b to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%o,label%E
o:
%p=bitcast i8*%a to i32*
%q=load i32,i32*%p,align 4
%r=icmp eq i32%q,0
br i1%r,label%x,label%s
s:
%t=sext i32%k to i64
%u=getelementptr inbounds i8,i8*%b,i64%t
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
br label%U
x:
%y=call i8*@sml_alloc(i32 inreg%f)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32%f,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=sext i32%k to i64
%D=getelementptr inbounds i8,i8*%B,i64%C
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%y,i8*%D,i32%f,i1 false)
br label%U
E:
store i8*%m,i8**%c,align 8
%F=bitcast i8*%a to i32*
%G=load i32,i32*%F,align 4
%H=icmp eq i32%G,0
br i1%H,label%N,label%I
I:
%J=sext i32%i to i64
%K=getelementptr inbounds i8,i8*%m,i64%J
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
br label%U
N:
%O=call i8*@sml_alloc(i32 inreg%f)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32%f,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=sext i32%i to i64
%T=getelementptr inbounds i8,i8*%R,i64%S
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%O,i8*%T,i32%f,i1 false)
br label%U
U:
%V=phi i8*[%w,%s],[%y,%x],[%M,%I],[%O,%N]
ret i8*%V
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op8coalesceE_1611 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op8coalesceE_1611 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4SomeE_1614(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=add i32%f,7
%k=add i32%j,%i
%l=and i32%k,-8
%m=bitcast i8*%a to i32*
%n=load i32,i32*%m,align 4
%o=or i32%l,4
%p=call i8*@sml_alloc(i32 inreg%o)#0
%q=or i32%l,1342177280
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32%q,i32*%s,align 4
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32%o,i1 false)
%t=icmp eq i32%n,0
%u=load i8*,i8**%c,align 8
%v=sext i32%i to i64
%w=getelementptr inbounds i8,i8*%p,i64%v
br i1%t,label%z,label%x
x:
%y=bitcast i8*%w to i8**
store i8*%u,i8**%y,align 8
br label%A
z:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%w,i8*%u,i32%f,i1 false)
br label%A
A:
%B=sext i32%l to i64
%C=getelementptr inbounds i8,i8*%p,i64%B
%D=bitcast i8*%C to i32*
store i32%n,i32*%D,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4SomeE_1614 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4SomeE_1614 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_1617(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_1619(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%m,i32 inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i5,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
ret i8*%D
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_1619 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_1619 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1623(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_263(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1624(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9equalNameE_1632(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim9equalNameE_331(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_1634(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_344(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_1635(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim12unifyColumnsE_349(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_1637(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim11unifySchemaE_352(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim4linkE_1639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim4linkE_359(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim4linkE_1640(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim4linkE_366(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_1641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_368(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_1642(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim13linkAndCreateE_369(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_1643(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8connect_GE_372(i8*inreg%a,i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLL5toyFn_1646(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL5toyFn_381(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLL3ast_1648(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL3ast_388(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLL3ast_1650(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLL3ast_396(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1653(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim9closeConnE_407(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1655(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_413(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11fromSQL__intE_1660(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__intInfE_1661(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__wordE_1662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__charE_1663(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__boolE_1664(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__stringE_1665(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12fromSQL__realE_1666(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14fromSQL__real32E_1667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17fromSQL__timestampE_1668(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15fromSQL__numericE_1669(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_1670(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim6cmpOptE_458(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12compare__boolE_1672(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=tail call i8*@sml_alloc(i32 inreg 4)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 4,i32*%p,align 4
store i32%l,i32*%n,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_1673(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_464(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_1675(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,%d
%h=zext i1%g to i32
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool32isE_1676(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool34and3E_1677(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool33or3E_1678(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_1680(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_486(i8*inreg%a,i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_1682(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List23nubE_491(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLL4sort_1687(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL4sort_502(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_1689(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_508(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLL4quot_1691(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLL4quot_518(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_1693(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_520(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_1696(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim6cmpoptE_531(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8mod__realE_1698(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLFN17SMLSharp__SQL__Prim8mod__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10mod__real32E_1699(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLFN17SMLSharp__SQL__Prim10mod__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_1702(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_543(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17like__stringOptionE_1703(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1706(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_556(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1707(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1708(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1710(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_565(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1711(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1712(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6sumOptE_1713(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11sum__numericE_1715(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1718(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_592(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1719(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1721(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_599(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1722(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24joinE_1723(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g,i8*inreg%h,i8*inreg%i,i8*inreg%j,i8*inreg%k)#4 gc"smlsharp"{
%l=bitcast i8*%b to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%c to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%d to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%e to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%f to i32*
%u=load i32,i32*%t,align 4
%v=bitcast i8*%g to i32*
%w=load i32,i32*%v,align 4
%x=bitcast i8*%h to i32*
%y=load i32,i32*%x,align 4
%z=bitcast i8*%i to i32*
%A=load i32,i32*%z,align 4
%B=bitcast i8*%j to i32*
%C=load i32,i32*%B,align 4
%D=bitcast i8*%k to i32*
%E=load i32,i32*%D,align 4
%F=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24joinE(i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s,i32 inreg%u,i32 inreg%w,i32 inreg%y,i32 inreg%A,i32 inreg%C,i32 inreg%E)
ret i8*%F
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1724(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8closeResE_1725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLFN17SMLSharp__SQL__Prim8closeResE(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12closeCommandE_1726(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLFN17SMLSharp__SQL__Prim12closeCommandE(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11dummyCursorE_1727(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11dummyCursorE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_1728(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_619(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9newCursorE_1729(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a0,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12queryCommandE_1730(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12queryCommandE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1731(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sqlserver__stringE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1732(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sqlserver__backendE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sqlevalE_1733(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%b to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%d to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%e to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%f to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%g to i32*
%s=load i32,i32*%r,align 4
%t=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE(i32 inreg%i,i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7connectE_1734(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7connectE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16connectAndCreateE_1735(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16connectAndCreateE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim9closeConnE_641(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9closeConnE_1737(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9closeConnE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1738(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_644(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11closeCursorE_1739(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11closeCursorE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5fetchE_1740(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5fetchE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8fetchAllE_1741(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim3toyE_1742(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%b to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%d to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%e to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%f to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%g to i32*
%s=load i32,i32*%r,align 4
%t=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim3toyE(i32 inreg%i,i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15commandToStringE_1743(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%b to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%d to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%e to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%f to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%g to i32*
%s=load i32,i32*%r,align 4
%t=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE(i32 inreg%i,i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13queryToStringE_1744(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%b to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%d to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%e to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%f to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%g to i32*
%s=load i32,i32*%r,align 4
%t=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE(i32 inreg%i,i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11expToStringE_1745(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11expToStringE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17fromSQL__intOptionE_1746(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE_1747(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__wordOptionE_1748(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__charOptionE_1749(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__boolOptionE_1750(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__stringOptionE_1751(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18fromSQL__realOptionE_1752(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20fromSQL__real32OptionE_1753(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE_1754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim21fromSQL__numericOptionE_1755(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9toSQL__intE_1756(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12toSQL__intInfE_1757(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10toSQL__wordE_1758(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10toSQL__charE_1759(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10toSQL__boolE_1760(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12toSQL__stringE_1761(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10toSQL__realE_1762(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i64*
%d=load i64,i64*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE(i64 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12toSQL__real32E_1763(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15toSQL__timestampE_1764(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13toSQL__numericE_1765(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15toSQL__intOptionE_1766(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18toSQL__intInfOptionE_1767(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16toSQL__wordOptionE_1768(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16toSQL__charOptionE_1769(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16toSQL__boolOptionE_1770(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18toSQL__stringOptionE_1771(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16toSQL__realOptionE_1772(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18toSQL__real32OptionE_1773(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim21toSQL__timestampOptionE_1774(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19toSQL__numericOptionE_1775(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_1776(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_727(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9toyServerE_1777(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bM,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6ty__intE_1778(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bO,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ty__intInfE_1779(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bQ,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ty__wordE_1780(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bS,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ty__charE_1781(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bU,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ty__boolE_1782(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bW,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ty__stringE_1783(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@bY,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ty__realE_1784(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b0,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ty__real32E_1785(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b2,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12ty__timestampE_1786(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b4,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10ty__numericE_1787(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b6,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12ty__intOptionE_1788(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@b9,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ty__intInfOptionE_1789(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cc,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ty__wordOptionE_1790(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cf,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ty__charOptionE_1791(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ci,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ty__boolOptionE_1792(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cl,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ty__stringOptionE_1793(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@co,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ty__realOptionE_1794(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cr,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ty__real32OptionE_1795(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cu,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18ty__timestampOptionE_1796(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cx,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16ty__numericOptionE_1797(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@cA,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17compare__intOptionE_1798(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20compare__intInfOptionE_1799(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18compare__wordOptionE_1800(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18compare__charOptionE_1801(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18compare__boolOptionE_1802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20compare__stringOptionE_1803(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18compare__realOptionE_1804(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20compare__real32OptionE_1805(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim23compare__timestampOptionE_1806(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim21compare__numericOptionE_1807(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General212reverseOrderE_1808(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE(i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8General211comparePairE_1809(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool38fromBoolE_1810(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp ne i32%d,0
%f=zext i1%e to i32
%g=tail call i8*@sml_alloc(i32 inreg 4)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 4,i32*%j,align 4
store i32%f,i32*%h,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool36isTrueE_1811(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,1
%f=zext i1%e to i32
%g=tail call i8*@sml_alloc(i32 inreg 4)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 4,i32*%j,align 4
store i32%f,i32*%h,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5Bool34not3E_1812(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E(i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27onlyOneE_1813(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1814(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=icmp ne i8*%b,null
%d=zext i1%c to i32
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32%d,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1815(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cW,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List24prodE_1816(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g,i8*inreg%h,i8*inreg%i)#4 gc"smlsharp"{
%j=bitcast i8*%b to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%c to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%d to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%e to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%f to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%g to i32*
%u=load i32,i32*%t,align 4
%v=bitcast i8*%h to i32*
%w=load i32,i32*%v,align 4
%x=bitcast i8*%i to i32*
%y=load i32,i32*%x,align 4
%z=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24prodE(i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s,i32 inreg%u,i32 inreg%w,i32 inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List23nubE_1817(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List23nubE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List26sortByE_1818(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5List27groupByE_1819(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_1820(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13add__intOptionE_1821(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1822(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_870(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1823(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_1824(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14add__wordOptionE_1825(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_1826(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fadd double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14add__realOptionE_1827(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_1828(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fadd float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16add__real32OptionE_1829(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17add__numericOptionE_1830(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_1831(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=sub nsw i32%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13sub__intOptionE_1832(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1833(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_892(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1834(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1835(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=sub i32%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1836(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_1837(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fsub double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sub__realOptionE_1838(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1839(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fsub float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1840(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sub__numericOptionE_1841(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_1842(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=mul nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13mul__intOptionE_1843(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1844(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_914(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1845(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1846(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=mul i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1847(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_1848(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fmul double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mul__realOptionE_1849(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1850(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fmul float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1851(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17mul__numericOptionE_1852(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_1853(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_934(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13div__intOptionE_1854(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16div__intInfOptionE_1855(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_1856(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_941(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14div__wordOptionE_1857(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_1858(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fdiv double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14div__realOptionE_1859(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_1860(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fdiv float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16div__real32OptionE_1861(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17div__numericOptionE_1862(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_1863(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_956(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13mod__intOptionE_1864(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mod__intInfOptionE_1865(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1866(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_963(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1867(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14mod__realOptionE_1868(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16mod__real32OptionE_1869(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17mod__numericOptionE_1870(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13neg__intOptionE_1871(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neg__intInfOptionE_1872(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neg__wordOptionE_1873(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neg__realOptionE_1874(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neg__real32OptionE_1875(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17neg__numericOptionE_1876(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8abs__wordE_1877(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32%d,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13abs__intOptionE_1878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16abs__intInfOptionE_1879(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14abs__wordOptionE_1880(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14abs__realOptionE_1881(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16abs__real32OptionE_1882(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17abs__numericOptionE_1883(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6lt__intE_1884(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6lt__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9lt__intInfE_1885(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7lt__wordE_1886(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7lt__charE_1887(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7lt__boolE_1888(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9lt__stringE_1889(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7lt__realE_1890(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9lt__real32E_1891(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12lt__timestampE_1892(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10lt__numericE_1893(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10lt__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1894(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1021(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12lt__intOptionE_1895(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1896(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1025(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1897(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1898(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1029(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1899(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1900(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1033(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__charOptionE_1901(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1902(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1037(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1903(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1904(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1041(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1905(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1906(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1045(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13lt__realOptionE_1907(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1908(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1049(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1909(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1910(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1053(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1911(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1912(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1057(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1913(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6gt__intE_1914(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6gt__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9gt__intInfE_1915(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7gt__wordE_1916(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7gt__charE_1917(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7gt__boolE_1918(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9gt__stringE_1919(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7gt__realE_1920(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9gt__real32E_1921(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12gt__timestampE_1922(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10gt__numericE_1923(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10gt__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1924(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1081(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12gt__intOptionE_1925(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1926(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1085(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1927(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1928(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1089(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1929(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1930(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1093(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__charOptionE_1931(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1932(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1097(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1933(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1934(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1101(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1935(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1936(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1105(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13gt__realOptionE_1937(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1938(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1109(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1939(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1940(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1113(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1941(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1942(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1117(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1943(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6le__intE_1944(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6le__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9le__intInfE_1945(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7le__wordE_1946(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7le__charE_1947(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7le__boolE_1948(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9le__stringE_1949(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7le__realE_1950(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9le__real32E_1951(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12le__timestampE_1952(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10le__numericE_1953(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10le__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1954(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1141(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12le__intOptionE_1955(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1956(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1145(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1957(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1958(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1149(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__wordOptionE_1959(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1960(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1153(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__charOptionE_1961(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1962(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1157(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__boolOptionE_1963(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1964(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1161(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__stringOptionE_1965(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1966(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1165(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13le__realOptionE_1967(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1968(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1169(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15le__real32OptionE_1969(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1970(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1173(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1971(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1972(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1177(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16le__numericOptionE_1973(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6ge__intE_1974(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6ge__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ge__intInfE_1975(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ge__wordE_1976(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ge__charE_1977(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ge__boolE_1978(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ge__stringE_1979(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7ge__realE_1980(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9ge__real32E_1981(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12ge__timestampE_1982(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10ge__numericE_1983(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10ge__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1984(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1201(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12ge__intOptionE_1985(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1986(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1205(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1987(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1988(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1209(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1989(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1990(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1213(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__charOptionE_1991(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1992(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1217(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1993(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1994(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1221(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1995(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1996(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1225(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13ge__realOptionE_1997(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1998(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1229(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1999(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_2000(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_1233(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_2001(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_2002(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_1237(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16ge__numericOptionE_2003(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim6eq__intE_2004(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6eq__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9eq__intInfE_2005(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7eq__wordE_2006(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7eq__charE_2007(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7eq__boolE_2008(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9eq__stringE_2009(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7eq__realE_2010(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim9eq__real32E_2011(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12eq__timestampE_2012(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10eq__numericE_2013(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10eq__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_2014(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_1261(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12eq__intOptionE_2015(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_2016(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_1265(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_2017(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_2018(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_1269(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__wordOptionE_2019(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_2020(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_1273(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__charOptionE_2021(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_2022(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_1277(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__boolOptionE_2023(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_2024(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_1281(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__stringOptionE_2025(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_2026(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_1285(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13eq__realOptionE_2027(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_2028(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_1289(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim15eq__real32OptionE_2029(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_2030(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_1293(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_2031(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_2032(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_1297(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16eq__numericOptionE_2033(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7neq__intE_2034(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7neq__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10neq__intInfE_2035(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8neq__wordE_2036(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8neq__charE_2037(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8neq__boolE_2038(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10neq__stringE_2039(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8neq__realE_2040(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10neq__real32E_2041(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13neq__timestampE_2042(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11neq__numericE_2043(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11neq__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_2044(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_1321(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13neq__intOptionE_2045(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_2046(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_1325(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_2047(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_2048(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_1329(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__wordOptionE_2049(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_2050(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_1333(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__charOptionE_2051(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_2052(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_1337(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__boolOptionE_2053(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_2054(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_1341(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__stringOptionE_2055(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_2056(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_1345(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14neq__realOptionE_2057(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_2058(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_1349(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16neq__real32OptionE_2059(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_2060(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_1353(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_2061(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_2062(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_1357(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17neq__numericOptionE_2063(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19concat__stringOptionE_2064(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11like__stringE_2065(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11like__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16nullif__intOptionE_2066(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19nullif__intInfOptionE_2067(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17nullif__wordOptionE_2068(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17nullif__charOptionE_2069(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17nullif__boolOptionE_2070(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19nullif__stringOptionE_2071(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17nullif__realOptionE_2072(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19nullif__real32OptionE_2073(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim22nullif__timestampOptionE_2074(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim20nullif__numericOptionE_2075(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7avg__intE_2076(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7avg__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10avg__intInfE_2077(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_2078(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_1389(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8avg__wordE_2079(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8avg__realE_2080(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_2082(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_1397(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10avg__real32E_2083(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_2084(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11avg__numericE_2085(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_2086(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13avg__intOptionE_2087(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_2088(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_2089(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_2090(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14avg__realOptionE_2091(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2092(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2093(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17avg__numericOptionE_2094(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sum__intE_2095(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7sum__intE_2096(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sum__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10sum__intInfE_2097(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_2098(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8sum__wordE_2099(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8sum__realE_2100(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fadd double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8sum__realE_2101(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_2102(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fadd float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10sum__real32E_2103(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_2104(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13sum__intOptionE_2105(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_2106(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_2107(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sum__wordOptionE_2108(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_2109(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fadd double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14sum__realOptionE_2110(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_2111(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fadd float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16sum__real32OptionE_2112(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17sum__numericOptionE_2113(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7max__intE_2114(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7max__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10max__intInfE_2115(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8max__wordE_2116(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8max__charE_2117(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__charE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8max__boolE_2118(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__boolE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10max__stringE_2119(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8max__realE_2120(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10max__real32E_2121(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13max__timestampE_2122(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11max__numericE_2123(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11max__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_2124(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13max__intOptionE_2125(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_2126(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__intInfOptionE_2127(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_2128(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__wordOptionE_2129(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_2130(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__charOptionE_2131(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_2132(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__boolOptionE_2133(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_2134(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__stringOptionE_2135(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_2136(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14max__realOptionE_2137(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_2138(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16max__real32OptionE_2139(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_2140(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19max__timestampOptionE_2141(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_2142(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17max__numericOptionE_2143(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7min__intE_2144(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7min__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10min__intInfE_2145(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8min__wordE_2146(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8min__charE_2147(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__charE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8min__boolE_2148(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__boolE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10min__stringE_2149(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8min__realE_2150(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10min__real32E_2151(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13min__timestampE_2152(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11min__numericE_2153(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11min__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_2154(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13min__intOptionE_2155(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_2156(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__intInfOptionE_2157(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_2158(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__wordOptionE_2159(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_2160(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__charOptionE_2161(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_2162(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__boolOptionE_2163(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_2164(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__stringOptionE_2165(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_2166(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14min__realOptionE_2167(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_2168(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16min__real32OptionE_2169(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_2170(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim19min__timestampOptionE_2171(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_2172(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17min__numericOptionE_2173(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5countE_2174(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim5countE_1583(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim5countE_2175(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5countE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2176(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2177(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN17SMLSharp__SQL__Prim12count__optionE_1588(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim12count__optionE_2178(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12count__optionE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim7Num__intE_2179(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7Num__intE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10Num__intInfE_2180(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8Num__wordE_2181(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim8Num__realE_2182(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i64*
%d=load i64,i64*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__realE(i64 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim10Num__real32E_2183(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim11Num__numericE_2184(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim13Num__intOptionE_2185(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim16Num__intInfOptionE_2186(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim14Num__realOptionE_2187(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim17Num__numericOptionE_2188(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op8coalesceE_2189(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4SomeE_2190(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_2191(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN17SMLSharp__SQL__Prim2Op4PartE_2192(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
declare void@llvm.memcpy.p0i8.p0i8.i32(i8*,i8*,i32,i1)#0
declare void@llvm.memset.p0i8.i32(i8*,i8,i32,i1)#0
declare void@llvm.lifetime.start.p0i8(i64,i8*)#0
declare void@llvm.lifetime.end.p0i8(i64,i8*)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
attributes#5={noreturn uwtable}
