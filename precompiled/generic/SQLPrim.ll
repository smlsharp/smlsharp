@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN19SMLSharp__SQL__Errors4ExecE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors4LinkE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors6FormatE=external local_unnamed_addr global i8*
@_SMLZN19SMLSharp__SQL__Errors7ConnectE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric12fromLargeIntE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric13fromLargeRealE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric1_KE=external local_unnamed_addr global i8*
@_SMLZN20SMLSharp__SQL__Numeric7fromIntE=external local_unnamed_addr global i8*
@_SMLZN4Char7toLowerE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_JE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_KE=external local_unnamed_addr global i8*
@_SMLZN6IntInf1_ME=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@_SMLZ8Overflow=external unnamed_addr constant i8*
@_SMLZ3Div=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"SMLSharp_SQL_Prim.Toy\00"}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL249=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@b,i32 0,i32 0,i32 0),i32 8)}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLFN17SMLSharp__SQL__Prim8closeResE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8closeResE_1420 to void(...)*),i32 -2147483647}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLFN17SMLSharp__SQL__Prim12closeCommandE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12closeCommandE_1421 to void(...)*),i32 -2147483647}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,[26x i8]}><{[4x i8]zeroinitializer,i32 -2147483622,[26x i8]c"type mismatch of column `\00"}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"': expected `\00"}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"', but actual `\00"}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:124.31(4289)\00"}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:119.34(3996)\00"}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"column `\00"}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"' of table `\00"}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:134.26(4836)\00"}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"' has column `\00"}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,[20x i8]}><{[4x i8]zeroinitializer,i32 -2147483628,[20x i8]c"' but not declared.\00"}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:156.14(5642)\00"}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"tables \00"}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c", \00"}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"`\00"}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"'\00"}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim4linkE_309 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim4linkE_1429 to void(...)*),i32 -2147483647}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c" are not found.\00"}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:154.14(5561)\00"}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"table `\00"}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,[16x i8]}><{[4x i8]zeroinitializer,i32 -2147483632,[16x i8]c"' is not found.\00"}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"cannot create table `\00"}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"': type `\00"}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:102.36(3251)\00"}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c" option\00"}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"int\00"}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"intInf\00"}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"word\00"}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"char\00"}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"string\00"}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"real\00"}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"real32\00"}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"bool\00"}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"timestamp\00"}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"numeric\00"}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"unsupported (\00"}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c")\00"}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"src/sql/main/SQLPrim.sml:83.10(2571)\00"}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"' is not supported\00"}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11fromSQL__intE_1433 to void(...)*),i32 -2147483647}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__intInfE_1434 to void(...)*),i32 -2147483647}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__wordE_1435 to void(...)*),i32 -2147483647}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__charE_1436 to void(...)*),i32 -2147483647}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__boolE_1437 to void(...)*),i32 -2147483647}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__stringE_1438 to void(...)*),i32 -2147483647}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__realE_1439 to void(...)*),i32 -2147483647}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__real32E_1440 to void(...)*),i32 -2147483647}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17fromSQL__timestampE_1441 to void(...)*),i32 -2147483647}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:254.27(8631)\00"}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15fromSQL__numericE_1442 to void(...)*),i32 -2147483647}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17fromSQL__intOptionE_1443 to void(...)*),i32 -2147483647}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE_1444 to void(...)*),i32 -2147483647}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__wordOptionE_1445 to void(...)*),i32 -2147483647}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__charOptionE_1446 to void(...)*),i32 -2147483647}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__boolOptionE_1447 to void(...)*),i32 -2147483647}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__stringOptionE_1448 to void(...)*),i32 -2147483647}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__realOptionE_1449 to void(...)*),i32 -2147483647}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__real32OptionE_1450 to void(...)*),i32 -2147483647}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE_1451 to void(...)*),i32 -2147483647}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim21fromSQL__numericOptionE_1452 to void(...)*),i32 -2147483647}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aF,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim6ty__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6ty__intE_1453 to void(...)*),i32 -2147483647}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aI,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ty__intInfE_1454 to void(...)*),i32 -2147483647}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aL,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ty__wordE_1455 to void(...)*),i32 -2147483647}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aO,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ty__charE_1456 to void(...)*),i32 -2147483647}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aR,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ty__boolE_1457 to void(...)*),i32 -2147483647}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aU,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ty__stringE_1458 to void(...)*),i32 -2147483647}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aX,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ty__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ty__realE_1459 to void(...)*),i32 -2147483647}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a0,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ty__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ty__real32E_1460 to void(...)*),i32 -2147483647}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a3,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ty__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12ty__timestampE_1461 to void(...)*),i32 -2147483647}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a6,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10ty__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10ty__numericE_1462 to void(...)*),i32 -2147483647}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 2,[4x i8]zeroinitializer,i32 0}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aF,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ty__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12ty__intOptionE_1463 to void(...)*),i32 -2147483647}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 3,[4x i8]zeroinitializer,i32 0}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aI,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ty__intInfOptionE_1464 to void(...)*),i32 -2147483647}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 10,[4x i8]zeroinitializer,i32 0}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aL,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ty__wordOptionE_1465 to void(...)*),i32 -2147483647}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 1,[4x i8]zeroinitializer,i32 0}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aO,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ty__charOptionE_1466 to void(...)*),i32 -2147483647}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,[4x i8]zeroinitializer,i32 0}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aR,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ty__boolOptionE_1467 to void(...)*),i32 -2147483647}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 7,[4x i8]zeroinitializer,i32 0}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aU,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ty__stringOptionE_1468 to void(...)*),i32 -2147483647}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 5,[4x i8]zeroinitializer,i32 0}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aX,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ty__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ty__realOptionE_1469 to void(...)*),i32 -2147483647}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,[4x i8]zeroinitializer,i32 0}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a0,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ty__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ty__real32OptionE_1470 to void(...)*),i32 -2147483647}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 8,[4x i8]zeroinitializer,i32 0}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a3,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18ty__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18ty__timestampOptionE_1471 to void(...)*),i32 -2147483647}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 4,[4x i8]zeroinitializer,i32 0}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 1,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a6,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16ty__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16ty__numericOptionE_1472 to void(...)*),i32 -2147483647}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12compare__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12compare__boolE_1473 to void(...)*),i32 -2147483647}>,align 8
@ba=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17compare__intOptionE_1474 to void(...)*),i32 -2147483647}>,align 8
@bb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20compare__intInfOptionE_1475 to void(...)*),i32 -2147483647}>,align 8
@bc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18compare__wordOptionE_1476 to void(...)*),i32 -2147483647}>,align 8
@bd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18compare__charOptionE_1477 to void(...)*),i32 -2147483647}>,align 8
@be=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18compare__boolOptionE_1478 to void(...)*),i32 -2147483647}>,align 8
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20compare__stringOptionE_1479 to void(...)*),i32 -2147483647}>,align 8
@bg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18compare__realOptionE_1480 to void(...)*),i32 -2147483647}>,align 8
@bh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20compare__real32OptionE_1481 to void(...)*),i32 -2147483647}>,align 8
@bi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim23compare__timestampOptionE_1482 to void(...)*),i32 -2147483647}>,align 8
@bj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim21compare__numericOptionE_1483 to void(...)*),i32 -2147483647}>,align 8
@bk=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:332.4(12292)\00"}>,align 8
@bl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General212reverseOrderE_1484 to void(...)*),i32 -2147483647}>,align 8
@bm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool38fromBoolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool38fromBoolE_1485 to void(...)*),i32 -2147483647}>,align 8
@bn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool36isTrueE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool36isTrueE_1486 to void(...)*),i32 -2147483647}>,align 8
@bo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_1488 to void(...)*),i32 -2147483647}>,align 8
@bp=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:355.4(12768)\00"}>,align 8
@bq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool34and3E_1489 to void(...)*),i32 -2147483647}>,align 8
@br=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:361.4(12938)\00"}>,align 8
@bs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool33or3E_1490 to void(...)*),i32 -2147483647}>,align 8
@bt=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:367.4(13102)\00"}>,align 8
@bu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool34not3E_1491 to void(...)*),i32 -2147483647}>,align 8
@bv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9toSQL__intE_1494 to void(...)*),i32 -2147483647}>,align 8
@bw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__intInfE_1495 to void(...)*),i32 -2147483647}>,align 8
@bx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__wordE_1496 to void(...)*),i32 -2147483647}>,align 8
@by=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__charE_1497 to void(...)*),i32 -2147483647}>,align 8
@bz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__boolE_1498 to void(...)*),i32 -2147483647}>,align 8
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__stringE_1499 to void(...)*),i32 -2147483647}>,align 8
@bB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i64)*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__realE_1500 to void(...)*),i32 -2147483647}>,align 8
@bC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__real32E_1501 to void(...)*),i32 -2147483647}>,align 8
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15toSQL__timestampE_1502 to void(...)*),i32 -2147483647}>,align 8
@bE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13toSQL__numericE_1503 to void(...)*),i32 -2147483647}>,align 8
@bF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15toSQL__intOptionE_1504 to void(...)*),i32 -2147483647}>,align 8
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__intInfOptionE_1505 to void(...)*),i32 -2147483647}>,align 8
@bH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__wordOptionE_1506 to void(...)*),i32 -2147483647}>,align 8
@bI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__charOptionE_1507 to void(...)*),i32 -2147483647}>,align 8
@bJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__boolOptionE_1508 to void(...)*),i32 -2147483647}>,align 8
@bK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__stringOptionE_1509 to void(...)*),i32 -2147483647}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__realOptionE_1510 to void(...)*),i32 -2147483647}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__real32OptionE_1511 to void(...)*),i32 -2147483647}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim21toSQL__timestampOptionE_1512 to void(...)*),i32 -2147483647}>,align 8
@bO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19toSQL__numericOptionE_1513 to void(...)*),i32 -2147483647}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13add__intOptionE_1514 to void(...)*),i32 -2147483647}>,align 8
@bQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1515 to void(...)*),i32 -2147483647}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14add__wordOptionE_1516 to void(...)*),i32 -2147483647}>,align 8
@bS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14add__realOptionE_1517 to void(...)*),i32 -2147483647}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16add__real32OptionE_1518 to void(...)*),i32 -2147483647}>,align 8
@bU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17add__numericOptionE_1519 to void(...)*),i32 -2147483647}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sub__intOptionE_1520 to void(...)*),i32 -2147483647}>,align 8
@bW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1521 to void(...)*),i32 -2147483647}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1522 to void(...)*),i32 -2147483647}>,align 8
@bY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sub__realOptionE_1523 to void(...)*),i32 -2147483647}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1524 to void(...)*),i32 -2147483647}>,align 8
@b0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sub__numericOptionE_1525 to void(...)*),i32 -2147483647}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13mul__intOptionE_1526 to void(...)*),i32 -2147483647}>,align 8
@b2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1527 to void(...)*),i32 -2147483647}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1528 to void(...)*),i32 -2147483647}>,align 8
@b4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14mul__realOptionE_1529 to void(...)*),i32 -2147483647}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1530 to void(...)*),i32 -2147483647}>,align 8
@b6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17mul__numericOptionE_1531 to void(...)*),i32 -2147483647}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:484.31(16944)\00"}>,align 8
@b8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13div__intOptionE_1532 to void(...)*),i32 -2147483647}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16div__intInfOptionE_1533 to void(...)*),i32 -2147483647}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:486.32(17035)\00"}>,align 8
@cb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14div__wordOptionE_1534 to void(...)*),i32 -2147483647}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14div__realOptionE_1535 to void(...)*),i32 -2147483647}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16div__real32OptionE_1536 to void(...)*),i32 -2147483647}>,align 8
@ce=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17div__numericOptionE_1537 to void(...)*),i32 -2147483647}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLFN17SMLSharp__SQL__Prim8mod__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8mod__realE_1538 to void(...)*),i32 -2147483647}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLFN17SMLSharp__SQL__Prim10mod__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10mod__real32E_1539 to void(...)*),i32 -2147483647}>,align 8
@ch=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:493.31(17316)\00"}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13mod__intOptionE_1540 to void(...)*),i32 -2147483647}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16mod__intInfOptionE_1541 to void(...)*),i32 -2147483647}>,align 8
@ck=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:495.32(17405)\00"}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1542 to void(...)*),i32 -2147483647}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14mod__realOptionE_1543 to void(...)*),i32 -2147483647}>,align 8
@cn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16mod__real32OptionE_1544 to void(...)*),i32 -2147483647}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17mod__numericOptionE_1545 to void(...)*),i32 -2147483647}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:500.31(17587)\00"}>,align 8
@cq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13neg__intOptionE_1546 to void(...)*),i32 -2147483647}>,align 8
@cr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16neg__intInfOptionE_1547 to void(...)*),i32 -2147483647}>,align 8
@cs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neg__wordOptionE_1548 to void(...)*),i32 -2147483647}>,align 8
@ct=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neg__realOptionE_1549 to void(...)*),i32 -2147483647}>,align 8
@cu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16neg__real32OptionE_1550 to void(...)*),i32 -2147483647}>,align 8
@cv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17neg__numericOptionE_1551 to void(...)*),i32 -2147483647}>,align 8
@cw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i32)*@_SMLFN17SMLSharp__SQL__Prim8abs__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8abs__wordE_1552 to void(...)*),i32 -2147483647}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:508.31(17874)\00"}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13abs__intOptionE_1553 to void(...)*),i32 -2147483647}>,align 8
@cz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16abs__intInfOptionE_1554 to void(...)*),i32 -2147483647}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14abs__wordOptionE_1555 to void(...)*),i32 -2147483647}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14abs__realOptionE_1556 to void(...)*),i32 -2147483647}>,align 8
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16abs__real32OptionE_1557 to void(...)*),i32 -2147483647}>,align 8
@cD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17abs__numericOptionE_1558 to void(...)*),i32 -2147483647}>,align 8
@cE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6lt__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6lt__intE_1559 to void(...)*),i32 -2147483647}>,align 8
@cF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9lt__intInfE_1560 to void(...)*),i32 -2147483647}>,align 8
@cG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7lt__wordE_1561 to void(...)*),i32 -2147483647}>,align 8
@cH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7lt__charE_1562 to void(...)*),i32 -2147483647}>,align 8
@cI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7lt__boolE_1563 to void(...)*),i32 -2147483647}>,align 8
@cJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9lt__stringE_1564 to void(...)*),i32 -2147483647}>,align 8
@cK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7lt__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7lt__realE_1565 to void(...)*),i32 -2147483647}>,align 8
@cL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9lt__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9lt__real32E_1566 to void(...)*),i32 -2147483647}>,align 8
@cM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12lt__timestampE_1567 to void(...)*),i32 -2147483647}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10lt__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10lt__numericE_1568 to void(...)*),i32 -2147483647}>,align 8
@cO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12lt__intOptionE_1569 to void(...)*),i32 -2147483647}>,align 8
@cP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1570 to void(...)*),i32 -2147483647}>,align 8
@cQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1571 to void(...)*),i32 -2147483647}>,align 8
@cR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13lt__charOptionE_1572 to void(...)*),i32 -2147483647}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1573 to void(...)*),i32 -2147483647}>,align 8
@cT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1574 to void(...)*),i32 -2147483647}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13lt__realOptionE_1575 to void(...)*),i32 -2147483647}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1576 to void(...)*),i32 -2147483647}>,align 8
@cW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1577 to void(...)*),i32 -2147483647}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1578 to void(...)*),i32 -2147483647}>,align 8
@cY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6gt__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6gt__intE_1579 to void(...)*),i32 -2147483647}>,align 8
@cZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9gt__intInfE_1580 to void(...)*),i32 -2147483647}>,align 8
@c0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7gt__wordE_1581 to void(...)*),i32 -2147483647}>,align 8
@c1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7gt__charE_1582 to void(...)*),i32 -2147483647}>,align 8
@c2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7gt__boolE_1583 to void(...)*),i32 -2147483647}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9gt__stringE_1584 to void(...)*),i32 -2147483647}>,align 8
@c4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7gt__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7gt__realE_1585 to void(...)*),i32 -2147483647}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9gt__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9gt__real32E_1586 to void(...)*),i32 -2147483647}>,align 8
@c6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12gt__timestampE_1587 to void(...)*),i32 -2147483647}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10gt__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10gt__numericE_1588 to void(...)*),i32 -2147483647}>,align 8
@c8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12gt__intOptionE_1589 to void(...)*),i32 -2147483647}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1590 to void(...)*),i32 -2147483647}>,align 8
@da=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1591 to void(...)*),i32 -2147483647}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13gt__charOptionE_1592 to void(...)*),i32 -2147483647}>,align 8
@dc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1593 to void(...)*),i32 -2147483647}>,align 8
@dd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1594 to void(...)*),i32 -2147483647}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13gt__realOptionE_1595 to void(...)*),i32 -2147483647}>,align 8
@df=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1596 to void(...)*),i32 -2147483647}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1597 to void(...)*),i32 -2147483647}>,align 8
@dh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1598 to void(...)*),i32 -2147483647}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6le__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6le__intE_1599 to void(...)*),i32 -2147483647}>,align 8
@dj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9le__intInfE_1600 to void(...)*),i32 -2147483647}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7le__wordE_1601 to void(...)*),i32 -2147483647}>,align 8
@dl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7le__charE_1602 to void(...)*),i32 -2147483647}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7le__boolE_1603 to void(...)*),i32 -2147483647}>,align 8
@dn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9le__stringE_1604 to void(...)*),i32 -2147483647}>,align 8
@do=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7le__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7le__realE_1605 to void(...)*),i32 -2147483647}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9le__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9le__real32E_1606 to void(...)*),i32 -2147483647}>,align 8
@dq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12le__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12le__timestampE_1607 to void(...)*),i32 -2147483647}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10le__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10le__numericE_1608 to void(...)*),i32 -2147483647}>,align 8
@ds=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12le__intOptionE_1609 to void(...)*),i32 -2147483647}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1610 to void(...)*),i32 -2147483647}>,align 8
@du=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13le__wordOptionE_1611 to void(...)*),i32 -2147483647}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13le__charOptionE_1612 to void(...)*),i32 -2147483647}>,align 8
@dw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13le__boolOptionE_1613 to void(...)*),i32 -2147483647}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15le__stringOptionE_1614 to void(...)*),i32 -2147483647}>,align 8
@dy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13le__realOptionE_1615 to void(...)*),i32 -2147483647}>,align 8
@dz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15le__real32OptionE_1616 to void(...)*),i32 -2147483647}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1617 to void(...)*),i32 -2147483647}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16le__numericOptionE_1618 to void(...)*),i32 -2147483647}>,align 8
@dC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6ge__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6ge__intE_1619 to void(...)*),i32 -2147483647}>,align 8
@dD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ge__intInfE_1620 to void(...)*),i32 -2147483647}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ge__wordE_1621 to void(...)*),i32 -2147483647}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ge__charE_1622 to void(...)*),i32 -2147483647}>,align 8
@dG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ge__boolE_1623 to void(...)*),i32 -2147483647}>,align 8
@dH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ge__stringE_1624 to void(...)*),i32 -2147483647}>,align 8
@dI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7ge__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7ge__realE_1625 to void(...)*),i32 -2147483647}>,align 8
@dJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9ge__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9ge__real32E_1626 to void(...)*),i32 -2147483647}>,align 8
@dK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12ge__timestampE_1627 to void(...)*),i32 -2147483647}>,align 8
@dL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10ge__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10ge__numericE_1628 to void(...)*),i32 -2147483647}>,align 8
@dM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12ge__intOptionE_1629 to void(...)*),i32 -2147483647}>,align 8
@dN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1630 to void(...)*),i32 -2147483647}>,align 8
@dO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1631 to void(...)*),i32 -2147483647}>,align 8
@dP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ge__charOptionE_1632 to void(...)*),i32 -2147483647}>,align 8
@dQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1633 to void(...)*),i32 -2147483647}>,align 8
@dR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1634 to void(...)*),i32 -2147483647}>,align 8
@dS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13ge__realOptionE_1635 to void(...)*),i32 -2147483647}>,align 8
@dT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1636 to void(...)*),i32 -2147483647}>,align 8
@dU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_1637 to void(...)*),i32 -2147483647}>,align 8
@dV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16ge__numericOptionE_1638 to void(...)*),i32 -2147483647}>,align 8
@dW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim6eq__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6eq__intE_1639 to void(...)*),i32 -2147483647}>,align 8
@dX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9eq__intInfE_1640 to void(...)*),i32 -2147483647}>,align 8
@dY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7eq__wordE_1641 to void(...)*),i32 -2147483647}>,align 8
@dZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7eq__charE_1642 to void(...)*),i32 -2147483647}>,align 8
@d0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7eq__boolE_1643 to void(...)*),i32 -2147483647}>,align 8
@d1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9eq__stringE_1644 to void(...)*),i32 -2147483647}>,align 8
@d2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7eq__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7eq__realE_1645 to void(...)*),i32 -2147483647}>,align 8
@d3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim9eq__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9eq__real32E_1646 to void(...)*),i32 -2147483647}>,align 8
@d4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12eq__timestampE_1647 to void(...)*),i32 -2147483647}>,align 8
@d5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10eq__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10eq__numericE_1648 to void(...)*),i32 -2147483647}>,align 8
@d6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12eq__intOptionE_1649 to void(...)*),i32 -2147483647}>,align 8
@d7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_1650 to void(...)*),i32 -2147483647}>,align 8
@d8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13eq__wordOptionE_1651 to void(...)*),i32 -2147483647}>,align 8
@d9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13eq__charOptionE_1652 to void(...)*),i32 -2147483647}>,align 8
@ea=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13eq__boolOptionE_1653 to void(...)*),i32 -2147483647}>,align 8
@eb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15eq__stringOptionE_1654 to void(...)*),i32 -2147483647}>,align 8
@ec=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13eq__realOptionE_1655 to void(...)*),i32 -2147483647}>,align 8
@ed=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15eq__real32OptionE_1656 to void(...)*),i32 -2147483647}>,align 8
@ee=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_1657 to void(...)*),i32 -2147483647}>,align 8
@ef=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16eq__numericOptionE_1658 to void(...)*),i32 -2147483647}>,align 8
@eg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim7neq__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7neq__intE_1659 to void(...)*),i32 -2147483647}>,align 8
@eh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10neq__intInfE_1660 to void(...)*),i32 -2147483647}>,align 8
@ei=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8neq__wordE_1661 to void(...)*),i32 -2147483647}>,align 8
@ej=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8neq__charE_1662 to void(...)*),i32 -2147483647}>,align 8
@ek=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8neq__boolE_1663 to void(...)*),i32 -2147483647}>,align 8
@el=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10neq__stringE_1664 to void(...)*),i32 -2147483647}>,align 8
@em=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim8neq__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8neq__realE_1665 to void(...)*),i32 -2147483647}>,align 8
@en=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim10neq__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10neq__real32E_1666 to void(...)*),i32 -2147483647}>,align 8
@eo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13neq__timestampE_1667 to void(...)*),i32 -2147483647}>,align 8
@ep=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11neq__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11neq__numericE_1668 to void(...)*),i32 -2147483647}>,align 8
@eq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13neq__intOptionE_1669 to void(...)*),i32 -2147483647}>,align 8
@er=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_1670 to void(...)*),i32 -2147483647}>,align 8
@es=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neq__wordOptionE_1671 to void(...)*),i32 -2147483647}>,align 8
@et=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neq__charOptionE_1672 to void(...)*),i32 -2147483647}>,align 8
@eu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neq__boolOptionE_1673 to void(...)*),i32 -2147483647}>,align 8
@ev=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16neq__stringOptionE_1674 to void(...)*),i32 -2147483647}>,align 8
@ew=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14neq__realOptionE_1675 to void(...)*),i32 -2147483647}>,align 8
@ex=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16neq__real32OptionE_1676 to void(...)*),i32 -2147483647}>,align 8
@ey=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_1677 to void(...)*),i32 -2147483647}>,align 8
@ez=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17neq__numericOptionE_1678 to void(...)*),i32 -2147483647}>,align 8
@eA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19concat__stringOptionE_1679 to void(...)*),i32 -2147483647}>,align 8
@eB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim11like__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11like__stringE_1681 to void(...)*),i32 -2147483647}>,align 8
@eC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17like__stringOptionE_1682 to void(...)*),i32 -2147483647}>,align 8
@eD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16nullif__intOptionE_1683 to void(...)*),i32 -2147483647}>,align 8
@eE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19nullif__intInfOptionE_1684 to void(...)*),i32 -2147483647}>,align 8
@eF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17nullif__wordOptionE_1685 to void(...)*),i32 -2147483647}>,align 8
@eG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17nullif__charOptionE_1686 to void(...)*),i32 -2147483647}>,align 8
@eH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17nullif__boolOptionE_1687 to void(...)*),i32 -2147483647}>,align 8
@eI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19nullif__stringOptionE_1688 to void(...)*),i32 -2147483647}>,align 8
@eJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17nullif__realOptionE_1689 to void(...)*),i32 -2147483647}>,align 8
@eK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19nullif__real32OptionE_1690 to void(...)*),i32 -2147483647}>,align 8
@eL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim22nullif__timestampOptionE_1691 to void(...)*),i32 -2147483647}>,align 8
@eM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim20nullif__numericOptionE_1692 to void(...)*),i32 -2147483647}>,align 8
@eN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_922 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_1693 to void(...)*),i32 -2147483647}>,align 8
@eO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_927 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_1695 to void(...)*),i32 -2147483647}>,align 8
@eP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7avg__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_1696 to void(...)*),i32 -2147483647}>,align 8
@eQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_931 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_1697 to void(...)*),i32 -2147483647}>,align 8
@eR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_1698 to void(...)*),i32 -2147483647}>,align 8
@eS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_935 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_1699 to void(...)*),i32 -2147483647}>,align 8
@eT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_1700 to void(...)*),i32 -2147483647}>,align 8
@eU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_939 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_1701 to void(...)*),i32 -2147483647}>,align 8
@eV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8avg__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_1702 to void(...)*),i32 -2147483647}>,align 8
@eW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_943 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_1703 to void(...)*),i32 -2147483647}>,align 8
@eX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_1704 to void(...)*),i32 -2147483647}>,align 8
@eY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_947 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_1705 to void(...)*),i32 -2147483647}>,align 8
@eZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_1706 to void(...)*),i32 -2147483647}>,align 8
@e0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13avg__intOptionE_1707 to void(...)*),i32 -2147483647}>,align 8
@e1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_1708 to void(...)*),i32 -2147483647}>,align 8
@e2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_955 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1709 to void(...)*),i32 -2147483647}>,align 8
@e3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1710 to void(...)*),i32 -2147483647}>,align 8
@e4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14avg__realOptionE_1711 to void(...)*),i32 -2147483647}>,align 8
@e5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_961 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1712 to void(...)*),i32 -2147483647}>,align 8
@e6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1713 to void(...)*),i32 -2147483647}>,align 8
@e7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_965 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1714 to void(...)*),i32 -2147483647}>,align 8
@e8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1715 to void(...)*),i32 -2147483647}>,align 8
@e9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_969 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_1716 to void(...)*),i32 -2147483647}>,align 8
@fa=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7sum__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_1717 to void(...)*),i32 -2147483647}>,align 8
@fb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10sum__intInfE_1718 to void(...)*),i32 -2147483647}>,align 8
@fc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_976 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_1719 to void(...)*),i32 -2147483647}>,align 8
@fd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_1720 to void(...)*),i32 -2147483647}>,align 8
@fe=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_980 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_1721 to void(...)*),i32 -2147483647}>,align 8
@ff=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8sum__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_1722 to void(...)*),i32 -2147483647}>,align 8
@fg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_984 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_1723 to void(...)*),i32 -2147483647}>,align 8
@fh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_1724 to void(...)*),i32 -2147483647}>,align 8
@fi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11sum__numericE_1725 to void(...)*),i32 -2147483647}>,align 8
@fj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_990 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1726 to void(...)*),i32 -2147483647}>,align 8
@fk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_992 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1727 to void(...)*),i32 -2147483647}>,align 8
@fl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1728 to void(...)*),i32 -2147483647}>,align 8
@fm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_996 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_1729 to void(...)*),i32 -2147483647}>,align 8
@fn=private unnamed_addr constant[2x i8]c"0\00"
@fo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_1730 to void(...)*),i32 -2147483647}>,align 8
@fp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1001 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1731 to void(...)*),i32 -2147483647}>,align 8
@fq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1003 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1732 to void(...)*),i32 -2147483647}>,align 8
@fr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1733 to void(...)*),i32 -2147483647}>,align 8
@fs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1007 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1734 to void(...)*),i32 -2147483647}>,align 8
@ft=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1009 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1735 to void(...)*),i32 -2147483647}>,align 8
@fu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1736 to void(...)*),i32 -2147483647}>,align 8
@fv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1013 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1737 to void(...)*),i32 -2147483647}>,align 8
@fw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1015 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1738 to void(...)*),i32 -2147483647}>,align 8
@fx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1739 to void(...)*),i32 -2147483647}>,align 8
@fy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1019 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1740 to void(...)*),i32 -2147483647}>,align 8
@fz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1741 to void(...)*),i32 -2147483647}>,align 8
@fA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1023 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1742 to void(...)*),i32 -2147483647}>,align 8
@fB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7max__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1743 to void(...)*),i32 -2147483647}>,align 8
@fC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1027 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1744 to void(...)*),i32 -2147483647}>,align 8
@fD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1745 to void(...)*),i32 -2147483647}>,align 8
@fE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1031 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1746 to void(...)*),i32 -2147483647}>,align 8
@fF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1747 to void(...)*),i32 -2147483647}>,align 8
@fG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1035 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1748 to void(...)*),i32 -2147483647}>,align 8
@fH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1749 to void(...)*),i32 -2147483647}>,align 8
@fI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1039 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1750 to void(...)*),i32 -2147483647}>,align 8
@fJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1751 to void(...)*),i32 -2147483647}>,align 8
@fK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1043 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1752 to void(...)*),i32 -2147483647}>,align 8
@fL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1753 to void(...)*),i32 -2147483647}>,align 8
@fM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1047 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1754 to void(...)*),i32 -2147483647}>,align 8
@fN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8max__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1755 to void(...)*),i32 -2147483647}>,align 8
@fO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1051 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1756 to void(...)*),i32 -2147483647}>,align 8
@fP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10max__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1757 to void(...)*),i32 -2147483647}>,align 8
@fQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1055 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1758 to void(...)*),i32 -2147483647}>,align 8
@fR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1759 to void(...)*),i32 -2147483647}>,align 8
@fS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1059 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1760 to void(...)*),i32 -2147483647}>,align 8
@fT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11max__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1761 to void(...)*),i32 -2147483647}>,align 8
@fU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1063 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1762 to void(...)*),i32 -2147483647}>,align 8
@fV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1065 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1763 to void(...)*),i32 -2147483647}>,align 8
@fW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1764 to void(...)*),i32 -2147483647}>,align 8
@fX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1069 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1765 to void(...)*),i32 -2147483647}>,align 8
@fY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1071 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1766 to void(...)*),i32 -2147483647}>,align 8
@fZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1767 to void(...)*),i32 -2147483647}>,align 8
@f0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1075 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1768 to void(...)*),i32 -2147483647}>,align 8
@f1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1077 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1769 to void(...)*),i32 -2147483647}>,align 8
@f2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1770 to void(...)*),i32 -2147483647}>,align 8
@f3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1081 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1771 to void(...)*),i32 -2147483647}>,align 8
@f4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1083 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1772 to void(...)*),i32 -2147483647}>,align 8
@f5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1773 to void(...)*),i32 -2147483647}>,align 8
@f6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1087 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1774 to void(...)*),i32 -2147483647}>,align 8
@f7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1089 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1775 to void(...)*),i32 -2147483647}>,align 8
@f8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1776 to void(...)*),i32 -2147483647}>,align 8
@f9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1093 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1777 to void(...)*),i32 -2147483647}>,align 8
@ga=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1095 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1778 to void(...)*),i32 -2147483647}>,align 8
@gb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1779 to void(...)*),i32 -2147483647}>,align 8
@gc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1099 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1780 to void(...)*),i32 -2147483647}>,align 8
@gd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1101 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1781 to void(...)*),i32 -2147483647}>,align 8
@ge=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1782 to void(...)*),i32 -2147483647}>,align 8
@gf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1105 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1783 to void(...)*),i32 -2147483647}>,align 8
@gg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1107 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1784 to void(...)*),i32 -2147483647}>,align 8
@gh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1785 to void(...)*),i32 -2147483647}>,align 8
@gi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1111 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1786 to void(...)*),i32 -2147483647}>,align 8
@gj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1113 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1787 to void(...)*),i32 -2147483647}>,align 8
@gk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1788 to void(...)*),i32 -2147483647}>,align 8
@gl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1117 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1789 to void(...)*),i32 -2147483647}>,align 8
@gm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1119 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1790 to void(...)*),i32 -2147483647}>,align 8
@gn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1791 to void(...)*),i32 -2147483647}>,align 8
@go=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1123 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1792 to void(...)*),i32 -2147483647}>,align 8
@gp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim7min__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1793 to void(...)*),i32 -2147483647}>,align 8
@gq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1127 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1794 to void(...)*),i32 -2147483647}>,align 8
@gr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1795 to void(...)*),i32 -2147483647}>,align 8
@gs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1131 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1796 to void(...)*),i32 -2147483647}>,align 8
@gt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1797 to void(...)*),i32 -2147483647}>,align 8
@gu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1135 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1798 to void(...)*),i32 -2147483647}>,align 8
@gv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__charE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1799 to void(...)*),i32 -2147483647}>,align 8
@gw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1139 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1800 to void(...)*),i32 -2147483647}>,align 8
@gx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__boolE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1801 to void(...)*),i32 -2147483647}>,align 8
@gy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1143 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1802 to void(...)*),i32 -2147483647}>,align 8
@gz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1803 to void(...)*),i32 -2147483647}>,align 8
@gA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1147 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1804 to void(...)*),i32 -2147483647}>,align 8
@gB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim8min__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1805 to void(...)*),i32 -2147483647}>,align 8
@gC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1151 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1806 to void(...)*),i32 -2147483647}>,align 8
@gD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10min__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1807 to void(...)*),i32 -2147483647}>,align 8
@gE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1155 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1808 to void(...)*),i32 -2147483647}>,align 8
@gF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1809 to void(...)*),i32 -2147483647}>,align 8
@gG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1159 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1810 to void(...)*),i32 -2147483647}>,align 8
@gH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11min__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1811 to void(...)*),i32 -2147483647}>,align 8
@gI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1163 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1812 to void(...)*),i32 -2147483647}>,align 8
@gJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1165 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1813 to void(...)*),i32 -2147483647}>,align 8
@gK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1814 to void(...)*),i32 -2147483647}>,align 8
@gL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1169 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1815 to void(...)*),i32 -2147483647}>,align 8
@gM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1171 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1816 to void(...)*),i32 -2147483647}>,align 8
@gN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1817 to void(...)*),i32 -2147483647}>,align 8
@gO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1175 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1818 to void(...)*),i32 -2147483647}>,align 8
@gP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1177 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1819 to void(...)*),i32 -2147483647}>,align 8
@gQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1820 to void(...)*),i32 -2147483647}>,align 8
@gR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1181 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1821 to void(...)*),i32 -2147483647}>,align 8
@gS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1183 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1822 to void(...)*),i32 -2147483647}>,align 8
@gT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1823 to void(...)*),i32 -2147483647}>,align 8
@gU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1187 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1824 to void(...)*),i32 -2147483647}>,align 8
@gV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1189 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1825 to void(...)*),i32 -2147483647}>,align 8
@gW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1826 to void(...)*),i32 -2147483647}>,align 8
@gX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1193 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1827 to void(...)*),i32 -2147483647}>,align 8
@gY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1195 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1828 to void(...)*),i32 -2147483647}>,align 8
@gZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1829 to void(...)*),i32 -2147483647}>,align 8
@g0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1199 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1830 to void(...)*),i32 -2147483647}>,align 8
@g1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(double(i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1201 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1831 to void(...)*),i32 -2147483647}>,align 8
@g2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1832 to void(...)*),i32 -2147483647}>,align 8
@g3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1205 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1833 to void(...)*),i32 -2147483647}>,align 8
@g4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(float(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1207 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1834 to void(...)*),i32 -2147483647}>,align 8
@g5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1835 to void(...)*),i32 -2147483647}>,align 8
@g6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1211 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1836 to void(...)*),i32 -2147483647}>,align 8
@g7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1213 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1837 to void(...)*),i32 -2147483647}>,align 8
@g8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1838 to void(...)*),i32 -2147483647}>,align 8
@g9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1217 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1839 to void(...)*),i32 -2147483647}>,align 8
@ha=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1219 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1840 to void(...)*),i32 -2147483647}>,align 8
@hb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1841 to void(...)*),i32 -2147483647}>,align 8
@hc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim7Num__intE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7Num__intE_1842 to void(...)*),i32 -2147483647}>,align 8
@hd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10Num__intInfE_1843 to void(...)*),i32 -2147483647}>,align 8
@he=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8Num__wordE_1844 to void(...)*),i32 -2147483647}>,align 8
@hf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i64)*@_SMLFN17SMLSharp__SQL__Prim8Num__realE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8Num__realE_1845 to void(...)*),i32 -2147483647}>,align 8
@hg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim10Num__real32E_1846 to void(...)*),i32 -2147483647}>,align 8
@hh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11Num__numericE_1847 to void(...)*),i32 -2147483647}>,align 8
@hi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13Num__intOptionE_1848 to void(...)*),i32 -2147483647}>,align 8
@hj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16Num__intInfOptionE_1849 to void(...)*),i32 -2147483647}>,align 8
@hk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1850 to void(...)*),i32 -2147483647}>,align 8
@hl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim14Num__realOptionE_1851 to void(...)*),i32 -2147483647}>,align 8
@hm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1852 to void(...)*),i32 -2147483647}>,align 8
@hn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLFN17SMLSharp__SQL__Prim17Num__numericOptionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17Num__numericOptionE_1853 to void(...)*),i32 -2147483647}>,align 8
@ho=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1247 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1854 to void(...)*),i32 -2147483647}>,align 8
@hp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11dummyCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1855 to void(...)*),i32 -2147483647}>,align 8
@hq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1252 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1856 to void(...)*),i32 -2147483647}>,align 8
@hr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9newCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1857 to void(...)*),i32 -2147483647}>,align 8
@hs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1257 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1858 to void(...)*),i32 -2147483647}>,align 8
@ht=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1259 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1859 to void(...)*),i32 -2147483647}>,align 8
@hu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim12queryCommandE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1860 to void(...)*),i32 -2147483647}>,align 8
@hv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1263 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1861 to void(...)*),i32 -2147483647}>,align 8
@hw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim16sqlserver__stringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1862 to void(...)*),i32 -2147483647}>,align 8
@hx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1267 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1863 to void(...)*),i32 -2147483647}>,align 8
@hy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim17sqlserver__backendE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1864 to void(...)*),i32 -2147483647}>,align 8
@hz=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:188.12(6635)\00"}>,align 8
@hA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1865 to void(...)*),i32 -2147483647}>,align 8
@hB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1277 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1866 to void(...)*),i32 -2147483647}>,align 8
@hC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim7connectE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1867 to void(...)*),i32 -2147483647}>,align 8
@hD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1281 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1868 to void(...)*),i32 -2147483647}>,align 8
@hE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim16connectAndCreateE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1869 to void(...)*),i32 -2147483647}>,align 8
@hF=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:227.12(7780)\00"}>,align 8
@hG=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"closed connection\00"}>,align 8
@hH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1287 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1870 to void(...)*),i32 -2147483647}>,align 8
@hI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9closeConnE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1871 to void(...)*),i32 -2147483647}>,align 8
@hJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1293 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1872 to void(...)*),i32 -2147483647}>,align 8
@hK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11closeCursorE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1873 to void(...)*),i32 -2147483647}>,align 8
@hL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5fetchE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5fetchE_1874 to void(...)*),i32 -2147483647}>,align 8
@hM=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:237.12(8136)\00"}>,align 8
@hN=private unnamed_addr constant<{[4x i8],i32,[38x i8]}><{[4x i8]zeroinitializer,i32 -2147483610,[38x i8]c"src/sql/main/SQLPrim.sml:232.12(7959)\00"}>,align 8
@hO=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"closed cursor\00"}>,align 8
@hP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8fetchAllE_1875 to void(...)*),i32 -2147483647}>,align 8
@hQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim3toyE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1877 to void(...)*),i32 -2147483647}>,align 8
@hR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1316 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1878 to void(...)*),i32 1}>,align 8
@hS=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hR,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1879 to void(...)*),i32 -2147483647}>,align 8
@hU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1324 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1880 to void(...)*),i32 1}>,align 8
@hV=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hU,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1881 to void(...)*),i32 -2147483647}>,align 8
@hX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim11expToStringE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11expToStringE_1882 to void(...)*),i32 -2147483647}>,align 8
@hY=private unnamed_addr constant<{[4x i8],i32,[37x i8]}><{[4x i8]zeroinitializer,i32 -2147483611,[37x i8]c"src/sql/main/SQLPrim.sml:34.27(1002)\00"}>,align 8
@hZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL249,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@hY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@h0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32)*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1335 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1883 to void(...)*),i32 1}>,align 8
@h1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim9toyServerE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1884 to void(...)*),i32 -2147483647}>,align 8
@h2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1886 to void(...)*),i32 -2147483647}>,align 8
@h3=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:377.26(13273)\00"}>,align 8
@h4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL249,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@h3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@h5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27onlyOneE_1887 to void(...)*),i32 -2147483647}>,align 8
@h6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1348 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1888 to void(...)*),i32 -2147483647}>,align 8
@h7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List210isNotEmptyE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1889 to void(...)*),i32 -2147483647}>,align 8
@h8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List24prodE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1890 to void(...)*),i32 -2147483647}>,align 8
@h9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32,i32,i32,i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List24joinE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1892 to void(...)*),i32 -2147483647}>,align 8
@ia=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List23nubE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1893 to void(...)*),i32 -2147483647}>,align 8
@ib=private unnamed_addr constant<{[4x i8],i32,[39x i8]}><{[4x i8]zeroinitializer,i32 -2147483609,[39x i8]c"src/sql/main/SQLPrim.sml:400.14(13931)\00"}>,align 8
@ic=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1379 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1897 to void(...)*),i32 -2147483647}>,align 8
@id=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1898 to void(...)*),i32 -2147483647}>,align 8
@ie=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32,i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1902 to void(...)*),i32 -2147483647}>,align 8
@if=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim5countE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5countE_1904 to void(...)*),i32 -2147483647}>,align 8
@ig=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1401 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1905 to void(...)*),i32 -2147483647}>,align 8
@ih=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim12count__optionE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1907 to void(...)*),i32 -2147483647}>,align 8
@ii=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op8coalesceE_1908 to void(...)*),i32 -2147483647}>,align 8
@ij=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1909 to void(...)*),i32 -2147483647}>,align 8
@ik=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4SomeE_1910 to void(...)*),i32 -2147483647}>,align 8
@il=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1415 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1911 to void(...)*),i32 -2147483647}>,align 8
@im=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i32,i32)*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE to void(...)*),void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1912 to void(...)*),i32 -2147483647}>,align 8
@_SMLZN17SMLSharp__SQL__Prim3ToyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL249,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8closeResE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12closeCommandE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11dummyCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hp,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9newCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hr,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12queryCommandE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16sqlserver__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hw,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17sqlserver__backendE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hy,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7sqlevalE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7connectE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16connectAndCreateE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9closeConnE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hI,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11closeCursorE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5fetchE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8fetchAllE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim3toyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15commandToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13queryToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11expToStringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hX,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11fromSQL__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@Q,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@R,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@S,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@T,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@U,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@V,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12fromSQL__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@W,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14fromSQL__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@X,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17fromSQL__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@Y,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15fromSQL__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aa,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17fromSQL__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ab,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ac,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ad,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ae,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@af,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ag,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18fromSQL__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ah,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20fromSQL__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ai,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aj,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim21fromSQL__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ak,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9toSQL__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bv,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12toSQL__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bw,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10toSQL__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bx,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10toSQL__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@by,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10toSQL__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bz,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12toSQL__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10toSQL__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12toSQL__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15toSQL__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13toSQL__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15toSQL__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18toSQL__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bG,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16toSQL__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16toSQL__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bI,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16toSQL__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bJ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18toSQL__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16toSQL__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18toSQL__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bM,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim21toSQL__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19toSQL__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bO,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9toyServerE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6ty__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@am,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ty__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ao,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ty__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ty__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@as,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ty__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@au,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ty__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aw,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ty__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ay,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ty__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12ty__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10ty__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12ty__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ty__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ty__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ty__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ty__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ty__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ty__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ty__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18ty__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16ty__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12compare__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a9,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17compare__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ba,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20compare__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18compare__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bc,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18compare__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bd,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18compare__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@be,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20compare__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bf,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18compare__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bg,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20compare__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim23compare__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bi,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim21compare__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bj,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8General212reverseOrderE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bl,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8General211comparePairE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool38fromBoolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bm,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool36isTrueE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bn,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool32isE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bo,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool34and3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool33or3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bs,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5Bool34not3E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List27onlyOneE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List210isNotEmptyE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h7,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List24prodE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List24joinE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h9,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List23nubE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ia,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List26sortByE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@id,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5List27groupByE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ie,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13add__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16add__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14add__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bR,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14add__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bS,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16add__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17add__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bU,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13sub__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bV,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16sub__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14sub__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bX,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14sub__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bY,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16sub__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@bZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17sub__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b0,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13mul__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16mul__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14mul__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b3,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14mul__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b4,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16mul__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17mul__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b6,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13div__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16div__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@b9,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14div__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14div__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cc,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16div__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cd,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17div__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ce,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8mod__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cf,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10mod__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cg,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13mod__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ci,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16mod__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cj,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14mod__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cl,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14mod__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cm,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16mod__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cn,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17mod__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@co,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13neg__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16neg__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cr,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neg__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cs,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neg__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ct,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16neg__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17neg__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cv,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8abs__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cw,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13abs__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cy,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16abs__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cz,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14abs__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14abs__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16abs__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17abs__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6lt__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9lt__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7lt__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cG,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7lt__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7lt__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cI,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9lt__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cJ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7lt__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9lt__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12lt__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cM,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10lt__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12lt__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cO,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15lt__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13lt__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13lt__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cR,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13lt__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cS,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15lt__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13lt__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cU,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15lt__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cV,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18lt__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16lt__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cX,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6gt__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cY,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9gt__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@cZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7gt__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c0,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7gt__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7gt__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9gt__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c3,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7gt__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c4,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9gt__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12gt__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c6,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10gt__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c7,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12gt__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15gt__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c9,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13gt__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@da,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13gt__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@db,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13gt__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dc,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15gt__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dd,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13gt__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@de,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15gt__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@df,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18gt__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dg,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16gt__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6le__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@di,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9le__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dj,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7le__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dk,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7le__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dl,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7le__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dm,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9le__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dn,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7le__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@do,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9le__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dp,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12le__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10le__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dr,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12le__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ds,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15le__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dt,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13le__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@du,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13le__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dv,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13le__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dw,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15le__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dx,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13le__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dy,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15le__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dz,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18le__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16le__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6ge__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ge__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ge__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ge__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ge__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dG,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ge__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7ge__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dI,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9ge__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dJ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12ge__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10ge__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12ge__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dM,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ge__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ge__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dO,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ge__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ge__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ge__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dR,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13ge__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dS,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15ge__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18ge__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dU,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16ge__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dV,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim6eq__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9eq__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dX,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7eq__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dY,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7eq__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@dZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7eq__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d0,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9eq__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7eq__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim9eq__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d3,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12eq__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d4,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10eq__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12eq__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d6,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15eq__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d7,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13eq__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13eq__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d9,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13eq__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ea,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15eq__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13eq__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ec,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim15eq__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ed,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim18eq__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ee,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16eq__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ef,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7neq__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eg,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10neq__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8neq__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ei,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8neq__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ej,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8neq__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ek,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10neq__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@el,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8neq__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@em,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10neq__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@en,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13neq__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eo,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11neq__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ep,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13neq__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eq,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16neq__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@er,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neq__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@es,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neq__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@et,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neq__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16neq__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ev,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14neq__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ew,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16neq__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ex,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19neq__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ey,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17neq__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ez,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19concat__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eA,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11like__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17like__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eC,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16nullif__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19nullif__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eE,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17nullif__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17nullif__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eG,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17nullif__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19nullif__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eI,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17nullif__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eJ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19nullif__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim22nullif__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim20nullif__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eM,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7avg__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10avg__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eR,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8avg__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8avg__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eV,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10avg__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eX,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11avg__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13avg__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e0,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16avg__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e1,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14avg__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e3,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14avg__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e4,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16avg__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e6,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17avg__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7sum__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fa,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10sum__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8sum__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fd,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8sum__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ff,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10sum__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11sum__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fi,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13sum__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fl,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16sum__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fo,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14sum__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fr,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14sum__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fu,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16sum__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fx,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17sum__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fz,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7max__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10max__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8max__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8max__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8max__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fJ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10max__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fL,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8max__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10max__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fP,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13max__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11max__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13max__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16max__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14max__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14max__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14max__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16max__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14max__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ge,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16max__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19max__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17max__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gn,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7min__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gp,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10min__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gr,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8min__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gt,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8min__charE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gv,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8min__boolE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gx,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10min__stringE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gz,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8min__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gB,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10min__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gD,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13min__timestampE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gF,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11min__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gH,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13min__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gK,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16min__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gN,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14min__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gQ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14min__charOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gT,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14min__boolOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gW,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16min__stringOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gZ,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14min__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g2,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16min__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g5,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim19min__timestampOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g8,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17min__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hb,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim5countE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@if,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim12count__optionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ih,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim7Num__intE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hc,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10Num__intInfE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hd,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8Num__wordE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@he,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim8Num__realE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hf,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim10Num__real32E=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hg,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim11Num__numericE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hh,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim13Num__intOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hi,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16Num__intInfOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hj,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14Num__wordOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hk,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim14Num__realOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hl,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim16Num__real32OptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hm,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim17Num__numericOptionE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hn,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim2Op8coalesceE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ii,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim2Op9coalesce_GE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ij,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim2Op4SomeE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ik,i64 0,i32 2)to i8*)
@_SMLZN17SMLSharp__SQL__Prim2Op4PartE=local_unnamed_addr constant i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@im,i64 0,i32 2)to i8*)
@_SML_ftab19fa241627f4e962_SQLPrim=external global i8
@in=private unnamed_addr global i8 0
@io=private unnamed_addr constant[3x i32][i32 0,i32 2,i32 1]
@ip=private unnamed_addr constant[3x i32][i32 1,i32 0,i32 2]
declare float@llvm.fabs.f32(float)#0
declare double@llvm.fabs.f64(double)#0
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare i8*@sml_load_intinf(i8*inreg)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_obj_equal(i8*inreg,i8*inreg)local_unnamed_addr#0
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare i8*@sml_save()local_unnamed_addr#0
declare void@sml_unsave()local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN10CharVector3mapE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query14format__exp__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query16format__query__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Backend7defaultE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_JE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_ME(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric1_eE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric3absE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric3remE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Char7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List2hdE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3appE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3revE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6concatE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6filterE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6lengthE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List9partitionE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5Int327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf1_eE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf3absE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf3remE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf4quotE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6IntInf7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Real327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare float@_SMLFN6Real327realModE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Real647compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare double@_SMLFN6Real647realModE(i64 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String10concatWithE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String1_ZE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6String7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Word3210toLargeIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN6Word327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9Substring4fullE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9Substring4getcE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main9d24bdf03f9e5ec9_Real64()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5d4c3ea7bd6f9540_IntInf()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5148a836b3728be9_Int32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main145db56e6796da5b_Substring()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maince7036f3433e1102_Char()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainadbb5309e852b68c_CharVector()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main629da514a4193178_Real32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf19563e8df97169c_Word32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main117fff510d821df0_TimeStamp()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf0940cae3cd2cc58_Numeric()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainb7b2ff6092aebc11_Backend()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindcdf3bbf6cbeefdd_SMLFormat()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5008f062fc7efcc4_SQLErrors()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main99165f19d9fdf0e8_SQLQuery_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load9d24bdf03f9e5ec9_Real64(i8*)local_unnamed_addr
declare void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*)local_unnamed_addr
declare void@_SML_load5148a836b3728be9_Int32(i8*)local_unnamed_addr
declare void@_SML_load145db56e6796da5b_Substring(i8*)local_unnamed_addr
declare void@_SML_loadce7036f3433e1102_Char(i8*)local_unnamed_addr
declare void@_SML_loadadbb5309e852b68c_CharVector(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load629da514a4193178_Real32(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_loadf19563e8df97169c_Word32(i8*)local_unnamed_addr
declare void@_SML_load117fff510d821df0_TimeStamp(i8*)local_unnamed_addr
declare void@_SML_loadf0940cae3cd2cc58_Numeric(i8*)local_unnamed_addr
declare void@_SML_loadb7b2ff6092aebc11_Backend(i8*)local_unnamed_addr
declare void@_SML_loaddcdf3bbf6cbeefdd_SMLFormat(i8*)local_unnamed_addr
declare void@_SML_load5008f062fc7efcc4_SQLErrors(i8*)local_unnamed_addr
declare void@_SML_load99165f19d9fdf0e8_SQLQuery_ppg(i8*)local_unnamed_addr
define private void@_SML_tabb19fa241627f4e962_SQLPrim()#3{
unreachable
}
define void@_SML_load19fa241627f4e962_SQLPrim(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@in,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@in,align 1
tail call void@_SML_load9d24bdf03f9e5ec9_Real64(i8*%a)#0
tail call void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*%a)#0
tail call void@_SML_load5148a836b3728be9_Int32(i8*%a)#0
tail call void@_SML_load145db56e6796da5b_Substring(i8*%a)#0
tail call void@_SML_loadce7036f3433e1102_Char(i8*%a)#0
tail call void@_SML_loadadbb5309e852b68c_CharVector(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load629da514a4193178_Real32(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_loadf19563e8df97169c_Word32(i8*%a)#0
tail call void@_SML_load117fff510d821df0_TimeStamp(i8*%a)#0
tail call void@_SML_loadf0940cae3cd2cc58_Numeric(i8*%a)#0
tail call void@_SML_loadb7b2ff6092aebc11_Backend(i8*%a)#0
tail call void@_SML_loaddcdf3bbf6cbeefdd_SMLFormat(i8*%a)#0
tail call void@_SML_load5008f062fc7efcc4_SQLErrors(i8*%a)#0
tail call void@_SML_load99165f19d9fdf0e8_SQLQuery_ppg(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb19fa241627f4e962_SQLPrim,i8*@_SML_ftab19fa241627f4e962_SQLPrim,i8*null)#0
ret void
}
define void@_SML_main19fa241627f4e962_SQLPrim()local_unnamed_addr#2 gc"smlsharp"{
%a=load i8,i8*@in,align 1
%b=and i8%a,2
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 3,i8*@in,align 1
tail call void@_SML_main9d24bdf03f9e5ec9_Real64()#2
tail call void@_SML_main5d4c3ea7bd6f9540_IntInf()#2
tail call void@_SML_main5148a836b3728be9_Int32()#2
tail call void@_SML_main145db56e6796da5b_Substring()#2
tail call void@_SML_maince7036f3433e1102_Char()#2
tail call void@_SML_mainadbb5309e852b68c_CharVector()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main629da514a4193178_Real32()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_mainf19563e8df97169c_Word32()#2
tail call void@_SML_main117fff510d821df0_TimeStamp()#2
tail call void@_SML_mainf0940cae3cd2cc58_Numeric()#2
tail call void@_SML_mainb7b2ff6092aebc11_Backend()#2
tail call void@_SML_maindcdf3bbf6cbeefdd_SMLFormat()#2
tail call void@_SML_main5008f062fc7efcc4_SQLErrors()#2
tail call void@_SML_main99165f19d9fdf0e8_SQLQuery_ppg()#2
br label%d
}
define fastcc void@_SMLFN17SMLSharp__SQL__Prim8closeResE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 4)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 4,i32*%u,align 4
store i32 0,i32*%s,align 4
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=call fastcc i8*%o(i8*inreg%v,i8*inreg%r)
ret void
}
define fastcc void@_SMLFN17SMLSharp__SQL__Prim12closeCommandE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
br label%d
d:
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%i,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 4)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 4,i32*%u,align 4
store i32 0,i32*%s,align 4
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%o(i8*inreg%v,i8*inreg%r)
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=icmp eq i32%y,0
br i1%z,label%A,label%d
A:
%B=bitcast i8**%b to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%b,align 8
%J=call i8*@sml_alloc(i32 inreg 4)#0
%K=bitcast i8*%J to i32*
%L=getelementptr inbounds i8,i8*%J,i64 -4
%M=bitcast i8*%L to i32*
store i32 4,i32*%M,align 4
store i32 0,i32*%K,align 4
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=call fastcc i8*%G(i8*inreg%N,i8*inreg%J)
ret void
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_254(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%c to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%p=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%y=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%d to i8***
%F=load i8**,i8***%E,align 8
store i8*null,i8**%d,align 8
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=call i32@sml_obj_equal(i8*inreg%I,i8*inreg%H)#0
ret i32%J
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_255(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%c to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%p=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%y=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%d to i8***
%F=load i8**,i8***%E,align 8
store i8*null,i8**%d,align 8
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=call i32@sml_obj_equal(i8*inreg%I,i8*inreg%H)#0
ret i32%J
}
define internal fastcc void@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_294(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%g,align 8
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_255 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1423 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=call fastcc i8*%w(i8*inreg%R,i8*inreg%G)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*%V(i8*inreg%X,i8*inreg%ab)
%ad=icmp eq i8*%ac,null
br i1%ad,label%ae,label%bh
ae:
%af=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=bitcast i8*%ag to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@j,i64 0,i32 2,i64 0),i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ag)
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@k,i64 0,i32 2,i64 0),i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aq)
store i8*%az,i8**%c,align 8
%aA=bitcast i8**%f to i8***
%aB=load i8**,i8***%aA,align 8
store i8*null,i8**%f,align 8
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%e,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aD)
store i8*%aN,i8**%c,align 8
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@x,i64 0,i32 2,i64 0),i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aO)
store i8*%aX,i8**%c,align 8
%aY=call i8*@sml_alloc(i32 inreg 28)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177304,i32*%a0,align 4
store i8*%aY,i8**%e,align 8
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aY,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@i,i64 0,i32 2,i64 0),i8**%a4,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aY,i64 24
%a9=bitcast i8*%a8 to i32*
store i32 7,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 60)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177336,i32*%bc,align 4
%bd=getelementptr inbounds i8,i8*%ba,i64 56
%be=bitcast i8*%bd to i32*
store i32 1,i32*%be,align 4
%bf=load i8*,i8**%e,align 8
%bg=bitcast i8*%ba to i8**
store i8*%bf,i8**%bg,align 8
call void@sml_raise(i8*inreg%ba)#1
unreachable
bh:
%bi=bitcast i8*%ac to i8**
%bj=load i8*,i8**%bi,align 8
%bk=getelementptr inbounds i8,i8*%bj,i64 8
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%e,align 8
%bn=load i8*,i8**%d,align 8
%bo=call i32@sml_obj_equal(i8*inreg%bn,i8*inreg%bm)#0
%bp=icmp eq i32%bo,0
br i1%bp,label%br,label%bq
bq:
ret void
br:
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=bitcast i8*%bs to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[26x i8]}>,<{[4x i8],i32,[26x i8]}>*@e,i64 0,i32 2,i64 0),i8**%bv,align 8
%bw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to i32*
store i32 3,i32*%bA,align 4
%bB=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bs)
store i8*%bB,i8**%c,align 8
%bC=call i8*@sml_alloc(i32 inreg 20)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177296,i32*%bE,align 4
%bF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@k,i64 0,i32 2,i64 0),i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 16
%bK=bitcast i8*%bJ to i32*
store i32 3,i32*%bK,align 4
%bL=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bC)
store i8*%bL,i8**%c,align 8
%bM=bitcast i8**%f to i8***
%bN=load i8**,i8***%bM,align 8
%bO=load i8*,i8**%bN,align 8
store i8*%bO,i8**%f,align 8
%bP=call i8*@sml_alloc(i32 inreg 20)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177296,i32*%bR,align 4
%bS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bV=getelementptr inbounds i8,i8*%bP,i64 8
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bP,i64 16
%bY=bitcast i8*%bX to i32*
store i32 3,i32*%bY,align 4
%bZ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bP)
store i8*%bZ,i8**%c,align 8
%b0=call i8*@sml_alloc(i32 inreg 20)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177296,i32*%b2,align 4
%b3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@f,i64 0,i32 2,i64 0),i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
%b9=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%b0)
store i8*%b9,i8**%c,align 8
%ca=load i8*,i8**%d,align 8
%cb=bitcast i8*%ca to i32*
%cc=load i32,i32*%cb,align 4
store i8*null,i8**%d,align 8
%cd=getelementptr inbounds i8,i8*%ca,i64 8
%ce=bitcast i8*%cd to i8**
%cf=load i8*,i8**%ce,align 8
%cg=bitcast i8*%cf to i32*
%ch=load i32,i32*%cg,align 4
switch i32%ch,label%ci[
i32 2,label%c7
i32 3,label%c6
i32 10,label%c5
i32 1,label%c4
i32 7,label%c3
i32 5,label%c2
i32 6,label%c1
i32 0,label%c0
i32 8,label%cZ
i32 4,label%cY
i32 9,label%cA
]
ci:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%cj=load i8*,i8**@_SMLZ5Match,align 8
store i8*%cj,i8**%c,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
store i8*%ck,i8**%d,align 8
%cn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ck,i64 8
%cq=bitcast i8*%cp to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@O,i64 0,i32 2,i64 0),i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ck,i64 16
%cs=bitcast i8*%cr to i32*
store i32 3,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 60)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177336,i32*%cv,align 4
%cw=getelementptr inbounds i8,i8*%ct,i64 56
%cx=bitcast i8*%cw to i32*
store i32 1,i32*%cx,align 4
%cy=load i8*,i8**%d,align 8
%cz=bitcast i8*%ct to i8**
store i8*%cy,i8**%cz,align 8
call void@sml_raise(i8*inreg%ct)#1
unreachable
cA:
%cB=getelementptr inbounds i8,i8*%cf,i64 8
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
store i8*%cD,i8**%d,align 8
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
%cH=bitcast i8*%cE to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@M,i64 0,i32 2,i64 0),i8**%cH,align 8
%cI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cE)
store i8*%cN,i8**%d,align 8
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
%cR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cO,i64 8
%cU=bitcast i8*%cT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@N,i64 0,i32 2,i64 0),i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 16
%cW=bitcast i8*%cV to i32*
store i32 3,i32*%cW,align 4
%cX=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cO)
br label%dn
cY:
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
cZ:
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c0:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c1:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c2:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c3:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c4:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c5:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c6:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c7:
store i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),i8**%d,align 8
br label%c8
c8:
%c9=phi i8*[getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),%c7],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),%c6],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),%c5],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),%c4],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),%c3],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),%c2],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),%c1],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),%c0],[getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),%cZ],[getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),%cY]
%da=icmp eq i32%cc,0
br i1%da,label%dm,label%db
db:
%dc=call i8*@sml_alloc(i32 inreg 20)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177296,i32*%de,align 4
%df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@B,i64 0,i32 2,i64 0),i8**%di,align 8
%dj=getelementptr inbounds i8,i8*%dc,i64 16
%dk=bitcast i8*%dj to i32*
store i32 3,i32*%dk,align 4
%dl=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dc)
br label%dn
dm:
store i8*null,i8**%d,align 8
br label%dn
dn:
%do=phi i8*[%cX,%cA],[%dl,%db],[%c9,%dm]
store i8*%do,i8**%d,align 8
%dp=call i8*@sml_alloc(i32 inreg 20)#0
%dq=getelementptr inbounds i8,i8*%dp,i64 -4
%dr=bitcast i8*%dq to i32*
store i32 1342177296,i32*%dr,align 4
%ds=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dt=bitcast i8*%dp to i8**
store i8*%ds,i8**%dt,align 8
%du=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dv=getelementptr inbounds i8,i8*%dp,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dp,i64 16
%dy=bitcast i8*%dx to i32*
store i32 3,i32*%dy,align 4
%dz=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dp)
store i8*%dz,i8**%c,align 8
%dA=call i8*@sml_alloc(i32 inreg 20)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177296,i32*%dC,align 4
%dD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dA,i64 8
%dG=bitcast i8*%dF to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@g,i64 0,i32 2,i64 0),i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dA,i64 16
%dI=bitcast i8*%dH to i32*
store i32 3,i32*%dI,align 4
%dJ=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%dA)
store i8*%dJ,i8**%c,align 8
%dK=load i8*,i8**%e,align 8
%dL=bitcast i8*%dK to i32*
%dM=load i32,i32*%dL,align 4
%dN=getelementptr inbounds i8,i8*%dK,i64 8
%dO=bitcast i8*%dN to i8**
%dP=load i8*,i8**%dO,align 8
%dQ=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%dQ,i8**%e,align 8
%dR=bitcast i8*%dP to i32*
%dS=load i32,i32*%dR,align 4
switch i32%dS,label%dT[
i32 2,label%eI
i32 3,label%eH
i32 10,label%eG
i32 1,label%eF
i32 7,label%eE
i32 5,label%eD
i32 6,label%eC
i32 0,label%eB
i32 8,label%eA
i32 4,label%ez
i32 9,label%eb
]
dT:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%dU=load i8*,i8**@_SMLZ5Match,align 8
store i8*%dU,i8**%c,align 8
%dV=call i8*@sml_alloc(i32 inreg 20)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177296,i32*%dX,align 4
store i8*%dV,i8**%d,align 8
%dY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dZ=bitcast i8*%dV to i8**
store i8*%dY,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dV,i64 8
%d1=bitcast i8*%d0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@O,i64 0,i32 2,i64 0),i8**%d1,align 8
%d2=getelementptr inbounds i8,i8*%dV,i64 16
%d3=bitcast i8*%d2 to i32*
store i32 3,i32*%d3,align 4
%d4=call i8*@sml_alloc(i32 inreg 60)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177336,i32*%d6,align 4
%d7=getelementptr inbounds i8,i8*%d4,i64 56
%d8=bitcast i8*%d7 to i32*
store i32 1,i32*%d8,align 4
%d9=load i8*,i8**%d,align 8
%ea=bitcast i8*%d4 to i8**
store i8*%d9,i8**%ea,align 8
call void@sml_raise(i8*inreg%d4)#1
unreachable
eb:
%ec=getelementptr inbounds i8,i8*%dP,i64 8
%ed=bitcast i8*%ec to i8**
%ee=load i8*,i8**%ed,align 8
store i8*%ee,i8**%d,align 8
%ef=call i8*@sml_alloc(i32 inreg 20)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177296,i32*%eh,align 4
%ei=bitcast i8*%ef to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@M,i64 0,i32 2,i64 0),i8**%ei,align 8
%ej=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ek=getelementptr inbounds i8,i8*%ef,i64 8
%el=bitcast i8*%ek to i8**
store i8*%ej,i8**%el,align 8
%em=getelementptr inbounds i8,i8*%ef,i64 16
%en=bitcast i8*%em to i32*
store i32 3,i32*%en,align 4
%eo=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ef)
store i8*%eo,i8**%d,align 8
%ep=call i8*@sml_alloc(i32 inreg 20)#0
%eq=getelementptr inbounds i8,i8*%ep,i64 -4
%er=bitcast i8*%eq to i32*
store i32 1342177296,i32*%er,align 4
%es=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%et=bitcast i8*%ep to i8**
store i8*%es,i8**%et,align 8
%eu=getelementptr inbounds i8,i8*%ep,i64 8
%ev=bitcast i8*%eu to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@N,i64 0,i32 2,i64 0),i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%ep,i64 16
%ex=bitcast i8*%ew to i32*
store i32 3,i32*%ex,align 4
%ey=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ep)
br label%eY
ez:
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eA:
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eB:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eC:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eD:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eE:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eF:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eG:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eH:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eI:
store i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),i8**%d,align 8
br label%eJ
eJ:
%eK=phi i8*[getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),%eI],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),%eH],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),%eG],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),%eF],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),%eE],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),%eD],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),%eC],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),%eB],[getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),%eA],[getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),%ez]
%eL=icmp eq i32%dM,0
br i1%eL,label%eX,label%eM
eM:
%eN=call i8*@sml_alloc(i32 inreg 20)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177296,i32*%eP,align 4
%eQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eR=bitcast i8*%eN to i8**
store i8*%eQ,i8**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eN,i64 8
%eT=bitcast i8*%eS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@B,i64 0,i32 2,i64 0),i8**%eT,align 8
%eU=getelementptr inbounds i8,i8*%eN,i64 16
%eV=bitcast i8*%eU to i32*
store i32 3,i32*%eV,align 4
%eW=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%eN)
br label%eY
eX:
store i8*null,i8**%d,align 8
br label%eY
eY:
%eZ=phi i8*[%ey,%eb],[%eW,%eM],[%eK,%eX]
store i8*%eZ,i8**%d,align 8
%e0=call i8*@sml_alloc(i32 inreg 20)#0
%e1=getelementptr inbounds i8,i8*%e0,i64 -4
%e2=bitcast i8*%e1 to i32*
store i32 1342177296,i32*%e2,align 4
%e3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%e4=bitcast i8*%e0 to i8**
store i8*%e3,i8**%e4,align 8
%e5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%e6=getelementptr inbounds i8,i8*%e0,i64 8
%e7=bitcast i8*%e6 to i8**
store i8*%e5,i8**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e0,i64 16
%e9=bitcast i8*%e8 to i32*
store i32 3,i32*%e9,align 4
%fa=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%e0)
store i8*%fa,i8**%c,align 8
%fb=call i8*@sml_alloc(i32 inreg 20)#0
%fc=getelementptr inbounds i8,i8*%fb,i64 -4
%fd=bitcast i8*%fc to i32*
store i32 1342177296,i32*%fd,align 4
%fe=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ff=bitcast i8*%fb to i8**
store i8*%fe,i8**%ff,align 8
%fg=getelementptr inbounds i8,i8*%fb,i64 8
%fh=bitcast i8*%fg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@s,i64 0,i32 2,i64 0),i8**%fh,align 8
%fi=getelementptr inbounds i8,i8*%fb,i64 16
%fj=bitcast i8*%fi to i32*
store i32 3,i32*%fj,align 4
%fk=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%fb)
store i8*%fk,i8**%c,align 8
%fl=call i8*@sml_alloc(i32 inreg 28)#0
%fm=getelementptr inbounds i8,i8*%fl,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 1342177304,i32*%fn,align 4
store i8*%fl,i8**%d,align 8
%fo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fp=bitcast i8*%fl to i8**
store i8*%fo,i8**%fp,align 8
%fq=getelementptr inbounds i8,i8*%fl,i64 8
%fr=bitcast i8*%fq to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@h,i64 0,i32 2,i64 0),i8**%fr,align 8
%fs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ft=getelementptr inbounds i8,i8*%fl,i64 16
%fu=bitcast i8*%ft to i8**
store i8*%fs,i8**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fl,i64 24
%fw=bitcast i8*%fv to i32*
store i32 7,i32*%fw,align 4
%fx=call i8*@sml_alloc(i32 inreg 60)#0
%fy=getelementptr inbounds i8,i8*%fx,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177336,i32*%fz,align 4
%fA=getelementptr inbounds i8,i8*%fx,i64 56
%fB=bitcast i8*%fA to i32*
store i32 1,i32*%fB,align 4
%fC=load i8*,i8**%d,align 8
%fD=bitcast i8*%fx to i8**
store i8*%fC,i8**%fD,align 8
call void@sml_raise(i8*inreg%fx)#1
unreachable
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_295(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%c to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%p=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**@_SMLZN4Char7toLowerE,align 8
%y=call fastcc i8*@_SMLFN10CharVector3mapE(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%d to i8***
%F=load i8**,i8***%E,align 8
store i8*null,i8**%d,align 8
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%B(i8*inreg%D,i8*inreg%G)
%I=load i8*,i8**%c,align 8
%J=call i32@sml_obj_equal(i8*inreg%I,i8*inreg%H)#0
ret i32%J
}
define internal fastcc void@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_300(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_295 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1425 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=call fastcc i8*%t(i8*inreg%O,i8*inreg%D)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
%Z=call fastcc i8*%S(i8*inreg%U,i8*inreg%Y)
%aa=icmp eq i8*%Z,null
br i1%aa,label%ab,label%be
ab:
%ac=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%ac,i8**%e,align 8
%ad=bitcast i8**%d to i8***
%ae=load i8**,i8***%ad,align 8
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=bitcast i8*%ag to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@w,i64 0,i32 2,i64 0),i8**%aj,align 8
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ag)
store i8*%ap,i8**%d,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@m,i64 0,i32 2,i64 0),i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aq)
store i8*%az,i8**%d,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
%aD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aA)
store i8*%aK,i8**%c,align 8
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[20x i8]}>,<{[4x i8],i32,[20x i8]}>*@n,i64 0,i32 2,i64 0),i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aL)
store i8*%aU,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
store i8*%aV,i8**%d,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@l,i64 0,i32 2,i64 0),i8**%a1,align 8
%a2=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a3=getelementptr inbounds i8,i8*%aV,i64 16
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aV,i64 24
%a6=bitcast i8*%a5 to i32*
store i32 7,i32*%a6,align 4
%a7=call i8*@sml_alloc(i32 inreg 60)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177336,i32*%a9,align 4
%ba=getelementptr inbounds i8,i8*%a7,i64 56
%bb=bitcast i8*%ba to i32*
store i32 1,i32*%bb,align 4
%bc=load i8*,i8**%d,align 8
%bd=bitcast i8*%a7 to i8**
store i8*%bc,i8**%bd,align 8
call void@sml_raise(i8*inreg%a7)#1
unreachable
be:
ret void
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_301(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List4findE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%g,align 8
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_254 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1422 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=call fastcc i8*%w(i8*inreg%R,i8*inreg%G)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=bitcast i8**%e to i8***
%Z=load i8**,i8***%Y,align 8
store i8*null,i8**%e,align 8
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*%V(i8*inreg%X,i8*inreg%aa)
%ac=icmp eq i8*%ab,null
br i1%ac,label%ad,label%ae
ad:
ret i32 1
ae:
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=getelementptr inbounds i8,i8*%ag,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%e,align 8
%ak=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%f,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%g,align 8
%at=load i8*,i8**%c,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
%aD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_294 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1424 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 -2147483647,i32*%aK,align 4
%aL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aM=call fastcc i8*%an(i8*inreg%aL,i8*inreg%aA)
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8*(i8*,i8*)**
%aP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aO,align 8
%aQ=bitcast i8*%aM to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=load i8*,i8**%d,align 8
%aT=call fastcc i8*%aP(i8*inreg%aR,i8*inreg%aS)
%aU=call fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%f,align 8
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
store i8*%a0,i8**%g,align 8
%a3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a0,i64 16
%a9=bitcast i8*%a8 to i32*
store i32 3,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 28)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177304,i32*%bc,align 4
%bd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_300 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 16
%bi=bitcast i8*%bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1426 to void(...)*),void(...)**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 24
%bk=bitcast i8*%bj to i32*
store i32 -2147483647,i32*%bk,align 4
%bl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bm=call fastcc i8*%aX(i8*inreg%bl,i8*inreg%ba)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bt=call fastcc i8*%bp(i8*inreg%br,i8*inreg%bs)
ret i32 0
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_302(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLFN4List6filterE(i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 12)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_301 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1427 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=call fastcc i8*%u(i8*inreg%P,i8*inreg%E)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%b,align 8
%X=tail call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
ret i8*%X
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim4linkE_309(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
%p=bitcast i8*%m to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@r,i64 0,i32 2,i64 0),i8**%p,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%m)
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@s,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=tail call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%w)
ret i8*%F
}
define internal fastcc i8*@_SMLLL7columns_335(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%v,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%p,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*%H(i8*inreg%J,i8*inreg%A)
store i8*%K,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=and i32%N,268435455
%P=icmp eq i32%O,1
br i1%P,label%am,label%Q
Q:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%R,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
%W=bitcast i8*%R to i32*
store i32%x,i32*%W,align 4
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
ret i8*%ac
am:
store i8*null,i8**%e,align 8
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%c,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=bitcast i8*%ar to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@y,i64 0,i32 2,i64 0),i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ar)
store i8*%aA,i8**%c,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@z,i64 0,i32 2,i64 0),i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aB)
store i8*%aK,i8**%c,align 8
%aL=load i8*,i8**%d,align 8
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
store i8*null,i8**%d,align 8
%aO=getelementptr inbounds i8,i8*%aL,i64 8
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
%aR=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
store i8*%aR,i8**%e,align 8
%aS=bitcast i8*%aQ to i32*
%aT=load i32,i32*%aS,align 4
switch i32%aT,label%aU[
i32 2,label%bJ
i32 3,label%bI
i32 10,label%bH
i32 1,label%bG
i32 7,label%bF
i32 5,label%bE
i32 6,label%bD
i32 0,label%bC
i32 8,label%bB
i32 4,label%bA
i32 9,label%bc
]
aU:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%aV=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aV,i8**%c,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
store i8*%aW,i8**%d,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[37x i8]}>,<{[4x i8],i32,[37x i8]}>*@O,i64 0,i32 2,i64 0),i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 3,i32*%a4,align 4
%a5=call i8*@sml_alloc(i32 inreg 60)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177336,i32*%a7,align 4
%a8=getelementptr inbounds i8,i8*%a5,i64 56
%a9=bitcast i8*%a8 to i32*
store i32 1,i32*%a9,align 4
%ba=load i8*,i8**%d,align 8
%bb=bitcast i8*%a5 to i8**
store i8*%ba,i8**%bb,align 8
call void@sml_raise(i8*inreg%a5)#1
unreachable
bc:
%bd=getelementptr inbounds i8,i8*%aQ,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%d,align 8
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=bitcast i8*%bg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@M,i64 0,i32 2,i64 0),i8**%bj,align 8
%bk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
%bp=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bg)
store i8*%bp,i8**%d,align 8
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177296,i32*%bs,align 4
%bt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bq,i64 8
%bw=bitcast i8*%bv to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@N,i64 0,i32 2,i64 0),i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bq)
br label%bZ
bA:
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bB:
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bC:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bD:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bE:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bF:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bG:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bH:
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bI:
store i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bJ:
store i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),i8**%d,align 8
br label%bK
bK:
%bL=phi i8*[getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@C,i64 0,i32 2,i64 0),%bJ],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@D,i64 0,i32 2,i64 0),%bI],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@E,i64 0,i32 2,i64 0),%bH],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@F,i64 0,i32 2,i64 0),%bG],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@G,i64 0,i32 2,i64 0),%bF],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@H,i64 0,i32 2,i64 0),%bE],[getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@I,i64 0,i32 2,i64 0),%bD],[getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@J,i64 0,i32 2,i64 0),%bC],[getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@K,i64 0,i32 2,i64 0),%bB],[getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@L,i64 0,i32 2,i64 0),%bA]
%bM=icmp eq i32%aN,0
br i1%bM,label%bY,label%bN
bN:
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@B,i64 0,i32 2,i64 0),i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 16
%bW=bitcast i8*%bV to i32*
store i32 3,i32*%bW,align 4
%bX=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%bO)
br label%bZ
bY:
store i8*null,i8**%d,align 8
br label%bZ
bZ:
%b0=phi i8*[%bz,%bc],[%bX,%bN],[%bL,%bY]
store i8*%b0,i8**%d,align 8
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%b1)
store i8*%cb,i8**%c,align 8
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%cc,i64 8
%ci=bitcast i8*%ch to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@P,i64 0,i32 2,i64 0),i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cc,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%cc)
store i8*%cl,i8**%c,align 8
%cm=call i8*@sml_alloc(i32 inreg 28)#0
%cn=getelementptr inbounds i8,i8*%cm,i64 -4
%co=bitcast i8*%cn to i32*
store i32 1342177304,i32*%co,align 4
store i8*%cm,i8**%d,align 8
%cp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cq=bitcast i8*%cm to i8**
store i8*%cp,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cm,i64 8
%cs=bitcast i8*%cr to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@A,i64 0,i32 2,i64 0),i8**%cs,align 8
%ct=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cu=getelementptr inbounds i8,i8*%cm,i64 16
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cm,i64 24
%cx=bitcast i8*%cw to i32*
store i32 7,i32*%cx,align 4
%cy=call i8*@sml_alloc(i32 inreg 60)#0
%cz=getelementptr inbounds i8,i8*%cy,i64 -4
%cA=bitcast i8*%cz to i32*
store i32 1342177336,i32*%cA,align 4
%cB=getelementptr inbounds i8,i8*%cy,i64 56
%cC=bitcast i8*%cB to i32*
store i32 1,i32*%cC,align 4
%cD=load i8*,i8**%d,align 8
%cE=bitcast i8*%cy to i8**
store i8*%cD,i8**%cE,align 8
call void@sml_raise(i8*inreg%cy)#1
unreachable
}
define internal fastcc i8*@_SMLLL8commands_336(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%g,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7columns_335 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7columns_335 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%w(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%e,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%aq,i64 4
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
%av=bitcast i8*%aq to i32*
store i32 2,i32*%av,align 4
%aw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
%aB=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%e,align 8
%aH=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg 0,i32 inreg 4)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%d,align 8
%aN=call i8*@sml_alloc(i32 inreg 4)#0
%aO=bitcast i8*%aN to i32*
%aP=getelementptr inbounds i8,i8*%aN,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 4,i32*%aQ,align 4
store i32 0,i32*%aO,align 4
%aR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aS=call fastcc i8*%aK(i8*inreg%aR,i8*inreg%aN)
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8*(i8*,i8*)**
%aV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aU,align 8
%aW=bitcast i8*%aS to i8**
%aX=load i8*,i8**%aW,align 8
%aY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aZ=call fastcc i8*%aV(i8*inreg%aX,i8*inreg%aY)
%a0=load i8*,i8**%e,align 8
%a1=tail call fastcc i8*%aE(i8*inreg%a0,i8*inreg%aZ)
ret i8*%a1
}
define internal fastcc void@_SMLLLN17SMLSharp__SQL__Prim13linkAndCreateE_337(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
%g=getelementptr inbounds i8,i8*%f,i64 16
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg%b)
store i8*%o,i8**%c,align 8
br label%p
p:
%q=load atomic i32,i32*@sml_check_flag unordered,align 4
%r=icmp eq i32%q,0
br i1%r,label%t,label%s
s:
call void@sml_check(i32 inreg%q)
br label%t
t:
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=call i8*@sml_alloc(i32 inreg 4)#0
%E=bitcast i8*%D to i32*
%F=getelementptr inbounds i8,i8*%D,i64 -4
%G=bitcast i8*%F to i32*
store i32 4,i32*%G,align 4
store i32 0,i32*%E,align 4
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=call fastcc i8*%A(i8*inreg%H,i8*inreg%D)
%J=bitcast i8*%I to i32*
%K=load i32,i32*%J,align 4
%L=icmp eq i32%K,0
br i1%L,label%M,label%p
M:
%N=bitcast i8**%c to i8***
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 4)#0
%W=bitcast i8*%V to i32*
%X=getelementptr inbounds i8,i8*%V,i64 -4
%Y=bitcast i8*%X to i32*
store i32 4,i32*%Y,align 4
store i32 0,i32*%W,align 4
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=call fastcc i8*%S(i8*inreg%Z,i8*inreg%V)
ret void
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 32
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 40
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 88
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 24
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=load i8,i8*%C,align 1
ret i8%X
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i32*
%Y=load i32,i32*%X,align 4
ret i32%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 72
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc double@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 56
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to double*
%Y=load double,double*%X,align 8
ret double%Y
}
define fastcc float@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 64
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to float*
%Y=load float,float*%X,align 4
ret float%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 80
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%l,i64 48
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 4)#0
%y=bitcast i8*%x to i32*
%z=getelementptr inbounds i8,i8*%x,i64 -4
%A=bitcast i8*%z to i32*
store i32 4,i32*%A,align 4
store i32%o,i32*%y,align 4
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=call fastcc i8*%u(i8*inreg%B,i8*inreg%x)
%D=icmp eq i8*%C,null
br i1%D,label%E,label%W
E:
%F=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors6FormatE,align 8
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 60)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177336,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 56
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
call void@sml_raise(i8*inreg%P)#1
unreachable
W:
%X=bitcast i8*%C to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 32
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 40
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 88
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 24
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 16
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 72
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 56
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 64
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 80
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 48
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 4)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 4,i32*%z,align 4
store i32%n,i32*%x,align 4
%A=load i8*,i8**%b,align 8
%B=tail call fastcc i8*%t(i8*inreg%A,i8*inreg%w)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim6ty__intE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@al,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__intInfE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@an,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__wordE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ap,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__charE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ar,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__boolE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@at,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__stringE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@av,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7ty__realE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ax,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9ty__real32E(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@az,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12ty__timestampE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aB,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10ty__numericE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aD,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12ty__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aG,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__intInfOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aJ,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aM,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__charOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aP,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aS,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__stringOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aV,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13ty__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aY,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15ty__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a1,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18ty__timestampOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a4,i64 0,i32 2)to i8*)
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16ty__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a7,i64 0,i32 2)to i8*)
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12compare__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
ret i32%k
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
br i1%l,label%p,label%u
p:
%q=icmp ne i8*%o,null
%r=zext i1%q to i32
br label%s
s:
%t=phi i32[%r,%p],[2,%u]
ret i32%t
u:
%v=icmp eq i8*%o,null
br i1%v,label%s,label%w
w:
%x=bitcast i8*%k to i32*
%y=load i32,i32*%x,align 4
%z=bitcast i8*%o to i32*
%A=load i32,i32*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177288,i32*%E,align 4
store i32%y,i32*%C,align 4
%F=getelementptr inbounds i8,i8*%B,i64 4
%G=bitcast i8*%F to i32*
store i32%A,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=tail call fastcc i32@_SMLFN5Int327compareE(i8*inreg%B)
ret i32%J
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%v
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp ne i8*%q,null
%s=zext i1%r to i32
br label%t
t:
%u=phi i32[%s,%n],[2,%v]
ret i32%u
v:
%w=bitcast i8*%l to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%i,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=icmp eq i8*%A,null
br i1%B,label%t,label%C
C:
%D=bitcast i8*%A to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=tail call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%F)
ret i32%P
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
br i1%l,label%p,label%u
p:
%q=icmp ne i8*%o,null
%r=zext i1%q to i32
br label%s
s:
%t=phi i32[%r,%p],[2,%u]
ret i32%t
u:
%v=icmp eq i8*%o,null
br i1%v,label%s,label%w
w:
%x=bitcast i8*%k to i32*
%y=load i32,i32*%x,align 4
%z=bitcast i8*%o to i32*
%A=load i32,i32*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177288,i32*%E,align 4
store i32%y,i32*%C,align 4
%F=getelementptr inbounds i8,i8*%B,i64 4
%G=bitcast i8*%F to i32*
store i32%A,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=tail call fastcc i32@_SMLFN6Word327compareE(i8*inreg%B)
ret i32%J
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
br i1%l,label%p,label%u
p:
%q=icmp ne i8*%o,null
%r=zext i1%q to i32
br label%s
s:
%t=phi i32[%r,%p],[2,%u]
ret i32%t
u:
%v=icmp eq i8*%o,null
br i1%v,label%s,label%w
w:
%x=load i8,i8*%k,align 1
%y=load i8,i8*%o,align 1
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 2
call void@llvm.memset.p0i8.i32(i8*%C,i8 0,i32 6,i1 false)
store i8%x,i8*%z,align 1
%D=getelementptr inbounds i8,i8*%z,i64 1
store i8%y,i8*%D,align 1
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 4
%G=tail call fastcc i32@_SMLFN4Char7compareE(i8*inreg%z)
ret i32%G
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
%e=getelementptr inbounds i8,i8*%a,i64 8
%f=bitcast i8*%e to i8**
%g=load i8*,i8**%f,align 8
br i1%d,label%h,label%m
h:
%i=icmp ne i8*%g,null
%j=zext i1%i to i32
br label%k
k:
%l=phi i32[%j,%h],[2,%m],[%w,%v],[%y,%x]
ret i32%l
m:
%n=icmp eq i8*%g,null
br i1%n,label%k,label%o
o:
%p=bitcast i8*%c to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%g to i32*
%s=load i32,i32*%r,align 4
%t=icmp eq i32%q,0
%u=icmp eq i32%s,0
br i1%t,label%x,label%v
v:
%w=zext i1%u to i32
br label%k
x:
%y=select i1%u,i32 0,i32 2
br label%k
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%v
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp ne i8*%q,null
%s=zext i1%r to i32
br label%t
t:
%u=phi i32[%s,%n],[2,%v]
ret i32%u
v:
%w=bitcast i8*%l to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%i,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=icmp eq i8*%A,null
br i1%B,label%t,label%C
C:
%D=bitcast i8*%A to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=tail call fastcc i32@_SMLFN6String7compareE(i8*inreg%F)
ret i32%P
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
br i1%l,label%p,label%u
p:
%q=icmp ne i8*%o,null
%r=zext i1%q to i32
br label%s
s:
%t=phi i32[%r,%p],[2,%u]
ret i32%t
u:
%v=icmp eq i8*%o,null
br i1%v,label%s,label%w
w:
%x=bitcast i8*%k to double*
%y=load double,double*%x,align 8
%z=bitcast i8*%o to double*
%A=load double,double*%z,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=bitcast i8*%B to double*
store double%y,double*%E,align 8
%F=getelementptr inbounds i8,i8*%B,i64 8
%G=bitcast i8*%F to double*
store double%A,double*%G,align 8
%H=getelementptr inbounds i8,i8*%B,i64 16
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=tail call fastcc i32@_SMLFN6Real647compareE(i8*inreg%B)
ret i32%J
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
br i1%l,label%p,label%u
p:
%q=icmp ne i8*%o,null
%r=zext i1%q to i32
br label%s
s:
%t=phi i32[%r,%p],[2,%u]
ret i32%t
u:
%v=icmp eq i8*%o,null
br i1%v,label%s,label%w
w:
%x=bitcast i8*%k to float*
%y=load float,float*%x,align 4
%z=bitcast i8*%o to float*
%A=load float,float*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
%E=bitcast i8*%B to float*
store float%y,float*%E,align 4
%F=getelementptr inbounds i8,i8*%B,i64 4
%G=bitcast i8*%F to float*
store float%A,float*%G,align 4
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=tail call fastcc i32@_SMLFN6Real327compareE(i8*inreg%B)
ret i32%J
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%v
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp ne i8*%q,null
%s=zext i1%r to i32
br label%t
t:
%u=phi i32[%s,%n],[2,%v]
ret i32%u
v:
%w=bitcast i8*%l to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%i,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=icmp eq i8*%A,null
br i1%B,label%t,label%C
C:
%D=bitcast i8*%A to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=tail call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%F)
ret i32%P
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%v
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp ne i8*%q,null
%s=zext i1%r to i32
br label%t
t:
%u=phi i32[%s,%n],[2,%v]
ret i32%u
v:
%w=bitcast i8*%l to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%i,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=icmp eq i8*%A,null
br i1%B,label%t,label%C
C:
%D=bitcast i8*%A to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=tail call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%F)
ret i32%P
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=icmp ult i32%a,3
br i1%h,label%A,label%i
i:
call void@sml_matchcomp_bug()
%j=load i8*,i8**@_SMLZ5Match,align 8
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%c,align 8
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@bk,i64 0,i32 2,i64 0),i8**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 60)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177336,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%t,i64 56
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=load i8*,i8**%c,align 8
%z=bitcast i8*%t to i8**
store i8*%y,i8**%z,align 8
call void@sml_raise(i8*inreg%t)#1
unreachable
A:
%B=sext i32%a to i64
%C=getelementptr inbounds[3x i32],[3x i32]*@io,i64 0,i64%B
%D=load i32,i32*%C,align 4
ret i32%D
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool38fromBoolE(i32 inreg%a)#4 gc"smlsharp"{
%b=icmp ne i32%a,0
%c=zext i1%b to i32
ret i32%c
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool36isTrueE(i32 inreg%a)#4 gc"smlsharp"{
%b=icmp eq i32%a,1
%c=zext i1%b to i32
ret i32%c
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_499(i8*inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,%b
%f=zext i1%e to i32
ret i32%f
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE(i32 inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=call i8*@sml_alloc(i32 inreg 12)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%c,i8**%b,align 8
store i32%a,i32*%d,align 4
%g=getelementptr inbounds i8,i8*%c,i64 8
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 4
%i=call i8*@sml_alloc(i32 inreg 28)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to void(...)**
store void(...)*bitcast(i32(i8*,i32)*@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_499 to void(...)*),void(...)**%o,align 8
%p=getelementptr inbounds i8,i8*%i,i64 16
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_1487 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%i,i64 24
%s=bitcast i8*%r to i32*
store i32 -2147483647,i32*%s,align 4
ret i8*%i
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 1,label%K
i32 0,label%ah
i32 2,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@bp,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 4
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=icmp eq i32%H,0
%J=select i1%I,i32 0,i32 2
br label%ah
K:
%L=getelementptr inbounds i8,i8*%i,i64 4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=icmp ult i32%N,3
br i1%O,label%ah,label%P
P:
call void@sml_matchcomp_bug()
%Q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@bp,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=phi i32[%N,%K],[%l,%h],[%J,%E]
ret i32%ai
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 1,label%ah
i32 0,label%K
i32 2,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@br,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 4
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=icmp eq i32%H,1
%J=select i1%I,i32 1,i32 2
br label%ah
K:
%L=getelementptr inbounds i8,i8*%i,i64 4
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=icmp ult i32%N,3
br i1%O,label%ah,label%P
P:
call void@sml_matchcomp_bug()
%Q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@br,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=phi i32[%N,%K],[%l,%h],[%J,%E]
ret i32%ai
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=icmp ult i32%a,3
br i1%h,label%A,label%i
i:
call void@sml_matchcomp_bug()
%j=load i8*,i8**@_SMLZ5Match,align 8
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%c,align 8
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@bt,i64 0,i32 2,i64 0),i8**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 60)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177336,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%t,i64 56
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=load i8*,i8**%c,align 8
%z=bitcast i8*%t to i8**
store i8*%y,i8**%z,align 8
call void@sml_raise(i8*inreg%t)#1
unreachable
A:
%B=sext i32%a to i64
%C=getelementptr inbounds[3x i32],[3x i32]*@ip,i64 0,i64%B
%D=load i32,i32*%C,align 4
ret i32%D
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_516(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 20
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%p,-1
%r=sub i32 0,%p
%s=and i32%q,%r
%t=shl i32%p,1
%u=add i32%t,-1
%v=add i32%u,%s
%w=and i32%v,%r
%x=add i32%p,7
%y=add i32%x,%w
%z=and i32%y,-8
%A=lshr i32%w,3
%B=lshr i32%s,3
%C=sub nsw i32%A,%B
%D=getelementptr inbounds i8,i8*%l,i64 16
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=shl i32%F,%C
%H=or i32%G,%F
%I=or i32%z,4
%J=bitcast i8*%l to i8**
%K=load i8*,i8**%J,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%f,align 8
%Q=icmp eq i32%F,0
br i1%Q,label%V,label%R
R:
%S=getelementptr inbounds i8,i8*%l,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
br label%ah
V:
%W=call i8*@sml_alloc(i32 inreg%p)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32%p,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%W,i8*%aa,i32%p,i1 false)
%ab=getelementptr inbounds i8,i8*%Z,i64 20
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=getelementptr inbounds i8,i8*%Z,i64 16
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
br label%ah
ah:
%ai=phi i32[%ag,%V],[%F,%R]
%aj=phi i32[%ad,%V],[%p,%R]
%ak=phi i8*[%W,%V],[%U,%R]
store i8*%ak,i8**%e,align 8
store i8*null,i8**%c,align 8
%al=call i8*@sml_alloc(i32 inreg%I)#0
%am=or i32%z,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%I,i1 false)
%ap=icmp eq i32%ai,0
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=sext i32%s to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%at,label%ax
at:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%aj,i1 false)
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=sext i32%w to i64
%aw=getelementptr inbounds i8,i8*%al,i64%av
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aw,i8*%au,i32%aj,i1 false)
br label%aD
ax:
%ay=bitcast i8*%as to i8**
store i8*%aq,i8**%ay,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=sext i32%w to i64
%aB=getelementptr inbounds i8,i8*%al,i64%aA
%aC=bitcast i8*%aB to i8**
store i8*%az,i8**%aC,align 8
br label%aD
aD:
%aE=sext i32%z to i64
%aF=getelementptr inbounds i8,i8*%al,i64%aE
%aG=bitcast i8*%aF to i32*
store i32%H,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=call fastcc i8*%N(i8*inreg%aH,i8*inreg%al)
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=icmp ne i32%aK,0
%aM=zext i1%aL to i32
ret i32%aM
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_513(i32 inreg%a,i32 inreg%b,i8*inreg%c,i8*inreg%d)unnamed_addr#2 gc"smlsharp"{
p:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%c,i8**%e,align 8
store i8*%d,i8**%f,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%d,%p]
%q=shl i32%a,1
%r=or i32%q,1
%s=add i32%b,-1
%t=sub i32 0,%b
%u=and i32%s,%t
%v=add i32%b,7
%w=add i32%v,%u
%x=and i32%w,-8
%y=add i32%x,15
%z=and i32%y,-8
%A=lshr i32%w,3
%B=lshr i32%u,3
%C=sub nsw i32%A,%B
%D=shl i32 1,%C
%E=or i32%D,%a
%F=or i32%z,4
%G=icmp eq i8*%o,null
br i1%G,label%H,label%I
H:
ret i8*null
I:
%J=icmp eq i32%a,0
br i1%J,label%P,label%K
K:
%L=sext i32%u to i64
%M=getelementptr inbounds i8,i8*%o,i64%L
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
br label%W
P:
%Q=call i8*@sml_alloc(i32 inreg%b)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32%b,i32*%S,align 4
%T=load i8*,i8**%f,align 8
%U=sext i32%u to i64
%V=getelementptr inbounds i8,i8*%T,i64%U
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%Q,i8*%V,i32%b,i1 false)
br label%W
W:
%X=phi i8*[%T,%P],[%o,%K]
%Y=phi i8*[%Q,%P],[%O,%K]
store i8*%Y,i8**%g,align 8
%Z=sext i32%x to i64
%aa=getelementptr inbounds i8,i8*%X,i64%Z
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%f,align 8
%ad=call fastcc i8*@_SMLFN4List6filterE(i32 inreg%a,i32 inreg%b)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%h,align 8
%aj=call i8*@sml_alloc(i32 inreg 28)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
store i8*%aj,i8**%i,align 8
%am=load i8*,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%g,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
br i1%J,label%aq,label%ar
aq:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ap,i8*%ao,i32%b,i1 false)
br label%at
ar:
%as=bitcast i8*%ap to i8**
store i8*%ao,i8**%as,align 8
br label%at
at:
%au=getelementptr inbounds i8,i8*%aj,i64 16
%av=bitcast i8*%au to i32*
store i32%a,i32*%av,align 4
%aw=getelementptr inbounds i8,i8*%aj,i64 20
%ax=bitcast i8*%aw to i32*
store i32%b,i32*%ax,align 4
%ay=getelementptr inbounds i8,i8*%aj,i64 24
%az=bitcast i8*%ay to i32*
store i32%r,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
%aD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_516 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1492 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 1,i32*%aK,align 4
%aL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aM=call fastcc i8*%ag(i8*inreg%aL,i8*inreg%aA)
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8*(i8*,i8*)**
%aP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aO,align 8
%aQ=bitcast i8*%aM to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=call fastcc i8*%aP(i8*inreg%aR,i8*inreg%aS)
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_513(i32 inreg%a,i32 inreg%b,i8*inreg%aU,i8*inreg%aT)
store i8*%aV,i8**%e,align 8
%aW=call i8*@sml_alloc(i32 inreg%F)#0
%aX=or i32%z,1342177280
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32%aX,i32*%aZ,align 4
call void@llvm.memset.p0i8.i32(i8*%aW,i8 0,i32%F,i1 false)
%a0=load i8*,i8**%g,align 8
%a1=sext i32%u to i64
%a2=getelementptr inbounds i8,i8*%aW,i64%a1
br i1%J,label%a3,label%a4
a3:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a2,i8*%a0,i32%b,i1 false)
br label%a6
a4:
%a5=bitcast i8*%a2 to i8**
store i8*%a0,i8**%a5,align 8
br label%a6
a6:
%a7=load i8*,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%aW,i64%Z
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=sext i32%z to i64
%bb=getelementptr inbounds i8,i8*%aW,i64%ba
%bc=bitcast i8*%bb to i32*
store i32%E,i32*%bc,align 4
ret i8*%aW
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 2,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 3,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 10,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE(i8 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
%f=getelementptr inbounds i8,i8*%b,i64 5
tail call void@llvm.memset.p0i8.i32(i8*%f,i8 0,i32 3,i1 false)
store i32 1,i32*%c,align 4
%g=getelementptr inbounds i8,i8*%b,i64 4
store i8%a,i8*%g,align 1
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 0,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 8,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE(i64 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 20)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177296,i32*%e,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32 0,i32*%g,align 1
store i32 6,i32*%c,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i64*
store i64%a,i64*%i,align 4
%j=getelementptr inbounds i8,i8*%b,i64 16
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E(i32 inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 12)#0
%c=bitcast i8*%b to i32*
%d=getelementptr inbounds i8,i8*%b,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
store i32 7,i32*%c,align 4
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
store i32%a,i32*%g,align 4
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i32*
store i32 0,i32*%i,align 4
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 9,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 5,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 2,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 3,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 10,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=load i8,i8*%a,align 1
%f=tail call i8*@sml_alloc(i32 inreg 12)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 5
tail call void@llvm.memset.p0i8.i32(i8*%j,i8 0,i32 3,i1 false)
store i32 1,i32*%g,align 4
%k=getelementptr inbounds i8,i8*%f,i64 4
store i8%e,i8*%k,align 1
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%f
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 0,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32%f,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 8,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=tail call i8*@sml_alloc(i32 inreg 20)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32 6,i32*%h,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to double*
store double%f,double*%n,align 8
%o=getelementptr inbounds i8,i8*%g,i64 16
%p=bitcast i8*%o to i32*
store i32 0,i32*%p,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i32 7,i32*%h,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to float*
store float%f,float*%l,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 9,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=icmp eq i8*%a,null
br i1%c,label%d,label%e
d:
ret i8*null
e:
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32 5,i32*%i,align 4
%n=load i8*,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=add nsw i32%n,%l
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%X,label%o
o:
%p=bitcast i8*%m to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%j,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%X,label%v
v:
%w=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=bitcast i8*%t to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*%z(i8*inreg%O,i8*inreg%E)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
%T=load i8*,i8**%b,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
ret i8*%Q
X:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=add i32%n,%l
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to double*
%l=load double,double*%k,align 8
%m=bitcast i8*%h to double*
%n=load double,double*%m,align 8
%o=fadd double%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=bitcast i8*%p to double*
store double%o,double*%s,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%p
v:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to float*
%l=load float,float*%k,align 4
%m=bitcast i8*%h to float*
%n=load float,float*%m,align 4
%o=fadd float%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to float*
store float%o,float*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=sub nsw i32%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%X,label%o
o:
%p=bitcast i8*%m to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%j,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%X,label%v
v:
%w=load i8*,i8**@_SMLZN6IntInf1_ME,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=bitcast i8*%t to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*%z(i8*inreg%O,i8*inreg%E)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
%T=load i8*,i8**%b,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
ret i8*%Q
X:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=sub i32%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to double*
%l=load double,double*%k,align 8
%m=bitcast i8*%h to double*
%n=load double,double*%m,align 8
%o=fsub double%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=bitcast i8*%p to double*
store double%o,double*%s,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%p
v:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to float*
%l=load float,float*%k,align 4
%m=bitcast i8*%h to float*
%n=load float,float*%m,align 4
%o=fsub float%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to float*
store float%o,float*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_ME(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=mul nsw i32%n,%l
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%X,label%o
o:
%p=bitcast i8*%m to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%j,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%X,label%v
v:
%w=load i8*,i8**@_SMLZN6IntInf1_JE,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=bitcast i8*%t to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*%z(i8*inreg%O,i8*inreg%E)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
%T=load i8*,i8**%b,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
ret i8*%Q
X:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=mul i32%n,%l
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32%o,i32*%q,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to double*
%l=load double,double*%k,align 8
%m=bitcast i8*%h to double*
%n=load double,double*%m,align 8
%o=fmul double%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=bitcast i8*%p to double*
store double%o,double*%s,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%p
v:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to float*
%l=load float,float*%k,align 4
%m=bitcast i8*%h to float*
%n=load float,float*%m,align 4
%o=fmul float%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to float*
store float%o,float*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_JE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=icmp eq i8*%e,null
br i1%f,label%aq,label%g
g:
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%aq,label%n
n:
%o=bitcast i8*%l to i32*
%p=load i32,i32*%o,align 4
%q=icmp eq i32%p,0
br i1%q,label%Y,label%r
r:
%s=xor i32%i,-2147483648
%t=add i32%p,1
%u=or i32%t,%s
%v=icmp eq i32%u,0
br i1%v,label%G,label%w
w:
%x=sdiv i32%i,%p
%y=call i8*@sml_alloc(i32 inreg 12)#0
%z=bitcast i8*%y to i32*
%A=getelementptr inbounds i8,i8*%y,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%y,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
store i32%x,i32*%z,align 4
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 4
ret i8*%y
G:
%H=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%c,align 8
%L=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@b7,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 60)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177336,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%R,i64 56
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=load i8*,i8**%c,align 8
%X=bitcast i8*%R to i8**
store i8*%W,i8**%X,align 8
call void@sml_raise(i8*inreg%R)#1
unreachable
Y:
%Z=load i8*,i8**@_SMLZ3Div,align 8
store i8*%Z,i8**%b,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
store i8*%aa,i8**%c,align 8
%ad=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@b7,i64 0,i32 2,i64 0),i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 60)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177336,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%aj,i64 56
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=load i8*,i8**%c,align 8
%ap=bitcast i8*%aj to i8**
store i8*%ao,i8**%ap,align 8
call void@sml_raise(i8*inreg%aj)#1
unreachable
aq:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6IntInf4quotE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=icmp eq i8*%e,null
br i1%f,label%T,label%g
g:
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%T,label%n
n:
%o=bitcast i8*%l to i32*
%p=load i32,i32*%o,align 4
%q=icmp eq i32%p,0
br i1%q,label%B,label%r
r:
%s=udiv i32%i,%p
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
store i32%s,i32*%u,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
ret i8*%t
B:
%C=load i8*,i8**@_SMLZ3Div,align 8
store i8*%C,i8**%b,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%c,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@ca,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 60)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177336,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%M,i64 56
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%M to i8**
store i8*%R,i8**%S,align 8
call void@sml_raise(i8*inreg%M)#1
unreachable
T:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to double*
%l=load double,double*%k,align 8
%m=bitcast i8*%h to double*
%n=load double,double*%m,align 8
%o=fdiv double%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=bitcast i8*%p to double*
store double%o,double*%s,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%p
v:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%x,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%x,label%j
j:
%k=bitcast i8*%c to float*
%l=load float,float*%k,align 4
%m=bitcast i8*%h to float*
%n=load float,float*%m,align 4
%o=fdiv float%l,%n
%p=tail call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=bitcast i8*%p to float*
store float%o,float*%u,align 4
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 4
ret i8*%p
x:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc double@_SMLFN17SMLSharp__SQL__Prim8mod__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=fdiv double%k,%n
%p=bitcast double%o to i64
%q=call fastcc double@_SMLFN6Real647realModE(i64 inreg%p)
%r=fmul double%n,%q
ret double%r
}
define fastcc float@_SMLFN17SMLSharp__SQL__Prim10mod__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=fdiv float%k,%n
%p=bitcast float%o to i32
%q=call fastcc float@_SMLFN6Real327realModE(i32 inreg%p)
%r=fmul float%n,%q
ret float%r
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=icmp eq i8*%e,null
br i1%f,label%U,label%g
g:
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%U,label%n
n:
%o=bitcast i8*%l to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 0,label%s
i32 -1,label%K
]
q:
%r=srem i32%i,%p
br label%K
s:
%t=load i8*,i8**@_SMLZ3Div,align 8
store i8*%t,i8**%b,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%c,align 8
%x=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@ch,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=phi i32[%r,%q],[0,%n]
%M=call i8*@sml_alloc(i32 inreg 12)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%M,i64 4
%R=bitcast i8*%Q to i32*
store i32 0,i32*%R,align 1
store i32%L,i32*%N,align 4
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
ret i8*%M
U:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6IntInf3remE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=icmp eq i8*%e,null
br i1%f,label%T,label%g
g:
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%T,label%n
n:
%o=bitcast i8*%l to i32*
%p=load i32,i32*%o,align 4
%q=icmp eq i32%p,0
br i1%q,label%B,label%r
r:
%s=urem i32%i,%p
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=bitcast i8*%t to i32*
%v=getelementptr inbounds i8,i8*%t,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%t,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
store i32%s,i32*%u,align 4
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
ret i8*%t
B:
%C=load i8*,i8**@_SMLZ3Div,align 8
store i8*%C,i8**%b,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%c,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@ck,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 60)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177336,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%M,i64 56
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%M to i8**
store i8*%R,i8**%S,align 8
call void@sml_raise(i8*inreg%M)#1
unreachable
T:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%G,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%G,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=fdiv double%t,%v
%x=bitcast double%w to i64
%y=call fastcc double@_SMLFN6Real647realModE(i64 inreg%x)
%z=fmul double%v,%y
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
%D=bitcast i8*%A to double*
store double%z,double*%D,align 8
%E=getelementptr inbounds i8,i8*%A,i64 8
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 4
ret i8*%A
G:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%I,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%I,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=fdiv float%t,%v
%x=bitcast float%w to i32
%y=call fastcc float@_SMLFN6Real327realModE(i32 inreg%x)
%z=fmul float%v,%y
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 1
%F=bitcast i8*%A to float*
store float%z,float*%F,align 4
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 4
ret i8*%A
I:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric3remE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=icmp eq i8*%a,null
br i1%d,label%e,label%f
e:
ret i8*null
f:
%g=bitcast i8*%a to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,-2147483648
br i1%i,label%t,label%j
j:
%k=sub nsw i32 0,%h
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=bitcast i8*%l to i32*
%n=getelementptr inbounds i8,i8*%l,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%l,i64 4
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 1
store i32%k,i32*%m,align 4
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
ret i8*%l
t:
%u=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%u,i8**%b,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@cp,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6IntInf1_eE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=sub i32 0,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
store i32%g,i32*%i,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=fsub double 0.000000e+00,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=bitcast i8*%h to double*
store double%g,double*%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=fsub float 0.000000e+00,%f
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to float*
store float%g,float*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_eE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8abs__wordE(i32 inreg%a)#4 gc"smlsharp"{
ret i32%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=icmp eq i8*%a,null
br i1%d,label%e,label%f
e:
ret i8*null
f:
%g=bitcast i8*%a to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,-2147483648
br i1%i,label%v,label%j
j:
%k=icmp slt i32%h,0
%l=sub nsw i32 0,%h
%m=select i1%k,i32%l,i32%h
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=bitcast i8*%n to i32*
%p=getelementptr inbounds i8,i8*%n,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%n,i64 4
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
store i32%m,i32*%o,align 4
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 4
ret i8*%n
v:
%w=load i8*,i8**@_SMLZ8Overflow,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@cx,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6IntInf3absE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=tail call i8*@sml_alloc(i32 inreg 12)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32%f,i32*%h,align 4
%m=getelementptr inbounds i8,i8*%g,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to double*
%f=load double,double*%e,align 8
%g=tail call double@llvm.fabs.f64(double%f)#0
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=bitcast i8*%h to double*
store double%g,double*%k,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp eq i8*%a,null
br i1%b,label%c,label%d
c:
ret i8*null
d:
%e=bitcast i8*%a to float*
%f=load float,float*%e,align 4
%g=tail call float@llvm.fabs.f32(float%f)#0
%h=tail call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to float*
store float%g,float*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric3absE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6lt__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp eq i32%k,2
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10lt__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp eq i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp eq i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp eq i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp eq i32%B,2
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp eq i32%s,2
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp eq i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp eq i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp eq i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp eq i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp eq i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6gt__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp eq i32%k,1
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10gt__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp eq i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp eq i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp eq i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp eq i32%B,1
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp eq i32%s,1
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp eq i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp eq i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp eq i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp eq i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp eq i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6le__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp ne i32%k,1
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10le__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,1
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp ne i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp ne i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp ne i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp ne i32%B,1
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp ne i32%s,1
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp ne i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp ne i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp ne i32%E,1
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp ne i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp ne i32%H,1
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6ge__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp ne i32%k,2
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10ge__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,2
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp ne i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp ne i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp ne i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp ne i32%B,2
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp ne i32%s,2
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp ne i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp ne i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp ne i32%E,2
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp ne i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp ne i32%H,2
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim6eq__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp eq i32%k,0
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10eq__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp eq i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp eq i32%B,0
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp eq i32%s,0
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp eq i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim7neq__intE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__wordE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__charE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__boolE(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=icmp eq i32%c,0
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%g,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%d,i32%j,i32%i
%l=icmp ne i32%k,0
%m=zext i1%l to i32
ret i32%m
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6String7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__realE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__real32E(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11neq__numericE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%h)
%k=icmp ne i32%j,0
%l=zext i1%k to i32
ret i32%l
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp ne i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp ne i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to i32*
%t=load i32,i32*%s,align 4
%u=bitcast i8*%p to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%t,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp ne i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%E,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%E,label%r
r:
%s=load i8,i8*%k,align 1
%t=load i8,i8*%p,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%s,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp ne i32%B,0
%D=zext i1%C to i32
br label%E
E:
%F=phi i32[%D,%r],[2,%m],[2,%g]
ret i32%F
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
x:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%v,label%e
e:
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
%i=icmp eq i8*%h,null
br i1%i,label%v,label%j
j:
%k=bitcast i8*%c to i32*
%l=load i32,i32*%k,align 4
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%l,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp ne i32%s,0
%u=zext i1%t to i32
br label%v
v:
%w=phi i32[%u,%j],[2,%e],[2,%x]
ret i32%w
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp ne i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to double*
%t=load double,double*%s,align 8
%u=bitcast i8*%p to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%t,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp ne i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%H,label%m
m:
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%H,label%r
r:
%s=bitcast i8*%k to float*
%t=load float,float*%s,align 4
%u=bitcast i8*%p to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%t,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp ne i32%E,0
%G=zext i1%F to i32
br label%H
H:
%I=phi i32[%G,%r],[2,%m],[2,%g]
ret i32%I
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp ne i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%K,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%K,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp ne i32%H,0
%J=zext i1%I to i32
br label%K
K:
%L=phi i32[%J,%u],[2,%n],[2,%h]
ret i32%L
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%P,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%P,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%x)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
P:
ret i8*null
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim10matchLike3E_896(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*@_SMLFN9Substring4fullE(i8*inreg%l)
store i8*%m,i8**%c,align 8
%n=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%o=call fastcc i8*@_SMLFN9Substring4fullE(i8*inreg%n)
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%b,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
store i8*%z,i8**%b,align 8
br label%I
I:
%J=load atomic i32,i32*@sml_check_flag unordered,align 4
%K=icmp eq i32%J,0
br i1%K,label%M,label%L
L:
call void@sml_check(i32 inreg%J)
br label%M
M:
%N=load i8*,i8**%b,align 8
%O=icmp eq i8*%N,null
br i1%O,label%cF,label%P
P:
%Q=bitcast i8*%N to i8**
%R=load i8*,i8**%Q,align 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%R,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%N,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%b,align 8
%aa=call fastcc i8*@_SMLFN9Substring4getcE(i8*inreg%T)
store i8*%aa,i8**%e,align 8
%ab=load i8*,i8**%d,align 8
%ac=call fastcc i8*@_SMLFN9Substring4getcE(i8*inreg%ab)
%ad=load i8*,i8**%e,align 8
%ae=icmp eq i8*%ad,null
br i1%ae,label%af,label%ah
af:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%ag=icmp eq i8*%ac,null
br i1%ag,label%cF,label%ar
ah:
store i8*null,i8**%e,align 8
%ai=bitcast i8*%ad to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8,i8*%aj,align 1
switch i8%ak,label%al[
i8 37,label%bv
i8 95,label%aZ
]
al:
store i8*null,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%aj,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%c,align 8
%ap=icmp eq i8*%ac,null
br i1%ap,label%aq,label%as
aq:
store i8*null,i8**%c,align 8
br label%ar
ar:
br label%I
as:
%at=bitcast i8*%ac to i8**
%au=load i8*,i8**%at,align 8
%av=load i8,i8*%au,align 1
%aw=getelementptr inbounds i8,i8*%au,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%d,align 8
%az=icmp eq i8%ak,%av
br i1%az,label%aA,label%aV
aA:
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
br label%aX
aV:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%aW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
br label%aX
aX:
%aY=phi i8*[%aL,%aA],[%aW,%aV]
store i8*%aY,i8**%b,align 8
br label%ar
aZ:
store i8*null,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aj,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%c,align 8
%a3=icmp eq i8*%ac,null
br i1%a3,label%a4,label%a5
a4:
store i8*null,i8**%c,align 8
br label%ar
a5:
%a6=bitcast i8*%ac to i8**
%a7=load i8*,i8**%a6,align 8
%a8=getelementptr inbounds i8,i8*%a7,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%d,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%e,align 8
%be=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
%bo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%b,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bl,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
store i8*%bl,i8**%b,align 8
br label%ar
bv:
%bw=getelementptr inbounds i8,i8*%aj,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%e,align 8
%bz=icmp eq i8*%ac,null
br i1%bz,label%bA,label%bV
bA:
store i8*null,i8**%c,align 8
%bB=call i8*@sml_alloc(i32 inreg 20)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177296,i32*%bD,align 4
store i8*%bB,i8**%c,align 8
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=bitcast i8*%bB to i8**
store i8*%bE,i8**%bF,align 8
%bG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bH=getelementptr inbounds i8,i8*%bB,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bB,i64 16
%bK=bitcast i8*%bJ to i32*
store i32 3,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
%bO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%b,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bL,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
store i8*%bL,i8**%b,align 8
br label%ar
bV:
%bW=bitcast i8*%ac to i8**
%bX=load i8*,i8**%bW,align 8
%bY=getelementptr inbounds i8,i8*%bX,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%f,align 8
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
store i8*%b1,i8**%g,align 8
%b4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call i8*@sml_alloc(i32 inreg 20)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177296,i32*%cd,align 4
store i8*%cb,i8**%d,align 8
%ce=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cb,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=call i8*@sml_alloc(i32 inreg 20)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177296,i32*%cn,align 4
store i8*%cl,i8**%c,align 8
%co=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cp=bitcast i8*%cl to i8**
store i8*%co,i8**%cp,align 8
%cq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cr=getelementptr inbounds i8,i8*%cl,i64 8
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%cl,i64 16
%cu=bitcast i8*%ct to i32*
store i32 3,i32*%cu,align 4
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
store i8*%cv,i8**%b,align 8
br label%ar
cF:
%cG=phi i32[0,%M],[1,%af]
ret i32%cG
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim11like__stringE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim10matchLike3E_896(i8*inreg%h)
ret i32%j
}
define fastcc i32@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%I,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%I,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim10matchLike3E_896(i8*inreg%x)
ret i32%H
I:
ret i32 2
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%P,label%m
m:
%n=bitcast i8*%k to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%h,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%P,label%t
t:
%u=bitcast i8*%r to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%o,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
br i1%F,label%P,label%G
G:
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=bitcast i8*%H to i32*
%J=getelementptr inbounds i8,i8*%H,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%H,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
store i32%o,i32*%I,align 4
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 4
ret i8*%H
P:
%Q=phi i8*[null,%t],[null,%g],[%k,%m]
ret i8*%Q
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%R,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%R,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
br i1%I,label%R,label%J
J:
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
%N=load i8*,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
ret i8*%K
R:
%S=phi i8*[null,%u],[null,%h],[%l,%n]
ret i8*%S
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%P,label%m
m:
%n=bitcast i8*%k to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%h,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%P,label%t
t:
%u=bitcast i8*%r to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i32%o,i32*%x,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32%v,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
br i1%F,label%P,label%G
G:
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=bitcast i8*%H to i32*
%J=getelementptr inbounds i8,i8*%H,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%H,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
store i32%o,i32*%I,align 4
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 4
ret i8*%H
P:
%Q=phi i8*[null,%t],[null,%g],[%k,%m]
ret i8*%Q
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%K,label%m
m:
%n=load i8,i8*%k,align 1
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp eq i8*%q,null
br i1%r,label%K,label%s
s:
%t=load i8,i8*%q,align 1
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%u,i64 2
call void@llvm.memset.p0i8.i32(i8*%x,i8 0,i32 6,i1 false)
store i8%n,i8*%u,align 1
%y=getelementptr inbounds i8,i8*%u,i64 1
store i8%t,i8*%y,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 4
%B=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%u)
%C=icmp eq i32%B,0
br i1%C,label%K,label%D
D:
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 1
call void@llvm.memset.p0i8.i32(i8*%H,i8 0,i32 7,i1 false)
store i8%n,i8*%E,align 1
%I=getelementptr inbounds i8,i8*%E,i64 8
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 4
ret i8*%E
K:
%L=phi i8*[null,%s],[null,%g],[%k,%m]
ret i8*%L
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE(i8*inreg%a)#4 gc"smlsharp"{
F:
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
%d=icmp eq i8*%c,null
br i1%d,label%D,label%e
e:
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
%k=icmp eq i8*%j,null
br i1%k,label%D,label%l
l:
%m=bitcast i8*%j to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%g,0
%p=icmp eq i32%n,0
%q=zext i1%p to i32
%r=select i1%p,i32 0,i32 2
%s=select i1%o,i32%r,i32%q
%t=icmp eq i32%s,0
br i1%t,label%D,label%u
u:
%v=tail call i8*@sml_alloc(i32 inreg 12)#0
%w=bitcast i8*%v to i32*
%x=getelementptr inbounds i8,i8*%v,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%v,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
store i32%g,i32*%w,align 4
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i32*
store i32 0,i32*%C,align 4
ret i8*%v
D:
%E=phi i8*[null,%l],[null,%F],[%c,%e]
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%R,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%R,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN6String7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
br i1%I,label%R,label%J
J:
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
%N=load i8*,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
ret i8*%K
R:
%S=phi i8*[null,%u],[null,%h],[%l,%n]
ret i8*%S
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%N,label%m
m:
%n=bitcast i8*%k to double*
%o=load double,double*%n,align 8
%p=getelementptr inbounds i8,i8*%h,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%N,label%t
t:
%u=bitcast i8*%r to double*
%v=load double,double*%u,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=bitcast i8*%w to double*
store double%o,double*%z,align 8
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to double*
store double%v,double*%B,align 8
%C=getelementptr inbounds i8,i8*%w,i64 16
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%w)
%F=icmp eq i32%E,0
br i1%F,label%N,label%G
G:
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177288,i32*%J,align 4
%K=bitcast i8*%H to double*
store double%o,double*%K,align 8
%L=getelementptr inbounds i8,i8*%H,i64 8
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 4
ret i8*%H
N:
%O=phi i8*[null,%t],[null,%g],[%k,%m]
ret i8*%O
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i8**
%k=load i8*,i8**%j,align 8
%l=icmp eq i8*%k,null
br i1%l,label%P,label%m
m:
%n=bitcast i8*%k to float*
%o=load float,float*%n,align 4
%p=getelementptr inbounds i8,i8*%h,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
br i1%s,label%P,label%t
t:
%u=bitcast i8*%r to float*
%v=load float,float*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=bitcast i8*%w to float*
store float%o,float*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to float*
store float%v,float*%B,align 4
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 4
%E=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%w)
%F=icmp eq i32%E,0
br i1%F,label%P,label%G
G:
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177288,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
%M=bitcast i8*%H to float*
store float%o,float*%M,align 4
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 4
ret i8*%H
P:
%Q=phi i8*[null,%t],[null,%g],[%k,%m]
ret i8*%Q
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%R,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%R,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
br i1%I,label%R,label%J
J:
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
%N=load i8*,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
ret i8*%K
R:
%S=phi i8*[null,%u],[null,%h],[%l,%n]
ret i8*%S
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%R,label%n
n:
%o=bitcast i8*%l to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%i,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%R,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%x)
%I=icmp eq i32%H,0
br i1%I,label%R,label%J
J:
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
%N=load i8*,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
ret i8*%K
R:
%S=phi i8*[null,%u],[null,%h],[%l,%n]
ret i8*%S
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_922(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_924(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 12
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=add i32%n,-1
%p=sub i32 0,%n
%q=and i32%o,%p
%r=add i32%n,7
%s=add i32%r,%q
%t=and i32%s,-8
%u=getelementptr inbounds i8,i8*%j,i64 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=icmp eq i32%w,0
br i1%x,label%F,label%y
y:
%z=bitcast i8*%j to i8**
%A=load i8*,i8**%c,align 8
%B=sext i32%q to i64
%C=getelementptr inbounds i8,i8*%A,i64%B
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
br label%O
F:
%G=call i8*@sml_alloc(i32 inreg%n)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32%n,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=sext i32%q to i64
%L=getelementptr inbounds i8,i8*%J,i64%K
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%G,i8*%L,i32%n,i1 false)
%M=bitcast i8**%d to i8***
%N=load i8**,i8***%M,align 8
br label%O
O:
%P=phi i8**[%z,%y],[%N,%F]
%Q=phi i8*[%A,%y],[%J,%F]
%R=phi i8*[%E,%y],[%G,%F]
%S=sext i32%t to i64
%T=getelementptr inbounds i8,i8*%Q,i64%S
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%c,align 8
%W=load i8*,i8**%P,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8**%P to i8***
%ab=load i8**,i8***%aa,align 8
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%Z(i8*inreg%ac,i8*inreg%R)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%c,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%ae)
ret i8*%ao
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg%a,i32 inreg%b,i8*inreg%c,i8*inreg%d)unnamed_addr#2 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%c,i8**%e,align 8
store i8*%d,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%a,i32 inreg%b)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%p(i8*inreg%r,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eN,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%z=call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
store i8*%z,i8**%f,align 8
%A=icmp eq i8*%z,null
br i1%A,label%B,label%C
B:
ret i8*null
C:
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg%a,i32 inreg%b,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%h,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i32*
store i32%a,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%J,i64 12
%R=bitcast i8*%Q to i32*
store i32%b,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%J,i64 16
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_924 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_924 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=call fastcc i8*%G(i8*inreg%af,i8*inreg%U)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%e,align 8
%am=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%an=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ao=call fastcc i8*%aj(i8*inreg%an,i8*inreg%am)
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8*(i8*,i8*)**
%ar=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aq,align 8
%as=bitcast i8*%ao to i8**
%at=load i8*,i8**%as,align 8
%au=load i8*,i8**%f,align 8
%av=call fastcc i8*%ar(i8*inreg%at,i8*inreg%au)
store i8*%av,i8**%e,align 8
%aw=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%a,i32 inreg%b)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aD=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aC)
%aE=bitcast i8*%aD to i32*
%aF=load i32,i32*%aE,align 4
%aG=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%aF)
store i8*%aG,i8**%f,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%aH)
store i8*%aR,i8**%e,align 8
%aS=call i8*@sml_alloc(i32 inreg 12)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177288,i32*%aU,align 4
%aV=load i8*,i8**%e,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to i32*
store i32 1,i32*%aY,align 4
ret i8*%aS
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_927(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%l)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%q)
ret i8*%A
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7avg__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eO,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 0,i32 inreg 4)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_931(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%l)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%q)
ret i8*%A
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eQ,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_935(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%l)
%q=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%p)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%r)
ret i8*%B
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eS,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 0,i32 inreg 4)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_939(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i64*
%l=load i64,i64*%k,align 4
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%l)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%q)
ret i8*%A
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eU,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 0,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_943(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to float*
%l=load float,float*%k,align 4
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=fpext float%l to double
%q=bitcast double%p to i64
%r=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%q)
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%s)
ret i8*%C
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eW,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 0,i32 inreg 4)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_947(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric1_KE(i8*inreg%p)
ret i8*%z
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@eY,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%w(i8*inreg%A,i8*inreg%z)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%S)
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric4quotE(i8*inreg%U)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=load i8*,i8**%b,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
ret i8*%af
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric7fromIntE,align 8
%k=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 0,i32 inreg 4,i8*inreg%j,i8*inreg%h)
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric12fromLargeIntE,align 8
%k=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 1,i32 inreg 8,i8*inreg%j,i8*inreg%h)
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_955(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=tail call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%g=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%f)
ret i8*%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 0,i32 inreg 4,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e2,i64 0,i32 2)to i8*),i8*inreg%h)
ret i8*%j
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric13fromLargeRealE,align 8
%k=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 0,i32 inreg 8,i8*inreg%j,i8*inreg%h)
ret i8*%k
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_961(i32 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=bitcast i32%a to float
%g=fpext float%f to double
%h=bitcast double%g to i64
%i=tail call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%h)
ret i8*%i
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 0,i32 inreg 4,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e5,i64 0,i32 2)to i8*),i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_965(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_925(i32 inreg 1,i32 inreg 8,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e7,i64 0,i32 2)to i8*),i8*inreg%h)
ret i8*%j
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_969(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add nsw i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sum__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e9,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32%N,i32*%P,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%c,align 8
%A=call i8*@sml_save()#0
%B=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@fn,i64 0,i64 0))#0
call void@sml_unsave()#0
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=call fastcc i8*%x(i8*inreg%C,i8*inreg%B)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%b,align 8
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
%O=load i8*,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
ret i8*%L
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_976(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,%c
ret i32%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fc,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32%N,i32*%P,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_980(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fadd double%c,%f
ret double%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fe,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 8)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 8,i32*%B,align 4
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to double*
%N=load double,double*%M,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
%R=bitcast i8*%O to double*
store double%N,double*%R,align 8
%S=getelementptr inbounds i8,i8*%O,i64 8
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 4
ret i8*%O
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_984(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fadd float%c,%f
ret float%g
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fg,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 4)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 4,i32*%C,align 4
store i32 0,i32*%A,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=call fastcc i8*%w(i8*inreg%D,i8*inreg%z)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
%M=bitcast i8*%L to float*
%N=load float,float*%M,align 4
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%O,i64 4
%S=bitcast i8*%R to i32*
store i32 0,i32*%S,align 1
%T=bitcast i8*%O to float*
store float%N,float*%T,align 4
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%O
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
store i8*%h,i8**%c,align 8
%i=load i8*,i8**%b,align 8
%j=icmp eq i8*%i,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_KE,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=call fastcc i8*%D(i8*inreg%F,i8*inreg%G)
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=load i8*,i8**%b,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
ret i8*%I
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_990(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add nsw i32%f,%c
ret i32%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_992(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fk,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%b,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*%B(i8*inreg%D,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fj,i64 0,i32 2)to i8*))
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 4)#0
%L=bitcast i8*%K to i32*
%M=getelementptr inbounds i8,i8*%K,i64 -4
%N=bitcast i8*%M to i32*
store i32 4,i32*%N,align 4
store i32 0,i32*%L,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*%H(i8*inreg%O,i8*inreg%K)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
%X=bitcast i8*%W to i32*
%Y=load i32,i32*%X,align 4
%Z=call i8*@sml_alloc(i32 inreg 12)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177288,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32%Y,i32*%aa,align 4
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_996(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fm,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%b,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**@_SMLZN6IntInf1_KE,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=call i8*@sml_save()#0
%M=call i8*@sml_load_intinf(i8*inreg getelementptr inbounds([2x i8],[2x i8]*@fn,i64 0,i64 0))#0
call void@sml_unsave()#0
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=call fastcc i8*%I(i8*inreg%N,i8*inreg%M)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
store i8*%V,i8**%b,align 8
%W=call i8*@sml_alloc(i32 inreg 12)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177288,i32*%Y,align 4
%Z=load i8*,i8**%b,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
ret i8*%W
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1001(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,%c
ret i32%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1003(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fq,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%b,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*%B(i8*inreg%D,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fp,i64 0,i32 2)to i8*))
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 4)#0
%L=bitcast i8*%K to i32*
%M=getelementptr inbounds i8,i8*%K,i64 -4
%N=bitcast i8*%M to i32*
store i32 4,i32*%N,align 4
store i32 0,i32*%L,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*%H(i8*inreg%O,i8*inreg%K)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
%X=bitcast i8*%W to i32*
%Y=load i32,i32*%X,align 4
%Z=call i8*@sml_alloc(i32 inreg 12)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177288,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32%Y,i32*%aa,align 4
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
ret i8*%Z
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1007(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to double*
%c=load double,double*%b,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to double*
%f=load double,double*%e,align 8
%g=fadd double%c,%f
ret double%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1009(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ft,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%b,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*%B(i8*inreg%D,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fs,i64 0,i32 2)to i8*))
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 8)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 8,i32*%M,align 4
%N=bitcast i8*%K to i64*
store i64 0,i64*%N,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*%H(i8*inreg%O,i8*inreg%K)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
%X=bitcast i8*%W to double*
%Y=load double,double*%X,align 8
%Z=call i8*@sml_alloc(i32 inreg 12)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177288,i32*%ab,align 4
%ac=bitcast i8*%Z to double*
store double%Y,double*%ac,align 8
%ad=getelementptr inbounds i8,i8*%Z,i64 8
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 4
ret i8*%Z
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1013(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to float*
%c=load float,float*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to float*
%f=load float,float*%e,align 4
%g=fadd float%c,%f
ret float%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1015(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fw,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%b,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*%B(i8*inreg%D,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fv,i64 0,i32 2)to i8*))
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 4)#0
%L=bitcast i8*%K to i32*
%M=getelementptr inbounds i8,i8*%K,i64 -4
%N=bitcast i8*%M to i32*
store i32 4,i32*%N,align 4
store i32 0,i32*%L,align 4
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=call fastcc i8*%H(i8*inreg%O,i8*inreg%K)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
%X=bitcast i8*%W to float*
%Y=load float,float*%X,align 4
%Z=call i8*@sml_alloc(i32 inreg 12)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177288,i32*%ab,align 4
%ac=getelementptr inbounds i8,i8*%Z,i64 4
%ad=bitcast i8*%ac to i32*
store i32 0,i32*%ad,align 1
%ae=bitcast i8*%Z to float*
store float%Y,float*%ae,align 4
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1019(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg 0)
store i8*%h,i8**%c,align 8
%i=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fy,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%b,align 8
%w=icmp eq i8*%v,null
br i1%w,label%x,label%y
x:
ret i8*null
y:
%z=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**@_SMLZN20SMLSharp__SQL__Numeric1_KE,align 8
%G=call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%U=call fastcc i8*%Q(i8*inreg%S,i8*inreg%T)
store i8*%U,i8**%b,align 8
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
%Y=load i8*,i8**%b,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
ret i8*%V
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1023(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7max__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fA,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1027(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fC,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1031(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fE,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1035(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=load i8,i8*%h,align 1
%k=getelementptr inbounds i8,i8*%h,i64 1
%l=load i8,i8*%k,align 1
%m=call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%m,i64 2
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32 6,i1 false)
store i8%j,i8*%m,align 1
%q=getelementptr inbounds i8,i8*%m,i64 1
store i8%l,i8*%q,align 1
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
%t=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%m)
%u=icmp eq i32%t,1
%v=select i1%u,i8%j,i8%l
ret i8%v
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__charE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=load i8,i8*%i,align 1
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fG,i64 0,i32 2)to i8*))
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 1)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
store i8%n,i8*%D,align 1
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%A(i8*inreg%G,i8*inreg%D)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=call fastcc i8*%K(i8*inreg%M,i8*inreg%N)
%P=load i8,i8*%O,align 1
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%Q,i64 1
call void@llvm.memset.p0i8.i32(i8*%T,i8 0,i32 7,i1 false)
store i8%P,i8*%Q,align 1
%U=getelementptr inbounds i8,i8*%Q,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%Q
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1039(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%c,0
%h=icmp eq i32%f,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%g,i32%j,i32%i
%l=icmp eq i32%k,1
%m=select i1%l,i32%c,i32%f
ret i32%m
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__boolE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fI,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1043(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6String7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__stringE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fK,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1047(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=bitcast i8*%o to double*
store double%k,double*%r,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to double*
store double%n,double*%t,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,double%k,double%n
ret double%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i64*
%o=load i64,i64*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fM,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 8)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 8,i32*%G,align 4
%H=bitcast i8*%E to i64*
store i64%o,i64*%H,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to double*
%S=load double,double*%R,align 8
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
%W=bitcast i8*%T to double*
store double%S,double*%W,align 8
%X=getelementptr inbounds i8,i8*%T,i64 8
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 4
ret i8*%T
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1051(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=bitcast i8*%o to float*
store float%k,float*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to float*
store float%n,float*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,float%k,float%n
ret float%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fO,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to float*
%S=load float,float*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to float*
store float%S,float*%Y,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1055(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fQ,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1059(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11max__numericE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1063(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1065(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fU,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1069(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1071(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1075(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1077(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f0,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f1,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1081(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1083(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=load i8,i8*%h,align 1
%k=getelementptr inbounds i8,i8*%h,i64 1
%l=load i8,i8*%k,align 1
%m=call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%m,i64 2
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32 6,i1 false)
store i8%j,i8*%m,align 1
%q=getelementptr inbounds i8,i8*%m,i64 1
store i8%l,i8*%q,align 1
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
%t=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%m)
%u=icmp eq i32%t,1
%v=select i1%u,i8%j,i8%l
ret i8%v
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 1)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=load i8,i8*%u,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%b,align 8
%C=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f4,i64 0,i32 2)to i8*))
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=call i8*@sml_alloc(i32 inreg 1)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
store i8%y,i8*%O,align 1
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=call fastcc i8*%L(i8*inreg%R,i8*inreg%O)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Z=call fastcc i8*%V(i8*inreg%X,i8*inreg%Y)
%aa=load i8,i8*%Z,align 1
%ab=call i8*@sml_alloc(i32 inreg 12)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177288,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 1
call void@llvm.memset.p0i8.i32(i8*%ae,i8 0,i32 7,i1 false)
store i8%aa,i8*%ab,align 1
%af=getelementptr inbounds i8,i8*%ab,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1087(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1089(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%c,0
%h=icmp eq i32%f,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%g,i32%j,i32%i
%l=icmp eq i32%k,1
%m=select i1%l,i32%c,i32%f
ret i32%m
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f6,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f7,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1093(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1095(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6String7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f9,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ga,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1099(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1101(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=bitcast i8*%o to double*
store double%k,double*%r,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to double*
store double%n,double*%t,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,double%k,double%n
ret double%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gc,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i64*
%z=load i64,i64*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gd,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 8)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 8,i32*%R,align 4
%S=bitcast i8*%P to i64*
store i64%z,i64*%S,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to double*
%ad=load double,double*%ac,align 8
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
%ah=bitcast i8*%ae to double*
store double%ad,double*%ah,align 8
%ai=getelementptr inbounds i8,i8*%ae,i64 8
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1105(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1107(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=bitcast i8*%o to float*
store float%k,float*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to float*
store float%n,float*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%o)
%x=icmp eq i32%w,1
%y=select i1%x,float%k,float%n
ret float%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gf,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gg,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to float*
%ad=load float,float*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
%aj=bitcast i8*%ae to float*
store float%ad,float*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1111(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1113(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gi,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gj,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1117(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1119(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%p)
%A=icmp eq i32%z,1
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gl,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gm,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1123(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7min__intE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@go,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1127(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gq,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1131(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__wordE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gs,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1135(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=load i8,i8*%h,align 1
%k=getelementptr inbounds i8,i8*%h,i64 1
%l=load i8,i8*%k,align 1
%m=call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%m,i64 2
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32 6,i1 false)
store i8%j,i8*%m,align 1
%q=getelementptr inbounds i8,i8*%m,i64 1
store i8%l,i8*%q,align 1
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
%t=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%m)
%u=icmp eq i32%t,2
%v=select i1%u,i8%j,i8%l
ret i8%v
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__charE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=load i8,i8*%i,align 1
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gu,i64 0,i32 2)to i8*))
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 1)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
store i8%n,i8*%D,align 1
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%A(i8*inreg%G,i8*inreg%D)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=call fastcc i8*%K(i8*inreg%M,i8*inreg%N)
%P=load i8,i8*%O,align 1
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%Q,i64 1
call void@llvm.memset.p0i8.i32(i8*%T,i8 0,i32 7,i1 false)
store i8%P,i8*%Q,align 1
%U=getelementptr inbounds i8,i8*%Q,i64 8
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 4
ret i8*%Q
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1139(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%c,0
%h=icmp eq i32%f,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%g,i32%j,i32%i
%l=icmp eq i32%k,2
%m=select i1%l,i32%c,i32%f
ret i32%m
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__boolE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gw,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32%S,i32*%U,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1143(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6String7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__stringE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gy,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1147(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=bitcast i8*%o to double*
store double%k,double*%r,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to double*
store double%n,double*%t,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,double%k,double%n
ret double%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__realE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i64*
%o=load i64,i64*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gA,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 8)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 8,i32*%G,align 4
%H=bitcast i8*%E to i64*
store i64%o,i64*%H,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to double*
%S=load double,double*%R,align 8
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
%W=bitcast i8*%T to double*
store double%S,double*%W,align 8
%X=getelementptr inbounds i8,i8*%T,i64 8
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 4
ret i8*%T
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1151(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=bitcast i8*%o to float*
store float%k,float*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to float*
store float%n,float*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,float%k,float%n
ret float%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__real32E(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gC,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32%o,i32*%F,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=bitcast i8*%Q to float*
%S=load float,float*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177288,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to float*
store float%S,float*%Y,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1155(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gE,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1159(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11min__numericE(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*null
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gG,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1163(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1165(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gI,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gJ,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1169(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1171(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6IntInf7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gL,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gM,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1175(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1177(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i32%k,i32*%p,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32%n,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Word327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,i32%k,i32%n
ret i32%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gO,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gP,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1181(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1183(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=load i8,i8*%h,align 1
%k=getelementptr inbounds i8,i8*%h,i64 1
%l=load i8,i8*%k,align 1
%m=call i8*@sml_alloc(i32 inreg 12)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177288,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%m,i64 2
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32 6,i1 false)
store i8%j,i8*%m,align 1
%q=getelementptr inbounds i8,i8*%m,i64 1
store i8%l,i8*%q,align 1
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 4
%t=call fastcc i32@_SMLFN4Char7compareE(i8*inreg%m)
%u=icmp eq i32%t,2
%v=select i1%u,i8%j,i8%l
ret i8%v
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 1)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gR,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=load i8,i8*%u,align 1
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%b,align 8
%C=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 1,i32 inreg 0,i32 inreg 1)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gS,i64 0,i32 2)to i8*))
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=call i8*@sml_alloc(i32 inreg 1)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
store i8%y,i8*%O,align 1
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=call fastcc i8*%L(i8*inreg%R,i8*inreg%O)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Z=call fastcc i8*%V(i8*inreg%X,i8*inreg%Y)
%aa=load i8,i8*%Z,align 1
%ab=call i8*@sml_alloc(i32 inreg 12)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177288,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 1
call void@llvm.memset.p0i8.i32(i8*%ae,i8 0,i32 7,i1 false)
store i8%aa,i8*%ab,align 1
%af=getelementptr inbounds i8,i8*%ab,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1187(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1189(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i32*
%c=load i32,i32*%b,align 4
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%c,0
%h=icmp eq i32%f,0
%i=zext i1%h to i32
%j=select i1%h,i32 0,i32 2
%k=select i1%g,i32%j,i32%i
%l=icmp eq i32%k,2
%m=select i1%l,i32%c,i32%f
ret i32%m
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gV,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=bitcast i8*%ae to i32*
%ag=getelementptr inbounds i8,i8*%ae,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%ae,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
store i32%ad,i32*%af,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1193(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1195(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN6String7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gX,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gY,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1199(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc double@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1201(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to double*
%k=load double,double*%j,align 8
%l=getelementptr inbounds i8,i8*%h,i64 8
%m=bitcast i8*%l to double*
%n=load double,double*%m,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
%r=bitcast i8*%o to double*
store double%k,double*%r,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to double*
store double%n,double*%t,align 8
%u=getelementptr inbounds i8,i8*%o,i64 16
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real647compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,double%k,double%n
ret double%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g0,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i64*
%z=load i64,i64*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 8,i32 inreg 0,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g1,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 8)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 8,i32*%R,align 4
%S=bitcast i8*%P to i64*
store i64%z,i64*%S,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to double*
%ad=load double,double*%ac,align 8
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
%ah=bitcast i8*%ae to double*
store double%ad,double*%ah,align 8
%ai=getelementptr inbounds i8,i8*%ae,i64 8
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1205(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc float@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1207(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=bitcast i8*%h to float*
%k=load float,float*%j,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to float*
%n=load float,float*%m,align 4
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
%r=bitcast i8*%o to float*
store float%k,float*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to float*
store float%n,float*%t,align 4
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 4
%w=call fastcc i32@_SMLFN6Real327compareE(i8*inreg%o)
%x=icmp eq i32%w,2
%y=select i1%x,float%k,float%n
ret float%y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 0,i32 inreg 4)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g3,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 0,i32 inreg 4,i32 inreg 0,i32 inreg 4)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g4,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 4)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 4,i32*%S,align 4
store i32%z,i32*%Q,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=call fastcc i8*%M(i8*inreg%T,i8*inreg%P)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=bitcast i8*%ab to float*
%ad=load float,float*%ac,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
%aj=bitcast i8*%ae to float*
store float%ad,float*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1211(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1213(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN22SMLSharp__SQL__TimeStamp7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g6,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g7,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1217(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1219(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call fastcc i32@_SMLFN20SMLSharp__SQL__Numeric7compareE(i8*inreg%p)
%A=icmp eq i32%z,2
br i1%A,label%D,label%B
B:
%C=load i8*,i8**%c,align 8
ret i8*%C
D:
%E=load i8*,i8**%b,align 8
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%i=getelementptr inbounds i8,i8*%h,i64 16
%j=bitcast i8*%i to i8*(i8*,i8*)**
%k=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j,align 8
%l=bitcast i8*%h to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*%k(i8*inreg%m,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g9,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*null
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ha,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
%ab=load i8*,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
ret i8*%Y
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7Num__intE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%a)
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=load i8*,i8**%b,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%h)
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
%n=load i8*,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%a)
%h=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%g)
store i8*%h,i8**%b,align 8
%i=call i8*@sml_alloc(i32 inreg 12)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i32*
store i32 1,i32*%o,align 4
ret i8*%i
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__realE(i64 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%a)
store i8*%g,i8**%b,align 8
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
%k=load i8*,i8**%b,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
ret i8*%h
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E(i32 inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=bitcast i32%a to float
%h=fpext float%g to double
%i=bitcast double%h to i64
%j=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%i)
store i8*%j,i8**%b,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
%n=load i8*,i8**%b,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 12)#0
%d=getelementptr inbounds i8,i8*%c,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177288,i32*%e,align 4
%f=load i8*,i8**%b,align 8
%g=bitcast i8*%c to i8**
store i8*%f,i8**%g,align 8
%h=getelementptr inbounds i8,i8*%c,i64 8
%i=bitcast i8*%h to i32*
store i32 1,i32*%i,align 4
ret i8*%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric7fromIntE(i32 inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i32*
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN6Word3210toLargeIntE(i32 inreg%n)
%p=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric12fromLargeIntE(i8*inreg%o)
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
ret i8*%q
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to i64*
%n=load i64,i64*%m,align 4
%o=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%n)
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
%s=load i8*,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
store i8*null,i8**%b,align 8
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*null
l:
%m=bitcast i8*%h to float*
%n=load float,float*%m,align 4
%o=fpext float%n to double
%p=bitcast double%o to i64
%q=call fastcc i8*@_SMLFN20SMLSharp__SQL__Numeric13fromLargeRealE(i64 inreg%p)
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
%u=load i8*,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
ret i8*%r
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17Num__numericOptionE(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1247(i8*inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 8)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 805306376,i32*%d,align 4
%e=bitcast i8*%b to i64*
store i64 0,i64*%e,align 1
%f=bitcast i8*%b to i8**
tail call void@sml_write(i8*inreg%b,i8**inreg%f,i8*inreg null)#0
ret i8*%b
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11dummyCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ho,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1251(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%e,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i8*%n,i8**%f,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%e,align 8
%M=bitcast i8*%L to i8**
call void@sml_write(i8*inreg%L,i8**inreg%M,i8*inreg%E)#0
%N=load i8*,i8**%e,align 8
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1252(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1251 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1251 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9newCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hq,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1256(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 8)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 805306376,i32*%i,align 4
store i8*%g,i8**%e,align 8
%j=bitcast i8*%g to i64*
store i64 0,i64*%j,align 1
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 12)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177288,i32*%p,align 4
store i8*%n,i8**%f,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%e,align 8
%M=bitcast i8*%L to i8**
call void@sml_write(i8*inreg%L,i8**inreg%M,i8*inreg%E)#0
%N=load i8*,i8**%e,align 8
ret i8*%N
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1257(i8*inreg%a)#4 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 8)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 805306376,i32*%d,align 4
%e=bitcast i8*%b to i64*
store i64 0,i64*%e,align 1
%f=bitcast i8*%b to i8**
tail call void@sml_write(i8*inreg%b,i8**inreg%f,i8*inreg null)#0
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1259(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=getelementptr inbounds i8,i8*%a,i64 16
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%c,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
store i8*%k,i8**%d,align 8
%n=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
store i8*%r,i8**%e,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1256 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1256 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%C,i64 4
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 1
%H=bitcast i8*%C to i32*
store i32 5,i32*%H,align 4
%I=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
%Q=load i8*,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hs,i64 0,i32 2)to i8*),i8**%T,align 8
%U=load i8*,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%N,i64 24
%Y=bitcast i8*%X to i32*
store i32 7,i32*%Y,align 4
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12queryCommandE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ht,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1263(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=call fastcc i8*@_SMLFN20SMLSharp__SQL__Backend7defaultE(i8*inreg%m)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%w,i64 24
%I=bitcast i8*%H to i32*
store i32 7,i32*%I,align 4
ret i8*%w
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sqlserver__stringE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hv,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1267(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%b,align 8
%g=getelementptr inbounds i8,i8*%a,i64 8
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%i,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
%r=load i8*,i8**%c,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=load i8*,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=load i8*,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%o,i64 24
%A=bitcast i8*%z to i32*
store i32 7,i32*%A,align 4
ret i8*%o
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sqlserver__backendE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hx,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1273(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
%r=icmp eq i8*%q,null
br i1%r,label%s,label%M
s:
store i8*null,i8**%f,align 8
%t=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
store i8*%u,i8**%d,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hz,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@hG,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 7,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=bitcast i8*%q to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=bitcast i8**%f to i8***
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%O,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%d,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=bitcast i8*%ac to i64*
store i64 0,i64*%af,align 4
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 2,i32*%ak,align 4
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=call fastcc i8*%W(i8*inreg%al,i8*inreg%ac)
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=getelementptr inbounds i8,i8*%am,i64 16
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%e,align 8
%as=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%g,align 8
%ay=load i8*,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 8
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
store i8*null,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%ay,i64 12
%aD=bitcast i8*%aC to i32*
%aE=load i32,i32*%aD,align 4
%aF=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg%aB,i32 inreg%aE)
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%f,align 8
%aL=call i8*@sml_alloc(i32 inreg 4)#0
%aM=bitcast i8*%aL to i32*
%aN=getelementptr inbounds i8,i8*%aL,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 4,i32*%aO,align 4
store i32 0,i32*%aM,align 4
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=call fastcc i8*%aI(i8*inreg%aP,i8*inreg%aL)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=call fastcc i8*%aT(i8*inreg%aV,i8*inreg%aW)
%aY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aZ=call fastcc i8*%av(i8*inreg%aY,i8*inreg%aX)
%a0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 16
%a5=bitcast i8*%a4 to i8*(i8*,i8*)**
%a6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a5,align 8
%a7=bitcast i8*%a3 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=call fastcc i8*%a6(i8*inreg%a8,i8*inreg%aZ)
%ba=load i8*,i8**%e,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8*(i8*,i8*)**
%bd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bc,align 8
%be=bitcast i8*%ba to i8**
%bf=load i8*,i8**%be,align 8
%bg=tail call fastcc i8*%bd(i8*inreg%bf,i8*inreg%a9)
ret i8*%bg
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1274(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1273 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1273 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%c,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%d,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%g,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1274 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1274 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1277(i8*inreg%a)#2 gc"smlsharp"personality i32(...)*@sml_personality{
o:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%e,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%f,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%g,align 8
%D=call i8*@sml_alloc(i32 inreg 4)#0
%E=bitcast i8*%D to i32*
%F=getelementptr inbounds i8,i8*%D,i64 -4
%G=bitcast i8*%F to i32*
store i32 4,i32*%G,align 4
store i32 0,i32*%E,align 4
%H=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%I=call fastcc i8*%A(i8*inreg%H,i8*inreg%D)
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%g,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%T)
%U=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%U)
%V=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%V)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%J,i8**%b,align 8
%W=load atomic i32,i32*@sml_check_flag unordered,align 4
%X=icmp eq i32%W,0
br i1%X,label%ag,label%Y
Y:
invoke void@sml_check(i32 inreg%W)
to label%Z unwind label%cK
Z:
%aa=load i8*,i8**%b,align 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=getelementptr inbounds i8,i8*%aa,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
br label%ag
ag:
%ah=phi i8*[%af,%Z],[%O,%m]
%ai=phi i8*[%ac,%Z],[%M,%m]
store i8*%ah,i8**%b,align 8
%aj=getelementptr inbounds i8,i8*%ai,i64 24
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%c,align 8
%ar=call i8*@sml_alloc(i32 inreg 4)#0
%as=bitcast i8*%ar to i32*
%at=getelementptr inbounds i8,i8*%ar,i64 -4
%au=bitcast i8*%at to i32*
store i32 4,i32*%au,align 4
store i32 0,i32*%as,align 4
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=invoke fastcc i8*%ao(i8*inreg%av,i8*inreg%ar)
to label%ax unwind label%cK
ax:
store i8*%aw,i8**%c,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=invoke fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_302(i8*inreg%ay)
to label%aJ unwind label%cK
aJ:
store i8*%aI,i8**%b,align 8
%aK=icmp eq i8*%aI,null
br i1%aK,label%cJ,label%aL
aL:
%aM=bitcast i8*%aI to i8***
%aN=load i8**,i8***%aM,align 8
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%c,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=icmp eq i8*%aR,null
%aT=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4LinkE,align 8
br i1%aS,label%aU,label%bB
aU:
store i8*%aT,i8**%b,align 8
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
%aY=bitcast i8*%aV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@w,i64 0,i32 2,i64 0),i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=invoke fastcc i8*@_SMLFN6String1_ZE(i8*inreg%aV)
to label%a5 unwind label%cK
a5:
store i8*%a4,i8**%c,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@x,i64 0,i32 2,i64 0),i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=invoke fastcc i8*@_SMLFN6String1_ZE(i8*inreg%a6)
to label%bg unwind label%cK
bg:
store i8*%bf,i8**%c,align 8
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
store i8*%bh,i8**%d,align 8
%bk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@v,i64 0,i32 2,i64 0),i8**%bn,align 8
%bo=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bp=getelementptr inbounds i8,i8*%bh,i64 16
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bh,i64 24
%bs=bitcast i8*%br to i32*
store i32 7,i32*%bs,align 4
%bt=call i8*@sml_alloc(i32 inreg 60)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177336,i32*%bv,align 4
%bw=getelementptr inbounds i8,i8*%bt,i64 56
%bx=bitcast i8*%bw to i32*
store i32 1,i32*%bx,align 4
%by=load i8*,i8**%d,align 8
%bz=bitcast i8*%bt to i8**
store i8*%by,i8**%bz,align 8
invoke void@sml_raise(i8*inreg%bt)#1
to label%bA unwind label%cK
bA:
unreachable
bB:
store i8*%aT,i8**%c,align 8
%bC=invoke fastcc i8*@_SMLFN6String10concatWithE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@q,i64 0,i32 2,i64 0))
to label%bD unwind label%cK
bD:
%bE=getelementptr inbounds i8,i8*%bC,i64 16
%bF=bitcast i8*%bE to i8*(i8*,i8*)**
%bG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bF,align 8
%bH=bitcast i8*%bC to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%d,align 8
%bJ=invoke fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%bK unwind label%cK
bK:
%bL=getelementptr inbounds i8,i8*%bJ,i64 16
%bM=bitcast i8*%bL to i8*(i8*,i8*)**
%bN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bM,align 8
%bO=bitcast i8*%bJ to i8**
%bP=load i8*,i8**%bO,align 8
%bQ=invoke fastcc i8*%bN(i8*inreg%bP,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@t,i64 0,i32 2)to i8*))
to label%bR unwind label%cK
bR:
%bS=getelementptr inbounds i8,i8*%bQ,i64 16
%bT=bitcast i8*%bS to i8*(i8*,i8*)**
%bU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bT,align 8
%bV=bitcast i8*%bQ to i8**
%bW=load i8*,i8**%bV,align 8
%bX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bY=invoke fastcc i8*%bU(i8*inreg%bW,i8*inreg%bX)
to label%bZ unwind label%cK
bZ:
%b0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b1=invoke fastcc i8*%bG(i8*inreg%b0,i8*inreg%bY)
to label%b2 unwind label%cK
b2:
store i8*%b1,i8**%b,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
%b6=bitcast i8*%b3 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@p,i64 0,i32 2,i64 0),i8**%b6,align 8
%b7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*%b7,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
%cc=invoke fastcc i8*@_SMLFN6String1_ZE(i8*inreg%b3)
to label%cd unwind label%cK
cd:
store i8*%cc,i8**%b,align 8
%ce=call i8*@sml_alloc(i32 inreg 20)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177296,i32*%cg,align 4
%ch=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%ce,i64 8
%ck=bitcast i8*%cj to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[16x i8]}>,<{[4x i8],i32,[16x i8]}>*@u,i64 0,i32 2,i64 0),i8**%ck,align 8
%cl=getelementptr inbounds i8,i8*%ce,i64 16
%cm=bitcast i8*%cl to i32*
store i32 3,i32*%cm,align 4
%cn=invoke fastcc i8*@_SMLFN6String1_ZE(i8*inreg%ce)
to label%co unwind label%cK
co:
store i8*%cn,i8**%b,align 8
%cp=call i8*@sml_alloc(i32 inreg 28)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177304,i32*%cr,align 4
store i8*%cp,i8**%d,align 8
%cs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ct=bitcast i8*%cp to i8**
store i8*%cs,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cp,i64 8
%cv=bitcast i8*%cu to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@o,i64 0,i32 2,i64 0),i8**%cv,align 8
%cw=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cx=getelementptr inbounds i8,i8*%cp,i64 16
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cp,i64 24
%cA=bitcast i8*%cz to i32*
store i32 7,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 60)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177336,i32*%cD,align 4
%cE=getelementptr inbounds i8,i8*%cB,i64 56
%cF=bitcast i8*%cE to i32*
store i32 1,i32*%cF,align 4
%cG=load i8*,i8**%d,align 8
%cH=bitcast i8*%cB to i8**
store i8*%cG,i8**%cH,align 8
invoke void@sml_raise(i8*inreg%cB)#1
to label%cI unwind label%cK
cI:
unreachable
cJ:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%T)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%U)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%V)
br label%cX
cK:
%cL=landingpad{i8*,i8*}
catch i8*null
%cM=extractvalue{i8*,i8*}%cL,1
%cN=bitcast i8*%cM to i8**
%cO=load i8*,i8**%cN,align 8
store i8*%cO,i8**%e,align 8
%cP=call i8*@sml_alloc(i32 inreg 12)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177288,i32*%cR,align 4
%cS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cP,i64 8
%cV=bitcast i8*%cU to i32*
store i32 1,i32*%cV,align 4
%cW=icmp eq i8*%cP,null
br i1%cW,label%cX,label%dm
cX:
%cY=call i8*@sml_alloc(i32 inreg 8)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 805306376,i32*%c0,align 4
store i8*%cY,i8**%h,align 8
%c1=bitcast i8*%cY to i64*
store i64 0,i64*%c1,align 1
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
store i8*%c2,i8**%e,align 8
%c5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c6=bitcast i8*%c2 to i8**
store i8*%c5,i8**%c6,align 8
%c7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c8=getelementptr inbounds i8,i8*%c2,i64 8
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%c2,i64 16
%db=bitcast i8*%da to i32*
store i32 3,i32*%db,align 4
%dc=call i8*@sml_alloc(i32 inreg 12)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177288,i32*%de,align 4
%df=load i8*,i8**%e,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to i32*
store i32 1,i32*%di,align 4
%dj=load i8*,i8**%h,align 8
%dk=bitcast i8*%dj to i8**
call void@sml_write(i8*inreg%dj,i8**inreg%dk,i8*inreg%dc)#0
%dl=load i8*,i8**%h,align 8
ret i8*%dl
dm:
store i8*%cS,i8**%e,align 8
%dn=bitcast i8**%g to i8***
%do=load i8**,i8***%dn,align 8
store i8*null,i8**%g,align 8
%dp=load i8*,i8**%do,align 8
%dq=getelementptr inbounds i8,i8*%dp,i64 16
%dr=bitcast i8*%dq to i8*(i8*,i8*)**
%ds=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dr,align 8
%dt=bitcast i8*%dp to i8**
%du=load i8*,i8**%dt,align 8
store i8*%du,i8**%f,align 8
%dv=call i8*@sml_alloc(i32 inreg 4)#0
%dw=bitcast i8*%dv to i32*
%dx=getelementptr inbounds i8,i8*%dv,i64 -4
%dy=bitcast i8*%dx to i32*
store i32 4,i32*%dy,align 4
store i32 0,i32*%dw,align 4
%dz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dA=call fastcc i8*%ds(i8*inreg%dz,i8*inreg%dv)
%dB=call i8*@sml_alloc(i32 inreg 60)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177336,i32*%dD,align 4
%dE=getelementptr inbounds i8,i8*%dB,i64 56
%dF=bitcast i8*%dE to i32*
store i32 1,i32*%dF,align 4
%dG=load i8*,i8**%e,align 8
%dH=bitcast i8*%dB to i8**
store i8*%dG,i8**%dH,align 8
call void@sml_raise(i8*inreg%dB)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7connectE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hB,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1281(i8*inreg%a)#2 gc"smlsharp"personality i32(...)*@sml_personality{
p:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%f,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%g,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%h,align 8
%E=call i8*@sml_alloc(i32 inreg 4)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 4,i32*%H,align 4
store i32 0,i32*%F,align 4
%I=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%J=call fastcc i8*%B(i8*inreg%I,i8*inreg%E)
store i8*%J,i8**%h,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=load i8*,i8**%h,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%U)
%V=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%V)
%W=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W)
%X=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%X)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%K,i8**%b,align 8
%Y=load atomic i32,i32*@sml_check_flag unordered,align 4
%Z=icmp eq i32%Y,0
br i1%Z,label%ai,label%aa
aa:
invoke void@sml_check(i32 inreg%Y)
to label%ab unwind label%bZ
ab:
%ac=load i8*,i8**%b,align 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
br label%ai
ai:
%aj=phi i8*[%ah,%ab],[%P,%n]
%ak=phi i8*[%ae,%ab],[%N,%n]
store i8*%ak,i8**%b,align 8
store i8*%aj,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 24
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%d,align 8
%at=call i8*@sml_alloc(i32 inreg 4)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 4,i32*%aw,align 4
store i32 0,i32*%au,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=invoke fastcc i8*%aq(i8*inreg%ax,i8*inreg%at)
to label%az unwind label%bZ
az:
store i8*%ay,i8**%d,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
%aD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=invoke fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_302(i8*inreg%aA)
to label%aL unwind label%bZ
aL:
store i8*%aK,i8**%c,align 8
%aM=icmp eq i8*%aK,null
br i1%aM,label%aN,label%aO
aN:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%U)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%V)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
br label%cc
aO:
%aP=invoke fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%aQ unwind label%bZ
aQ:
%aR=getelementptr inbounds i8,i8*%aP,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aP to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%d,align 8
%aW=call i8*@sml_alloc(i32 inreg 12)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177288,i32*%aY,align 4
store i8*%aW,i8**%e,align 8
%aZ=load i8*,i8**%b,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to i32*
store i32 1,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
%a6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8commands_336 to void(...)*),void(...)**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL8commands_336 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 24
%bd=bitcast i8*%bc to i32*
store i32 -2147483647,i32*%bd,align 4
%be=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bf=invoke fastcc i8*%aT(i8*inreg%be,i8*inreg%a3)
to label%bg unwind label%bZ
bg:
%bh=getelementptr inbounds i8,i8*%bf,i64 16
%bi=bitcast i8*%bh to i8*(i8*,i8*)**
%bj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bi,align 8
%bk=bitcast i8*%bf to i8**
%bl=load i8*,i8**%bk,align 8
%bm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bn=invoke fastcc i8*%bj(i8*inreg%bl,i8*inreg%bm)
to label%bo unwind label%bZ
bo:
store i8*%bn,i8**%c,align 8
%bp=invoke fastcc i8*@_SMLFN4List3appE(i32 inreg 1,i32 inreg 8)
to label%bq unwind label%bZ
bq:
%br=getelementptr inbounds i8,i8*%bp,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bp to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%d,align 8
%bw=call i8*@sml_alloc(i32 inreg 12)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177288,i32*%by,align 4
store i8*%bw,i8**%e,align 8
%bz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 28)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177304,i32*%bF,align 4
%bG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to void(...)**
store void(...)*bitcast(void(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13linkAndCreateE_337 to void(...)*),void(...)**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bD,i64 16
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13linkAndCreateE_1431 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bD,i64 24
%bN=bitcast i8*%bM to i32*
store i32 -2147483647,i32*%bN,align 4
%bO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bP=invoke fastcc i8*%bt(i8*inreg%bO,i8*inreg%bD)
to label%bQ unwind label%bZ
bQ:
%bR=getelementptr inbounds i8,i8*%bP,i64 16
%bS=bitcast i8*%bR to i8*(i8*,i8*)**
%bT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bS,align 8
%bU=bitcast i8*%bP to i8**
%bV=load i8*,i8**%bU,align 8
%bW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bX=invoke fastcc i8*%bT(i8*inreg%bV,i8*inreg%bW)
to label%bY unwind label%bZ
bY:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%U)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%V)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
br label%cc
bZ:
%b0=landingpad{i8*,i8*}
catch i8*null
%b1=extractvalue{i8*,i8*}%b0,1
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
store i8*%b3,i8**%f,align 8
%b4=call i8*@sml_alloc(i32 inreg 12)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177288,i32*%b6,align 4
%b7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to i32*
store i32 1,i32*%ca,align 4
%cb=icmp eq i8*%b4,null
br i1%cb,label%cc,label%cB
cc:
%cd=call i8*@sml_alloc(i32 inreg 8)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 805306376,i32*%cf,align 4
store i8*%cd,i8**%i,align 8
%cg=bitcast i8*%cd to i64*
store i64 0,i64*%cg,align 1
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
store i8*%ch,i8**%f,align 8
%ck=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cn=getelementptr inbounds i8,i8*%ch,i64 8
%co=bitcast i8*%cn to i8**
store i8*%cm,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ch,i64 16
%cq=bitcast i8*%cp to i32*
store i32 3,i32*%cq,align 4
%cr=call i8*@sml_alloc(i32 inreg 12)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177288,i32*%ct,align 4
%cu=load i8*,i8**%f,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cr,i64 8
%cx=bitcast i8*%cw to i32*
store i32 1,i32*%cx,align 4
%cy=load i8*,i8**%i,align 8
%cz=bitcast i8*%cy to i8**
call void@sml_write(i8*inreg%cy,i8**inreg%cz,i8*inreg%cr)#0
%cA=load i8*,i8**%i,align 8
ret i8*%cA
cB:
store i8*%b7,i8**%f,align 8
%cC=bitcast i8**%h to i8***
%cD=load i8**,i8***%cC,align 8
store i8*null,i8**%h,align 8
%cE=load i8*,i8**%cD,align 8
%cF=getelementptr inbounds i8,i8*%cE,i64 16
%cG=bitcast i8*%cF to i8*(i8*,i8*)**
%cH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cG,align 8
%cI=bitcast i8*%cE to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%g,align 8
%cK=call i8*@sml_alloc(i32 inreg 4)#0
%cL=bitcast i8*%cK to i32*
%cM=getelementptr inbounds i8,i8*%cK,i64 -4
%cN=bitcast i8*%cM to i32*
store i32 4,i32*%cN,align 4
store i32 0,i32*%cL,align 4
%cO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cP=call fastcc i8*%cH(i8*inreg%cO,i8*inreg%cK)
%cQ=call i8*@sml_alloc(i32 inreg 60)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177336,i32*%cS,align 4
%cT=getelementptr inbounds i8,i8*%cQ,i64 56
%cU=bitcast i8*%cT to i32*
store i32 1,i32*%cU,align 4
%cV=load i8*,i8**%f,align 8
%cW=bitcast i8*%cQ to i8**
store i8*%cV,i8**%cW,align 8
call void@sml_raise(i8*inreg%cQ)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16connectAndCreateE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hD,i64 0,i32 2)to i8*)
}
define internal fastcc void@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1287(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%H
n:
%o=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors7ConnectE,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hF,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@hG,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 7,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=bitcast i8*%l to i8****
%J=load i8***,i8****%I,align 8
%K=load i8**,i8***%J,align 8
call void@sml_write(i8*inreg%i,i8**inreg%k,i8*inreg null)#0
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 4)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 4,i32*%U,align 4
store i32 0,i32*%S,align 4
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%O(i8*inreg%V,i8*inreg%R)
ret void
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9closeConnE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hH,i64 0,i32 2)to i8*)
}
define internal fastcc void@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1293(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%H
n:
%o=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%c,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hN,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 7,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=bitcast i8*%l to i8****
%J=load i8***,i8****%I,align 8
%K=load i8**,i8***%J,align 8
call void@sml_write(i8*inreg%i,i8**inreg%k,i8*inreg null)#0
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 4)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 4,i32*%U,align 4
store i32 0,i32*%S,align 4
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*%O(i8*inreg%V,i8*inreg%R)
ret void
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11closeCursorE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hJ,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5fetchE_1299(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%f,align 8
br label%p
p:
%q=phi i8*[%o,%l],[%a,%j]
%r=phi i8**[%n,%l],[%k,%j]
%s=getelementptr inbounds i8,i8*%q,i64 4
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=add i32%u,-1
%w=sub i32 0,%u
%x=and i32%v,%w
%y=add i32%u,7
%z=add i32%y,%x
%A=and i32%z,-8
%B=bitcast i8*%q to i32*
%C=load i32,i32*%B,align 4
%D=or i32%A,4
%E=load i8*,i8**%r,align 8
%F=icmp eq i8*%E,null
br i1%F,label%G,label%aa
G:
store i8*null,i8**%f,align 8
%H=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%H,i8**%c,align 8
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
store i8*%I,i8**%d,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hM,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 60)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177336,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 56
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%T to i8**
store i8*%Y,i8**%Z,align 8
call void@sml_raise(i8*inreg%T)#1
unreachable
aa:
%ab=bitcast i8*%E to i8**
%ac=load i8*,i8**%ab,align 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=icmp eq i8*%ah,null
br i1%ai,label%aj,label%ak
aj:
ret i8*null
ak:
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=call i8*@sml_alloc(i32 inreg 4)#0
%aw=bitcast i8*%av to i32*
%ax=getelementptr inbounds i8,i8*%av,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 4,i32*%ay,align 4
store i32 0,i32*%aw,align 4
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=call fastcc i8*%as(i8*inreg%az,i8*inreg%av)
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=icmp eq i32%aC,0
br i1%aD,label%bm,label%aE
aE:
store i8*null,i8**%c,align 8
%aF=load i8*,i8**%f,align 8
%aG=bitcast i8*%aF to i32*
%aH=load i32,i32*%aG,align 4
%aI=getelementptr inbounds i8,i8*%aF,i64 4
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=call fastcc i8*@_SMLFN4List2hdE(i32 inreg%aH,i32 inreg%aK)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%c,align 8
%aR=load i8*,i8**%e,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
store i8*null,i8**%e,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=call fastcc i8*%aU(i8*inreg%aW,i8*inreg%aX)
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=call fastcc i8*%aO(i8*inreg%aZ,i8*inreg%aY)
store i8*%a0,i8**%c,align 8
%a1=load i8*,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 4
%a3=bitcast i8*%a2 to i32*
%a4=load i32,i32*%a3,align 4
store i8*null,i8**%f,align 8
%a5=bitcast i8*%a1 to i32*
%a6=load i32,i32*%a5,align 4
%a7=call i8*@sml_alloc(i32 inreg%D)#0
%a8=or i32%A,1342177280
%a9=getelementptr inbounds i8,i8*%a7,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32%a8,i32*%ba,align 4
call void@llvm.memset.p0i8.i32(i8*%a7,i8 0,i32%D,i1 false)
%bb=icmp eq i32%a6,0
%bc=load i8*,i8**%c,align 8
%bd=sext i32%x to i64
%be=getelementptr inbounds i8,i8*%a7,i64%bd
br i1%bb,label%bf,label%bg
bf:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%be,i8*%bc,i32%a4,i1 false)
br label%bi
bg:
%bh=bitcast i8*%be to i8**
store i8*%bc,i8**%bh,align 8
br label%bi
bi:
%bj=sext i32%A to i64
%bk=getelementptr inbounds i8,i8*%a7,i64%bj
%bl=bitcast i8*%bk to i32*
store i32%C,i32*%bl,align 4
ret i8*%a7
bm:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bn,i64 8
%bt=bitcast i8*%bs to i8**
store i8*null,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 12)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177288,i32*%by,align 4
%bz=load i8*,i8**%e,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=load i8*,i8**%c,align 8
%bE=bitcast i8*%bD to i8**
call void@sml_write(i8*inreg%bD,i8**inreg%bE,i8*inreg%bw)#0
ret i8*null
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5fetchE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5fetchE_1299 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5fetchE_1299 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8fetchAllE_1306(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
K:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=getelementptr inbounds i8,i8*%a,i64 4
%j=bitcast i8*%i to i32*
%k=load i32,i32*%j,align 4
%l=add i32%k,-1
%m=sub i32 0,%k
%n=and i32%l,%m
%o=add i32%k,7
%p=add i32%o,%n
%q=and i32%p,-8
%r=bitcast i8*%a to i32*
%s=load i32,i32*%r,align 4
%t=or i32%q,4
%u=add i32%q,15
%v=and i32%u,-8
%w=lshr i32%p,3
%x=lshr i32%n,3
%y=sub nsw i32%w,%x
%z=shl i32 1,%y
%A=or i32%z,%s
%B=or i32%v,4
%C=bitcast i8**%c to i8***
%D=or i32%q,1342177280
%E=sext i32%n to i64
%F=sext i32%q to i64
%G=or i32%v,1342177280
%H=sext i32%v to i64
br label%I
I:
%J=phi i8*[%cn,%cw],[null,%K]
store i8*%J,i8**%d,align 8
%L=load atomic i32,i32*@sml_check_flag unordered,align 4
%M=icmp eq i32%L,0
br i1%M,label%O,label%N
N:
call void@sml_check(i32 inreg%L)
br label%O
O:
%P=load i8**,i8***%C,align 8
%Q=load i8*,i8**%P,align 8
%R=icmp eq i8*%Q,null
br i1%R,label%S,label%am
S:
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%T=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%T,i8**%c,align 8
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
store i8*%U,i8**%d,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hM,i64 0,i32 2,i64 0),i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 7,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 60)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177336,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%af,i64 56
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%af to i8**
store i8*%ak,i8**%al,align 8
call void@sml_raise(i8*inreg%af)#1
unreachable
am:
%an=bitcast i8*%Q to i8**
%ao=load i8*,i8**%an,align 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=icmp eq i8*%at,null
br i1%au,label%av,label%aw
av:
store i8*null,i8**%e,align 8
br label%bM
aw:
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%h,align 8
%aH=call i8*@sml_alloc(i32 inreg 4)#0
%aI=bitcast i8*%aH to i32*
%aJ=getelementptr inbounds i8,i8*%aH,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 4,i32*%aK,align 4
store i32 0,i32*%aI,align 4
%aL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aM=call fastcc i8*%aE(i8*inreg%aL,i8*inreg%aH)
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
%aP=icmp eq i32%aO,0
br i1%aP,label%bt,label%aQ
aQ:
%aR=load i8*,i8**%g,align 8
%aS=bitcast i8*%aR to i32*
%aT=load i32,i32*%aS,align 4
%aU=getelementptr inbounds i8,i8*%aR,i64 4
%aV=bitcast i8*%aU to i32*
%aW=load i32,i32*%aV,align 4
%aX=call fastcc i8*@_SMLFN4List2hdE(i32 inreg%aT,i32 inreg%aW)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%h,align 8
%a3=load i8*,i8**%f,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 16
%a5=bitcast i8*%a4 to i8*(i8*,i8*)**
%a6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a5,align 8
store i8*null,i8**%f,align 8
%a7=bitcast i8*%a3 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=call fastcc i8*%a6(i8*inreg%a8,i8*inreg%a9)
%bb=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bc=call fastcc i8*%a0(i8*inreg%bb,i8*inreg%ba)
store i8*%bc,i8**%e,align 8
%bd=load i8*,i8**%g,align 8
%be=getelementptr inbounds i8,i8*%bd,i64 4
%bf=bitcast i8*%be to i32*
%bg=load i32,i32*%bf,align 4
%bh=bitcast i8*%bd to i32*
%bi=load i32,i32*%bh,align 4
%bj=call i8*@sml_alloc(i32 inreg%t)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32%D,i32*%bl,align 4
call void@llvm.memset.p0i8.i32(i8*%bj,i8 0,i32%t,i1 false)
%bm=icmp eq i32%bi,0
%bn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bj,i64%E
br i1%bm,label%bN,label%bp
bp:
%bq=bitcast i8*%bo to i8**
store i8*%bn,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bj,i64%F
%bs=bitcast i8*%br to i32*
store i32%s,i32*%bs,align 4
store i8*%bj,i8**%e,align 8
br label%bW
bt:
store i8*null,i8**%f,align 8
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
store i8*%bu,i8**%f,align 8
%bx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bu,i64 8
%bA=bitcast i8*%bz to i8**
store i8*null,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bu,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 12)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177288,i32*%bF,align 4
%bG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to i32*
store i32 1,i32*%bJ,align 4
%bK=load i8*,i8**%c,align 8
%bL=bitcast i8*%bK to i8**
call void@sml_write(i8*inreg%bK,i8**inreg%bL,i8*inreg%bD)#0
br label%bM
bM:
store i8*null,i8**%e,align 8
br label%bR
bN:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bo,i8*%bn,i32%bg,i1 false)
%bO=getelementptr inbounds i8,i8*%bj,i64%F
%bP=bitcast i8*%bO to i32*
store i32%s,i32*%bP,align 4
store i8*%bj,i8**%e,align 8
%bQ=icmp eq i8*%bj,null
br i1%bQ,label%bR,label%bW
bR:
store i8*null,i8**%e,align 8
%bS=load i8*,i8**%c,align 8
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
%bV=icmp eq i8*%bU,null
br i1%bV,label%cC,label%cW
bW:
%bX=load i8*,i8**%g,align 8
%bY=bitcast i8*%bX to i32*
%bZ=load i32,i32*%bY,align 4
%b0=icmp eq i32%bZ,0
br i1%b0,label%b4,label%b1
b1:
store i8*null,i8**%e,align 8
%b2=bitcast i8*%bo to i8**
%b3=load i8*,i8**%b2,align 8
br label%cf
b4:
%b5=getelementptr inbounds i8,i8*%bX,i64 4
%b6=bitcast i8*%b5 to i32*
%b7=load i32,i32*%b6,align 4
%b8=call i8*@sml_alloc(i32 inreg%b7)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32%b7,i32*%ca,align 4
%cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cc=getelementptr inbounds i8,i8*%cb,i64%E
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%b8,i8*%cc,i32%b7,i1 false)
%cd=load i8*,i8**%g,align 8
%ce=bitcast i8*%cd to i32*
br label%cf
cf:
%cg=phi i32*[%ce,%b4],[%bY,%b1]
%ch=phi i8*[%cd,%b4],[%bX,%b1]
%ci=phi i8*[%b8,%b4],[%b3,%b1]
store i8*%ci,i8**%e,align 8
%cj=getelementptr inbounds i8,i8*%ch,i64 4
%ck=bitcast i8*%cj to i32*
%cl=load i32,i32*%ck,align 4
%cm=load i32,i32*%cg,align 4
%cn=call i8*@sml_alloc(i32 inreg%B)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32%G,i32*%cp,align 4
call void@llvm.memset.p0i8.i32(i8*%cn,i8 0,i32%B,i1 false)
%cq=icmp eq i32%cm,0
%cr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cs=getelementptr inbounds i8,i8*%cn,i64%E
br i1%cq,label%ct,label%cu
ct:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cs,i8*%cr,i32%cl,i1 false)
br label%cw
cu:
%cv=bitcast i8*%cs to i8**
store i8*%cr,i8**%cv,align 8
br label%cw
cw:
%cx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cy=getelementptr inbounds i8,i8*%cn,i64%F
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=getelementptr inbounds i8,i8*%cn,i64%H
%cB=bitcast i8*%cA to i32*
store i32%A,i32*%cB,align 4
br label%I
cC:
store i8*null,i8**%d,align 8
store i8*null,i8**%g,align 8
%cD=load i8*,i8**@_SMLZN19SMLSharp__SQL__Errors4ExecE,align 8
store i8*%cD,i8**%c,align 8
%cE=call i8*@sml_alloc(i32 inreg 28)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177304,i32*%cG,align 4
store i8*%cE,i8**%d,align 8
%cH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cI=bitcast i8*%cE to i8**
store i8*%cH,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[38x i8]}>,<{[4x i8],i32,[38x i8]}>*@hN,i64 0,i32 2,i64 0),i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cE,i64 24
%cO=bitcast i8*%cN to i32*
store i32 7,i32*%cO,align 4
%cP=call i8*@sml_alloc(i32 inreg 60)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177336,i32*%cR,align 4
%cS=getelementptr inbounds i8,i8*%cP,i64 56
%cT=bitcast i8*%cS to i32*
store i32 1,i32*%cT,align 4
%cU=load i8*,i8**%d,align 8
%cV=bitcast i8*%cP to i8**
store i8*%cU,i8**%cV,align 8
call void@sml_raise(i8*inreg%cP)#1
unreachable
cW:
%cX=bitcast i8*%bU to i8****
%cY=load i8***,i8****%cX,align 8
%cZ=load i8**,i8***%cY,align 8
call void@sml_write(i8*inreg%bS,i8**inreg%bT,i8*inreg null)#0
%c0=load i8*,i8**%cZ,align 8
%c1=getelementptr inbounds i8,i8*%c0,i64 16
%c2=bitcast i8*%c1 to i8*(i8*,i8*)**
%c3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c2,align 8
%c4=bitcast i8*%c0 to i8**
%c5=load i8*,i8**%c4,align 8
store i8*%c5,i8**%c,align 8
%c6=call i8*@sml_alloc(i32 inreg 4)#0
%c7=bitcast i8*%c6 to i32*
%c8=getelementptr inbounds i8,i8*%c6,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 4,i32*%c9,align 4
store i32 0,i32*%c7,align 4
%da=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%db=call fastcc i8*%c3(i8*inreg%da,i8*inreg%c6)
%dc=load i8*,i8**%g,align 8
%dd=bitcast i8*%dc to i32*
%de=load i32,i32*%dd,align 4
store i8*null,i8**%g,align 8
%df=getelementptr inbounds i8,i8*%dc,i64 4
%dg=bitcast i8*%df to i32*
%dh=load i32,i32*%dg,align 4
%di=call fastcc i8*@_SMLFN4List3revE(i32 inreg%de,i32 inreg%dh)
%dj=getelementptr inbounds i8,i8*%di,i64 16
%dk=bitcast i8*%dj to i8*(i8*,i8*)**
%dl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dk,align 8
%dm=bitcast i8*%di to i8**
%dn=load i8*,i8**%dm,align 8
%do=load i8*,i8**%d,align 8
%dp=tail call fastcc i8*%dl(i8*inreg%dn,i8*inreg%do)
ret i8*%dp
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8fetchAllE_1306 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8fetchAllE_1306 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1309(i8*inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
%i=bitcast i8*%a to i8**
%j=load i8*,i8**%i,align 8
ret i8*%j
k:
%l=getelementptr inbounds i8,i8*%a,i64 12
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call i8*@sml_alloc(i32 inreg%n)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32%n,i32*%q,align 4
%r=load i8*,i8**%c,align 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%o,i8*%r,i32%n,i1 false)
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1310(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%k,i64 12
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
store i8*null,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%c,align 8
%C=icmp eq i32%o,0
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
br i1%C,label%E,label%F
E:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%D,i32%y,i1 false)
br label%H
F:
%G=bitcast i8*%z to i8**
store i8*%D,i8**%G,align 8
br label%H
H:
%I=getelementptr inbounds i8,i8*%z,i64 8
%J=bitcast i8*%I to i32*
store i32%o,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%z,i64 12
%L=bitcast i8*%K to i32*
store i32%y,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%z,i64 16
%N=bitcast i8*%M to i32*
store i32%o,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
store i8*%O,i8**%d,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1309 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1876 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=bitcast i8*%Z to i64*
store i64 0,i64*%ac,align 4
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=call fastcc i8*%t(i8*inreg%ai,i8*inreg%Z)
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=tail call fastcc i8*%ap(i8*inreg%ar,i8*inreg null)
ret i8*%as
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1311(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1310 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1310 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim3toyE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%a,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%b,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%g,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1311 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1311 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1316(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hZ,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1319(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%k,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%o(i8*inreg%q,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hS,i64 0,i32 2)to i8*))
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query18format__command__astE(i32 inreg%C,i32 inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 4)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 4,i32*%P,align 4
store i32 0,i32*%N,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%J(i8*inreg%Q,i8*inreg%M)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%x(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%c,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%d,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%g,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1319 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1319 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1324(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hZ,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1327(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%k,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%o(i8*inreg%q,i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hV,i64 0,i32 2)to i8*))
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query16format__query__astE(i32 inreg%C,i32 inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 4)#0
%N=bitcast i8*%M to i32*
%O=getelementptr inbounds i8,i8*%M,i64 -4
%P=bitcast i8*%O to i32*
store i32 4,i32*%P,align 4
store i32 0,i32*%N,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%J(i8*inreg%Q,i8*inreg%M)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
%Z=load i8*,i8**%e,align 8
%aa=tail call fastcc i8*%x(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f)#4 gc"smlsharp"{
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=bitcast i8*%h to i32*
%j=getelementptr inbounds i8,i8*%h,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177288,i32*%k,align 4
store i8*%h,i8**%g,align 8
store i32%c,i32*%i,align 4
%l=getelementptr inbounds i8,i8*%h,i64 4
%m=bitcast i8*%l to i32*
store i32%d,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
%s=load i8*,i8**%g,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1327 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1327 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 24
%z=bitcast i8*%y to i32*
store i32 -2147483647,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11expToStringE_1330(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%b to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call fastcc i8*@_SMLFN9SMLFormat11prettyPrintE(i8*inreg null)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%d,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
store i8*null,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=call fastcc i8*@_SMLFN18SMLSharp__SQL__Query14format__exp__astE(i32 inreg%x,i32 inreg%A)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 4)#0
%I=bitcast i8*%H to i32*
%J=getelementptr inbounds i8,i8*%H,i64 -4
%K=bitcast i8*%J to i32*
store i32 4,i32*%K,align 4
store i32 0,i32*%I,align 4
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*%E(i8*inreg%L,i8*inreg%H)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
%U=load i8*,i8**%e,align 8
%V=tail call fastcc i8*%s(i8*inreg%U,i8*inreg%T)
ret i8*%V
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11expToStringE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 12)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%c,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%d,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%e,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11expToStringE_1330 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim11expToStringE_1330 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1335(i32 inreg%a)#5 gc"smlsharp"{
%b=tail call i8*@sml_alloc(i32 inreg 60)#0
%c=getelementptr inbounds i8,i8*%b,i64 -4
%d=bitcast i8*%c to i32*
store i32 1342177336,i32*%d,align 4
%e=getelementptr inbounds i8,i8*%b,i64 56
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
%g=bitcast i8*%b to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hZ,i64 0,i32 2)to i8*),i8**%g,align 8
tail call void@sml_raise(i8*inreg%b)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toyServerE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h0,i64 0,i32 2)to i8*)
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1339(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%b to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%c to i8***
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%g,align 8
br label%q
q:
%r=phi i8*[%p,%m],[%a,%k]
%s=phi i8**[%o,%m],[%l,%k]
%t=getelementptr inbounds i8,i8*%r,i64 20
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=add i32%y,%v
%A=getelementptr inbounds i8,i8*%r,i64 28
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
%D=add i32%C,-1
%E=add i32%D,%z
%F=sub i32 0,%C
%G=and i32%E,%F
%H=add i32%w,%z
%I=and i32%H,%x
%J=add i32%v,7
%K=add i32%J,%I
%L=and i32%K,-8
%M=lshr i32%I,3
%N=lshr i32%y,3
%O=sub nsw i32%M,%N
%P=getelementptr inbounds i8,i8*%r,i64 16
%Q=bitcast i8*%P to i32*
%R=load i32,i32*%Q,align 4
%S=shl i32%R,%O
%T=or i32%S,%R
%U=or i32%L,4
%V=and i32%D,%F
%W=shl i32%C,1
%X=add i32%W,-1
%Y=add i32%X,%V
%Z=and i32%Y,%F
%aa=add i32%C,7
%ab=add i32%aa,%Z
%ac=and i32%ab,-8
%ad=lshr i32%Z,3
%ae=lshr i32%V,3
%af=sub nsw i32%ad,%ae
%ag=getelementptr inbounds i8,i8*%r,i64 24
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=shl i32%ai,%af
%ak=or i32%aj,%ai
%al=or i32%ac,4
%am=load i8*,i8**%s,align 8
store i8*%am,i8**%d,align 8
%an=icmp eq i32%R,0
br i1%an,label%at,label%ao
ao:
%ap=sext i32%y to i64
%aq=getelementptr inbounds i8,i8*%am,i64%ap
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
br label%aE
at:
%au=call i8*@sml_alloc(i32 inreg%v)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32%v,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
%ay=sext i32%y to i64
%az=getelementptr inbounds i8,i8*%ax,i64%ay
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%au,i8*%az,i32%v,i1 false)
%aA=load i8*,i8**%g,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 24
%aC=bitcast i8*%aB to i32*
%aD=load i32,i32*%aC,align 4
br label%aE
aE:
%aF=phi i8*[%aA,%at],[%r,%ao]
%aG=phi i8*[%ax,%at],[%am,%ao]
%aH=phi i32[%aD,%at],[%ai,%ao]
%aI=phi i8*[%au,%at],[%as,%ao]
store i8*%aI,i8**%e,align 8
%aJ=icmp eq i32%aH,0
br i1%aJ,label%aP,label%aK
aK:
store i8*null,i8**%d,align 8
%aL=sext i32%G to i64
%aM=getelementptr inbounds i8,i8*%aG,i64%aL
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
br label%a0
aP:
%aQ=getelementptr inbounds i8,i8*%aF,i64 28
%aR=bitcast i8*%aQ to i32*
%aS=load i32,i32*%aR,align 4
%aT=call i8*@sml_alloc(i32 inreg%aS)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32%aS,i32*%aV,align 4
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=sext i32%G to i64
%aY=getelementptr inbounds i8,i8*%aW,i64%aX
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aT,i8*%aY,i32%aS,i1 false)
%aZ=load i8*,i8**%g,align 8
br label%a0
a0:
%a1=phi i8*[%aZ,%aP],[%aF,%aK]
%a2=phi i8*[%aT,%aP],[%aO,%aK]
store i8*%a2,i8**%d,align 8
%a3=load i8*,i8**%c,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%c,align 8
%a7=getelementptr inbounds i8,i8*%a1,i64 16
%a8=bitcast i8*%a7 to i32*
%a9=load i32,i32*%a8,align 4
%ba=icmp eq i32%a9,0
br i1%ba,label%bg,label%bb
bb:
%bc=sext i32%y to i64
%bd=getelementptr inbounds i8,i8*%a6,i64%bc
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
br label%br
bg:
%bh=getelementptr inbounds i8,i8*%a1,i64 20
%bi=bitcast i8*%bh to i32*
%bj=load i32,i32*%bi,align 4
%bk=call i8*@sml_alloc(i32 inreg%bj)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32%bj,i32*%bm,align 4
%bn=load i8*,i8**%c,align 8
%bo=sext i32%y to i64
%bp=getelementptr inbounds i8,i8*%bn,i64%bo
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bk,i8*%bp,i32%bj,i1 false)
%bq=load i8*,i8**%g,align 8
br label%br
br:
%bs=phi i8*[%bq,%bg],[%a1,%bb]
%bt=phi i8*[%bn,%bg],[%a6,%bb]
%bu=phi i8*[%bk,%bg],[%bf,%bb]
store i8*%bu,i8**%f,align 8
%bv=getelementptr inbounds i8,i8*%bs,i64 24
%bw=bitcast i8*%bv to i32*
%bx=load i32,i32*%bw,align 4
%by=icmp eq i32%bx,0
br i1%by,label%bF,label%bz
bz:
%bA=bitcast i8*%bs to i8**
store i8*null,i8**%c,align 8
%bB=sext i32%G to i64
%bC=getelementptr inbounds i8,i8*%bt,i64%bB
%bD=bitcast i8*%bC to i8**
%bE=load i8*,i8**%bD,align 8
br label%bS
bF:
%bG=getelementptr inbounds i8,i8*%bs,i64 28
%bH=bitcast i8*%bG to i32*
%bI=load i32,i32*%bH,align 4
%bJ=call i8*@sml_alloc(i32 inreg%bI)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32%bI,i32*%bL,align 4
%bM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bN=sext i32%G to i64
%bO=getelementptr inbounds i8,i8*%bM,i64%bN
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bJ,i8*%bO,i32%bI,i1 false)
%bP=bitcast i8**%g to i8***
%bQ=load i8**,i8***%bP,align 8
%bR=bitcast i8**%bQ to i8*
br label%bS
bS:
%bT=phi i8*[%bR,%bF],[%bs,%bz]
%bU=phi i8**[%bQ,%bF],[%bA,%bz]
%bV=phi i8*[%bJ,%bF],[%bE,%bz]
store i8*%bV,i8**%c,align 8
%bW=load i8*,i8**%bU,align 8
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%h,align 8
%b2=getelementptr inbounds i8,i8*%bT,i64 20
%b3=bitcast i8*%b2 to i32*
%b4=load i32,i32*%b3,align 4
%b5=getelementptr inbounds i8,i8*%bT,i64 16
%b6=bitcast i8*%b5 to i32*
%b7=load i32,i32*%b6,align 4
%b8=call i8*@sml_alloc(i32 inreg%U)#0
%b9=or i32%L,1342177280
%ca=getelementptr inbounds i8,i8*%b8,i64 -4
%cb=bitcast i8*%ca to i32*
store i32%b9,i32*%cb,align 4
call void@llvm.memset.p0i8.i32(i8*%b8,i8 0,i32%U,i1 false)
%cc=icmp eq i32%b7,0
%cd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ce=sext i32%y to i64
%cf=getelementptr inbounds i8,i8*%b8,i64%ce
br i1%cc,label%cg,label%ck
cg:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cf,i8*%cd,i32%b4,i1 false)
%ch=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ci=sext i32%I to i64
%cj=getelementptr inbounds i8,i8*%b8,i64%ci
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cj,i8*%ch,i32%b4,i1 false)
br label%cq
ck:
%cl=bitcast i8*%cf to i8**
store i8*%cd,i8**%cl,align 8
%cm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cn=sext i32%I to i64
%co=getelementptr inbounds i8,i8*%b8,i64%cn
%cp=bitcast i8*%co to i8**
store i8*%cm,i8**%cp,align 8
br label%cq
cq:
%cr=sext i32%L to i64
%cs=getelementptr inbounds i8,i8*%b8,i64%cr
%ct=bitcast i8*%cs to i32*
store i32%T,i32*%ct,align 4
%cu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cv=call fastcc i8*%bZ(i8*inreg%cu,i8*inreg%b8)
%cw=bitcast i8*%cv to i32*
%cx=load i32,i32*%cw,align 4
%cy=icmp eq i32%cx,0
br i1%cy,label%cA,label%cz
cz:
ret i32%cx
cA:
%cB=load i8*,i8**%g,align 8
%cC=getelementptr inbounds i8,i8*%cB,i64 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
%cF=getelementptr inbounds i8,i8*%cE,i64 16
%cG=bitcast i8*%cF to i8*(i8*,i8*)**
%cH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cG,align 8
%cI=bitcast i8*%cE to i8**
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%e,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 28
%cL=bitcast i8*%cK to i32*
%cM=load i32,i32*%cL,align 4
%cN=getelementptr inbounds i8,i8*%cB,i64 24
%cO=bitcast i8*%cN to i32*
%cP=load i32,i32*%cO,align 4
store i8*null,i8**%g,align 8
%cQ=call i8*@sml_alloc(i32 inreg%al)#0
%cR=or i32%ac,1342177280
%cS=getelementptr inbounds i8,i8*%cQ,i64 -4
%cT=bitcast i8*%cS to i32*
store i32%cR,i32*%cT,align 4
call void@llvm.memset.p0i8.i32(i8*%cQ,i8 0,i32%al,i1 false)
%cU=icmp eq i32%cP,0
%cV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cW=sext i32%V to i64
%cX=getelementptr inbounds i8,i8*%cQ,i64%cW
br i1%cU,label%cY,label%c2
cY:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%cX,i8*%cV,i32%cM,i1 false)
%cZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c0=sext i32%Z to i64
%c1=getelementptr inbounds i8,i8*%cQ,i64%c0
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%c1,i8*%cZ,i32%cM,i1 false)
br label%c8
c2:
%c3=bitcast i8*%cX to i8**
store i8*%cV,i8**%c3,align 8
%c4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c5=sext i32%Z to i64
%c6=getelementptr inbounds i8,i8*%cQ,i64%c5
%c7=bitcast i8*%c6 to i8**
store i8*%c4,i8**%c7,align 8
br label%c8
c8:
%c9=sext i32%ac to i64
%da=getelementptr inbounds i8,i8*%cQ,i64%c9
%db=bitcast i8*%da to i32*
store i32%ak,i32*%db,align 4
%dc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dd=call fastcc i8*%cH(i8*inreg%dc,i8*inreg%cQ)
%de=bitcast i8*%dd to i32*
%df=load i32,i32*%de,align 4
ret i32%df
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1340(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%b to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%b,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 4
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 12
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call i8*@sml_alloc(i32 inreg 36)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177312,i32*%x,align 4
store i8*%v,i8**%e,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32%l,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%v,i64 20
%G=bitcast i8*%F to i32*
store i32%o,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%v,i64 24
%I=bitcast i8*%H to i32*
store i32%r,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%v,i64 28
%K=bitcast i8*%J to i32*
store i32%u,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%v,i64 32
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
%Q=load i8*,i8**%e,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1339 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1885 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 24
%X=bitcast i8*%W to i32*
store i32 -2147483647,i32*%X,align 4
ret i8*%N
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1340 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1340 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27onlyOneE_1345(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,-1
%i=sub i32 0,%g
%j=and i32%h,%i
%k=icmp eq i8*%b,null
br i1%k,label%l,label%m
l:
store i8*null,i8**%c,align 8
br label%N
m:
%n=bitcast i8*%b to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=bitcast i8*%a to i32*
%q=load i32,i32*%p,align 4
%r=icmp eq i32%q,0
br i1%r,label%x,label%s
s:
store i8*null,i8**%d,align 8
%t=sext i32%j to i64
%u=getelementptr inbounds i8,i8*%o,i64%t
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
br label%F
x:
%y=call i8*@sml_alloc(i32 inreg%g)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32%g,i32*%A,align 4
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=sext i32%j to i64
%D=getelementptr inbounds i8,i8*%B,i64%C
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%y,i8*%D,i32%g,i1 false)
%E=load i8*,i8**%c,align 8
br label%F
F:
%G=phi i8*[%b,%s],[%E,%x]
%H=phi i8*[%w,%s],[%y,%x]
store i8*null,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%G,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=icmp eq i8*%K,null
br i1%L,label%M,label%N
M:
ret i8*%H
N:
%O=call i8*@sml_alloc(i32 inreg 60)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177336,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%O,i64 56
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
%T=bitcast i8*%O to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h4,i64 0,i32 2)to i8*),i8**%T,align 8
call void@sml_raise(i8*inreg%O)#1
unreachable
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27onlyOneE_1345 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27onlyOneE_1345 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1348(i8*inreg%a)#4 gc"smlsharp"{
%b=icmp ne i8*%a,null
%c=zext i1%b to i32
ret i32%c
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List210isNotEmptyE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h6,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1352(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 24
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=add i32%j,-1
%l=sub i32 0,%j
%m=and i32%k,%l
%n=getelementptr inbounds i8,i8*%a,i64 32
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%k,%p
%r=add i32%q,%m
%s=sub i32 0,%p
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%a,i64 20
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%w,-1
%y=sub i32 0,%w
%z=and i32%x,%y
%A=add i32%p,-1
%B=add i32%A,%w
%C=add i32%B,%z
%D=and i32%C,%s
%E=add i32%p,7
%F=add i32%E,%D
%G=and i32%F,-8
%H=lshr i32%D,3
%I=lshr i32%z,3
%J=sub nsw i32%H,%I
%K=getelementptr inbounds i8,i8*%a,i64 28
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=shl i32%M,%J
%O=getelementptr inbounds i8,i8*%a,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=or i32%N,%Q
%S=or i32%G,4
%T=icmp eq i32%M,0
br i1%T,label%aa,label%U
U:
%V=bitcast i8*%a to i8**
%W=sext i32%t to i64
%X=getelementptr inbounds i8,i8*%b,i64%W
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
br label%aj
aa:
%ab=call i8*@sml_alloc(i32 inreg%p)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32%p,i32*%ad,align 4
%ae=load i8*,i8**%c,align 8
%af=sext i32%t to i64
%ag=getelementptr inbounds i8,i8*%ae,i64%af
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ab,i8*%ag,i32%p,i1 false)
%ah=bitcast i8**%e to i8***
%ai=load i8**,i8***%ah,align 8
br label%aj
aj:
%ak=phi i8**[%ai,%aa],[%V,%U]
%al=phi i8*[%ab,%aa],[%Z,%U]
store i8*%al,i8**%d,align 8
%am=load i8*,i8**%ak,align 8
store i8*%am,i8**%f,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%g,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i32*
%aA=load i32,i32*%az,align 4
%aB=icmp eq i32%aA,0
br i1%aB,label%aG,label%aC
aC:
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
br label%aS
aG:
%aH=getelementptr inbounds i8,i8*%ax,i64 20
%aI=bitcast i8*%aH to i32*
%aJ=load i32,i32*%aI,align 4
%aK=call i8*@sml_alloc(i32 inreg%aJ)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32%aJ,i32*%aM,align 4
%aN=load i8*,i8**%e,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aK,i8*%aO,i32%aJ,i1 false)
%aP=getelementptr inbounds i8,i8*%aN,i64 16
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
br label%aS
aS:
%aT=phi i32[%aR,%aG],[%aA,%aC]
%aU=phi i8*[%aN,%aG],[%ax,%aC]
%aV=phi i8*[%aK,%aG],[%aF,%aC]
store i8*%aV,i8**%c,align 8
%aW=getelementptr inbounds i8,i8*%aU,i64 20
%aX=bitcast i8*%aW to i32*
%aY=load i32,i32*%aX,align 4
%aZ=getelementptr inbounds i8,i8*%aU,i64 32
%a0=bitcast i8*%aZ to i32*
%a1=load i32,i32*%a0,align 4
store i8*null,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 28
%a3=bitcast i8*%a2 to i32*
%a4=load i32,i32*%a3,align 4
%a5=call i8*@sml_alloc(i32 inreg%S)#0
%a6=or i32%G,1342177280
%a7=getelementptr inbounds i8,i8*%a5,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32%a6,i32*%a8,align 4
store i8*%a5,i8**%e,align 8
call void@llvm.memset.p0i8.i32(i8*%a5,i8 0,i32%S,i1 false)
%a9=icmp eq i32%aT,0
%ba=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bb=sext i32%z to i64
%bc=getelementptr inbounds i8,i8*%a5,i64%bb
br i1%a9,label%bd,label%be
bd:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bc,i8*%ba,i32%aY,i1 false)
br label%bg
be:
%bf=bitcast i8*%bc to i8**
store i8*%ba,i8**%bf,align 8
br label%bg
bg:
%bh=icmp eq i32%a4,0
%bi=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bj=sext i32%D to i64
%bk=getelementptr inbounds i8,i8*%a5,i64%bj
br i1%bh,label%bl,label%bm
bl:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bk,i8*%bi,i32%a1,i1 false)
br label%bo
bm:
%bn=bitcast i8*%bk to i8**
store i8*%bi,i8**%bn,align 8
br label%bo
bo:
%bp=sext i32%G to i64
%bq=getelementptr inbounds i8,i8*%a5,i64%bp
%br=bitcast i8*%bq to i32*
store i32%R,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=load i8*,i8**%g,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%e,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
ret i8*%bs
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1353(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 12
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=shl i32%q,1
%s=or i32%r,1
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%m,i64 16
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%w,%B
%D=add i32%C,%y
%E=sub i32 0,%B
%F=and i32%D,%E
%G=icmp eq i32%q,0
br i1%G,label%N,label%H
H:
%I=load i8*,i8**%c,align 8
%J=sext i32%F to i64
%K=getelementptr inbounds i8,i8*%I,i64%J
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
br label%U
N:
%O=call i8*@sml_alloc(i32 inreg%B)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32%B,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=sext i32%F to i64
%T=getelementptr inbounds i8,i8*%R,i64%S
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%O,i8*%T,i32%B,i1 false)
br label%U
U:
%V=phi i8*[%O,%N],[%M,%H]
store i8*%V,i8**%d,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%f,align 8
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
%ag=getelementptr inbounds i8,i8*%ac,i64 12
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=getelementptr inbounds i8,i8*%ac,i64 20
%ak=bitcast i8*%aj to i32*
%al=load i32,i32*%ak,align 4
%am=getelementptr inbounds i8,i8*%ac,i64 24
%an=bitcast i8*%am to i32*
%ao=load i32,i32*%an,align 4
%ap=getelementptr inbounds i8,i8*%ac,i64 28
%aq=bitcast i8*%ap to i32*
%ar=load i32,i32*%aq,align 4
%as=call i8*@sml_alloc(i32 inreg 44)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177320,i32*%au,align 4
store i8*%as,i8**%g,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=icmp eq i32%ai,0
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
br i1%ax,label%aA,label%aB
aA:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%az,i8*%ay,i32%af,i1 false)
br label%aD
aB:
%aC=bitcast i8*%az to i8**
store i8*%ay,i8**%aC,align 8
br label%aD
aD:
%aE=getelementptr inbounds i8,i8*%as,i64 16
%aF=bitcast i8*%aE to i32*
store i32%ai,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%as,i64 20
%aH=bitcast i8*%aG to i32*
store i32%af,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%as,i64 24
%aJ=bitcast i8*%aI to i32*
store i32%al,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%as,i64 28
%aL=bitcast i8*%aK to i32*
store i32%ao,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%as,i64 32
%aN=bitcast i8*%aM to i32*
store i32%ar,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%as,i64 40
%aP=bitcast i8*%aO to i32*
store i32%s,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 28)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177304,i32*%aS,align 4
%aT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1352 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1352 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 24
%a0=bitcast i8*%aZ to i32*
store i32 -2147483647,i32*%a0,align 4
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=call fastcc i8*%Z(i8*inreg%a1,i8*inreg%aQ)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=bitcast i8**%e to i8***
%a9=load i8**,i8***%a8,align 8
%ba=load i8*,i8**%a9,align 8
%bb=tail call fastcc i8*%a5(i8*inreg%a7,i8*inreg%ba)
ret i8*%bb
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1354(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%g,align 8
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=load i8*,i8**%e,align 8
%G=bitcast i8*%F to i32*
%H=load i32,i32*%G,align 4
%I=getelementptr inbounds i8,i8*%F,i64 4
%J=bitcast i8*%I to i32*
%K=load i32,i32*%J,align 4
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=getelementptr inbounds i8,i8*%F,i64 12
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=getelementptr inbounds i8,i8*%F,i64 16
%S=bitcast i8*%R to i32*
%T=load i32,i32*%S,align 4
store i8*null,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%F,i64 20
%V=bitcast i8*%U to i32*
%W=load i32,i32*%V,align 4
%X=call i8*@sml_alloc(i32 inreg 36)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177312,i32*%Z,align 4
store i8*%X,i8**%e,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to i32*
store i32%H,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%X,i64 12
%af=bitcast i8*%ae to i32*
store i32%K,i32*%af,align 4
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32%N,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%X,i64 20
%aj=bitcast i8*%ai to i32*
store i32%Q,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%X,i64 24
%al=bitcast i8*%ak to i32*
store i32%T,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%X,i64 28
%an=bitcast i8*%am to i32*
store i32%W,i32*%an,align 4
%ao=getelementptr inbounds i8,i8*%X,i64 32
%ap=bitcast i8*%ao to i32*
store i32 1,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 28)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177304,i32*%as,align 4
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1353 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1353 to void(...)*),void(...)**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 24
%aA=bitcast i8*%az to i32*
store i32 -2147483647,i32*%aA,align 4
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=call fastcc i8*%C(i8*inreg%aB,i8*inreg%aq)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aJ=call fastcc i8*%aF(i8*inreg%aH,i8*inreg%aI)
%aK=load i8*,i8**%g,align 8
%aL=tail call fastcc i8*%w(i8*inreg%aK,i8*inreg%aJ)
ret i8*%aL
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24prodE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f,i32 inreg%g,i32 inreg%h)#4 gc"smlsharp"{
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
%j=call i8*@sml_alloc(i32 inreg 28)#0
%k=bitcast i8*%j to i32*
%l=getelementptr inbounds i8,i8*%j,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
store i8*%j,i8**%i,align 8
store i32%b,i32*%k,align 4
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
store i32%c,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i32*
store i32%d,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%j,i64 12
%s=bitcast i8*%r to i32*
store i32%f,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%j,i64 16
%u=bitcast i8*%t to i32*
store i32%g,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%j,i64 20
%w=bitcast i8*%v to i32*
store i32%h,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%j,i64 24
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%i,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1354 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1354 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1357(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%a,%m]
%n=phi i8*[%i,%h],[%b,%m]
%o=bitcast i8*%l to i8**
%p=getelementptr inbounds i8,i8*%l,i64 12
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=add i32%r,7
%t=sub i32 0,%r
%u=and i32%s,%t
%v=add i32%s,%u
%w=and i32%v,-8
%x=lshr i32%u,3
%y=getelementptr inbounds i8,i8*%l,i64 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=shl i32%A,%x
%C=or i32%B,1
%D=or i32%w,4
%E=bitcast i8*%n to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%d,align 8
%G=load i8*,i8**%o,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%n,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%J(i8*inreg%L,i8*inreg%O)
store i8*%P,i8**%e,align 8
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 12
%S=bitcast i8*%R to i32*
%T=load i32,i32*%S,align 4
store i8*null,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%Q,i64 8
%V=bitcast i8*%U to i32*
%W=load i32,i32*%V,align 4
%X=call i8*@sml_alloc(i32 inreg%D)#0
%Y=or i32%w,1342177280
%Z=getelementptr inbounds i8,i8*%X,i64 -4
%aa=bitcast i8*%Z to i32*
store i32%Y,i32*%aa,align 4
call void@llvm.memset.p0i8.i32(i8*%X,i8 0,i32%D,i1 false)
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%X to i8**
store i8*%ab,i8**%ac,align 8
%ad=icmp eq i32%W,0
%ae=load i8*,i8**%e,align 8
%af=sext i32%u to i64
%ag=getelementptr inbounds i8,i8*%X,i64%af
br i1%ad,label%ah,label%ai
ah:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ag,i8*%ae,i32%T,i1 false)
br label%ak
ai:
%aj=bitcast i8*%ag to i8**
store i8*%ae,i8**%aj,align 8
br label%ak
ak:
%al=sext i32%w to i64
%am=getelementptr inbounds i8,i8*%X,i64%al
%an=bitcast i8*%am to i32*
store i32%C,i32*%an,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1358(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 32
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=add i32%j,-1
%l=sub i32 0,%j
%m=and i32%k,%l
%n=getelementptr inbounds i8,i8*%a,i64 28
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=add i32%k,%p
%r=add i32%q,%m
%s=sub i32 0,%p
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%a,i64 20
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%w,-1
%y=sub i32 0,%w
%z=and i32%x,%y
%A=add i32%p,-1
%B=add i32%A,%w
%C=add i32%B,%z
%D=and i32%C,%s
%E=add i32%p,7
%F=add i32%E,%D
%G=and i32%F,-8
%H=lshr i32%D,3
%I=lshr i32%z,3
%J=sub nsw i32%H,%I
%K=getelementptr inbounds i8,i8*%a,i64 24
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=shl i32%M,%J
%O=getelementptr inbounds i8,i8*%a,i64 16
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=or i32%N,%Q
%S=or i32%G,4
%T=icmp eq i32%M,0
br i1%T,label%aa,label%U
U:
%V=bitcast i8*%a to i8**
%W=sext i32%t to i64
%X=getelementptr inbounds i8,i8*%b,i64%W
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
br label%aj
aa:
%ab=call i8*@sml_alloc(i32 inreg%p)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32%p,i32*%ad,align 4
%ae=load i8*,i8**%c,align 8
%af=sext i32%t to i64
%ag=getelementptr inbounds i8,i8*%ae,i64%af
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ab,i8*%ag,i32%p,i1 false)
%ah=bitcast i8**%e to i8***
%ai=load i8**,i8***%ah,align 8
br label%aj
aj:
%ak=phi i8**[%ai,%aa],[%V,%U]
%al=phi i8*[%ab,%aa],[%Z,%U]
store i8*%al,i8**%d,align 8
%am=load i8*,i8**%ak,align 8
store i8*%am,i8**%f,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%g,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i32*
%aA=load i32,i32*%az,align 4
%aB=icmp eq i32%aA,0
br i1%aB,label%aG,label%aC
aC:
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
br label%aS
aG:
%aH=getelementptr inbounds i8,i8*%ax,i64 20
%aI=bitcast i8*%aH to i32*
%aJ=load i32,i32*%aI,align 4
%aK=call i8*@sml_alloc(i32 inreg%aJ)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32%aJ,i32*%aM,align 4
%aN=load i8*,i8**%e,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 8
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aK,i8*%aO,i32%aJ,i1 false)
%aP=getelementptr inbounds i8,i8*%aN,i64 16
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
br label%aS
aS:
%aT=phi i32[%aR,%aG],[%aA,%aC]
%aU=phi i8*[%aN,%aG],[%ax,%aC]
%aV=phi i8*[%aK,%aG],[%aF,%aC]
store i8*%aV,i8**%c,align 8
%aW=getelementptr inbounds i8,i8*%aU,i64 20
%aX=bitcast i8*%aW to i32*
%aY=load i32,i32*%aX,align 4
%aZ=getelementptr inbounds i8,i8*%aU,i64 28
%a0=bitcast i8*%aZ to i32*
%a1=load i32,i32*%a0,align 4
store i8*null,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 24
%a3=bitcast i8*%a2 to i32*
%a4=load i32,i32*%a3,align 4
%a5=call i8*@sml_alloc(i32 inreg%S)#0
%a6=or i32%G,1342177280
%a7=getelementptr inbounds i8,i8*%a5,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32%a6,i32*%a8,align 4
store i8*%a5,i8**%e,align 8
call void@llvm.memset.p0i8.i32(i8*%a5,i8 0,i32%S,i1 false)
%a9=icmp eq i32%aT,0
%ba=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bb=sext i32%z to i64
%bc=getelementptr inbounds i8,i8*%a5,i64%bb
br i1%a9,label%bd,label%be
bd:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bc,i8*%ba,i32%aY,i1 false)
br label%bg
be:
%bf=bitcast i8*%bc to i8**
store i8*%ba,i8**%bf,align 8
br label%bg
bg:
%bh=icmp eq i32%a4,0
%bi=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bj=sext i32%D to i64
%bk=getelementptr inbounds i8,i8*%a5,i64%bj
br i1%bh,label%bl,label%bm
bl:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bk,i8*%bi,i32%a1,i1 false)
br label%bo
bm:
%bn=bitcast i8*%bk to i8**
store i8*%bi,i8**%bn,align 8
br label%bo
bo:
%bp=sext i32%G to i64
%bq=getelementptr inbounds i8,i8*%a5,i64%bp
%br=bitcast i8*%bq to i32*
store i32%R,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=load i8*,i8**%g,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%e,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
ret i8*%bs
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1359(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=shl i32%q,1
%s=or i32%r,1
%t=getelementptr inbounds i8,i8*%m,i64 24
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=getelementptr inbounds i8,i8*%m,i64 12
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=add i32%w,%B
%D=add i32%C,%y
%E=sub i32 0,%B
%F=and i32%D,%E
%G=icmp eq i32%q,0
br i1%G,label%N,label%H
H:
%I=load i8*,i8**%c,align 8
%J=sext i32%F to i64
%K=getelementptr inbounds i8,i8*%I,i64%J
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
br label%U
N:
%O=call i8*@sml_alloc(i32 inreg%B)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32%B,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=sext i32%F to i64
%T=getelementptr inbounds i8,i8*%R,i64%S
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%O,i8*%T,i32%B,i1 false)
br label%U
U:
%V=phi i8*[%O,%N],[%M,%H]
store i8*%V,i8**%d,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%f,align 8
%ac=load i8*,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 12
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
%ag=getelementptr inbounds i8,i8*%ac,i64 8
%ah=bitcast i8*%ag to i32*
%ai=load i32,i32*%ah,align 4
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
%al=load i32,i32*%ak,align 4
%am=getelementptr inbounds i8,i8*%ac,i64 20
%an=bitcast i8*%am to i32*
%ao=load i32,i32*%an,align 4
%ap=getelementptr inbounds i8,i8*%ac,i64 28
%aq=bitcast i8*%ap to i32*
%ar=load i32,i32*%aq,align 4
%as=call i8*@sml_alloc(i32 inreg 44)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177320,i32*%au,align 4
store i8*%as,i8**%g,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=icmp eq i32%ai,0
%ay=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
br i1%ax,label%aA,label%aB
aA:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%az,i8*%ay,i32%af,i1 false)
br label%aD
aB:
%aC=bitcast i8*%az to i8**
store i8*%ay,i8**%aC,align 8
br label%aD
aD:
%aE=getelementptr inbounds i8,i8*%as,i64 16
%aF=bitcast i8*%aE to i32*
store i32%ai,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%as,i64 20
%aH=bitcast i8*%aG to i32*
store i32%af,i32*%aH,align 4
%aI=getelementptr inbounds i8,i8*%as,i64 24
%aJ=bitcast i8*%aI to i32*
store i32%al,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%as,i64 28
%aL=bitcast i8*%aK to i32*
store i32%ao,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%as,i64 32
%aN=bitcast i8*%aM to i32*
store i32%ar,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%as,i64 40
%aP=bitcast i8*%aO to i32*
store i32%s,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 28)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177304,i32*%aS,align 4
%aT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1358 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1358 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 24
%a0=bitcast i8*%aZ to i32*
store i32 -2147483647,i32*%a0,align 4
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=call fastcc i8*%Z(i8*inreg%a1,i8*inreg%aQ)
%a3=getelementptr inbounds i8,i8*%a2,i64 16
%a4=bitcast i8*%a3 to i8*(i8*,i8*)**
%a5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a4,align 8
%a6=bitcast i8*%a2 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=bitcast i8**%e to i8***
%a9=load i8**,i8***%a8,align 8
%ba=load i8*,i8**%a9,align 8
%bb=tail call fastcc i8*%a5(i8*inreg%a7,i8*inreg%ba)
ret i8*%bb
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1360(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=bitcast i8**%e to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=bitcast i8**%B to i8*
%E=getelementptr inbounds i8*,i8**%B,i64 3
%F=bitcast i8**%E to i32*
%G=load i32,i32*%F,align 4
%H=getelementptr inbounds i8,i8*%D,i64 28
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%h,align 8
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32%G,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%K,i64 12
%S=bitcast i8*%R to i32*
store i32%J,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1357 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1357 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=call fastcc i8*%x(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%h,align 8
%an=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%g,align 8
%at=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=load i8*,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=getelementptr inbounds i8,i8*%az,i64 12
%aE=bitcast i8*%aD to i32*
%aF=load i32,i32*%aE,align 4
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to i32*
%aI=load i32,i32*%aH,align 4
%aJ=getelementptr inbounds i8,i8*%az,i64 20
%aK=bitcast i8*%aJ to i32*
%aL=load i32,i32*%aK,align 4
%aM=getelementptr inbounds i8,i8*%az,i64 32
%aN=bitcast i8*%aM to i32*
%aO=load i32,i32*%aN,align 4
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%az,i64 36
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=call i8*@sml_alloc(i32 inreg 36)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177312,i32*%aU,align 4
store i8*%aS,i8**%e,align 8
%aV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to i32*
store i32%aC,i32*%aY,align 4
%aZ=getelementptr inbounds i8,i8*%aS,i64 12
%a0=bitcast i8*%aZ to i32*
store i32%aF,i32*%a0,align 4
%a1=getelementptr inbounds i8,i8*%aS,i64 16
%a2=bitcast i8*%a1 to i32*
store i32%aI,i32*%a2,align 4
%a3=getelementptr inbounds i8,i8*%aS,i64 20
%a4=bitcast i8*%a3 to i32*
store i32%aL,i32*%a4,align 4
%a5=getelementptr inbounds i8,i8*%aS,i64 24
%a6=bitcast i8*%a5 to i32*
store i32%aO,i32*%a6,align 4
%a7=getelementptr inbounds i8,i8*%aS,i64 28
%a8=bitcast i8*%a7 to i32*
store i32%aR,i32*%a8,align 4
%a9=getelementptr inbounds i8,i8*%aS,i64 32
%ba=bitcast i8*%a9 to i32*
store i32 1,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
%be=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1359 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1359 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 24
%bl=bitcast i8*%bk to i32*
store i32 -2147483647,i32*%bl,align 4
%bm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bn=call fastcc i8*%aw(i8*inreg%bm,i8*inreg%bb)
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=call fastcc i8*%bq(i8*inreg%bs,i8*inreg%bt)
%bv=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bw=call fastcc i8*%aq(i8*inreg%bv,i8*inreg%bu)
%bx=load i8*,i8**%h,align 8
%by=tail call fastcc i8*%ak(i8*inreg%bx,i8*inreg%bw)
ret i8*%by
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1361(i8*inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e)#4 gc"smlsharp"{
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%f,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=getelementptr inbounds i8,i8*%a,i64 16
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=getelementptr inbounds i8,i8*%a,i64 20
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=getelementptr inbounds i8,i8*%a,i64 24
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%a,i64 28
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=call i8*@sml_alloc(i32 inreg 44)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177320,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32%l,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%B,i64 12
%J=bitcast i8*%I to i32*
store i32%o,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32%r,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%B,i64 20
%N=bitcast i8*%M to i32*
store i32%u,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%B,i64 24
%P=bitcast i8*%O to i32*
store i32%x,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%B,i64 28
%R=bitcast i8*%Q to i32*
store i32%A,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%B,i64 32
%T=bitcast i8*%S to i32*
store i32%c,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%B,i64 36
%V=bitcast i8*%U to i32*
store i32%e,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%B,i64 40
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%g,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1360 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1360 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1362(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%j,i64 16
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
store i8*null,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%j,i64 20
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1361(i8*inreg%m,i32 inreg%p,i32 inreg%s,i32 inreg%v,i32 inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%c,align 8
%G=tail call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
ret i8*%G
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1363(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i32*
%g=load i32,i32*%f,align 4
%h=getelementptr inbounds i8,i8*%a,i64 4
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 8
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 12
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%a,i64 16
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%a,i64 20
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=call i8*@sml_alloc(i32 inreg 36)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177312,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32%g,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%w,i64 12
%E=bitcast i8*%D to i32*
store i32%j,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32%m,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%w,i64 20
%I=bitcast i8*%H to i32*
store i32%p,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%w,i64 24
%K=bitcast i8*%J to i32*
store i32%s,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%w,i64 28
%M=bitcast i8*%L to i32*
store i32%v,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%w,i64 32
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 28)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177304,i32*%R,align 4
%S=load i8*,i8**%e,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i32,i32,i32,i32)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1361 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1891 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%P,i64 24
%Z=bitcast i8*%Y to i32*
store i32 -2147483647,i32*%Z,align 4
%aa=load i8*,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 24
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=getelementptr inbounds i8,i8*%aa,i64 28
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
%ah=getelementptr inbounds i8,i8*%aa,i64 32
%ai=bitcast i8*%ah to i32*
%aj=load i32,i32*%ai,align 4
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%aa,i64 36
%al=bitcast i8*%ak to i32*
%am=load i32,i32*%al,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
store i8*%an,i8**%c,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i32*
store i32%ad,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%an,i64 12
%av=bitcast i8*%au to i32*
store i32%ag,i32*%av,align 4
%aw=getelementptr inbounds i8,i8*%an,i64 16
%ax=bitcast i8*%aw to i32*
store i32%aj,i32*%ax,align 4
%ay=getelementptr inbounds i8,i8*%an,i64 20
%az=bitcast i8*%ay to i32*
store i32%am,i32*%az,align 4
%aA=getelementptr inbounds i8,i8*%an,i64 24
%aB=bitcast i8*%aA to i32*
store i32 1,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%c,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1362 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1362 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 24
%aM=bitcast i8*%aL to i32*
store i32 -2147483647,i32*%aM,align 4
ret i8*%aC
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24joinE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d,i32 inreg%e,i32 inreg%f,i32 inreg%g,i32 inreg%h,i32 inreg%i,i32 inreg%j)#4 gc"smlsharp"{
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%k,i8*null)#0
%l=call i8*@sml_alloc(i32 inreg 44)#0
%m=bitcast i8*%l to i32*
%n=getelementptr inbounds i8,i8*%l,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177320,i32*%o,align 4
store i8*%l,i8**%k,align 8
store i32%a,i32*%m,align 4
%p=getelementptr inbounds i8,i8*%l,i64 4
%q=bitcast i8*%p to i32*
store i32%b,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i32*
store i32%c,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%l,i64 12
%u=bitcast i8*%t to i32*
store i32%d,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%l,i64 16
%w=bitcast i8*%v to i32*
store i32%e,i32*%w,align 4
%x=getelementptr inbounds i8,i8*%l,i64 20
%y=bitcast i8*%x to i32*
store i32%f,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%l,i64 24
%A=bitcast i8*%z to i32*
store i32%g,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%l,i64 28
%C=bitcast i8*%B to i32*
store i32%h,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%l,i64 32
%E=bitcast i8*%D to i32*
store i32%i,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%l,i64 36
%G=bitcast i8*%F to i32*
store i32%j,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%l,i64 40
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
%M=load i8*,i8**%k,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1363 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1363 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 24
%T=bitcast i8*%S to i32*
store i32 -2147483647,i32*%T,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1366(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%k,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_513(i32 inreg%p,i32 inreg%s,i8*inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1367(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32%f,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%j,i64 12
%r=bitcast i8*%q to i32*
store i32%i,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 1,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1366 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1366 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List23nubE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1367 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1367 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLL5merge_1370(i8*inreg%a,i8*inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%e,align 8
%p=load i8*,i8**%f,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%c,%s]
%t=phi i8*[%o,%n],[%b,%s]
%u=icmp eq i8*%t,null
br i1%u,label%v,label%z
v:
%w=icmp eq i8*%r,null
br i1%w,label%br,label%x
x:
%y=phi i8*[%r,%v],[%t,%br]
ret i8*%y
z:
%A=bitcast i8*%t to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=getelementptr inbounds i8,i8*%t,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=icmp eq i8*%r,null
br i1%F,label%br,label%G
G:
%H=bitcast i8*%r to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%i,align 8
%J=getelementptr inbounds i8,i8*%r,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%j,align 8
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%k,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%g,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%i,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ad=call fastcc i8*%P(i8*inreg%ac,i8*inreg%S)
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
switch i32%af,label%ag[
i32 0,label%a2
i32 1,label%aN
i32 2,label%ay
]
ag:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
call void@sml_matchcomp_bug()
%ah=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ah,i8**%d,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%e,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[39x i8]}>,<{[4x i8],i32,[39x i8]}>*@ib,i64 0,i32 2,i64 0),i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 60)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177336,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%ar,i64 56
%av=bitcast i8*%au to i32*
store i32 1,i32*%av,align 4
%aw=load i8*,i8**%e,align 8
%ax=bitcast i8*%ar to i8**
store i8*%aw,i8**%ax,align 8
call void@sml_raise(i8*inreg%ar)#1
unreachable
ay:
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
%az=load i8*,i8**%d,align 8
%aA=load i8*,i8**%f,align 8
%aB=load i8*,i8**%h,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
%aC=call fastcc i8*@_SMLLL5merge_1370(i8*inreg%az,i8*inreg%aB,i8*inreg%aA)
store i8*%aC,i8**%d,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%g,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
ret i8*%aD
aN:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
%aO=load i8*,i8**%d,align 8
%aP=load i8*,i8**%e,align 8
%aQ=load i8*,i8**%j,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%j,align 8
%aR=call fastcc i8*@_SMLLL5merge_1370(i8*inreg%aO,i8*inreg%aP,i8*inreg%aQ)
store i8*%aR,i8**%d,align 8
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=load i8*,i8**%i,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%d,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aS,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
ret i8*%aS
a2:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%a3=load i8*,i8**%d,align 8
%a4=load i8*,i8**%h,align 8
%a5=load i8*,i8**%j,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
%a6=call fastcc i8*@_SMLLL5merge_1370(i8*inreg%a3,i8*inreg%a4,i8*inreg%a5)
store i8*%a6,i8**%d,align 8
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
store i8*%a7,i8**%e,align 8
%ba=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bd=getelementptr inbounds i8,i8*%a7,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a7,i64 16
%bg=bitcast i8*%bf to i32*
store i32 3,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
%bk=load i8*,i8**%g,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=load i8*,i8**%e,align 8
%bn=getelementptr inbounds i8,i8*%bh,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bh,i64 16
%bq=bitcast i8*%bp to i32*
store i32 3,i32*%bq,align 4
ret i8*%bh
br:
br label%x
}
define internal fastcc i8*@_SMLLL10mergeLists_1374(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=icmp eq i8*%k,null
br i1%m,label%n,label%o
n:
ret i8*null
o:
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%v,label%F
v:
store i8*null,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*null,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
ret i8*%w
F:
%G=bitcast i8*%t to i8**
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%t,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%e,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*@_SMLLL5merge_1370(i8*inreg%L,i8*inreg%q,i8*inreg%H)
store i8*%M,i8**%d,align 8
%N=load i8*,i8**%c,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%e,align 8
%P=call fastcc i8*@_SMLLL10mergeLists_1374(i8*inreg%N,i8*inreg%O)
store i8*%P,i8**%c,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%c,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1376(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=getelementptr inbounds i8,i8*%a,i64 4
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=add i32%g,%l
%n=add i32%m,%i
%o=sub i32 0,%l
%p=and i32%n,%o
%q=bitcast i8*%a to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%y,label%t
t:
%u=sext i32%p to i64
%v=getelementptr inbounds i8,i8*%b,i64%u
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
y:
%z=call i8*@sml_alloc(i32 inreg%l)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32%l,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%p to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%E,i32%l,i1 false)
ret i8*%z
}
define internal fastcc i32@_SMLLL3cmp_1377(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%m to i8**
%q=getelementptr inbounds i8,i8*%m,i64 12
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=add i32%s,-1
%u=sub i32 0,%s
%v=and i32%t,%u
%w=shl i32%s,1
%x=add i32%w,-1
%y=add i32%x,%v
%z=and i32%y,%u
%A=add i32%s,7
%B=add i32%A,%z
%C=and i32%B,-8
%D=lshr i32%z,3
%E=lshr i32%v,3
%F=sub nsw i32%D,%E
%G=getelementptr inbounds i8,i8*%m,i64 8
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=shl i32%I,%F
%K=or i32%J,%I
%L=or i32%C,4
%M=bitcast i8*%o to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%o,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=load i8*,i8**%p,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%f,align 8
%X=icmp eq i32%I,0
br i1%X,label%ad,label%Y
Y:
store i8*null,i8**%c,align 8
%Z=sext i32%v to i64
%aa=getelementptr inbounds i8,i8*%N,i64%Z
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%c,align 8
br label%as
ad:
%ae=call i8*@sml_alloc(i32 inreg%s)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32%s,i32*%ag,align 4
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=sext i32%v to i64
%aj=getelementptr inbounds i8,i8*%ah,i64%ai
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ae,i8*%aj,i32%s,i1 false)
%ak=load i8*,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 12
%am=bitcast i8*%al to i32*
%an=load i32,i32*%am,align 4
%ao=getelementptr inbounds i8,i8*%ak,i64 8
%ap=bitcast i8*%ao to i32*
%aq=load i32,i32*%ap,align 4
store i8*%ae,i8**%c,align 8
%ar=icmp eq i32%aq,0
br i1%ar,label%aA,label%as
as:
%at=phi i32[%s,%Y],[%an,%ad]
%au=phi i32[%I,%Y],[%aq,%ad]
%av=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aw=sext i32%v to i64
%ax=getelementptr inbounds i8,i8*%av,i64%aw
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
br label%aO
aA:
%aB=call i8*@sml_alloc(i32 inreg%an)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32%an,i32*%aD,align 4
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=sext i32%v to i64
%aG=getelementptr inbounds i8,i8*%aE,i64%aF
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aB,i8*%aG,i32%an,i1 false)
%aH=load i8*,i8**%e,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 12
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=getelementptr inbounds i8,i8*%aH,i64 8
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
br label%aO
aO:
%aP=phi i1[true,%aA],[false,%as]
%aQ=phi i32[%an,%aA],[%at,%as]
%aR=phi i64[%aF,%aA],[%aw,%as]
%aS=phi i32[%aN,%aA],[%au,%as]
%aT=phi i32[%aK,%aA],[%at,%as]
%aU=phi i8*[%aB,%aA],[%az,%as]
store i8*%aU,i8**%d,align 8
store i8*null,i8**%e,align 8
%aV=call i8*@sml_alloc(i32 inreg%L)#0
%aW=or i32%C,1342177280
%aX=getelementptr inbounds i8,i8*%aV,i64 -4
%aY=bitcast i8*%aX to i32*
store i32%aW,i32*%aY,align 4
call void@llvm.memset.p0i8.i32(i8*%aV,i8 0,i32%L,i1 false)
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64%aR
br i1%aP,label%a1,label%a2
a1:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a0,i8*%aZ,i32%aQ,i1 false)
br label%a4
a2:
%a3=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a3,align 8
br label%a4
a4:
%a5=icmp eq i32%aS,0
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=sext i32%z to i64
%a8=getelementptr inbounds i8,i8*%aV,i64%a7
br i1%a5,label%a9,label%ba
a9:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a8,i8*%a6,i32%aT,i1 false)
br label%bc
ba:
%bb=bitcast i8*%a8 to i8**
store i8*%a6,i8**%bb,align 8
br label%bc
bc:
%bd=sext i32%C to i64
%be=getelementptr inbounds i8,i8*%aV,i64%bd
%bf=bitcast i8*%be to i32*
store i32%K,i32*%bf,align 4
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=call fastcc i8*%U(i8*inreg%bg,i8*inreg%aV)
%bi=bitcast i8*%bh to i32*
%bj=load i32,i32*%bi,align 4
ret i32%bj
}
define internal fastcc i8*@_SMLLL1l_1378(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%b,%m]
%n=phi i8*[%i,%h],[%a,%m]
%o=getelementptr inbounds i8,i8*%n,i64 20
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=add i32%q,-1
%s=sub i32 0,%q
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%n,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%r,%w
%y=add i32%x,%t
%z=sub i32 0,%w
%A=and i32%y,%z
%B=add i32%w,7
%C=add i32%B,%A
%D=and i32%C,-8
%E=lshr i32%A,3
%F=lshr i32%t,3
%G=sub nsw i32%E,%F
%H=getelementptr inbounds i8,i8*%n,i64 8
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=shl i32%J,%G
%L=getelementptr inbounds i8,i8*%n,i64 16
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=or i32%K,%N
%P=or i32%D,4
%Q=bitcast i8*%n to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%U(i8*inreg%W,i8*inreg%l)
store i8*%X,i8**%e,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 20
%aa=bitcast i8*%Z to i32*
%ab=load i32,i32*%aa,align 4
%ac=getelementptr inbounds i8,i8*%Y,i64 16
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=getelementptr inbounds i8,i8*%Y,i64 12
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
store i8*null,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=call i8*@sml_alloc(i32 inreg%P)#0
%am=or i32%D,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%P,i1 false)
%ap=icmp eq i32%ae,0
%aq=load i8*,i8**%e,align 8
%ar=sext i32%t to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%at,label%au
at:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%ab,i1 false)
br label%aw
au:
%av=bitcast i8*%as to i8**
store i8*%aq,i8**%av,align 8
br label%aw
aw:
%ax=icmp eq i32%ak,0
%ay=load i8*,i8**%d,align 8
%az=sext i32%A to i64
%aA=getelementptr inbounds i8,i8*%al,i64%az
br i1%ax,label%aB,label%aC
aB:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aA,i8*%ay,i32%ah,i1 false)
br label%aE
aC:
%aD=bitcast i8*%aA to i8**
store i8*%ay,i8**%aD,align 8
br label%aE
aE:
%aF=sext i32%D to i64
%aG=getelementptr inbounds i8,i8*%al,i64%aF
%aH=bitcast i8*%aG to i32*
store i32%O,i32*%aH,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1379(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=getelementptr inbounds i8,i8*%c,i64 -4
%e=bitcast i8*%d to i32*
store i32 1342177296,i32*%e,align 4
%f=load i8*,i8**%b,align 8
%g=bitcast i8*%c to i8**
store i8*%f,i8**%g,align 8
%h=getelementptr inbounds i8,i8*%c,i64 8
%i=bitcast i8*%h to i8**
store i8*null,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%c,i64 16
%k=bitcast i8*%j to i32*
store i32 3,i32*%k,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1381(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
b5:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=getelementptr inbounds i8,i8*%a,i64 16
%j=bitcast i8*%i to i32*
%k=load i32,i32*%j,align 4
%l=getelementptr inbounds i8,i8*%a,i64 20
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg%k,i32 inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=load i8*,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%u,i64 20
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
%B=getelementptr inbounds i8,i8*%u,i64 28
%C=bitcast i8*%B to i32*
%D=load i32,i32*%C,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%E,i8**%f,align 8
store i32%x,i32*%F,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32%A,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i32*
store i32%D,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 0,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1376 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1376 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=call fastcc i8*%r(i8*inreg%Z,i8*inreg%O)
store i8*%aa,i8**%d,align 8
%ab=load i8*,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%f,align 8
%af=getelementptr inbounds i8,i8*%ab,i64 24
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
%ai=getelementptr inbounds i8,i8*%ab,i64 28
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
store i8*%al,i8**%g,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to i32*
store i32%ah,i32*%ar,align 4
%as=getelementptr inbounds i8,i8*%al,i64 12
%at=bitcast i8*%as to i32*
store i32%ak,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i32*
store i32 1,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%h,align 8
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLL3cmp_1377 to void(...)*),void(...)**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 16
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3cmp_1896 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 24
%aG=bitcast i8*%aF to i32*
store i32 -2147483647,i32*%aG,align 4
%aH=load i8*,i8**%e,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i32*
%aK=load i32,i32*%aJ,align 4
%aL=getelementptr inbounds i8,i8*%aH,i64 20
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=call fastcc i8*@_SMLFN4List3mapE(i32 inreg%aK,i32 inreg%aN,i32 inreg 1,i32 inreg 8)
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%g,align 8
%aU=bitcast i8**%e to i8***
%aV=load i8**,i8***%aU,align 8
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%f,align 8
%aX=bitcast i8**%aV to i8*
%aY=getelementptr inbounds i8*,i8**%aV,i64 2
%aZ=bitcast i8**%aY to i32*
%a0=load i32,i32*%aZ,align 4
%a1=getelementptr inbounds i8,i8*%aX,i64 20
%a2=bitcast i8*%a1 to i32*
%a3=load i32,i32*%a2,align 4
%a4=getelementptr inbounds i8*,i8**%aV,i64 3
%a5=bitcast i8**%a4 to i32*
%a6=load i32,i32*%a5,align 4
store i8*null,i8**%e,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 28
%a8=bitcast i8*%a7 to i32*
%a9=load i32,i32*%a8,align 4
%ba=call i8*@sml_alloc(i32 inreg 28)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177304,i32*%bc,align 4
store i8*%ba,i8**%e,align 8
%bd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to i32*
store i32%a0,i32*%bg,align 4
%bh=getelementptr inbounds i8,i8*%ba,i64 12
%bi=bitcast i8*%bh to i32*
store i32%a3,i32*%bi,align 4
%bj=getelementptr inbounds i8,i8*%ba,i64 16
%bk=bitcast i8*%bj to i32*
store i32%a6,i32*%bk,align 4
%bl=getelementptr inbounds i8,i8*%ba,i64 20
%bm=bitcast i8*%bl to i32*
store i32%a9,i32*%bm,align 4
%bn=getelementptr inbounds i8,i8*%ba,i64 24
%bo=bitcast i8*%bn to i32*
store i32 1,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 28)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177304,i32*%br,align 4
%bs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1l_1378 to void(...)*),void(...)**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bp,i64 16
%bx=bitcast i8*%bw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1l_1378 to void(...)*),void(...)**%bx,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 24
%bz=bitcast i8*%by to i32*
store i32 1,i32*%bz,align 4
%bA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bB=call fastcc i8*%aR(i8*inreg%bA,i8*inreg%bp)
%bC=getelementptr inbounds i8,i8*%bB,i64 16
%bD=bitcast i8*%bC to i8*(i8*,i8*)**
%bE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bD,align 8
%bF=bitcast i8*%bB to i8**
%bG=load i8*,i8**%bF,align 8
%bH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bI=call fastcc i8*%bE(i8*inreg%bG,i8*inreg%bH)
store i8*%bI,i8**%c,align 8
%bJ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8*(i8*,i8*)**
%bM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bL,align 8
%bN=bitcast i8*%bJ to i8**
%bO=load i8*,i8**%bN,align 8
%bP=call fastcc i8*%bM(i8*inreg%bO,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ic,i64 0,i32 2)to i8*))
%bQ=getelementptr inbounds i8,i8*%bP,i64 16
%bR=bitcast i8*%bQ to i8*(i8*,i8*)**
%bS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bR,align 8
%bT=bitcast i8*%bP to i8**
%bU=load i8*,i8**%bT,align 8
%bV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bW=call fastcc i8*%bS(i8*inreg%bU,i8*inreg%bV)
%bX=load i8*,i8**%d,align 8
%bY=getelementptr inbounds i8,i8*%bX,i64 16
%bZ=bitcast i8*%bY to i8*(i8*,i8*)**
%b0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bZ,align 8
%b1=bitcast i8*%bX to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%d,align 8
br label%b3
b3:
%b4=phi i8*[%cm,%ck],[%bW,%b5]
store i8*%b4,i8**%c,align 8
%b6=load atomic i32,i32*@sml_check_flag unordered,align 4
%b7=icmp eq i32%b6,0
br i1%b7,label%ca,label%b8
b8:
call void@sml_check(i32 inreg%b6)
%b9=load i8*,i8**%c,align 8
br label%ca
ca:
%cb=phi i8*[%b9,%b8],[%b4,%b3]
%cc=icmp eq i8*%cb,null
br i1%cc,label%cn,label%cd
cd:
%ce=bitcast i8*%cb to i8**
%cf=load i8*,i8**%ce,align 8
%cg=getelementptr inbounds i8,i8*%cb,i64 8
%ch=bitcast i8*%cg to i8**
%ci=load i8*,i8**%ch,align 8
%cj=icmp eq i8*%ci,null
br i1%cj,label%cn,label%ck
ck:
%cl=load i8*,i8**%h,align 8
store i8*null,i8**%c,align 8
%cm=call fastcc i8*@_SMLLL10mergeLists_1374(i8*inreg%cl,i8*inreg%cb)
br label%b3
cn:
%co=phi i8*[null,%ca],[%cf,%cd]
%cp=load i8*,i8**%d,align 8
%cq=tail call fastcc i8*%b0(i8*inreg%cp,i8*inreg%co)
ret i8*%cq
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1382(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 12
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%a,i64 20
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=call i8*@sml_alloc(i32 inreg 36)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177312,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32%j,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%t,i64 20
%E=bitcast i8*%D to i32*
store i32%m,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%t,i64 24
%G=bitcast i8*%F to i32*
store i32%p,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%t,i64 28
%I=bitcast i8*%H to i32*
store i32%s,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%t,i64 32
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1381 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1381 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1383(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1382 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1382 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1383 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1383 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i32@_SMLLL4quot_1389(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%j],[%a,%h]
%p=phi i8**[%l,%j],[%i,%h]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%o,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=call fastcc i8*%t(i8*inreg%J,i8*inreg%z)
%L=bitcast i8*%K to i32*
%M=load i32,i32*%L,align 4
%N=icmp eq i32%M,0
%O=zext i1%N to i32
ret i32%O
}
define internal fastcc i8*@_SMLLL4quot_1386(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=icmp eq i8*%m,null
br i1%o,label%p,label%q
p:
ret i8*null
q:
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=call fastcc i8*@_SMLFN4List9partitionE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%g,align 8
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLL4quot_1389 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4quot_1899 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%z(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=call fastcc i8*@_SMLLL4quot_1386(i8*inreg%al,i8*inreg%ak)
store i8*%am,i8**%c,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%f,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%f,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
ret i8*%ax
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1390(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 8
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=getelementptr inbounds i8,i8*%a,i64 4
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=add i32%g,%l
%n=add i32%m,%i
%o=sub i32 0,%l
%p=and i32%n,%o
%q=bitcast i8*%a to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%y,label%t
t:
%u=sext i32%p to i64
%v=getelementptr inbounds i8,i8*%b,i64%u
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
y:
%z=call i8*@sml_alloc(i32 inreg%l)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32%l,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%p to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%E,i32%l,i1 false)
ret i8*%z
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1391(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%b to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%d,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%n to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%b,%i]
%r=phi i8**[%n,%k],[%j,%i]
%s=phi i8*[%l,%k],[%a,%i]
%t=getelementptr inbounds i8,i8*%s,i64 12
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,-1
%x=sub i32 0,%v
%y=and i32%w,%x
%z=shl i32%v,1
%A=add i32%z,-1
%B=add i32%A,%y
%C=and i32%B,%x
%D=add i32%v,7
%E=add i32%D,%C
%F=and i32%E,-8
%G=lshr i32%C,3
%H=lshr i32%y,3
%I=sub nsw i32%G,%H
%J=getelementptr inbounds i8,i8*%s,i64 8
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=shl i32%L,%I
%N=or i32%M,%L
%O=or i32%F,4
%P=bitcast i8*%s to i8**
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=load i8*,i8**%r,align 8
store i8*%W,i8**%e,align 8
%X=icmp eq i32%L,0
br i1%X,label%ag,label%Y
Y:
store i8*null,i8**%e,align 8
%Z=sext i32%y to i64
%aa=getelementptr inbounds i8,i8*%W,i64%Z
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%q,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%c,align 8
br label%az
ag:
%ah=call i8*@sml_alloc(i32 inreg%v)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32%v,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=sext i32%y to i64
%am=getelementptr inbounds i8,i8*%ak,i64%al
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ah,i8*%am,i32%v,i1 false)
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 12
%ap=bitcast i8*%ao to i32*
%aq=load i32,i32*%ap,align 4
%ar=getelementptr inbounds i8,i8*%an,i64 8
%as=bitcast i8*%ar to i32*
%at=load i32,i32*%as,align 4
%au=load i8*,i8**%c,align 8
store i8*%ah,i8**%e,align 8
%av=getelementptr inbounds i8,i8*%au,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%c,align 8
%ay=icmp eq i32%at,0
br i1%ay,label%aH,label%az
az:
%aA=phi i8*[%af,%Y],[%ax,%ag]
%aB=phi i32[%v,%Y],[%aq,%ag]
%aC=phi i32[%L,%Y],[%at,%ag]
store i8*null,i8**%c,align 8
%aD=sext i32%y to i64
%aE=getelementptr inbounds i8,i8*%aA,i64%aD
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
br label%aV
aH:
%aI=call i8*@sml_alloc(i32 inreg%aq)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32%aq,i32*%aK,align 4
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=sext i32%y to i64
%aN=getelementptr inbounds i8,i8*%aL,i64%aM
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aI,i8*%aN,i32%aq,i1 false)
%aO=load i8*,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 12
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=getelementptr inbounds i8,i8*%aO,i64 8
%aT=bitcast i8*%aS to i32*
%aU=load i32,i32*%aT,align 4
br label%aV
aV:
%aW=phi i1[true,%aH],[false,%az]
%aX=phi i32[%aq,%aH],[%aB,%az]
%aY=phi i64[%aM,%aH],[%aD,%az]
%aZ=phi i32[%aU,%aH],[%aC,%az]
%a0=phi i32[%aR,%aH],[%aB,%az]
%a1=phi i8*[%aI,%aH],[%aG,%az]
store i8*%a1,i8**%c,align 8
store i8*null,i8**%d,align 8
%a2=call i8*@sml_alloc(i32 inreg%O)#0
%a3=or i32%F,1342177280
%a4=getelementptr inbounds i8,i8*%a2,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32%a3,i32*%a5,align 4
call void@llvm.memset.p0i8.i32(i8*%a2,i8 0,i32%O,i1 false)
%a6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64%aY
br i1%aW,label%a8,label%a9
a8:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%a7,i8*%a6,i32%aX,i1 false)
br label%bb
a9:
%ba=bitcast i8*%a7 to i8**
store i8*%a6,i8**%ba,align 8
br label%bb
bb:
%bc=icmp eq i32%aZ,0
%bd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%be=sext i32%C to i64
%bf=getelementptr inbounds i8,i8*%a2,i64%be
br i1%bc,label%bg,label%bh
bg:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%bf,i8*%bd,i32%a0,i1 false)
br label%bj
bh:
%bi=bitcast i8*%bf to i8**
store i8*%bd,i8**%bi,align 8
br label%bj
bj:
%bk=sext i32%F to i64
%bl=getelementptr inbounds i8,i8*%a2,i64%bk
%bm=bitcast i8*%bl to i32*
store i32%N,i32*%bm,align 4
%bn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bo=call fastcc i8*%T(i8*inreg%bn,i8*inreg%a2)
%bp=bitcast i8*%bo to i32*
%bq=load i32,i32*%bp,align 4
ret i32%bq
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1392(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%k,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%h],[%b,%m]
%n=phi i8*[%i,%h],[%a,%m]
%o=getelementptr inbounds i8,i8*%n,i64 20
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=add i32%q,-1
%s=sub i32 0,%q
%t=and i32%r,%s
%u=getelementptr inbounds i8,i8*%n,i64 12
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=add i32%r,%w
%y=add i32%x,%t
%z=sub i32 0,%w
%A=and i32%y,%z
%B=add i32%w,7
%C=add i32%B,%A
%D=and i32%C,-8
%E=lshr i32%A,3
%F=lshr i32%t,3
%G=sub nsw i32%E,%F
%H=getelementptr inbounds i8,i8*%n,i64 8
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=shl i32%J,%G
%L=getelementptr inbounds i8,i8*%n,i64 16
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
%O=or i32%K,%N
%P=or i32%D,4
%Q=bitcast i8*%n to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%U(i8*inreg%W,i8*inreg%l)
store i8*%X,i8**%e,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 20
%aa=bitcast i8*%Z to i32*
%ab=load i32,i32*%aa,align 4
%ac=getelementptr inbounds i8,i8*%Y,i64 16
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=getelementptr inbounds i8,i8*%Y,i64 12
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
store i8*null,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 8
%aj=bitcast i8*%ai to i32*
%ak=load i32,i32*%aj,align 4
%al=call i8*@sml_alloc(i32 inreg%P)#0
%am=or i32%D,1342177280
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32%am,i32*%ao,align 4
call void@llvm.memset.p0i8.i32(i8*%al,i8 0,i32%P,i1 false)
%ap=icmp eq i32%ae,0
%aq=load i8*,i8**%e,align 8
%ar=sext i32%t to i64
%as=getelementptr inbounds i8,i8*%al,i64%ar
br i1%ap,label%at,label%au
at:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%as,i8*%aq,i32%ab,i1 false)
br label%aw
au:
%av=bitcast i8*%as to i8**
store i8*%aq,i8**%av,align 8
br label%aw
aw:
%ax=icmp eq i32%ak,0
%ay=load i8*,i8**%d,align 8
%az=sext i32%A to i64
%aA=getelementptr inbounds i8,i8*%al,i64%az
br i1%ax,label%aB,label%aC
aB:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%aA,i8*%ay,i32%ah,i1 false)
br label%aE
aC:
%aD=bitcast i8*%aA to i8**
store i8*%ay,i8**%aD,align 8
br label%aE
aE:
%aF=sext i32%D to i64
%aG=getelementptr inbounds i8,i8*%al,i64%aF
%aH=bitcast i8*%aG to i32*
store i32%O,i32*%aH,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1393(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%f,align 8
%s=load i8*,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%s,i64 20
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg%v,i32 inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%e,align 8
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=getelementptr inbounds i8,i8*%F,i64 20
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=getelementptr inbounds i8,i8*%F,i64 28
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%P,i8**%g,align 8
store i32%I,i32*%Q,align 4
%T=getelementptr inbounds i8,i8*%P,i64 4
%U=bitcast i8*%T to i32*
store i32%L,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i32*
store i32%O,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1390 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1390 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=call fastcc i8*%C(i8*inreg%ak,i8*inreg%Z)
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=call fastcc i8*%p(i8*inreg%am,i8*inreg%al)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%g,align 8
%at=load i8*,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%at,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
store i8*%aw,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%at,i64 24
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=getelementptr inbounds i8,i8*%at,i64 28
%aB=bitcast i8*%aA to i32*
%aC=load i32,i32*%aB,align 4
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%f,align 8
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i32*
store i32%az,i32*%aJ,align 4
%aK=getelementptr inbounds i8,i8*%aD,i64 12
%aL=bitcast i8*%aK to i32*
store i32%aC,i32*%aL,align 4
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i32*
store i32 1,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 28)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177304,i32*%aQ,align 4
store i8*%aO,i8**%h,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1391 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1901 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 24
%aY=bitcast i8*%aX to i32*
store i32 -2147483647,i32*%aY,align 4
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i32*
%a2=load i32,i32*%a1,align 4
%a3=getelementptr inbounds i8,i8*%aZ,i64 20
%a4=bitcast i8*%a3 to i32*
%a5=load i32,i32*%a4,align 4
%a6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg%a2,i32 inreg%a5,i32 inreg 1,i32 inreg 8)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%f,align 8
%bc=bitcast i8**%d to i8***
%bd=load i8**,i8***%bc,align 8
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%e,align 8
%bf=bitcast i8**%bd to i8*
%bg=getelementptr inbounds i8*,i8**%bd,i64 2
%bh=bitcast i8**%bg to i32*
%bi=load i32,i32*%bh,align 4
%bj=getelementptr inbounds i8,i8*%bf,i64 20
%bk=bitcast i8*%bj to i32*
%bl=load i32,i32*%bk,align 4
%bm=getelementptr inbounds i8*,i8**%bd,i64 3
%bn=bitcast i8**%bm to i32*
%bo=load i32,i32*%bn,align 4
store i8*null,i8**%d,align 8
%bp=getelementptr inbounds i8,i8*%bf,i64 28
%bq=bitcast i8*%bp to i32*
%br=load i32,i32*%bq,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
store i8*%bs,i8**%d,align 8
%bv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i32*
store i32%bi,i32*%by,align 4
%bz=getelementptr inbounds i8,i8*%bs,i64 12
%bA=bitcast i8*%bz to i32*
store i32%bl,i32*%bA,align 4
%bB=getelementptr inbounds i8,i8*%bs,i64 16
%bC=bitcast i8*%bB to i32*
store i32%bo,i32*%bC,align 4
%bD=getelementptr inbounds i8,i8*%bs,i64 20
%bE=bitcast i8*%bD to i32*
store i32%br,i32*%bE,align 4
%bF=getelementptr inbounds i8,i8*%bs,i64 24
%bG=bitcast i8*%bF to i32*
store i32 1,i32*%bG,align 4
%bH=call i8*@sml_alloc(i32 inreg 28)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177304,i32*%bJ,align 4
%bK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bL=bitcast i8*%bH to i8**
store i8*%bK,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bH,i64 8
%bN=bitcast i8*%bM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1392 to void(...)*),void(...)**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 16
%bP=bitcast i8*%bO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1392 to void(...)*),void(...)**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bH,i64 24
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bT=call fastcc i8*%a9(i8*inreg%bS,i8*inreg%bH)
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8*(i8*,i8*)**
%bW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bV,align 8
%bX=bitcast i8*%bT to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=call fastcc i8*%bW(i8*inreg%bY,i8*inreg%bZ)
%b1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b2=call fastcc i8*@_SMLLL4quot_1386(i8*inreg%b1,i8*inreg%b0)
%b3=load i8*,i8**%g,align 8
%b4=tail call fastcc i8*%aq(i8*inreg%b3,i8*inreg%b2)
ret i8*%b4
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1394(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 12
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%a,i64 20
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=call i8*@sml_alloc(i32 inreg 36)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177312,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32%j,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%t,i64 20
%E=bitcast i8*%D to i32*
store i32%m,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%t,i64 24
%G=bitcast i8*%F to i32*
store i32%p,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%t,i64 28
%I=bitcast i8*%H to i32*
store i32%s,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%t,i64 32
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1393 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1393 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1395(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=getelementptr inbounds i8,i8*%a,i64 4
%h=bitcast i8*%g to i32*
%i=load i32,i32*%h,align 4
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%a,i64 12
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 28)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177304,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32%f,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%p,i64 12
%x=bitcast i8*%w to i32*
store i32%i,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32%l,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%p,i64 20
%B=bitcast i8*%A to i32*
store i32%o,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%p,i64 24
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1394 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1394 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
ret i8*%E
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE(i32 inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%f,i8**%e,align 8
store i32%a,i32*%g,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32%b,i32*%k,align 4
%l=getelementptr inbounds i8,i8*%f,i64 8
%m=bitcast i8*%l to i32*
store i32%c,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%f,i64 12
%o=bitcast i8*%n to i32*
store i32%d,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%f,i64 16
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1395 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1395 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5countE_1398(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%m,i32 inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
ret i32%z
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5countE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5countE_1398 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim5countE_1903 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1401(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i32@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1403(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=getelementptr inbounds i8,i8*%k,i64 4
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
%r=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg%n,i32 inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=load i8*,i8**%d,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
store i8*null,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%x,i64 4
%B=bitcast i8*%A to i32*
%C=load i32,i32*%B,align 4
%D=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%z,i32 inreg%C)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ig,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=call fastcc i8*%u(i8*inreg%R,i8*inreg%Q)
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
ret i32%U
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12count__optionE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1403 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1906 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op8coalesceE_1406(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%b,i8**%c,align 8
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,-1
%i=sub i32 0,%g
%j=and i32%h,%i
%k=add i32%g,7
%l=and i32%k,%i
%m=bitcast i8*%b to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=icmp eq i8*%n,null
br i1%o,label%p,label%F
p:
store i8*null,i8**%d,align 8
%q=bitcast i8*%a to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%y,label%t
t:
%u=sext i32%l to i64
%v=getelementptr inbounds i8,i8*%b,i64%u
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
ret i8*%x
y:
%z=call i8*@sml_alloc(i32 inreg%g)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32%g,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=sext i32%l to i64
%E=getelementptr inbounds i8,i8*%C,i64%D
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%z,i8*%E,i32%g,i1 false)
ret i8*%z
F:
store i8*null,i8**%c,align 8
%G=bitcast i8*%a to i32*
%H=load i32,i32*%G,align 4
%I=icmp eq i32%H,0
br i1%I,label%O,label%J
J:
%K=sext i32%j to i64
%L=getelementptr inbounds i8,i8*%n,i64%K
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
ret i8*%N
O:
%P=call i8*@sml_alloc(i32 inreg%g)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32%g,i32*%R,align 4
%S=load i8*,i8**%d,align 8
%T=sext i32%j to i64
%U=getelementptr inbounds i8,i8*%S,i64%T
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%P,i8*%U,i32%g,i1 false)
ret i8*%P
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op8coalesceE_1406 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op8coalesceE_1406 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1409(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
%e=getelementptr inbounds i8,i8*%a,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,-1
%i=sub i32 0,%g
%j=and i32%h,%i
%k=add i32%g,7
%l=add i32%k,%j
%m=and i32%l,-8
%n=bitcast i8*%a to i32*
%o=load i32,i32*%n,align 4
%p=or i32%m,4
%q=bitcast i8*%b to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=icmp eq i8*%r,null
br i1%s,label%t,label%x
t:
%u=getelementptr inbounds i8,i8*%b,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
ret i8*%w
x:
%y=icmp eq i32%o,0
br i1%y,label%E,label%z
z:
store i8*null,i8**%c,align 8
%A=sext i32%j to i64
%B=getelementptr inbounds i8,i8*%r,i64%A
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
br label%P
E:
%F=call i8*@sml_alloc(i32 inreg%g)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32%g,i32*%H,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=sext i32%j to i64
%K=getelementptr inbounds i8,i8*%I,i64%J
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%F,i8*%K,i32%g,i1 false)
%L=load i8*,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%L,i64 4
%N=bitcast i8*%M to i32*
%O=bitcast i8*%L to i32*
br label%P
P:
%Q=phi i64[%J,%E],[%A,%z]
%R=phi i32*[%O,%E],[%n,%z]
%S=phi i32*[%N,%E],[%f,%z]
%T=phi i8*[%F,%E],[%D,%z]
store i8*%T,i8**%c,align 8
%U=load i32,i32*%S,align 4
store i8*null,i8**%d,align 8
%V=load i32,i32*%R,align 4
%W=call i8*@sml_alloc(i32 inreg%p)#0
%X=or i32%m,1342177280
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32%X,i32*%Z,align 4
call void@llvm.memset.p0i8.i32(i8*%W,i8 0,i32%p,i1 false)
%aa=icmp eq i32%V,0
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%W,i64%Q
br i1%aa,label%ad,label%ae
ad:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%ac,i8*%ab,i32%U,i1 false)
br label%ag
ae:
%af=bitcast i8*%ac to i8**
store i8*%ab,i8**%af,align 8
br label%ag
ag:
%ah=sext i32%m to i64
%ai=getelementptr inbounds i8,i8*%W,i64%ah
%aj=bitcast i8*%ai to i32*
store i32%o,i32*%aj,align 4
ret i8*%W
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1409 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1409 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4SomeE_1412(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%b,i8**%c,align 8
%d=getelementptr inbounds i8,i8*%a,i64 4
%e=bitcast i8*%d to i32*
%f=load i32,i32*%e,align 4
%g=add i32%f,-1
%h=sub i32 0,%f
%i=and i32%g,%h
%j=add i32%f,7
%k=add i32%j,%i
%l=and i32%k,-8
%m=bitcast i8*%a to i32*
%n=load i32,i32*%m,align 4
%o=or i32%l,4
%p=call i8*@sml_alloc(i32 inreg%o)#0
%q=or i32%l,1342177280
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32%q,i32*%s,align 4
call void@llvm.memset.p0i8.i32(i8*%p,i8 0,i32%o,i1 false)
%t=icmp eq i32%n,0
%u=load i8*,i8**%c,align 8
%v=sext i32%i to i64
%w=getelementptr inbounds i8,i8*%p,i64%v
br i1%t,label%x,label%y
x:
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%w,i8*%u,i32%f,i1 false)
br label%A
y:
%z=bitcast i8*%w to i8**
store i8*%u,i8**%z,align 8
br label%A
A:
%B=sext i32%l to i64
%C=getelementptr inbounds i8,i8*%p,i64%B
%D=bitcast i8*%C to i32*
store i32%n,i32*%D,align 4
ret i8*%p
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4SomeE_1412 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4SomeE_1412 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1415(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1417(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg%m,i32 inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@il,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%c,align 8
%D=tail call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
ret i8*%D
}
define fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE(i32 inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1417 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1417 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8closeResE_1420(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLFN17SMLSharp__SQL__Prim8closeResE(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12closeCommandE_1421(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLFN17SMLSharp__SQL__Prim12closeCommandE(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1422(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_254(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1423(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_255(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1424(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_294(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1425(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_295(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1426(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_300(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_1427(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim11unifySchemaE_301(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim4linkE_1429(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim4linkE_309(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13linkAndCreateE_1431(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17SMLSharp__SQL__Prim13linkAndCreateE_337(i8*inreg%a,i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11fromSQL__intE_1433(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11fromSQL__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__intInfE_1434(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__wordE_1435(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__charE_1436(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLFN17SMLSharp__SQL__Prim12fromSQL__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__boolE_1437(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12fromSQL__boolE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__stringE_1438(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14fromSQL__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12fromSQL__realE_1439(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLFN17SMLSharp__SQL__Prim12fromSQL__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14fromSQL__real32E_1440(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLFN17SMLSharp__SQL__Prim14fromSQL__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17fromSQL__timestampE_1441(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15fromSQL__numericE_1442(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15fromSQL__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17fromSQL__intOptionE_1443(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17fromSQL__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE_1444(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__wordOptionE_1445(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__charOptionE_1446(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__boolOptionE_1447(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__stringOptionE_1448(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18fromSQL__realOptionE_1449(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18fromSQL__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20fromSQL__real32OptionE_1450(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20fromSQL__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE_1451(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim23fromSQL__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim21fromSQL__numericOptionE_1452(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21fromSQL__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6ty__intE_1453(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@al,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ty__intInfE_1454(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@an,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ty__wordE_1455(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ap,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ty__charE_1456(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ar,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ty__boolE_1457(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@at,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ty__stringE_1458(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@av,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ty__realE_1459(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ax,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ty__real32E_1460(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@az,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12ty__timestampE_1461(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aB,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10ty__numericE_1462(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aD,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12ty__intOptionE_1463(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aG,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ty__intInfOptionE_1464(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aJ,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ty__wordOptionE_1465(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aM,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ty__charOptionE_1466(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aP,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ty__boolOptionE_1467(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aS,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ty__stringOptionE_1468(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aV,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ty__realOptionE_1469(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aY,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ty__real32OptionE_1470(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a1,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18ty__timestampOptionE_1471(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a4,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16ty__numericOptionE_1472(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@a7,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12compare__boolE_1473(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=tail call i8*@sml_alloc(i32 inreg 4)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 4,i32*%p,align 4
store i32%l,i32*%n,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17compare__intOptionE_1474(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17compare__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20compare__intInfOptionE_1475(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18compare__wordOptionE_1476(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18compare__charOptionE_1477(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18compare__boolOptionE_1478(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20compare__stringOptionE_1479(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18compare__realOptionE_1480(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18compare__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20compare__real32OptionE_1481(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim20compare__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim23compare__timestampOptionE_1482(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim23compare__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim21compare__numericOptionE_1483(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim21compare__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8General212reverseOrderE_1484(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8General212reverseOrderE(i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool38fromBoolE_1485(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp ne i32%d,0
%f=zext i1%e to i32
%g=tail call i8*@sml_alloc(i32 inreg 4)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 4,i32*%j,align 4
store i32%f,i32*%h,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool36isTrueE_1486(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,1
%f=zext i1%e to i32
%g=tail call i8*@sml_alloc(i32 inreg 4)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 4,i32*%j,align 4
store i32%f,i32*%h,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_1487(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=bitcast i8*%a to i32*
%f=load i32,i32*%e,align 4
%g=icmp eq i32%f,%d
%h=zext i1%g to i32
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool32isE_1488(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5Bool32isE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool34and3E_1489(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34and3E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool33or3E_1490(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool33or3E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5Bool34not3E_1491(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim5Bool34not3E(i32 inreg%d)
%f=tail call i8*@sml_alloc(i32 inreg 4)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 4,i32*%i,align 4
store i32%e,i32*%g,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1492(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_516(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9toSQL__intE_1494(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim9toSQL__intE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__intInfE_1495(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__wordE_1496(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__wordE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__charE_1497(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__charE(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__boolE_1498(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__boolE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__stringE_1499(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10toSQL__realE_1500(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i64*
%d=load i64,i64*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10toSQL__realE(i64 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12toSQL__real32E_1501(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12toSQL__real32E(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15toSQL__timestampE_1502(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13toSQL__numericE_1503(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13toSQL__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15toSQL__intOptionE_1504(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15toSQL__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__intInfOptionE_1505(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__wordOptionE_1506(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__charOptionE_1507(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__boolOptionE_1508(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__stringOptionE_1509(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16toSQL__realOptionE_1510(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16toSQL__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18toSQL__real32OptionE_1511(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim18toSQL__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim21toSQL__timestampOptionE_1512(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim21toSQL__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19toSQL__numericOptionE_1513(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19toSQL__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13add__intOptionE_1514(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13add__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16add__intInfOptionE_1515(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14add__wordOptionE_1516(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14add__realOptionE_1517(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14add__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16add__real32OptionE_1518(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16add__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17add__numericOptionE_1519(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17add__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13sub__intOptionE_1520(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sub__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sub__intInfOptionE_1521(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sub__wordOptionE_1522(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sub__realOptionE_1523(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sub__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sub__real32OptionE_1524(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sub__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sub__numericOptionE_1525(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sub__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13mul__intOptionE_1526(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mul__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16mul__intInfOptionE_1527(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14mul__wordOptionE_1528(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14mul__realOptionE_1529(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mul__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16mul__real32OptionE_1530(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mul__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17mul__numericOptionE_1531(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mul__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13div__intOptionE_1532(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13div__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16div__intInfOptionE_1533(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14div__wordOptionE_1534(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14div__realOptionE_1535(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14div__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16div__real32OptionE_1536(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16div__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17div__numericOptionE_1537(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17div__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8mod__realE_1538(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLFN17SMLSharp__SQL__Prim8mod__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10mod__real32E_1539(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLFN17SMLSharp__SQL__Prim10mod__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13mod__intOptionE_1540(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13mod__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16mod__intInfOptionE_1541(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14mod__wordOptionE_1542(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14mod__realOptionE_1543(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14mod__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16mod__real32OptionE_1544(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16mod__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17mod__numericOptionE_1545(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17mod__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13neg__intOptionE_1546(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13neg__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16neg__intInfOptionE_1547(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neg__wordOptionE_1548(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neg__realOptionE_1549(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14neg__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16neg__real32OptionE_1550(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16neg__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17neg__numericOptionE_1551(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17neg__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8abs__wordE_1552(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32%d,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13abs__intOptionE_1553(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13abs__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16abs__intInfOptionE_1554(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14abs__wordOptionE_1555(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14abs__realOptionE_1556(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14abs__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16abs__real32OptionE_1557(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16abs__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17abs__numericOptionE_1558(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17abs__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6lt__intE_1559(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6lt__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9lt__intInfE_1560(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7lt__wordE_1561(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7lt__charE_1562(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7lt__boolE_1563(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp eq i32%l,2
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9lt__stringE_1564(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7lt__realE_1565(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7lt__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9lt__real32E_1566(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9lt__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12lt__timestampE_1567(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10lt__numericE_1568(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10lt__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12lt__intOptionE_1569(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12lt__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15lt__intInfOptionE_1570(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13lt__wordOptionE_1571(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13lt__charOptionE_1572(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13lt__boolOptionE_1573(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15lt__stringOptionE_1574(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13lt__realOptionE_1575(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13lt__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15lt__real32OptionE_1576(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15lt__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18lt__timestampOptionE_1577(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18lt__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16lt__numericOptionE_1578(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16lt__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6gt__intE_1579(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6gt__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9gt__intInfE_1580(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7gt__wordE_1581(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7gt__charE_1582(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7gt__boolE_1583(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp eq i32%l,1
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9gt__stringE_1584(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7gt__realE_1585(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7gt__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9gt__real32E_1586(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9gt__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12gt__timestampE_1587(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10gt__numericE_1588(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10gt__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12gt__intOptionE_1589(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12gt__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15gt__intInfOptionE_1590(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13gt__wordOptionE_1591(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13gt__charOptionE_1592(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13gt__boolOptionE_1593(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15gt__stringOptionE_1594(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13gt__realOptionE_1595(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13gt__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15gt__real32OptionE_1596(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15gt__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18gt__timestampOptionE_1597(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18gt__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16gt__numericOptionE_1598(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16gt__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6le__intE_1599(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6le__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9le__intInfE_1600(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7le__wordE_1601(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7le__charE_1602(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7le__boolE_1603(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp ne i32%l,1
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9le__stringE_1604(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7le__realE_1605(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7le__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9le__real32E_1606(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9le__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12le__timestampE_1607(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10le__numericE_1608(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10le__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12le__intOptionE_1609(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12le__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15le__intInfOptionE_1610(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13le__wordOptionE_1611(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13le__charOptionE_1612(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13le__boolOptionE_1613(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15le__stringOptionE_1614(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13le__realOptionE_1615(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13le__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15le__real32OptionE_1616(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15le__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18le__timestampOptionE_1617(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18le__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16le__numericOptionE_1618(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16le__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6ge__intE_1619(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6ge__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ge__intInfE_1620(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ge__wordE_1621(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ge__charE_1622(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ge__boolE_1623(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp ne i32%l,2
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ge__stringE_1624(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7ge__realE_1625(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7ge__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9ge__real32E_1626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9ge__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12ge__timestampE_1627(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10ge__numericE_1628(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10ge__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12ge__intOptionE_1629(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12ge__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ge__intInfOptionE_1630(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ge__wordOptionE_1631(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ge__charOptionE_1632(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ge__boolOptionE_1633(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ge__stringOptionE_1634(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13ge__realOptionE_1635(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13ge__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15ge__real32OptionE_1636(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15ge__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18ge__timestampOptionE_1637(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18ge__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16ge__numericOptionE_1638(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16ge__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6eq__intE_1639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim6eq__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9eq__intInfE_1640(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7eq__wordE_1641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7eq__charE_1642(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7eq__boolE_1643(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp eq i32%l,0
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9eq__stringE_1644(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7eq__realE_1645(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7eq__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9eq__real32E_1646(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim9eq__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12eq__timestampE_1647(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10eq__numericE_1648(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10eq__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12eq__intOptionE_1649(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim12eq__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15eq__intInfOptionE_1650(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13eq__wordOptionE_1651(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13eq__charOptionE_1652(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13eq__boolOptionE_1653(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15eq__stringOptionE_1654(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13eq__realOptionE_1655(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13eq__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15eq__real32OptionE_1656(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim15eq__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim18eq__timestampOptionE_1657(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim18eq__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16eq__numericOptionE_1658(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16eq__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7neq__intE_1659(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim7neq__intE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10neq__intInfE_1660(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__intInfE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8neq__wordE_1661(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__wordE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8neq__charE_1662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__charE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8neq__boolE_1663(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,0
%f=getelementptr inbounds i8,i8*%b,i64 4
%g=bitcast i8*%f to i32*
%h=load i32,i32*%g,align 4
%i=icmp eq i32%h,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%e,i32%k,i32%j
%m=icmp ne i32%l,0
%n=zext i1%m to i32
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10neq__stringE_1664(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8neq__realE_1665(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim8neq__realE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10neq__real32E_1666(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim10neq__real32E(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13neq__timestampE_1667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__timestampE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11neq__numericE_1668(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11neq__numericE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13neq__intOptionE_1669(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim13neq__intOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16neq__intInfOptionE_1670(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__intInfOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neq__wordOptionE_1671(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__wordOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neq__charOptionE_1672(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__charOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neq__boolOptionE_1673(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__boolOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16neq__stringOptionE_1674(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14neq__realOptionE_1675(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim14neq__realOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16neq__real32OptionE_1676(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim16neq__real32OptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19neq__timestampOptionE_1677(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim19neq__timestampOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17neq__numericOptionE_1678(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17neq__numericOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19concat__stringOptionE_1679(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19concat__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11like__stringE_1681(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim11like__stringE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17like__stringOptionE_1682(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLFN17SMLSharp__SQL__Prim17like__stringOptionE(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16nullif__intOptionE_1683(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16nullif__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19nullif__intInfOptionE_1684(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17nullif__wordOptionE_1685(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17nullif__charOptionE_1686(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17nullif__boolOptionE_1687(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19nullif__stringOptionE_1688(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17nullif__realOptionE_1689(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17nullif__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19nullif__real32OptionE_1690(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19nullif__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim22nullif__timestampOptionE_1691(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim22nullif__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim20nullif__numericOptionE_1692(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim20nullif__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim6avgOptE_1693(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_1695(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_927(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7avg__intE_1696(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7avg__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_1697(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_931(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__intInfE_1698(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_1699(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_935(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__wordE_1700(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_1701(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_939(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8avg__realE_1702(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8avg__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_1703(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_943(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10avg__real32E_1704(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10avg__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_1705(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_947(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11avg__numericE_1706(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11avg__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13avg__intOptionE_1707(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13avg__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16avg__intInfOptionE_1708(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1709(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_955(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14avg__wordOptionE_1710(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14avg__realOptionE_1711(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14avg__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1712(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_961(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16avg__real32OptionE_1713(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16avg__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1714(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17avg__numericOptionE_1715(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17avg__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_1716(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7sum__intE_1717(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sum__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10sum__intInfE_1718(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_1719(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8sum__wordE_1720(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_1721(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fadd double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8sum__realE_1722(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8sum__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_1723(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fadd float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10sum__real32E_1724(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10sum__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11sum__numericE_1725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11sum__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1726(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add nsw i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1727(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13sum__intOptionE_1728(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13sum__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_1729(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__intInfOptionE_1730(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1731(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=add i32%g,%d
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 4,i32*%l,align 4
store i32%h,i32*%j,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1732(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__wordOptionE_1733(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1734(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to double*
%d=load double,double*%c,align 8
%e=getelementptr inbounds i8,i8*%b,i64 8
%f=bitcast i8*%e to double*
%g=load double,double*%f,align 8
%h=fadd double%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 8)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 8,i32*%k,align 4
%l=bitcast i8*%i to double*
store double%h,double*%l,align 8
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1735(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14sum__realOptionE_1736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14sum__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1737(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to float*
%d=load float,float*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to float*
%g=load float,float*%f,align 4
%h=fadd float%d,%g
%i=tail call i8*@sml_alloc(i32 inreg 4)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 4,i32*%k,align 4
%l=bitcast i8*%i to float*
store float%h,float*%l,align 4
ret i8*%i
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1738(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sum__real32OptionE_1739(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16sum__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1740(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sum__numericOptionE_1741(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17sum__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1742(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1023(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7max__intE_1743(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7max__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1744(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1027(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__intInfE_1745(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1746(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1031(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__wordE_1747(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1748(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1035(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__charE_1749(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__charE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1750(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%d,0
%i=icmp eq i32%g,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%h,i32%k,i32%j
%m=icmp eq i32%l,1
%n=select i1%m,i32%d,i32%g
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__boolE_1751(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__boolE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1752(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1043(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__stringE_1753(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1047(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8max__realE_1755(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8max__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1756(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1051(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10max__real32E_1757(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10max__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1758(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1055(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__timestampE_1759(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1760(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1059(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11max__numericE_1761(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11max__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1762(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1763(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1065(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13max__intOptionE_1764(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13max__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1765(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1766(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1071(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__intInfOptionE_1767(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1768(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1769(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1077(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__wordOptionE_1770(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1771(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1772(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1083(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__charOptionE_1773(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1774(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1775(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%d,0
%i=icmp eq i32%g,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%h,i32%k,i32%j
%m=icmp eq i32%l,1
%n=select i1%m,i32%d,i32%g
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__boolOptionE_1776(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1777(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1778(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1095(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__stringOptionE_1779(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1780(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1781(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1101(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14max__realOptionE_1782(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14max__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1783(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1784(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1107(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16max__real32OptionE_1785(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16max__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1786(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1787(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1113(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19max__timestampOptionE_1788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19max__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1789(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1790(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1119(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17max__numericOptionE_1791(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17max__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1792(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1123(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7min__intE_1793(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7min__intE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1794(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1127(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__intInfE_1795(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1796(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1131(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__wordE_1797(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__wordE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1798(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1135(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__charE_1799(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__charE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1800(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%d,0
%i=icmp eq i32%g,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%h,i32%k,i32%j
%m=icmp eq i32%l,2
%n=select i1%m,i32%d,i32%g
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__boolE_1801(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__boolE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1143(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__stringE_1803(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__stringE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1804(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1147(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8min__realE_1805(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8min__realE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1806(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1151(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10min__real32E_1807(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10min__real32E(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1808(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1155(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__timestampE_1809(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__timestampE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1810(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1159(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11min__numericE_1811(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11min__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1812(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1813(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1165(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13min__intOptionE_1814(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13min__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1815(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1816(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1171(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__intInfOptionE_1817(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1818(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1819(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1177(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__wordOptionE_1820(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1821(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1822(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1183(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 1)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1,i32*%f,align 4
store i8%c,i8*%d,align 1
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__charOptionE_1823(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__charOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1824(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1825(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=getelementptr inbounds i8,i8*%b,i64 4
%f=bitcast i8*%e to i32*
%g=load i32,i32*%f,align 4
%h=icmp eq i32%d,0
%i=icmp eq i32%g,0
%j=zext i1%i to i32
%k=select i1%i,i32 0,i32 2
%l=select i1%h,i32%k,i32%j
%m=icmp eq i32%l,2
%n=select i1%m,i32%d,i32%g
%o=tail call i8*@sml_alloc(i32 inreg 4)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 4,i32*%r,align 4
store i32%n,i32*%p,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__boolOptionE_1826(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__boolOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1827(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1828(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1195(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__stringOptionE_1829(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__stringOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1830(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1831(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc double@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1201(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 8)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 8,i32*%f,align 4
%g=bitcast i8*%d to double*
store double%c,double*%g,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14min__realOptionE_1832(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14min__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1833(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1834(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc float@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1207(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
%g=bitcast i8*%d to float*
store float%c,float*%g,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16min__real32OptionE_1835(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16min__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1836(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1837(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1213(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim19min__timestampOptionE_1838(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim19min__timestampOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1839(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1840(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1219(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17min__numericOptionE_1841(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim17min__numericOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7Num__intE_1842(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7Num__intE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10Num__intInfE_1843(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__intInfE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8Num__wordE_1844(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__wordE(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8Num__realE_1845(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i64*
%d=load i64,i64*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8Num__realE(i64 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim10Num__real32E_1846(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim10Num__real32E(i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11Num__numericE_1847(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11Num__numericE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13Num__intOptionE_1848(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13Num__intOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16Num__intInfOptionE_1849(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__intInfOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14Num__wordOptionE_1850(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__wordOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim14Num__realOptionE_1851(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim14Num__realOptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16Num__real32OptionE_1852(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim16Num__real32OptionE(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17Num__numericOptionE_1853(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1854(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1247(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11dummyCursorE_1855(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ho,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1856(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1252(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9newCursorE_1857(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hq,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1858(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1257(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1859(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1259(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12queryCommandE_1860(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ht,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1861(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1263(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16sqlserver__stringE_1862(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hv,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1863(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1267(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim17sqlserver__backendE_1864(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hx,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7sqlevalE_1865(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%d to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%e to i32*
%k=load i32,i32*%j,align 4
%l=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim7sqlevalE(i32 inreg undef,i32 inreg undef,i32 inreg%i,i32 inreg%k,i32 inreg undef,i32 inreg undef)
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1866(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1277(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim7connectE_1867(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hB,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1868(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1281(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim16connectAndCreateE_1869(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hD,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1870(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1287(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9closeConnE_1871(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hH,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1872(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1293(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11closeCursorE_1873(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hJ,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5fetchE_1874(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5fetchE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8fetchAllE_1875(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8fetchAllE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1876(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1309(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim3toyE_1877(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%b to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim3toyE(i32 inreg%i,i32 inreg%k,i32 inreg undef,i32 inreg undef,i32 inreg undef,i32 inreg undef)
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1878(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1316(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim15commandToStringE_1879(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%d to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%e to i32*
%k=load i32,i32*%j,align 4
%l=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim15commandToStringE(i32 inreg undef,i32 inreg undef,i32 inreg%i,i32 inreg%k,i32 inreg undef,i32 inreg undef)
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1880(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1324(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim13queryToStringE_1881(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g)#4 gc"smlsharp"{
%h=bitcast i8*%d to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%e to i32*
%k=load i32,i32*%j,align 4
%l=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim13queryToStringE(i32 inreg undef,i32 inreg undef,i32 inreg%i,i32 inreg%k,i32 inreg undef,i32 inreg undef)
ret i8*%l
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim11expToStringE_1882(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%d to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%e to i32*
%i=load i32,i32*%h,align 4
%j=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim11expToStringE(i32 inreg undef,i32 inreg undef,i32 inreg%g,i32 inreg%i)
ret i8*%j
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1883(i8*inreg%a,i8*inreg%b)#5 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1335(i32 inreg%d)
unreachable
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim9toyServerE_1884(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h0,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1885(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1339(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim8General211comparePairE_1886(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim8General211comparePairE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27onlyOneE_1887(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27onlyOneE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1888(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=icmp ne i8*%b,null
%d=zext i1%c to i32
%e=tail call i8*@sml_alloc(i32 inreg 4)#0
%f=bitcast i8*%e to i32*
%g=getelementptr inbounds i8,i8*%e,i64 -4
%h=bitcast i8*%g to i32*
store i32 4,i32*%h,align 4
store i32%d,i32*%f,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List210isNotEmptyE_1889(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h6,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24prodE_1890(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g,i8*inreg%h,i8*inreg%i)#4 gc"smlsharp"{
%j=bitcast i8*%c to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%d to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%e to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%g to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%h to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%i to i32*
%u=load i32,i32*%t,align 4
%v=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24prodE(i32 inreg undef,i32 inreg%k,i32 inreg%m,i32 inreg%o,i32 inreg undef,i32 inreg%q,i32 inreg%s,i32 inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1891(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1361(i8*inreg%a,i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List24joinE_1892(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e,i8*inreg%f,i8*inreg%g,i8*inreg%h,i8*inreg%i,i8*inreg%j,i8*inreg%k)#4 gc"smlsharp"{
%l=bitcast i8*%b to i32*
%m=load i32,i32*%l,align 4
%n=bitcast i8*%c to i32*
%o=load i32,i32*%n,align 4
%p=bitcast i8*%d to i32*
%q=load i32,i32*%p,align 4
%r=bitcast i8*%e to i32*
%s=load i32,i32*%r,align 4
%t=bitcast i8*%f to i32*
%u=load i32,i32*%t,align 4
%v=bitcast i8*%g to i32*
%w=load i32,i32*%v,align 4
%x=bitcast i8*%h to i32*
%y=load i32,i32*%x,align 4
%z=bitcast i8*%i to i32*
%A=load i32,i32*%z,align 4
%B=bitcast i8*%j to i32*
%C=load i32,i32*%B,align 4
%D=bitcast i8*%k to i32*
%E=load i32,i32*%D,align 4
%F=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List24joinE(i32 inreg%m,i32 inreg%o,i32 inreg%q,i32 inreg%s,i32 inreg%u,i32 inreg%w,i32 inreg%y,i32 inreg%A,i32 inreg%C,i32 inreg%E)
ret i8*%F
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List23nubE_1893(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List23nubE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLL3cmp_1896(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL3cmp_1377(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1897(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1379(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List26sortByE_1898(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List26sortByE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLL4quot_1899(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL4quot_1389(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1901(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1391(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5List27groupByE_1902(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#4 gc"smlsharp"{
%f=bitcast i8*%b to i32*
%g=load i32,i32*%f,align 4
%h=bitcast i8*%c to i32*
%i=load i32,i32*%h,align 4
%j=bitcast i8*%d to i32*
%k=load i32,i32*%j,align 4
%l=bitcast i8*%e to i32*
%m=load i32,i32*%l,align 4
%n=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5List27groupByE(i32 inreg%g,i32 inreg%i,i32 inreg%k,i32 inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5countE_1903(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim5countE_1398(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim5countE_1904(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim5countE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1905(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1906(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1403(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim12count__optionE_1907(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim12count__optionE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op8coalesceE_1908(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op8coalesceE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op9coalesce_GE_1909(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op9coalesce_GE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4SomeE_1910(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4SomeE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1911(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN17SMLSharp__SQL__Prim2Op4PartE_1912(i8*inreg%a,i8*inreg%b,i8*inreg%c)#4 gc"smlsharp"{
%d=bitcast i8*%b to i32*
%e=load i32,i32*%d,align 4
%f=bitcast i8*%c to i32*
%g=load i32,i32*%f,align 4
%h=tail call fastcc i8*@_SMLFN17SMLSharp__SQL__Prim2Op4PartE(i32 inreg%e,i32 inreg%g)
ret i8*%h
}
declare void@llvm.memcpy.p0i8.p0i8.i32(i8*,i8*,i32,i1)#0
declare void@llvm.memset.p0i8.i32(i8*,i8,i32,i1)#0
declare void@llvm.lifetime.start.p0i8(i64,i8*)#0
declare void@llvm.lifetime.end.p0i8(i64,i8*)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
attributes#5={noreturn uwtable}
