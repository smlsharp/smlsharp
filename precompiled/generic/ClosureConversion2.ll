@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN12BuiltinTypes10arrayTyConE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes6charTyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes6int8TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes6unitTyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7boxedTyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7int16TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7int32TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7int64TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes7word8TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8contagTyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8ptrTyConE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8real32TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8real64TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8stringTyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8word16TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8word32TyE=external local_unnamed_addr global i8*
@_SMLZN12BuiltinTypes8word64TyE=external local_unnamed_addr global i8*
@_SMLZN14BoundTypeVarID3Map5emptyE=external local_unnamed_addr global i8*
@_SMLZN15SingletonTyEnv28emptyEnvE=external local_unnamed_addr global i8*
@_SMLZN3Bug3BugE=external local_unnamed_addr global i8*
@_SMLZN3Loc5nolocE=external local_unnamed_addr global i8*
@_SMLZN5VarID3Set5emptyE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion26newVarE_402 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion26newVarE_842 to void(...)*),i32 -2147483647}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,[83x i8]}><{[4x i8]zeroinitializer,i32 -2147483565,[83x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:38.6(798)\00"}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion28makeBindE_416 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28makeBindE_847 to void(...)*),i32 -2147483647}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion28unionSetE_424 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28unionSetE_851 to void(...)*),i32 -2147483647}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3bv2_448 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3bv2_855 to void(...)*),i32 -2147483647}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,[84x i8]}><{[4x i8]zeroinitializer,i32 -2147483564,[84x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:87.8(2338)\00"}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:163.8(5921)\00"}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion210freeVarsFnE_453 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210freeVarsFnE_859 to void(...)*),i32 -2147483647}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL6subst2_482 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6subst2_861 to void(...)*),i32 -2147483647}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,[85x i8]}><{[4x i8]zeroinitializer,i32 -2147483563,[85x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:180.6(6379)\00"}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:335.6(12423)\00"}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:345.6(12774)\00"}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:353.6(13066)\00"}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 3,[4x i8]zeroinitializer,i32 0}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,[30x i8]}><{[4x i8]zeroinitializer,i32 -2147483618,[30x i8]c"ClosureConversion2.ExpToConst\00"}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,i8*,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[30x i8]}>,<{[4x i8],i32,[30x i8]}>*@o,i32 0,i32 0,i32 0),i32 8),i32 0,[4x i8]zeroinitializer,i32 1}>,align 8
@_SMLDL521=private constant<{[4x i8],i32,i8*}><{[4x i8]zeroinitializer,i32 -1879048184,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i32,[4x i8],i32}>,<{[4x i8],i32,i8*,i32,[4x i8],i32}>*@p,i32 0,i32 0,i32 0),i32 8)}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:440.19(15935)\00"}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@q,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:450.27(16321)\00"}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@s,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:472.14(17363)\00"}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@u,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL9fieldList_542 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fieldList_877 to void(...)*),i32 -2147483647}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL10bitmapList_544 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10bitmapList_878 to void(...)*),i32 -2147483647}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL15initialElements_549 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15initialElements_880 to void(...)*),i32 -2147483647}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion23LetE_557 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion23LetE_883 to void(...)*),i32 -2147483647}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:567.6(21016)\00"}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 35,i32 0}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@B,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 49,i32 0}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@D,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 38,i32 0}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@F,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 36,i32 0}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@H,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 46,i32 0}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@J,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 41,i32 0}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@L,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 6,i32 47,i32 0}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 5,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@N,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:579.9(21385)\00"}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:597.17(22252)\00"}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:614.6(22906)\00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL8recordTy_594 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8recordTy_889 to void(...)*),i32 -2147483647}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL12recordFields_607 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL12recordFields_894 to void(...)*),i32 -2147483647}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,[86x i8]}><{[4x i8]zeroinitializer,i32 -2147483562,[86x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:776.8(29235)\00"}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion211tagSizeVarsE_617 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211tagSizeVarsE_897 to void(...)*),i32 -2147483647}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:809.14(30383)\00"}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN18ClosureConversion210sortFieldsE_626 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210sortFieldsE_900 to void(...)*),i32 -2147483647}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:971.44(37298)\00"}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:985.25(38006)\00"}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"makeClosureRecord\00"}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1008.47(38900)\00"}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion222decomposeClosureRecordE_689 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion222decomposeClosureRecordE_909 to void(...)*),i32 -2147483647}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 9,[4x i8]zeroinitializer,i32 0}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@ad,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 10,[4x i8]zeroinitializer,i32 0}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@af,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ag,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ae,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ah,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ai,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1034.25(40190)\00"}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"decomposeClosureRecord\00"}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 23,i32 -2147483648,i32 0}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 7,[4x i8]zeroinitializer,i32 0}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@an,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion212extendVarEnvE_711 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212extendVarEnvE_911 to void(...)*),i32 -2147483647}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion29extendEnvE_715 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29extendEnvE_913 to void(...)*),i32 -2147483647}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion29extendEnvE_717 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29extendEnvE_914 to void(...)*),i32 -2147483647}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion212addBoundVarsE_721 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212addBoundVarsE_916 to void(...)*),i32 -2147483647}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1103.6(42636)\00"}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1125.6(43708)\00"}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 15,[4x i8]zeroinitializer,i32 0}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 14,[4x i8]zeroinitializer,i32 0}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1138.6(44092)\00"}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1147.6(44390)\00"}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion28getFunTyE_750 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28getFunTyE_924 to void(...)*),i32 -2147483647}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_752 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_926 to void(...)*),i32 -2147483647}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1188.14(45962)\00"}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL4func_771 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4func_929 to void(...)*),i32 -2147483647}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7entryTy_773 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7entryTy_930 to void(...)*),i32 -2147483647}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1346.26(52475)\00"}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"compileExp: BCVAR \00"}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion210compileExpE_780 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210compileExpE_931 to void(...)*),i32 -2147483647}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion210compileExpE_782 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210compileExpE_932 to void(...)*),i32 -2147483647}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion210compileExpE_784 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210compileExpE_933 to void(...)*),i32 -2147483647}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1410.14(55662)\00"}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3var_787 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3var_934 to void(...)*),i32 -2147483647}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1242.6(48040)\00"}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 8,[4x i8]zeroinitializer,i32 0}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 0,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aM,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1809.39(71682)\00"}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,[19x i8]}><{[4x i8]zeroinitializer,i32 -2147483629,[19x i8]c"prepareRecfunBinds\00"}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL11codeEntryTy_798 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11codeEntryTy_935 to void(...)*),i32 -2147483647}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL11codeEntryTy_800 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11codeEntryTy_936 to void(...)*),i32 -2147483647}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL12recfunVarEnv_803 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL12recfunVarEnv_937 to void(...)*),i32 -2147483647}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL2fv_805 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL2fv_938 to void(...)*),i32 -2147483647}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL13closureEnvVar_807 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL13closureEnvVar_939 to void(...)*),i32 -2147483647}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7varenv1_816 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7varenv1_941 to void(...)*),i32 -2147483647}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL11recfunBinds_818 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11recfunBinds_942 to void(...)*),i32 -2147483647}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL6varEnv_820 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6varEnv_943 to void(...)*),i32 -2147483647}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1917.45(76715)\00"}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,[22x i8]}><{[4x i8]zeroinitializer,i32 -2147483626,[22x i8]c"compileDecl: BCVALREC\00"}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1739.6(68597)\00"}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL5funTy_825 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5funTy_944 to void(...)*),i32 -2147483647}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7closure_827 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7closure_945 to void(...)*),i32 -2147483647}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7closure_829 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7closure_946 to void(...)*),i32 -2147483647}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,[87x i8]}><{[4x i8]zeroinitializer,i32 -2147483561,[87x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:633.19(23664)\00"}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"extra computation\00"}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,[88x i8]}><{[4x i8]zeroinitializer,i32 -2147483560,[88x i8]c"src/compiler/compilePhases/closureconversion/main/ClosureConversion2.sml:1953.15(78110)\00"}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN18ClosureConversion27convertE_836 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27convertE_947 to void(...)*),i32 -2147483647}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*null,i8*null,i32 3}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 21,[4x i8]zeroinitializer,i32 0}>,align 8
@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2=private global<{[4x i8],i32,[1x i8*]}><{[4x i8]zeroinitializer,i32 -1342177272,[1x i8*]zeroinitializer}>,align 8
@ba=private unnamed_addr global[2x i64][i64 1,i64 sub(i64 ptrtoint(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2,i32 0,i32 2,i32 0)to i64),i64 ptrtoint([2x i64]*@ba to i64))]
@_SML_ftab08b2cfa4e142c0c2_ClosureConversion2=external global i8
@bb=private unnamed_addr global i8 0
@_SMLZN18ClosureConversion27convertE=alias i8*,getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2,i32 0,i32 2,i32 0)
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_end()local_unnamed_addr#0
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare void@sml_save_exn(i8*inreg)local_unnamed_addr#0
declare void@sml_start(i8*inreg)local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN10ListSorter4sortE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12ExternSymbol5touchE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12RecordLayout12extractDeclsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12RecordLayout13computeRecordE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN12RecordLayout19newComputationAccumE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN12RuntimeTypes8tagValueE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN13FunEntryLabel8generateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14ExtraDataLabel8generateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15ExternFunSymbol5touchE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv210bindTyvarsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv213unalignedSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv27findTagE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv28bindVarsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv28findSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN15SingletonTyEnv29constSizeE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN18CallbackEntryLabel8generateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Bool3notE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List1_VE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldrE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6lengthE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5Int327compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map6filterE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map6removeE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map7isEmptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map8inDomainE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map9listItemsE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map9singletonE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Map9unionWithE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID3Set3addE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5VarID3Set6memberE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5VarID7compareE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN5VarID8generateE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN5VarID8toStringE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option6isSomeE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String1_ZE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5mapEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5zipEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair7foldlEqE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9DataLabel8generateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5148a836b3728be9_Int32()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindaa180c1799f3810_Bool()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7aa263535439ee1c_ListPair()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a60343781315c1e_Option()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main67a5b28ff146c353_Loc()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7374574ddb619c6a_LocalID()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main226e91fe36086637_RecordLayout()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main60e750412e2bb4fe_RecordLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc261d7f8774fa92d_CodeLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maineaa0aca8fbe4101a_Bug()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maine87d880aca597a70_SingletonTyEnv()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main07cc49829a960fbb_ExternSymbol()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maincf60e58028aea790_BuiltinTypes()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main2aaf2b808f82ee2e_TypesBasics()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main92a9fd50084b022c_ListSorter()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load5148a836b3728be9_Int32(i8*)local_unnamed_addr
declare void@_SML_loaddaa180c1799f3810_Bool(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load7aa263535439ee1c_ListPair(i8*)local_unnamed_addr
declare void@_SML_load3a60343781315c1e_Option(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_load67a5b28ff146c353_Loc(i8*)local_unnamed_addr
declare void@_SML_load7374574ddb619c6a_LocalID(i8*)local_unnamed_addr
declare void@_SML_load226e91fe36086637_RecordLayout(i8*)local_unnamed_addr
declare void@_SML_load60e750412e2bb4fe_RecordLabel(i8*)local_unnamed_addr
declare void@_SML_loadc261d7f8774fa92d_CodeLabel(i8*)local_unnamed_addr
declare void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*)local_unnamed_addr
declare void@_SML_loadeaa0aca8fbe4101a_Bug(i8*)local_unnamed_addr
declare void@_SML_loade87d880aca597a70_SingletonTyEnv(i8*)local_unnamed_addr
declare void@_SML_load07cc49829a960fbb_ExternSymbol(i8*)local_unnamed_addr
declare void@_SML_loadcf60e58028aea790_BuiltinTypes(i8*)local_unnamed_addr
declare void@_SML_load2aaf2b808f82ee2e_TypesBasics(i8*)local_unnamed_addr
declare void@_SML_load92a9fd50084b022c_ListSorter(i8*)local_unnamed_addr
define private void@_SML_tabb08b2cfa4e142c0c2_ClosureConversion2()#3{
unreachable
}
define void@_SML_load08b2cfa4e142c0c2_ClosureConversion2(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@bb,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@bb,align 1
tail call void@_SML_load5148a836b3728be9_Int32(i8*%a)#0
tail call void@_SML_loaddaa180c1799f3810_Bool(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load7aa263535439ee1c_ListPair(i8*%a)#0
tail call void@_SML_load3a60343781315c1e_Option(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_load67a5b28ff146c353_Loc(i8*%a)#0
tail call void@_SML_load7374574ddb619c6a_LocalID(i8*%a)#0
tail call void@_SML_load226e91fe36086637_RecordLayout(i8*%a)#0
tail call void@_SML_load60e750412e2bb4fe_RecordLabel(i8*%a)#0
tail call void@_SML_loadc261d7f8774fa92d_CodeLabel(i8*%a)#0
tail call void@_SML_loadc88dec21a8800496_RuntimeTypes_ppg(i8*%a)#0
tail call void@_SML_loadeaa0aca8fbe4101a_Bug(i8*%a)#0
tail call void@_SML_loade87d880aca597a70_SingletonTyEnv(i8*%a)#0
tail call void@_SML_load07cc49829a960fbb_ExternSymbol(i8*%a)#0
tail call void@_SML_loadcf60e58028aea790_BuiltinTypes(i8*%a)#0
tail call void@_SML_load2aaf2b808f82ee2e_TypesBasics(i8*%a)#0
tail call void@_SML_load92a9fd50084b022c_ListSorter(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb08b2cfa4e142c0c2_ClosureConversion2,i8*@_SML_ftab08b2cfa4e142c0c2_ClosureConversion2,i8*bitcast([2x i64]*@ba to i8*))#0
ret void
}
define void@_SML_main08b2cfa4e142c0c2_ClosureConversion2()local_unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
%a=alloca[3x i8*],align 8
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=load i8,i8*@bb,align 1
%f=and i8%e,2
%g=icmp eq i8%f,0
br i1%g,label%i,label%h
h:
ret void
i:
store i8 3,i8*@bb,align 1
tail call void@_SML_main5148a836b3728be9_Int32()#2
tail call void@_SML_maindaa180c1799f3810_Bool()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main7aa263535439ee1c_ListPair()#2
tail call void@_SML_main3a60343781315c1e_Option()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_main67a5b28ff146c353_Loc()#2
tail call void@_SML_main7374574ddb619c6a_LocalID()#2
tail call void@_SML_main226e91fe36086637_RecordLayout()#2
tail call void@_SML_main60e750412e2bb4fe_RecordLabel()#2
tail call void@_SML_mainc261d7f8774fa92d_CodeLabel()#2
tail call void@_SML_mainc88dec21a8800496_RuntimeTypes_ppg()#2
tail call void@_SML_maineaa0aca8fbe4101a_Bug()#2
tail call void@_SML_maine87d880aca597a70_SingletonTyEnv()#2
tail call void@_SML_main07cc49829a960fbb_ExternSymbol()#2
tail call void@_SML_maincf60e58028aea790_BuiltinTypes()#2
tail call void@_SML_main2aaf2b808f82ee2e_TypesBasics()#2
tail call void@_SML_main92a9fd50084b022c_ListSorter()#2
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%j=bitcast[3x i8*]*%a to i8*
call void@sml_start(i8*inreg%j)#0
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%n,label%m
m:
invoke void@sml_check(i32 inreg%k)
to label%n unwind label%bY
n:
%o=invoke fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%p unwind label%bY
p:
store i8*%o,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion210compileExpE_762 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion210compileExpE_762 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion214compileExpListE_763 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion214compileExpListE_763 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileBranchesE_764 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileBranchesE_764 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
%ah=load i8*,i8**%c,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion216compileFieldListE_765 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion216compileFieldListE_765 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 24
%ao=bitcast i8*%an to i32*
store i32 -2147483647,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 28)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177304,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion217compileBitmapListE_766 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion217compileBitmapListE_766 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i32*
store i32 -2147483647,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
%aD=load i8*,i8**%c,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileFuncBodyE_767 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileFuncBodyE_767 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 -2147483647,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
%aO=load i8*,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion211compileDeclE_768 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion211compileDeclE_768 to void(...)*),void(...)**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 24
%aV=bitcast i8*%aU to i32*
store i32 -2147483647,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 28)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177304,i32*%aY,align 4
%aZ=load i8*,i8**%c,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion211compileFuncE_769 to void(...)*),void(...)**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 16
%a4=bitcast i8*%a3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion211compileFuncE_769 to void(...)*),void(...)**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 24
%a6=bitcast i8*%a5 to i32*
store i32 -2147483647,i32*%a6,align 4
%a7=call i8*@sml_alloc(i32 inreg 28)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177304,i32*%a9,align 4
%ba=load i8*,i8**%c,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN18ClosureConversion218compileRecfunBindsE_770 to void(...)*),void(...)**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN18ClosureConversion218compileRecfunBindsE_770 to void(...)*),void(...)**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a7,i64 24
%bh=bitcast i8*%bg to i32*
store i32 -2147483647,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
store i8*%bi,i8**%d,align 8
%bl=load i8*,i8**%b,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%d,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileDeclListE_832 to void(...)*),void(...)**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion215compileDeclListE_832 to void(...)*),void(...)**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 24
%bC=bitcast i8*%bB to i32*
store i32 -2147483647,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%c,align 8
%bG=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 28)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177304,i32*%bP,align 4
%bQ=load i8*,i8**%c,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27convertE_840 to void(...)*),void(...)**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 16
%bV=bitcast i8*%bU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27convertE_840 to void(...)*),void(...)**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bN,i64 24
%bX=bitcast i8*%bW to i32*
store i32 -2147483647,i32*%bX,align 4
call void@sml_write(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2,i64 0,i32 2,i64 0)to i8*),i8**inreg getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2,i64 0,i32 2,i64 0),i8*inreg%bN)#0
call void@sml_end()#0
ret void
bY:
%bZ=landingpad{i8*,i8*}
cleanup
%b0=extractvalue{i8*,i8*}%bZ,1
call void@sml_save_exn(i8*inreg%b0)#0
call void@sml_end()#0
resume{i8*,i8*}%bZ
}
define internal fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call fastcc i32@_SMLFN5VarID8generateE(i32 inreg 0)
%i=call i8*@sml_alloc(i32 inreg 28)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177304,i32*%l,align 4
%m=getelementptr inbounds i8,i8*%i,i64 4
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 1
store i32%h,i32*%j,align 4
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
store i8*null,i8**%p,align 8
%q=load i8*,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%i,i64 16
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%i,i64 24
%u=bitcast i8*%t to i32*
store i32 6,i32*%u,align 4
store i8*null,i8**%b,align 8
store i8*%q,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 28)#0
%w=bitcast i8*%v to i32*
%x=getelementptr inbounds i8,i8*%v,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
%z=getelementptr inbounds i8,i8*%v,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
store i32%h,i32*%w,align 4
%B=load i8*,i8**%b,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%v,i64 16
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%v,i64 24
%I=bitcast i8*%H to i32*
store i32 6,i32*%I,align 4
ret i8*%v
}
define internal fastcc i8*@_SMLL4loop_404(i8*inreg%a,i32 inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%c,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%c,%o]
store i8*%n,i8**%f,align 8
%q=icmp eq i8*%p,null
br i1%q,label%r,label%s
r:
ret i8*null
s:
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%n to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=bitcast i8*%A to i32*
%C=getelementptr inbounds i8,i8*%A,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%A,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
store i32%b,i32*%B,align 4
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 2,i32*%K,align 4
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=call fastcc i8*%x(i8*inreg%L,i8*inreg%A)
store i8*%M,i8**%d,align 8
%N=add nsw i32%b,1
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%T=call fastcc i8*@_SMLL4loop_404(i8*inreg%S,i32 inreg%N,i8*inreg%R)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
ret i8*%U
}
define internal fastcc i8*@_SMLLN18ClosureConversion24mapiE_406(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLL4loop_404(i8*inreg%p,i32 inreg 0,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion26removeE_409(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
%p=call fastcc i8*@_SMLFN5VarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%v,i64 12
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%v to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i32*
store i32%o,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=call fastcc i8*%s(i8*inreg%G,i8*inreg%v)
%I=bitcast i8*%H to i32*
%J=load i32,i32*%I,align 4
%K=icmp eq i32%J,0
br i1%K,label%ah,label%L
L:
%M=call fastcc i8*@_SMLFN5VarID3Map6removeE(i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%S,i64 12
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Y=bitcast i8*%S to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i32*
store i32%o,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
%ad=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ae=call fastcc i8*%P(i8*inreg%ad,i8*inreg%S)
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
ret i8*%ag
ah:
%ai=load i8*,i8**%b,align 8
ret i8*%ai
}
define internal fastcc i8*@_SMLLN18ClosureConversion28makeBindE_415(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%F,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
store i32 10,i32*%G,align 4
%L=load i8*,i8**%g,align 8
%M=getelementptr inbounds i8,i8*%F,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN18ClosureConversion28makeBindE_416(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN18ClosureConversion28unionSetE_424(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN5VarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@d,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i32@_SMLLN18ClosureConversion28minusSetE_428(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i32*
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i32**
%k=load i32*,i32**%j,align 8
br label%l
l:
%m=phi i32*[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i32,i32*%m,align 4
%o=call fastcc i8*@_SMLFN5VarID3Map8inDomainE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 12
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i32*
store i32%n,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%r(i8*inreg%I,i8*inreg%x)
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=tail call fastcc i32@_SMLFN4Bool3notE(i32 inreg%L)
ret i32%M
}
define internal fastcc i8*@_SMLLN18ClosureConversion28minusSetE_429(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call fastcc i8*@_SMLFN5VarID3Map6filterE(i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=call i8*@sml_alloc(i32 inreg 12)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177288,i32*%x,align 4
store i8*%v,i8**%e,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN18ClosureConversion28minusSetE_428 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28minusSetE_853 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=call fastcc i8*%s(i8*inreg%N,i8*inreg%C)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8**%b to i8***
%V=load i8**,i8***%U,align 8
%W=load i8*,i8**%V,align 8
%X=tail call fastcc i8*%R(i8*inreg%T,i8*inreg%W)
ret i8*%X
}
define internal fastcc i8*@_SMLL8fvFields_445(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=load i8*,i8**%c,align 8
%p=bitcast i8**%h to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8**[%q,%n],[%m,%l]
%t=phi i8*[%o,%n],[%b,%l]
%u=bitcast i8*%t to i8**
%v=bitcast i8*%t to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
%y=load i8*,i8**%u,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=load i8*,i8**%u,align 8
%D=getelementptr inbounds i8,i8*%C,i64 24
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=load i8*,i8**%u,align 8
%H=getelementptr inbounds i8,i8*%G,i64 32
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%f,align 8
%K=getelementptr inbounds i8,i8*%t,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%g,align 8
%N=load i8*,i8**%s,align 8
store i8*%N,i8**%h,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%i,align 8
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%d,align 8
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aC=call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%aB,i8*inreg%ar)
store i8*%aC,i8**%c,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%g,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%c,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%aD)
ret i8*%aN
}
define internal fastcc i8*@_SMLL9fvBitmaps_446(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=bitcast i8*%r to i8**
%t=bitcast i8*%r to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=load i8*,i8**%s,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%r,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=load i8*,i8**%q,align 8
store i8*%D,i8**%f,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
store i8*%E,i8**%g,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
store i8*null,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%X,i8*inreg%N)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%Z)
ret i8*%aj
}
define internal fastcc i8*@_SMLLN18ClosureConversion25fvExpE_447(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%s,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%x)
ret i8*%H
}
define internal fastcc i8*@_SMLL3bv2_448(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i32**
%k=load i32*,i32**%j,align 8
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 12
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=load i8*,i8**%b,align 8
%v=bitcast i8*%p to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i32*
store i32%l,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=tail call fastcc i8*@_SMLFN5VarID3Set3addE(i8*inreg%p)
ret i8*%A
}
define internal fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_451(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%s,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%w)
ret i8*%G
}
define internal fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%m,align 8
br label%n
n:
%o=phi i8*[%aq,%ao],[%b,%p]
store i8*%o,i8**%g,align 8
%q=load atomic i32,i32*@sml_check_flag unordered,align 4
%r=icmp eq i32%q,0
br i1%r,label%u,label%s
s:
call void@sml_check(i32 inreg%q)
%t=load i8*,i8**%g,align 8
br label%u
u:
%v=phi i8*[%t,%s],[%o,%n]
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 7,label%lS
i32 4,label%lo
i32 3,label%lm
i32 9,label%lk
i32 18,label%kw
i32 6,label%ku
i32 12,label%jG
i32 0,label%hQ
i32 10,label%hb
i32 14,label%fg
i32 15,label%em
i32 11,label%df
i32 13,label%db
i32 8,label%cw
i32 16,label%bl
i32 2,label%ay
i32 17,label%ar
i32 1,label%ai
i32 5,label%Q
]
y:
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%g,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%h,align 8
%D=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[84x i8]}>,<{[4x i8],i32,[84x i8]}>*@f,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%h,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
%R=getelementptr inbounds i8,i8*%v,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 24
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%g,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%g,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to i8**
store i8*null,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%m,align 8
%ah=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%ag,i8*inreg%X)
ret i8*%ah
ai:
%aj=getelementptr inbounds i8,i8*%v,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=getelementptr inbounds i8,i8*%al,i64 8
%an=bitcast i8*%am to i8**
br label%ao
ao:
%ap=phi i8**[%an,%ai],[%de,%db]
%aq=load i8*,i8**%ap,align 8
br label%n
ar:
%as=getelementptr inbounds i8,i8*%v,i64 8
%at=bitcast i8*%as to i8***
%au=load i8**,i8***%at,align 8
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%m,align 8
%ax=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%aw,i8*inreg%av)
ret i8*%ax
ay:
%az=getelementptr inbounds i8,i8*%v,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%h,align 8
%aC=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=call fastcc i8*%aF(i8*inreg%aH,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@e,i64 0,i32 2)to i8*))
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=load i8*,i8**%m,align 8
%aP=call fastcc i8*%aL(i8*inreg%aN,i8*inreg%aO)
%aQ=getelementptr inbounds i8,i8*%aP,i64 16
%aR=bitcast i8*%aQ to i8*(i8*,i8*)**
%aS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aR,align 8
%aT=bitcast i8*%aP to i8**
%aU=load i8*,i8**%aT,align 8
%aV=bitcast i8**%h to i8***
%aW=load i8**,i8***%aV,align 8
%aX=load i8*,i8**%aW,align 8
%aY=call fastcc i8*%aS(i8*inreg%aU,i8*inreg%aX)
%aZ=load i8*,i8**%h,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
%a3=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%aY,i8*inreg%a2)
store i8*%a3,i8**%g,align 8
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 40
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%a9=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%a8,i8*inreg%a7)
store i8*%a9,i8**%h,align 8
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
%bd=load i8*,i8**%g,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=load i8*,i8**%h,align 8
%bg=getelementptr inbounds i8,i8*%ba,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%ba,i64 16
%bj=bitcast i8*%bi to i32*
store i32 3,i32*%bj,align 4
%bk=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%ba)
ret i8*%bk
bl:
%bm=getelementptr inbounds i8,i8*%v,i64 8
%bn=bitcast i8*%bm to i8**
%bo=load i8*,i8**%bn,align 8
store i8*%bo,i8**%g,align 8
%bp=getelementptr inbounds i8,i8*%bo,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%h,align 8
%bs=getelementptr inbounds i8,i8*%bo,i64 40
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
store i8*%bu,i8**%i,align 8
%bv=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bw=getelementptr inbounds i8,i8*%bv,i64 16
%bx=bitcast i8*%bw to i8*(i8*,i8*)**
%by=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bx,align 8
%bz=bitcast i8*%bv to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%j,align 8
%bB=call i8*@sml_alloc(i32 inreg 12)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177288,i32*%bD,align 4
store i8*%bB,i8**%k,align 8
%bE=load i8*,i8**%m,align 8
%bF=bitcast i8*%bB to i8**
store i8*%bE,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bB,i64 8
%bH=bitcast i8*%bG to i32*
store i32 1,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 28)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177304,i32*%bK,align 4
%bL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion25fvExpE_447 to void(...)*),void(...)**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 16
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion25fvExpE_447 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bI,i64 24
%bS=bitcast i8*%bR to i32*
store i32 -2147483647,i32*%bS,align 4
%bT=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bU=call fastcc i8*%by(i8*inreg%bT,i8*inreg%bI)
%bV=getelementptr inbounds i8,i8*%bU,i64 16
%bW=bitcast i8*%bV to i8*(i8*,i8*)**
%bX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bW,align 8
%bY=bitcast i8*%bU to i8**
%bZ=load i8*,i8**%bY,align 8
store i8*%bZ,i8**%j,align 8
%b0=call i8*@sml_alloc(i32 inreg 20)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177296,i32*%b2,align 4
store i8*%b0,i8**%k,align 8
%b3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*null,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
%cc=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cf=getelementptr inbounds i8,i8*%b9,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b9,i64 16
%ci=bitcast i8*%ch to i32*
store i32 3,i32*%ci,align 4
%cj=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ck=call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%cj,i8*inreg%b9)
%cl=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cm=call fastcc i8*%bX(i8*inreg%cl,i8*inreg%ck)
%cn=getelementptr inbounds i8,i8*%cm,i64 16
%co=bitcast i8*%cn to i8*(i8*,i8*)**
%cp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%co,align 8
%cq=bitcast i8*%cm to i8**
%cr=load i8*,i8**%cq,align 8
%cs=bitcast i8**%g to i8***
%ct=load i8**,i8***%cs,align 8
%cu=load i8*,i8**%ct,align 8
%cv=tail call fastcc i8*%cp(i8*inreg%cr,i8*inreg%cu)
ret i8*%cv
cw:
%cx=getelementptr inbounds i8,i8*%v,i64 8
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
store i8*%cz,i8**%h,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 32
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
%cD=load i8*,i8**%m,align 8
%cE=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%cD,i8*inreg%cC)
store i8*%cE,i8**%g,align 8
%cF=bitcast i8**%h to i32***
%cG=load i32**,i32***%cF,align 8
%cH=load i32*,i32**%cG,align 8
%cI=load i32,i32*%cH,align 4
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
%cM=getelementptr inbounds i8,i8*%cJ,i64 12
%cN=bitcast i8*%cM to i32*
store i32 0,i32*%cN,align 1
%cO=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cP=bitcast i8*%cJ to i8**
store i8*%cO,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cJ,i64 8
%cR=bitcast i8*%cQ to i32*
store i32%cI,i32*%cR,align 4
%cS=getelementptr inbounds i8,i8*%cJ,i64 16
%cT=bitcast i8*%cS to i32*
store i32 1,i32*%cT,align 4
%cU=call fastcc i8*@_SMLFN5VarID3Set3addE(i8*inreg%cJ)
%cV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cW=getelementptr inbounds i8,i8*%cV,i64 8
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
%cZ=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%cU,i8*inreg%cY)
store i8*%cZ,i8**%h,align 8
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
%c3=load i8*,i8**%g,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%h,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%c0)
ret i8*%da
db:
%dc=getelementptr inbounds i8,i8*%v,i64 8
%dd=bitcast i8*%dc to i8***
%de=load i8**,i8***%dd,align 8
br label%ao
df:
%dg=getelementptr inbounds i8,i8*%v,i64 8
%dh=bitcast i8*%dg to i8**
%di=load i8*,i8**%dh,align 8
%dj=bitcast i8*%di to i8**
%dk=load i8*,i8**%dj,align 8
store i8*%dk,i8**%g,align 8
%dl=getelementptr inbounds i8,i8*%di,i64 24
%dm=bitcast i8*%dl to i8**
%dn=load i8*,i8**%dm,align 8
store i8*%dn,i8**%h,align 8
%do=getelementptr inbounds i8,i8*%di,i64 40
%dp=bitcast i8*%do to i8**
%dq=load i8*,i8**%dp,align 8
store i8*%dq,i8**%i,align 8
%dr=getelementptr inbounds i8,i8*%di,i64 48
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
store i8*%dt,i8**%j,align 8
%du=getelementptr inbounds i8,i8*%di,i64 56
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%k,align 8
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
store i8*%dx,i8**%l,align 8
%dA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dB=bitcast i8*%dx to i8**
store i8*%dA,i8**%dB,align 8
%dC=getelementptr inbounds i8,i8*%dx,i64 8
%dD=bitcast i8*%dC to i8**
store i8*null,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dx,i64 16
%dF=bitcast i8*%dE to i32*
store i32 3,i32*%dF,align 4
%dG=call i8*@sml_alloc(i32 inreg 20)#0
%dH=getelementptr inbounds i8,i8*%dG,i64 -4
%dI=bitcast i8*%dH to i32*
store i32 1342177296,i32*%dI,align 4
store i8*%dG,i8**%j,align 8
%dJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dK=bitcast i8*%dG to i8**
store i8*%dJ,i8**%dK,align 8
%dL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dM=getelementptr inbounds i8,i8*%dG,i64 8
%dN=bitcast i8*%dM to i8**
store i8*%dL,i8**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dG,i64 16
%dP=bitcast i8*%dO to i32*
store i32 3,i32*%dP,align 4
%dQ=call i8*@sml_alloc(i32 inreg 20)#0
%dR=getelementptr inbounds i8,i8*%dQ,i64 -4
%dS=bitcast i8*%dR to i32*
store i32 1342177296,i32*%dS,align 4
store i8*%dQ,i8**%k,align 8
%dT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dU=bitcast i8*%dQ to i8**
store i8*%dT,i8**%dU,align 8
%dV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dW=getelementptr inbounds i8,i8*%dQ,i64 8
%dX=bitcast i8*%dW to i8**
store i8*%dV,i8**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dQ,i64 16
%dZ=bitcast i8*%dY to i32*
store i32 3,i32*%dZ,align 4
%d0=call i8*@sml_alloc(i32 inreg 20)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177296,i32*%d2,align 4
store i8*%d0,i8**%i,align 8
%d3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d4=bitcast i8*%d0 to i8**
store i8*%d3,i8**%d4,align 8
%d5=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%d6=getelementptr inbounds i8,i8*%d0,i64 8
%d7=bitcast i8*%d6 to i8**
store i8*%d5,i8**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d0,i64 16
%d9=bitcast i8*%d8 to i32*
store i32 3,i32*%d9,align 4
%ea=call i8*@sml_alloc(i32 inreg 20)#0
%eb=getelementptr inbounds i8,i8*%ea,i64 -4
%ec=bitcast i8*%eb to i32*
store i32 1342177296,i32*%ec,align 4
%ed=load i8*,i8**%h,align 8
%ee=bitcast i8*%ea to i8**
store i8*%ed,i8**%ee,align 8
%ef=load i8*,i8**%i,align 8
%eg=getelementptr inbounds i8,i8*%ea,i64 8
%eh=bitcast i8*%eg to i8**
store i8*%ef,i8**%eh,align 8
%ei=getelementptr inbounds i8,i8*%ea,i64 16
%ej=bitcast i8*%ei to i32*
store i32 3,i32*%ej,align 4
%ek=load i8*,i8**%m,align 8
%el=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%ek,i8*inreg%ea)
ret i8*%el
em:
%en=getelementptr inbounds i8,i8*%v,i64 8
%eo=bitcast i8*%en to i8**
%ep=load i8*,i8**%eo,align 8
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
store i8*%er,i8**%g,align 8
%es=getelementptr inbounds i8,i8*%ep,i64 24
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%h,align 8
%ev=getelementptr inbounds i8,i8*%ep,i64 40
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
store i8*%ex,i8**%i,align 8
%ey=getelementptr inbounds i8,i8*%ep,i64 48
%ez=bitcast i8*%ey to i8**
%eA=load i8*,i8**%ez,align 8
store i8*%eA,i8**%j,align 8
%eB=call i8*@sml_alloc(i32 inreg 20)#0
%eC=getelementptr inbounds i8,i8*%eB,i64 -4
%eD=bitcast i8*%eC to i32*
store i32 1342177296,i32*%eD,align 4
store i8*%eB,i8**%k,align 8
%eE=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%eF=bitcast i8*%eB to i8**
store i8*%eE,i8**%eF,align 8
%eG=getelementptr inbounds i8,i8*%eB,i64 8
%eH=bitcast i8*%eG to i8**
store i8*null,i8**%eH,align 8
%eI=getelementptr inbounds i8,i8*%eB,i64 16
%eJ=bitcast i8*%eI to i32*
store i32 3,i32*%eJ,align 4
%eK=call i8*@sml_alloc(i32 inreg 20)#0
%eL=getelementptr inbounds i8,i8*%eK,i64 -4
%eM=bitcast i8*%eL to i32*
store i32 1342177296,i32*%eM,align 4
store i8*%eK,i8**%j,align 8
%eN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eO=bitcast i8*%eK to i8**
store i8*%eN,i8**%eO,align 8
%eP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eQ=getelementptr inbounds i8,i8*%eK,i64 8
%eR=bitcast i8*%eQ to i8**
store i8*%eP,i8**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eK,i64 16
%eT=bitcast i8*%eS to i32*
store i32 3,i32*%eT,align 4
%eU=call i8*@sml_alloc(i32 inreg 20)#0
%eV=getelementptr inbounds i8,i8*%eU,i64 -4
%eW=bitcast i8*%eV to i32*
store i32 1342177296,i32*%eW,align 4
store i8*%eU,i8**%i,align 8
%eX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eY=bitcast i8*%eU to i8**
store i8*%eX,i8**%eY,align 8
%eZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%e0=getelementptr inbounds i8,i8*%eU,i64 8
%e1=bitcast i8*%e0 to i8**
store i8*%eZ,i8**%e1,align 8
%e2=getelementptr inbounds i8,i8*%eU,i64 16
%e3=bitcast i8*%e2 to i32*
store i32 3,i32*%e3,align 4
%e4=call i8*@sml_alloc(i32 inreg 20)#0
%e5=getelementptr inbounds i8,i8*%e4,i64 -4
%e6=bitcast i8*%e5 to i32*
store i32 1342177296,i32*%e6,align 4
%e7=load i8*,i8**%h,align 8
%e8=bitcast i8*%e4 to i8**
store i8*%e7,i8**%e8,align 8
%e9=load i8*,i8**%i,align 8
%fa=getelementptr inbounds i8,i8*%e4,i64 8
%fb=bitcast i8*%fa to i8**
store i8*%e9,i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e4,i64 16
%fd=bitcast i8*%fc to i32*
store i32 3,i32*%fd,align 4
%fe=load i8*,i8**%m,align 8
%ff=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%fe,i8*inreg%e4)
ret i8*%ff
fg:
%fh=getelementptr inbounds i8,i8*%v,i64 8
%fi=bitcast i8*%fh to i8**
%fj=load i8*,i8**%fi,align 8
store i8*%fj,i8**%i,align 8
%fk=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fl=getelementptr inbounds i8,i8*%fk,i64 16
%fm=bitcast i8*%fl to i8*(i8*,i8*)**
%fn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fm,align 8
%fo=bitcast i8*%fk to i8**
%fp=load i8*,i8**%fo,align 8
store i8*%fp,i8**%g,align 8
%fq=call i8*@sml_alloc(i32 inreg 12)#0
%fr=getelementptr inbounds i8,i8*%fq,i64 -4
%fs=bitcast i8*%fr to i32*
store i32 1342177288,i32*%fs,align 4
store i8*%fq,i8**%h,align 8
%ft=load i8*,i8**%m,align 8
%fu=bitcast i8*%fq to i8**
store i8*%ft,i8**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fq,i64 8
%fw=bitcast i8*%fv to i32*
store i32 1,i32*%fw,align 4
%fx=call i8*@sml_alloc(i32 inreg 28)#0
%fy=getelementptr inbounds i8,i8*%fx,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177304,i32*%fz,align 4
%fA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fB=bitcast i8*%fx to i8**
store i8*%fA,i8**%fB,align 8
%fC=getelementptr inbounds i8,i8*%fx,i64 8
%fD=bitcast i8*%fC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8fvFields_445 to void(...)*),void(...)**%fD,align 8
%fE=getelementptr inbounds i8,i8*%fx,i64 16
%fF=bitcast i8*%fE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL8fvFields_445 to void(...)*),void(...)**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fx,i64 24
%fH=bitcast i8*%fG to i32*
store i32 -2147483647,i32*%fH,align 4
%fI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fJ=call fastcc i8*%fn(i8*inreg%fI,i8*inreg%fx)
%fK=getelementptr inbounds i8,i8*%fJ,i64 16
%fL=bitcast i8*%fK to i8*(i8*,i8*)**
%fM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fL,align 8
%fN=bitcast i8*%fJ to i8**
%fO=load i8*,i8**%fN,align 8
store i8*%fO,i8**%g,align 8
%fP=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%fQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fR=call fastcc i8*%fM(i8*inreg%fQ,i8*inreg%fP)
%fS=getelementptr inbounds i8,i8*%fR,i64 16
%fT=bitcast i8*%fS to i8*(i8*,i8*)**
%fU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fT,align 8
%fV=bitcast i8*%fR to i8**
%fW=load i8*,i8**%fV,align 8
%fX=load i8*,i8**%i,align 8
%fY=getelementptr inbounds i8,i8*%fX,i64 24
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
%f1=call fastcc i8*%fU(i8*inreg%fW,i8*inreg%f0)
store i8*%f1,i8**%g,align 8
%f2=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%f3=getelementptr inbounds i8,i8*%f2,i64 16
%f4=bitcast i8*%f3 to i8*(i8*,i8*)**
%f5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f4,align 8
%f6=bitcast i8*%f2 to i8**
%f7=load i8*,i8**%f6,align 8
store i8*%f7,i8**%h,align 8
%f8=call i8*@sml_alloc(i32 inreg 12)#0
%f9=getelementptr inbounds i8,i8*%f8,i64 -4
%ga=bitcast i8*%f9 to i32*
store i32 1342177288,i32*%ga,align 4
store i8*%f8,i8**%j,align 8
%gb=load i8*,i8**%m,align 8
%gc=bitcast i8*%f8 to i8**
store i8*%gb,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f8,i64 8
%ge=bitcast i8*%gd to i32*
store i32 1,i32*%ge,align 4
%gf=call i8*@sml_alloc(i32 inreg 28)#0
%gg=getelementptr inbounds i8,i8*%gf,i64 -4
%gh=bitcast i8*%gg to i32*
store i32 1342177304,i32*%gh,align 4
%gi=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gj=bitcast i8*%gf to i8**
store i8*%gi,i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%gf,i64 8
%gl=bitcast i8*%gk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fvBitmaps_446 to void(...)*),void(...)**%gl,align 8
%gm=getelementptr inbounds i8,i8*%gf,i64 16
%gn=bitcast i8*%gm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fvBitmaps_446 to void(...)*),void(...)**%gn,align 8
%go=getelementptr inbounds i8,i8*%gf,i64 24
%gp=bitcast i8*%go to i32*
store i32 -2147483647,i32*%gp,align 4
%gq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gr=call fastcc i8*%f5(i8*inreg%gq,i8*inreg%gf)
%gs=getelementptr inbounds i8,i8*%gr,i64 16
%gt=bitcast i8*%gs to i8*(i8*,i8*)**
%gu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gt,align 8
%gv=bitcast i8*%gr to i8**
%gw=load i8*,i8**%gv,align 8
store i8*%gw,i8**%h,align 8
%gx=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%gy=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gz=call fastcc i8*%gu(i8*inreg%gy,i8*inreg%gx)
%gA=getelementptr inbounds i8,i8*%gz,i64 16
%gB=bitcast i8*%gA to i8*(i8*,i8*)**
%gC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gB,align 8
%gD=bitcast i8*%gz to i8**
%gE=load i8*,i8**%gD,align 8
%gF=load i8*,i8**%i,align 8
%gG=getelementptr inbounds i8,i8*%gF,i64 8
%gH=bitcast i8*%gG to i8**
%gI=load i8*,i8**%gH,align 8
%gJ=call fastcc i8*%gC(i8*inreg%gE,i8*inreg%gI)
store i8*%gJ,i8**%h,align 8
%gK=bitcast i8**%i to i8***
%gL=load i8**,i8***%gK,align 8
store i8*null,i8**%i,align 8
%gM=load i8*,i8**%gL,align 8
%gN=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gO=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%gN,i8*inreg%gM)
store i8*%gO,i8**%i,align 8
%gP=call i8*@sml_alloc(i32 inreg 20)#0
%gQ=getelementptr inbounds i8,i8*%gP,i64 -4
%gR=bitcast i8*%gQ to i32*
store i32 1342177296,i32*%gR,align 4
%gS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gT=bitcast i8*%gP to i8**
store i8*%gS,i8**%gT,align 8
%gU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gV=getelementptr inbounds i8,i8*%gP,i64 8
%gW=bitcast i8*%gV to i8**
store i8*%gU,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gP,i64 16
%gY=bitcast i8*%gX to i32*
store i32 3,i32*%gY,align 4
%gZ=call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%gP)
store i8*%gZ,i8**%g,align 8
%g0=call i8*@sml_alloc(i32 inreg 20)#0
%g1=getelementptr inbounds i8,i8*%g0,i64 -4
%g2=bitcast i8*%g1 to i32*
store i32 1342177296,i32*%g2,align 4
%g3=load i8*,i8**%g,align 8
%g4=bitcast i8*%g0 to i8**
store i8*%g3,i8**%g4,align 8
%g5=load i8*,i8**%h,align 8
%g6=getelementptr inbounds i8,i8*%g0,i64 8
%g7=bitcast i8*%g6 to i8**
store i8*%g5,i8**%g7,align 8
%g8=getelementptr inbounds i8,i8*%g0,i64 16
%g9=bitcast i8*%g8 to i32*
store i32 3,i32*%g9,align 4
%ha=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%g0)
ret i8*%ha
hb:
%hc=getelementptr inbounds i8,i8*%v,i64 8
%hd=bitcast i8*%hc to i8**
%he=load i8*,i8**%hd,align 8
store i8*%he,i8**%h,align 8
%hf=bitcast i8*%he to i8**
%hg=load i8*,i8**%hf,align 8
%hh=load i8*,i8**%m,align 8
%hi=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%hh,i8*inreg%hg)
store i8*%hi,i8**%g,align 8
%hj=load i8*,i8**%h,align 8
%hk=getelementptr inbounds i8,i8*%hj,i64 8
%hl=bitcast i8*%hk to i32**
%hm=load i32*,i32**%hl,align 8
%hn=load i32,i32*%hm,align 4
%ho=call i8*@sml_alloc(i32 inreg 20)#0
%hp=getelementptr inbounds i8,i8*%ho,i64 -4
%hq=bitcast i8*%hp to i32*
store i32 1342177296,i32*%hq,align 4
%hr=getelementptr inbounds i8,i8*%ho,i64 12
%hs=bitcast i8*%hr to i32*
store i32 0,i32*%hs,align 1
%ht=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%hu=bitcast i8*%ho to i8**
store i8*%ht,i8**%hu,align 8
%hv=getelementptr inbounds i8,i8*%ho,i64 8
%hw=bitcast i8*%hv to i32*
store i32%hn,i32*%hw,align 4
%hx=getelementptr inbounds i8,i8*%ho,i64 16
%hy=bitcast i8*%hx to i32*
store i32 1,i32*%hy,align 4
%hz=call fastcc i8*@_SMLFN5VarID3Set3addE(i8*inreg%ho)
%hA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hB=getelementptr inbounds i8,i8*%hA,i64 24
%hC=bitcast i8*%hB to i8**
%hD=load i8*,i8**%hC,align 8
%hE=call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%hz,i8*inreg%hD)
store i8*%hE,i8**%h,align 8
%hF=call i8*@sml_alloc(i32 inreg 20)#0
%hG=getelementptr inbounds i8,i8*%hF,i64 -4
%hH=bitcast i8*%hG to i32*
store i32 1342177296,i32*%hH,align 4
%hI=load i8*,i8**%g,align 8
%hJ=bitcast i8*%hF to i8**
store i8*%hI,i8**%hJ,align 8
%hK=load i8*,i8**%h,align 8
%hL=getelementptr inbounds i8,i8*%hF,i64 8
%hM=bitcast i8*%hL to i8**
store i8*%hK,i8**%hM,align 8
%hN=getelementptr inbounds i8,i8*%hF,i64 16
%hO=bitcast i8*%hN to i32*
store i32 3,i32*%hO,align 4
%hP=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%hF)
ret i8*%hP
hQ:
%hR=getelementptr inbounds i8,i8*%v,i64 8
%hS=bitcast i8*%hR to i8**
%hT=load i8*,i8**%hS,align 8
store i8*%hT,i8**%h,align 8
%hU=bitcast i8*%hT to i8**
%hV=load i8*,i8**%hU,align 8
store i8*%hV,i8**%g,align 8
%hW=getelementptr inbounds i8,i8*%hT,i64 16
%hX=bitcast i8*%hW to i8**
%hY=load i8*,i8**%hX,align 8
store i8*%hY,i8**%i,align 8
%hZ=getelementptr inbounds i8,i8*%hT,i64 24
%h0=bitcast i8*%hZ to i8**
%h1=load i8*,i8**%h0,align 8
store i8*%h1,i8**%j,align 8
%h2=call i8*@sml_alloc(i32 inreg 20)#0
%h3=getelementptr inbounds i8,i8*%h2,i64 -4
%h4=bitcast i8*%h3 to i32*
store i32 1342177296,i32*%h4,align 4
store i8*%h2,i8**%k,align 8
%h5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%h6=bitcast i8*%h2 to i8**
store i8*%h5,i8**%h6,align 8
%h7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%h8=getelementptr inbounds i8,i8*%h2,i64 8
%h9=bitcast i8*%h8 to i8**
store i8*%h7,i8**%h9,align 8
%ia=getelementptr inbounds i8,i8*%h2,i64 16
%ib=bitcast i8*%ia to i32*
store i32 3,i32*%ib,align 4
%ic=call i8*@sml_alloc(i32 inreg 20)#0
%id=getelementptr inbounds i8,i8*%ic,i64 -4
%ie=bitcast i8*%id to i32*
store i32 1342177296,i32*%ie,align 4
%if=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ig=bitcast i8*%ic to i8**
store i8*%if,i8**%ig,align 8
%ih=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ii=getelementptr inbounds i8,i8*%ic,i64 8
%ij=bitcast i8*%ii to i8**
store i8*%ih,i8**%ij,align 8
%ik=getelementptr inbounds i8,i8*%ic,i64 16
%il=bitcast i8*%ik to i32*
store i32 3,i32*%il,align 4
%im=load i8*,i8**%m,align 8
%in=call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%im,i8*inreg%ic)
store i8*%in,i8**%g,align 8
%io=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ip=getelementptr inbounds i8,i8*%io,i64 8
%iq=bitcast i8*%ip to i8**
%ir=load i8*,i8**%iq,align 8
%is=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%it=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%it)
%iu=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iu)
%iv=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iv)
%iw=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iw)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%is,i8**%e,align 8
store i8*%ir,i8**%c,align 8
%ix=load atomic i32,i32*@sml_check_flag unordered,align 4
%iy=icmp eq i32%ix,0
br i1%iy,label%iB,label%iz
iz:
call void@sml_check(i32 inreg%ix)
%iA=load i8*,i8**%c,align 8
br label%iB
iB:
%iC=phi i8*[%iA,%iz],[%ir,%hQ]
%iD=bitcast i8*%iC to i32*
%iE=load i32,i32*%iD,align 4
switch i32%iE,label%iF[
i32 1,label%jr
i32 0,label%iX
]
iF:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%iG=load i8*,i8**@_SMLZ5Match,align 8
store i8*%iG,i8**%c,align 8
%iH=call i8*@sml_alloc(i32 inreg 20)#0
%iI=getelementptr inbounds i8,i8*%iH,i64 -4
%iJ=bitcast i8*%iI to i32*
store i32 1342177296,i32*%iJ,align 4
store i8*%iH,i8**%d,align 8
%iK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iL=bitcast i8*%iH to i8**
store i8*%iK,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iH,i64 8
%iN=bitcast i8*%iM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@g,i64 0,i32 2,i64 0),i8**%iN,align 8
%iO=getelementptr inbounds i8,i8*%iH,i64 16
%iP=bitcast i8*%iO to i32*
store i32 3,i32*%iP,align 4
%iQ=call i8*@sml_alloc(i32 inreg 60)#0
%iR=getelementptr inbounds i8,i8*%iQ,i64 -4
%iS=bitcast i8*%iR to i32*
store i32 1342177336,i32*%iS,align 4
%iT=getelementptr inbounds i8,i8*%iQ,i64 56
%iU=bitcast i8*%iT to i32*
store i32 1,i32*%iU,align 4
%iV=load i8*,i8**%d,align 8
%iW=bitcast i8*%iQ to i8**
store i8*%iV,i8**%iW,align 8
call void@sml_raise(i8*inreg%iQ)#1
unreachable
iX:
%iY=getelementptr inbounds i8,i8*%iC,i64 8
%iZ=bitcast i8*%iY to i8**
%i0=load i8*,i8**%iZ,align 8
%i1=bitcast i8*%i0 to i8**
%i2=load i8*,i8**%i1,align 8
store i8*%i2,i8**%c,align 8
%i3=getelementptr inbounds i8,i8*%i0,i64 8
%i4=bitcast i8*%i3 to i8**
%i5=load i8*,i8**%i4,align 8
store i8*%i5,i8**%d,align 8
%i6=call i8*@sml_alloc(i32 inreg 20)#0
%i7=getelementptr inbounds i8,i8*%i6,i64 -4
%i8=bitcast i8*%i7 to i32*
store i32 1342177296,i32*%i8,align 4
store i8*%i6,i8**%f,align 8
%i9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ja=bitcast i8*%i6 to i8**
store i8*%i9,i8**%ja,align 8
%jb=getelementptr inbounds i8,i8*%i6,i64 8
%jc=bitcast i8*%jb to i8**
store i8*null,i8**%jc,align 8
%jd=getelementptr inbounds i8,i8*%i6,i64 16
%je=bitcast i8*%jd to i32*
store i32 3,i32*%je,align 4
%jf=call i8*@sml_alloc(i32 inreg 20)#0
%jg=getelementptr inbounds i8,i8*%jf,i64 -4
%jh=bitcast i8*%jg to i32*
store i32 1342177296,i32*%jh,align 4
%ji=load i8*,i8**%c,align 8
%jj=bitcast i8*%jf to i8**
store i8*%ji,i8**%jj,align 8
%jk=load i8*,i8**%f,align 8
%jl=getelementptr inbounds i8,i8*%jf,i64 8
%jm=bitcast i8*%jl to i8**
store i8*%jk,i8**%jm,align 8
%jn=getelementptr inbounds i8,i8*%jf,i64 16
%jo=bitcast i8*%jn to i32*
store i32 3,i32*%jo,align 4
%jp=load i8*,i8**%e,align 8
%jq=call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%jp,i8*inreg%jf)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%it)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iu)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iw)
br label%jt
jr:
%js=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%it)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iu)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iw)
br label%jt
jt:
%ju=phi i8*[%jq,%iX],[%js,%jr]
store i8*%ju,i8**%h,align 8
%jv=call i8*@sml_alloc(i32 inreg 20)#0
%jw=getelementptr inbounds i8,i8*%jv,i64 -4
%jx=bitcast i8*%jw to i32*
store i32 1342177296,i32*%jx,align 4
%jy=load i8*,i8**%g,align 8
%jz=bitcast i8*%jv to i8**
store i8*%jy,i8**%jz,align 8
%jA=load i8*,i8**%h,align 8
%jB=getelementptr inbounds i8,i8*%jv,i64 8
%jC=bitcast i8*%jB to i8**
store i8*%jA,i8**%jC,align 8
%jD=getelementptr inbounds i8,i8*%jv,i64 16
%jE=bitcast i8*%jD to i32*
store i32 3,i32*%jE,align 4
%jF=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%jv)
ret i8*%jF
jG:
%jH=getelementptr inbounds i8,i8*%v,i64 8
%jI=bitcast i8*%jH to i8**
%jJ=load i8*,i8**%jI,align 8
%jK=bitcast i8*%jJ to i8**
%jL=load i8*,i8**%jK,align 8
store i8*%jL,i8**%h,align 8
%jM=getelementptr inbounds i8,i8*%jJ,i64 8
%jN=bitcast i8*%jM to i8**
%jO=load i8*,i8**%jN,align 8
store i8*%jO,i8**%g,align 8
%jP=getelementptr inbounds i8,i8*%jJ,i64 16
%jQ=bitcast i8*%jP to i8**
%jR=load i8*,i8**%jQ,align 8
store i8*%jR,i8**%i,align 8
%jS=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%jT=getelementptr inbounds i8,i8*%jS,i64 16
%jU=bitcast i8*%jT to i8*(i8*,i8*)**
%jV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jU,align 8
%jW=bitcast i8*%jS to i8**
%jX=load i8*,i8**%jW,align 8
store i8*%jX,i8**%k,align 8
%jY=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%jZ=getelementptr inbounds i8,i8*%jY,i64 16
%j0=bitcast i8*%jZ to i8*(i8*,i8*)**
%j1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j0,align 8
%j2=bitcast i8*%jY to i8**
%j3=load i8*,i8**%j2,align 8
store i8*%j3,i8**%j,align 8
%j4=call i8*@sml_alloc(i32 inreg 20)#0
%j5=getelementptr inbounds i8,i8*%j4,i64 -4
%j6=bitcast i8*%j5 to i32*
store i32 1342177296,i32*%j6,align 4
%j7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%j8=bitcast i8*%j4 to i8**
store i8*%j7,i8**%j8,align 8
%j9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ka=getelementptr inbounds i8,i8*%j4,i64 8
%kb=bitcast i8*%ka to i8**
store i8*%j9,i8**%kb,align 8
%kc=getelementptr inbounds i8,i8*%j4,i64 16
%kd=bitcast i8*%kc to i32*
store i32 3,i32*%kd,align 4
%ke=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kf=call fastcc i8*%j1(i8*inreg%ke,i8*inreg%j4)
store i8*%kf,i8**%g,align 8
%kg=call i8*@sml_alloc(i32 inreg 20)#0
%kh=getelementptr inbounds i8,i8*%kg,i64 -4
%ki=bitcast i8*%kh to i32*
store i32 1342177296,i32*%ki,align 4
%kj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kk=bitcast i8*%kg to i8**
store i8*%kj,i8**%kk,align 8
%kl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%km=getelementptr inbounds i8,i8*%kg,i64 8
%kn=bitcast i8*%km to i8**
store i8*%kl,i8**%kn,align 8
%ko=getelementptr inbounds i8,i8*%kg,i64 16
%kp=bitcast i8*%ko to i32*
store i32 3,i32*%kp,align 4
%kq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kr=call fastcc i8*%jV(i8*inreg%kq,i8*inreg%kg)
%ks=load i8*,i8**%m,align 8
%kt=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%ks,i8*inreg%kr)
ret i8*%kt
ku:
%kv=tail call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%kv
kw:
%kx=getelementptr inbounds i8,i8*%v,i64 8
%ky=bitcast i8*%kx to i8**
%kz=load i8*,i8**%ky,align 8
store i8*%kz,i8**%g,align 8
%kA=getelementptr inbounds i8,i8*%kz,i64 8
%kB=bitcast i8*%kA to i32**
%kC=load i32*,i32**%kB,align 8
%kD=load i32,i32*%kC,align 4
%kE=call i8*@sml_alloc(i32 inreg 20)#0
%kF=getelementptr inbounds i8,i8*%kE,i64 -4
%kG=bitcast i8*%kF to i32*
store i32 1342177296,i32*%kG,align 4
%kH=getelementptr inbounds i8,i8*%kE,i64 12
%kI=bitcast i8*%kH to i32*
store i32 0,i32*%kI,align 1
%kJ=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%kK=bitcast i8*%kE to i8**
store i8*%kJ,i8**%kK,align 8
%kL=getelementptr inbounds i8,i8*%kE,i64 8
%kM=bitcast i8*%kL to i32*
store i32%kD,i32*%kM,align 4
%kN=getelementptr inbounds i8,i8*%kE,i64 16
%kO=bitcast i8*%kN to i32*
store i32 1,i32*%kO,align 4
%kP=call fastcc i32@_SMLFN5VarID3Set6memberE(i8*inreg%kE)
%kQ=icmp eq i32%kP,0
br i1%kQ,label%kT,label%kR
kR:
%kS=tail call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%kS
kT:
%kU=load i8*,i8**%g,align 8
%kV=getelementptr inbounds i8,i8*%kU,i64 8
%kW=bitcast i8*%kV to i8**
%kX=load i8*,i8**%kW,align 8
store i8*%kX,i8**%g,align 8
%kY=call fastcc i8*@_SMLFN5VarID3Map9singletonE(i32 inreg 1,i32 inreg 8)
%kZ=getelementptr inbounds i8,i8*%kY,i64 16
%k0=bitcast i8*%kZ to i8*(i8*,i8*)**
%k1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k0,align 8
%k2=bitcast i8*%kY to i8**
%k3=load i8*,i8**%k2,align 8
store i8*%k3,i8**%h,align 8
%k4=bitcast i8**%g to i32**
%k5=load i32*,i32**%k4,align 8
%k6=load i32,i32*%k5,align 4
%k7=call i8*@sml_alloc(i32 inreg 20)#0
%k8=bitcast i8*%k7 to i32*
%k9=getelementptr inbounds i8,i8*%k7,i64 -4
%la=bitcast i8*%k9 to i32*
store i32 1342177296,i32*%la,align 4
%lb=getelementptr inbounds i8,i8*%k7,i64 4
%lc=bitcast i8*%lb to i32*
store i32 0,i32*%lc,align 1
store i32%k6,i32*%k8,align 4
%ld=load i8*,i8**%g,align 8
%le=getelementptr inbounds i8,i8*%k7,i64 8
%lf=bitcast i8*%le to i8**
store i8*%ld,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%k7,i64 16
%lh=bitcast i8*%lg to i32*
store i32 2,i32*%lh,align 4
%li=load i8*,i8**%h,align 8
%lj=tail call fastcc i8*%k1(i8*inreg%li,i8*inreg%k7)
ret i8*%lj
lk:
%ll=tail call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%ll
lm:
%ln=tail call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%ln
lo:
%lp=getelementptr inbounds i8,i8*%v,i64 8
%lq=bitcast i8*%lp to i8**
%lr=load i8*,i8**%lq,align 8
%ls=bitcast i8*%lr to i8**
%lt=load i8*,i8**%ls,align 8
store i8*%lt,i8**%g,align 8
%lu=getelementptr inbounds i8,i8*%lr,i64 8
%lv=bitcast i8*%lu to i8**
%lw=load i8*,i8**%lv,align 8
store i8*%lw,i8**%h,align 8
%lx=call i8*@sml_alloc(i32 inreg 20)#0
%ly=getelementptr inbounds i8,i8*%lx,i64 -4
%lz=bitcast i8*%ly to i32*
store i32 1342177296,i32*%lz,align 4
store i8*%lx,i8**%i,align 8
%lA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lB=bitcast i8*%lx to i8**
store i8*%lA,i8**%lB,align 8
%lC=getelementptr inbounds i8,i8*%lx,i64 8
%lD=bitcast i8*%lC to i8**
store i8*null,i8**%lD,align 8
%lE=getelementptr inbounds i8,i8*%lx,i64 16
%lF=bitcast i8*%lE to i32*
store i32 3,i32*%lF,align 4
%lG=call i8*@sml_alloc(i32 inreg 20)#0
%lH=getelementptr inbounds i8,i8*%lG,i64 -4
%lI=bitcast i8*%lH to i32*
store i32 1342177296,i32*%lI,align 4
%lJ=load i8*,i8**%h,align 8
%lK=bitcast i8*%lG to i8**
store i8*%lJ,i8**%lK,align 8
%lL=load i8*,i8**%i,align 8
%lM=getelementptr inbounds i8,i8*%lG,i64 8
%lN=bitcast i8*%lM to i8**
store i8*%lL,i8**%lN,align 8
%lO=getelementptr inbounds i8,i8*%lG,i64 16
%lP=bitcast i8*%lO to i32*
store i32 3,i32*%lP,align 4
%lQ=load i8*,i8**%m,align 8
%lR=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%lQ,i8*inreg%lG)
ret i8*%lR
lS:
%lT=getelementptr inbounds i8,i8*%v,i64 8
%lU=bitcast i8*%lT to i8**
%lV=load i8*,i8**%lU,align 8
%lW=bitcast i8*%lV to i8**
%lX=load i8*,i8**%lW,align 8
store i8*%lX,i8**%g,align 8
%lY=getelementptr inbounds i8,i8*%lV,i64 16
%lZ=bitcast i8*%lY to i8**
%l0=load i8*,i8**%lZ,align 8
store i8*%l0,i8**%h,align 8
%l1=call i8*@sml_alloc(i32 inreg 20)#0
%l2=getelementptr inbounds i8,i8*%l1,i64 -4
%l3=bitcast i8*%l2 to i32*
store i32 1342177296,i32*%l3,align 4
%l4=load i8*,i8**%h,align 8
%l5=bitcast i8*%l1 to i8**
store i8*%l4,i8**%l5,align 8
%l6=load i8*,i8**%g,align 8
%l7=getelementptr inbounds i8,i8*%l1,i64 8
%l8=bitcast i8*%l7 to i8**
store i8*%l6,i8**%l8,align 8
%l9=getelementptr inbounds i8,i8*%l1,i64 16
%ma=bitcast i8*%l9 to i32*
store i32 3,i32*%ma,align 4
%mb=load i8*,i8**%m,align 8
%mc=tail call fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%mb,i8*inreg%l1)
ret i8*%mc
}
define internal fastcc i8*@_SMLLN18ClosureConversion29fvExpListE_432(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29fvExpListE_451 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29fvExpListE_451 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%d,align 8
%P=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=call fastcc i8*%M(i8*inreg%Q,i8*inreg%P)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
%Y=tail call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
ret i8*%Y
}
define internal fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_453(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=bitcast i8*%h to i32**
%k=load i32*,i32**%j,align 8
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 12
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=load i8*,i8**%b,align 8
%v=bitcast i8*%p to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i32*
store i32%l,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=tail call fastcc i8*@_SMLFN5VarID3Set3addE(i8*inreg%p)
ret i8*%A
}
define internal fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_455(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**@_SMLZN5VarID3Set5emptyE,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8**%b to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%w(i8*inreg%y,i8*inreg%B)
%D=load i8*,i8**%b,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=tail call fastcc i8*@_SMLLN18ClosureConversion25fvExpE_431(i8*inreg%C,i8*inreg%G)
ret i8*%H
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_474(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_475(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_476(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_477(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_478(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_479(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%o
l:
%m=bitcast i8*%a to i8**
%n=bitcast i8**%i to i8***
br label%s
o:
call void@sml_check(i32 inreg%j)
%p=load i8*,i8**%c,align 8
%q=bitcast i8**%i to i8***
%r=load i8**,i8***%q,align 8
br label%s
s:
%t=phi i8***[%n,%l],[%q,%o]
%u=phi i8*[%b,%l],[%p,%o]
%v=phi i8**[%m,%l],[%r,%o]
%w=bitcast i8*%u to i8**
%x=getelementptr inbounds i8,i8*%u,i64 16
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=getelementptr inbounds i8,i8*%u,i64 40
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%h,align 8
%D=load i8*,i8**%v,align 8
%E=load i8*,i8**%w,align 8
%F=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%D,i8*inreg%E)
store i8*%F,i8**%d,align 8
%G=load i8**,i8***%t,align 8
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%I,i64 24
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%H,i8*inreg%L)
store i8*%M,i8**%e,align 8
%N=load i8**,i8***%t,align 8
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 32
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%O,i8*inreg%S)
store i8*%T,i8**%f,align 8
%U=load i8**,i8***%t,align 8
store i8*null,i8**%i,align 8
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%V,i8*inreg%Z)
store i8*%aa,i8**%c,align 8
%ab=call i8*@sml_alloc(i32 inreg 52)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177328,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=load i8*,i8**%g,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ab,i64 24
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=load i8*,i8**%f,align 8
%aq=getelementptr inbounds i8,i8*%ab,i64 32
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%h,align 8
%at=getelementptr inbounds i8,i8*%ab,i64 40
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ab,i64 48
%aw=bitcast i8*%av to i32*
store i32 63,i32*%aw,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_480(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%e to i8***
br label%o
k:
call void@sml_check(i32 inreg%f)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8***[%j,%h],[%m,%k]
%q=phi i8**[%i,%h],[%n,%k]
%r=phi i8*[%b,%h],[%l,%k]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%r,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%s,i8*inreg%v)
store i8*%w,i8**%d,align 8
%x=load i8**,i8***%p,align 8
store i8*null,i8**%e,align 8
%y=load i8*,i8**%x,align 8
%z=bitcast i8**%c to i8***
%A=load i8**,i8***%z,align 8
store i8*null,i8**%c,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%y,i8*inreg%B)
store i8*%C,i8**%c,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
ret i8*%D
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_481(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
store i8*null,i8**%c,align 8
%s=load i8*,i8**%n,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%s,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLL6subst2_482(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=getelementptr inbounds i8,i8*%h,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=bitcast i8*%h to i32**
%n=load i32*,i32**%m,align 8
%o=load i32,i32*%n,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%p,i64 12
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
%u=load i8*,i8**%b,align 8
%v=bitcast i8*%p to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i32*
store i32%o,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=tail call fastcc i8*@_SMLLN18ClosureConversion26removeE_409(i8*inreg%p)
ret i8*%A
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_484(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
v:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%a,i8**%o,align 8
store i8*%b,i8**%f,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%t,label%r
r:
call void@sml_check(i32 inreg%p)
%s=load i8*,i8**%f,align 8
br label%t
t:
%u=phi i8*[%s,%r],[%b,%v]
%w=bitcast i8*%u to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 7,label%tj
i32 4,label%ss
i32 3,label%rT
i32 9,label%rT
i32 18,label%rU
i32 6,label%rT
i32 12,label%pq
i32 0,label%mT
i32 10,label%lU
i32 14,label%jQ
i32 15,label%iB
i32 11,label%hd
i32 13,label%gB
i32 8,label%fw
i32 16,label%d2
i32 2,label%cK
i32 17,label%bx
i32 1,label%aI
i32 5,label%Q
]
y:
store i8*null,i8**%o,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%f,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%g,align 8
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[85x i8]}>,<{[4x i8],i32,[85x i8]}>*@j,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%g,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%u,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%g,align 8
%W=getelementptr inbounds i8,i8*%T,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%h,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%i,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ag=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%af,i8*inreg%ae)
store i8*%ag,i8**%f,align 8
%ah=call i8*@sml_alloc(i32 inreg 36)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177312,i32*%aj,align 4
store i8*%ah,i8**%j,align 8
%ak=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%ah,i64 24
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ah,i64 32
%aw=bitcast i8*%av to i32*
store i32 15,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=bitcast i8*%ax to i32*
%az=getelementptr inbounds i8,i8*%ax,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=getelementptr inbounds i8,i8*%ax,i64 4
%aC=bitcast i8*%aB to i32*
store i32 0,i32*%aC,align 1
store i32 5,i32*%ay,align 4
%aD=load i8*,i8**%j,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
ret i8*%ax
aI:
store i8*null,i8**%f,align 8
%aJ=getelementptr inbounds i8,i8*%u,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=bitcast i8*%aL to i32*
%aN=load i32,i32*%aM,align 4
%aO=getelementptr inbounds i8,i8*%aL,i64 16
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%g,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 24
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%h,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 32
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%i,align 8
%aX=getelementptr inbounds i8,i8*%aL,i64 8
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%a1=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%a0,i8*inreg%aZ)
store i8*%a1,i8**%f,align 8
%a2=call i8*@sml_alloc(i32 inreg 44)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177320,i32*%a4,align 4
store i8*%a2,i8**%j,align 8
%a5=getelementptr inbounds i8,i8*%a2,i64 4
%a6=bitcast i8*%a5 to i32*
store i32 0,i32*%a6,align 1
%a7=bitcast i8*%a2 to i32*
store i32%aN,i32*%a7,align 4
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bc=getelementptr inbounds i8,i8*%a2,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bf=getelementptr inbounds i8,i8*%a2,i64 24
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bi=getelementptr inbounds i8,i8*%a2,i64 32
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%a2,i64 40
%bl=bitcast i8*%bk to i32*
store i32 30,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=bitcast i8*%bm to i32*
%bo=getelementptr inbounds i8,i8*%bm,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=getelementptr inbounds i8,i8*%bm,i64 4
%br=bitcast i8*%bq to i32*
store i32 0,i32*%br,align 1
store i32 1,i32*%bn,align 4
%bs=load i8*,i8**%j,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i32*
store i32 2,i32*%bw,align 4
ret i8*%bm
bx:
%by=getelementptr inbounds i8,i8*%u,i64 8
%bz=bitcast i8*%by to i8**
%bA=load i8*,i8**%bz,align 8
store i8*%bA,i8**%f,align 8
%bB=getelementptr inbounds i8,i8*%bA,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%g,align 8
%bE=getelementptr inbounds i8,i8*%bA,i64 16
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%h,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 24
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%i,align 8
%bK=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bL=getelementptr inbounds i8,i8*%bK,i64 16
%bM=bitcast i8*%bL to i8*(i8*,i8*)**
%bN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bM,align 8
%bO=bitcast i8*%bK to i8**
%bP=load i8*,i8**%bO,align 8
store i8*%bP,i8**%j,align 8
%bQ=call i8*@sml_alloc(i32 inreg 12)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177288,i32*%bS,align 4
store i8*%bQ,i8**%k,align 8
%bT=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bQ,i64 8
%bW=bitcast i8*%bV to i32*
store i32 1,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 28)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177304,i32*%bZ,align 4
%b0=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bX,i64 8
%b3=bitcast i8*%b2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_484 to void(...)*),void(...)**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bX,i64 16
%b5=bitcast i8*%b4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_484 to void(...)*),void(...)**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bX,i64 24
%b7=bitcast i8*%b6 to i32*
store i32 -2147483647,i32*%b7,align 4
%b8=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b9=call fastcc i8*%bN(i8*inreg%b8,i8*inreg%bX)
%ca=getelementptr inbounds i8,i8*%b9,i64 16
%cb=bitcast i8*%ca to i8*(i8*,i8*)**
%cc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cb,align 8
%cd=bitcast i8*%b9 to i8**
%ce=load i8*,i8**%cd,align 8
%cf=bitcast i8**%f to i8***
%cg=load i8**,i8***%cf,align 8
store i8*null,i8**%f,align 8
%ch=load i8*,i8**%cg,align 8
%ci=call fastcc i8*%cc(i8*inreg%ce,i8*inreg%ch)
store i8*%ci,i8**%f,align 8
%cj=call i8*@sml_alloc(i32 inreg 36)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177312,i32*%cl,align 4
store i8*%cj,i8**%j,align 8
%cm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cp=getelementptr inbounds i8,i8*%cj,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 16
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cv=getelementptr inbounds i8,i8*%cj,i64 24
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cj,i64 32
%cy=bitcast i8*%cx to i32*
store i32 15,i32*%cy,align 4
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=bitcast i8*%cz to i32*
%cB=getelementptr inbounds i8,i8*%cz,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
%cD=getelementptr inbounds i8,i8*%cz,i64 4
%cE=bitcast i8*%cD to i32*
store i32 0,i32*%cE,align 1
store i32 17,i32*%cA,align 4
%cF=load i8*,i8**%j,align 8
%cG=getelementptr inbounds i8,i8*%cz,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 2,i32*%cJ,align 4
ret i8*%cz
cK:
store i8*null,i8**%f,align 8
%cL=getelementptr inbounds i8,i8*%u,i64 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
store i8*%cN,i8**%g,align 8
%cO=bitcast i8*%cN to i8**
%cP=load i8*,i8**%cO,align 8
store i8*%cP,i8**%h,align 8
%cQ=getelementptr inbounds i8,i8*%cN,i64 16
%cR=bitcast i8*%cQ to i8**
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%i,align 8
%cT=getelementptr inbounds i8,i8*%cN,i64 24
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
store i8*%cV,i8**%j,align 8
%cW=getelementptr inbounds i8,i8*%cN,i64 32
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%k,align 8
%cZ=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%c0=getelementptr inbounds i8,i8*%cZ,i64 16
%c1=bitcast i8*%c0 to i8*(i8*,i8*)**
%c2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c1,align 8
%c3=bitcast i8*%cZ to i8**
%c4=load i8*,i8**%c3,align 8
%c5=call fastcc i8*%c2(i8*inreg%c4,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i,i64 0,i32 2)to i8*))
%c6=getelementptr inbounds i8,i8*%c5,i64 16
%c7=bitcast i8*%c6 to i8*(i8*,i8*)**
%c8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c7,align 8
%c9=bitcast i8*%c5 to i8**
%da=load i8*,i8**%c9,align 8
%db=load i8*,i8**%o,align 8
%dc=call fastcc i8*%c8(i8*inreg%da,i8*inreg%db)
%dd=getelementptr inbounds i8,i8*%dc,i64 16
%de=bitcast i8*%dd to i8*(i8*,i8*)**
%df=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%de,align 8
%dg=bitcast i8*%dc to i8**
%dh=load i8*,i8**%dg,align 8
%di=load i8*,i8**%h,align 8
%dj=call fastcc i8*%df(i8*inreg%dh,i8*inreg%di)
%dk=load i8*,i8**%g,align 8
%dl=getelementptr inbounds i8,i8*%dk,i64 8
%dm=bitcast i8*%dl to i8**
%dn=load i8*,i8**%dm,align 8
%do=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%dj,i8*inreg%dn)
store i8*%do,i8**%f,align 8
%dp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dq=getelementptr inbounds i8,i8*%dp,i64 40
%dr=bitcast i8*%dq to i8**
%ds=load i8*,i8**%dr,align 8
%dt=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%du=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%dt,i8*inreg%ds)
store i8*%du,i8**%g,align 8
%dv=call i8*@sml_alloc(i32 inreg 52)#0
%dw=getelementptr inbounds i8,i8*%dv,i64 -4
%dx=bitcast i8*%dw to i32*
store i32 1342177328,i32*%dx,align 4
store i8*%dv,i8**%l,align 8
%dy=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dz=bitcast i8*%dv to i8**
store i8*%dy,i8**%dz,align 8
%dA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dB=getelementptr inbounds i8,i8*%dv,i64 8
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dE=getelementptr inbounds i8,i8*%dv,i64 16
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dH=getelementptr inbounds i8,i8*%dv,i64 24
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dK=getelementptr inbounds i8,i8*%dv,i64 32
%dL=bitcast i8*%dK to i8**
store i8*%dJ,i8**%dL,align 8
%dM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dN=getelementptr inbounds i8,i8*%dv,i64 40
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dv,i64 48
%dQ=bitcast i8*%dP to i32*
store i32 63,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=bitcast i8*%dR to i32*
%dT=getelementptr inbounds i8,i8*%dR,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
%dV=getelementptr inbounds i8,i8*%dR,i64 4
%dW=bitcast i8*%dV to i32*
store i32 0,i32*%dW,align 1
store i32 2,i32*%dS,align 4
%dX=load i8*,i8**%l,align 8
%dY=getelementptr inbounds i8,i8*%dR,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dR,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 2,i32*%d1,align 4
ret i8*%dR
d2:
store i8*null,i8**%f,align 8
%d3=getelementptr inbounds i8,i8*%u,i64 8
%d4=bitcast i8*%d3 to i8**
%d5=load i8*,i8**%d4,align 8
store i8*%d5,i8**%h,align 8
%d6=getelementptr inbounds i8,i8*%d5,i64 16
%d7=bitcast i8*%d6 to i8**
%d8=load i8*,i8**%d7,align 8
store i8*%d8,i8**%i,align 8
%d9=getelementptr inbounds i8,i8*%d5,i64 24
%ea=bitcast i8*%d9 to i8**
%eb=load i8*,i8**%ea,align 8
store i8*%eb,i8**%j,align 8
%ec=getelementptr inbounds i8,i8*%d5,i64 32
%ed=bitcast i8*%ec to i8**
%ee=load i8*,i8**%ed,align 8
store i8*%ee,i8**%k,align 8
%ef=getelementptr inbounds i8,i8*%d5,i64 40
%eg=bitcast i8*%ef to i8**
%eh=load i8*,i8**%eg,align 8
%ei=load i8*,i8**%o,align 8
%ej=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%ei,i8*inreg%eh)
store i8*%ej,i8**%f,align 8
%ek=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%el=getelementptr inbounds i8,i8*%ek,i64 16
%em=bitcast i8*%el to i8*(i8*,i8*)**
%en=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%em,align 8
%eo=bitcast i8*%ek to i8**
%ep=load i8*,i8**%eo,align 8
store i8*%ep,i8**%g,align 8
%eq=call i8*@sml_alloc(i32 inreg 12)#0
%er=getelementptr inbounds i8,i8*%eq,i64 -4
%es=bitcast i8*%er to i32*
store i32 1342177288,i32*%es,align 4
store i8*%eq,i8**%l,align 8
%et=load i8*,i8**%o,align 8
%eu=bitcast i8*%eq to i8**
store i8*%et,i8**%eu,align 8
%ev=getelementptr inbounds i8,i8*%eq,i64 8
%ew=bitcast i8*%ev to i32*
store i32 1,i32*%ew,align 4
%ex=call i8*@sml_alloc(i32 inreg 28)#0
%ey=getelementptr inbounds i8,i8*%ex,i64 -4
%ez=bitcast i8*%ey to i32*
store i32 1342177304,i32*%ez,align 4
%eA=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%eB=bitcast i8*%ex to i8**
store i8*%eA,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%ex,i64 8
%eD=bitcast i8*%eC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_481 to void(...)*),void(...)**%eD,align 8
%eE=getelementptr inbounds i8,i8*%ex,i64 16
%eF=bitcast i8*%eE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_481 to void(...)*),void(...)**%eF,align 8
%eG=getelementptr inbounds i8,i8*%ex,i64 24
%eH=bitcast i8*%eG to i32*
store i32 -2147483647,i32*%eH,align 4
%eI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eJ=call fastcc i8*%en(i8*inreg%eI,i8*inreg%ex)
%eK=getelementptr inbounds i8,i8*%eJ,i64 16
%eL=bitcast i8*%eK to i8*(i8*,i8*)**
%eM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eL,align 8
%eN=bitcast i8*%eJ to i8**
%eO=load i8*,i8**%eN,align 8
%eP=bitcast i8**%h to i8***
%eQ=load i8**,i8***%eP,align 8
%eR=load i8*,i8**%eQ,align 8
%eS=call fastcc i8*%eM(i8*inreg%eO,i8*inreg%eR)
store i8*%eS,i8**%g,align 8
%eT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eU=getelementptr inbounds i8,i8*%eT,i64 8
%eV=bitcast i8*%eU to i8**
%eW=load i8*,i8**%eV,align 8
%eX=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%eY=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%eX,i8*inreg%eW)
store i8*%eY,i8**%h,align 8
%eZ=call i8*@sml_alloc(i32 inreg 52)#0
%e0=getelementptr inbounds i8,i8*%eZ,i64 -4
%e1=bitcast i8*%e0 to i32*
store i32 1342177328,i32*%e1,align 4
store i8*%eZ,i8**%l,align 8
%e2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e3=bitcast i8*%eZ to i8**
store i8*%e2,i8**%e3,align 8
%e4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e5=getelementptr inbounds i8,i8*%eZ,i64 8
%e6=bitcast i8*%e5 to i8**
store i8*%e4,i8**%e6,align 8
%e7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%e8=getelementptr inbounds i8,i8*%eZ,i64 16
%e9=bitcast i8*%e8 to i8**
store i8*%e7,i8**%e9,align 8
%fa=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fb=getelementptr inbounds i8,i8*%eZ,i64 24
%fc=bitcast i8*%fb to i8**
store i8*%fa,i8**%fc,align 8
%fd=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%fe=getelementptr inbounds i8,i8*%eZ,i64 32
%ff=bitcast i8*%fe to i8**
store i8*%fd,i8**%ff,align 8
%fg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fh=getelementptr inbounds i8,i8*%eZ,i64 40
%fi=bitcast i8*%fh to i8**
store i8*%fg,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%eZ,i64 48
%fk=bitcast i8*%fj to i32*
store i32 63,i32*%fk,align 4
%fl=call i8*@sml_alloc(i32 inreg 20)#0
%fm=bitcast i8*%fl to i32*
%fn=getelementptr inbounds i8,i8*%fl,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177296,i32*%fo,align 4
%fp=getelementptr inbounds i8,i8*%fl,i64 4
%fq=bitcast i8*%fp to i32*
store i32 0,i32*%fq,align 1
store i32 16,i32*%fm,align 4
%fr=load i8*,i8**%l,align 8
%fs=getelementptr inbounds i8,i8*%fl,i64 8
%ft=bitcast i8*%fs to i8**
store i8*%fr,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fl,i64 16
%fv=bitcast i8*%fu to i32*
store i32 2,i32*%fv,align 4
ret i8*%fl
fw:
store i8*null,i8**%f,align 8
%fx=getelementptr inbounds i8,i8*%u,i64 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
store i8*%fz,i8**%g,align 8
%fA=bitcast i8*%fz to i8**
%fB=load i8*,i8**%fA,align 8
store i8*%fB,i8**%h,align 8
%fC=getelementptr inbounds i8,i8*%fz,i64 16
%fD=bitcast i8*%fC to i8**
%fE=load i8*,i8**%fD,align 8
store i8*%fE,i8**%i,align 8
%fF=getelementptr inbounds i8,i8*%fz,i64 24
%fG=bitcast i8*%fF to i8**
%fH=load i8*,i8**%fG,align 8
store i8*%fH,i8**%j,align 8
%fI=getelementptr inbounds i8,i8*%fz,i64 32
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
%fL=load i8*,i8**%o,align 8
%fM=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%fL,i8*inreg%fK)
store i8*%fM,i8**%f,align 8
%fN=bitcast i8**%h to i32**
%fO=load i32*,i32**%fN,align 8
%fP=load i32,i32*%fO,align 4
%fQ=call i8*@sml_alloc(i32 inreg 20)#0
%fR=getelementptr inbounds i8,i8*%fQ,i64 -4
%fS=bitcast i8*%fR to i32*
store i32 1342177296,i32*%fS,align 4
%fT=getelementptr inbounds i8,i8*%fQ,i64 12
%fU=bitcast i8*%fT to i32*
store i32 0,i32*%fU,align 1
%fV=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%fW=bitcast i8*%fQ to i8**
store i8*%fV,i8**%fW,align 8
%fX=getelementptr inbounds i8,i8*%fQ,i64 8
%fY=bitcast i8*%fX to i32*
store i32%fP,i32*%fY,align 4
%fZ=getelementptr inbounds i8,i8*%fQ,i64 16
%f0=bitcast i8*%fZ to i32*
store i32 1,i32*%f0,align 4
%f1=call fastcc i8*@_SMLLN18ClosureConversion26removeE_409(i8*inreg%fQ)
%f2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%f3=getelementptr inbounds i8,i8*%f2,i64 8
%f4=bitcast i8*%f3 to i8**
%f5=load i8*,i8**%f4,align 8
%f6=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%f1,i8*inreg%f5)
store i8*%f6,i8**%g,align 8
%f7=call i8*@sml_alloc(i32 inreg 44)#0
%f8=getelementptr inbounds i8,i8*%f7,i64 -4
%f9=bitcast i8*%f8 to i32*
store i32 1342177320,i32*%f9,align 4
store i8*%f7,i8**%k,align 8
%ga=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gb=bitcast i8*%f7 to i8**
store i8*%ga,i8**%gb,align 8
%gc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gd=getelementptr inbounds i8,i8*%f7,i64 8
%ge=bitcast i8*%gd to i8**
store i8*%gc,i8**%ge,align 8
%gf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gg=getelementptr inbounds i8,i8*%f7,i64 16
%gh=bitcast i8*%gg to i8**
store i8*%gf,i8**%gh,align 8
%gi=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gj=getelementptr inbounds i8,i8*%f7,i64 24
%gk=bitcast i8*%gj to i8**
store i8*%gi,i8**%gk,align 8
%gl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gm=getelementptr inbounds i8,i8*%f7,i64 32
%gn=bitcast i8*%gm to i8**
store i8*%gl,i8**%gn,align 8
%go=getelementptr inbounds i8,i8*%f7,i64 40
%gp=bitcast i8*%go to i32*
store i32 31,i32*%gp,align 4
%gq=call i8*@sml_alloc(i32 inreg 20)#0
%gr=bitcast i8*%gq to i32*
%gs=getelementptr inbounds i8,i8*%gq,i64 -4
%gt=bitcast i8*%gs to i32*
store i32 1342177296,i32*%gt,align 4
%gu=getelementptr inbounds i8,i8*%gq,i64 4
%gv=bitcast i8*%gu to i32*
store i32 0,i32*%gv,align 1
store i32 8,i32*%gr,align 4
%gw=load i8*,i8**%k,align 8
%gx=getelementptr inbounds i8,i8*%gq,i64 8
%gy=bitcast i8*%gx to i8**
store i8*%gw,i8**%gy,align 8
%gz=getelementptr inbounds i8,i8*%gq,i64 16
%gA=bitcast i8*%gz to i32*
store i32 2,i32*%gA,align 4
ret i8*%gq
gB:
store i8*null,i8**%f,align 8
%gC=getelementptr inbounds i8,i8*%u,i64 8
%gD=bitcast i8*%gC to i8**
%gE=load i8*,i8**%gD,align 8
%gF=getelementptr inbounds i8,i8*%gE,i64 8
%gG=bitcast i8*%gF to i8**
%gH=load i8*,i8**%gG,align 8
store i8*%gH,i8**%g,align 8
%gI=getelementptr inbounds i8,i8*%gE,i64 16
%gJ=bitcast i8*%gI to i8**
%gK=load i8*,i8**%gJ,align 8
store i8*%gK,i8**%h,align 8
%gL=bitcast i8*%gE to i8**
%gM=load i8*,i8**%gL,align 8
%gN=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%gO=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%gN,i8*inreg%gM)
store i8*%gO,i8**%f,align 8
%gP=call i8*@sml_alloc(i32 inreg 28)#0
%gQ=getelementptr inbounds i8,i8*%gP,i64 -4
%gR=bitcast i8*%gQ to i32*
store i32 1342177304,i32*%gR,align 4
store i8*%gP,i8**%i,align 8
%gS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gT=bitcast i8*%gP to i8**
store i8*%gS,i8**%gT,align 8
%gU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gV=getelementptr inbounds i8,i8*%gP,i64 8
%gW=bitcast i8*%gV to i8**
store i8*%gU,i8**%gW,align 8
%gX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gY=getelementptr inbounds i8,i8*%gP,i64 16
%gZ=bitcast i8*%gY to i8**
store i8*%gX,i8**%gZ,align 8
%g0=getelementptr inbounds i8,i8*%gP,i64 24
%g1=bitcast i8*%g0 to i32*
store i32 7,i32*%g1,align 4
%g2=call i8*@sml_alloc(i32 inreg 20)#0
%g3=bitcast i8*%g2 to i32*
%g4=getelementptr inbounds i8,i8*%g2,i64 -4
%g5=bitcast i8*%g4 to i32*
store i32 1342177296,i32*%g5,align 4
%g6=getelementptr inbounds i8,i8*%g2,i64 4
%g7=bitcast i8*%g6 to i32*
store i32 0,i32*%g7,align 1
store i32 13,i32*%g3,align 4
%g8=load i8*,i8**%i,align 8
%g9=getelementptr inbounds i8,i8*%g2,i64 8
%ha=bitcast i8*%g9 to i8**
store i8*%g8,i8**%ha,align 8
%hb=getelementptr inbounds i8,i8*%g2,i64 16
%hc=bitcast i8*%hb to i32*
store i32 2,i32*%hc,align 4
ret i8*%g2
hd:
store i8*null,i8**%f,align 8
%he=getelementptr inbounds i8,i8*%u,i64 8
%hf=bitcast i8*%he to i8**
%hg=load i8*,i8**%hf,align 8
store i8*%hg,i8**%j,align 8
%hh=getelementptr inbounds i8,i8*%hg,i64 8
%hi=bitcast i8*%hh to i8**
%hj=load i8*,i8**%hi,align 8
store i8*%hj,i8**%k,align 8
%hk=getelementptr inbounds i8,i8*%hg,i64 16
%hl=bitcast i8*%hk to i8**
%hm=load i8*,i8**%hl,align 8
store i8*%hm,i8**%l,align 8
%hn=getelementptr inbounds i8,i8*%hg,i64 32
%ho=bitcast i8*%hn to i8**
%hp=load i8*,i8**%ho,align 8
store i8*%hp,i8**%m,align 8
%hq=getelementptr inbounds i8,i8*%hg,i64 64
%hr=bitcast i8*%hq to i8**
%hs=load i8*,i8**%hr,align 8
store i8*%hs,i8**%n,align 8
%ht=getelementptr inbounds i8,i8*%hg,i64 24
%hu=bitcast i8*%ht to i8**
%hv=load i8*,i8**%hu,align 8
%hw=load i8*,i8**%o,align 8
%hx=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%hw,i8*inreg%hv)
store i8*%hx,i8**%f,align 8
%hy=bitcast i8**%j to i8***
%hz=load i8**,i8***%hy,align 8
%hA=load i8*,i8**%hz,align 8
%hB=load i8*,i8**%o,align 8
%hC=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%hB,i8*inreg%hA)
store i8*%hC,i8**%g,align 8
%hD=load i8*,i8**%j,align 8
%hE=getelementptr inbounds i8,i8*%hD,i64 40
%hF=bitcast i8*%hE to i8**
%hG=load i8*,i8**%hF,align 8
%hH=load i8*,i8**%o,align 8
%hI=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%hH,i8*inreg%hG)
store i8*%hI,i8**%h,align 8
%hJ=load i8*,i8**%j,align 8
%hK=getelementptr inbounds i8,i8*%hJ,i64 56
%hL=bitcast i8*%hK to i8**
%hM=load i8*,i8**%hL,align 8
%hN=load i8*,i8**%o,align 8
%hO=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%hN,i8*inreg%hM)
store i8*%hO,i8**%i,align 8
%hP=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hQ=getelementptr inbounds i8,i8*%hP,i64 48
%hR=bitcast i8*%hQ to i8**
%hS=load i8*,i8**%hR,align 8
%hT=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%hU=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%hT,i8*inreg%hS)
store i8*%hU,i8**%j,align 8
%hV=call i8*@sml_alloc(i32 inreg 76)#0
%hW=getelementptr inbounds i8,i8*%hV,i64 -4
%hX=bitcast i8*%hW to i32*
store i32 1342177352,i32*%hX,align 4
store i8*%hV,i8**%o,align 8
%hY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hZ=bitcast i8*%hV to i8**
store i8*%hY,i8**%hZ,align 8
%h0=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%h1=getelementptr inbounds i8,i8*%hV,i64 8
%h2=bitcast i8*%h1 to i8**
store i8*%h0,i8**%h2,align 8
%h3=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%h4=getelementptr inbounds i8,i8*%hV,i64 16
%h5=bitcast i8*%h4 to i8**
store i8*%h3,i8**%h5,align 8
%h6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%h7=getelementptr inbounds i8,i8*%hV,i64 24
%h8=bitcast i8*%h7 to i8**
store i8*%h6,i8**%h8,align 8
%h9=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ia=getelementptr inbounds i8,i8*%hV,i64 32
%ib=bitcast i8*%ia to i8**
store i8*%h9,i8**%ib,align 8
%ic=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%id=getelementptr inbounds i8,i8*%hV,i64 40
%ie=bitcast i8*%id to i8**
store i8*%ic,i8**%ie,align 8
%if=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ig=getelementptr inbounds i8,i8*%hV,i64 48
%ih=bitcast i8*%ig to i8**
store i8*%if,i8**%ih,align 8
%ii=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ij=getelementptr inbounds i8,i8*%hV,i64 56
%ik=bitcast i8*%ij to i8**
store i8*%ii,i8**%ik,align 8
%il=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%im=getelementptr inbounds i8,i8*%hV,i64 64
%in=bitcast i8*%im to i8**
store i8*%il,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%hV,i64 72
%ip=bitcast i8*%io to i32*
store i32 511,i32*%ip,align 4
%iq=call i8*@sml_alloc(i32 inreg 20)#0
%ir=bitcast i8*%iq to i32*
%is=getelementptr inbounds i8,i8*%iq,i64 -4
%it=bitcast i8*%is to i32*
store i32 1342177296,i32*%it,align 4
%iu=getelementptr inbounds i8,i8*%iq,i64 4
%iv=bitcast i8*%iu to i32*
store i32 0,i32*%iv,align 1
store i32 11,i32*%ir,align 4
%iw=load i8*,i8**%o,align 8
%ix=getelementptr inbounds i8,i8*%iq,i64 8
%iy=bitcast i8*%ix to i8**
store i8*%iw,i8**%iy,align 8
%iz=getelementptr inbounds i8,i8*%iq,i64 16
%iA=bitcast i8*%iz to i32*
store i32 2,i32*%iA,align 4
ret i8*%iq
iB:
store i8*null,i8**%f,align 8
%iC=getelementptr inbounds i8,i8*%u,i64 8
%iD=bitcast i8*%iC to i8**
%iE=load i8*,i8**%iD,align 8
store i8*%iE,i8**%i,align 8
%iF=getelementptr inbounds i8,i8*%iE,i64 8
%iG=bitcast i8*%iF to i8**
%iH=load i8*,i8**%iG,align 8
store i8*%iH,i8**%j,align 8
%iI=getelementptr inbounds i8,i8*%iE,i64 16
%iJ=bitcast i8*%iI to i8**
%iK=load i8*,i8**%iJ,align 8
store i8*%iK,i8**%k,align 8
%iL=getelementptr inbounds i8,i8*%iE,i64 32
%iM=bitcast i8*%iL to i8**
%iN=load i8*,i8**%iM,align 8
store i8*%iN,i8**%l,align 8
%iO=getelementptr inbounds i8,i8*%iE,i64 56
%iP=bitcast i8*%iO to i8**
%iQ=load i8*,i8**%iP,align 8
store i8*%iQ,i8**%m,align 8
%iR=getelementptr inbounds i8,i8*%iE,i64 24
%iS=bitcast i8*%iR to i8**
%iT=load i8*,i8**%iS,align 8
%iU=load i8*,i8**%o,align 8
%iV=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%iU,i8*inreg%iT)
store i8*%iV,i8**%f,align 8
%iW=bitcast i8**%i to i8***
%iX=load i8**,i8***%iW,align 8
%iY=load i8*,i8**%iX,align 8
%iZ=load i8*,i8**%o,align 8
%i0=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%iZ,i8*inreg%iY)
store i8*%i0,i8**%g,align 8
%i1=load i8*,i8**%i,align 8
%i2=getelementptr inbounds i8,i8*%i1,i64 40
%i3=bitcast i8*%i2 to i8**
%i4=load i8*,i8**%i3,align 8
%i5=load i8*,i8**%o,align 8
%i6=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%i5,i8*inreg%i4)
store i8*%i6,i8**%h,align 8
%i7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%i8=getelementptr inbounds i8,i8*%i7,i64 48
%i9=bitcast i8*%i8 to i8**
%ja=load i8*,i8**%i9,align 8
%jb=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%jc=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%jb,i8*inreg%ja)
store i8*%jc,i8**%i,align 8
%jd=call i8*@sml_alloc(i32 inreg 68)#0
%je=getelementptr inbounds i8,i8*%jd,i64 -4
%jf=bitcast i8*%je to i32*
store i32 1342177344,i32*%jf,align 4
store i8*%jd,i8**%n,align 8
%jg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jh=bitcast i8*%jd to i8**
store i8*%jg,i8**%jh,align 8
%ji=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jj=getelementptr inbounds i8,i8*%jd,i64 8
%jk=bitcast i8*%jj to i8**
store i8*%ji,i8**%jk,align 8
%jl=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%jm=getelementptr inbounds i8,i8*%jd,i64 16
%jn=bitcast i8*%jm to i8**
store i8*%jl,i8**%jn,align 8
%jo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jp=getelementptr inbounds i8,i8*%jd,i64 24
%jq=bitcast i8*%jp to i8**
store i8*%jo,i8**%jq,align 8
%jr=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%js=getelementptr inbounds i8,i8*%jd,i64 32
%jt=bitcast i8*%js to i8**
store i8*%jr,i8**%jt,align 8
%ju=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jv=getelementptr inbounds i8,i8*%jd,i64 40
%jw=bitcast i8*%jv to i8**
store i8*%ju,i8**%jw,align 8
%jx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jy=getelementptr inbounds i8,i8*%jd,i64 48
%jz=bitcast i8*%jy to i8**
store i8*%jx,i8**%jz,align 8
%jA=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%jB=getelementptr inbounds i8,i8*%jd,i64 56
%jC=bitcast i8*%jB to i8**
store i8*%jA,i8**%jC,align 8
%jD=getelementptr inbounds i8,i8*%jd,i64 64
%jE=bitcast i8*%jD to i32*
store i32 255,i32*%jE,align 4
%jF=call i8*@sml_alloc(i32 inreg 20)#0
%jG=bitcast i8*%jF to i32*
%jH=getelementptr inbounds i8,i8*%jF,i64 -4
%jI=bitcast i8*%jH to i32*
store i32 1342177296,i32*%jI,align 4
%jJ=getelementptr inbounds i8,i8*%jF,i64 4
%jK=bitcast i8*%jJ to i32*
store i32 0,i32*%jK,align 1
store i32 15,i32*%jG,align 4
%jL=load i8*,i8**%n,align 8
%jM=getelementptr inbounds i8,i8*%jF,i64 8
%jN=bitcast i8*%jM to i8**
store i8*%jL,i8**%jN,align 8
%jO=getelementptr inbounds i8,i8*%jF,i64 16
%jP=bitcast i8*%jO to i32*
store i32 2,i32*%jP,align 4
ret i8*%jF
jQ:
store i8*null,i8**%f,align 8
%jR=getelementptr inbounds i8,i8*%u,i64 8
%jS=bitcast i8*%jR to i8**
%jT=load i8*,i8**%jS,align 8
store i8*%jT,i8**%h,align 8
%jU=getelementptr inbounds i8,i8*%jT,i64 16
%jV=bitcast i8*%jU to i32*
%jW=load i32,i32*%jV,align 4
%jX=getelementptr inbounds i8,i8*%jT,i64 32
%jY=bitcast i8*%jX to i32*
%jZ=load i32,i32*%jY,align 4
%j0=getelementptr inbounds i8,i8*%jT,i64 40
%j1=bitcast i8*%j0 to i8**
%j2=load i8*,i8**%j1,align 8
store i8*%j2,i8**%i,align 8
%j3=getelementptr inbounds i8,i8*%jT,i64 48
%j4=bitcast i8*%j3 to i8**
%j5=load i8*,i8**%j4,align 8
store i8*%j5,i8**%j,align 8
%j6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%j7=getelementptr inbounds i8,i8*%j6,i64 16
%j8=bitcast i8*%j7 to i8*(i8*,i8*)**
%j9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j8,align 8
%ka=bitcast i8*%j6 to i8**
%kb=load i8*,i8**%ka,align 8
store i8*%kb,i8**%f,align 8
%kc=call i8*@sml_alloc(i32 inreg 12)#0
%kd=getelementptr inbounds i8,i8*%kc,i64 -4
%ke=bitcast i8*%kd to i32*
store i32 1342177288,i32*%ke,align 4
store i8*%kc,i8**%g,align 8
%kf=load i8*,i8**%o,align 8
%kg=bitcast i8*%kc to i8**
store i8*%kf,i8**%kg,align 8
%kh=getelementptr inbounds i8,i8*%kc,i64 8
%ki=bitcast i8*%kh to i32*
store i32 1,i32*%ki,align 4
%kj=call i8*@sml_alloc(i32 inreg 28)#0
%kk=getelementptr inbounds i8,i8*%kj,i64 -4
%kl=bitcast i8*%kk to i32*
store i32 1342177304,i32*%kl,align 4
%km=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kn=bitcast i8*%kj to i8**
store i8*%km,i8**%kn,align 8
%ko=getelementptr inbounds i8,i8*%kj,i64 8
%kp=bitcast i8*%ko to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_479 to void(...)*),void(...)**%kp,align 8
%kq=getelementptr inbounds i8,i8*%kj,i64 16
%kr=bitcast i8*%kq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_479 to void(...)*),void(...)**%kr,align 8
%ks=getelementptr inbounds i8,i8*%kj,i64 24
%kt=bitcast i8*%ks to i32*
store i32 -2147483647,i32*%kt,align 4
%ku=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kv=call fastcc i8*%j9(i8*inreg%ku,i8*inreg%kj)
%kw=getelementptr inbounds i8,i8*%kv,i64 16
%kx=bitcast i8*%kw to i8*(i8*,i8*)**
%ky=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kx,align 8
%kz=bitcast i8*%kv to i8**
%kA=load i8*,i8**%kz,align 8
%kB=load i8*,i8**%h,align 8
%kC=getelementptr inbounds i8,i8*%kB,i64 24
%kD=bitcast i8*%kC to i8**
%kE=load i8*,i8**%kD,align 8
%kF=call fastcc i8*%ky(i8*inreg%kA,i8*inreg%kE)
store i8*%kF,i8**%f,align 8
%kG=bitcast i8**%h to i8***
%kH=load i8**,i8***%kG,align 8
%kI=load i8*,i8**%kH,align 8
%kJ=load i8*,i8**%o,align 8
%kK=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%kJ,i8*inreg%kI)
store i8*%kK,i8**%g,align 8
%kL=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kM=getelementptr inbounds i8,i8*%kL,i64 16
%kN=bitcast i8*%kM to i8*(i8*,i8*)**
%kO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kN,align 8
%kP=bitcast i8*%kL to i8**
%kQ=load i8*,i8**%kP,align 8
store i8*%kQ,i8**%k,align 8
%kR=call i8*@sml_alloc(i32 inreg 12)#0
%kS=getelementptr inbounds i8,i8*%kR,i64 -4
%kT=bitcast i8*%kS to i32*
store i32 1342177288,i32*%kT,align 4
store i8*%kR,i8**%l,align 8
%kU=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%kV=bitcast i8*%kR to i8**
store i8*%kU,i8**%kV,align 8
%kW=getelementptr inbounds i8,i8*%kR,i64 8
%kX=bitcast i8*%kW to i32*
store i32 1,i32*%kX,align 4
%kY=call i8*@sml_alloc(i32 inreg 28)#0
%kZ=getelementptr inbounds i8,i8*%kY,i64 -4
%k0=bitcast i8*%kZ to i32*
store i32 1342177304,i32*%k0,align 4
%k1=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%k2=bitcast i8*%kY to i8**
store i8*%k1,i8**%k2,align 8
%k3=getelementptr inbounds i8,i8*%kY,i64 8
%k4=bitcast i8*%k3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_480 to void(...)*),void(...)**%k4,align 8
%k5=getelementptr inbounds i8,i8*%kY,i64 16
%k6=bitcast i8*%k5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_480 to void(...)*),void(...)**%k6,align 8
%k7=getelementptr inbounds i8,i8*%kY,i64 24
%k8=bitcast i8*%k7 to i32*
store i32 -2147483647,i32*%k8,align 4
%k9=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%la=call fastcc i8*%kO(i8*inreg%k9,i8*inreg%kY)
%lb=getelementptr inbounds i8,i8*%la,i64 16
%lc=bitcast i8*%lb to i8*(i8*,i8*)**
%ld=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lc,align 8
%le=bitcast i8*%la to i8**
%lf=load i8*,i8**%le,align 8
%lg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lh=getelementptr inbounds i8,i8*%lg,i64 8
%li=bitcast i8*%lh to i8**
%lj=load i8*,i8**%li,align 8
%lk=call fastcc i8*%ld(i8*inreg%lf,i8*inreg%lj)
store i8*%lk,i8**%h,align 8
%ll=call i8*@sml_alloc(i32 inreg 60)#0
%lm=getelementptr inbounds i8,i8*%ll,i64 -4
%ln=bitcast i8*%lm to i32*
store i32 1342177336,i32*%ln,align 4
store i8*%ll,i8**%k,align 8
%lo=getelementptr inbounds i8,i8*%ll,i64 20
call void@llvm.memset.p0i8.i32(i8*%lo,i8 0,i32 20,i1 false)
%lp=load i8*,i8**%g,align 8
%lq=bitcast i8*%ll to i8**
store i8*null,i8**%g,align 8
store i8*%lp,i8**%lq,align 8
%lr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ls=getelementptr inbounds i8,i8*%ll,i64 8
%lt=bitcast i8*%ls to i8**
store i8*%lr,i8**%lt,align 8
%lu=getelementptr inbounds i8,i8*%ll,i64 16
%lv=bitcast i8*%lu to i32*
store i32%jW,i32*%lv,align 4
%lw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lx=getelementptr inbounds i8,i8*%ll,i64 24
%ly=bitcast i8*%lx to i8**
store i8*%lw,i8**%ly,align 8
%lz=getelementptr inbounds i8,i8*%ll,i64 32
%lA=bitcast i8*%lz to i32*
store i32%jZ,i32*%lA,align 4
%lB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lC=getelementptr inbounds i8,i8*%ll,i64 40
%lD=bitcast i8*%lC to i8**
store i8*%lB,i8**%lD,align 8
%lE=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lF=getelementptr inbounds i8,i8*%ll,i64 48
%lG=bitcast i8*%lF to i8**
store i8*%lE,i8**%lG,align 8
%lH=getelementptr inbounds i8,i8*%ll,i64 56
%lI=bitcast i8*%lH to i32*
store i32 107,i32*%lI,align 4
%lJ=call i8*@sml_alloc(i32 inreg 20)#0
%lK=bitcast i8*%lJ to i32*
%lL=getelementptr inbounds i8,i8*%lJ,i64 -4
%lM=bitcast i8*%lL to i32*
store i32 1342177296,i32*%lM,align 4
%lN=getelementptr inbounds i8,i8*%lJ,i64 4
%lO=bitcast i8*%lN to i32*
store i32 0,i32*%lO,align 1
store i32 14,i32*%lK,align 4
%lP=load i8*,i8**%k,align 8
%lQ=getelementptr inbounds i8,i8*%lJ,i64 8
%lR=bitcast i8*%lQ to i8**
store i8*%lP,i8**%lR,align 8
%lS=getelementptr inbounds i8,i8*%lJ,i64 16
%lT=bitcast i8*%lS to i32*
store i32 2,i32*%lT,align 4
ret i8*%lJ
lU:
store i8*null,i8**%f,align 8
%lV=getelementptr inbounds i8,i8*%u,i64 8
%lW=bitcast i8*%lV to i8**
%lX=load i8*,i8**%lW,align 8
store i8*%lX,i8**%g,align 8
%lY=getelementptr inbounds i8,i8*%lX,i64 8
%lZ=bitcast i8*%lY to i8**
%l0=load i8*,i8**%lZ,align 8
store i8*%l0,i8**%h,align 8
%l1=getelementptr inbounds i8,i8*%lX,i64 16
%l2=bitcast i8*%l1 to i8**
%l3=load i8*,i8**%l2,align 8
store i8*%l3,i8**%i,align 8
%l4=bitcast i8*%lX to i8**
%l5=load i8*,i8**%l4,align 8
%l6=load i8*,i8**%o,align 8
%l7=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%l6,i8*inreg%l5)
store i8*%l7,i8**%f,align 8
%l8=bitcast i8**%h to i32**
%l9=load i32*,i32**%l8,align 8
%ma=load i32,i32*%l9,align 4
%mb=call i8*@sml_alloc(i32 inreg 20)#0
%mc=getelementptr inbounds i8,i8*%mb,i64 -4
%md=bitcast i8*%mc to i32*
store i32 1342177296,i32*%md,align 4
%me=getelementptr inbounds i8,i8*%mb,i64 12
%mf=bitcast i8*%me to i32*
store i32 0,i32*%mf,align 1
%mg=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%mh=bitcast i8*%mb to i8**
store i8*%mg,i8**%mh,align 8
%mi=getelementptr inbounds i8,i8*%mb,i64 8
%mj=bitcast i8*%mi to i32*
store i32%ma,i32*%mj,align 4
%mk=getelementptr inbounds i8,i8*%mb,i64 16
%ml=bitcast i8*%mk to i32*
store i32 1,i32*%ml,align 4
%mm=call fastcc i8*@_SMLLN18ClosureConversion26removeE_409(i8*inreg%mb)
%mn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mo=getelementptr inbounds i8,i8*%mn,i64 24
%mp=bitcast i8*%mo to i8**
%mq=load i8*,i8**%mp,align 8
%mr=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%mm,i8*inreg%mq)
store i8*%mr,i8**%g,align 8
%ms=call i8*@sml_alloc(i32 inreg 36)#0
%mt=getelementptr inbounds i8,i8*%ms,i64 -4
%mu=bitcast i8*%mt to i32*
store i32 1342177312,i32*%mu,align 4
store i8*%ms,i8**%j,align 8
%mv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mw=bitcast i8*%ms to i8**
store i8*%mv,i8**%mw,align 8
%mx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%my=getelementptr inbounds i8,i8*%ms,i64 8
%mz=bitcast i8*%my to i8**
store i8*%mx,i8**%mz,align 8
%mA=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%mB=getelementptr inbounds i8,i8*%ms,i64 16
%mC=bitcast i8*%mB to i8**
store i8*%mA,i8**%mC,align 8
%mD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mE=getelementptr inbounds i8,i8*%ms,i64 24
%mF=bitcast i8*%mE to i8**
store i8*%mD,i8**%mF,align 8
%mG=getelementptr inbounds i8,i8*%ms,i64 32
%mH=bitcast i8*%mG to i32*
store i32 15,i32*%mH,align 4
%mI=call i8*@sml_alloc(i32 inreg 20)#0
%mJ=bitcast i8*%mI to i32*
%mK=getelementptr inbounds i8,i8*%mI,i64 -4
%mL=bitcast i8*%mK to i32*
store i32 1342177296,i32*%mL,align 4
%mM=getelementptr inbounds i8,i8*%mI,i64 4
%mN=bitcast i8*%mM to i32*
store i32 0,i32*%mN,align 1
store i32 10,i32*%mJ,align 4
%mO=load i8*,i8**%j,align 8
%mP=getelementptr inbounds i8,i8*%mI,i64 8
%mQ=bitcast i8*%mP to i8**
store i8*%mO,i8**%mQ,align 8
%mR=getelementptr inbounds i8,i8*%mI,i64 16
%mS=bitcast i8*%mR to i32*
store i32 2,i32*%mS,align 4
ret i8*%mI
mT:
store i8*null,i8**%f,align 8
%mU=getelementptr inbounds i8,i8*%u,i64 8
%mV=bitcast i8*%mU to i8**
%mW=load i8*,i8**%mV,align 8
store i8*%mW,i8**%i,align 8
%mX=getelementptr inbounds i8,i8*%mW,i64 32
%mY=bitcast i8*%mX to i8**
%mZ=load i8*,i8**%mY,align 8
store i8*%mZ,i8**%j,align 8
%m0=getelementptr inbounds i8,i8*%mW,i64 40
%m1=bitcast i8*%m0 to i8**
%m2=load i8*,i8**%m1,align 8
store i8*%m2,i8**%k,align 8
%m3=getelementptr inbounds i8,i8*%mW,i64 24
%m4=bitcast i8*%m3 to i8**
%m5=load i8*,i8**%m4,align 8
%m6=load i8*,i8**%o,align 8
%m7=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%m6,i8*inreg%m5)
store i8*%m7,i8**%f,align 8
%m8=load i8*,i8**%i,align 8
%m9=getelementptr inbounds i8,i8*%m8,i64 16
%na=bitcast i8*%m9 to i8**
%nb=load i8*,i8**%na,align 8
%nc=load i8*,i8**%o,align 8
%nd=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%nc,i8*inreg%nb)
store i8*%nd,i8**%g,align 8
%ne=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nf=getelementptr inbounds i8,i8*%ne,i64 16
%ng=bitcast i8*%nf to i8*(i8*,i8*)**
%nh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ng,align 8
%ni=bitcast i8*%ne to i8**
%nj=load i8*,i8**%ni,align 8
store i8*%nj,i8**%h,align 8
%nk=call i8*@sml_alloc(i32 inreg 12)#0
%nl=getelementptr inbounds i8,i8*%nk,i64 -4
%nm=bitcast i8*%nl to i32*
store i32 1342177288,i32*%nm,align 4
store i8*%nk,i8**%l,align 8
%nn=load i8*,i8**%o,align 8
%no=bitcast i8*%nk to i8**
store i8*%nn,i8**%no,align 8
%np=getelementptr inbounds i8,i8*%nk,i64 8
%nq=bitcast i8*%np to i32*
store i32 1,i32*%nq,align 4
%nr=call i8*@sml_alloc(i32 inreg 28)#0
%ns=getelementptr inbounds i8,i8*%nr,i64 -4
%nt=bitcast i8*%ns to i32*
store i32 1342177304,i32*%nt,align 4
%nu=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%nv=bitcast i8*%nr to i8**
store i8*%nu,i8**%nv,align 8
%nw=getelementptr inbounds i8,i8*%nr,i64 8
%nx=bitcast i8*%nw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_478 to void(...)*),void(...)**%nx,align 8
%ny=getelementptr inbounds i8,i8*%nr,i64 16
%nz=bitcast i8*%ny to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_478 to void(...)*),void(...)**%nz,align 8
%nA=getelementptr inbounds i8,i8*%nr,i64 24
%nB=bitcast i8*%nA to i32*
store i32 -2147483647,i32*%nB,align 4
%nC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nD=call fastcc i8*%nh(i8*inreg%nC,i8*inreg%nr)
%nE=getelementptr inbounds i8,i8*%nD,i64 16
%nF=bitcast i8*%nE to i8*(i8*,i8*)**
%nG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nF,align 8
%nH=bitcast i8*%nD to i8**
%nI=load i8*,i8**%nH,align 8
%nJ=bitcast i8**%i to i8***
%nK=load i8**,i8***%nJ,align 8
%nL=load i8*,i8**%nK,align 8
%nM=call fastcc i8*%nG(i8*inreg%nI,i8*inreg%nL)
store i8*%nM,i8**%h,align 8
%nN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nO=getelementptr inbounds i8,i8*%nN,i64 8
%nP=bitcast i8*%nO to i8**
%nQ=load i8*,i8**%nP,align 8
%nR=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%nS=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%nS)
%nT=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%nT)
%nU=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%nU)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%nR,i8**%e,align 8
store i8*%nQ,i8**%c,align 8
%nV=load atomic i32,i32*@sml_check_flag unordered,align 4
%nW=icmp eq i32%nV,0
br i1%nW,label%nZ,label%nX
nX:
call void@sml_check(i32 inreg%nV)
%nY=load i8*,i8**%c,align 8
br label%nZ
nZ:
%n0=phi i8*[%nY,%nX],[%nQ,%mT]
%n1=bitcast i8*%n0 to i32*
%n2=load i32,i32*%n1,align 4
switch i32%n2,label%n3[
i32 1,label%oS
i32 0,label%ol
]
n3:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%n4=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n4,i8**%c,align 8
%n5=call i8*@sml_alloc(i32 inreg 20)#0
%n6=getelementptr inbounds i8,i8*%n5,i64 -4
%n7=bitcast i8*%n6 to i32*
store i32 1342177296,i32*%n7,align 4
store i8*%n5,i8**%d,align 8
%n8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n9=bitcast i8*%n5 to i8**
store i8*%n8,i8**%n9,align 8
%oa=getelementptr inbounds i8,i8*%n5,i64 8
%ob=bitcast i8*%oa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@k,i64 0,i32 2,i64 0),i8**%ob,align 8
%oc=getelementptr inbounds i8,i8*%n5,i64 16
%od=bitcast i8*%oc to i32*
store i32 3,i32*%od,align 4
%oe=call i8*@sml_alloc(i32 inreg 60)#0
%of=getelementptr inbounds i8,i8*%oe,i64 -4
%og=bitcast i8*%of to i32*
store i32 1342177336,i32*%og,align 4
%oh=getelementptr inbounds i8,i8*%oe,i64 56
%oi=bitcast i8*%oh to i32*
store i32 1,i32*%oi,align 4
%oj=load i8*,i8**%d,align 8
%ok=bitcast i8*%oe to i8**
store i8*%oj,i8**%ok,align 8
call void@sml_raise(i8*inreg%oe)#1
unreachable
ol:
%om=getelementptr inbounds i8,i8*%n0,i64 8
%on=bitcast i8*%om to i8**
%oo=load i8*,i8**%on,align 8
store i8*%oo,i8**%d,align 8
%op=bitcast i8*%oo to i8**
%oq=load i8*,i8**%op,align 8
%or=load i8*,i8**%e,align 8
%os=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%or,i8*inreg%oq)
store i8*%os,i8**%c,align 8
%ot=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ou=getelementptr inbounds i8,i8*%ot,i64 8
%ov=bitcast i8*%ou to i8**
%ow=load i8*,i8**%ov,align 8
%ox=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oy=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%ox,i8*inreg%ow)
store i8*%oy,i8**%d,align 8
%oz=call i8*@sml_alloc(i32 inreg 20)#0
%oA=getelementptr inbounds i8,i8*%oz,i64 -4
%oB=bitcast i8*%oA to i32*
store i32 1342177296,i32*%oB,align 4
store i8*%oz,i8**%e,align 8
%oC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%oD=bitcast i8*%oz to i8**
store i8*%oC,i8**%oD,align 8
%oE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oF=getelementptr inbounds i8,i8*%oz,i64 8
%oG=bitcast i8*%oF to i8**
store i8*%oE,i8**%oG,align 8
%oH=getelementptr inbounds i8,i8*%oz,i64 16
%oI=bitcast i8*%oH to i32*
store i32 3,i32*%oI,align 4
%oJ=call i8*@sml_alloc(i32 inreg 20)#0
%oK=getelementptr inbounds i8,i8*%oJ,i64 -4
%oL=bitcast i8*%oK to i32*
store i32 1342177296,i32*%oL,align 4
%oM=bitcast i8*%oJ to i64*
store i64 0,i64*%oM,align 4
%oN=load i8*,i8**%e,align 8
%oO=getelementptr inbounds i8,i8*%oJ,i64 8
%oP=bitcast i8*%oO to i8**
store i8*%oN,i8**%oP,align 8
%oQ=getelementptr inbounds i8,i8*%oJ,i64 16
%oR=bitcast i8*%oQ to i32*
store i32 2,i32*%oR,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nU)
br label%oT
oS:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%nU)
br label%oT
oT:
%oU=phi i8*[%oJ,%ol],[%n0,%oS]
store i8*%oU,i8**%i,align 8
%oV=call i8*@sml_alloc(i32 inreg 52)#0
%oW=getelementptr inbounds i8,i8*%oV,i64 -4
%oX=bitcast i8*%oW to i32*
store i32 1342177328,i32*%oX,align 4
store i8*%oV,i8**%l,align 8
%oY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%oZ=bitcast i8*%oV to i8**
store i8*%oY,i8**%oZ,align 8
%o0=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%o1=getelementptr inbounds i8,i8*%oV,i64 8
%o2=bitcast i8*%o1 to i8**
store i8*%o0,i8**%o2,align 8
%o3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%o4=getelementptr inbounds i8,i8*%oV,i64 16
%o5=bitcast i8*%o4 to i8**
store i8*%o3,i8**%o5,align 8
%o6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%o7=getelementptr inbounds i8,i8*%oV,i64 24
%o8=bitcast i8*%o7 to i8**
store i8*%o6,i8**%o8,align 8
%o9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%pa=getelementptr inbounds i8,i8*%oV,i64 32
%pb=bitcast i8*%pa to i8**
store i8*%o9,i8**%pb,align 8
%pc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%pd=getelementptr inbounds i8,i8*%oV,i64 40
%pe=bitcast i8*%pd to i8**
store i8*%pc,i8**%pe,align 8
%pf=getelementptr inbounds i8,i8*%oV,i64 48
%pg=bitcast i8*%pf to i32*
store i32 63,i32*%pg,align 4
%ph=call i8*@sml_alloc(i32 inreg 20)#0
%pi=getelementptr inbounds i8,i8*%ph,i64 -4
%pj=bitcast i8*%pi to i32*
store i32 1342177296,i32*%pj,align 4
%pk=bitcast i8*%ph to i64*
store i64 0,i64*%pk,align 4
%pl=load i8*,i8**%l,align 8
%pm=getelementptr inbounds i8,i8*%ph,i64 8
%pn=bitcast i8*%pm to i8**
store i8*%pl,i8**%pn,align 8
%po=getelementptr inbounds i8,i8*%ph,i64 16
%pp=bitcast i8*%po to i32*
store i32 2,i32*%pp,align 4
ret i8*%ph
pq:
store i8*null,i8**%f,align 8
%pr=getelementptr inbounds i8,i8*%u,i64 8
%ps=bitcast i8*%pr to i8**
%pt=load i8*,i8**%ps,align 8
store i8*%pt,i8**%h,align 8
%pu=getelementptr inbounds i8,i8*%pt,i64 24
%pv=bitcast i8*%pu to i8**
%pw=load i8*,i8**%pv,align 8
store i8*%pw,i8**%i,align 8
%px=getelementptr inbounds i8,i8*%pt,i64 32
%py=bitcast i8*%px to i8**
%pz=load i8*,i8**%py,align 8
store i8*%pz,i8**%j,align 8
%pA=getelementptr inbounds i8,i8*%pt,i64 40
%pB=bitcast i8*%pA to i8**
%pC=load i8*,i8**%pB,align 8
store i8*%pC,i8**%k,align 8
%pD=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%pE=getelementptr inbounds i8,i8*%pD,i64 16
%pF=bitcast i8*%pE to i8*(i8*,i8*)**
%pG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pF,align 8
%pH=bitcast i8*%pD to i8**
%pI=load i8*,i8**%pH,align 8
store i8*%pI,i8**%f,align 8
%pJ=call i8*@sml_alloc(i32 inreg 12)#0
%pK=getelementptr inbounds i8,i8*%pJ,i64 -4
%pL=bitcast i8*%pK to i32*
store i32 1342177288,i32*%pL,align 4
store i8*%pJ,i8**%g,align 8
%pM=load i8*,i8**%o,align 8
%pN=bitcast i8*%pJ to i8**
store i8*%pM,i8**%pN,align 8
%pO=getelementptr inbounds i8,i8*%pJ,i64 8
%pP=bitcast i8*%pO to i32*
store i32 1,i32*%pP,align 4
%pQ=call i8*@sml_alloc(i32 inreg 28)#0
%pR=getelementptr inbounds i8,i8*%pQ,i64 -4
%pS=bitcast i8*%pR to i32*
store i32 1342177304,i32*%pS,align 4
%pT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pU=bitcast i8*%pQ to i8**
store i8*%pT,i8**%pU,align 8
%pV=getelementptr inbounds i8,i8*%pQ,i64 8
%pW=bitcast i8*%pV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_475 to void(...)*),void(...)**%pW,align 8
%pX=getelementptr inbounds i8,i8*%pQ,i64 16
%pY=bitcast i8*%pX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_475 to void(...)*),void(...)**%pY,align 8
%pZ=getelementptr inbounds i8,i8*%pQ,i64 24
%p0=bitcast i8*%pZ to i32*
store i32 -2147483647,i32*%p0,align 4
%p1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%p2=call fastcc i8*%pG(i8*inreg%p1,i8*inreg%pQ)
%p3=getelementptr inbounds i8,i8*%p2,i64 16
%p4=bitcast i8*%p3 to i8*(i8*,i8*)**
%p5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p4,align 8
%p6=bitcast i8*%p2 to i8**
%p7=load i8*,i8**%p6,align 8
%p8=bitcast i8**%h to i8***
%p9=load i8**,i8***%p8,align 8
%qa=load i8*,i8**%p9,align 8
%qb=call fastcc i8*%p5(i8*inreg%p7,i8*inreg%qa)
store i8*%qb,i8**%f,align 8
%qc=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qd=getelementptr inbounds i8,i8*%qc,i64 16
%qe=bitcast i8*%qd to i8*(i8*,i8*)**
%qf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qe,align 8
%qg=bitcast i8*%qc to i8**
%qh=load i8*,i8**%qg,align 8
store i8*%qh,i8**%g,align 8
%qi=call i8*@sml_alloc(i32 inreg 12)#0
%qj=getelementptr inbounds i8,i8*%qi,i64 -4
%qk=bitcast i8*%qj to i32*
store i32 1342177288,i32*%qk,align 4
store i8*%qi,i8**%l,align 8
%ql=load i8*,i8**%o,align 8
%qm=bitcast i8*%qi to i8**
store i8*%ql,i8**%qm,align 8
%qn=getelementptr inbounds i8,i8*%qi,i64 8
%qo=bitcast i8*%qn to i32*
store i32 1,i32*%qo,align 4
%qp=call i8*@sml_alloc(i32 inreg 28)#0
%qq=getelementptr inbounds i8,i8*%qp,i64 -4
%qr=bitcast i8*%qq to i32*
store i32 1342177304,i32*%qr,align 4
%qs=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%qt=bitcast i8*%qp to i8**
store i8*%qs,i8**%qt,align 8
%qu=getelementptr inbounds i8,i8*%qp,i64 8
%qv=bitcast i8*%qu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_476 to void(...)*),void(...)**%qv,align 8
%qw=getelementptr inbounds i8,i8*%qp,i64 16
%qx=bitcast i8*%qw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_476 to void(...)*),void(...)**%qx,align 8
%qy=getelementptr inbounds i8,i8*%qp,i64 24
%qz=bitcast i8*%qy to i32*
store i32 -2147483647,i32*%qz,align 4
%qA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qB=call fastcc i8*%qf(i8*inreg%qA,i8*inreg%qp)
%qC=getelementptr inbounds i8,i8*%qB,i64 16
%qD=bitcast i8*%qC to i8*(i8*,i8*)**
%qE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qD,align 8
%qF=bitcast i8*%qB to i8**
%qG=load i8*,i8**%qF,align 8
%qH=load i8*,i8**%h,align 8
%qI=getelementptr inbounds i8,i8*%qH,i64 16
%qJ=bitcast i8*%qI to i8**
%qK=load i8*,i8**%qJ,align 8
%qL=call fastcc i8*%qE(i8*inreg%qG,i8*inreg%qK)
store i8*%qL,i8**%g,align 8
%qM=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qN=getelementptr inbounds i8,i8*%qM,i64 16
%qO=bitcast i8*%qN to i8*(i8*,i8*)**
%qP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qO,align 8
%qQ=bitcast i8*%qM to i8**
%qR=load i8*,i8**%qQ,align 8
store i8*%qR,i8**%l,align 8
%qS=call i8*@sml_alloc(i32 inreg 12)#0
%qT=getelementptr inbounds i8,i8*%qS,i64 -4
%qU=bitcast i8*%qT to i32*
store i32 1342177288,i32*%qU,align 4
store i8*%qS,i8**%m,align 8
%qV=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%qW=bitcast i8*%qS to i8**
store i8*%qV,i8**%qW,align 8
%qX=getelementptr inbounds i8,i8*%qS,i64 8
%qY=bitcast i8*%qX to i32*
store i32 1,i32*%qY,align 4
%qZ=call i8*@sml_alloc(i32 inreg 28)#0
%q0=getelementptr inbounds i8,i8*%qZ,i64 -4
%q1=bitcast i8*%q0 to i32*
store i32 1342177304,i32*%q1,align 4
%q2=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%q3=bitcast i8*%qZ to i8**
store i8*%q2,i8**%q3,align 8
%q4=getelementptr inbounds i8,i8*%qZ,i64 8
%q5=bitcast i8*%q4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_477 to void(...)*),void(...)**%q5,align 8
%q6=getelementptr inbounds i8,i8*%qZ,i64 16
%q7=bitcast i8*%q6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_477 to void(...)*),void(...)**%q7,align 8
%q8=getelementptr inbounds i8,i8*%qZ,i64 24
%q9=bitcast i8*%q8 to i32*
store i32 -2147483647,i32*%q9,align 4
%ra=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%rb=call fastcc i8*%qP(i8*inreg%ra,i8*inreg%qZ)
%rc=getelementptr inbounds i8,i8*%rb,i64 16
%rd=bitcast i8*%rc to i8*(i8*,i8*)**
%re=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rd,align 8
%rf=bitcast i8*%rb to i8**
%rg=load i8*,i8**%rf,align 8
%rh=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ri=getelementptr inbounds i8,i8*%rh,i64 8
%rj=bitcast i8*%ri to i8**
%rk=load i8*,i8**%rj,align 8
%rl=call fastcc i8*%re(i8*inreg%rg,i8*inreg%rk)
store i8*%rl,i8**%h,align 8
%rm=call i8*@sml_alloc(i32 inreg 52)#0
%rn=getelementptr inbounds i8,i8*%rm,i64 -4
%ro=bitcast i8*%rn to i32*
store i32 1342177328,i32*%ro,align 4
store i8*%rm,i8**%l,align 8
%rp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%rq=bitcast i8*%rm to i8**
store i8*%rp,i8**%rq,align 8
%rr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%rs=getelementptr inbounds i8,i8*%rm,i64 8
%rt=bitcast i8*%rs to i8**
store i8*%rr,i8**%rt,align 8
%ru=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rv=getelementptr inbounds i8,i8*%rm,i64 16
%rw=bitcast i8*%rv to i8**
store i8*%ru,i8**%rw,align 8
%rx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ry=getelementptr inbounds i8,i8*%rm,i64 24
%rz=bitcast i8*%ry to i8**
store i8*%rx,i8**%rz,align 8
%rA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%rB=getelementptr inbounds i8,i8*%rm,i64 32
%rC=bitcast i8*%rB to i8**
store i8*%rA,i8**%rC,align 8
%rD=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%rE=getelementptr inbounds i8,i8*%rm,i64 40
%rF=bitcast i8*%rE to i8**
store i8*%rD,i8**%rF,align 8
%rG=getelementptr inbounds i8,i8*%rm,i64 48
%rH=bitcast i8*%rG to i32*
store i32 63,i32*%rH,align 4
%rI=call i8*@sml_alloc(i32 inreg 20)#0
%rJ=bitcast i8*%rI to i32*
%rK=getelementptr inbounds i8,i8*%rI,i64 -4
%rL=bitcast i8*%rK to i32*
store i32 1342177296,i32*%rL,align 4
%rM=getelementptr inbounds i8,i8*%rI,i64 4
%rN=bitcast i8*%rM to i32*
store i32 0,i32*%rN,align 1
store i32 12,i32*%rJ,align 4
%rO=load i8*,i8**%l,align 8
%rP=getelementptr inbounds i8,i8*%rI,i64 8
%rQ=bitcast i8*%rP to i8**
store i8*%rO,i8**%rQ,align 8
%rR=getelementptr inbounds i8,i8*%rI,i64 16
%rS=bitcast i8*%rR to i32*
store i32 2,i32*%rS,align 4
ret i8*%rI
rT:
ret i8*%u
rU:
%rV=getelementptr inbounds i8,i8*%u,i64 8
%rW=bitcast i8*%rV to i8**
%rX=load i8*,i8**%rW,align 8
store i8*%rX,i8**%g,align 8
%rY=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%rZ=getelementptr inbounds i8,i8*%rY,i64 16
%r0=bitcast i8*%rZ to i8*(i8*,i8*)**
%r1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r0,align 8
%r2=bitcast i8*%rY to i8**
%r3=load i8*,i8**%r2,align 8
store i8*%r3,i8**%h,align 8
%r4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%r5=getelementptr inbounds i8,i8*%r4,i64 8
%r6=bitcast i8*%r5 to i32**
%r7=load i32*,i32**%r6,align 8
%r8=load i32,i32*%r7,align 4
%r9=call i8*@sml_alloc(i32 inreg 20)#0
%sa=getelementptr inbounds i8,i8*%r9,i64 -4
%sb=bitcast i8*%sa to i32*
store i32 1342177296,i32*%sb,align 4
%sc=getelementptr inbounds i8,i8*%r9,i64 12
%sd=bitcast i8*%sc to i32*
store i32 0,i32*%sd,align 1
%se=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%sf=bitcast i8*%r9 to i8**
store i8*%se,i8**%sf,align 8
%sg=getelementptr inbounds i8,i8*%r9,i64 8
%sh=bitcast i8*%sg to i32*
store i32%r8,i32*%sh,align 4
%si=getelementptr inbounds i8,i8*%r9,i64 16
%sj=bitcast i8*%si to i32*
store i32 1,i32*%sj,align 4
%sk=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%sl=call fastcc i8*%r1(i8*inreg%sk,i8*inreg%r9)
%sm=icmp eq i8*%sl,null
br i1%sm,label%sn,label%sp
sn:
%so=load i8*,i8**%f,align 8
ret i8*%so
sp:
%sq=bitcast i8*%sl to i8**
%sr=load i8*,i8**%sq,align 8
ret i8*%sr
ss:
store i8*null,i8**%f,align 8
%st=getelementptr inbounds i8,i8*%u,i64 8
%su=bitcast i8*%st to i8**
%sv=load i8*,i8**%su,align 8
store i8*%sv,i8**%g,align 8
%sw=getelementptr inbounds i8,i8*%sv,i64 16
%sx=bitcast i8*%sw to i8**
%sy=load i8*,i8**%sx,align 8
store i8*%sy,i8**%h,align 8
%sz=getelementptr inbounds i8,i8*%sv,i64 24
%sA=bitcast i8*%sz to i8**
%sB=load i8*,i8**%sA,align 8
store i8*%sB,i8**%i,align 8
%sC=getelementptr inbounds i8,i8*%sv,i64 32
%sD=bitcast i8*%sC to i8**
%sE=load i8*,i8**%sD,align 8
store i8*%sE,i8**%j,align 8
%sF=getelementptr inbounds i8,i8*%sv,i64 8
%sG=bitcast i8*%sF to i8**
%sH=load i8*,i8**%sG,align 8
%sI=load i8*,i8**%o,align 8
%sJ=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%sI,i8*inreg%sH)
store i8*%sJ,i8**%f,align 8
%sK=bitcast i8**%g to i8***
%sL=load i8**,i8***%sK,align 8
store i8*null,i8**%g,align 8
%sM=load i8*,i8**%sL,align 8
%sN=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%sO=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%sN,i8*inreg%sM)
store i8*%sO,i8**%g,align 8
%sP=call i8*@sml_alloc(i32 inreg 44)#0
%sQ=getelementptr inbounds i8,i8*%sP,i64 -4
%sR=bitcast i8*%sQ to i32*
store i32 1342177320,i32*%sR,align 4
store i8*%sP,i8**%k,align 8
%sS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sT=bitcast i8*%sP to i8**
store i8*%sS,i8**%sT,align 8
%sU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%sV=getelementptr inbounds i8,i8*%sP,i64 8
%sW=bitcast i8*%sV to i8**
store i8*%sU,i8**%sW,align 8
%sX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%sY=getelementptr inbounds i8,i8*%sP,i64 16
%sZ=bitcast i8*%sY to i8**
store i8*%sX,i8**%sZ,align 8
%s0=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%s1=getelementptr inbounds i8,i8*%sP,i64 24
%s2=bitcast i8*%s1 to i8**
store i8*%s0,i8**%s2,align 8
%s3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%s4=getelementptr inbounds i8,i8*%sP,i64 32
%s5=bitcast i8*%s4 to i8**
store i8*%s3,i8**%s5,align 8
%s6=getelementptr inbounds i8,i8*%sP,i64 40
%s7=bitcast i8*%s6 to i32*
store i32 31,i32*%s7,align 4
%s8=call i8*@sml_alloc(i32 inreg 20)#0
%s9=bitcast i8*%s8 to i32*
%ta=getelementptr inbounds i8,i8*%s8,i64 -4
%tb=bitcast i8*%ta to i32*
store i32 1342177296,i32*%tb,align 4
%tc=getelementptr inbounds i8,i8*%s8,i64 4
%td=bitcast i8*%tc to i32*
store i32 0,i32*%td,align 1
store i32 4,i32*%s9,align 4
%te=load i8*,i8**%k,align 8
%tf=getelementptr inbounds i8,i8*%s8,i64 8
%tg=bitcast i8*%tf to i8**
store i8*%te,i8**%tg,align 8
%th=getelementptr inbounds i8,i8*%s8,i64 16
%ti=bitcast i8*%th to i32*
store i32 2,i32*%ti,align 4
ret i8*%s8
tj:
store i8*null,i8**%f,align 8
%tk=getelementptr inbounds i8,i8*%u,i64 8
%tl=bitcast i8*%tk to i8**
%tm=load i8*,i8**%tl,align 8
store i8*%tm,i8**%g,align 8
%tn=getelementptr inbounds i8,i8*%tm,i64 8
%to=bitcast i8*%tn to i8**
%tp=load i8*,i8**%to,align 8
store i8*%tp,i8**%h,align 8
%tq=getelementptr inbounds i8,i8*%tm,i64 24
%tr=bitcast i8*%tq to i8**
%ts=load i8*,i8**%tr,align 8
store i8*%ts,i8**%i,align 8
%tt=getelementptr inbounds i8,i8*%tm,i64 32
%tu=bitcast i8*%tt to i8**
%tv=load i8*,i8**%tu,align 8
store i8*%tv,i8**%j,align 8
%tw=getelementptr inbounds i8,i8*%tm,i64 16
%tx=bitcast i8*%tw to i8**
%ty=load i8*,i8**%tx,align 8
%tz=load i8*,i8**%o,align 8
%tA=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%tz,i8*inreg%ty)
store i8*%tA,i8**%f,align 8
%tB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%tC=getelementptr inbounds i8,i8*%tB,i64 16
%tD=bitcast i8*%tC to i8*(i8*,i8*)**
%tE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tD,align 8
%tF=bitcast i8*%tB to i8**
%tG=load i8*,i8**%tF,align 8
store i8*%tG,i8**%k,align 8
%tH=call i8*@sml_alloc(i32 inreg 12)#0
%tI=getelementptr inbounds i8,i8*%tH,i64 -4
%tJ=bitcast i8*%tI to i32*
store i32 1342177288,i32*%tJ,align 4
store i8*%tH,i8**%l,align 8
%tK=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%tL=bitcast i8*%tH to i8**
store i8*%tK,i8**%tL,align 8
%tM=getelementptr inbounds i8,i8*%tH,i64 8
%tN=bitcast i8*%tM to i32*
store i32 1,i32*%tN,align 4
%tO=call i8*@sml_alloc(i32 inreg 28)#0
%tP=getelementptr inbounds i8,i8*%tO,i64 -4
%tQ=bitcast i8*%tP to i32*
store i32 1342177304,i32*%tQ,align 4
%tR=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%tS=bitcast i8*%tO to i8**
store i8*%tR,i8**%tS,align 8
%tT=getelementptr inbounds i8,i8*%tO,i64 8
%tU=bitcast i8*%tT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_474 to void(...)*),void(...)**%tU,align 8
%tV=getelementptr inbounds i8,i8*%tO,i64 16
%tW=bitcast i8*%tV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28substExpE_474 to void(...)*),void(...)**%tW,align 8
%tX=getelementptr inbounds i8,i8*%tO,i64 24
%tY=bitcast i8*%tX to i32*
store i32 -2147483647,i32*%tY,align 4
%tZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%t0=call fastcc i8*%tE(i8*inreg%tZ,i8*inreg%tO)
%t1=getelementptr inbounds i8,i8*%t0,i64 16
%t2=bitcast i8*%t1 to i8*(i8*,i8*)**
%t3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t2,align 8
%t4=bitcast i8*%t0 to i8**
%t5=load i8*,i8**%t4,align 8
%t6=bitcast i8**%g to i8***
%t7=load i8**,i8***%t6,align 8
store i8*null,i8**%g,align 8
%t8=load i8*,i8**%t7,align 8
%t9=call fastcc i8*%t3(i8*inreg%t5,i8*inreg%t8)
store i8*%t9,i8**%g,align 8
%ua=call i8*@sml_alloc(i32 inreg 44)#0
%ub=getelementptr inbounds i8,i8*%ua,i64 -4
%uc=bitcast i8*%ub to i32*
store i32 1342177320,i32*%uc,align 4
store i8*%ua,i8**%k,align 8
%ud=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ue=bitcast i8*%ua to i8**
store i8*%ud,i8**%ue,align 8
%uf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ug=getelementptr inbounds i8,i8*%ua,i64 8
%uh=bitcast i8*%ug to i8**
store i8*%uf,i8**%uh,align 8
%ui=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%uj=getelementptr inbounds i8,i8*%ua,i64 16
%uk=bitcast i8*%uj to i8**
store i8*%ui,i8**%uk,align 8
%ul=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%um=getelementptr inbounds i8,i8*%ua,i64 24
%un=bitcast i8*%um to i8**
store i8*%ul,i8**%un,align 8
%uo=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%up=getelementptr inbounds i8,i8*%ua,i64 32
%uq=bitcast i8*%up to i8**
store i8*%uo,i8**%uq,align 8
%ur=getelementptr inbounds i8,i8*%ua,i64 40
%us=bitcast i8*%ur to i32*
store i32 31,i32*%us,align 4
%ut=call i8*@sml_alloc(i32 inreg 20)#0
%uu=bitcast i8*%ut to i32*
%uv=getelementptr inbounds i8,i8*%ut,i64 -4
%uw=bitcast i8*%uv to i32*
store i32 1342177296,i32*%uw,align 4
%ux=getelementptr inbounds i8,i8*%ut,i64 4
%uy=bitcast i8*%ux to i32*
store i32 0,i32*%uy,align 1
store i32 7,i32*%uu,align 4
%uz=load i8*,i8**%k,align 8
%uA=getelementptr inbounds i8,i8*%ut,i64 8
%uB=bitcast i8*%uA to i8**
store i8*%uz,i8**%uB,align 8
%uC=getelementptr inbounds i8,i8*%ut,i64 16
%uD=bitcast i8*%uC to i32*
store i32 2,i32*%uD,align 4
ret i8*%ut
}
define internal fastcc i8*@_SMLLN18ClosureConversion211sizeToCcexpE_488(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 1,label%ba
i32 0,label%I
]
q:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%r=load i8*,i8**@_SMLZ5Match,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@l,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%d,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=getelementptr inbounds i8,i8*%m,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%c,align 8
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%M,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%e,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%f,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
store i8*%aa,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%aa,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
%af=bitcast i8*%aa to i32*
store i32 18,i32*%af,align 4
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i32*
store i32 2,i32*%ak,align 4
%al=bitcast i8**%d to i8***
%am=load i8**,i8***%al,align 8
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%c,align 8
%ao=getelementptr inbounds i8*,i8**%am,i64 1
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%d,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%aq,i64 4
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
%av=bitcast i8*%aq to i32*
store i32 3,i32*%av,align 4
%aw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%g,align 8
%aE=getelementptr inbounds i8,i8*%aB,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
%aG=bitcast i8*%aB to i32*
store i32 9,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 16
%aL=bitcast i8*%aK to i32*
store i32 2,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 28)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177304,i32*%aO,align 4
store i8*%aM,i8**%d,align 8
%aP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 16
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aM,i64 24
%aY=bitcast i8*%aX to i32*
store i32 7,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=bitcast i8*%aZ to i32*
%a1=getelementptr inbounds i8,i8*%aZ,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
%a3=getelementptr inbounds i8,i8*%aZ,i64 4
%a4=bitcast i8*%a3 to i32*
store i32 0,i32*%a4,align 1
store i32 3,i32*%a0,align 4
%a5=load i8*,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 16
%a9=bitcast i8*%a8 to i32*
store i32 2,i32*%a9,align 4
ret i8*%aZ
ba:
%bb=getelementptr inbounds i8,i8*%m,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%c,align 8
%be=bitcast i8**%d to i8***
%bf=load i8**,i8***%be,align 8
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%d,align 8
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
store i8*%bh,i8**%e,align 8
%bk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bn=getelementptr inbounds i8,i8*%bh,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bh,i64 16
%bq=bitcast i8*%bp to i32*
store i32 3,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=bitcast i8*%br to i32*
%bt=getelementptr inbounds i8,i8*%br,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=getelementptr inbounds i8,i8*%br,i64 4
%bw=bitcast i8*%bv to i32*
store i32 0,i32*%bw,align 1
store i32 18,i32*%bs,align 4
%bx=load i8*,i8**%e,align 8
%by=getelementptr inbounds i8,i8*%br,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%br,i64 16
%bB=bitcast i8*%bA to i32*
store i32 2,i32*%bB,align 4
ret i8*%br
}
define internal fastcc i8*@_SMLLN18ClosureConversion211sizeToCcexpE_489(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211sizeToCcexpE_488 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211sizeToCcexpE_488 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion211sizeToCcexpE_490(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211sizeToCcexpE_489 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211sizeToCcexpE_489 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion210tagToCcexpE_493(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 1,label%bb
i32 0,label%I
]
q:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%r=load i8*,i8**@_SMLZ5Match,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@m,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%d,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=getelementptr inbounds i8,i8*%m,i64 4
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%M,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%c,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%e,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32%L,i32*%V,align 4
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
store i8*%ab,i8**%f,align 8
%ae=getelementptr inbounds i8,i8*%ab,i64 4
%af=bitcast i8*%ae to i32*
store i32 0,i32*%af,align 1
%ag=bitcast i8*%ab to i32*
store i32 19,i32*%ag,align 4
%ah=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i32*
store i32 2,i32*%al,align 4
%am=bitcast i8**%d to i8***
%an=load i8**,i8***%am,align 8
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%c,align 8
%ap=getelementptr inbounds i8*,i8**%an,i64 1
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%ar,i64 4
%av=bitcast i8*%au to i32*
store i32 0,i32*%av,align 1
%aw=bitcast i8*%ar to i32*
store i32 4,i32*%aw,align 4
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 16
%aB=bitcast i8*%aA to i32*
store i32 2,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%g,align 8
%aF=getelementptr inbounds i8,i8*%aC,i64 4
%aG=bitcast i8*%aF to i32*
store i32 0,i32*%aG,align 1
%aH=bitcast i8*%aC to i32*
store i32 9,i32*%aH,align 4
%aI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i32*
store i32 2,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 28)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177304,i32*%aP,align 4
store i8*%aN,i8**%d,align 8
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aW=getelementptr inbounds i8,i8*%aN,i64 16
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aN,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 7,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=bitcast i8*%a0 to i32*
%a2=getelementptr inbounds i8,i8*%a0,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
%a4=getelementptr inbounds i8,i8*%a0,i64 4
%a5=bitcast i8*%a4 to i32*
store i32 0,i32*%a5,align 1
store i32 3,i32*%a1,align 4
%a6=load i8*,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 2,i32*%ba,align 4
ret i8*%a0
bb:
%bc=getelementptr inbounds i8,i8*%m,i64 8
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%c,align 8
%bf=bitcast i8**%d to i8***
%bg=load i8**,i8***%bf,align 8
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%d,align 8
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
store i8*%bi,i8**%e,align 8
%bl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=bitcast i8*%bs to i32*
%bu=getelementptr inbounds i8,i8*%bs,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
%bw=getelementptr inbounds i8,i8*%bs,i64 4
%bx=bitcast i8*%bw to i32*
store i32 0,i32*%bx,align 1
store i32 18,i32*%bt,align 4
%by=load i8*,i8**%e,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 16
%bC=bitcast i8*%bB to i32*
store i32 2,i32*%bC,align 4
ret i8*%bs
}
define internal fastcc i8*@_SMLLN18ClosureConversion210tagToCcexpE_494(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToCcexpE_493 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToCcexpE_493 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion210tagToCcexpE_495(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToCcexpE_494 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToCcexpE_494 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion211funEntryExpE_497(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%a,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%o,i64 4
%s=bitcast i8*%r to i32*
store i32 0,i32*%s,align 1
%t=bitcast i8*%o to i32*
store i32 3,i32*%t,align 4
%u=load i8*,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%f,align 8
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 4
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 2,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%I,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 8,i32*%X,align 4
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ad,i8**%b,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ad,i64 24
%ap=bitcast i8*%ao to i32*
store i32 7,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=bitcast i8*%aq to i32*
%as=getelementptr inbounds i8,i8*%aq,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%aq,i64 4
%av=bitcast i8*%au to i32*
store i32 0,i32*%av,align 1
store i32 3,i32*%ar,align 4
%aw=load i8*,i8**%b,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLLN18ClosureConversion29primapplyE_505(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%h,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=getelementptr inbounds i8,i8*%o,i64 8
%r=bitcast i8*%q to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 1
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%o,i64 16
%x=bitcast i8*%w to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%f,align 8
%A=getelementptr inbounds i8*,i8**%y,i64 1
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%i,align 8
%F=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*null,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%g,align 8
%O=load i8*,i8**%f,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=bitcast i8**%h to i8***
%W=load i8**,i8***%V,align 8
store i8*null,i8**%h,align 8
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%f,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
store i8*%Y,i8**%h,align 8
%ab=getelementptr inbounds i8,i8*%Y,i64 4
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
%ad=bitcast i8*%Y to i32*
store i32 5,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i32*
store i32 2,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%f,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i8**
store i8*null,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%i,align 8
%av=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%aC,i8**%d,align 8
%aD=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%aD,i8**%f,align 8
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
store i8*%aE,i8**%e,align 8
%aH=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aE,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 7,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aR,i64 16
%a0=bitcast i8*%aZ to i32*
store i32 3,i32*%a0,align 4
%a1=call i8*@sml_alloc(i32 inreg 52)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177328,i32*%a3,align 4
store i8*%a1,i8**%e,align 8
%a4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%a1,i64 8
call void@llvm.memset.p0i8.i64(i8*%a6,i8 0,i64 24,i1 false)
%a7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%a1,i64 32
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bb=getelementptr inbounds i8,i8*%a1,i64 40
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a1,i64 48
%be=bitcast i8*%bd to i32*
store i32 63,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=bitcast i8*%bf to i32*
%bh=getelementptr inbounds i8,i8*%bf,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=getelementptr inbounds i8,i8*%bf,i64 4
%bk=bitcast i8*%bj to i32*
store i32 0,i32*%bk,align 1
store i32 12,i32*%bg,align 4
%bl=load i8*,i8**%e,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bf,i64 16
%bp=bitcast i8*%bo to i32*
store i32 2,i32*%bp,align 4
ret i8*%bf
}
define internal fastcc i8*@_SMLLN18ClosureConversion29primapplyE_506(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_505 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_505 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN18ClosureConversion29primapplyE_507(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_506 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_506 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion29primapplyE_508(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_507 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29primapplyE_507 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%a)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
p:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%f,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=bitcast i8*%o to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 3,label%fZ
i32 12,label%aD
i32 1,label%z
]
s:
%t=call i8*@sml_alloc(i32 inreg 60)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177336,i32*%v,align 4
%w=getelementptr inbounds i8,i8*%t,i64 56
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=bitcast i8*%t to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@t,i64 0,i32 2)to i8*),i8**%y,align 8
call void@sml_raise(i8*inreg%t)#1
unreachable
z:
%A=getelementptr inbounds i8,i8*%o,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=getelementptr inbounds i8,i8*%C,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%g,align 8
%I=getelementptr inbounds i8,i8*%C,i64 32
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%h,align 8
%L=getelementptr inbounds i8,i8*%C,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%N)
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%f,align 8
%R=call i8*@sml_alloc(i32 inreg 36)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177312,i32*%T,align 4
store i8*%R,i8**%i,align 8
%U=getelementptr inbounds i8,i8*%R,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
%W=bitcast i8*%R to i32*
store i32%E,i32*%W,align 4
%X=load i8*,i8**%h,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ab=getelementptr inbounds i8,i8*%R,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=getelementptr inbounds i8,i8*%R,i64 24
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%R,i64 32
%ah=bitcast i8*%ag to i32*
store i32 14,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%ai,i64 4
%am=bitcast i8*%al to i32*
store i32 0,i32*%am,align 1
%an=bitcast i8*%ai to i32*
store i32 1,i32*%an,align 4
%ao=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ai,i64 16
%as=bitcast i8*%ar to i32*
store i32 2,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%f,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%h,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
ret i8*%at
aD:
%aE=getelementptr inbounds i8,i8*%o,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aH)
%aI=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aI)
%aJ=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aJ)
%aK=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aK)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%aG,i8**%b,align 8
%aL=load atomic i32,i32*@sml_check_flag unordered,align 4
%aM=icmp eq i32%aL,0
br i1%aM,label%aP,label%aN
aN:
call void@sml_check(i32 inreg%aL)
%aO=load i8*,i8**%b,align 8
br label%aP
aP:
%aQ=phi i8*[%aO,%aN],[%aG,%aD]
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%b,align 8
%aT=getelementptr inbounds i8,i8*%aQ,i64 24
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 40
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=getelementptr inbounds i8,i8*%aY,i64 8
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 16
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%d,align 8
%a7=bitcast i8*%a0 to i32*
%a8=load i32,i32*%a7,align 4
%a9=icmp eq i32%a8,5
%ba=bitcast i8*%aS to i8**
br i1%a9,label%bc,label%bb
bb:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
bc:
%bd=getelementptr inbounds i8,i8*%a0,i64 8
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
%bg=bitcast i8*%bf to i32*
%bh=load i32,i32*%bg,align 4
%bi=icmp eq i32%bh,6
br i1%bi,label%bk,label%bj
bj:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
bk:
%bl=getelementptr inbounds i8,i8*%bf,i64 4
%bm=bitcast i8*%bl to i32*
%bn=load i32,i32*%bm,align 4
switch i32%bn,label%bo[
i32 35,label%e8
i32 36,label%eq
i32 46,label%cP
i32 49,label%b7
i32 50,label%bp
]
bo:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
bp:
%bq=icmp eq i8*%aV,null
br i1%bq,label%br,label%b6
br:
%bs=icmp eq i8*%aS,null
br i1%bs,label%bt,label%bu
bt:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
bu:
%bv=getelementptr inbounds i8,i8*%aS,i64 8
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
%by=icmp eq i8*%bx,null
br i1%by,label%bz,label%bA
bz:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
bA:
store i8*%bx,i8**%c,align 8
%bB=getelementptr inbounds i8,i8*%bx,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
%bE=icmp eq i8*%bD,null
store i8*null,i8**%b,align 8
br i1%bE,label%bF,label%b5
bF:
%bG=load i8*,i8**%ba,align 8
%bH=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%bG)
%bI=bitcast i8**%c to i8***
%bJ=load i8**,i8***%bI,align 8
store i8*null,i8**%c,align 8
%bK=load i8*,i8**%bJ,align 8
%bL=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%bK)
%bM=xor i32%bL,%bH
%bN=call i8*@sml_alloc(i32 inreg 12)#0
%bO=bitcast i8*%bN to i32*
%bP=getelementptr inbounds i8,i8*%bN,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177288,i32*%bQ,align 4
store i8*%bN,i8**%b,align 8
store i32 23,i32*%bO,align 4
%bR=getelementptr inbounds i8,i8*%bN,i64 4
%bS=bitcast i8*%bR to i32*
store i32%bM,i32*%bS,align 4
%bT=getelementptr inbounds i8,i8*%bN,i64 8
%bU=bitcast i8*%bT to i32*
store i32 0,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
%bY=load i8*,i8**%b,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%d,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aK)
br label%fX
b5:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
br label%fQ
b6:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
b7:
%b8=icmp eq i8*%aV,null
br i1%b8,label%b9,label%cO
b9:
%ca=icmp eq i8*%aS,null
br i1%ca,label%cb,label%cc
cb:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
cc:
%cd=getelementptr inbounds i8,i8*%aS,i64 8
%ce=bitcast i8*%cd to i8**
%cf=load i8*,i8**%ce,align 8
%cg=icmp eq i8*%cf,null
br i1%cg,label%ch,label%ci
ch:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
ci:
store i8*%cf,i8**%c,align 8
%cj=getelementptr inbounds i8,i8*%cf,i64 8
%ck=bitcast i8*%cj to i8**
%cl=load i8*,i8**%ck,align 8
%cm=icmp eq i8*%cl,null
store i8*null,i8**%b,align 8
br i1%cm,label%cn,label%cN
cn:
%co=load i8*,i8**%ba,align 8
%cp=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%co)
%cq=bitcast i8**%c to i8***
%cr=load i8**,i8***%cq,align 8
store i8*null,i8**%c,align 8
%cs=load i8*,i8**%cr,align 8
%ct=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%cs)
%cu=sub i32%cp,%ct
%cv=call i8*@sml_alloc(i32 inreg 12)#0
%cw=bitcast i8*%cv to i32*
%cx=getelementptr inbounds i8,i8*%cv,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177288,i32*%cy,align 4
store i8*%cv,i8**%b,align 8
store i32 23,i32*%cw,align 4
%cz=getelementptr inbounds i8,i8*%cv,i64 4
%cA=bitcast i8*%cz to i32*
store i32%cu,i32*%cA,align 4
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i32*
store i32 0,i32*%cC,align 4
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
%cG=load i8*,i8**%b,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%d,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aK)
br label%fX
cN:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
br label%fQ
cO:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
cP:
%cQ=icmp eq i8*%aV,null
br i1%cQ,label%cR,label%ep
cR:
%cS=icmp eq i8*%aS,null
br i1%cS,label%cT,label%cU
cT:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
cU:
%cV=getelementptr inbounds i8,i8*%aS,i64 8
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
%cY=icmp eq i8*%cX,null
br i1%cY,label%cZ,label%c0
cZ:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
c0:
store i8*%cX,i8**%c,align 8
%c1=getelementptr inbounds i8,i8*%cX,i64 8
%c2=bitcast i8*%c1 to i8**
%c3=load i8*,i8**%c2,align 8
%c4=icmp eq i8*%c3,null
br i1%c4,label%c5,label%eo
c5:
%c6=bitcast i8**%b to i8***
%c7=load i8*,i8**%ba,align 8
%c8=invoke fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%c7)
to label%c9 unwind label%dn
c9:
%da=bitcast i8**%c to i8***
%db=load i8**,i8***%da,align 8
%dc=load i8*,i8**%db,align 8
%dd=invoke fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%dc)
to label%de unwind label%dn
de:
store i8*null,i8**%b,align 8
store i8*null,i8**%c,align 8
%df=or i32%dd,%c8
%dg=call i8*@sml_alloc(i32 inreg 12)#0
%dh=bitcast i8*%dg to i32*
%di=getelementptr inbounds i8,i8*%dg,i64 -4
%dj=bitcast i8*%di to i32*
store i32 1342177288,i32*%dj,align 4
store i32 23,i32*%dh,align 4
%dk=getelementptr inbounds i8,i8*%dg,i64 4
%dl=bitcast i8*%dk to i32*
store i32%df,i32*%dl,align 4
%dm=getelementptr inbounds i8,i8*%dg,i64 8
br label%d9
dn:
%do=landingpad{i8*,i8*}
catch i8*null
%dp=extractvalue{i8*,i8*}%do,1
%dq=bitcast i8*%dp to i8**
%dr=load i8*,i8**%dq,align 8
store i8*%dr,i8**%e,align 8
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
%du=icmp eq i8*%dt,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%du,label%dv,label%d1
dv:
store i8*null,i8**%e,align 8
%dw=load i8**,i8***%c6,align 8
store i8*null,i8**%b,align 8
%dx=load i8*,i8**%dw,align 8
%dy=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%dx)
%dz=bitcast i8*%dy to i8**
%dA=load i8*,i8**%dz,align 8
store i8*%dA,i8**%b,align 8
%dB=bitcast i8**%c to i8***
%dC=load i8**,i8***%dB,align 8
store i8*null,i8**%c,align 8
%dD=load i8*,i8**%dC,align 8
%dE=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%dD)
%dF=bitcast i8*%dE to i8**
%dG=load i8*,i8**%dF,align 8
store i8*%dG,i8**%c,align 8
%dH=call i8*@sml_alloc(i32 inreg 20)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177296,i32*%dJ,align 4
store i8*%dH,i8**%e,align 8
%dK=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dN=getelementptr inbounds i8,i8*%dH,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dH,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 3,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=bitcast i8*%dR to i32*
%dT=getelementptr inbounds i8,i8*%dR,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
%dV=getelementptr inbounds i8,i8*%dR,i64 4
%dW=bitcast i8*%dV to i32*
store i32 0,i32*%dW,align 1
store i32 24,i32*%dS,align 4
%dX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dY=getelementptr inbounds i8,i8*%dR,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dR,i64 16
br label%d9
d1:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%d2=call i8*@sml_alloc(i32 inreg 60)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177336,i32*%d4,align 4
%d5=getelementptr inbounds i8,i8*%d2,i64 56
%d6=bitcast i8*%d5 to i32*
store i32 1,i32*%d6,align 4
%d7=load i8*,i8**%e,align 8
%d8=bitcast i8*%d2 to i8**
store i8*%d7,i8**%d8,align 8
call void@sml_raise(i8*inreg%d2)#1
unreachable
d9:
%ea=phi i8*[%d0,%dv],[%dm,%de]
%eb=phi i32[2,%dv],[0,%de]
%ec=phi i8*[%dR,%dv],[%dg,%de]
%ed=bitcast i8*%ea to i32*
store i32%eb,i32*%ed,align 4
store i8*%ec,i8**%b,align 8
%ee=call i8*@sml_alloc(i32 inreg 20)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177296,i32*%eg,align 4
%eh=load i8*,i8**%b,align 8
%ei=bitcast i8*%ee to i8**
store i8*%eh,i8**%ei,align 8
%ej=load i8*,i8**%d,align 8
%ek=getelementptr inbounds i8,i8*%ee,i64 8
%el=bitcast i8*%ek to i8**
store i8*%ej,i8**%el,align 8
%em=getelementptr inbounds i8,i8*%ee,i64 16
%en=bitcast i8*%em to i32*
store i32 3,i32*%en,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aK)
br label%fX
eo:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
br label%fQ
ep:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
eq:
%er=icmp eq i8*%aV,null
br i1%er,label%es,label%e7
es:
%et=icmp eq i8*%aS,null
br i1%et,label%eu,label%ev
eu:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
ev:
%ew=getelementptr inbounds i8,i8*%aS,i64 8
%ex=bitcast i8*%ew to i8**
%ey=load i8*,i8**%ex,align 8
%ez=icmp eq i8*%ey,null
br i1%ez,label%eA,label%eB
eA:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
eB:
store i8*%ey,i8**%c,align 8
%eC=getelementptr inbounds i8,i8*%ey,i64 8
%eD=bitcast i8*%eC to i8**
%eE=load i8*,i8**%eD,align 8
%eF=icmp eq i8*%eE,null
store i8*null,i8**%b,align 8
br i1%eF,label%eG,label%e6
eG:
%eH=load i8*,i8**%ba,align 8
%eI=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%eH)
%eJ=bitcast i8**%c to i8***
%eK=load i8**,i8***%eJ,align 8
store i8*null,i8**%c,align 8
%eL=load i8*,i8**%eK,align 8
%eM=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%eL)
%eN=and i32%eM,%eI
%eO=call i8*@sml_alloc(i32 inreg 12)#0
%eP=bitcast i8*%eO to i32*
%eQ=getelementptr inbounds i8,i8*%eO,i64 -4
%eR=bitcast i8*%eQ to i32*
store i32 1342177288,i32*%eR,align 4
store i8*%eO,i8**%b,align 8
store i32 23,i32*%eP,align 4
%eS=getelementptr inbounds i8,i8*%eO,i64 4
%eT=bitcast i8*%eS to i32*
store i32%eN,i32*%eT,align 4
%eU=getelementptr inbounds i8,i8*%eO,i64 8
%eV=bitcast i8*%eU to i32*
store i32 0,i32*%eV,align 4
%eW=call i8*@sml_alloc(i32 inreg 20)#0
%eX=getelementptr inbounds i8,i8*%eW,i64 -4
%eY=bitcast i8*%eX to i32*
store i32 1342177296,i32*%eY,align 4
%eZ=load i8*,i8**%b,align 8
%e0=bitcast i8*%eW to i8**
store i8*%eZ,i8**%e0,align 8
%e1=load i8*,i8**%d,align 8
%e2=getelementptr inbounds i8,i8*%eW,i64 8
%e3=bitcast i8*%e2 to i8**
store i8*%e1,i8**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eW,i64 16
%e5=bitcast i8*%e4 to i32*
store i32 3,i32*%e5,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aK)
br label%fX
e6:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
br label%fQ
e7:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
e8:
%e9=icmp eq i8*%aV,null
br i1%e9,label%fa,label%fP
fa:
%fb=icmp eq i8*%aS,null
br i1%fb,label%fc,label%fd
fc:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
fd:
%fe=getelementptr inbounds i8,i8*%aS,i64 8
%ff=bitcast i8*%fe to i8**
%fg=load i8*,i8**%ff,align 8
%fh=icmp eq i8*%fg,null
br i1%fh,label%fi,label%fj
fi:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
fj:
store i8*%fg,i8**%c,align 8
%fk=getelementptr inbounds i8,i8*%fg,i64 8
%fl=bitcast i8*%fk to i8**
%fm=load i8*,i8**%fl,align 8
%fn=icmp eq i8*%fm,null
store i8*null,i8**%b,align 8
br i1%fn,label%fo,label%fO
fo:
%fp=load i8*,i8**%ba,align 8
%fq=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%fp)
%fr=bitcast i8**%c to i8***
%fs=load i8**,i8***%fr,align 8
store i8*null,i8**%c,align 8
%ft=load i8*,i8**%fs,align 8
%fu=call fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%ft)
%fv=add i32%fu,%fq
%fw=call i8*@sml_alloc(i32 inreg 12)#0
%fx=bitcast i8*%fw to i32*
%fy=getelementptr inbounds i8,i8*%fw,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177288,i32*%fz,align 4
store i8*%fw,i8**%b,align 8
store i32 23,i32*%fx,align 4
%fA=getelementptr inbounds i8,i8*%fw,i64 4
%fB=bitcast i8*%fA to i32*
store i32%fv,i32*%fB,align 4
%fC=getelementptr inbounds i8,i8*%fw,i64 8
%fD=bitcast i8*%fC to i32*
store i32 0,i32*%fD,align 4
%fE=call i8*@sml_alloc(i32 inreg 20)#0
%fF=getelementptr inbounds i8,i8*%fE,i64 -4
%fG=bitcast i8*%fF to i32*
store i32 1342177296,i32*%fG,align 4
%fH=load i8*,i8**%b,align 8
%fI=bitcast i8*%fE to i8**
store i8*%fH,i8**%fI,align 8
%fJ=load i8*,i8**%d,align 8
%fK=getelementptr inbounds i8,i8*%fE,i64 8
%fL=bitcast i8*%fK to i8**
store i8*%fJ,i8**%fL,align 8
%fM=getelementptr inbounds i8,i8*%fE,i64 16
%fN=bitcast i8*%fM to i32*
store i32 3,i32*%fN,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aK)
br label%fX
fO:
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
br label%fQ
fP:
store i8*null,i8**%b,align 8
store i8*null,i8**%d,align 8
br label%fQ
fQ:
%fR=call i8*@sml_alloc(i32 inreg 60)#0
%fS=getelementptr inbounds i8,i8*%fR,i64 -4
%fT=bitcast i8*%fS to i32*
store i32 1342177336,i32*%fT,align 4
%fU=getelementptr inbounds i8,i8*%fR,i64 56
%fV=bitcast i8*%fU to i32*
store i32 1,i32*%fV,align 4
%fW=bitcast i8*%fR to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@v,i64 0,i32 2)to i8*),i8**%fW,align 8
call void@sml_raise(i8*inreg%fR)#1
unreachable
fX:
%fY=phi i8*[%bV,%bF],[%cD,%cn],[%ee,%d9],[%eW,%eG],[%fE,%fo]
ret i8*%fY
fZ:
%f0=getelementptr inbounds i8,i8*%o,i64 8
%f1=bitcast i8*%f0 to i8**
%f2=load i8*,i8**%f1,align 8
%f3=bitcast i8*%f2 to i8**
%f4=load i8*,i8**%f3,align 8
store i8*%f4,i8**%f,align 8
%f5=getelementptr inbounds i8,i8*%f2,i64 16
%f6=bitcast i8*%f5 to i8**
%f7=load i8*,i8**%f6,align 8
store i8*%f7,i8**%g,align 8
%f8=call i8*@sml_alloc(i32 inreg 20)#0
%f9=getelementptr inbounds i8,i8*%f8,i64 -4
%ga=bitcast i8*%f9 to i32*
store i32 1342177296,i32*%ga,align 4
%gb=load i8*,i8**%f,align 8
%gc=bitcast i8*%f8 to i8**
store i8*%gb,i8**%gc,align 8
%gd=load i8*,i8**%g,align 8
%ge=getelementptr inbounds i8,i8*%f8,i64 8
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=getelementptr inbounds i8,i8*%f8,i64 16
%gh=bitcast i8*%gg to i32*
store i32 3,i32*%gh,align 4
ret i8*%f8
}
define internal fastcc i32@_SMLLN18ClosureConversion29expToWordE_530(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%j)
%m=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%m)
%n=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%o=bitcast i8**%b to i8***
br label%p
p:
%q=phi i8*[%S,%I],[%l,%i]
store i8*%q,i8**%b,align 8
%r=load atomic i32,i32*@sml_check_flag unordered,align 4
%s=icmp eq i32%r,0
%t=bitcast i8*%q to i8**
br i1%s,label%w,label%u
u:
call void@sml_check(i32 inreg%r)
%v=load i8**,i8***%o,align 8
br label%w
w:
%x=phi i8**[%v,%u],[%t,%p]
%y=load i8*,i8**%x,align 8
%z=bitcast i8*%y to i32*
%A=load i32,i32*%z,align 4
switch i32%A,label%B[
i32 23,label%ac
i32 1,label%I
]
B:
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=bitcast i8*%C to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@r,i64 0,i32 2)to i8*),i8**%H,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
I:
%J=getelementptr inbounds i8,i8*%y,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%b,align 8
%P=getelementptr inbounds i8,i8*%L,i64 24
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
br label%p
ac:
%ad=getelementptr inbounds i8,i8*%y,i64 4
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%m)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
ret i32%af
}
define internal fastcc i8*@_SMLL9fieldList_542(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=getelementptr inbounds i8,i8*%l,i64 16
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 40
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%f,align 8
%u=load i8*,i8**%n,align 8
%v=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=load i8*,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%w,i64 24
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%z)
store i8*%A,i8**%d,align 8
%B=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%E)
store i8*%F,i8**%b,align 8
%G=call i8*@sml_alloc(i32 inreg 44)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177320,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%b,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=load i8*,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%G,i64 24
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%G,i64 32
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%G,i64 40
%Y=bitcast i8*%X to i32*
store i32 31,i32*%Y,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLL10bitmapList_544(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%m)
store i8*%n,i8**%c,align 8
%o=bitcast i8**%b to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%b,align 8
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%q)
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
ret i8*%s
}
define internal fastcc i8*@_SMLLN18ClosureConversion211allocRecordE_546(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%c,align 8
store i8*%o,i8**%f,align 8
%q=getelementptr inbounds i8,i8*%o,i64 16
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%o,i64 32
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%o,i64 40
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=getelementptr inbounds i8,i8*%o,i64 48
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%i,align 8
%C=invoke fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%D unwind label%cG
D:
%E=getelementptr inbounds i8,i8*%C,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%C to i8**
%I=load i8*,i8**%H,align 8
%J=invoke fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@w,i64 0,i32 2)to i8*))
to label%K unwind label%cG
K:
%L=getelementptr inbounds i8,i8*%J,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%J to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 24
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=invoke fastcc i8*%N(i8*inreg%P,i8*inreg%T)
to label%V unwind label%cG
V:
store i8*%U,i8**%c,align 8
%W=invoke fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%X unwind label%cG
X:
%Y=getelementptr inbounds i8,i8*%W,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%W to i8**
%ac=load i8*,i8**%ab,align 8
%ad=invoke fastcc i8*%aa(i8*inreg%ac,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@x,i64 0,i32 2)to i8*))
to label%ae unwind label%cG
ae:
%af=getelementptr inbounds i8,i8*%ad,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ad to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=invoke fastcc i8*%ah(i8*inreg%aj,i8*inreg%an)
to label%ap unwind label%cG
ap:
store i8*%ao,i8**%d,align 8
%aq=bitcast i8**%g to i8***
%ar=load i8**,i8***%aq,align 8
%as=load i8*,i8**%ar,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=invoke fastcc i8*@_SMLFN9DataLabel8generateE(i8*inreg%av)
to label%ax unwind label%cG
ax:
store i8*%aw,i8**%e,align 8
%ay=bitcast i8**%g to i8****
%az=load i8***,i8****%ay,align 8
store i8*null,i8**%g,align 8
%aA=load i8**,i8***%az,align 8
%aB=load i8*,i8**%aA,align 8
%aC=invoke fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%aB)
to label%aD unwind label%cG
aD:
store i8*%aC,i8**%g,align 8
%aE=invoke fastcc i32@_SMLFN4Bool3notE(i32 inreg%v)
to label%aF unwind label%cG
aF:
store i8*null,i8**%f,align 8
%aG=call i8*@sml_alloc(i32 inreg 68)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177344,i32*%aI,align 4
store i8*%aG,i8**%f,align 8
%aJ=getelementptr inbounds i8,i8*%aG,i64 12
%aK=bitcast i8*%aJ to i32*
store i32 0,i32*%aK,align 1
%aL=load i8*,i8**%d,align 8
%aM=bitcast i8*%aG to i8**
store i8*null,i8**%d,align 8
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 8
%aO=bitcast i8*%aN to i32*
store i32%s,i32*%aO,align 4
%aP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aG,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=load i8*,i8**%e,align 8
%aT=getelementptr inbounds i8,i8*%aG,i64 24
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aG,i64 32
%aW=bitcast i8*%aV to i32*
store i32%aE,i32*%aW,align 4
%aX=getelementptr inbounds i8,i8*%aG,i64 36
%aY=bitcast i8*%aX to i32*
store i32%v,i32*%aY,align 4
%aZ=load i8*,i8**%h,align 8
%a0=getelementptr inbounds i8,i8*%aG,i64 40
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=load i8*,i8**%i,align 8
%a3=getelementptr inbounds i8,i8*%aG,i64 48
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a6=getelementptr inbounds i8,i8*%aG,i64 56
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aG,i64 64
%a9=bitcast i8*%a8 to i32*
store i32 237,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%c,align 8
%bd=getelementptr inbounds i8,i8*%ba,i64 4
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 1
%bf=bitcast i8*%ba to i32*
store i32 6,i32*%bf,align 4
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 16
%bk=bitcast i8*%bj to i32*
store i32 2,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%d,align 8
%bo=bitcast i8*%bl to i64*
store i64 0,i64*%bo,align 4
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to i32*
store i32 2,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
%bx=load i8*,i8**%d,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bu,i64 8
%bA=bitcast i8*%bz to i8**
store i8*null,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bu,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
store i8*%bx,i8**%c,align 8
store i8*null,i8**%d,align 8
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%f,align 8
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177296,i32*%bP,align 4
store i8*%bN,i8**%c,align 8
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=load i8*,i8**%i,align 8
%bT=getelementptr inbounds i8,i8*%bN,i64 8
%bU=bitcast i8*%bT to i8**
store i8*%bS,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bN,i64 16
%bW=bitcast i8*%bV to i32*
store i32 3,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
store i8*%bX,i8**%d,align 8
%b0=getelementptr inbounds i8,i8*%bX,i64 4
%b1=bitcast i8*%b0 to i32*
store i32 0,i32*%b1,align 1
%b2=bitcast i8*%bX to i32*
store i32 20,i32*%b2,align 4
%b3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b4=getelementptr inbounds i8,i8*%bX,i64 8
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bX,i64 16
%b7=bitcast i8*%b6 to i32*
store i32 2,i32*%b7,align 4
%b8=call i8*@sml_alloc(i32 inreg 28)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32 1342177304,i32*%ca,align 4
store i8*%b8,i8**%c,align 8
%cb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cc=bitcast i8*%b8 to i8**
store i8*%cb,i8**%cc,align 8
%cd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ce=getelementptr inbounds i8,i8*%b8,i64 8
%cf=bitcast i8*%ce to i8**
store i8*%cd,i8**%cf,align 8
%cg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ch=getelementptr inbounds i8,i8*%b8,i64 16
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%b8,i64 24
%ck=bitcast i8*%cj to i32*
store i32 7,i32*%ck,align 4
%cl=call i8*@sml_alloc(i32 inreg 20)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177296,i32*%cn,align 4
store i8*%cl,i8**%d,align 8
%co=getelementptr inbounds i8,i8*%cl,i64 4
%cp=bitcast i8*%co to i32*
store i32 0,i32*%cp,align 1
%cq=bitcast i8*%cl to i32*
store i32 3,i32*%cq,align 4
%cr=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cs=getelementptr inbounds i8,i8*%cl,i64 8
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cl,i64 16
%cv=bitcast i8*%cu to i32*
store i32 2,i32*%cv,align 4
%cw=call i8*@sml_alloc(i32 inreg 20)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177296,i32*%cy,align 4
%cz=load i8*,i8**%f,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%d,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cw,i64 16
%cF=bitcast i8*%cE to i32*
store i32 3,i32*%cF,align 4
ret i8*%cw
cG:
%cH=landingpad{i8*,i8*}
catch i8*null
%cI=extractvalue{i8*,i8*}%cH,1
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%g,align 8
store i8*%cK,i8**%c,align 8
%cL=bitcast i8*%cK to i8**
%cM=load i8*,i8**%cL,align 8
%cN=icmp eq i8*%cM,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%cN,label%cO,label%c9
cO:
store i8*null,i8**%c,align 8
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
store i8*%cP,i8**%c,align 8
%cS=getelementptr inbounds i8,i8*%cP,i64 4
%cT=bitcast i8*%cS to i32*
store i32 0,i32*%cT,align 1
%cU=bitcast i8*%cP to i32*
store i32 14,i32*%cU,align 4
%cV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cW=getelementptr inbounds i8,i8*%cP,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cP,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 2,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
%c3=bitcast i8*%c0 to i8**
store i8*null,i8**%c3,align 8
%c4=load i8*,i8**%c,align 8
%c5=getelementptr inbounds i8,i8*%c0,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%c0,i64 16
%c8=bitcast i8*%c7 to i32*
store i32 3,i32*%c8,align 4
ret i8*%c0
c9:
store i8*null,i8**%f,align 8
%da=call i8*@sml_alloc(i32 inreg 60)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177336,i32*%dc,align 4
%dd=getelementptr inbounds i8,i8*%da,i64 56
%de=bitcast i8*%dd to i32*
store i32 1,i32*%de,align 4
%df=load i8*,i8**%c,align 8
%dg=bitcast i8*%da to i8**
store i8*%df,i8**%dg,align 8
call void@sml_raise(i8*inreg%da)#1
unreachable
}
define internal fastcc i8*@_SMLLN18ClosureConversion211allocRecordE_547(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211allocRecordE_546 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion211allocRecordE_546 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL15initialElements_549(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN18ClosureConversion210allocArrayE_551(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"personality i32(...)*@sml_personality{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%c,align 8
%q=load i8*,i8**%g,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%a,%t]
%u=phi i8*[%p,%o],[%b,%t]
store i8*null,i8**%c,align 8
store i8*%u,i8**%h,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%x,i64 16
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%i,align 8
%D=getelementptr inbounds i8,i8*%x,i64 32
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=getelementptr inbounds i8,i8*%x,i64 36
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=getelementptr inbounds i8,i8*%x,i64 40
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%j,align 8
%M=invoke fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%N unwind label%db
N:
%O=getelementptr inbounds i8,i8*%M,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%M to i8**
%S=load i8*,i8**%R,align 8
%T=invoke fastcc i8*%Q(i8*inreg%S,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@y,i64 0,i32 2)to i8*))
to label%U unwind label%db
U:
%V=getelementptr inbounds i8,i8*%T,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%T to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%g,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 24
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=invoke fastcc i8*%X(i8*inreg%Z,i8*inreg%ag)
to label%ai unwind label%db
ai:
store i8*%ah,i8**%c,align 8
%aj=load i8*,i8**%g,align 8
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 48
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=invoke fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%ap)
to label%ar unwind label%db
ar:
store i8*%aq,i8**%d,align 8
%as=load i8*,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=getelementptr inbounds i8,i8*%av,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
%az=invoke fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%ay)
to label%aA unwind label%db
aA:
store i8*%az,i8**%e,align 8
%aB=load i8*,i8**%g,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
%aF=getelementptr inbounds i8,i8*%aE,i64 56
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
%aI=invoke fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%aH)
to label%aJ unwind label%db
aJ:
store i8*%aI,i8**%f,align 8
%aK=bitcast i8**%g to i8***
%aL=load i8**,i8***%aK,align 8
store i8*null,i8**%g,align 8
%aM=load i8*,i8**%aL,align 8
%aN=invoke fastcc i8*@_SMLFN9DataLabel8generateE(i8*inreg%aM)
to label%aO unwind label%db
aO:
store i8*%aN,i8**%g,align 8
store i8*null,i8**%h,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%l,align 8
%aS=load i8*,i8**%i,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=load i8*,i8**@_SMLZN12BuiltinTypes10arrayTyConE,align 8
store i8*%aY,i8**%h,align 8
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%k,align 8
%a2=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%l,align 8
%bc=getelementptr inbounds i8,i8*%a9,i64 4
%bd=bitcast i8*%bc to i32*
store i32 0,i32*%bd,align 1
%be=bitcast i8*%a9 to i32*
store i32 2,i32*%be,align 4
%bf=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a9,i64 16
%bj=bitcast i8*%bi to i32*
store i32 2,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 76)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177352,i32*%bm,align 4
store i8*%bk,i8**%h,align 8
%bn=getelementptr inbounds i8,i8*%bk,i64 4
%bo=bitcast i8*%bn to i32*
store i32 0,i32*%bo,align 1
%bp=bitcast i8*%bk to i32*
store i32%z,i32*%bp,align 4
%bq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%br=getelementptr inbounds i8,i8*%bk,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bu=getelementptr inbounds i8,i8*%bk,i64 16
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=load i8*,i8**%g,align 8
%bx=getelementptr inbounds i8,i8*%bk,i64 24
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bA=getelementptr inbounds i8,i8*%bk,i64 32
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bk,i64 40
%bD=bitcast i8*%bC to i32*
store i32%F,i32*%bD,align 4
%bE=getelementptr inbounds i8,i8*%bk,i64 44
%bF=bitcast i8*%bE to i32*
store i32%I,i32*%bF,align 4
%bG=load i8*,i8**%j,align 8
%bH=getelementptr inbounds i8,i8*%bk,i64 48
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bk,i64 56
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bN=getelementptr inbounds i8,i8*%bk,i64 64
%bO=bitcast i8*%bN to i8**
store i8*%bM,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bk,i64 72
%bQ=bitcast i8*%bP to i32*
store i32 478,i32*%bQ,align 4
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
store i8*%bR,i8**%c,align 8
%bU=bitcast i8*%bR to i64*
store i64 0,i64*%bU,align 4
%bV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bW=getelementptr inbounds i8,i8*%bR,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bR,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 2,i32*%bZ,align 4
%b0=call i8*@sml_alloc(i32 inreg 20)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177296,i32*%b2,align 4
store i8*%b0,i8**%d,align 8
%b3=bitcast i8*%b0 to i64*
store i64 0,i64*%b3,align 4
%b4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 2,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%e,align 8
%cc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b9,i64 8
%cf=bitcast i8*%ce to i8**
store i8*null,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b9,i64 16
%ch=bitcast i8*%cg to i32*
store i32 3,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%c,align 8
%cl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=load i8*,i8**%l,align 8
%co=getelementptr inbounds i8,i8*%ci,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%ci,i64 16
%cr=bitcast i8*%cq to i32*
store i32 3,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
store i8*%cs,i8**%d,align 8
%cv=getelementptr inbounds i8,i8*%cs,i64 4
%cw=bitcast i8*%cv to i32*
store i32 0,i32*%cw,align 1
%cx=bitcast i8*%cs to i32*
store i32 20,i32*%cx,align 4
%cy=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cs,i64 16
%cC=bitcast i8*%cB to i32*
store i32 2,i32*%cC,align 4
%cD=call i8*@sml_alloc(i32 inreg 28)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177304,i32*%cF,align 4
store i8*%cD,i8**%c,align 8
%cG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cM=getelementptr inbounds i8,i8*%cD,i64 16
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cD,i64 24
%cP=bitcast i8*%cO to i32*
store i32 7,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%d,align 8
%cT=getelementptr inbounds i8,i8*%cQ,i64 4
%cU=bitcast i8*%cT to i32*
store i32 0,i32*%cU,align 1
%cV=bitcast i8*%cQ to i32*
store i32 3,i32*%cV,align 4
%cW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cX=getelementptr inbounds i8,i8*%cQ,i64 8
%cY=bitcast i8*%cX to i8**
store i8*%cW,i8**%cY,align 8
%cZ=getelementptr inbounds i8,i8*%cQ,i64 16
%c0=bitcast i8*%cZ to i32*
store i32 2,i32*%c0,align 4
%c1=call i8*@sml_alloc(i32 inreg 20)#0
%c2=getelementptr inbounds i8,i8*%c1,i64 -4
%c3=bitcast i8*%c2 to i32*
store i32 1342177296,i32*%c3,align 4
%c4=load i8*,i8**%e,align 8
%c5=bitcast i8*%c1 to i8**
store i8*%c4,i8**%c5,align 8
%c6=load i8*,i8**%d,align 8
%c7=getelementptr inbounds i8,i8*%c1,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c1,i64 16
%da=bitcast i8*%c9 to i32*
store i32 3,i32*%da,align 4
ret i8*%c1
db:
%dc=landingpad{i8*,i8*}
catch i8*null
%dd=extractvalue{i8*,i8*}%dc,1
%de=bitcast i8*%dd to i8**
%df=load i8*,i8**%de,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%g,align 8
store i8*%df,i8**%c,align 8
%dg=bitcast i8*%df to i8**
%dh=load i8*,i8**%dg,align 8
%di=icmp eq i8*%dh,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%di,label%dj,label%dt
dj:
store i8*null,i8**%c,align 8
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
%dn=bitcast i8*%dk to i8**
store i8*null,i8**%dn,align 8
%do=load i8*,i8**%h,align 8
%dp=getelementptr inbounds i8,i8*%dk,i64 8
%dq=bitcast i8*%dp to i8**
store i8*%do,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dk,i64 16
%ds=bitcast i8*%dr to i32*
store i32 3,i32*%ds,align 4
ret i8*%dk
dt:
store i8*null,i8**%h,align 8
%du=call i8*@sml_alloc(i32 inreg 60)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177336,i32*%dw,align 4
%dx=getelementptr inbounds i8,i8*%du,i64 56
%dy=bitcast i8*%dx to i32*
store i32 1,i32*%dy,align 4
%dz=load i8*,i8**%c,align 8
%dA=bitcast i8*%du to i8**
store i8*%dz,i8**%dA,align 8
call void@sml_raise(i8*inreg%du)#1
unreachable
}
define internal fastcc i8*@_SMLLN18ClosureConversion210allocArrayE_552(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210allocArrayE_551 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210allocArrayE_551 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion27valbindE_555(i8*inreg%a)unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%b,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
store i8*null,i8**%b,align 8
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%m,i64 24
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=invoke fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%s)
to label%R unwind label%A
A:
%B=landingpad{i8*,i8*}
catch i8*null
%C=extractvalue{i8*,i8*}%B,1
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%b,align 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=icmp eq i8*%G,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%H,label%I,label%J
I:
store i8*null,i8**%g,align 8
br label%ac
J:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%b,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
R:
%S=bitcast i8*%z to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 12)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
%X=load i8*,i8**%b,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i32*
store i32 1,i32*%aa,align 4
store i8*%U,i8**%g,align 8
%ab=icmp eq i8*%U,null
br i1%ab,label%ac,label%az
ac:
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ad,i8**%b,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%c,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ad,i64 24
%ap=bitcast i8*%ao to i32*
store i32 7,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*null,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
br label%aA
az:
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
br label%aA
aA:
%aB=phi i8*[null,%az],[%aq,%ac]
store i8*%aB,i8**%b,align 8
%aC=call fastcc i8*@_SMLFN5VarID3Map9singletonE(i32 inreg 1,i32 inreg 8)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%f,align 8
%aI=bitcast i8**%c to i32**
%aJ=load i32*,i32**%aI,align 8
%aK=load i32,i32*%aJ,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
store i8*%aL,i8**%d,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 16
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aL,i64 24
%aX=bitcast i8*%aW to i32*
store i32 7,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=bitcast i8*%aY to i32*
%a0=getelementptr inbounds i8,i8*%aY,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=getelementptr inbounds i8,i8*%aY,i64 4
%a3=bitcast i8*%a2 to i32*
store i32 0,i32*%a3,align 1
store i32%aK,i32*%aZ,align 4
%a4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a5=getelementptr inbounds i8,i8*%aY,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aY,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 2,i32*%a8,align 4
%a9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ba=call fastcc i8*%aF(i8*inreg%a9,i8*inreg%aY)
store i8*%ba,i8**%c,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
%be=load i8*,i8**%b,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%c,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
ret i8*%bb
}
define internal fastcc i8*@_SMLLN18ClosureConversion23LetE_557(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%a to i8***
%h=load i8**,i8***%g,align 8
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%b,align 8
%j=getelementptr inbounds i8*,i8**%h,i64 1
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8*,i8**%h,i64 2
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%a,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 36)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177312,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%q,i64 24
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%q,i64 32
%F=bitcast i8*%E to i32*
store i32 15,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 10,i32*%H,align 4
%M=load i8*,i8**%f,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN18ClosureConversion23LetE_559(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@z,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%p(i8*inreg%r,i8*inreg%v)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=bitcast i8**%b to i8***
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
%F=tail call fastcc i8*%z(i8*inreg%B,i8*inreg%E)
ret i8*%F
}
define internal fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_562(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%aw
i32 1,label%H
]
p:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@A,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 4
%J=bitcast i8*%I to i32*
%K=load i32,i32*%J,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%L,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 12)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
store i8*%P,i8**%f,align 8
store i32 23,i32*%Q,align 4
%T=getelementptr inbounds i8,i8*%P,i64 4
%U=bitcast i8*%T to i32*
store i32%K,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 4
%X=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%X,i8**%d,align 8
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
store i8*%Y,i8**%e,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%Y,i64 24
%ak=bitcast i8*%aj to i32*
store i32 7,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=bitcast i8*%al to i32*
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=getelementptr inbounds i8,i8*%al,i64 4
%aq=bitcast i8*%ap to i32*
store i32 0,i32*%aq,align 1
store i32 3,i32*%am,align 4
%ar=load i8*,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%al,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i32*
store i32 2,i32*%av,align 4
ret i8*%al
aw:
%ax=getelementptr inbounds i8,i8*%l,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
%aC=getelementptr inbounds i8,i8*%az,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%d,align 8
%aF=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%f,align 8
%aL=bitcast i8**%e to i8***
%aM=load i8**,i8***%aL,align 8
%aN=load i8*,i8**%aM,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 8
%aP=bitcast i8*%aO to i8***
%aQ=load i8**,i8***%aP,align 8
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%c,align 8
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=getelementptr inbounds i8,i8*%aS,i64 12
%aW=bitcast i8*%aV to i32*
store i32 0,i32*%aW,align 1
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=bitcast i8*%aS to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aS,i64 8
%a0=bitcast i8*%aZ to i32*
store i32%aB,i32*%a0,align 4
%a1=getelementptr inbounds i8,i8*%aS,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 1,i32*%a2,align 4
%a3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a4=call fastcc i8*%aI(i8*inreg%a3,i8*inreg%aS)
%a5=icmp eq i8*%a4,null
br i1%a5,label%a6,label%bL
a6:
%a7=load i8*,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%a7,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%c,align 8
%bb=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%bb,i8**%e,align 8
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
store i8*%bc,i8**%f,align 8
%bf=getelementptr inbounds i8,i8*%bc,i64 4
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
%bh=bitcast i8*%bc to i32*
store i32%aB,i32*%bh,align 4
%bi=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bm=getelementptr inbounds i8,i8*%bc,i64 16
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bc,i64 24
%bp=bitcast i8*%bo to i32*
store i32 6,i32*%bp,align 4
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177296,i32*%bs,align 4
store i8*%bq,i8**%d,align 8
%bt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=getelementptr inbounds i8,i8*%bq,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bq,i64 16
%bz=bitcast i8*%by to i32*
store i32 3,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=bitcast i8*%bA to i32*
%bC=getelementptr inbounds i8,i8*%bA,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177296,i32*%bD,align 4
%bE=getelementptr inbounds i8,i8*%bA,i64 4
%bF=bitcast i8*%bE to i32*
store i32 0,i32*%bF,align 1
store i32 18,i32*%bB,align 4
%bG=load i8*,i8**%d,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i32*
store i32 2,i32*%bK,align 4
ret i8*%bA
bL:
%bM=bitcast i8*%a4 to i8**
%bN=load i8*,i8**%bM,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
%bT=load i8*,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 8
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
%bX=tail call fastcc i8*%bQ(i8*inreg%bS,i8*inreg%bW)
ret i8*%bX
}
define internal fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_563(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27toCcexpE_562 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27toCcexpE_562 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27toCcexpE_563 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27toCcexpE_563 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion212extractDeclsE_584(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
A:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
store i8*%a,i8**%t,align 8
store i8*%b,i8**%h,align 8
%u=load atomic i32,i32*@sml_check_flag unordered,align 4
%v=icmp eq i32%u,0
br i1%v,label%y,label%w
w:
call void@sml_check(i32 inreg%u)
%x=load i8*,i8**%h,align 8
br label%y
y:
%z=phi i8*[%x,%w],[%b,%A]
%B=bitcast i8*%z to i8**
%C=load i8*,i8**%B,align 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=getelementptr inbounds i8,i8*%E,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%r,align 8
%K=getelementptr inbounds i8,i8*%z,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%s,align 8
%N=getelementptr inbounds i8,i8*%C,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=bitcast i8*%P to i32*
%R=load i32,i32*%Q,align 4
switch i32%R,label%S[
i32 1,label%eM
i32 0,label%ak
]
S:
store i8*null,i8**%r,align 8
store i8*null,i8**%s,align 8
store i8*null,i8**%t,align 8
call void@sml_matchcomp_bug()
%T=load i8*,i8**@_SMLZ5Match,align 8
store i8*%T,i8**%h,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%i,align 8
%X=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@Q,i64 0,i32 2,i64 0),i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 60)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177336,i32*%af,align 4
%ag=getelementptr inbounds i8,i8*%ad,i64 56
%ah=bitcast i8*%ag to i32*
store i32 1,i32*%ah,align 4
%ai=load i8*,i8**%i,align 8
%aj=bitcast i8*%ad to i8**
store i8*%ai,i8**%aj,align 8
call void@sml_raise(i8*inreg%ad)#1
unreachable
ak:
%al=getelementptr inbounds i8,i8*%P,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%h,align 8
%ao=bitcast i8*%an to i32*
%ap=load i32,i32*%ao,align 4
%aq=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aq)
%ar=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ar)
%as=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%as)
%at=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%at)
%au=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%au)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%av=load atomic i32,i32*@sml_check_flag unordered,align 4
%aw=icmp eq i32%av,0
br i1%aw,label%ay,label%ax
ax:
call void@sml_check(i32 inreg%av)
br label%ay
ay:
switch i32%ap,label%az[
i32 0,label%aX
i32 6,label%aW
i32 2,label%aV
i32 1,label%aU
i32 4,label%aT
i32 3,label%aS
i32 5,label%aR
]
az:
call void@sml_matchcomp_bug()
%aA=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aA,i8**%c,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%d,align 8
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@P,i64 0,i32 2,i64 0),i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 60)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177336,i32*%aM,align 4
%aN=getelementptr inbounds i8,i8*%aK,i64 56
%aO=bitcast i8*%aN to i32*
store i32 1,i32*%aO,align 4
%aP=load i8*,i8**%d,align 8
%aQ=bitcast i8*%aK to i8**
store i8*%aP,i8**%aQ,align 8
call void@sml_raise(i8*inreg%aK)#1
unreachable
aR:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@O,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aS:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@M,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aT:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@K,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aU:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@I,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aV:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@G,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aW:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@E,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aX:
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@C,i64 0,i32 2)to i8*),i8**%c,align 8
br label%aY
aY:
%aZ=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%aZ,i8**%d,align 8
store i8*%aZ,i8**%e,align 8
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
store i8*%a0,i8**%f,align 8
%a3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*null,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%g,align 8
%bc=load i8*,i8**%d,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bf=getelementptr inbounds i8,i8*%a9,i64 8
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a9,i64 16
%bi=bitcast i8*%bh to i32*
store i32 3,i32*%bi,align 4
%bj=load i8*,i8**@_SMLZN14BoundTypeVarID3Map5emptyE,align 8
store i8*%bj,i8**%d,align 8
%bk=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%bk,i8**%e,align 8
%bl=call i8*@sml_alloc(i32 inreg 28)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177304,i32*%bn,align 4
store i8*%bl,i8**%f,align 8
%bo=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 16
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bl,i64 24
%bx=bitcast i8*%bw to i32*
store i32 7,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
%bB=load i8*,i8**%c,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%f,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aq)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ar)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%as)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%at)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%au)
store i8*%by,i8**%k,align 8
%bI=bitcast i8**%t to i8****
%bJ=load i8***,i8****%bI,align 8
%bK=load i8**,i8***%bJ,align 8
%bL=load i8*,i8**%bK,align 8
%bM=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%bL)
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bM to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%t,align 8
%bT=getelementptr inbounds i8,i8*%bS,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
%bW=call fastcc i8*%bP(i8*inreg%bR,i8*inreg%bV)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**%h,align 8
%b3=getelementptr inbounds i8,i8*%b2,i64 8
%b4=bitcast i8*%b3 to i8***
%b5=load i8**,i8***%b4,align 8
%b6=load i8*,i8**%b5,align 8
%b7=call fastcc i8*%bZ(i8*inreg%b1,i8*inreg%b6)
store i8*%b7,i8**%j,align 8
%b8=load i8***,i8****%bI,align 8
%b9=load i8**,i8***%b8,align 8
%ca=load i8*,i8**%b9,align 8
%cb=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%ca)
%cc=getelementptr inbounds i8,i8*%cb,i64 16
%cd=bitcast i8*%cc to i8*(i8*,i8*)**
%ce=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cd,align 8
%cf=bitcast i8*%cb to i8**
%cg=load i8*,i8**%cf,align 8
%ch=load i8*,i8**%t,align 8
%ci=getelementptr inbounds i8,i8*%ch,i64 8
%cj=bitcast i8*%ci to i8**
%ck=load i8*,i8**%cj,align 8
%cl=call fastcc i8*%ce(i8*inreg%cg,i8*inreg%ck)
%cm=getelementptr inbounds i8,i8*%cl,i64 16
%cn=bitcast i8*%cm to i8*(i8*,i8*)**
%co=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cn,align 8
%cp=bitcast i8*%cl to i8**
%cq=load i8*,i8**%cp,align 8
%cr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 8
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
%cv=getelementptr inbounds i8,i8*%cu,i64 8
%cw=bitcast i8*%cv to i8**
%cx=load i8*,i8**%cw,align 8
%cy=call fastcc i8*%co(i8*inreg%cq,i8*inreg%cx)
store i8*%cy,i8**%h,align 8
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177296,i32*%cB,align 4
%cC=load i8*,i8**%h,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cz,i64 8
%cF=bitcast i8*%cE to i8**
store i8*null,i8**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cz,i64 16
%cH=bitcast i8*%cG to i32*
store i32 3,i32*%cH,align 4
store i8*null,i8**%i,align 8
%cI=call i8*@sml_alloc(i32 inreg 20)#0
%cJ=getelementptr inbounds i8,i8*%cI,i64 -4
%cK=bitcast i8*%cJ to i32*
store i32 1342177296,i32*%cK,align 4
store i8*%cI,i8**%l,align 8
%cL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cM=bitcast i8*%cI to i8**
store i8*%cL,i8**%cM,align 8
%cN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cO=getelementptr inbounds i8,i8*%cI,i64 8
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cI,i64 16
%cR=bitcast i8*%cQ to i32*
store i32 3,i32*%cR,align 4
%cS=call i8*@sml_alloc(i32 inreg 20)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177296,i32*%cU,align 4
store i8*%cS,i8**%m,align 8
%cV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cY=getelementptr inbounds i8,i8*%cS,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cS,i64 16
%c1=bitcast i8*%c0 to i32*
store i32 3,i32*%c1,align 4
%c2=load i8*,i8**%t,align 8
%c3=getelementptr inbounds i8,i8*%c2,i64 8
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
store i8*%c5,i8**%i,align 8
%c6=call i8*@sml_alloc(i32 inreg 52)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177328,i32*%c8,align 4
store i8*%c6,i8**%h,align 8
%c9=load i8*,i8**%m,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c6,i64 8
call void@llvm.memset.p0i8.i64(i8*%db,i8 0,i64 24,i1 false)
%dc=load i8*,i8**%i,align 8
%dd=getelementptr inbounds i8,i8*%c6,i64 32
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=load i8*,i8**%k,align 8
%dg=getelementptr inbounds i8,i8*%c6,i64 40
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%c6,i64 48
%dj=bitcast i8*%di to i32*
store i32 63,i32*%dj,align 4
store i8*%c9,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*%dc,i8**%m,align 8
%dk=bitcast i8*%df to i8**
%dl=load i8*,i8**%dk,align 8
store i8*%dl,i8**%n,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 8
%dn=bitcast i8*%dm to i8***
%do=load i8**,i8***%dn,align 8
%dp=load i8*,i8**%do,align 8
store i8*%dp,i8**%o,align 8
%dq=getelementptr inbounds i8*,i8**%do,i64 1
%dr=load i8*,i8**%dq,align 8
%ds=getelementptr inbounds i8,i8*%dr,i64 16
%dt=bitcast i8*%ds to i8*(i8*,i8*,i8*)**
%du=load i8*(i8*,i8*,i8*)*,i8*(i8*,i8*,i8*)**%dt,align 8
%dv=bitcast i8*%dr to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%p,align 8
%dx=call i8*@sml_alloc(i32 inreg 4)#0
%dy=bitcast i8*%dx to i32*
%dz=getelementptr inbounds i8,i8*%dx,i64 -4
%dA=bitcast i8*%dz to i32*
store i32 4,i32*%dA,align 4
store i8*%dx,i8**%q,align 8
store i32 1,i32*%dy,align 4
%dB=call i8*@sml_alloc(i32 inreg 4)#0
%dC=bitcast i8*%dB to i32*
%dD=getelementptr inbounds i8,i8*%dB,i64 -4
%dE=bitcast i8*%dD to i32*
store i32 4,i32*%dE,align 4
store i32 8,i32*%dC,align 4
%dF=load i8*,i8**%p,align 8
%dG=load i8*,i8**%q,align 8
store i8*null,i8**%p,align 8
store i8*null,i8**%q,align 8
%dH=call fastcc i8*%du(i8*inreg%dF,i8*inreg%dG,i8*inreg%dB)
store i8*%dH,i8**%p,align 8
%dI=load i8*,i8**%h,align 8
%dJ=getelementptr inbounds i8,i8*%dI,i64 40
%dK=bitcast i8*%dJ to i8**
%dL=load i8*,i8**%dK,align 8
%dM=getelementptr inbounds i8,i8*%dL,i64 8
%dN=bitcast i8*%dM to i8**
%dO=load i8*,i8**%dN,align 8
%dP=getelementptr inbounds i8,i8*%dO,i64 16
%dQ=bitcast i8*%dP to i8**
%dR=load i8*,i8**%dQ,align 8
store i8*%dR,i8**%h,align 8
%dS=call i8*@sml_alloc(i32 inreg 28)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177304,i32*%dU,align 4
store i8*%dS,i8**%q,align 8
%dV=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dY=getelementptr inbounds i8,i8*%dS,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d1=getelementptr inbounds i8,i8*%dS,i64 16
%d2=bitcast i8*%d1 to i8**
store i8*%d0,i8**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dS,i64 24
%d4=bitcast i8*%d3 to i32*
store i32 7,i32*%d4,align 4
%d5=call i8*@sml_alloc(i32 inreg 20)#0
%d6=getelementptr inbounds i8,i8*%d5,i64 -4
%d7=bitcast i8*%d6 to i32*
store i32 1342177296,i32*%d7,align 4
store i8*%d5,i8**%h,align 8
%d8=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%d9=bitcast i8*%d5 to i8**
store i8*%d8,i8**%d9,align 8
%ea=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%eb=getelementptr inbounds i8,i8*%d5,i64 8
%ec=bitcast i8*%eb to i8**
store i8*%ea,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d5,i64 16
%ee=bitcast i8*%ed to i32*
store i32 3,i32*%ee,align 4
%ef=call i8*@sml_alloc(i32 inreg 52)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177328,i32*%eh,align 4
store i8*%ef,i8**%n,align 8
%ei=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ej=bitcast i8*%ef to i8**
store i8*%ei,i8**%ej,align 8
%ek=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%el=getelementptr inbounds i8,i8*%ef,i64 8
%em=bitcast i8*%el to i8**
store i8*%ek,i8**%em,align 8
%en=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eo=getelementptr inbounds i8,i8*%ef,i64 16
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%er=getelementptr inbounds i8,i8*%ef,i64 24
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%eu=getelementptr inbounds i8,i8*%ef,i64 32
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ex=getelementptr inbounds i8,i8*%ef,i64 40
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%ef,i64 48
%eA=bitcast i8*%ez to i32*
store i32 63,i32*%eA,align 4
%eB=call i8*@sml_alloc(i32 inreg 20)#0
%eC=bitcast i8*%eB to i32*
%eD=getelementptr inbounds i8,i8*%eB,i64 -4
%eE=bitcast i8*%eD to i32*
store i32 1342177296,i32*%eE,align 4
%eF=getelementptr inbounds i8,i8*%eB,i64 4
%eG=bitcast i8*%eF to i32*
store i32 0,i32*%eG,align 1
store i32 12,i32*%eC,align 4
%eH=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%eI=getelementptr inbounds i8,i8*%eB,i64 8
%eJ=bitcast i8*%eI to i8**
store i8*%eH,i8**%eJ,align 8
%eK=getelementptr inbounds i8,i8*%eB,i64 16
%eL=bitcast i8*%eK to i32*
store i32 2,i32*%eL,align 4
br label%fc
eM:
%eN=getelementptr inbounds i8,i8*%P,i64 8
%eO=bitcast i8*%eN to i8**
%eP=load i8*,i8**%eO,align 8
store i8*%eP,i8**%h,align 8
%eQ=bitcast i8**%t to i8****
%eR=load i8***,i8****%eQ,align 8
%eS=load i8**,i8***%eR,align 8
%eT=load i8*,i8**%eS,align 8
%eU=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%eT)
%eV=getelementptr inbounds i8,i8*%eU,i64 16
%eW=bitcast i8*%eV to i8*(i8*,i8*)**
%eX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eW,align 8
%eY=bitcast i8*%eU to i8**
%eZ=load i8*,i8**%eY,align 8
%e0=load i8*,i8**%t,align 8
%e1=getelementptr inbounds i8,i8*%e0,i64 8
%e2=bitcast i8*%e1 to i8**
%e3=load i8*,i8**%e2,align 8
%e4=call fastcc i8*%eX(i8*inreg%eZ,i8*inreg%e3)
%e5=getelementptr inbounds i8,i8*%e4,i64 16
%e6=bitcast i8*%e5 to i8*(i8*,i8*)**
%e7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e6,align 8
%e8=bitcast i8*%e4 to i8**
%e9=load i8*,i8**%e8,align 8
%fa=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fb=call fastcc i8*%e7(i8*inreg%e9,i8*inreg%fa)
br label%fc
fc:
%fd=phi i8*[%fb,%eM],[%eB,%aY]
store i8*%fd,i8**%h,align 8
%fe=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%fe,i8**%i,align 8
%ff=call i8*@sml_alloc(i32 inreg 28)#0
%fg=getelementptr inbounds i8,i8*%ff,i64 -4
%fh=bitcast i8*%fg to i32*
store i32 1342177304,i32*%fh,align 4
store i8*%ff,i8**%j,align 8
%fi=getelementptr inbounds i8,i8*%ff,i64 4
%fj=bitcast i8*%fi to i32*
store i32 0,i32*%fj,align 1
%fk=bitcast i8*%ff to i32*
store i32%G,i32*%fk,align 4
%fl=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%fm=getelementptr inbounds i8,i8*%ff,i64 8
%fn=bitcast i8*%fm to i8**
store i8*%fl,i8**%fn,align 8
%fo=load i8*,i8**%i,align 8
%fp=getelementptr inbounds i8,i8*%ff,i64 16
%fq=bitcast i8*%fp to i8**
store i8*%fo,i8**%fq,align 8
%fr=getelementptr inbounds i8,i8*%ff,i64 24
%fs=bitcast i8*%fr to i32*
store i32 6,i32*%fs,align 4
%ft=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%fu=getelementptr inbounds i8,i8*%ft,i64 8
%fv=bitcast i8*%fu to i8**
%fw=load i8*,i8**%fv,align 8
store i8*%fw,i8**%i,align 8
%fx=call i8*@sml_alloc(i32 inreg 36)#0
%fy=getelementptr inbounds i8,i8*%fx,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177312,i32*%fz,align 4
store i8*%fx,i8**%k,align 8
%fA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fB=bitcast i8*%fx to i8**
store i8*%fA,i8**%fB,align 8
%fC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fD=getelementptr inbounds i8,i8*%fx,i64 8
%fE=bitcast i8*%fD to i8**
store i8*%fC,i8**%fE,align 8
%fF=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fG=getelementptr inbounds i8,i8*%fx,i64 16
%fH=bitcast i8*%fG to i8**
store i8*%fF,i8**%fH,align 8
%fI=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%fJ=getelementptr inbounds i8,i8*%fx,i64 24
%fK=bitcast i8*%fJ to i8**
store i8*%fI,i8**%fK,align 8
%fL=getelementptr inbounds i8,i8*%fx,i64 32
%fM=bitcast i8*%fL to i32*
store i32 15,i32*%fM,align 4
%fN=call i8*@sml_alloc(i32 inreg 20)#0
%fO=bitcast i8*%fN to i32*
%fP=getelementptr inbounds i8,i8*%fN,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177296,i32*%fQ,align 4
%fR=getelementptr inbounds i8,i8*%fN,i64 4
%fS=bitcast i8*%fR to i32*
store i32 0,i32*%fS,align 1
store i32 10,i32*%fO,align 4
%fT=load i8*,i8**%k,align 8
%fU=getelementptr inbounds i8,i8*%fN,i64 8
%fV=bitcast i8*%fU to i8**
store i8*%fT,i8**%fV,align 8
%fW=getelementptr inbounds i8,i8*%fN,i64 16
%fX=bitcast i8*%fW to i32*
store i32 2,i32*%fX,align 4
ret i8*%fN
}
define internal fastcc i8*@_SMLL1e_587(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%e,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%f,align 8
%m=load i8*,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i8**
store i8*%o,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%j,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%g,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 18,i32*%y,align 4
%z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 44)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177320,i32*%L,align 4
store i8*%J,i8**%f,align 8
%M=getelementptr inbounds i8,i8*%J,i64 4
%N=bitcast i8*%M to i32*
store i32 0,i32*%N,align 1
%O=bitcast i8*%J to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%J,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=getelementptr inbounds i8,i8*%J,i64 24
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%J,i64 32
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%J,i64 40
%ac=bitcast i8*%ab to i32*
store i32 30,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 1,i32*%ae,align 4
%aj=load i8*,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLN18ClosureConversion210tagToValueE_589(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%d,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=load i8*,i8**%r,align 8
%u=getelementptr inbounds i8,i8*%t,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=bitcast i8*%s to i32*
%y=load i32,i32*%x,align 4
switch i32%y,label%z[
i32 1,label%ae
i32 0,label%R
]
z:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%A=load i8*,i8**@_SMLZ5Match,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@R,i64 0,i32 2,i64 0),i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
R:
store i8*null,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%s,i64 4
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=call fastcc i32@_SMLFN12RuntimeTypes8tagValueE(i32 inreg%U)
%W=call i8*@sml_alloc(i32 inreg 12)#0
%X=bitcast i8*%W to i32*
%Y=getelementptr inbounds i8,i8*%W,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177288,i32*%Z,align 4
store i32 1,i32*%X,align 4
%aa=getelementptr inbounds i8,i8*%W,i64 4
%ab=bitcast i8*%aa to i32*
store i32%V,i32*%ab,align 4
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i32*
store i32 0,i32*%ad,align 4
ret i8*%W
ae:
%af=getelementptr inbounds i8,i8*%s,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%c,align 8
%ai=bitcast i8*%ah to i32*
%aj=load i32,i32*%ai,align 4
%ak=getelementptr inbounds i8,i8*%ah,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%f,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%g,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
store i8*%aA,i8**%h,align 8
%aD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_587 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_587 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 -2147483647,i32*%aK,align 4
%aL=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%f,align 8
%aR=bitcast i8**%d to i8***
%aS=load i8**,i8***%aR,align 8
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%c,align 8
%aU=call i8*@sml_alloc(i32 inreg 28)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177304,i32*%aW,align 4
%aX=getelementptr inbounds i8,i8*%aU,i64 12
%aY=bitcast i8*%aX to i32*
store i32 0,i32*%aY,align 1
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=bitcast i8*%aU to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 8
%a2=bitcast i8*%a1 to i32*
store i32%aj,i32*%a2,align 4
%a3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a4=getelementptr inbounds i8,i8*%aU,i64 16
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aU,i64 24
%a7=bitcast i8*%a6 to i32*
store i32 5,i32*%a7,align 4
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=call fastcc i8*%aO(i8*inreg%a8,i8*inreg%aU)
%ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bb=bitcast i8*%ba to i8**
call void@sml_write(i8*inreg%ba,i8**inreg%bb,i8*inreg%a9)#0
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%c,align 8
%bf=getelementptr inbounds i8,i8*%bc,i64 4
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
%bh=bitcast i8*%bc to i32*
store i32%aj,i32*%bh,align 4
%bi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 16
%bm=bitcast i8*%bl to i32*
store i32 2,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=bitcast i8*%bn to i64*
store i64 0,i64*%bq,align 4
%br=load i8*,i8**%c,align 8
%bs=getelementptr inbounds i8,i8*%bn,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 16
%bv=bitcast i8*%bu to i32*
store i32 2,i32*%bv,align 4
ret i8*%bn
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_592(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%g to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
%s=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%q,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToValueE_589 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210tagToValueE_589 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
%L=load i8*,i8**%g,align 8
%M=getelementptr inbounds i8,i8*%L,i64 12
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=load i8*,i8**%e,align 8
%Q=sext i32%O to i64
%R=getelementptr inbounds i8,i8*%P,i64%Q
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*@_SMLLN18ClosureConversion210tagToValueE_589(i8*inreg%D,i8*inreg%T)
store i8*%U,i8**%f,align 8
%V=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i32*
%Y=load i32,i32*%X,align 4
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=sext i32%Y to i64
%ab=getelementptr inbounds i8,i8*%Z,i64%aa
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg%ad)
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
store i8*%af,i8**%e,align 8
store i32 1,i32*%ag,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32%ae,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i32*
store i32 0,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
%aq=load i8*,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
ret i8*%an
}
define internal fastcc i8*@_SMLL9fieldList_593(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=bitcast i8*%b to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%c,align 8
%j=getelementptr inbounds i8,i8*%b,i64 8
%k=bitcast i8*%j to i8***
%l=load i8**,i8***%k,align 8
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8*,i8**%l,i64 1
%o=load i8*,i8**%n,align 8
%p=bitcast i8*%a to i32*
%q=load i32,i32*%p,align 4
%r=sext i32%q to i64
%s=getelementptr inbounds i8,i8*%o,i64%r
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%a,i64 4
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=sext i32%x to i64
%z=getelementptr inbounds i8,i8*%o,i64%y
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%a,i64 8
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=sext i32%E to i64
%G=getelementptr inbounds i8,i8*%o,i64%F
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 44)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177320,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=load i8*,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%J,i64 16
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%J,i64 24
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=load i8*,i8**%g,align 8
%Y=getelementptr inbounds i8,i8*%J,i64 32
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%J,i64 40
%ab=bitcast i8*%aa to i32*
store i32 31,i32*%ab,align 4
ret i8*%J
}
define internal fastcc i8*@_SMLL8recordTy_594(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=load i8*,i8**%m,align 8
%s=getelementptr inbounds i8,i8*%r,i64 32
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%k,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call fastcc i8*@_SMLFN11RecordLabel3Map6insertE(i32 inreg 1,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%b,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=load i8*,i8**%e,align 8
%S=tail call fastcc i8*%B(i8*inreg%R,i8*inreg%E)
ret i8*%S
}
define internal fastcc i8*@_SMLL9fieldList_596(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%c,align 8
%q=load i8*,i8**%h,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%a,%t]
%u=phi i8*[%p,%o],[%b,%t]
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%u,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%u,i64 32
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%g,align 8
%E=getelementptr inbounds i8,i8*%s,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%h,align 8
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%K(i8*inreg%M,i8*inreg%Q)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=bitcast i8**%c to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%U(i8*inreg%W,i8*inreg%Z)
store i8*%aa,i8**%d,align 8
%ab=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%ab,i8**%i,align 8
%ac=load i8*,i8**%h,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%j,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%k,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%l,align 8
%al=load i8*,i8**%e,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%k,align 8
%av=bitcast i8*%as to i64*
store i64 0,i64*%av,align 4
%aw=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%l,align 8
%aE=getelementptr inbounds i8,i8*%aB,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
%aG=bitcast i8*%aB to i32*
store i32 9,i32*%aG,align 4
%aH=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 16
%aL=bitcast i8*%aK to i32*
store i32 2,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 44)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177320,i32*%aO,align 4
store i8*%aM,i8**%k,align 8
%aP=getelementptr inbounds i8,i8*%aM,i64 4
%aQ=bitcast i8*%aP to i32*
store i32 0,i32*%aQ,align 1
%aR=bitcast i8*%aM to i32*
store i32 1,i32*%aR,align 4
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aW=getelementptr inbounds i8,i8*%aM,i64 16
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aZ=getelementptr inbounds i8,i8*%aM,i64 24
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%a2=getelementptr inbounds i8,i8*%aM,i64 32
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aM,i64 40
%a5=bitcast i8*%a4 to i32*
store i32 30,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%i,align 8
%a9=getelementptr inbounds i8,i8*%a6,i64 4
%ba=bitcast i8*%a9 to i32*
store i32 0,i32*%ba,align 1
%bb=bitcast i8*%a6 to i32*
store i32 1,i32*%bb,align 4
%bc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a6,i64 16
%bg=bitcast i8*%bf to i32*
store i32 2,i32*%bg,align 4
%bh=load i8*,i8**%h,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
%bl=call fastcc i8*@_SMLLN18ClosureConversion210tagToCcexpE_495(i8*inreg%bk)
%bm=getelementptr inbounds i8,i8*%bl,i64 16
%bn=bitcast i8*%bm to i8*(i8*,i8*)**
%bo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bn,align 8
%bp=bitcast i8*%bl to i8**
%bq=load i8*,i8**%bp,align 8
%br=load i8*,i8**%g,align 8
%bs=call fastcc i8*%bo(i8*inreg%bq,i8*inreg%br)
%bt=getelementptr inbounds i8,i8*%bs,i64 16
%bu=bitcast i8*%bt to i8*(i8*,i8*)**
%bv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bu,align 8
%bw=bitcast i8*%bs to i8**
%bx=load i8*,i8**%bw,align 8
%by=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bz=getelementptr inbounds i8,i8*%by,i64 24
%bA=bitcast i8*%bz to i8**
%bB=load i8*,i8**%bA,align 8
%bC=call fastcc i8*%bv(i8*inreg%bx,i8*inreg%bB)
store i8*%bC,i8**%c,align 8
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%d,align 8
%bG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%g,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177296,i32*%bP,align 4
store i8*%bN,i8**%j,align 8
%bQ=getelementptr inbounds i8,i8*%bN,i64 4
%bR=bitcast i8*%bQ to i32*
store i32 0,i32*%bR,align 1
%bS=bitcast i8*%bN to i32*
store i32 18,i32*%bS,align 4
%bT=load i8*,i8**%d,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bN,i64 16
%bX=bitcast i8*%bW to i32*
store i32 2,i32*%bX,align 4
%bY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bZ=getelementptr inbounds i8,i8*%bY,i64 16
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%d,align 8
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
store i8*%b2,i8**%f,align 8
%b5=getelementptr inbounds i8,i8*%b2,i64 4
%b6=bitcast i8*%b5 to i32*
store i32 0,i32*%b6,align 1
%b7=bitcast i8*%b2 to i32*
store i32 3,i32*%b7,align 4
%b8=load i8*,i8**%g,align 8
%b9=getelementptr inbounds i8,i8*%b2,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b2,i64 16
%cc=bitcast i8*%cb to i32*
store i32 2,i32*%cc,align 4
%cd=call i8*@sml_alloc(i32 inreg 20)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177296,i32*%cf,align 4
store i8*%cd,i8**%h,align 8
%cg=getelementptr inbounds i8,i8*%cd,i64 4
%ch=bitcast i8*%cg to i32*
store i32 0,i32*%ch,align 1
%ci=bitcast i8*%cd to i32*
store i32 9,i32*%ci,align 4
%cj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ck=getelementptr inbounds i8,i8*%cd,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cd,i64 16
%cn=bitcast i8*%cm to i32*
store i32 2,i32*%cn,align 4
%co=call i8*@sml_alloc(i32 inreg 28)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177304,i32*%cq,align 4
store i8*%co,i8**%f,align 8
%cr=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cs=bitcast i8*%co to i8**
store i8*%cr,i8**%cs,align 8
%ct=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cu=getelementptr inbounds i8,i8*%co,i64 8
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cx=getelementptr inbounds i8,i8*%co,i64 16
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%co,i64 24
%cA=bitcast i8*%cz to i32*
store i32 7,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
store i8*%cB,i8**%d,align 8
%cE=getelementptr inbounds i8,i8*%cB,i64 4
%cF=bitcast i8*%cE to i32*
store i32 0,i32*%cF,align 1
%cG=bitcast i8*%cB to i32*
store i32 3,i32*%cG,align 4
%cH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cI=getelementptr inbounds i8,i8*%cB,i64 8
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i32*
store i32 2,i32*%cL,align 4
%cM=call i8*@sml_alloc(i32 inreg 44)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177320,i32*%cO,align 4
%cP=load i8*,i8**%i,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=load i8*,i8**%e,align 8
%cS=getelementptr inbounds i8,i8*%cM,i64 8
%cT=bitcast i8*%cS to i8**
store i8*%cR,i8**%cT,align 8
%cU=load i8*,i8**%d,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 16
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=load i8*,i8**%c,align 8
%cY=getelementptr inbounds i8,i8*%cM,i64 24
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=load i8*,i8**%g,align 8
%c1=getelementptr inbounds i8,i8*%cM,i64 32
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cM,i64 40
%c4=bitcast i8*%c3 to i32*
store i32 31,i32*%c4,align 4
ret i8*%cM
}
define internal fastcc i8*@_SMLL10bitmapList_597(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%b to i32*
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=bitcast i8**%c to i32**
%p=load i32*,i32**%o,align 8
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%n],[%a,%l]
%t=phi i32*[%p,%n],[%m,%l]
%u=load i32,i32*%t,align 4
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%B(i8*inreg%D,i8*inreg%H)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%L(i8*inreg%N,i8*inreg%U)
store i8*%V,i8**%d,align 8
%W=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%W,i8**%f,align 8
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%g,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%h,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%i,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 4
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=bitcast i8*%ad to i32*
store i32%u,i32*%ai,align 4
%aj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
store i8*%ao,i8**%h,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 4
%as=bitcast i8*%ar to i32*
store i32 0,i32*%as,align 1
%at=bitcast i8*%ao to i32*
store i32 4,i32*%at,align 4
%au=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 16
%ay=bitcast i8*%ax to i32*
store i32 2,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%i,align 8
%aC=bitcast i8*%az to i64*
store i64 0,i64*%aC,align 4
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 44)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177320,i32*%aK,align 4
store i8*%aI,i8**%h,align 8
%aL=getelementptr inbounds i8,i8*%aI,i64 4
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
%aN=bitcast i8*%aI to i32*
store i32 1,i32*%aN,align 4
%aO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aI,i64 16
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aV=getelementptr inbounds i8,i8*%aI,i64 24
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aY=getelementptr inbounds i8,i8*%aI,i64 32
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aI,i64 40
%a1=bitcast i8*%a0 to i32*
store i32 30,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
store i8*%a2,i8**%i,align 8
%a5=getelementptr inbounds i8,i8*%a2,i64 4
%a6=bitcast i8*%a5 to i32*
store i32 0,i32*%a6,align 1
%a7=bitcast i8*%a2 to i32*
store i32 1,i32*%a7,align 4
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
%bd=load i8*,i8**%e,align 8
%be=getelementptr inbounds i8,i8*%bd,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
%bh=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%bg)
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
%br=call fastcc i8*%bk(i8*inreg%bm,i8*inreg%bq)
%bs=getelementptr inbounds i8,i8*%br,i64 16
%bt=bitcast i8*%bs to i8*(i8*,i8*)**
%bu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bt,align 8
%bv=bitcast i8*%br to i8**
%bw=load i8*,i8**%bv,align 8
%bx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%by=getelementptr inbounds i8,i8*%bx,i64 8
%bz=bitcast i8*%by to i8***
%bA=load i8**,i8***%bz,align 8
%bB=load i8*,i8**%bA,align 8
%bC=call fastcc i8*%bu(i8*inreg%bw,i8*inreg%bB)
store i8*%bC,i8**%c,align 8
%bD=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%bD,i8**%d,align 8
%bE=load i8*,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bE,i64 16
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%f,align 8
%bI=bitcast i8*%bE to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%e,align 8
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177296,i32*%bM,align 4
store i8*%bK,i8**%g,align 8
%bN=getelementptr inbounds i8,i8*%bK,i64 4
%bO=bitcast i8*%bN to i32*
store i32 0,i32*%bO,align 1
%bP=bitcast i8*%bK to i32*
store i32%u,i32*%bP,align 4
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 16
%bU=bitcast i8*%bT to i32*
store i32 2,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%e,align 8
%bY=getelementptr inbounds i8,i8*%bV,i64 4
%bZ=bitcast i8*%bY to i32*
store i32 0,i32*%bZ,align 1
%b0=bitcast i8*%bV to i32*
store i32 5,i32*%b0,align 4
%b1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 2,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 20)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177296,i32*%b8,align 4
store i8*%b6,i8**%g,align 8
%b9=bitcast i8*%b6 to i64*
store i64 0,i64*%b9,align 4
%ca=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to i8**
store i8*%ca,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to i32*
store i32 2,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 44)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177320,i32*%ch,align 4
store i8*%cf,i8**%e,align 8
%ci=getelementptr inbounds i8,i8*%cf,i64 4
%cj=bitcast i8*%ci to i32*
store i32 0,i32*%cj,align 1
%ck=bitcast i8*%cf to i32*
store i32 1,i32*%ck,align 4
%cl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cm=getelementptr inbounds i8,i8*%cf,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cp=getelementptr inbounds i8,i8*%cf,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cs=getelementptr inbounds i8,i8*%cf,i64 24
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cv=getelementptr inbounds i8,i8*%cf,i64 32
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cf,i64 40
%cy=bitcast i8*%cx to i32*
store i32 30,i32*%cy,align 4
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177296,i32*%cB,align 4
store i8*%cz,i8**%c,align 8
%cC=getelementptr inbounds i8,i8*%cz,i64 4
%cD=bitcast i8*%cC to i32*
store i32 0,i32*%cD,align 1
%cE=bitcast i8*%cz to i32*
store i32 1,i32*%cE,align 4
%cF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cG=getelementptr inbounds i8,i8*%cz,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 2,i32*%cJ,align 4
%cK=call i8*@sml_alloc(i32 inreg 20)#0
%cL=getelementptr inbounds i8,i8*%cK,i64 -4
%cM=bitcast i8*%cL to i32*
store i32 1342177296,i32*%cM,align 4
%cN=load i8*,i8**%c,align 8
%cO=bitcast i8*%cK to i8**
store i8*%cN,i8**%cO,align 8
%cP=load i8*,i8**%i,align 8
%cQ=getelementptr inbounds i8,i8*%cK,i64 8
%cR=bitcast i8*%cQ to i8**
store i8*%cP,i8**%cR,align 8
%cS=getelementptr inbounds i8,i8*%cK,i64 16
%cT=bitcast i8*%cS to i32*
store i32 3,i32*%cT,align 4
ret i8*%cK
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_598(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%e,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%o,label%q
o:
%p=bitcast i8*%a to i8***
br label%u
q:
call void@sml_check(i32 inreg%m)
%r=load i8*,i8**%e,align 8
%s=bitcast i8**%i to i8****
%t=load i8***,i8****%s,align 8
br label%u
u:
%v=phi i8***[%t,%q],[%p,%o]
%w=phi i8*[%r,%q],[%b,%o]
store i8*null,i8**%e,align 8
store i8*%w,i8**%g,align 8
%x=load i8**,i8***%v,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLFN12RecordLayout13computeRecordE(i8*inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%f,align 8
%L=bitcast i8**%i to i8***
%M=load i8**,i8***%L,align 8
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=bitcast i8**%M to i8*
%P=getelementptr inbounds i8*,i8**%M,i64 2
%Q=bitcast i8**%P to i32*
%R=load i32,i32*%Q,align 4
%S=getelementptr inbounds i8,i8*%O,i64 20
%T=bitcast i8*%S to i32*
%U=load i32,i32*%T,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%j,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32%R,i32*%ab,align 4
%ac=getelementptr inbounds i8,i8*%V,i64 12
%ad=bitcast i8*%ac to i32*
store i32%U,i32*%ad,align 4
%ae=getelementptr inbounds i8,i8*%V,i64 16
%af=bitcast i8*%ae to i32*
store i32 1,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
%aj=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_592 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_592 to void(...)*),void(...)**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 24
%aq=bitcast i8*%ap to i32*
store i32 -2147483647,i32*%aq,align 4
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=call fastcc i8*%I(i8*inreg%ar,i8*inreg%ag)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
%ay=load i8*,i8**%i,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=call fastcc i8*%av(i8*inreg%ax,i8*inreg%aB)
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=call fastcc i8*%C(i8*inreg%aD,i8*inreg%aC)
store i8*%aE,i8**%h,align 8
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%e,align 8
%aI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
store i8*%aN,i8**%f,align 8
%aO=load i8*,i8**%i,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i32*
%aR=load i32,i32*%aQ,align 4
%aS=getelementptr inbounds i8,i8*%aO,i64 20
%aT=bitcast i8*%aS to i32*
%aU=load i32,i32*%aT,align 4
%aV=getelementptr inbounds i8,i8*%aO,i64 24
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=bitcast i8*%aY to i32*
%a0=getelementptr inbounds i8,i8*%aY,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aY,i8**%j,align 8
store i32%aR,i32*%aZ,align 4
%a2=getelementptr inbounds i8,i8*%aY,i64 4
%a3=bitcast i8*%a2 to i32*
store i32%aU,i32*%a3,align 4
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i32*
store i32%aX,i32*%a5,align 4
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
%bb=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a8,i64 8
%be=bitcast i8*%bd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fieldList_593 to void(...)*),void(...)**%be,align 8
%bf=getelementptr inbounds i8,i8*%a8,i64 16
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fieldList_593 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 24
%bi=bitcast i8*%bh to i32*
store i32 -2147483647,i32*%bi,align 4
%bj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bk=call fastcc i8*%aL(i8*inreg%bj,i8*inreg%a8)
%bl=getelementptr inbounds i8,i8*%bk,i64 16
%bm=bitcast i8*%bl to i8*(i8*,i8*)**
%bn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bm,align 8
%bo=bitcast i8*%bk to i8**
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%l,align 8
%bq=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bq to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%k,align 8
%bw=call fastcc i8*@_SMLFN8ListPair5zipEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bx=getelementptr inbounds i8,i8*%bw,i64 16
%by=bitcast i8*%bx to i8*(i8*,i8*)**
%bz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%by,align 8
%bA=bitcast i8*%bw to i8**
%bB=load i8*,i8**%bA,align 8
store i8*%bB,i8**%j,align 8
%bC=load i8*,i8**%i,align 8
%bD=getelementptr inbounds i8,i8*%bC,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
store i8*%bF,i8**%f,align 8
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bG,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
%bQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bR=call fastcc i8*%bz(i8*inreg%bQ,i8*inreg%bG)
%bS=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bT=call fastcc i8*%bt(i8*inreg%bS,i8*inreg%bR)
%bU=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bV=call fastcc i8*%bn(i8*inreg%bU,i8*inreg%bT)
store i8*%bV,i8**%e,align 8
%bW=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=call fastcc i8*%bZ(i8*inreg%b1,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@S,i64 0,i32 2)to i8*))
%b3=getelementptr inbounds i8,i8*%b2,i64 16
%b4=bitcast i8*%b3 to i8*(i8*,i8*)**
%b5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b4,align 8
%b6=bitcast i8*%b2 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%f,align 8
%b8=call fastcc i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg 1,i32 inreg 8)
%b9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ca=call fastcc i8*%b5(i8*inreg%b9,i8*inreg%b8)
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8*(i8*,i8*)**
%cd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cc,align 8
%ce=bitcast i8*%ca to i8**
%cf=load i8*,i8**%ce,align 8
%cg=load i8*,i8**%e,align 8
%ch=call fastcc i8*%cd(i8*inreg%cf,i8*inreg%cg)
store i8*%ch,i8**%f,align 8
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%k,align 8
%cl=getelementptr inbounds i8,i8*%ci,i64 4
%cm=bitcast i8*%cl to i32*
store i32 0,i32*%cm,align 1
%cn=bitcast i8*%ci to i32*
store i32 8,i32*%cn,align 4
%co=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cp=getelementptr inbounds i8,i8*%ci,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ci,i64 16
%cs=bitcast i8*%cr to i32*
store i32 2,i32*%cs,align 4
%ct=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cu=getelementptr inbounds i8,i8*%ct,i64 16
%cv=bitcast i8*%cu to i8*(i8*,i8*)**
%cw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cv,align 8
%cx=bitcast i8*%ct to i8**
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%j,align 8
%cz=load i8**,i8***%L,align 8
%cA=load i8*,i8**%cz,align 8
store i8*%cA,i8**%f,align 8
%cB=call i8*@sml_alloc(i32 inreg 28)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177304,i32*%cD,align 4
store i8*%cB,i8**%l,align 8
%cE=load i8*,i8**%k,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=load i8*,i8**%g,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cB,i64 24
%cN=bitcast i8*%cM to i32*
store i32 7,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 28)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177304,i32*%cQ,align 4
%cR=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cO,i64 8
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fieldList_596 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 16
%cW=bitcast i8*%cV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9fieldList_596 to void(...)*),void(...)**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cO,i64 24
%cY=bitcast i8*%cX to i32*
store i32 -2147483647,i32*%cY,align 4
%cZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%c0=call fastcc i8*%cw(i8*inreg%cZ,i8*inreg%cO)
%c1=getelementptr inbounds i8,i8*%c0,i64 16
%c2=bitcast i8*%c1 to i8*(i8*,i8*)**
%c3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c2,align 8
%c4=bitcast i8*%c0 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c7=call fastcc i8*%c3(i8*inreg%c5,i8*inreg%c6)
store i8*%c7,i8**%e,align 8
%c8=load i8**,i8***%L,align 8
%c9=load i8*,i8**%c8,align 8
store i8*%c9,i8**%f,align 8
%da=call i8*@sml_alloc(i32 inreg 28)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177304,i32*%dc,align 4
store i8*%da,i8**%j,align 8
%dd=load i8*,i8**%k,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dg=getelementptr inbounds i8,i8*%da,i64 8
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=load i8*,i8**%g,align 8
%dj=getelementptr inbounds i8,i8*%da,i64 16
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%da,i64 24
%dm=bitcast i8*%dl to i32*
store i32 7,i32*%dm,align 4
%dn=call i8*@sml_alloc(i32 inreg 28)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177304,i32*%dp,align 4
%dq=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dn,i64 8
%dt=bitcast i8*%ds to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10bitmapList_597 to void(...)*),void(...)**%dt,align 8
%du=getelementptr inbounds i8,i8*%dn,i64 16
%dv=bitcast i8*%du to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10bitmapList_597 to void(...)*),void(...)**%dv,align 8
%dw=getelementptr inbounds i8,i8*%dn,i64 24
%dx=bitcast i8*%dw to i32*
store i32 -2147483647,i32*%dx,align 4
%dy=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dy)
%dz=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dz)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%dn,i8**%c,align 8
%dA=call i8*@sml_alloc(i32 inreg 12)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177288,i32*%dC,align 4
store i8*%dA,i8**%d,align 8
%dD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dA,i64 8
%dG=bitcast i8*%dF to i32*
store i32 1,i32*%dG,align 4
%dH=call i8*@sml_alloc(i32 inreg 28)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177304,i32*%dJ,align 4
%dK=load i8*,i8**%d,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=getelementptr inbounds i8,i8*%dH,i64 8
%dN=bitcast i8*%dM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion24mapiE_406 to void(...)*),void(...)**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dH,i64 16
%dP=bitcast i8*%dO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion24mapiE_406 to void(...)*),void(...)**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dH,i64 24
%dR=bitcast i8*%dQ to i32*
store i32 -2147483647,i32*%dR,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dy)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dz)
%dS=load i8*,i8**%h,align 8
%dT=getelementptr inbounds i8,i8*%dS,i64 8
%dU=bitcast i8*%dT to i8**
%dV=load i8*,i8**%dU,align 8
%dW=call fastcc i8*@_SMLLN18ClosureConversion24mapiE_406(i8*inreg%dK,i8*inreg%dV)
store i8*%dW,i8**%f,align 8
%dX=load i8**,i8***%L,align 8
store i8*null,i8**%i,align 8
%dY=load i8*,i8**%dX,align 8
%dZ=call fastcc i8*@_SMLLN18ClosureConversion27toCcexpE_564(i8*inreg%dY)
%d0=getelementptr inbounds i8,i8*%dZ,i64 16
%d1=bitcast i8*%d0 to i8*(i8*,i8*)**
%d2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d1,align 8
%d3=bitcast i8*%dZ to i8**
%d4=load i8*,i8**%d3,align 8
%d5=load i8*,i8**%g,align 8
%d6=call fastcc i8*%d2(i8*inreg%d4,i8*inreg%d5)
%d7=getelementptr inbounds i8,i8*%d6,i64 16
%d8=bitcast i8*%d7 to i8*(i8*,i8*)**
%d9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d8,align 8
%ea=bitcast i8*%d6 to i8**
%eb=load i8*,i8**%ea,align 8
%ec=bitcast i8**%h to i8***
%ed=load i8**,i8***%ec,align 8
store i8*null,i8**%h,align 8
%ee=load i8*,i8**%ed,align 8
%ef=call fastcc i8*%d9(i8*inreg%eb,i8*inreg%ee)
store i8*%ef,i8**%h,align 8
%eg=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%eg,i8**%i,align 8
%eh=call i8*@sml_alloc(i32 inreg 20)#0
%ei=getelementptr inbounds i8,i8*%eh,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 1342177296,i32*%ej,align 4
store i8*%eh,i8**%j,align 8
%ek=getelementptr inbounds i8,i8*%eh,i64 4
%el=bitcast i8*%ek to i32*
store i32 0,i32*%el,align 1
%em=bitcast i8*%eh to i32*
store i32 6,i32*%em,align 4
%en=load i8*,i8**%k,align 8
%eo=getelementptr inbounds i8,i8*%eh,i64 8
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=getelementptr inbounds i8,i8*%eh,i64 16
%er=bitcast i8*%eq to i32*
store i32 2,i32*%er,align 4
%es=call i8*@sml_alloc(i32 inreg 20)#0
%et=getelementptr inbounds i8,i8*%es,i64 -4
%eu=bitcast i8*%et to i32*
store i32 1342177296,i32*%eu,align 4
store i8*%es,i8**%l,align 8
%ev=bitcast i8*%es to i64*
store i64 0,i64*%ev,align 4
%ew=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ex=getelementptr inbounds i8,i8*%es,i64 8
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%es,i64 16
%eA=bitcast i8*%ez to i32*
store i32 2,i32*%eA,align 4
%eB=call i8*@sml_alloc(i32 inreg 44)#0
%eC=getelementptr inbounds i8,i8*%eB,i64 -4
%eD=bitcast i8*%eC to i32*
store i32 1342177320,i32*%eD,align 4
store i8*%eB,i8**%j,align 8
%eE=getelementptr inbounds i8,i8*%eB,i64 4
%eF=bitcast i8*%eE to i32*
store i32 0,i32*%eF,align 1
%eG=bitcast i8*%eB to i32*
store i32 1,i32*%eG,align 4
%eH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eI=getelementptr inbounds i8,i8*%eB,i64 8
%eJ=bitcast i8*%eI to i8**
store i8*%eH,i8**%eJ,align 8
%eK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eL=getelementptr inbounds i8,i8*%eB,i64 16
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eO=getelementptr inbounds i8,i8*%eB,i64 24
%eP=bitcast i8*%eO to i8**
store i8*%eN,i8**%eP,align 8
%eQ=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%eR=getelementptr inbounds i8,i8*%eB,i64 32
%eS=bitcast i8*%eR to i8**
store i8*%eQ,i8**%eS,align 8
%eT=getelementptr inbounds i8,i8*%eB,i64 40
%eU=bitcast i8*%eT to i32*
store i32 30,i32*%eU,align 4
%eV=call i8*@sml_alloc(i32 inreg 20)#0
%eW=getelementptr inbounds i8,i8*%eV,i64 -4
%eX=bitcast i8*%eW to i32*
store i32 1342177296,i32*%eX,align 4
store i8*%eV,i8**%g,align 8
%eY=getelementptr inbounds i8,i8*%eV,i64 4
%eZ=bitcast i8*%eY to i32*
store i32 0,i32*%eZ,align 1
%e0=bitcast i8*%eV to i32*
store i32 1,i32*%e0,align 4
%e1=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%e2=getelementptr inbounds i8,i8*%eV,i64 8
%e3=bitcast i8*%e2 to i8**
store i8*%e1,i8**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eV,i64 16
%e5=bitcast i8*%e4 to i32*
store i32 2,i32*%e5,align 4
%e6=call i8*@sml_alloc(i32 inreg 36)#0
%e7=getelementptr inbounds i8,i8*%e6,i64 -4
%e8=bitcast i8*%e7 to i32*
store i32 1342177312,i32*%e8,align 4
%e9=load i8*,i8**%g,align 8
%fa=bitcast i8*%e6 to i8**
store i8*%e9,i8**%fa,align 8
%fb=load i8*,i8**%f,align 8
%fc=getelementptr inbounds i8,i8*%e6,i64 8
%fd=bitcast i8*%fc to i8**
store i8*%fb,i8**%fd,align 8
%fe=load i8*,i8**%e,align 8
%ff=getelementptr inbounds i8,i8*%e6,i64 16
%fg=bitcast i8*%ff to i8**
store i8*%fe,i8**%fg,align 8
%fh=load i8*,i8**%k,align 8
%fi=getelementptr inbounds i8,i8*%e6,i64 24
%fj=bitcast i8*%fi to i8**
store i8*%fh,i8**%fj,align 8
%fk=getelementptr inbounds i8,i8*%e6,i64 32
%fl=bitcast i8*%fk to i32*
store i32 15,i32*%fl,align 4
ret i8*%e6
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_599(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i32*
%j=load i32,i32*%i,align 4
%k=getelementptr inbounds i8,i8*%a,i64 12
%l=bitcast i8*%k to i32*
%m=load i32,i32*%l,align 4
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=call i8*@sml_alloc(i32 inreg 36)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177312,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32%j,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%q,i64 20
%B=bitcast i8*%A to i32*
store i32%m,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%q,i64 24
%D=bitcast i8*%C to i32*
store i32%p,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%q,i64 32
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%e,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_598 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_598 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_600(i8*inreg%a,i32 inreg%b,i32 inreg%c,i32 inreg%d)#4 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%e,align 8
%i=call i8*@sml_alloc(i32 inreg 28)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177304,i32*%k,align 4
store i8*%i,i8**%f,align 8
%l=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i32*
store i32%b,i32*%o,align 4
%p=getelementptr inbounds i8,i8*%i,i64 12
%q=bitcast i8*%p to i32*
store i32%c,i32*%q,align 4
%r=getelementptr inbounds i8,i8*%i,i64 16
%s=bitcast i8*%r to i32*
store i32%d,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%i,i64 24
%u=bitcast i8*%t to i32*
store i32 1,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 28)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177304,i32*%x,align 4
%y=load i8*,i8**%f,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_599 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_599 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 24
%F=bitcast i8*%E to i32*
store i32 -2147483647,i32*%F,align 4
ret i8*%v
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_601(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i32,i32,i32)*@_SMLLN18ClosureConversion218computeTupleLayoutE_600 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN18ClosureConversion218computeTupleLayoutE_890 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL12recordFields_607(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
%h=bitcast i8*%a to i8***
%i=load i8**,i8***%h,align 8
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%b,align 8
%k=getelementptr inbounds i8,i8*%a,i64 8
%l=bitcast i8*%k to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=getelementptr inbounds i8*,i8**%m,i64 1
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%m,i64 2
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=getelementptr inbounds i8*,i8**%m,i64 3
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%f,align 8
%u=getelementptr inbounds i8*,i8**%m,i64 4
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%g,align 8
%w=call i8*@sml_alloc(i32 inreg 52)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177328,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%e,align 8
%I=getelementptr inbounds i8,i8*%w,i64 24
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=load i8*,i8**%f,align 8
%L=getelementptr inbounds i8,i8*%w,i64 32
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%g,align 8
%O=getelementptr inbounds i8,i8*%w,i64 40
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%w,i64 48
%R=bitcast i8*%Q to i32*
store i32 63,i32*%R,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN18ClosureConversion29makeTupleE_609(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=load i8*,i8**%c,align 8
%p=bitcast i8**%h to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8**[%q,%n],[%m,%l]
%t=phi i8*[%o,%n],[%b,%l]
store i8*null,i8**%c,align 8
store i8*%t,i8**%g,align 8
%u=load i8*,i8**%s,align 8
%v=call fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_601(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*,i8*,i8*)**
%y=load i8*(i8*,i8*,i8*,i8*)*,i8*(i8*,i8*,i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 4)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 4,i32*%E,align 4
store i8*%B,i8**%d,align 8
store i32 8,i32*%C,align 4
%F=call i8*@sml_alloc(i32 inreg 4)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 4,i32*%I,align 4
store i8*%F,i8**%e,align 8
store i32 16,i32*%G,align 4
%J=call i8*@sml_alloc(i32 inreg 4)#0
%K=bitcast i8*%J to i32*
%L=getelementptr inbounds i8,i8*%J,i64 -4
%M=bitcast i8*%L to i32*
store i32 4,i32*%M,align 4
store i32 24,i32*%K,align 4
%N=load i8*,i8**%c,align 8
%O=load i8*,i8**%d,align 8
%P=load i8*,i8**%e,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%Q=call fastcc i8*%y(i8*inreg%N,i8*inreg%O,i8*inreg%P,i8*inreg%J)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%h,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%T(i8*inreg%V,i8*inreg%Z)
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
%ag=load i8*,i8**%g,align 8
%ah=call fastcc i8*%ad(i8*inreg%af,i8*inreg%ag)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ah,i64 24
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%d,align 8
%ao=bitcast i8*%ah to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%f,align 8
%at=call fastcc i8*@_SMLFN8ListPair5mapEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%aw(i8*inreg%ay,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@T,i64 0,i32 2)to i8*))
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%i,align 8
%aF=load i8*,i8**%h,align 8
%aG=getelementptr inbounds i8,i8*%aF,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%h,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
%aM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aU=call fastcc i8*%aC(i8*inreg%aT,i8*inreg%aJ)
store i8*%aU,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 60)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177336,i32*%aX,align 4
%aY=getelementptr inbounds i8,i8*%aV,i64 20
call void@llvm.memset.p0i8.i32(i8*%aY,i8 0,i32 20,i1 false)
%aZ=load i8*,i8**%e,align 8
%a0=bitcast i8*%aV to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 0,i32*%a5,align 4
%a6=load i8*,i8**%c,align 8
%a7=getelementptr inbounds i8,i8*%aV,i64 24
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aV,i64 32
%ba=bitcast i8*%a9 to i32*
store i32 0,i32*%ba,align 4
%bb=load i8*,i8**%g,align 8
%bc=getelementptr inbounds i8,i8*%aV,i64 40
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=load i8*,i8**%d,align 8
%bf=getelementptr inbounds i8,i8*%aV,i64 48
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%aV,i64 56
%bi=bitcast i8*%bh to i32*
store i32 107,i32*%bi,align 4
ret i8*%aV
}
define internal fastcc i8*@_SMLLN18ClosureConversion29makeTupleE_610(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29makeTupleE_609 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29makeTupleE_609 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion29makeTupleE_611(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29makeTupleE_610 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion29makeTupleE_610 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion27fvValueE_614(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%b to i32*
%i=bitcast i8**%c to i32**
br label%o
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%c to i32**
%l=load i32*,i32**%k,align 8
%m=load i8*,i8**%d,align 8
%n=bitcast i32*%l to i8*
br label%o
o:
%p=phi i32**[%i,%g],[%k,%j]
%q=phi i8*[%b,%g],[%n,%j]
%r=phi i8*[%a,%g],[%m,%j]
%s=phi i32*[%h,%g],[%l,%j]
%t=getelementptr inbounds i8,i8*%r,i64 4
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=add i32%v,3
%x=sub i32 0,%v
%y=and i32%w,%x
%z=load i32,i32*%s,align 4
switch i32%z,label%A[
i32 1,label%ag
i32 0,label%S
]
A:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%B=load i8*,i8**@_SMLZ5Match,align 8
store i8*%B,i8**%c,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%d,align 8
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[86x i8]}>,<{[4x i8],i32,[86x i8]}>*@U,i64 0,i32 2,i64 0),i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 60)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177336,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 56
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
call void@sml_raise(i8*inreg%L)#1
unreachable
S:
%T=bitcast i8*%r to i32*
%U=load i32,i32*%T,align 4
%V=icmp eq i32%U,0
br i1%V,label%W,label%ae
W:
store i8*null,i8**%d,align 8
%X=load i32,i32*%u,align 4
%Y=call i8*@sml_alloc(i32 inreg%X)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32%X,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=sext i32%y to i64
%ad=getelementptr inbounds i8,i8*%ab,i64%ac
call void@llvm.memcpy.p0i8.p0i8.i32(i8*%Y,i8*%ad,i32%X,i1 false)
br label%ae
ae:
%af=tail call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
ret i8*%af
ag:
store i8*null,i8**%d,align 8
%ah=getelementptr inbounds i8,i8*%q,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%c,align 8
%ak=call fastcc i8*@_SMLFN5VarID3Map9singletonE(i32 inreg 1,i32 inreg 8)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%d,align 8
%aq=load i32*,i32**%p,align 8
%ar=load i32,i32*%aq,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=bitcast i8*%as to i32*
%au=getelementptr inbounds i8,i8*%as,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=getelementptr inbounds i8,i8*%as,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
store i32%ar,i32*%at,align 4
%ay=load i8*,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 16
%aC=bitcast i8*%aB to i32*
store i32 2,i32*%aC,align 4
%aD=load i8*,i8**%d,align 8
%aE=tail call fastcc i8*%an(i8*inreg%aD,i8*inreg%as)
ret i8*%aE
}
define internal fastcc i8*@_SMLLN18ClosureConversion27fvValueE_615(i32 inreg%a,i32 inreg%b)unnamed_addr#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%d,i8**%c,align 8
store i32%a,i32*%e,align 4
%h=getelementptr inbounds i8,i8*%d,i64 4
%i=bitcast i8*%h to i32*
store i32%b,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%d,i64 8
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
%o=load i8*,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27fvValueE_614 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion27fvValueE_614 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN18ClosureConversion211tagSizeVarsE_617(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=call fastcc i8*@_SMLLN18ClosureConversion27fvValueE_615(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%b to i8****
%v=load i8***,i8****%u,align 8
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%r(i8*inreg%t,i8*inreg%x)
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%z)
store i8*%J,i8**%c,align 8
%K=call fastcc i8*@_SMLLN18ClosureConversion27fvValueE_615(i32 inreg 0,i32 inreg 4)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=bitcast i8**%b to i8***
%R=load i8**,i8***%Q,align 8
store i8*null,i8**%b,align 8
%S=load i8*,i8**%R,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%N(i8*inreg%P,i8*inreg%V)
store i8*%W,i8**%b,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%c,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%b,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%X)
ret i8*%ah
}
define internal fastcc i8*@_SMLL6fields_624(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%f to i8***
br label%o
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8***[%k,%i],[%m,%l]
%q=phi i8**[%j,%i],[%n,%l]
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLFN15SingletonTyEnv27findTagE(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%v(i8*inreg%x,i8*inreg%B)
store i8*%C,i8**%d,align 8
%D=load i8**,i8***%p,align 8
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*@_SMLFN15SingletonTyEnv28findSizeE(i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%I(i8*inreg%K,i8*inreg%O)
store i8*%P,i8**%e,align 8
%Q=load i8**,i8***%p,align 8
store i8*null,i8**%f,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*@_SMLFN15SingletonTyEnv213unalignedSizeE(i8*inreg%R)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*%V(i8*inreg%X,i8*inreg%ab)
store i8*%ac,i8**%f,align 8
%ad=call i8*@sml_alloc(i32 inreg 36)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177312,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ad,i64 24
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ad,i64 32
%as=bitcast i8*%ar to i32*
store i32 15,i32*%as,align 4
ret i8*%ad
}
define internal fastcc i32@_SMLLN18ClosureConversion210sortFieldsE_626(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%b to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg%p)
%r=load i8*,i8**%b,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i32@_SMLFN12RuntimeTypes7getSizeE(i8*inreg%x)
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i32%q,i32*%A,align 4
%D=getelementptr inbounds i8,i8*%z,i64 4
%E=bitcast i8*%D to i32*
store i32%y,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 4
%H=call fastcc i32@_SMLFN5Int327compareE(i8*inreg%z)
switch i32%H,label%I[
i32 0,label%ad
i32 1,label%ac
i32 2,label%aa
]
I:
call void@sml_matchcomp_bug()
%J=load i8*,i8**@_SMLZ5Match,align 8
store i8*%J,i8**%b,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%c,align 8
%N=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@W,i64 0,i32 2,i64 0),i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 60)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177336,i32*%V,align 4
%W=getelementptr inbounds i8,i8*%T,i64 56
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
%Z=bitcast i8*%T to i8**
store i8*%Y,i8**%Z,align 8
call void@sml_raise(i8*inreg%T)#1
unreachable
aa:
%ab=phi i32[1,%k],[2,%ac]
ret i32%ab
ac:
br label%aa
ad:
%ae=load i8*,i8**%b,align 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=getelementptr inbounds i8,i8*%ag,i64 24
%ai=bitcast i8*%ah to i32**
%aj=load i32*,i32**%ai,align 8
%ak=load i32,i32*%aj,align 4
store i8*null,i8**%b,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 24
%ap=bitcast i8*%ao to i32**
%aq=load i32*,i32**%ap,align 8
%ar=load i32,i32*%aq,align 4
%as=call i8*@sml_alloc(i32 inreg 12)#0
%at=bitcast i8*%as to i32*
%au=getelementptr inbounds i8,i8*%as,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177288,i32*%av,align 4
store i32%ak,i32*%at,align 4
%aw=getelementptr inbounds i8,i8*%as,i64 4
%ax=bitcast i8*%aw to i32*
store i32%ar,i32*%ax,align 4
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i32*
store i32 0,i32*%az,align 4
%aA=tail call fastcc i32@_SMLFN5VarID7compareE(i8*inreg%as)
ret i32%aA
}
define internal fastcc i8*@_SMLL11tupleFields_630(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
%i=getelementptr inbounds i8,i8*%b,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%b,i64 16
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%b,i64 24
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%f,align 8
%u=bitcast i8*%a to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%g,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%h,align 8
%z=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%G,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
%L=bitcast i8*%G to i32*
store i32 18,i32*%L,align 4
%M=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 36)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177312,i32*%T,align 4
%U=load i8*,i8**%e,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=load i8*,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=load i8*,i8**%f,align 8
%ad=getelementptr inbounds i8,i8*%R,i64 24
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%R,i64 32
%ag=bitcast i8*%af to i32*
store i32 15,i32*%ag,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLL15envRecordFields_631(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%e to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%v,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%g,align 8
%B=getelementptr inbounds i8,i8*%v,i64 16
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%h,align 8
store i8*null,i8**%e,align 8
%E=load i8*,i8**%r,align 8
%F=call fastcc i8*@_SMLLN18ClosureConversion211sizeToCcexpE_490(i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=bitcast i8**%c to i8***
%M=load i8**,i8***%L,align 8
%N=load i8*,i8**%M,align 8
%O=getelementptr inbounds i8,i8*%N,i64 24
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%I(i8*inreg%K,i8*inreg%T)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=bitcast i8**%c to i8****
%ab=load i8***,i8****%aa,align 8
store i8*null,i8**%c,align 8
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
%ae=call fastcc i8*%X(i8*inreg%Z,i8*inreg%ad)
store i8*%ae,i8**%c,align 8
%af=load i8*,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 32
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=getelementptr inbounds i8,i8*%af,i64 40
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%d,align 8
%am=call i8*@sml_alloc(i32 inreg 52)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177328,i32*%ao,align 4
%ap=load i8*,i8**%f,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%g,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=load i8*,i8**%h,align 8
%av=getelementptr inbounds i8,i8*%am,i64 16
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=load i8*,i8**%c,align 8
%ay=getelementptr inbounds i8,i8*%am,i64 24
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=load i8*,i8**%e,align 8
%aB=getelementptr inbounds i8,i8*%am,i64 32
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=load i8*,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%am,i64 40
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%am,i64 48
%aH=bitcast i8*%aG to i32*
store i32 63,i32*%aH,align 4
ret i8*%am
}
define internal fastcc i8*@_SMLL9selectMap_634(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%b,%r]
%s=bitcast i8*%q to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 24
%v=bitcast i8*%u to i32**
%w=load i32*,i32**%v,align 8
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%q,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=getelementptr inbounds i8,i8*%A,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%g,align 8
%H=getelementptr inbounds i8,i8*%A,i64 40
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%h,align 8
%K=getelementptr inbounds i8,i8*%q,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%i,align 8
%N=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%k,align 8
%T=load i8*,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLN18ClosureConversion211sizeToCcexpE_490(i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%h,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=bitcast i8**%c to i8****
%al=load i8***,i8****%ak,align 8
%am=load i8**,i8***%al,align 8
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%an)
store i8*%ao,i8**%d,align 8
%ap=load i8*,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*@_SMLLN18ClosureConversion210tagToCcexpE_495(i8*inreg%as)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**%h,align 8
%aA=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%az)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
%aG=bitcast i8**%c to i8***
%aH=load i8**,i8***%aG,align 8
store i8*null,i8**%c,align 8
%aI=load i8*,i8**%aH,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=call fastcc i8*%aD(i8*inreg%aF,i8*inreg%aL)
store i8*%aM,i8**%c,align 8
%aN=bitcast i8**%e to i8***
%aO=load i8**,i8***%aN,align 8
store i8*null,i8**%e,align 8
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%j,align 8
%aQ=call i8*@sml_alloc(i32 inreg 52)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177328,i32*%aS,align 4
store i8*%aQ,i8**%e,align 8
%aT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 16
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=getelementptr inbounds i8,i8*%aQ,i64 24
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a5=getelementptr inbounds i8,i8*%aQ,i64 32
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a8=getelementptr inbounds i8,i8*%aQ,i64 40
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%aQ,i64 48
%bb=bitcast i8*%ba to i32*
store i32 63,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
%bf=getelementptr inbounds i8,i8*%bc,i64 12
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
%bh=load i8*,i8**%i,align 8
%bi=bitcast i8*%bc to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 8
%bk=bitcast i8*%bj to i32*
store i32%x,i32*%bk,align 4
%bl=load i8*,i8**%e,align 8
%bm=getelementptr inbounds i8,i8*%bc,i64 16
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bc,i64 24
%bp=bitcast i8*%bo to i32*
store i32 5,i32*%bp,align 4
%bq=load i8*,i8**%k,align 8
%br=tail call fastcc i8*%Q(i8*inreg%bq,i8*inreg%bc)
ret i8*%br
}
define internal fastcc i8*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_635(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
A:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%a,i8**%l,align 8
store i8*%b,i8**%j,align 8
%t=load atomic i32,i32*@sml_check_flag unordered,align 4
%u=icmp eq i32%t,0
br i1%u,label%y,label%v
v:
call void@sml_check(i32 inreg%t)
%w=load i8*,i8**%j,align 8
%x=load i8*,i8**%l,align 8
br label%y
y:
%z=phi i8*[%x,%v],[%a,%A]
%B=phi i8*[%w,%v],[%b,%A]
store i8*null,i8**%j,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%n,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8*%B to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%K)
%L=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%L)
%M=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%M)
%N=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%N)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
%O=bitcast i8**%d to i8*
%P=bitcast i8**%e to i8*
br label%Q
Q:
%R=phi i8*[%H,%y],[%bE,%bs]
%S=phi i8*[%J,%y],[%bD,%bs]
store i8*%R,i8**%f,align 8
store i8*%S,i8**%i,align 8
%T=load atomic i32,i32*@sml_check_flag unordered,align 4
%U=icmp eq i32%T,0
br i1%U,label%X,label%V
V:
call void@sml_check(i32 inreg%T)
%W=load i8*,i8**%f,align 8
br label%X
X:
%Y=phi i8*[%W,%V],[%R,%Q]
store i8*null,i8**%f,align 8
store i8*%Y,i8**%h,align 8
%Z=call fastcc i8*@_SMLFN5VarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%f,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
store i8*%af,i8**%g,align 8
%ai=load i8*,i8**%h,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_624 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_624 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ay=call fastcc i8*%ac(i8*inreg%ax,i8*inreg%am)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%i,align 8
%aF=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%f,align 8
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P)
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%aF,i8**%d,align 8
%aG=load atomic i32,i32*@sml_check_flag unordered,align 4
%aH=icmp eq i32%aG,0
br i1%aH,label%aJ,label%aI
aI:
call void@sml_check(i32 inreg%aG)
br label%aJ
aJ:
%aK=call fastcc i8*@_SMLFN5VarID3Map5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8*(i8*,i8*)**
%aN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aM,align 8
%aO=bitcast i8*%aK to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=call fastcc i8*%aN(i8*inreg%aP,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@V,i64 0,i32 2)to i8*))
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%e,align 8
%aW=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=call fastcc i8*%aT(i8*inreg%aX,i8*inreg%aW)
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=load i8*,i8**%d,align 8
%a5=call fastcc i8*%a1(i8*inreg%a3,i8*inreg%a4)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
store i8*%a5,i8**%g,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%i,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call fastcc i8*@_SMLLN18ClosureConversion28minusSetE_429(i8*inreg%a6)
store i8*%bg,i8**%g,align 8
%bh=call fastcc i8*@_SMLFN5VarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
%bn=load i8*,i8**%g,align 8
%bo=call fastcc i8*%bk(i8*inreg%bm,i8*inreg%bn)
%bp=bitcast i8*%bo to i32*
%bq=load i32,i32*%bp,align 4
%br=icmp eq i32%bq,0
br i1%br,label%bs,label%bF
bs:
store i8*null,i8**%f,align 8
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
%bw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bt,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%bt)
%bE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
br label%Q
bF:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
%bG=call fastcc i8*@_SMLFN5VarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%bH=getelementptr inbounds i8,i8*%bG,i64 16
%bI=bitcast i8*%bH to i8*(i8*,i8*)**
%bJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bI,align 8
%bK=bitcast i8*%bG to i8**
%bL=load i8*,i8**%bK,align 8
%bM=load i8*,i8**%f,align 8
%bN=call fastcc i8*%bJ(i8*inreg%bL,i8*inreg%bM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%L)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
%bO=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bO)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%bN,i8**%c,align 8
%bP=load atomic i32,i32*@sml_check_flag unordered,align 4
%bQ=icmp eq i32%bP,0
br i1%bQ,label%bS,label%bR
bR:
call void@sml_check(i32 inreg%bP)
br label%bS
bS:
%bT=call fastcc i8*@_SMLFN10ListSorter4sortE(i32 inreg 1,i32 inreg 8)
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8*(i8*,i8*)**
%bW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bV,align 8
%bX=bitcast i8*%bT to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=call fastcc i8*%bW(i8*inreg%bY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@X,i64 0,i32 2)to i8*))
%b0=getelementptr inbounds i8,i8*%bZ,i64 16
%b1=bitcast i8*%b0 to i8*(i8*,i8*)**
%b2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b1,align 8
%b3=bitcast i8*%bZ to i8**
%b4=load i8*,i8**%b3,align 8
%b5=load i8*,i8**%c,align 8
%b6=call fastcc i8*%b2(i8*inreg%b4,i8*inreg%b5)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bO)
store i8*%b6,i8**%j,align 8
%b7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b8=getelementptr inbounds i8,i8*%b7,i64 16
%b9=bitcast i8*%b8 to i8*(i8*,i8*)**
%ca=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b9,align 8
%cb=bitcast i8*%b7 to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%k,align 8
%cd=call i8*@sml_alloc(i32 inreg 12)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177288,i32*%cf,align 4
store i8*%cd,i8**%m,align 8
%cg=load i8*,i8**%n,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%cd,i64 8
%cj=bitcast i8*%ci to i32*
store i32 1,i32*%cj,align 4
%ck=call i8*@sml_alloc(i32 inreg 28)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177304,i32*%cm,align 4
%cn=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ck,i64 8
%cq=bitcast i8*%cp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11tupleFields_630 to void(...)*),void(...)**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ck,i64 16
%cs=bitcast i8*%cr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11tupleFields_630 to void(...)*),void(...)**%cs,align 8
%ct=getelementptr inbounds i8,i8*%ck,i64 24
%cu=bitcast i8*%ct to i32*
store i32 -2147483647,i32*%cu,align 4
%cv=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cw=call fastcc i8*%ca(i8*inreg%cv,i8*inreg%ck)
%cx=getelementptr inbounds i8,i8*%cw,i64 16
%cy=bitcast i8*%cx to i8*(i8*,i8*)**
%cz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cy,align 8
%cA=bitcast i8*%cw to i8**
%cB=load i8*,i8**%cA,align 8
%cC=load i8*,i8**%j,align 8
%cD=call fastcc i8*%cz(i8*inreg%cB,i8*inreg%cC)
store i8*%cD,i8**%k,align 8
%cE=bitcast i8**%l to i8***
%cF=load i8**,i8***%cE,align 8
store i8*null,i8**%l,align 8
%cG=load i8*,i8**%cF,align 8
%cH=call fastcc i8*@_SMLLN18ClosureConversion29makeTupleE_611(i8*inreg%cG)
%cI=getelementptr inbounds i8,i8*%cH,i64 16
%cJ=bitcast i8*%cI to i8*(i8*,i8*)**
%cK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cJ,align 8
%cL=bitcast i8*%cH to i8**
%cM=load i8*,i8**%cL,align 8
%cN=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cO=call fastcc i8*%cK(i8*inreg%cM,i8*inreg%cN)
%cP=getelementptr inbounds i8,i8*%cO,i64 16
%cQ=bitcast i8*%cP to i8*(i8*,i8*)**
%cR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cQ,align 8
%cS=bitcast i8*%cO to i8**
%cT=load i8*,i8**%cS,align 8
%cU=load i8*,i8**%n,align 8
%cV=call fastcc i8*%cR(i8*inreg%cT,i8*inreg%cU)
store i8*%cV,i8**%m,align 8
%cW=getelementptr inbounds i8,i8*%cV,i64 24
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%k,align 8
%cZ=getelementptr inbounds i8,i8*%cV,i64 48
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%l,align 8
%c2=bitcast i8*%cV to i8**
%c3=load i8*,i8**%c2,align 8
store i8*%c3,i8**%o,align 8
%c4=getelementptr inbounds i8,i8*%cV,i64 8
%c5=bitcast i8*%c4 to i8**
%c6=load i8*,i8**%c5,align 8
store i8*%c6,i8**%p,align 8
%c7=getelementptr inbounds i8,i8*%cV,i64 16
%c8=bitcast i8*%c7 to i32*
%c9=load i32,i32*%c8,align 4
%da=call fastcc i8*@_SMLFN8ListPair3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%db=getelementptr inbounds i8,i8*%da,i64 16
%dc=bitcast i8*%db to i8*(i8*,i8*)**
%dd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dc,align 8
%de=bitcast i8*%da to i8**
%df=load i8*,i8**%de,align 8
store i8*%df,i8**%q,align 8
%dg=call i8*@sml_alloc(i32 inreg 12)#0
%dh=getelementptr inbounds i8,i8*%dg,i64 -4
%di=bitcast i8*%dh to i32*
store i32 1342177288,i32*%di,align 4
store i8*%dg,i8**%r,align 8
%dj=load i8*,i8**%n,align 8
%dk=bitcast i8*%dg to i8**
store i8*%dj,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%dg,i64 8
%dm=bitcast i8*%dl to i32*
store i32 1,i32*%dm,align 4
%dn=call i8*@sml_alloc(i32 inreg 28)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177304,i32*%dp,align 4
%dq=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dn,i64 8
%dt=bitcast i8*%ds to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15envRecordFields_631 to void(...)*),void(...)**%dt,align 8
%du=getelementptr inbounds i8,i8*%dn,i64 16
%dv=bitcast i8*%du to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15envRecordFields_631 to void(...)*),void(...)**%dv,align 8
%dw=getelementptr inbounds i8,i8*%dn,i64 24
%dx=bitcast i8*%dw to i32*
store i32 -2147483647,i32*%dx,align 4
%dy=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dz=call fastcc i8*%dd(i8*inreg%dy,i8*inreg%dn)
%dA=getelementptr inbounds i8,i8*%dz,i64 16
%dB=bitcast i8*%dA to i8*(i8*,i8*)**
%dC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dB,align 8
%dD=bitcast i8*%dz to i8**
%dE=load i8*,i8**%dD,align 8
store i8*%dE,i8**%r,align 8
%dF=load i8*,i8**%m,align 8
%dG=getelementptr inbounds i8,i8*%dF,i64 24
%dH=bitcast i8*%dG to i8**
%dI=load i8*,i8**%dH,align 8
store i8*%dI,i8**%q,align 8
%dJ=call i8*@sml_alloc(i32 inreg 20)#0
%dK=getelementptr inbounds i8,i8*%dJ,i64 -4
%dL=bitcast i8*%dK to i32*
store i32 1342177296,i32*%dL,align 4
%dM=load i8*,i8**%j,align 8
%dN=bitcast i8*%dJ to i8**
store i8*%dM,i8**%dN,align 8
%dO=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dP=getelementptr inbounds i8,i8*%dJ,i64 8
%dQ=bitcast i8*%dP to i8**
store i8*%dO,i8**%dQ,align 8
%dR=getelementptr inbounds i8,i8*%dJ,i64 16
%dS=bitcast i8*%dR to i32*
store i32 3,i32*%dS,align 4
%dT=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%dU=call fastcc i8*%dC(i8*inreg%dT,i8*inreg%dJ)
store i8*%dU,i8**%q,align 8
%dV=load i8*,i8**%m,align 8
%dW=getelementptr inbounds i8,i8*%dV,i64 32
%dX=bitcast i8*%dW to i32*
%dY=load i32,i32*%dX,align 4
%dZ=getelementptr inbounds i8,i8*%dV,i64 40
%d0=bitcast i8*%dZ to i8**
%d1=load i8*,i8**%d0,align 8
store i8*%d1,i8**%r,align 8
store i8*null,i8**%m,align 8
%d2=getelementptr inbounds i8,i8*%dV,i64 48
%d3=bitcast i8*%d2 to i8**
%d4=load i8*,i8**%d3,align 8
store i8*%d4,i8**%s,align 8
%d5=call i8*@sml_alloc(i32 inreg 60)#0
%d6=getelementptr inbounds i8,i8*%d5,i64 -4
%d7=bitcast i8*%d6 to i32*
store i32 1342177336,i32*%d7,align 4
store i8*%d5,i8**%m,align 8
%d8=getelementptr inbounds i8,i8*%d5,i64 20
call void@llvm.memset.p0i8.i32(i8*%d8,i8 0,i32 20,i1 false)
%d9=bitcast i8*%d5 to i8**
%ea=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
store i8*%ea,i8**%d9,align 8
%eb=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ec=getelementptr inbounds i8,i8*%d5,i64 8
%ed=bitcast i8*%ec to i8**
store i8*%eb,i8**%ed,align 8
%ee=getelementptr inbounds i8,i8*%d5,i64 16
%ef=bitcast i8*%ee to i32*
store i32%c9,i32*%ef,align 4
%eg=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%eh=getelementptr inbounds i8,i8*%d5,i64 24
%ei=bitcast i8*%eh to i8**
store i8*%eg,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%d5,i64 32
%ek=bitcast i8*%ej to i32*
store i32%dY,i32*%ek,align 4
%el=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%em=getelementptr inbounds i8,i8*%d5,i64 40
%en=bitcast i8*%em to i8**
store i8*%el,i8**%en,align 8
%eo=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%ep=getelementptr inbounds i8,i8*%d5,i64 48
%eq=bitcast i8*%ep to i8**
store i8*%eo,i8**%eq,align 8
%er=getelementptr inbounds i8,i8*%d5,i64 56
%es=bitcast i8*%er to i32*
store i32 107,i32*%es,align 4
%et=call i8*@sml_alloc(i32 inreg 20)#0
%eu=getelementptr inbounds i8,i8*%et,i64 -4
%ev=bitcast i8*%eu to i32*
store i32 1342177296,i32*%ev,align 4
store i8*%et,i8**%o,align 8
%ew=getelementptr inbounds i8,i8*%et,i64 4
%ex=bitcast i8*%ew to i32*
store i32 0,i32*%ex,align 1
%ey=bitcast i8*%et to i32*
store i32 14,i32*%ey,align 4
%ez=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%eA=getelementptr inbounds i8,i8*%et,i64 8
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%et,i64 16
%eD=bitcast i8*%eC to i32*
store i32 2,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 44)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177320,i32*%eG,align 4
store i8*%eE,i8**%m,align 8
%eH=getelementptr inbounds i8,i8*%eE,i64 4
%eI=bitcast i8*%eH to i32*
store i32 0,i32*%eI,align 1
%eJ=bitcast i8*%eE to i32*
store i32 1,i32*%eJ,align 4
%eK=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%eL=getelementptr inbounds i8,i8*%eE,i64 8
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=load i8*,i8**%l,align 8
%eO=getelementptr inbounds i8,i8*%eE,i64 16
%eP=bitcast i8*%eO to i8**
store i8*%eN,i8**%eP,align 8
%eQ=load i8*,i8**%n,align 8
%eR=getelementptr inbounds i8,i8*%eE,i64 24
%eS=bitcast i8*%eR to i8**
store i8*%eQ,i8**%eS,align 8
%eT=getelementptr inbounds i8,i8*%eE,i64 32
%eU=bitcast i8*%eT to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*),i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eE,i64 40
%eW=bitcast i8*%eV to i32*
store i32 30,i32*%eW,align 4
%eX=call i8*@sml_alloc(i32 inreg 20)#0
%eY=getelementptr inbounds i8,i8*%eX,i64 -4
%eZ=bitcast i8*%eY to i32*
store i32 1342177296,i32*%eZ,align 4
store i8*%eX,i8**%o,align 8
%e0=getelementptr inbounds i8,i8*%eX,i64 4
%e1=bitcast i8*%e0 to i32*
store i32 0,i32*%e1,align 1
%e2=bitcast i8*%eX to i32*
store i32 1,i32*%e2,align 4
%e3=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%e4=getelementptr inbounds i8,i8*%eX,i64 8
%e5=bitcast i8*%e4 to i8**
store i8*%e3,i8**%e5,align 8
%e6=getelementptr inbounds i8,i8*%eX,i64 16
%e7=bitcast i8*%e6 to i32*
store i32 2,i32*%e7,align 4
%e8=call fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%e9=getelementptr inbounds i8,i8*%e8,i64 16
%fa=bitcast i8*%e9 to i8*(i8*,i8*)**
%fb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fa,align 8
%fc=bitcast i8*%e8 to i8**
%fd=load i8*,i8**%fc,align 8
store i8*%fd,i8**%m,align 8
%fe=call i8*@sml_alloc(i32 inreg 20)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177296,i32*%fg,align 4
store i8*%fe,i8**%p,align 8
%fh=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fi=bitcast i8*%fe to i8**
store i8*%fh,i8**%fi,align 8
%fj=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%fk=getelementptr inbounds i8,i8*%fe,i64 8
%fl=bitcast i8*%fk to i8**
store i8*%fj,i8**%fl,align 8
%fm=getelementptr inbounds i8,i8*%fe,i64 16
%fn=bitcast i8*%fm to i32*
store i32 3,i32*%fn,align 4
%fo=call i8*@sml_alloc(i32 inreg 28)#0
%fp=getelementptr inbounds i8,i8*%fo,i64 -4
%fq=bitcast i8*%fp to i32*
store i32 1342177304,i32*%fq,align 4
%fr=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%fs=bitcast i8*%fo to i8**
store i8*%fr,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fo,i64 8
%fu=bitcast i8*%ft to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9selectMap_634 to void(...)*),void(...)**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fo,i64 16
%fw=bitcast i8*%fv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL9selectMap_634 to void(...)*),void(...)**%fw,align 8
%fx=getelementptr inbounds i8,i8*%fo,i64 24
%fy=bitcast i8*%fx to i32*
store i32 -2147483647,i32*%fy,align 4
%fz=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%fA=call fastcc i8*%fb(i8*inreg%fz,i8*inreg%fo)
%fB=getelementptr inbounds i8,i8*%fA,i64 16
%fC=bitcast i8*%fB to i8*(i8*,i8*)**
%fD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fC,align 8
%fE=bitcast i8*%fA to i8**
%fF=load i8*,i8**%fE,align 8
store i8*%fF,i8**%l,align 8
%fG=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%fH=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fI=call fastcc i8*%fD(i8*inreg%fH,i8*inreg%fG)
%fJ=getelementptr inbounds i8,i8*%fI,i64 16
%fK=bitcast i8*%fJ to i8*(i8*,i8*)**
%fL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fK,align 8
%fM=bitcast i8*%fI to i8**
%fN=load i8*,i8**%fM,align 8
store i8*%fN,i8**%l,align 8
%fO=call i8*@sml_alloc(i32 inreg 20)#0
%fP=getelementptr inbounds i8,i8*%fO,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177296,i32*%fQ,align 4
%fR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fS=bitcast i8*%fO to i8**
store i8*%fR,i8**%fS,align 8
%fT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%fU=getelementptr inbounds i8,i8*%fO,i64 8
%fV=bitcast i8*%fU to i8**
store i8*%fT,i8**%fV,align 8
%fW=getelementptr inbounds i8,i8*%fO,i64 16
%fX=bitcast i8*%fW to i32*
store i32 3,i32*%fX,align 4
%fY=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fZ=call fastcc i8*%fL(i8*inreg%fY,i8*inreg%fO)
store i8*%fZ,i8**%j,align 8
%f0=call i8*@sml_alloc(i32 inreg 20)#0
%f1=getelementptr inbounds i8,i8*%f0,i64 -4
%f2=bitcast i8*%f1 to i32*
store i32 1342177296,i32*%f2,align 4
%f3=load i8*,i8**%o,align 8
%f4=bitcast i8*%f0 to i8**
store i8*%f3,i8**%f4,align 8
%f5=load i8*,i8**%j,align 8
%f6=getelementptr inbounds i8,i8*%f0,i64 8
%f7=bitcast i8*%f6 to i8**
store i8*%f5,i8**%f7,align 8
%f8=getelementptr inbounds i8,i8*%f0,i64 16
%f9=bitcast i8*%f8 to i32*
store i32 3,i32*%f9,align 4
ret i8*%f0
}
define internal fastcc i8*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_636(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_635 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_635 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLL5subst_639(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%a,i8**%i,align 8
%o=bitcast i8*%b to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%b,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%b,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%b,i64 24
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%b,i64 32
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=getelementptr inbounds i8,i8*%b,i64 40
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=getelementptr inbounds i8,i8*%a,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%j,align 8
store i8*%H,i8**%k,align 8
%I=bitcast i8**%i to i8***
%J=bitcast i8*%a to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%l,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%m,align 8
%O=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%n,align 8
%Y=getelementptr inbounds i8,i8*%V,i64 4
%Z=bitcast i8*%Y to i32*
store i32 0,i32*%Z,align 1
%aa=bitcast i8*%V to i32*
store i32 18,i32*%aa,align 4
%ab=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 16
%af=bitcast i8*%ae to i32*
store i32 2,i32*%af,align 4
%ag=load i8**,i8***%I,align 8
%ah=load i8*,i8**%ag,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%k,align 8
%al=getelementptr inbounds i8*,i8**%ag,i64 1
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%i,align 8
%an=call i8*@sml_alloc(i32 inreg 44)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177320,i32*%ap,align 4
store i8*%an,i8**%l,align 8
%aq=getelementptr inbounds i8,i8*%an,i64 4
%ar=bitcast i8*%aq to i32*
store i32 0,i32*%ar,align 1
%as=bitcast i8*%an to i32*
store i32 1,i32*%as,align 4
%at=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%au=getelementptr inbounds i8,i8*%an,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ax=getelementptr inbounds i8,i8*%an,i64 16
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aA=getelementptr inbounds i8,i8*%an,i64 24
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%an,i64 32
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%an,i64 40
%aG=bitcast i8*%aF to i32*
store i32 30,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%k,align 8
%aK=getelementptr inbounds i8,i8*%aH,i64 4
%aL=bitcast i8*%aK to i32*
store i32 0,i32*%aL,align 1
%aM=bitcast i8*%aH to i32*
store i32 1,i32*%aM,align 4
%aN=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 2,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 68)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177344,i32*%aU,align 4
store i8*%aS,i8**%i,align 8
%aV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a1=getelementptr inbounds i8,i8*%aS,i64 16
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%a4=getelementptr inbounds i8,i8*%aS,i64 24
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a7=getelementptr inbounds i8,i8*%aS,i64 32
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ba=getelementptr inbounds i8,i8*%aS,i64 40
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bd=getelementptr inbounds i8,i8*%aS,i64 48
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=getelementptr inbounds i8,i8*%aS,i64 56
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%aS,i64 64
%bj=bitcast i8*%bi to i32*
store i32 255,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 20)#0
%bl=bitcast i8*%bk to i32*
%bm=getelementptr inbounds i8,i8*%bk,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
%bo=getelementptr inbounds i8,i8*%bk,i64 4
%bp=bitcast i8*%bo to i32*
store i32 0,i32*%bp,align 1
store i32 15,i32*%bl,align 4
%bq=load i8*,i8**%i,align 8
%br=getelementptr inbounds i8,i8*%bk,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bk,i64 16
%bu=bitcast i8*%bt to i32*
store i32 2,i32*%bu,align 4
ret i8*%bk
}
define internal fastcc i8*@_SMLLN18ClosureConversion212closureSubstE_640(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN18ClosureConversion212closureSubstE_641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN5VarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=load i8*,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5subst_639 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5subst_639 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=call fastcc i8*%o(i8*inreg%Q,i8*inreg%F)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=bitcast i8**%d to i8***
%Y=load i8**,i8***%X,align 8
store i8*null,i8**%d,align 8
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%U(i8*inreg%W,i8*inreg%Z)
store i8*%aa,i8**%c,align 8
%ab=call fastcc i8*@_SMLFN5VarID3Map3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%d,align 8
%ah=call i8*@sml_alloc(i32 inreg 12)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177288,i32*%aj,align 4
store i8*%ah,i8**%e,align 8
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_640 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 16
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_640 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 24
%ay=bitcast i8*%ax to i32*
store i32 -2147483647,i32*%ay,align 4
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=call fastcc i8*%ae(i8*inreg%az,i8*inreg%ao)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
%aG=load i8*,i8**%c,align 8
%aH=tail call fastcc i8*%aD(i8*inreg%aF,i8*inreg%aG)
ret i8*%aH
}
define internal fastcc i8*@_SMLLN18ClosureConversion212closureSubstE_642(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_641 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_641 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_647(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%g,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%g,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%j,align 8
%w=call fastcc i8*@_SMLFN5VarID3Map7isEmptyE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=load i8*,i8**%g,align 8
%D=call fastcc i8*%z(i8*inreg%B,i8*inreg%C)
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=icmp eq i32%F,0
br i1%G,label%S,label%H
H:
store i8*null,i8**%g,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%h,align 8
%I=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=bitcast i8*%J to i8**
store i8*null,i8**%M,align 8
%N=load i8*,i8**%g,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
ret i8*%J
S:
%T=bitcast i8**%h to i8***
%U=load i8**,i8***%T,align 8
%V=load i8*,i8**%U,align 8
%W=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W)
%X=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%X)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%V,i8**%e,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%f,align 8
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%f,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_636 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_636 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
%aq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=call fastcc i8*@_SMLLN18ClosureConversion220makeClosureEnvRecordE_636(i8*inreg%ai,i8*inreg%at)
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8*(i8*,i8*)**
%ax=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aw,align 8
%ay=bitcast i8*%au to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%h,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
%aD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%j,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aL=call fastcc i8*%ax(i8*inreg%aK,i8*inreg%aA)
store i8*%aL,i8**%i,align 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
store i8*%aN,i8**%g,align 8
%aO=call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*))
store i8*%aO,i8**%h,align 8
%aP=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aQ=getelementptr inbounds i8,i8*%aP,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aT)
%aU=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aU)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%aS,i8**%c,align 8
%aV=call i8*@sml_alloc(i32 inreg 12)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177288,i32*%aX,align 4
store i8*%aV,i8**%d,align 8
%aY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i32*
store i32 1,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
%a5=load i8*,i8**%d,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_642 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212closureSubstE_642 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 24
%bc=bitcast i8*%bb to i32*
store i32 -2147483647,i32*%bc,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aU)
%bd=load i8*,i8**%h,align 8
%be=call fastcc i8*@_SMLLN18ClosureConversion212closureSubstE_642(i8*inreg%a5,i8*inreg%bd)
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
%bk=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bl=call fastcc i8*%bh(i8*inreg%bj,i8*inreg%bk)
store i8*%bl,i8**%i,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%j,align 8
%bp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 12)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177288,i32*%by,align 4
store i8*%bw,i8**%g,align 8
%bz=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
%bG=load i8*,i8**%g,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%i,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
ret i8*%bD
}
define internal fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_648(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214computeClosureE_647 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214computeClosureE_647 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_649(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214computeClosureE_648 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214computeClosureE_648 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion220replaceClosureEnvVarE_651(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%b,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=load i8*,i8**%o,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%d,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
%M=load i8*,i8**%b,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%f,align 8
store i8*null,i8**%b,align 8
%Q=getelementptr inbounds i8,i8*%M,i64 24
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%g,align 8
%T=call i8*@sml_alloc(i32 inreg 36)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177312,i32*%V,align 4
store i8*%T,i8**%b,align 8
%W=getelementptr inbounds i8,i8*%T,i64 12
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i8**
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
store i8*%Z,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i32*
store i32%L,i32*%ab,align 4
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 16
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%T,i64 24
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%T,i64 32
%aj=bitcast i8*%ai to i32*
store i32 13,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=load i8*,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%b,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 16
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ak,i64 24
%aw=bitcast i8*%av to i32*
store i32 7,i32*%aw,align 4
ret i8*%ak
}
define internal fastcc i8*@_SMLLN18ClosureConversion219decomposeExFunEntryE_656(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=bitcast i8*%a to i8***
%k=load i8**,i8***%j,align 8
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=getelementptr inbounds i8,i8*%m,i64 4
%q=bitcast i8*%p to i32*
store i32 0,i32*%q,align 1
%r=bitcast i8*%m to i32*
store i32 3,i32*%r,align 4
%s=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%g,align 8
%A=bitcast i8*%x to i64*
store i64 0,i64*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=bitcast i8**%d to i8***
%H=load i8**,i8***%G,align 8
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%h,align 8
%M=getelementptr inbounds i8,i8*%J,i64 4
%N=bitcast i8*%M to i32*
store i32 0,i32*%N,align 1
%O=bitcast i8*%J to i32*
store i32 5,i32*%O,align 4
%P=load i8*,i8**%e,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 16
%T=bitcast i8*%S to i32*
store i32 2,i32*%T,align 4
%U=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%U,i8**%e,align 8
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=bitcast i8*%V to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aw,i64 0,i32 2)to i8*),i8**%Y,align 8
%Z=load i8*,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%V,i64 24
%ag=bitcast i8*%af to i32*
store i32 7,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%i,align 8
%ak=getelementptr inbounds i8,i8*%ah,i64 4
%al=bitcast i8*%ak to i32*
store i32 0,i32*%al,align 1
%am=bitcast i8*%ah to i32*
store i32 3,i32*%am,align 4
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i32*
store i32 2,i32*%ar,align 4
%as=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%as,i8**%e,align 8
%at=call i8*@sml_alloc(i32 inreg 44)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177320,i32*%av,align 4
store i8*%at,i8**%f,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
%ay=bitcast i8*%at to i32*
store i32 1,i32*%ay,align 4
%az=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%at,i64 16
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%at,i64 24
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%at,i64 32
%aJ=bitcast i8*%aI to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*),i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%at,i64 40
%aL=bitcast i8*%aK to i32*
store i32 30,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
store i8*%aM,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aM,i64 4
%aQ=bitcast i8*%aP to i32*
store i32 0,i32*%aQ,align 1
%aR=bitcast i8*%aM to i32*
store i32 1,i32*%aR,align 4
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 16
%aW=bitcast i8*%aV to i32*
store i32 2,i32*%aW,align 4
%aX=bitcast i8**%d to i8****
%aY=load i8***,i8****%aX,align 8
%aZ=load i8**,i8***%aY,align 8
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%d,align 8
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
store i8*%a1,i8**%f,align 8
%a4=getelementptr inbounds i8,i8*%a1,i64 4
%a5=bitcast i8*%a4 to i32*
store i32 0,i32*%a5,align 1
%a6=bitcast i8*%a1 to i32*
store i32 1,i32*%a6,align 4
%a7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a8=getelementptr inbounds i8,i8*%a1,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a1,i64 16
%bb=bitcast i8*%ba to i32*
store i32 2,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
store i8*%bc,i8**%d,align 8
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 16
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bc,i64 24
%bo=bitcast i8*%bn to i32*
store i32 7,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
store i8*%bp,i8**%c,align 8
%bs=getelementptr inbounds i8,i8*%bp,i64 4
%bt=bitcast i8*%bs to i32*
store i32 0,i32*%bt,align 1
%bu=bitcast i8*%bp to i32*
store i32 3,i32*%bu,align 4
%bv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bw=getelementptr inbounds i8,i8*%bp,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 16
%bz=bitcast i8*%by to i32*
store i32 2,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
%bD=load i8*,i8**%f,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=load i8*,i8**%c,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bA,i64 24
%bM=bitcast i8*%bL to i32*
store i32 7,i32*%bM,align 4
ret i8*%bA
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeStaticClosureE_662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%q,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%z,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
%M=call fastcc i8*@_SMLLN18ClosureConversion211funEntryExpE_497(i8*inreg%z)
store i8*%M,i8**%d,align 8
%N=bitcast i8**%f to i8****
%O=load i8***,i8****%N,align 8
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
%R=icmp eq i8*%Q,null
br i1%R,label%S,label%aR
S:
%T=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%T,i8**%f,align 8
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
store i8*%U,i8**%g,align 8
%X=bitcast i8*%U to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aw,i64 0,i32 2)to i8*),i8**%X,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%U,i64 24
%af=bitcast i8*%ae to i32*
store i32 7,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%h,align 8
%aj=getelementptr inbounds i8,i8*%ag,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
%al=bitcast i8*%ag to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 16
%aq=bitcast i8*%ap to i32*
store i32 2,i32*%aq,align 4
%ar=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%ar,i8**%f,align 8
%as=call i8*@sml_alloc(i32 inreg 44)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177320,i32*%au,align 4
store i8*%as,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%as,i64 4
%aw=bitcast i8*%av to i32*
store i32 0,i32*%aw,align 1
%ax=bitcast i8*%as to i32*
store i32 1,i32*%ax,align 4
%ay=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%as,i64 16
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=getelementptr inbounds i8,i8*%as,i64 24
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%as,i64 32
%aI=bitcast i8*%aH to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*),i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%as,i64 40
%aK=bitcast i8*%aJ to i32*
store i32 30,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=bitcast i8*%aL to i32*
%aN=getelementptr inbounds i8,i8*%aL,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=getelementptr inbounds i8,i8*%aL,i64 4
%aQ=bitcast i8*%aP to i32*
store i32 0,i32*%aQ,align 1
store i32 1,i32*%aM,align 4
br label%ba
aR:
%aS=bitcast i8*%Q to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%f,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%g,align 8
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=bitcast i8*%a4 to i32*
%a6=getelementptr inbounds i8,i8*%a4,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
%a8=getelementptr inbounds i8,i8*%a4,i64 4
%a9=bitcast i8*%a8 to i32*
store i32 0,i32*%a9,align 1
store i32 18,i32*%a5,align 4
br label%ba
ba:
%bb=phi i8*[%a4,%aR],[%aL,%S]
%bc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bd=getelementptr inbounds i8,i8*%bb,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%bb,i64 16
%bg=bitcast i8*%bf to i32*
store i32 2,i32*%bg,align 4
store i8*%bb,i8**%c,align 8
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
store i8*%bh,i8**%f,align 8
%bk=getelementptr inbounds i8,i8*%bh,i64 4
%bl=bitcast i8*%bk to i32*
store i32 0,i32*%bl,align 1
%bm=bitcast i8*%bh to i32*
store i32 1,i32*%bm,align 4
%bn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 16
%br=bitcast i8*%bq to i32*
store i32 2,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%f,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%c,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=load i8*,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 16
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bs,i64 24
%bE=bitcast i8*%bD to i32*
store i32 7,i32*%bE,align 4
ret i8*%bs
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeStaticClosureE_663(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion222decomposeStaticClosureE_662 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion222decomposeStaticClosureE_662 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL6fields_672(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%d to i8***
br label%p
l:
call void@sml_check(i32 inreg%g)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%k,%i],[%n,%l]
%r=phi i8**[%j,%i],[%o,%l]
%s=phi i8*[%b,%i],[%m,%l]
store i8*null,i8**%c,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=load i8*,i8**%r,align 8
%z=call fastcc i8*@_SMLFN15SingletonTyEnv27findTagE(i8*inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%f,align 8
%G=call fastcc i8*%C(i8*inreg%E,i8*inreg%F)
store i8*%G,i8**%c,align 8
%H=load i8**,i8***%q,align 8
store i8*null,i8**%d,align 8
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*@_SMLFN15SingletonTyEnv29constSizeE(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%f,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=icmp eq i8*%Q,null
br i1%R,label%S,label%am
S:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%T=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%T,i8**%c,align 8
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
store i8*%U,i8**%d,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@Y,i64 0,i32 2,i64 0),i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@aa,i64 0,i32 2,i64 0),i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 7,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 60)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177336,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%af,i64 56
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%af to i8**
store i8*%ak,i8**%al,align 8
call void@sml_raise(i8*inreg%af)#1
unreachable
am:
%an=bitcast i8*%Q to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=call i8*@sml_alloc(i32 inreg 36)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177312,i32*%ar,align 4
%as=load i8*,i8**%e,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=load i8*,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=load i8*,i8**%c,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 16
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=load i8*,i8**%f,align 8
%aB=getelementptr inbounds i8,i8*%ap,i64 24
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ap,i64 32
%aE=bitcast i8*%aD to i32*
store i32 15,i32*%aE,align 4
ret i8*%ap
}
define internal fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_683(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
%C=alloca i8*,align 8
%D=alloca i8*,align 8
%E=alloca i8*,align 8
%F=alloca i8*,align 8
%G=alloca i8*,align 8
%H=alloca i8*,align 8
%I=alloca i8*,align 8
call void@llvm.gcroot(i8**%x,i8*null)#0
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
call void@llvm.gcroot(i8**%A,i8*null)#0
call void@llvm.gcroot(i8**%B,i8*null)#0
call void@llvm.gcroot(i8**%C,i8*null)#0
call void@llvm.gcroot(i8**%D,i8*null)#0
call void@llvm.gcroot(i8**%E,i8*null)#0
call void@llvm.gcroot(i8**%F,i8*null)#0
call void@llvm.gcroot(i8**%G,i8*null)#0
call void@llvm.gcroot(i8**%H,i8*null)#0
call void@llvm.gcroot(i8**%I,i8*null)#0
store i8*%a,i8**%x,align 8
store i8*%b,i8**%y,align 8
%J=load atomic i32,i32*@sml_check_flag unordered,align 4
%K=icmp eq i32%J,0
br i1%K,label%L,label%N
L:
%M=bitcast i8*%a to i8***
br label%S
N:
call void@sml_check(i32 inreg%J)
%O=load i8*,i8**%y,align 8
%P=bitcast i8**%x to i8****
%Q=load i8***,i8****%P,align 8
%R=bitcast i8***%Q to i8*
br label%S
S:
%T=phi i8*[%R,%N],[%a,%L]
%U=phi i8***[%Q,%N],[%M,%L]
%V=phi i8*[%O,%N],[%b,%L]
store i8*null,i8**%y,align 8
store i8*%V,i8**%A,align 8
%W=load i8**,i8***%U,align 8
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%B,align 8
%Y=bitcast i8***%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%C,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 8
%ae=bitcast i8*%ad to i8***
%af=load i8**,i8***%ae,align 8
%ag=load i8*,i8**%af,align 8
%ah=getelementptr inbounds i8,i8*%ag,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%z,align 8
%ak=load i8*,i8**%af,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%D,align 8
%ao=getelementptr inbounds i8*,i8**%af,i64 1
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%E,align 8
%aq=bitcast i8**%af to i8***
%ar=load i8**,i8***%aq,align 8
%as=load i8*,i8**%ar,align 8
%at=icmp eq i8*%as,null
br i1%at,label%au,label%bj
au:
%av=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%av,i8**%x,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%y,align 8
%az=bitcast i8*%aw to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aw,i64 0,i32 2)to i8*),i8**%az,align 8
%aA=load i8*,i8**%A,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aw,i64 24
%aH=bitcast i8*%aG to i32*
store i32 7,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%F,align 8
%aL=getelementptr inbounds i8,i8*%aI,i64 4
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
%aN=bitcast i8*%aI to i32*
store i32 3,i32*%aN,align 4
%aO=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 16
%aS=bitcast i8*%aR to i32*
store i32 2,i32*%aS,align 4
%aT=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%aT,i8**%x,align 8
%aU=call i8*@sml_alloc(i32 inreg 44)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177320,i32*%aW,align 4
store i8*%aU,i8**%y,align 8
%aX=getelementptr inbounds i8,i8*%aU,i64 4
%aY=bitcast i8*%aX to i32*
store i32 0,i32*%aY,align 1
%aZ=bitcast i8*%aU to i32*
store i32 1,i32*%aZ,align 4
%a0=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%a4=getelementptr inbounds i8,i8*%aU,i64 16
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%A,align 8
%a7=getelementptr inbounds i8,i8*%aU,i64 24
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aU,i64 32
%ba=bitcast i8*%a9 to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*),i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%aU,i64 40
%bc=bitcast i8*%bb to i32*
store i32 30,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=bitcast i8*%bd to i32*
%bf=getelementptr inbounds i8,i8*%bd,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
%bh=getelementptr inbounds i8,i8*%bd,i64 4
%bi=bitcast i8*%bh to i32*
store i32 0,i32*%bi,align 1
store i32 1,i32*%be,align 4
br label%bC
bj:
%bk=bitcast i8*%as to i8**
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%x,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%y,align 8
%bp=load i8*,i8**%A,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=bitcast i8*%bw to i32*
%by=getelementptr inbounds i8,i8*%bw,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177296,i32*%bz,align 4
%bA=getelementptr inbounds i8,i8*%bw,i64 4
%bB=bitcast i8*%bA to i32*
store i32 0,i32*%bB,align 1
store i32 18,i32*%bx,align 4
br label%bC
bC:
%bD=phi i8*[%bw,%bj],[%bd,%au]
%bE=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%bF=getelementptr inbounds i8,i8*%bD,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bD,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
store i8*%bD,i8**%x,align 8
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
%bM=load i8*,i8**%D,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%z,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%A,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bJ,i64 24
%bV=bitcast i8*%bU to i32*
store i32 7,i32*%bV,align 4
%bW=call fastcc i8*@_SMLLN18ClosureConversion211funEntryExpE_497(i8*inreg%bJ)
store i8*%bW,i8**%y,align 8
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
store i8*%bX,i8**%F,align 8
%b0=getelementptr inbounds i8,i8*%bX,i64 4
%b1=bitcast i8*%b0 to i32*
store i32 0,i32*%b1,align 1
%b2=bitcast i8*%bX to i32*
store i32 3,i32*%b2,align 4
%b3=load i8*,i8**%z,align 8
%b4=getelementptr inbounds i8,i8*%bX,i64 8
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bX,i64 16
%b7=bitcast i8*%b6 to i32*
store i32 2,i32*%b7,align 4
%b8=call i8*@sml_alloc(i32 inreg 20)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32 1342177296,i32*%ca,align 4
store i8*%b8,i8**%G,align 8
%cb=bitcast i8*%b8 to i64*
store i64 0,i64*%cb,align 4
%cc=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%cd=getelementptr inbounds i8,i8*%b8,i64 8
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b8,i64 16
%cg=bitcast i8*%cf to i32*
store i32 2,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 44)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177320,i32*%cj,align 4
store i8*%ch,i8**%F,align 8
%ck=bitcast i8*%ch to i64*
store i64 0,i64*%ck,align 4
%cl=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%cp=getelementptr inbounds i8,i8*%ch,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%A,align 8
%cs=getelementptr inbounds i8,i8*%ch,i64 24
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%ch,i64 32
%cv=bitcast i8*%cu to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ae,i64 0,i32 2)to i8*),i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%ch,i64 40
%cx=bitcast i8*%cw to i32*
store i32 30,i32*%cx,align 4
%cy=call i8*@sml_alloc(i32 inreg 20)#0
%cz=getelementptr inbounds i8,i8*%cy,i64 -4
%cA=bitcast i8*%cz to i32*
store i32 1342177296,i32*%cA,align 4
store i8*%cy,i8**%H,align 8
%cB=getelementptr inbounds i8,i8*%cy,i64 4
%cC=bitcast i8*%cB to i32*
store i32 0,i32*%cC,align 1
%cD=bitcast i8*%cy to i32*
store i32 1,i32*%cD,align 4
%cE=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%cF=getelementptr inbounds i8,i8*%cy,i64 8
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cy,i64 16
%cI=bitcast i8*%cH to i32*
store i32 2,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
%cM=load i8*,i8**%z,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=load i8*,i8**%A,align 8
%cP=getelementptr inbounds i8,i8*%cJ,i64 8
%cQ=bitcast i8*%cP to i8**
store i8*%cO,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cJ,i64 16
%cS=bitcast i8*%cR to i32*
store i32 3,i32*%cS,align 4
%cT=bitcast i8**%t to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cT)
%cU=bitcast i8**%u to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cU)
%cV=bitcast i8**%v to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cV)
%cW=bitcast i8**%w to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cW)
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
store i8*%cJ,i8**%t,align 8
store i8*%cO,i8**%u,align 8
store i8*%cM,i8**%v,align 8
%cX=call i8*@sml_alloc(i32 inreg 20)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177296,i32*%cZ,align 4
store i8*%cX,i8**%w,align 8
%c0=getelementptr inbounds i8,i8*%cX,i64 4
%c1=bitcast i8*%c0 to i32*
store i32 0,i32*%c1,align 1
%c2=bitcast i8*%cX to i32*
store i32 1,i32*%c2,align 4
%c3=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%c4=getelementptr inbounds i8,i8*%cX,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cX,i64 16
%c7=bitcast i8*%c6 to i32*
store i32 2,i32*%c7,align 4
%c8=call i8*@sml_alloc(i32 inreg 20)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177296,i32*%da,align 4
store i8*%c8,i8**%v,align 8
%db=bitcast i8*%c8 to i64*
store i64 0,i64*%db,align 4
%dc=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%c8,i64 16
%dg=bitcast i8*%df to i32*
store i32 2,i32*%dg,align 4
%dh=bitcast i8**%t to i8***
%di=load i8**,i8***%dh,align 8
%dj=load i8*,i8**%di,align 8
store i8*%dj,i8**%t,align 8
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
store i8*%dk,i8**%w,align 8
%dn=getelementptr inbounds i8,i8*%dk,i64 4
%do=bitcast i8*%dn to i32*
store i32 0,i32*%do,align 1
%dp=bitcast i8*%dk to i32*
store i32 2,i32*%dp,align 4
%dq=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%dr=getelementptr inbounds i8,i8*%dk,i64 8
%ds=bitcast i8*%dr to i8**
store i8*%dq,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dk,i64 16
%du=bitcast i8*%dt to i32*
store i32 2,i32*%du,align 4
%dv=call i8*@sml_alloc(i32 inreg 28)#0
%dw=getelementptr inbounds i8,i8*%dv,i64 -4
%dx=bitcast i8*%dw to i32*
store i32 1342177304,i32*%dx,align 4
store i8*%dv,i8**%t,align 8
%dy=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%dz=bitcast i8*%dv to i8**
store i8*%dy,i8**%dz,align 8
%dA=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%dB=getelementptr inbounds i8,i8*%dv,i64 8
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%dE=getelementptr inbounds i8,i8*%dv,i64 16
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dv,i64 24
%dH=bitcast i8*%dG to i32*
store i32 7,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 20)#0
%dJ=bitcast i8*%dI to i32*
%dK=getelementptr inbounds i8,i8*%dI,i64 -4
%dL=bitcast i8*%dK to i32*
store i32 1342177296,i32*%dL,align 4
%dM=getelementptr inbounds i8,i8*%dI,i64 4
%dN=bitcast i8*%dM to i32*
store i32 0,i32*%dN,align 1
store i32 3,i32*%dJ,align 4
%dO=load i8*,i8**%t,align 8
%dP=getelementptr inbounds i8,i8*%dI,i64 8
%dQ=bitcast i8*%dP to i8**
store i8*%dO,i8**%dQ,align 8
%dR=getelementptr inbounds i8,i8*%dI,i64 16
%dS=bitcast i8*%dR to i32*
store i32 2,i32*%dS,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cW)
store i8*%dI,i8**%y,align 8
%dT=call i8*@sml_alloc(i32 inreg 20)#0
%dU=getelementptr inbounds i8,i8*%dT,i64 -4
%dV=bitcast i8*%dU to i32*
store i32 1342177296,i32*%dV,align 4
store i8*%dT,i8**%F,align 8
%dW=getelementptr inbounds i8,i8*%dT,i64 4
%dX=bitcast i8*%dW to i32*
store i32 0,i32*%dX,align 1
%dY=bitcast i8*%dT to i32*
store i32 1,i32*%dY,align 4
%dZ=load i8*,i8**%z,align 8
%d0=getelementptr inbounds i8,i8*%dT,i64 8
%d1=bitcast i8*%d0 to i8**
store i8*%dZ,i8**%d1,align 8
%d2=getelementptr inbounds i8,i8*%dT,i64 16
%d3=bitcast i8*%d2 to i32*
store i32 2,i32*%d3,align 4
%d4=call i8*@sml_alloc(i32 inreg 20)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177296,i32*%d6,align 4
store i8*%d4,i8**%I,align 8
%d7=bitcast i8*%d4 to i64*
store i64 0,i64*%d7,align 4
%d8=load i8*,i8**%F,align 8
%d9=getelementptr inbounds i8,i8*%d4,i64 8
%ea=bitcast i8*%d9 to i8**
store i8*%d8,i8**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d4,i64 16
%ec=bitcast i8*%eb to i32*
store i32 2,i32*%ec,align 4
%ed=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%ed,i8**%F,align 8
%ee=call i8*@sml_alloc(i32 inreg 44)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177320,i32*%eg,align 4
store i8*%ee,i8**%G,align 8
%eh=getelementptr inbounds i8,i8*%ee,i64 4
%ei=bitcast i8*%eh to i32*
store i32 0,i32*%ei,align 1
%ej=bitcast i8*%ee to i32*
store i32 1,i32*%ej,align 4
%ek=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%el=getelementptr inbounds i8,i8*%ee,i64 8
%em=bitcast i8*%el to i8**
store i8*%ek,i8**%em,align 8
%en=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%eo=getelementptr inbounds i8,i8*%ee,i64 16
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=load i8*,i8**%A,align 8
%er=getelementptr inbounds i8,i8*%ee,i64 24
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%eu=getelementptr inbounds i8,i8*%ee,i64 32
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%ee,i64 40
%ex=bitcast i8*%ew to i32*
store i32 30,i32*%ex,align 4
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
store i8*%ey,i8**%I,align 8
%eB=getelementptr inbounds i8,i8*%ey,i64 4
%eC=bitcast i8*%eB to i32*
store i32 0,i32*%eC,align 1
%eD=bitcast i8*%ey to i32*
store i32 1,i32*%eD,align 4
%eE=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%eF=getelementptr inbounds i8,i8*%ey,i64 8
%eG=bitcast i8*%eF to i8**
store i8*%eE,i8**%eG,align 8
%eH=getelementptr inbounds i8,i8*%ey,i64 16
%eI=bitcast i8*%eH to i32*
store i32 2,i32*%eI,align 4
%eJ=call i8*@sml_alloc(i32 inreg 28)#0
%eK=getelementptr inbounds i8,i8*%eJ,i64 -4
%eL=bitcast i8*%eK to i32*
store i32 1342177304,i32*%eL,align 4
%eM=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%eN=bitcast i8*%eJ to i8**
store i8*%eM,i8**%eN,align 8
%eO=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%eP=getelementptr inbounds i8,i8*%eJ,i64 8
%eQ=bitcast i8*%eP to i8**
store i8*%eO,i8**%eQ,align 8
%eR=load i8*,i8**%A,align 8
%eS=getelementptr inbounds i8,i8*%eJ,i64 16
%eT=bitcast i8*%eS to i8**
store i8*%eR,i8**%eT,align 8
%eU=getelementptr inbounds i8,i8*%eJ,i64 24
%eV=bitcast i8*%eU to i32*
store i32 7,i32*%eV,align 4
%eW=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%eW)
%eX=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%eX)
%eY=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%eY)
%eZ=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%eZ)
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%eM,i8**%p,align 8
store i8*%eO,i8**%q,align 8
store i8*%eR,i8**%r,align 8
%e0=call i8*@sml_alloc(i32 inreg 20)#0
%e1=getelementptr inbounds i8,i8*%e0,i64 -4
%e2=bitcast i8*%e1 to i32*
store i32 1342177296,i32*%e2,align 4
store i8*%e0,i8**%s,align 8
%e3=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%e4=bitcast i8*%e0 to i8**
store i8*%e3,i8**%e4,align 8
%e5=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%e6=getelementptr inbounds i8,i8*%e0,i64 8
%e7=bitcast i8*%e6 to i8**
store i8*%e5,i8**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e0,i64 16
%e9=bitcast i8*%e8 to i32*
store i32 3,i32*%e9,align 4
%fa=call i8*@sml_alloc(i32 inreg 20)#0
%fb=getelementptr inbounds i8,i8*%fa,i64 -4
%fc=bitcast i8*%fb to i32*
store i32 1342177296,i32*%fc,align 4
store i8*%fa,i8**%q,align 8
%fd=getelementptr inbounds i8,i8*%fa,i64 4
%fe=bitcast i8*%fd to i32*
store i32 0,i32*%fe,align 1
%ff=bitcast i8*%fa to i32*
store i32 9,i32*%ff,align 4
%fg=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%fh=getelementptr inbounds i8,i8*%fa,i64 8
%fi=bitcast i8*%fh to i8**
store i8*%fg,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fa,i64 16
%fk=bitcast i8*%fj to i32*
store i32 2,i32*%fk,align 4
%fl=call i8*@sml_alloc(i32 inreg 28)#0
%fm=getelementptr inbounds i8,i8*%fl,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 1342177304,i32*%fn,align 4
store i8*%fl,i8**%p,align 8
%fo=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%fp=bitcast i8*%fl to i8**
store i8*%fo,i8**%fp,align 8
%fq=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%fr=getelementptr inbounds i8,i8*%fl,i64 8
%fs=bitcast i8*%fr to i8**
store i8*%fq,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fl,i64 16
%fu=bitcast i8*%ft to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ag,i64 0,i32 2)to i8*),i8**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fl,i64 24
%fw=bitcast i8*%fv to i32*
store i32 7,i32*%fw,align 4
%fx=call i8*@sml_alloc(i32 inreg 20)#0
%fy=bitcast i8*%fx to i32*
%fz=getelementptr inbounds i8,i8*%fx,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177296,i32*%fA,align 4
%fB=getelementptr inbounds i8,i8*%fx,i64 4
%fC=bitcast i8*%fB to i32*
store i32 0,i32*%fC,align 1
store i32 3,i32*%fy,align 4
%fD=load i8*,i8**%p,align 8
%fE=getelementptr inbounds i8,i8*%fx,i64 8
%fF=bitcast i8*%fE to i8**
store i8*%fD,i8**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fx,i64 16
%fH=bitcast i8*%fG to i32*
store i32 2,i32*%fH,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%eW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%eX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%eY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%eZ)
store i8*%fx,i8**%y,align 8
%fI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fJ=getelementptr inbounds i8,i8*%fI,i64 16
%fK=bitcast i8*%fJ to i8*(i8*,i8*)**
%fL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fK,align 8
%fM=bitcast i8*%fI to i8**
%fN=load i8*,i8**%fM,align 8
store i8*%fN,i8**%z,align 8
%fO=call i8*@sml_alloc(i32 inreg 12)#0
%fP=getelementptr inbounds i8,i8*%fO,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177288,i32*%fQ,align 4
store i8*%fO,i8**%D,align 8
%fR=load i8*,i8**%B,align 8
%fS=bitcast i8*%fO to i8**
store i8*%fR,i8**%fS,align 8
%fT=getelementptr inbounds i8,i8*%fO,i64 8
%fU=bitcast i8*%fT to i32*
store i32 1,i32*%fU,align 4
%fV=call i8*@sml_alloc(i32 inreg 28)#0
%fW=getelementptr inbounds i8,i8*%fV,i64 -4
%fX=bitcast i8*%fW to i32*
store i32 1342177304,i32*%fX,align 4
%fY=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%fZ=bitcast i8*%fV to i8**
store i8*%fY,i8**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fV,i64 8
%f1=bitcast i8*%f0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_672 to void(...)*),void(...)**%f1,align 8
%f2=getelementptr inbounds i8,i8*%fV,i64 16
%f3=bitcast i8*%f2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_672 to void(...)*),void(...)**%f3,align 8
%f4=getelementptr inbounds i8,i8*%fV,i64 24
%f5=bitcast i8*%f4 to i32*
store i32 -2147483647,i32*%f5,align 4
%f6=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%f7=call fastcc i8*%fL(i8*inreg%f6,i8*inreg%fV)
%f8=getelementptr inbounds i8,i8*%f7,i64 16
%f9=bitcast i8*%f8 to i8*(i8*,i8*)**
%ga=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f9,align 8
%gb=bitcast i8*%f7 to i8**
%gc=load i8*,i8**%gb,align 8
store i8*%gc,i8**%F,align 8
%gd=call i8*@sml_alloc(i32 inreg 20)#0
%ge=getelementptr inbounds i8,i8*%gd,i64 -4
%gf=bitcast i8*%ge to i32*
store i32 1342177296,i32*%gf,align 4
store i8*%gd,i8**%z,align 8
%gg=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%gh=bitcast i8*%gd to i8**
store i8*%gg,i8**%gh,align 8
%gi=getelementptr inbounds i8,i8*%gd,i64 8
%gj=bitcast i8*%gi to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*),i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%gd,i64 16
%gl=bitcast i8*%gk to i32*
store i32 3,i32*%gl,align 4
%gm=call i8*@sml_alloc(i32 inreg 20)#0
%gn=getelementptr inbounds i8,i8*%gm,i64 -4
%go=bitcast i8*%gn to i32*
store i32 1342177296,i32*%go,align 4
store i8*%gm,i8**%D,align 8
%gp=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%gq=bitcast i8*%gm to i8**
store i8*%gp,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gm,i64 8
%gs=bitcast i8*%gr to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ae,i64 0,i32 2)to i8*),i8**%gs,align 8
%gt=getelementptr inbounds i8,i8*%gm,i64 16
%gu=bitcast i8*%gt to i32*
store i32 3,i32*%gu,align 4
%gv=call i8*@sml_alloc(i32 inreg 20)#0
%gw=getelementptr inbounds i8,i8*%gv,i64 -4
%gx=bitcast i8*%gw to i32*
store i32 1342177296,i32*%gx,align 4
store i8*%gv,i8**%x,align 8
%gy=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%gz=bitcast i8*%gv to i8**
store i8*%gy,i8**%gz,align 8
%gA=getelementptr inbounds i8,i8*%gv,i64 8
%gB=bitcast i8*%gA to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ag,i64 0,i32 2)to i8*),i8**%gB,align 8
%gC=getelementptr inbounds i8,i8*%gv,i64 16
%gD=bitcast i8*%gC to i32*
store i32 3,i32*%gD,align 4
%gE=call i8*@sml_alloc(i32 inreg 20)#0
%gF=getelementptr inbounds i8,i8*%gE,i64 -4
%gG=bitcast i8*%gF to i32*
store i32 1342177296,i32*%gG,align 4
store i8*%gE,i8**%y,align 8
%gH=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%gI=bitcast i8*%gE to i8**
store i8*%gH,i8**%gI,align 8
%gJ=getelementptr inbounds i8,i8*%gE,i64 8
%gK=bitcast i8*%gJ to i8**
store i8*null,i8**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gE,i64 16
%gM=bitcast i8*%gL to i32*
store i32 3,i32*%gM,align 4
%gN=call i8*@sml_alloc(i32 inreg 20)#0
%gO=getelementptr inbounds i8,i8*%gN,i64 -4
%gP=bitcast i8*%gO to i32*
store i32 1342177296,i32*%gP,align 4
store i8*%gN,i8**%x,align 8
%gQ=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%gR=bitcast i8*%gN to i8**
store i8*%gQ,i8**%gR,align 8
%gS=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%gT=getelementptr inbounds i8,i8*%gN,i64 8
%gU=bitcast i8*%gT to i8**
store i8*%gS,i8**%gU,align 8
%gV=getelementptr inbounds i8,i8*%gN,i64 16
%gW=bitcast i8*%gV to i32*
store i32 3,i32*%gW,align 4
%gX=call i8*@sml_alloc(i32 inreg 20)#0
%gY=getelementptr inbounds i8,i8*%gX,i64 -4
%gZ=bitcast i8*%gY to i32*
store i32 1342177296,i32*%gZ,align 4
%g0=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%g1=bitcast i8*%gX to i8**
store i8*%g0,i8**%g1,align 8
%g2=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%g3=getelementptr inbounds i8,i8*%gX,i64 8
%g4=bitcast i8*%g3 to i8**
store i8*%g2,i8**%g4,align 8
%g5=getelementptr inbounds i8,i8*%gX,i64 16
%g6=bitcast i8*%g5 to i32*
store i32 3,i32*%g6,align 4
%g7=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%g8=call fastcc i8*%ga(i8*inreg%g7,i8*inreg%gX)
store i8*%g8,i8**%x,align 8
%g9=call fastcc i8*@_SMLFN12RecordLayout19newComputationAccumE(i32 inreg 0)
store i8*%g9,i8**%z,align 8
%ha=call i8*@sml_alloc(i32 inreg 8)#0
%hb=getelementptr inbounds i8,i8*%ha,i64 -4
%hc=bitcast i8*%hb to i32*
store i32 805306376,i32*%hc,align 4
store i8*%ha,i8**%D,align 8
%hd=bitcast i8*%ha to i64*
store i64 0,i64*%hd,align 1
%he=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%hf=load i8*,i8**%D,align 8
%hg=bitcast i8*%hf to i8**
call void@sml_write(i8*inreg%hf,i8**inreg%hg,i8*inreg%he)#0
%hh=call i8*@sml_alloc(i32 inreg 20)#0
%hi=getelementptr inbounds i8,i8*%hh,i64 -4
%hj=bitcast i8*%hi to i32*
store i32 1342177296,i32*%hj,align 4
store i8*%hh,i8**%y,align 8
%hk=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%hl=bitcast i8*%hh to i8**
store i8*%hk,i8**%hl,align 8
%hm=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%hn=getelementptr inbounds i8,i8*%hh,i64 8
%ho=bitcast i8*%hn to i8**
store i8*%hm,i8**%ho,align 8
%hp=getelementptr inbounds i8,i8*%hh,i64 16
%hq=bitcast i8*%hp to i32*
store i32 3,i32*%hq,align 4
%hr=call fastcc i8*@_SMLLN18ClosureConversion29makeTupleE_611(i8*inreg%hh)
%hs=getelementptr inbounds i8,i8*%hr,i64 16
%ht=bitcast i8*%hs to i8*(i8*,i8*)**
%hu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ht,align 8
%hv=bitcast i8*%hr to i8**
%hw=load i8*,i8**%hv,align 8
%hx=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%hy=call fastcc i8*%hu(i8*inreg%hw,i8*inreg%hx)
%hz=getelementptr inbounds i8,i8*%hy,i64 16
%hA=bitcast i8*%hz to i8*(i8*,i8*)**
%hB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hA,align 8
%hC=bitcast i8*%hy to i8**
%hD=load i8*,i8**%hC,align 8
%hE=load i8*,i8**%A,align 8
%hF=call fastcc i8*%hB(i8*inreg%hD,i8*inreg%hE)
store i8*%hF,i8**%x,align 8
%hG=bitcast i8**%y to i8***
%hH=load i8**,i8***%hG,align 8
store i8*null,i8**%y,align 8
%hI=load i8*,i8**%hH,align 8
%hJ=call fastcc i8*@_SMLFN12RecordLayout12extractDeclsE(i8*inreg%hI)
%hK=icmp eq i8*%hJ,null
br i1%hK,label%h5,label%hL
hL:
store i8*null,i8**%A,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%I,align 8
%hM=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%hM,i8**%x,align 8
%hN=call i8*@sml_alloc(i32 inreg 28)#0
%hO=getelementptr inbounds i8,i8*%hN,i64 -4
%hP=bitcast i8*%hO to i32*
store i32 1342177304,i32*%hP,align 4
store i8*%hN,i8**%y,align 8
%hQ=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%hR=bitcast i8*%hN to i8**
store i8*%hQ,i8**%hR,align 8
%hS=getelementptr inbounds i8,i8*%hN,i64 8
%hT=bitcast i8*%hS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@a4,i64 0,i32 2,i64 0),i8**%hT,align 8
%hU=getelementptr inbounds i8,i8*%hN,i64 16
%hV=bitcast i8*%hU to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a5,i64 0,i32 2,i64 0),i8**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hN,i64 24
%hX=bitcast i8*%hW to i32*
store i32 7,i32*%hX,align 4
%hY=call i8*@sml_alloc(i32 inreg 60)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177336,i32*%h0,align 4
%h1=getelementptr inbounds i8,i8*%hY,i64 56
%h2=bitcast i8*%h1 to i32*
store i32 1,i32*%h2,align 4
%h3=load i8*,i8**%y,align 8
%h4=bitcast i8*%hY to i8**
store i8*%h3,i8**%h4,align 8
call void@sml_raise(i8*inreg%hY)#1
unreachable
h5:
%h6=load i8*,i8**%x,align 8
%h7=getelementptr inbounds i8,i8*%h6,i64 8
%h8=bitcast i8*%h7 to i8**
%h9=load i8*,i8**%h8,align 8
%ia=icmp eq i8*%h9,null
br i1%ia,label%ib,label%ic
ib:
store i8*null,i8**%A,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%E,align 8
br label%oz
ic:
%id=bitcast i8*%h9 to i8**
%ie=bitcast i8*%h9 to i8***
%if=load i8**,i8***%ie,align 8
%ig=load i8*,i8**%if,align 8
store i8*%ig,i8**%y,align 8
%ih=load i8*,i8**%id,align 8
%ii=getelementptr inbounds i8,i8*%ih,i64 8
%ij=bitcast i8*%ii to i8**
%ik=load i8*,i8**%ij,align 8
store i8*%ik,i8**%D,align 8
%il=getelementptr inbounds i8,i8*%h9,i64 8
%im=bitcast i8*%il to i8**
%in=load i8*,i8**%im,align 8
%io=icmp eq i8*%in,null
br i1%io,label%ip,label%oy
ip:
%iq=getelementptr inbounds i8,i8*%h6,i64 48
%ir=bitcast i8*%iq to i8**
%is=load i8*,i8**%ir,align 8
store i8*%is,i8**%z,align 8
%it=call i8*@sml_alloc(i32 inreg 36)#0
%iu=getelementptr inbounds i8,i8*%it,i64 -4
%iv=bitcast i8*%iu to i32*
store i32 1342177312,i32*%iv,align 4
%iw=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ix=bitcast i8*%it to i8**
store i8*%iw,i8**%ix,align 8
%iy=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%iz=getelementptr inbounds i8,i8*%it,i64 8
%iA=bitcast i8*%iz to i8**
store i8*%iy,i8**%iA,align 8
%iB=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%iC=getelementptr inbounds i8,i8*%it,i64 16
%iD=bitcast i8*%iC to i8**
store i8*%iB,i8**%iD,align 8
%iE=load i8*,i8**%A,align 8
%iF=getelementptr inbounds i8,i8*%it,i64 24
%iG=bitcast i8*%iF to i8**
store i8*%iE,i8**%iG,align 8
%iH=getelementptr inbounds i8,i8*%it,i64 32
%iI=bitcast i8*%iH to i32*
store i32 15,i32*%iI,align 4
%iJ=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iJ)
%iK=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iK)
%iL=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iL)
%iM=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iM)
%iN=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iN)
%iO=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iO)
%iP=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iP)
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%it,i8**%i,align 8
%iQ=load atomic i32,i32*@sml_check_flag unordered,align 4
%iR=icmp eq i32%iQ,0
br i1%iR,label%i5,label%iS
iS:
call void@sml_check(i32 inreg%iQ)
%iT=load i8*,i8**%i,align 8
%iU=bitcast i8*%iT to i8**
%iV=load i8*,i8**%iU,align 8
%iW=getelementptr inbounds i8,i8*%iT,i64 8
%iX=bitcast i8*%iW to i8**
%iY=load i8*,i8**%iX,align 8
%iZ=getelementptr inbounds i8,i8*%iT,i64 16
%i0=bitcast i8*%iZ to i8**
%i1=load i8*,i8**%i0,align 8
%i2=getelementptr inbounds i8,i8*%iT,i64 24
%i3=bitcast i8*%i2 to i8**
%i4=load i8*,i8**%i3,align 8
br label%i5
i5:
%i6=phi i8*[%i4,%iS],[%iE,%ip]
%i7=phi i8*[%i1,%iS],[%iB,%ip]
%i8=phi i8*[%iY,%iS],[%iy,%ip]
%i9=phi i8*[%iV,%iS],[%iw,%ip]
store i8*%i9,i8**%j,align 8
store i8*%i8,i8**%i,align 8
store i8*%i7,i8**%k,align 8
store i8*%i6,i8**%l,align 8
%ja=call i8*@sml_alloc(i32 inreg 20)#0
%jb=getelementptr inbounds i8,i8*%ja,i64 -4
%jc=bitcast i8*%jb to i32*
store i32 1342177296,i32*%jc,align 4
store i8*%ja,i8**%m,align 8
%jd=bitcast i8*%ja to i64*
store i64 0,i64*%jd,align 4
%je=load i8*,i8**%j,align 8
%jf=getelementptr inbounds i8,i8*%ja,i64 8
%jg=bitcast i8*%jf to i8**
store i8*%je,i8**%jg,align 8
%jh=getelementptr inbounds i8,i8*%ja,i64 16
%ji=bitcast i8*%jh to i32*
store i32 2,i32*%ji,align 4
%jj=call i8*@sml_alloc(i32 inreg 20)#0
%jk=getelementptr inbounds i8,i8*%jj,i64 -4
%jl=bitcast i8*%jk to i32*
store i32 1342177296,i32*%jl,align 4
store i8*%jj,i8**%n,align 8
%jm=getelementptr inbounds i8,i8*%jj,i64 4
%jn=bitcast i8*%jm to i32*
store i32 0,i32*%jn,align 1
%jo=bitcast i8*%jj to i32*
store i32 5,i32*%jo,align 4
%jp=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%jq=getelementptr inbounds i8,i8*%jj,i64 8
%jr=bitcast i8*%jq to i8**
store i8*%jp,i8**%jr,align 8
%js=getelementptr inbounds i8,i8*%jj,i64 16
%jt=bitcast i8*%js to i32*
store i32 2,i32*%jt,align 4
%ju=call i8*@sml_alloc(i32 inreg 20)#0
%jv=getelementptr inbounds i8,i8*%ju,i64 -4
%jw=bitcast i8*%jv to i32*
store i32 1342177296,i32*%jw,align 4
store i8*%ju,i8**%o,align 8
%jx=bitcast i8*%ju to i64*
store i64 0,i64*%jx,align 4
%jy=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%jz=getelementptr inbounds i8,i8*%ju,i64 8
%jA=bitcast i8*%jz to i8**
store i8*%jy,i8**%jA,align 8
%jB=getelementptr inbounds i8,i8*%ju,i64 16
%jC=bitcast i8*%jB to i32*
store i32 2,i32*%jC,align 4
%jD=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%jD,i8**%m,align 8
%jE=call i8*@sml_alloc(i32 inreg 44)#0
%jF=getelementptr inbounds i8,i8*%jE,i64 -4
%jG=bitcast i8*%jF to i32*
store i32 1342177320,i32*%jG,align 4
store i8*%jE,i8**%n,align 8
%jH=getelementptr inbounds i8,i8*%jE,i64 4
%jI=bitcast i8*%jH to i32*
store i32 0,i32*%jI,align 1
%jJ=bitcast i8*%jE to i32*
store i32 1,i32*%jJ,align 4
%jK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jL=getelementptr inbounds i8,i8*%jE,i64 8
%jM=bitcast i8*%jL to i8**
store i8*%jK,i8**%jM,align 8
%jN=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%jO=getelementptr inbounds i8,i8*%jE,i64 16
%jP=bitcast i8*%jO to i8**
store i8*%jN,i8**%jP,align 8
%jQ=load i8*,i8**%l,align 8
%jR=getelementptr inbounds i8,i8*%jE,i64 24
%jS=bitcast i8*%jR to i8**
store i8*%jQ,i8**%jS,align 8
%jT=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%jU=getelementptr inbounds i8,i8*%jE,i64 32
%jV=bitcast i8*%jU to i8**
store i8*%jT,i8**%jV,align 8
%jW=getelementptr inbounds i8,i8*%jE,i64 40
%jX=bitcast i8*%jW to i32*
store i32 30,i32*%jX,align 4
%jY=call i8*@sml_alloc(i32 inreg 20)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177296,i32*%j0,align 4
store i8*%jY,i8**%i,align 8
%j1=getelementptr inbounds i8,i8*%jY,i64 4
%j2=bitcast i8*%j1 to i32*
store i32 0,i32*%j2,align 1
%j3=bitcast i8*%jY to i32*
store i32 1,i32*%j3,align 4
%j4=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%j5=getelementptr inbounds i8,i8*%jY,i64 8
%j6=bitcast i8*%j5 to i8**
store i8*%j4,i8**%j6,align 8
%j7=getelementptr inbounds i8,i8*%jY,i64 16
%j8=bitcast i8*%j7 to i32*
store i32 2,i32*%j8,align 4
%j9=call i8*@sml_alloc(i32 inreg 28)#0
%ka=getelementptr inbounds i8,i8*%j9,i64 -4
%kb=bitcast i8*%ka to i32*
store i32 1342177304,i32*%kb,align 4
%kc=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kd=bitcast i8*%j9 to i8**
store i8*%kc,i8**%kd,align 8
%ke=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kf=getelementptr inbounds i8,i8*%j9,i64 8
%kg=bitcast i8*%kf to i8**
store i8*%ke,i8**%kg,align 8
%kh=load i8*,i8**%l,align 8
%ki=getelementptr inbounds i8,i8*%j9,i64 16
%kj=bitcast i8*%ki to i8**
store i8*%kh,i8**%kj,align 8
%kk=getelementptr inbounds i8,i8*%j9,i64 24
%kl=bitcast i8*%kk to i32*
store i32 7,i32*%kl,align 4
%km=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%km)
%kn=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kn)
%ko=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ko)
%kp=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kp)
%kq=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kq)
%kr=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kr)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%j9,i8**%c,align 8
%ks=load atomic i32,i32*@sml_check_flag unordered,align 4
%kt=icmp eq i32%ks,0
br i1%kt,label%ky,label%ku
ku:
call void@sml_check(i32 inreg%ks)
%kv=bitcast i8**%c to i8***
%kw=load i8**,i8***%kv,align 8
%kx=load i8*,i8**%kw,align 8
br label%ky
ky:
%kz=phi i8*[%kx,%ku],[%kc,%i5]
%kA=phi i8**[%kw,%ku],[%kd,%i5]
store i8*%kz,i8**%d,align 8
%kB=getelementptr inbounds i8*,i8**%kA,i64 1
%kC=load i8*,i8**%kB,align 8
store i8*%kC,i8**%e,align 8
%kD=call fastcc i8*@_SMLLN18ClosureConversion29primapplyE_508(i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@J,i64 0,i32 2)to i8*))
%kE=getelementptr inbounds i8,i8*%kD,i64 16
%kF=bitcast i8*%kE to i8*(i8*,i8*)**
%kG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kF,align 8
%kH=bitcast i8*%kD to i8**
%kI=load i8*,i8**%kH,align 8
store i8*%kI,i8**%h,align 8
%kJ=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%kJ,i8**%f,align 8
store i8*%kJ,i8**%g,align 8
%kK=call i8*@sml_alloc(i32 inreg 20)#0
%kL=getelementptr inbounds i8,i8*%kK,i64 -4
%kM=bitcast i8*%kL to i32*
store i32 1342177296,i32*%kM,align 4
%kN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kO=bitcast i8*%kK to i8**
store i8*%kN,i8**%kO,align 8
%kP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kQ=getelementptr inbounds i8,i8*%kK,i64 8
%kR=bitcast i8*%kQ to i8**
store i8*%kP,i8**%kR,align 8
%kS=getelementptr inbounds i8,i8*%kK,i64 16
%kT=bitcast i8*%kS to i32*
store i32 3,i32*%kT,align 4
%kU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kV=call fastcc i8*%kG(i8*inreg%kU,i8*inreg%kK)
%kW=getelementptr inbounds i8,i8*%kV,i64 16
%kX=bitcast i8*%kW to i8*(i8*,i8*)**
%kY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kX,align 8
%kZ=bitcast i8*%kV to i8**
%k0=load i8*,i8**%kZ,align 8
store i8*%k0,i8**%f,align 8
%k1=call i8*@sml_alloc(i32 inreg 20)#0
%k2=getelementptr inbounds i8,i8*%k1,i64 -4
%k3=bitcast i8*%k2 to i32*
store i32 1342177296,i32*%k3,align 4
%k4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%k5=bitcast i8*%k1 to i8**
store i8*%k4,i8**%k5,align 8
%k6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%k7=getelementptr inbounds i8,i8*%k1,i64 8
%k8=bitcast i8*%k7 to i8**
store i8*%k6,i8**%k8,align 8
%k9=getelementptr inbounds i8,i8*%k1,i64 16
%la=bitcast i8*%k9 to i32*
store i32 3,i32*%la,align 4
%lb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lc=call fastcc i8*%kY(i8*inreg%lb,i8*inreg%k1)
%ld=getelementptr inbounds i8,i8*%lc,i64 16
%le=bitcast i8*%ld to i8*(i8*,i8*)**
%lf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%le,align 8
%lg=bitcast i8*%lc to i8**
%lh=load i8*,i8**%lg,align 8
%li=load i8*,i8**%c,align 8
%lj=getelementptr inbounds i8,i8*%li,i64 16
%lk=bitcast i8*%lj to i8**
%ll=load i8*,i8**%lk,align 8
%lm=call fastcc i8*%lf(i8*inreg%lh,i8*inreg%ll)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%km)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kn)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ko)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kp)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kq)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kr)
store i8*%lm,i8**%i,align 8
%ln=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%ln,i8**%k,align 8
%lo=call i8*@sml_alloc(i32 inreg 20)#0
%lp=getelementptr inbounds i8,i8*%lo,i64 -4
%lq=bitcast i8*%lp to i32*
store i32 1342177296,i32*%lq,align 4
store i8*%lo,i8**%m,align 8
%lr=bitcast i8*%lo to i64*
store i64 0,i64*%lr,align 4
%ls=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lt=getelementptr inbounds i8,i8*%lo,i64 8
%lu=bitcast i8*%lt to i8**
store i8*%ls,i8**%lu,align 8
%lv=getelementptr inbounds i8,i8*%lo,i64 16
%lw=bitcast i8*%lv to i32*
store i32 2,i32*%lw,align 4
%lx=call i8*@sml_alloc(i32 inreg 20)#0
%ly=getelementptr inbounds i8,i8*%lx,i64 -4
%lz=bitcast i8*%ly to i32*
store i32 1342177296,i32*%lz,align 4
store i8*%lx,i8**%j,align 8
%lA=getelementptr inbounds i8,i8*%lx,i64 4
%lB=bitcast i8*%lA to i32*
store i32 0,i32*%lB,align 1
%lC=bitcast i8*%lx to i32*
store i32 5,i32*%lC,align 4
%lD=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%lE=getelementptr inbounds i8,i8*%lx,i64 8
%lF=bitcast i8*%lE to i8**
store i8*%lD,i8**%lF,align 8
%lG=getelementptr inbounds i8,i8*%lx,i64 16
%lH=bitcast i8*%lG to i32*
store i32 2,i32*%lH,align 4
%lI=call i8*@sml_alloc(i32 inreg 20)#0
%lJ=getelementptr inbounds i8,i8*%lI,i64 -4
%lK=bitcast i8*%lJ to i32*
store i32 1342177296,i32*%lK,align 4
store i8*%lI,i8**%m,align 8
%lL=bitcast i8*%lI to i64*
store i64 0,i64*%lL,align 4
%lM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lN=getelementptr inbounds i8,i8*%lI,i64 8
%lO=bitcast i8*%lN to i8**
store i8*%lM,i8**%lO,align 8
%lP=getelementptr inbounds i8,i8*%lI,i64 16
%lQ=bitcast i8*%lP to i32*
store i32 2,i32*%lQ,align 4
%lR=call i8*@sml_alloc(i32 inreg 44)#0
%lS=getelementptr inbounds i8,i8*%lR,i64 -4
%lT=bitcast i8*%lS to i32*
store i32 1342177320,i32*%lT,align 4
store i8*%lR,i8**%j,align 8
%lU=getelementptr inbounds i8,i8*%lR,i64 4
%lV=bitcast i8*%lU to i32*
store i32 0,i32*%lV,align 1
%lW=bitcast i8*%lR to i32*
store i32 1,i32*%lW,align 4
%lX=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lY=getelementptr inbounds i8,i8*%lR,i64 8
%lZ=bitcast i8*%lY to i8**
store i8*%lX,i8**%lZ,align 8
%l0=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%l1=getelementptr inbounds i8,i8*%lR,i64 16
%l2=bitcast i8*%l1 to i8**
store i8*%l0,i8**%l2,align 8
%l3=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%l4=getelementptr inbounds i8,i8*%lR,i64 24
%l5=bitcast i8*%l4 to i8**
store i8*%l3,i8**%l5,align 8
%l6=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%l7=getelementptr inbounds i8,i8*%lR,i64 32
%l8=bitcast i8*%l7 to i8**
store i8*%l6,i8**%l8,align 8
%l9=getelementptr inbounds i8,i8*%lR,i64 40
%ma=bitcast i8*%l9 to i32*
store i32 30,i32*%ma,align 4
%mb=call i8*@sml_alloc(i32 inreg 20)#0
%mc=bitcast i8*%mb to i32*
%md=getelementptr inbounds i8,i8*%mb,i64 -4
%me=bitcast i8*%md to i32*
store i32 1342177296,i32*%me,align 4
%mf=getelementptr inbounds i8,i8*%mb,i64 4
%mg=bitcast i8*%mf to i32*
store i32 0,i32*%mg,align 1
store i32 1,i32*%mc,align 4
%mh=load i8*,i8**%j,align 8
%mi=getelementptr inbounds i8,i8*%mb,i64 8
%mj=bitcast i8*%mi to i8**
store i8*%mh,i8**%mj,align 8
%mk=getelementptr inbounds i8,i8*%mb,i64 16
%ml=bitcast i8*%mk to i32*
store i32 2,i32*%ml,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iL)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iN)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iO)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iP)
store i8*%mb,i8**%y,align 8
%mm=call i8*@sml_alloc(i32 inreg 20)#0
%mn=getelementptr inbounds i8,i8*%mm,i64 -4
%mo=bitcast i8*%mn to i32*
store i32 1342177296,i32*%mo,align 4
store i8*%mm,i8**%z,align 8
%mp=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%mq=bitcast i8*%mm to i8**
store i8*%mp,i8**%mq,align 8
%mr=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%ms=getelementptr inbounds i8,i8*%mm,i64 8
%mt=bitcast i8*%ms to i8**
store i8*%mr,i8**%mt,align 8
%mu=getelementptr inbounds i8,i8*%mm,i64 16
%mv=bitcast i8*%mu to i32*
store i32 3,i32*%mv,align 4
%mw=call i8*@sml_alloc(i32 inreg 20)#0
%mx=getelementptr inbounds i8,i8*%mw,i64 -4
%my=bitcast i8*%mx to i32*
store i32 1342177296,i32*%my,align 4
%mz=load i8*,i8**%z,align 8
%mA=bitcast i8*%mw to i8**
store i8*%mz,i8**%mA,align 8
%mB=getelementptr inbounds i8,i8*%mw,i64 8
%mC=bitcast i8*%mB to i8**
store i8*null,i8**%mC,align 8
%mD=getelementptr inbounds i8,i8*%mw,i64 16
%mE=bitcast i8*%mD to i32*
store i32 3,i32*%mE,align 4
store i8*%mz,i8**%y,align 8
store i8*null,i8**%z,align 8
%mF=call i8*@sml_alloc(i32 inreg 20)#0
%mG=getelementptr inbounds i8,i8*%mF,i64 -4
%mH=bitcast i8*%mG to i32*
store i32 1342177296,i32*%mH,align 4
%mI=load i8*,i8**%y,align 8
%mJ=bitcast i8*%mF to i8**
store i8*%mI,i8**%mJ,align 8
%mK=load i8*,i8**%z,align 8
%mL=getelementptr inbounds i8,i8*%mF,i64 8
%mM=bitcast i8*%mL to i8**
store i8*%mK,i8**%mM,align 8
%mN=getelementptr inbounds i8,i8*%mF,i64 16
%mO=bitcast i8*%mN to i32*
store i32 3,i32*%mO,align 4
store i8*%mF,i8**%y,align 8
%mP=bitcast i8**%x to i8***
%mQ=load i8**,i8***%mP,align 8
%mR=load i8*,i8**%mQ,align 8
store i8*%mR,i8**%z,align 8
%mS=getelementptr inbounds i8*,i8**%mQ,i64 2
%mT=bitcast i8**%mS to i32*
%mU=load i32,i32*%mT,align 4
%mV=getelementptr inbounds i8*,i8**%mQ,i64 3
%mW=load i8*,i8**%mV,align 8
store i8*%mW,i8**%D,align 8
%mX=getelementptr inbounds i8*,i8**%mQ,i64 4
%mY=bitcast i8**%mX to i32*
%mZ=load i32,i32*%mY,align 4
%m0=getelementptr inbounds i8*,i8**%mQ,i64 5
%m1=load i8*,i8**%m0,align 8
store i8*%m1,i8**%F,align 8
store i8*null,i8**%x,align 8
%m2=getelementptr inbounds i8*,i8**%mQ,i64 6
%m3=load i8*,i8**%m2,align 8
store i8*%m3,i8**%G,align 8
%m4=call i8*@sml_alloc(i32 inreg 60)#0
%m5=getelementptr inbounds i8,i8*%m4,i64 -4
%m6=bitcast i8*%m5 to i32*
store i32 1342177336,i32*%m6,align 4
store i8*%m4,i8**%x,align 8
%m7=getelementptr inbounds i8,i8*%m4,i64 20
call void@llvm.memset.p0i8.i32(i8*%m7,i8 0,i32 20,i1 false)
%m8=bitcast i8*%m4 to i8**
%m9=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
store i8*%m9,i8**%m8,align 8
%na=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%nb=getelementptr inbounds i8,i8*%m4,i64 8
%nc=bitcast i8*%nb to i8**
store i8*%na,i8**%nc,align 8
%nd=getelementptr inbounds i8,i8*%m4,i64 16
%ne=bitcast i8*%nd to i32*
store i32%mU,i32*%ne,align 4
%nf=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%ng=getelementptr inbounds i8,i8*%m4,i64 24
%nh=bitcast i8*%ng to i8**
store i8*%nf,i8**%nh,align 8
%ni=getelementptr inbounds i8,i8*%m4,i64 32
%nj=bitcast i8*%ni to i32*
store i32%mZ,i32*%nj,align 4
%nk=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%nl=getelementptr inbounds i8,i8*%m4,i64 40
%nm=bitcast i8*%nl to i8**
store i8*%nk,i8**%nm,align 8
%nn=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%no=getelementptr inbounds i8,i8*%m4,i64 48
%np=bitcast i8*%no to i8**
store i8*%nn,i8**%np,align 8
%nq=getelementptr inbounds i8,i8*%m4,i64 56
%nr=bitcast i8*%nq to i32*
store i32 107,i32*%nr,align 4
%ns=call i8*@sml_alloc(i32 inreg 20)#0
%nt=getelementptr inbounds i8,i8*%ns,i64 -4
%nu=bitcast i8*%nt to i32*
store i32 1342177296,i32*%nu,align 4
%nv=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%nw=bitcast i8*%ns to i8**
store i8*%nv,i8**%nw,align 8
%nx=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%ny=getelementptr inbounds i8,i8*%ns,i64 8
%nz=bitcast i8*%ny to i8**
store i8*%nx,i8**%nz,align 8
%nA=getelementptr inbounds i8,i8*%ns,i64 16
%nB=bitcast i8*%nA to i32*
store i32 3,i32*%nB,align 4
%nC=call fastcc i8*@_SMLLN18ClosureConversion211allocRecordE_547(i8*inreg%ns)
%nD=getelementptr inbounds i8,i8*%nC,i64 16
%nE=bitcast i8*%nD to i8*(i8*,i8*)**
%nF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nE,align 8
%nG=bitcast i8*%nC to i8**
%nH=load i8*,i8**%nG,align 8
%nI=load i8*,i8**%x,align 8
%nJ=call fastcc i8*%nF(i8*inreg%nH,i8*inreg%nI)
%nK=bitcast i8*%nJ to i8**
%nL=load i8*,i8**%nK,align 8
store i8*%nL,i8**%y,align 8
%nM=getelementptr inbounds i8,i8*%nJ,i64 8
%nN=bitcast i8*%nM to i8**
%nO=load i8*,i8**%nN,align 8
store i8*%nO,i8**%z,align 8
%nP=load i8*,i8**%x,align 8
%nQ=getelementptr inbounds i8,i8*%nP,i64 48
%nR=bitcast i8*%nQ to i8**
%nS=load i8*,i8**%nR,align 8
store i8*%nS,i8**%x,align 8
%nT=call i8*@sml_alloc(i32 inreg 44)#0
%nU=getelementptr inbounds i8,i8*%nT,i64 -4
%nV=bitcast i8*%nU to i32*
store i32 1342177320,i32*%nV,align 4
store i8*%nT,i8**%B,align 8
%nW=getelementptr inbounds i8,i8*%nT,i64 4
%nX=bitcast i8*%nW to i32*
store i32 0,i32*%nX,align 1
%nY=bitcast i8*%nT to i32*
store i32 1,i32*%nY,align 4
%nZ=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%n0=getelementptr inbounds i8,i8*%nT,i64 8
%n1=bitcast i8*%n0 to i8**
store i8*%nZ,i8**%n1,align 8
%n2=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%n3=getelementptr inbounds i8,i8*%nT,i64 16
%n4=bitcast i8*%n3 to i8**
store i8*%n2,i8**%n4,align 8
%n5=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%n6=getelementptr inbounds i8,i8*%nT,i64 24
%n7=bitcast i8*%n6 to i8**
store i8*%n5,i8**%n7,align 8
%n8=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%n9=getelementptr inbounds i8,i8*%nT,i64 32
%oa=bitcast i8*%n9 to i8**
store i8*%n8,i8**%oa,align 8
%ob=getelementptr inbounds i8,i8*%nT,i64 40
%oc=bitcast i8*%ob to i32*
store i32 30,i32*%oc,align 4
%od=call i8*@sml_alloc(i32 inreg 20)#0
%oe=getelementptr inbounds i8,i8*%od,i64 -4
%of=bitcast i8*%oe to i32*
store i32 1342177296,i32*%of,align 4
store i8*%od,i8**%x,align 8
%og=getelementptr inbounds i8,i8*%od,i64 4
%oh=bitcast i8*%og to i32*
store i32 0,i32*%oh,align 1
%oi=bitcast i8*%od to i32*
store i32 1,i32*%oi,align 4
%oj=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%ok=getelementptr inbounds i8,i8*%od,i64 8
%ol=bitcast i8*%ok to i8**
store i8*%oj,i8**%ol,align 8
%om=getelementptr inbounds i8,i8*%od,i64 16
%on=bitcast i8*%om to i32*
store i32 2,i32*%on,align 4
%oo=call i8*@sml_alloc(i32 inreg 20)#0
%op=getelementptr inbounds i8,i8*%oo,i64 -4
%oq=bitcast i8*%op to i32*
store i32 1342177296,i32*%oq,align 4
%or=load i8*,i8**%y,align 8
%os=bitcast i8*%oo to i8**
store i8*%or,i8**%os,align 8
%ot=load i8*,i8**%x,align 8
%ou=getelementptr inbounds i8,i8*%oo,i64 8
%ov=bitcast i8*%ou to i8**
store i8*%ot,i8**%ov,align 8
%ow=getelementptr inbounds i8,i8*%oo,i64 16
%ox=bitcast i8*%ow to i32*
store i32 3,i32*%ox,align 4
ret i8*%oo
oy:
store i8*null,i8**%A,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%D,align 8
br label%oz
oz:
store i8*null,i8**%I,align 8
%oA=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%oA,i8**%x,align 8
%oB=call i8*@sml_alloc(i32 inreg 28)#0
%oC=getelementptr inbounds i8,i8*%oB,i64 -4
%oD=bitcast i8*%oC to i32*
store i32 1342177304,i32*%oD,align 4
store i8*%oB,i8**%y,align 8
%oE=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%oF=bitcast i8*%oB to i8**
store i8*%oE,i8**%oF,align 8
%oG=getelementptr inbounds i8,i8*%oB,i64 8
%oH=bitcast i8*%oG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@Z,i64 0,i32 2,i64 0),i8**%oH,align 8
%oI=getelementptr inbounds i8,i8*%oB,i64 16
%oJ=bitcast i8*%oI to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@aa,i64 0,i32 2,i64 0),i8**%oJ,align 8
%oK=getelementptr inbounds i8,i8*%oB,i64 24
%oL=bitcast i8*%oK to i32*
store i32 7,i32*%oL,align 4
%oM=call i8*@sml_alloc(i32 inreg 60)#0
%oN=getelementptr inbounds i8,i8*%oM,i64 -4
%oO=bitcast i8*%oN to i32*
store i32 1342177336,i32*%oO,align 4
%oP=getelementptr inbounds i8,i8*%oM,i64 56
%oQ=bitcast i8*%oP to i32*
store i32 1,i32*%oQ,align 4
%oR=load i8*,i8**%y,align 8
%oS=bitcast i8*%oM to i8**
store i8*%oR,i8**%oS,align 8
call void@sml_raise(i8*inreg%oM)#1
unreachable
}
define internal fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_684(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion217makeClosureRecordE_683 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion217makeClosureRecordE_683 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_685(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion217makeClosureRecordE_684 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion217makeClosureRecordE_684 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_689(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=load i8*,i8**@_SMLZN15SingletonTyEnv28emptyEnvE,align 8
%j=call fastcc i8*@_SMLFN15SingletonTyEnv27findTagE(i8*inreg%i)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=load i8*,i8**%b,align 8
%q=call fastcc i8*%m(i8*inreg%o,i8*inreg%p)
store i8*%q,i8**%c,align 8
%r=load i8*,i8**@_SMLZN15SingletonTyEnv28emptyEnvE,align 8
%s=call fastcc i8*@_SMLFN15SingletonTyEnv29constSizeE(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%b,align 8
%z=call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
%A=icmp eq i8*%z,null
br i1%A,label%B,label%V
B:
store i8*null,i8**%c,align 8
%C=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%C,i8**%b,align 8
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i8*%D,i8**%c,align 8
%G=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@ab,i64 0,i32 2,i64 0),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@al,i64 0,i32 2,i64 0),i8**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 60)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177336,i32*%Q,align 4
%R=getelementptr inbounds i8,i8*%O,i64 56
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%O to i8**
store i8*%T,i8**%U,align 8
call void@sml_raise(i8*inreg%O)#1
unreachable
V:
%W=bitcast i8*%z to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%d,align 8
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%c,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=load i8*,i8**%b,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%Y,i64 24
%ak=bitcast i8*%aj to i32*
store i32 7,i32*%ak,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLL10selectExps_702(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
%l=bitcast i8*%b to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%b,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%b,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%b,i64 24
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%b,i64 32
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%g,align 8
%z=getelementptr inbounds i8,i8*%a,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%h,align 8
%C=getelementptr inbounds i8,i8*%a,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%i,align 8
%F=bitcast i8*%a to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%j,align 8
%H=call i8*@sml_alloc(i32 inreg 68)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177344,i32*%J,align 4
store i8*%H,i8**%k,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 16
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%T=getelementptr inbounds i8,i8*%H,i64 24
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%W=getelementptr inbounds i8,i8*%H,i64 32
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%H,i64 40
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=getelementptr inbounds i8,i8*%H,i64 48
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%H,i64 56
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%H,i64 64
%ai=bitcast i8*%ah to i32*
store i32 255,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=bitcast i8*%aj to i32*
%al=getelementptr inbounds i8,i8*%aj,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=getelementptr inbounds i8,i8*%aj,i64 4
%ao=bitcast i8*%an to i32*
store i32 0,i32*%ao,align 1
store i32 15,i32*%ak,align 4
%ap=load i8*,i8**%k,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i32*
store i32 2,i32*%at,align 4
ret i8*%aj
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_708(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
call void@llvm.gcroot(i8**%A,i8*null)#0
call void@llvm.gcroot(i8**%B,i8*null)#0
store i8*%a,i8**%u,align 8
store i8*%b,i8**%v,align 8
%C=load atomic i32,i32*@sml_check_flag unordered,align 4
%D=icmp eq i32%C,0
br i1%D,label%E,label%G
E:
%F=bitcast i8*%a to i8***
br label%K
G:
call void@sml_check(i32 inreg%C)
%H=load i8*,i8**%v,align 8
%I=bitcast i8**%u to i8****
%J=load i8***,i8****%I,align 8
br label%K
K:
%L=phi i8***[%J,%G],[%F,%E]
%M=phi i8*[%H,%G],[%b,%E]
store i8*null,i8**%v,align 8
store i8*%M,i8**%z,align 8
%N=load i8**,i8***%L,align 8
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%y,align 8
%P=bitcast i8***%L to i8**
store i8*null,i8**%u,align 8
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%A,align 8
%U=call fastcc i8*@_SMLFN12RecordLayout19newComputationAccumE(i32 inreg 0)
store i8*%U,i8**%v,align 8
%V=call i8*@sml_alloc(i32 inreg 8)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 805306376,i32*%X,align 4
store i8*%V,i8**%w,align 8
%Y=bitcast i8*%V to i64*
store i64 0,i64*%Y,align 1
%Z=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%aa=load i8*,i8**%w,align 8
%ab=bitcast i8*%aa to i8**
call void@sml_write(i8*inreg%aa,i8**inreg%ab,i8*inreg%Z)#0
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%u,align 8
%af=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_601(i8*inreg%ac)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*,i8*,i8*)**
%ap=load i8*(i8*,i8*,i8*,i8*)*,i8*(i8*,i8*,i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%v,align 8
%as=call i8*@sml_alloc(i32 inreg 4)#0
%at=bitcast i8*%as to i32*
%au=getelementptr inbounds i8,i8*%as,i64 -4
%av=bitcast i8*%au to i32*
store i32 4,i32*%av,align 4
store i8*%as,i8**%w,align 8
store i32 0,i32*%at,align 4
%aw=call i8*@sml_alloc(i32 inreg 4)#0
%ax=bitcast i8*%aw to i32*
%ay=getelementptr inbounds i8,i8*%aw,i64 -4
%az=bitcast i8*%ay to i32*
store i32 4,i32*%az,align 4
store i8*%aw,i8**%x,align 8
store i32 8,i32*%ax,align 4
%aA=call i8*@sml_alloc(i32 inreg 4)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 4,i32*%aD,align 4
store i32 16,i32*%aB,align 4
%aE=load i8*,i8**%v,align 8
%aF=load i8*,i8**%w,align 8
%aG=load i8*,i8**%x,align 8
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%x,align 8
%aH=call fastcc i8*%ap(i8*inreg%aE,i8*inreg%aF,i8*inreg%aG,i8*inreg%aA)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%v,align 8
%aN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ac,i64 0,i32 2)to i8*))
%aU=getelementptr inbounds i8,i8*%aT,i64 16
%aV=bitcast i8*%aU to i8*(i8*,i8*)**
%aW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aV,align 8
%aX=bitcast i8*%aT to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=call fastcc i8*%aW(i8*inreg%aY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aj,i64 0,i32 2)to i8*))
%a0=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%a1=call fastcc i8*%aK(i8*inreg%a0,i8*inreg%aZ)
%a2=getelementptr inbounds i8,i8*%a1,i64 16
%a3=bitcast i8*%a2 to i8*(i8*,i8*)**
%a4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a3,align 8
%a5=bitcast i8*%a1 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=load i8*,i8**%z,align 8
%a8=call fastcc i8*%a4(i8*inreg%a6,i8*inreg%a7)
store i8*%a8,i8**%x,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 24
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%v,align 8
%bc=getelementptr inbounds i8,i8*%a8,i64 8
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%w,align 8
%bf=bitcast i8**%u to i8***
%bg=load i8**,i8***%bf,align 8
store i8*null,i8**%u,align 8
%bh=load i8*,i8**%bg,align 8
%bi=call fastcc i8*@_SMLFN12RecordLayout12extractDeclsE(i8*inreg%bh)
%bj=icmp eq i8*%bi,null
br i1%bj,label%bE,label%bk
bk:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
%bl=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%bl,i8**%u,align 8
%bm=call i8*@sml_alloc(i32 inreg 28)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177304,i32*%bo,align 4
store i8*%bm,i8**%v,align 8
%bp=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bm,i64 8
%bs=bitcast i8*%br to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@a4,i64 0,i32 2,i64 0),i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 16
%bu=bitcast i8*%bt to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a5,i64 0,i32 2,i64 0),i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 24
%bw=bitcast i8*%bv to i32*
store i32 7,i32*%bw,align 4
%bx=call i8*@sml_alloc(i32 inreg 60)#0
%by=getelementptr inbounds i8,i8*%bx,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177336,i32*%bz,align 4
%bA=getelementptr inbounds i8,i8*%bx,i64 56
%bB=bitcast i8*%bA to i32*
store i32 1,i32*%bB,align 4
%bC=load i8*,i8**%v,align 8
%bD=bitcast i8*%bx to i8**
store i8*%bC,i8**%bD,align 8
call void@sml_raise(i8*inreg%bx)#1
unreachable
bE:
%bF=call i8*@sml_alloc(i32 inreg 44)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177320,i32*%bH,align 4
store i8*%bF,i8**%u,align 8
%bI=getelementptr inbounds i8,i8*%bF,i64 4
%bJ=bitcast i8*%bI to i32*
store i32 0,i32*%bJ,align 1
%bK=bitcast i8*%bF to i32*
store i32 1,i32*%bK,align 4
%bL=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%bM=getelementptr inbounds i8,i8*%bF,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%bP=getelementptr inbounds i8,i8*%bF,i64 16
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%z,align 8
%bS=getelementptr inbounds i8,i8*%bF,i64 24
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=load i8*,i8**%v,align 8
%bV=getelementptr inbounds i8,i8*%bF,i64 32
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bF,i64 40
%bY=bitcast i8*%bX to i32*
store i32 30,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
store i8*%bZ,i8**%B,align 8
%b2=getelementptr inbounds i8,i8*%bZ,i64 4
%b3=bitcast i8*%b2 to i32*
store i32 0,i32*%b3,align 1
%b4=bitcast i8*%bZ to i32*
store i32 1,i32*%b4,align 4
%b5=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%b6=getelementptr inbounds i8,i8*%bZ,i64 8
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%bZ,i64 16
%b9=bitcast i8*%b8 to i32*
store i32 2,i32*%b9,align 4
%ca=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8*(i8*,i8*)**
%cd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cc,align 8
%ce=bitcast i8*%ca to i8**
%cf=load i8*,i8**%ce,align 8
store i8*%cf,i8**%u,align 8
%cg=call i8*@sml_alloc(i32 inreg 28)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177304,i32*%ci,align 4
store i8*%cg,i8**%y,align 8
%cj=load i8*,i8**%v,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=load i8*,i8**%B,align 8
%cm=getelementptr inbounds i8,i8*%cg,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%z,align 8
%cp=getelementptr inbounds i8,i8*%cg,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cg,i64 24
%cs=bitcast i8*%cr to i32*
store i32 7,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 28)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177304,i32*%cv,align 4
%cw=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%ct,i64 8
%cz=bitcast i8*%cy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10selectExps_702 to void(...)*),void(...)**%cz,align 8
%cA=getelementptr inbounds i8,i8*%ct,i64 16
%cB=bitcast i8*%cA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL10selectExps_702 to void(...)*),void(...)**%cB,align 8
%cC=getelementptr inbounds i8,i8*%ct,i64 24
%cD=bitcast i8*%cC to i32*
store i32 -2147483647,i32*%cD,align 4
%cE=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%cF=call fastcc i8*%cd(i8*inreg%cE,i8*inreg%ct)
%cG=getelementptr inbounds i8,i8*%cF,i64 16
%cH=bitcast i8*%cG to i8*(i8*,i8*)**
%cI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cH,align 8
%cJ=bitcast i8*%cF to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%cM=getelementptr inbounds i8,i8*%cL,i64 16
%cN=bitcast i8*%cM to i8**
%cO=load i8*,i8**%cN,align 8
%cP=call fastcc i8*%cI(i8*inreg%cK,i8*inreg%cO)
%cQ=icmp eq i8*%cP,null
br i1%cQ,label%cR,label%cS
cR:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
br label%jP
cS:
%cT=bitcast i8*%cP to i8**
%cU=load i8*,i8**%cT,align 8
store i8*%cU,i8**%u,align 8
%cV=getelementptr inbounds i8,i8*%cP,i64 8
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
%cY=icmp eq i8*%cX,null
br i1%cY,label%cZ,label%c0
cZ:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
br label%jP
c0:
%c1=bitcast i8*%cX to i8**
%c2=load i8*,i8**%c1,align 8
store i8*%c2,i8**%x,align 8
%c3=getelementptr inbounds i8,i8*%cX,i64 8
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=icmp eq i8*%c5,null
br i1%c6,label%c7,label%c8
c7:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
br label%jP
c8:
%c9=bitcast i8*%c5 to i8**
%da=load i8*,i8**%c9,align 8
store i8*%da,i8**%y,align 8
%db=getelementptr inbounds i8,i8*%c5,i64 8
%dc=bitcast i8*%db to i8**
%dd=load i8*,i8**%dc,align 8
%de=icmp eq i8*%dd,null
br i1%de,label%df,label%jO
df:
%dg=load i8*,i8**%w,align 8
%dh=icmp eq i8*%dg,null
br i1%dh,label%di,label%dj
di:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%B,align 8
br label%jP
dj:
%dk=bitcast i8*%dg to i8**
%dl=load i8*,i8**%dk,align 8
store i8*%dl,i8**%A,align 8
store i8*null,i8**%w,align 8
%dm=getelementptr inbounds i8,i8*%dg,i64 8
%dn=bitcast i8*%dm to i8**
%do=load i8*,i8**%dn,align 8
%dp=icmp eq i8*%do,null
br i1%dp,label%dq,label%jN
dq:
%dr=call i8*@sml_alloc(i32 inreg 36)#0
%ds=getelementptr inbounds i8,i8*%dr,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177312,i32*%dt,align 4
%du=load i8*,i8**%u,align 8
%dv=bitcast i8*%dr to i8**
store i8*%du,i8**%dv,align 8
%dw=load i8*,i8**%x,align 8
%dx=getelementptr inbounds i8,i8*%dr,i64 8
%dy=bitcast i8*%dx to i8**
store i8*%dw,i8**%dy,align 8
%dz=load i8*,i8**%y,align 8
%dA=getelementptr inbounds i8,i8*%dr,i64 16
%dB=bitcast i8*%dA to i8**
store i8*%dz,i8**%dB,align 8
%dC=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%dD=getelementptr inbounds i8,i8*%dr,i64 24
%dE=bitcast i8*%dD to i8**
store i8*%dC,i8**%dE,align 8
%dF=getelementptr inbounds i8,i8*%dr,i64 32
%dG=bitcast i8*%dF to i32*
store i32 15,i32*%dG,align 4
store i8*%dw,i8**%w,align 8
store i8*%dz,i8**%x,align 8
%dH=getelementptr inbounds i8,i8*%dC,i64 8
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
store i8*%dJ,i8**%y,align 8
%dK=call i8*@sml_alloc(i32 inreg 36)#0
%dL=getelementptr inbounds i8,i8*%dK,i64 -4
%dM=bitcast i8*%dL to i32*
store i32 1342177312,i32*%dM,align 4
%dN=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%dO=bitcast i8*%dK to i8**
store i8*%dN,i8**%dO,align 8
%dP=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%dQ=getelementptr inbounds i8,i8*%dK,i64 8
%dR=bitcast i8*%dQ to i8**
store i8*%dP,i8**%dR,align 8
%dS=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%dT=getelementptr inbounds i8,i8*%dK,i64 16
%dU=bitcast i8*%dT to i8**
store i8*%dS,i8**%dU,align 8
%dV=load i8*,i8**%z,align 8
%dW=getelementptr inbounds i8,i8*%dK,i64 24
%dX=bitcast i8*%dW to i8**
store i8*%dV,i8**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dK,i64 32
%dZ=bitcast i8*%dY to i32*
store i32 15,i32*%dZ,align 4
%d0=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d0)
%d1=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d1)
%d2=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d2)
%d3=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d3)
%d4=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d4)
%d5=bitcast i8**%t to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d5)
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
store i8*%dK,i8**%o,align 8
%d6=load atomic i32,i32*@sml_check_flag unordered,align 4
%d7=icmp eq i32%d6,0
br i1%d7,label%el,label%d8
d8:
call void@sml_check(i32 inreg%d6)
%d9=load i8*,i8**%o,align 8
%ea=bitcast i8*%d9 to i8**
%eb=load i8*,i8**%ea,align 8
%ec=getelementptr inbounds i8,i8*%d9,i64 8
%ed=bitcast i8*%ec to i8**
%ee=load i8*,i8**%ed,align 8
%ef=getelementptr inbounds i8,i8*%d9,i64 16
%eg=bitcast i8*%ef to i8**
%eh=load i8*,i8**%eg,align 8
%ei=getelementptr inbounds i8,i8*%d9,i64 24
%ej=bitcast i8*%ei to i8**
%ek=load i8*,i8**%ej,align 8
br label%el
el:
%em=phi i8*[%ek,%d8],[%dV,%dq]
%en=phi i8*[%eh,%d8],[%dS,%dq]
%eo=phi i8*[%ee,%d8],[%dP,%dq]
%ep=phi i8*[%eb,%d8],[%dN,%dq]
store i8*%ep,i8**%o,align 8
store i8*%eo,i8**%p,align 8
store i8*%en,i8**%q,align 8
store i8*%em,i8**%r,align 8
%eq=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%eq,i8**%s,align 8
%er=call i8*@sml_alloc(i32 inreg 44)#0
%es=getelementptr inbounds i8,i8*%er,i64 -4
%et=bitcast i8*%es to i32*
store i32 1342177320,i32*%et,align 4
store i8*%er,i8**%t,align 8
%eu=getelementptr inbounds i8,i8*%er,i64 4
%ev=bitcast i8*%eu to i32*
store i32 0,i32*%ev,align 1
%ew=bitcast i8*%er to i32*
store i32 1,i32*%ew,align 4
%ex=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ey=getelementptr inbounds i8,i8*%er,i64 8
%ez=bitcast i8*%ey to i8**
store i8*%ex,i8**%ez,align 8
%eA=load i8*,i8**%o,align 8
%eB=getelementptr inbounds i8,i8*%er,i64 16
%eC=bitcast i8*%eB to i8**
store i8*%eA,i8**%eC,align 8
%eD=load i8*,i8**%r,align 8
%eE=getelementptr inbounds i8,i8*%er,i64 24
%eF=bitcast i8*%eE to i8**
store i8*%eD,i8**%eF,align 8
%eG=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%eH=getelementptr inbounds i8,i8*%er,i64 32
%eI=bitcast i8*%eH to i8**
store i8*%eG,i8**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%er,i64 40
%eK=bitcast i8*%eJ to i32*
store i32 30,i32*%eK,align 4
%eL=call i8*@sml_alloc(i32 inreg 20)#0
%eM=getelementptr inbounds i8,i8*%eL,i64 -4
%eN=bitcast i8*%eM to i32*
store i32 1342177296,i32*%eN,align 4
store i8*%eL,i8**%s,align 8
%eO=getelementptr inbounds i8,i8*%eL,i64 4
%eP=bitcast i8*%eO to i32*
store i32 0,i32*%eP,align 1
%eQ=bitcast i8*%eL to i32*
store i32 1,i32*%eQ,align 4
%eR=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%eS=getelementptr inbounds i8,i8*%eL,i64 8
%eT=bitcast i8*%eS to i8**
store i8*%eR,i8**%eT,align 8
%eU=getelementptr inbounds i8,i8*%eL,i64 16
%eV=bitcast i8*%eU to i32*
store i32 2,i32*%eV,align 4
%eW=call i8*@sml_alloc(i32 inreg 20)#0
%eX=getelementptr inbounds i8,i8*%eW,i64 -4
%eY=bitcast i8*%eX to i32*
store i32 1342177296,i32*%eY,align 4
store i8*%eW,i8**%p,align 8
%eZ=bitcast i8*%eW to i64*
store i64 0,i64*%eZ,align 4
%e0=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%e1=getelementptr inbounds i8,i8*%eW,i64 8
%e2=bitcast i8*%e1 to i8**
store i8*%e0,i8**%e2,align 8
%e3=getelementptr inbounds i8,i8*%eW,i64 16
%e4=bitcast i8*%e3 to i32*
store i32 2,i32*%e4,align 4
%e5=call i8*@sml_alloc(i32 inreg 20)#0
%e6=getelementptr inbounds i8,i8*%e5,i64 -4
%e7=bitcast i8*%e6 to i32*
store i32 1342177296,i32*%e7,align 4
store i8*%e5,i8**%o,align 8
%e8=getelementptr inbounds i8,i8*%e5,i64 4
%e9=bitcast i8*%e8 to i32*
store i32 0,i32*%e9,align 1
%fa=bitcast i8*%e5 to i32*
store i32 4,i32*%fa,align 4
%fb=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%fc=getelementptr inbounds i8,i8*%e5,i64 8
%fd=bitcast i8*%fc to i8**
store i8*%fb,i8**%fd,align 8
%fe=getelementptr inbounds i8,i8*%e5,i64 16
%ff=bitcast i8*%fe to i32*
store i32 2,i32*%ff,align 4
%fg=call i8*@sml_alloc(i32 inreg 20)#0
%fh=getelementptr inbounds i8,i8*%fg,i64 -4
%fi=bitcast i8*%fh to i32*
store i32 1342177296,i32*%fi,align 4
store i8*%fg,i8**%t,align 8
%fj=bitcast i8*%fg to i64*
store i64 0,i64*%fj,align 4
%fk=load i8*,i8**%o,align 8
%fl=getelementptr inbounds i8,i8*%fg,i64 8
%fm=bitcast i8*%fl to i8**
store i8*%fk,i8**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fg,i64 16
%fo=bitcast i8*%fn to i32*
store i32 2,i32*%fo,align 4
%fp=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%fp,i8**%o,align 8
%fq=call i8*@sml_alloc(i32 inreg 44)#0
%fr=getelementptr inbounds i8,i8*%fq,i64 -4
%fs=bitcast i8*%fr to i32*
store i32 1342177320,i32*%fs,align 4
store i8*%fq,i8**%p,align 8
%ft=getelementptr inbounds i8,i8*%fq,i64 4
%fu=bitcast i8*%ft to i32*
store i32 0,i32*%fu,align 1
%fv=bitcast i8*%fq to i32*
store i32 1,i32*%fv,align 4
%fw=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%fx=getelementptr inbounds i8,i8*%fq,i64 8
%fy=bitcast i8*%fx to i8**
store i8*%fw,i8**%fy,align 8
%fz=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%fA=getelementptr inbounds i8,i8*%fq,i64 16
%fB=bitcast i8*%fA to i8**
store i8*%fz,i8**%fB,align 8
%fC=load i8*,i8**%r,align 8
%fD=getelementptr inbounds i8,i8*%fq,i64 24
%fE=bitcast i8*%fD to i8**
store i8*%fC,i8**%fE,align 8
%fF=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%fG=getelementptr inbounds i8,i8*%fq,i64 32
%fH=bitcast i8*%fG to i8**
store i8*%fF,i8**%fH,align 8
%fI=getelementptr inbounds i8,i8*%fq,i64 40
%fJ=bitcast i8*%fI to i32*
store i32 30,i32*%fJ,align 4
%fK=call i8*@sml_alloc(i32 inreg 20)#0
%fL=getelementptr inbounds i8,i8*%fK,i64 -4
%fM=bitcast i8*%fL to i32*
store i32 1342177296,i32*%fM,align 4
store i8*%fK,i8**%o,align 8
%fN=getelementptr inbounds i8,i8*%fK,i64 4
%fO=bitcast i8*%fN to i32*
store i32 0,i32*%fO,align 1
%fP=bitcast i8*%fK to i32*
store i32 1,i32*%fP,align 4
%fQ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%fR=getelementptr inbounds i8,i8*%fK,i64 8
%fS=bitcast i8*%fR to i8**
store i8*%fQ,i8**%fS,align 8
%fT=getelementptr inbounds i8,i8*%fK,i64 16
%fU=bitcast i8*%fT to i32*
store i32 2,i32*%fU,align 4
%fV=call i8*@sml_alloc(i32 inreg 28)#0
%fW=getelementptr inbounds i8,i8*%fV,i64 -4
%fX=bitcast i8*%fW to i32*
store i32 1342177304,i32*%fX,align 4
%fY=load i8*,i8**%s,align 8
%fZ=bitcast i8*%fV to i8**
store i8*%fY,i8**%fZ,align 8
%f0=load i8*,i8**%o,align 8
%f1=getelementptr inbounds i8,i8*%fV,i64 8
%f2=bitcast i8*%f1 to i8**
store i8*%f0,i8**%f2,align 8
%f3=load i8*,i8**%r,align 8
%f4=getelementptr inbounds i8,i8*%fV,i64 16
%f5=bitcast i8*%f4 to i8**
store i8*%f3,i8**%f5,align 8
%f6=getelementptr inbounds i8,i8*%fV,i64 24
%f7=bitcast i8*%f6 to i32*
store i32 7,i32*%f7,align 4
%f8=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%f8)
%f9=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%f9)
%ga=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ga)
%gb=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gb)
%gc=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gc)
%gd=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gd)
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%fV,i8**%i,align 8
%ge=load atomic i32,i32*@sml_check_flag unordered,align 4
%gf=icmp eq i32%ge,0
br i1%gf,label%gk,label%gg
gg:
call void@sml_check(i32 inreg%ge)
%gh=bitcast i8**%i to i8***
%gi=load i8**,i8***%gh,align 8
%gj=load i8*,i8**%gi,align 8
br label%gk
gk:
%gl=phi i8*[%gj,%gg],[%fY,%el]
%gm=phi i8**[%gi,%gg],[%fZ,%el]
store i8*%gl,i8**%j,align 8
%gn=getelementptr inbounds i8*,i8**%gm,i64 1
%go=load i8*,i8**%gn,align 8
store i8*%go,i8**%k,align 8
%gp=call fastcc i8*@_SMLLN18ClosureConversion29primapplyE_508(i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@n,i64 0,i32 2)to i8*))
%gq=getelementptr inbounds i8,i8*%gp,i64 16
%gr=bitcast i8*%gq to i8*(i8*,i8*)**
%gs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gr,align 8
%gt=bitcast i8*%gp to i8**
%gu=load i8*,i8**%gt,align 8
store i8*%gu,i8**%n,align 8
%gv=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
store i8*%gv,i8**%l,align 8
%gw=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%gw,i8**%m,align 8
%gx=call i8*@sml_alloc(i32 inreg 20)#0
%gy=getelementptr inbounds i8,i8*%gx,i64 -4
%gz=bitcast i8*%gy to i32*
store i32 1342177296,i32*%gz,align 4
%gA=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gB=bitcast i8*%gx to i8**
store i8*%gA,i8**%gB,align 8
%gC=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gD=getelementptr inbounds i8,i8*%gx,i64 8
%gE=bitcast i8*%gD to i8**
store i8*%gC,i8**%gE,align 8
%gF=getelementptr inbounds i8,i8*%gx,i64 16
%gG=bitcast i8*%gF to i32*
store i32 3,i32*%gG,align 4
%gH=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%gI=call fastcc i8*%gs(i8*inreg%gH,i8*inreg%gx)
%gJ=getelementptr inbounds i8,i8*%gI,i64 16
%gK=bitcast i8*%gJ to i8*(i8*,i8*)**
%gL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gK,align 8
%gM=bitcast i8*%gI to i8**
%gN=load i8*,i8**%gM,align 8
store i8*%gN,i8**%l,align 8
%gO=call i8*@sml_alloc(i32 inreg 20)#0
%gP=getelementptr inbounds i8,i8*%gO,i64 -4
%gQ=bitcast i8*%gP to i32*
store i32 1342177296,i32*%gQ,align 4
%gR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gS=bitcast i8*%gO to i8**
store i8*%gR,i8**%gS,align 8
%gT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gU=getelementptr inbounds i8,i8*%gO,i64 8
%gV=bitcast i8*%gU to i8**
store i8*%gT,i8**%gV,align 8
%gW=getelementptr inbounds i8,i8*%gO,i64 16
%gX=bitcast i8*%gW to i32*
store i32 3,i32*%gX,align 4
%gY=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gZ=call fastcc i8*%gL(i8*inreg%gY,i8*inreg%gO)
%g0=getelementptr inbounds i8,i8*%gZ,i64 16
%g1=bitcast i8*%g0 to i8*(i8*,i8*)**
%g2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g1,align 8
%g3=bitcast i8*%gZ to i8**
%g4=load i8*,i8**%g3,align 8
%g5=load i8*,i8**%i,align 8
%g6=getelementptr inbounds i8,i8*%g5,i64 16
%g7=bitcast i8*%g6 to i8**
%g8=load i8*,i8**%g7,align 8
%g9=call fastcc i8*%g2(i8*inreg%g4,i8*inreg%g8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%f8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%f9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ga)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d1)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d2)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d3)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d4)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d5)
store i8*%g9,i8**%v,align 8
%ha=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%ha,i8**%y,align 8
%hb=call i8*@sml_alloc(i32 inreg 28)#0
%hc=getelementptr inbounds i8,i8*%hb,i64 -4
%hd=bitcast i8*%hc to i32*
store i32 1342177304,i32*%hd,align 4
store i8*%hb,i8**%A,align 8
%he=bitcast i8*%hb to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@am,i64 0,i32 2)to i8*),i8**%he,align 8
%hf=load i8*,i8**%z,align 8
%hg=getelementptr inbounds i8,i8*%hb,i64 8
%hh=bitcast i8*%hg to i8**
store i8*%hf,i8**%hh,align 8
%hi=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%hj=getelementptr inbounds i8,i8*%hb,i64 16
%hk=bitcast i8*%hj to i8**
store i8*%hi,i8**%hk,align 8
%hl=getelementptr inbounds i8,i8*%hb,i64 24
%hm=bitcast i8*%hl to i32*
store i32 7,i32*%hm,align 4
%hn=call i8*@sml_alloc(i32 inreg 20)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177296,i32*%hp,align 4
store i8*%hn,i8**%y,align 8
%hq=getelementptr inbounds i8,i8*%hn,i64 4
%hr=bitcast i8*%hq to i32*
store i32 0,i32*%hr,align 1
%hs=bitcast i8*%hn to i32*
store i32 3,i32*%hs,align 4
%ht=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%hu=getelementptr inbounds i8,i8*%hn,i64 8
%hv=bitcast i8*%hu to i8**
store i8*%ht,i8**%hv,align 8
%hw=getelementptr inbounds i8,i8*%hn,i64 16
%hx=bitcast i8*%hw to i32*
store i32 2,i32*%hx,align 4
%hy=call i8*@sml_alloc(i32 inreg 28)#0
%hz=getelementptr inbounds i8,i8*%hy,i64 -4
%hA=bitcast i8*%hz to i32*
store i32 1342177304,i32*%hA,align 4
%hB=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%hC=bitcast i8*%hy to i8**
store i8*%hB,i8**%hC,align 8
%hD=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%hE=getelementptr inbounds i8,i8*%hy,i64 8
%hF=bitcast i8*%hE to i8**
store i8*%hD,i8**%hF,align 8
%hG=load i8*,i8**%z,align 8
%hH=getelementptr inbounds i8,i8*%hy,i64 16
%hI=bitcast i8*%hH to i8**
store i8*%hG,i8**%hI,align 8
%hJ=getelementptr inbounds i8,i8*%hy,i64 24
%hK=bitcast i8*%hJ to i32*
store i32 7,i32*%hK,align 4
%hL=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hL)
%hM=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hM)
%hN=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hN)
%hO=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hO)
%hP=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hP)
%hQ=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hQ)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%hy,i8**%c,align 8
%hR=load atomic i32,i32*@sml_check_flag unordered,align 4
%hS=icmp eq i32%hR,0
br i1%hS,label%hX,label%hT
hT:
call void@sml_check(i32 inreg%hR)
%hU=bitcast i8**%c to i8***
%hV=load i8**,i8***%hU,align 8
%hW=load i8*,i8**%hV,align 8
br label%hX
hX:
%hY=phi i8*[%hW,%hT],[%hB,%gk]
%hZ=phi i8**[%hV,%hT],[%hC,%gk]
store i8*%hY,i8**%d,align 8
%h0=getelementptr inbounds i8*,i8**%hZ,i64 1
%h1=load i8*,i8**%h0,align 8
store i8*%h1,i8**%e,align 8
%h2=call fastcc i8*@_SMLLN18ClosureConversion29primapplyE_508(i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@H,i64 0,i32 2)to i8*))
%h3=getelementptr inbounds i8,i8*%h2,i64 16
%h4=bitcast i8*%h3 to i8*(i8*,i8*)**
%h5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h4,align 8
%h6=bitcast i8*%h2 to i8**
%h7=load i8*,i8**%h6,align 8
store i8*%h7,i8**%h,align 8
%h8=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%h8,i8**%f,align 8
store i8*%h8,i8**%g,align 8
%h9=call i8*@sml_alloc(i32 inreg 20)#0
%ia=getelementptr inbounds i8,i8*%h9,i64 -4
%ib=bitcast i8*%ia to i32*
store i32 1342177296,i32*%ib,align 4
%ic=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%id=bitcast i8*%h9 to i8**
store i8*%ic,i8**%id,align 8
%ie=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%if=getelementptr inbounds i8,i8*%h9,i64 8
%ig=bitcast i8*%if to i8**
store i8*%ie,i8**%ig,align 8
%ih=getelementptr inbounds i8,i8*%h9,i64 16
%ii=bitcast i8*%ih to i32*
store i32 3,i32*%ii,align 4
%ij=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ik=call fastcc i8*%h5(i8*inreg%ij,i8*inreg%h9)
%il=getelementptr inbounds i8,i8*%ik,i64 16
%im=bitcast i8*%il to i8*(i8*,i8*)**
%in=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%im,align 8
%io=bitcast i8*%ik to i8**
%ip=load i8*,i8**%io,align 8
store i8*%ip,i8**%f,align 8
%iq=call i8*@sml_alloc(i32 inreg 20)#0
%ir=getelementptr inbounds i8,i8*%iq,i64 -4
%is=bitcast i8*%ir to i32*
store i32 1342177296,i32*%is,align 4
%it=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iu=bitcast i8*%iq to i8**
store i8*%it,i8**%iu,align 8
%iv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iw=getelementptr inbounds i8,i8*%iq,i64 8
%ix=bitcast i8*%iw to i8**
store i8*%iv,i8**%ix,align 8
%iy=getelementptr inbounds i8,i8*%iq,i64 16
%iz=bitcast i8*%iy to i32*
store i32 3,i32*%iz,align 4
%iA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iB=call fastcc i8*%in(i8*inreg%iA,i8*inreg%iq)
%iC=getelementptr inbounds i8,i8*%iB,i64 16
%iD=bitcast i8*%iC to i8*(i8*,i8*)**
%iE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iD,align 8
%iF=bitcast i8*%iB to i8**
%iG=load i8*,i8**%iF,align 8
%iH=load i8*,i8**%c,align 8
%iI=getelementptr inbounds i8,i8*%iH,i64 16
%iJ=bitcast i8*%iI to i8**
%iK=load i8*,i8**%iJ,align 8
%iL=call fastcc i8*%iE(i8*inreg%iG,i8*inreg%iK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hL)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hN)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hO)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hP)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hQ)
store i8*%iL,i8**%v,align 8
%iM=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
store i8*%iM,i8**%y,align 8
%iN=call i8*@sml_alloc(i32 inreg 44)#0
%iO=getelementptr inbounds i8,i8*%iN,i64 -4
%iP=bitcast i8*%iO to i32*
store i32 1342177320,i32*%iP,align 4
store i8*%iN,i8**%A,align 8
%iQ=getelementptr inbounds i8,i8*%iN,i64 4
%iR=bitcast i8*%iQ to i32*
store i32 0,i32*%iR,align 1
%iS=bitcast i8*%iN to i32*
store i32 1,i32*%iS,align 4
%iT=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%iU=getelementptr inbounds i8,i8*%iN,i64 8
%iV=bitcast i8*%iU to i8**
store i8*%iT,i8**%iV,align 8
%iW=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%iX=getelementptr inbounds i8,i8*%iN,i64 16
%iY=bitcast i8*%iX to i8**
store i8*%iW,i8**%iY,align 8
%iZ=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%i0=getelementptr inbounds i8,i8*%iN,i64 24
%i1=bitcast i8*%i0 to i8**
store i8*%iZ,i8**%i1,align 8
%i2=getelementptr inbounds i8,i8*%iN,i64 32
%i3=bitcast i8*%i2 to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ao,i64 0,i32 2)to i8*),i8**%i3,align 8
%i4=getelementptr inbounds i8,i8*%iN,i64 40
%i5=bitcast i8*%i4 to i32*
store i32 30,i32*%i5,align 4
%i6=call i8*@sml_alloc(i32 inreg 20)#0
%i7=getelementptr inbounds i8,i8*%i6,i64 -4
%i8=bitcast i8*%i7 to i32*
store i32 1342177296,i32*%i8,align 4
store i8*%i6,i8**%y,align 8
%i9=getelementptr inbounds i8,i8*%i6,i64 4
%ja=bitcast i8*%i9 to i32*
store i32 0,i32*%ja,align 1
%jb=bitcast i8*%i6 to i32*
store i32 1,i32*%jb,align 4
%jc=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%jd=getelementptr inbounds i8,i8*%i6,i64 8
%je=bitcast i8*%jd to i8**
store i8*%jc,i8**%je,align 8
%jf=getelementptr inbounds i8,i8*%i6,i64 16
%jg=bitcast i8*%jf to i32*
store i32 2,i32*%jg,align 4
%jh=call i8*@sml_alloc(i32 inreg 20)#0
%ji=getelementptr inbounds i8,i8*%jh,i64 -4
%jj=bitcast i8*%ji to i32*
store i32 1342177296,i32*%jj,align 4
store i8*%jh,i8**%v,align 8
%jk=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%jl=bitcast i8*%jh to i8**
store i8*%jk,i8**%jl,align 8
%jm=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%jn=getelementptr inbounds i8,i8*%jh,i64 8
%jo=bitcast i8*%jn to i8**
store i8*%jm,i8**%jo,align 8
%jp=getelementptr inbounds i8,i8*%jh,i64 16
%jq=bitcast i8*%jp to i32*
store i32 3,i32*%jq,align 4
%jr=call i8*@sml_alloc(i32 inreg 20)#0
%js=getelementptr inbounds i8,i8*%jr,i64 -4
%jt=bitcast i8*%js to i32*
store i32 1342177296,i32*%jt,align 4
store i8*%jr,i8**%x,align 8
%ju=bitcast i8*%jr to i64*
store i64 0,i64*%ju,align 4
%jv=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%jw=getelementptr inbounds i8,i8*%jr,i64 8
%jx=bitcast i8*%jw to i8**
store i8*%jv,i8**%jx,align 8
%jy=getelementptr inbounds i8,i8*%jr,i64 16
%jz=bitcast i8*%jy to i32*
store i32 2,i32*%jz,align 4
%jA=call i8*@sml_alloc(i32 inreg 28)#0
%jB=getelementptr inbounds i8,i8*%jA,i64 -4
%jC=bitcast i8*%jB to i32*
store i32 1342177304,i32*%jC,align 4
%jD=load i8*,i8**%x,align 8
%jE=bitcast i8*%jA to i8**
store i8*%jD,i8**%jE,align 8
%jF=load i8*,i8**%u,align 8
%jG=getelementptr inbounds i8,i8*%jA,i64 8
%jH=bitcast i8*%jG to i8**
store i8*%jF,i8**%jH,align 8
%jI=load i8*,i8**%w,align 8
%jJ=getelementptr inbounds i8,i8*%jA,i64 16
%jK=bitcast i8*%jJ to i8**
store i8*%jI,i8**%jK,align 8
%jL=getelementptr inbounds i8,i8*%jA,i64 24
%jM=bitcast i8*%jL to i32*
store i32 7,i32*%jM,align 4
ret i8*%jA
jN:
store i8*null,i8**%v,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%B,align 8
br label%jP
jO:
store i8*null,i8**%v,align 8
store i8*null,i8**%w,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%B,align 8
br label%jP
jP:
%jQ=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%jQ,i8**%u,align 8
%jR=call i8*@sml_alloc(i32 inreg 28)#0
%jS=getelementptr inbounds i8,i8*%jR,i64 -4
%jT=bitcast i8*%jS to i32*
store i32 1342177304,i32*%jT,align 4
store i8*%jR,i8**%v,align 8
%jU=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%jV=bitcast i8*%jR to i8**
store i8*%jU,i8**%jV,align 8
%jW=getelementptr inbounds i8,i8*%jR,i64 8
%jX=bitcast i8*%jW to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@ak,i64 0,i32 2,i64 0),i8**%jX,align 8
%jY=getelementptr inbounds i8,i8*%jR,i64 16
%jZ=bitcast i8*%jY to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@al,i64 0,i32 2,i64 0),i8**%jZ,align 8
%j0=getelementptr inbounds i8,i8*%jR,i64 24
%j1=bitcast i8*%j0 to i32*
store i32 7,i32*%j1,align 4
%j2=call i8*@sml_alloc(i32 inreg 60)#0
%j3=getelementptr inbounds i8,i8*%j2,i64 -4
%j4=bitcast i8*%j3 to i32*
store i32 1342177336,i32*%j4,align 4
%j5=getelementptr inbounds i8,i8*%j2,i64 56
%j6=bitcast i8*%j5 to i32*
store i32 1,i32*%j6,align 4
%j7=load i8*,i8**%v,align 8
%j8=bitcast i8*%j2 to i8**
store i8*%j7,i8**%j8,align 8
call void@sml_raise(i8*inreg%j2)#1
unreachable
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_709(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion222decomposeClosureRecordE_708 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion222decomposeClosureRecordE_708 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion212extendVarEnvE_711(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion212extendVarEnvE_713(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN5VarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ap,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_715(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_717(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_719(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=bitcast i8*%l to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=load i8*,i8**%n,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
%z=getelementptr inbounds i8,i8*%v,i64 24
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%b,align 8
%C=getelementptr inbounds i8,i8*%l,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=call fastcc i8*@_SMLFN5VarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%I(i8*inreg%K,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aq,i64 0,i32 2)to i8*))
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%f,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=call fastcc i8*%O(i8*inreg%ab,i8*inreg%R)
store i8*%ac,i8**%c,align 8
%ad=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ag(i8*inreg%ai,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ar,i64 0,i32 2)to i8*))
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%b,align 8
%ap=call fastcc i8*@_SMLFN5VarID3Map9listItemsE(i32 inreg 1,i32 inreg 8)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
%ax=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ay=call fastcc i8*%am(i8*inreg%ax,i8*inreg%aw)
store i8*%ay,i8**%b,align 8
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aF=getelementptr inbounds i8,i8*%az,i64 8
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%az,i64 16
%aI=bitcast i8*%aH to i32*
store i32 3,i32*%aI,align 4
%aJ=call fastcc i8*@_SMLFN15SingletonTyEnv28bindVarsE(i8*inreg%az)
store i8*%aJ,i8**%b,align 8
%aK=call i8*@sml_alloc(i32 inreg 36)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177312,i32*%aM,align 4
%aN=getelementptr inbounds i8,i8*%aK,i64 20
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 1
%aP=load i8*,i8**%d,align 8
%aQ=bitcast i8*%aK to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%b,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aK,i64 16
%aV=bitcast i8*%aU to i32*
store i32%y,i32*%aV,align 4
%aW=load i8*,i8**%c,align 8
%aX=getelementptr inbounds i8,i8*%aK,i64 24
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aK,i64 32
%a0=bitcast i8*%aZ to i32*
store i32 11,i32*%a0,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_721(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
store i8*null,i8**%b,align 8
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=getelementptr inbounds i8,i8*%z,i64 24
%G=bitcast i8*%F to i32*
call void@llvm.memset.p0i8.i64(i8*%E,i8 0,i64 16,i1 false)
store i32 7,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 12
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
%M=load i8*,i8**%d,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 8
%P=bitcast i8*%O to i32*
store i32%p,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=getelementptr inbounds i8,i8*%H,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%H,i64 24
%U=bitcast i8*%T to i32*
store i32 5,i32*%U,align 4
%V=load i8*,i8**%e,align 8
%W=tail call fastcc i8*%w(i8*inreg%V,i8*inreg%H)
ret i8*%W
}
define internal fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%n
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%b to i8****
%l=load i8***,i8****%k,align 8
%m=bitcast i8***%l to i8*
br label%n
n:
%o=phi i8*[%m,%j],[%a,%h]
%p=phi i8***[%l,%j],[%i,%h]
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=bitcast i8***%p to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=bitcast i8*%o to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i32*
%B=load i32,i32*%A,align 4
%C=getelementptr inbounds i8,i8*%o,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%e,align 8
%F=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%I(i8*inreg%K,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@as,i64 0,i32 2)to i8*))
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8**%b to i8***
%S=load i8**,i8***%R,align 8
store i8*null,i8**%b,align 8
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 24
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%O(i8*inreg%Q,i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%e,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%b,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
%ai=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call fastcc i8*@_SMLFN15SingletonTyEnv28bindVarsE(i8*inreg%af)
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 36)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177312,i32*%as,align 4
%at=getelementptr inbounds i8,i8*%aq,i64 20
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
%av=load i8*,i8**%d,align 8
%aw=bitcast i8*%aq to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%c,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%aq,i64 16
%aB=bitcast i8*%aA to i32*
store i32%B,i32*%aB,align 4
%aC=load i8*,i8**%b,align 8
%aD=getelementptr inbounds i8,i8*%aq,i64 24
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aq,i64 32
%aG=bitcast i8*%aF to i32*
store i32 11,i32*%aG,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLLN18ClosureConversion214addBoundTyvarsE_725(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=bitcast i8*%k to i8***
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=load i8*,i8**%m,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%b,align 8
%u=load i8*,i8**%m,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
%y=getelementptr inbounds i8,i8*%u,i64 24
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%k,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=call fastcc i8*@_SMLFN15SingletonTyEnv210bindTyvarsE(i8*inreg%E)
store i8*%O,i8**%b,align 8
%P=call i8*@sml_alloc(i32 inreg 36)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177312,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%P,i64 20
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
%U=load i8*,i8**%c,align 8
%V=bitcast i8*%P to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%b,align 8
%X=getelementptr inbounds i8,i8*%P,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%P,i64 16
%aa=bitcast i8*%Z to i32*
store i32%x,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=getelementptr inbounds i8,i8*%P,i64 24
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%P,i64 32
%af=bitcast i8*%ae to i32*
store i32 11,i32*%af,align 4
ret i8*%P
}
define internal fastcc i8*@_SMLLN18ClosureConversion27setPathE_727(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
%g=getelementptr inbounds i8,i8*%f,i64 8
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%f,i64 16
%k=bitcast i8*%j to i32*
%l=load i32,i32*%k,align 4
%m=getelementptr inbounds i8,i8*%f,i64 24
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%a,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=icmp eq i8*%r,null
br i1%s,label%t,label%u
t:
ret i8*%f
u:
%v=call i8*@sml_alloc(i32 inreg 36)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177312,i32*%x,align 4
%y=getelementptr inbounds i8,i8*%v,i64 20
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%v to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%b,align 8
%D=getelementptr inbounds i8,i8*%v,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%v,i64 16
%G=bitcast i8*%F to i32*
store i32%l,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%v,i64 24
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%v,i64 32
%L=bitcast i8*%K to i32*
store i32 11,i32*%L,align 4
ret i8*%v
}
define internal fastcc i8*@_SMLLN18ClosureConversion212compileTlintE_735(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 5,label%bE
i32 2,label%bq
i32 3,label%be
i32 4,label%a0
i32 9,label%aP
i32 6,label%aB
i32 7,label%ap
i32 8,label%ab
i32 1,label%P
i32 0,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@au,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 4
%G=load i8,i8*%F,align 1
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=bitcast i8*%H to i32*
%J=getelementptr inbounds i8,i8*%H,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%H,i64 5
call void@llvm.memset.p0i8.i32(i8*%L,i8 0,i32 3,i1 false)
store i32 3,i32*%I,align 4
%M=getelementptr inbounds i8,i8*%H,i64 4
store i8%G,i8*%M,align 1
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 4
ret i8*%H
P:
%Q=getelementptr inbounds i8,i8*%i,i64 4
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
%T=call i8*@sml_alloc(i32 inreg 12)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177288,i32*%W,align 4
store i32 4,i32*%U,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32%S,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 4
ret i8*%T
ab:
%ac=getelementptr inbounds i8,i8*%i,i64 8
%ad=bitcast i8*%ac to i64*
%ae=load i64,i64*%ad,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
store i32 25,i32*%ag,align 4
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i64*
store i64%ae,i64*%am,align 4
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 0,i32*%ao,align 4
ret i8*%af
ap:
%aq=getelementptr inbounds i8,i8*%i,i64 4
%ar=bitcast i8*%aq to i32*
%as=load i32,i32*%ar,align 4
%at=call i8*@sml_alloc(i32 inreg 12)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177288,i32*%aw,align 4
store i32 23,i32*%au,align 4
%ax=getelementptr inbounds i8,i8*%at,i64 4
%ay=bitcast i8*%ax to i32*
store i32%as,i32*%ay,align 4
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 4
ret i8*%at
aB:
%aC=getelementptr inbounds i8,i8*%i,i64 4
%aD=bitcast i8*%aC to i16*
%aE=load i16,i16*%aD,align 2
%aF=call i8*@sml_alloc(i32 inreg 12)#0
%aG=bitcast i8*%aF to i32*
%aH=getelementptr inbounds i8,i8*%aF,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177288,i32*%aI,align 4
%aJ=getelementptr inbounds i8,i8*%aF,i64 6
%aK=bitcast i8*%aJ to i16*
store i16 0,i16*%aK,align 1
store i32 22,i32*%aG,align 4
%aL=getelementptr inbounds i8,i8*%aF,i64 4
%aM=bitcast i8*%aL to i16*
store i16%aE,i16*%aM,align 2
%aN=getelementptr inbounds i8,i8*%aF,i64 8
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 4
ret i8*%aF
aP:
%aQ=getelementptr inbounds i8,i8*%i,i64 4
%aR=load i8,i8*%aQ,align 1
%aS=call i8*@sml_alloc(i32 inreg 12)#0
%aT=bitcast i8*%aS to i32*
%aU=getelementptr inbounds i8,i8*%aS,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177288,i32*%aV,align 4
%aW=getelementptr inbounds i8,i8*%aS,i64 5
call void@llvm.memset.p0i8.i32(i8*%aW,i8 0,i32 3,i1 false)
store i32 26,i32*%aT,align 4
%aX=getelementptr inbounds i8,i8*%aS,i64 4
store i8%aR,i8*%aX,align 1
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i32*
store i32 0,i32*%aZ,align 4
ret i8*%aS
a0:
%a1=getelementptr inbounds i8,i8*%i,i64 8
%a2=bitcast i8*%a1 to i64*
%a3=load i64,i64*%a2,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=bitcast i8*%a4 to i32*
%a6=getelementptr inbounds i8,i8*%a4,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
%a8=getelementptr inbounds i8,i8*%a4,i64 4
%a9=bitcast i8*%a8 to i32*
store i32 0,i32*%a9,align 1
store i32 12,i32*%a5,align 4
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i64*
store i64%a3,i64*%bb,align 4
%bc=getelementptr inbounds i8,i8*%a4,i64 16
%bd=bitcast i8*%bc to i32*
store i32 0,i32*%bd,align 4
ret i8*%a4
be:
%bf=getelementptr inbounds i8,i8*%i,i64 4
%bg=bitcast i8*%bf to i32*
%bh=load i32,i32*%bg,align 4
%bi=call i8*@sml_alloc(i32 inreg 12)#0
%bj=bitcast i8*%bi to i32*
%bk=getelementptr inbounds i8,i8*%bi,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177288,i32*%bl,align 4
store i32 11,i32*%bj,align 4
%bm=getelementptr inbounds i8,i8*%bi,i64 4
%bn=bitcast i8*%bm to i32*
store i32%bh,i32*%bn,align 4
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i32*
store i32 0,i32*%bp,align 4
ret i8*%bi
bq:
%br=getelementptr inbounds i8,i8*%i,i64 4
%bs=bitcast i8*%br to i16*
%bt=load i16,i16*%bs,align 2
%bu=call i8*@sml_alloc(i32 inreg 12)#0
%bv=bitcast i8*%bu to i32*
%bw=getelementptr inbounds i8,i8*%bu,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177288,i32*%bx,align 4
%by=getelementptr inbounds i8,i8*%bu,i64 6
%bz=bitcast i8*%by to i16*
store i16 0,i16*%bz,align 1
store i32 10,i32*%bv,align 4
%bA=getelementptr inbounds i8,i8*%bu,i64 4
%bB=bitcast i8*%bA to i16*
store i16%bt,i16*%bB,align 2
%bC=getelementptr inbounds i8,i8*%bu,i64 8
%bD=bitcast i8*%bC to i32*
store i32 0,i32*%bD,align 4
ret i8*%bu
bE:
%bF=getelementptr inbounds i8,i8*%i,i64 4
%bG=load i8,i8*%bF,align 1
%bH=call i8*@sml_alloc(i32 inreg 12)#0
%bI=bitcast i8*%bH to i32*
%bJ=getelementptr inbounds i8,i8*%bH,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177288,i32*%bK,align 4
%bL=getelementptr inbounds i8,i8*%bH,i64 5
call void@llvm.memset.p0i8.i32(i8*%bL,i8 0,i32 3,i1 false)
store i32 13,i32*%bI,align 4
%bM=getelementptr inbounds i8,i8*%bH,i64 4
store i8%bG,i8*%bM,align 1
%bN=getelementptr inbounds i8,i8*%bH,i64 8
%bO=bitcast i8*%bN to i32*
store i32 0,i32*%bO,align 4
ret i8*%bH
}
define internal fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_750(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_746(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%b,align 8
%n=call fastcc i8*@_SMLFN11TypesBasics7derefTyE(i8*inreg%l)
%o=icmp eq i8*%n,null
br i1%o,label%s,label%p
p:
%q=bitcast i8*%n to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 6,label%aH
i32 7,label%t
]
s:
ret i8*null
t:
%u=getelementptr inbounds i8,i8*%n,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%b,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_746(i8*inreg%B)
%D=icmp eq i8*%C,null
br i1%D,label%s,label%E
E:
%F=bitcast i8*%C to i8**
%G=load i8*,i8**%F,align 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%G,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%G,i64 16
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%e,align 8
%P=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%S(i8*inreg%U,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@az,i64 0,i32 2)to i8*))
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%f,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=call fastcc i8*%Y(i8*inreg%al,i8*inreg%ab)
store i8*%am,i8**%b,align 8
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 16
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%an,i64 24
%az=bitcast i8*%ay to i32*
store i32 7,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 12)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177288,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to i32*
store i32 1,i32*%aG,align 4
ret i8*%aA
aH:
%aI=getelementptr inbounds i8,i8*%n,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%c,align 8
%aN=getelementptr inbounds i8,i8*%aK,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%d,align 8
%aQ=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%aQ,i8**%b,align 8
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%e,align 8
%aU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 12)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177288,i32*%a6,align 4
%a7=load i8*,i8**%e,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i32*
store i32 1,i32*%ba,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_752(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%z(i8*inreg%B,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aA,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%g,align 8
%I=bitcast i8**%c to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%c,align 8
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%K)
store i8*%L,i8**%c,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=call fastcc i8*%F(i8*inreg%W,i8*inreg%M)
store i8*%X,i8**%c,align 8
%Y=call i8*@sml_alloc(i32 inreg 36)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177312,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%Y,i64 12
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
%ad=load i8*,i8**%d,align 8
%ae=bitcast i8*%Y to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 8
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 4
%ah=load i8*,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 16
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%Y,i64 24
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%Y,i64 32
%ao=bitcast i8*%an to i32*
store i32 13,i32*%ao,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_755(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_754 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_754 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN18ClosureConversion214exportFunEntryE_758(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 18,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN18ClosureConversion214exportFunEntryE_759(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
u:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%a,i8**%k,align 8
store i8*%b,i8**%c,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%s,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%c,align 8
br label%s
s:
%t=phi i8*[%r,%q],[%b,%u]
store i8*null,i8**%c,align 8
store i8*%t,i8**%d,align 8
%v=bitcast i8*%t to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%h,align 8
%A=load i8*,i8**%v,align 8
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_746(i8*inreg%D)
%F=icmp eq i8*%E,null
br i1%F,label%G,label%H
G:
ret i8*null
H:
%I=bitcast i8**%d to i8***
%J=bitcast i8*%E to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%i,align 8
%N=getelementptr inbounds i8,i8*%K,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%j,align 8
%Q=bitcast i8**%k to i8****
%R=load i8***,i8****%Q,align 8
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_755(i8*inreg%T)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%f,align 8
%af=load i8*,i8**%i,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%j,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
store i8*%am,i8**%m,align 8
%ap=getelementptr inbounds i8,i8*%am,i64 4
%aq=bitcast i8*%ap to i32*
store i32 0,i32*%aq,align 1
%ar=bitcast i8*%am to i32*
store i32 6,i32*%ar,align 4
%as=load i8*,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%am,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 16
%aw=bitcast i8*%av to i32*
store i32 2,i32*%aw,align 4
%ax=load i8**,i8***%I,align 8
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%g,align 8
%aC=getelementptr inbounds i8,i8*%az,i64 4
%aD=bitcast i8*%aC to i32*
store i32 0,i32*%aD,align 1
%aE=bitcast i8*%az to i32*
store i32 6,i32*%aE,align 4
%aF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%az,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 2,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 44)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177320,i32*%aM,align 4
store i8*%aK,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aK,i64 4
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 1
%aP=bitcast i8*%aK to i32*
store i32 1,i32*%aP,align 4
%aQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aU=getelementptr inbounds i8,i8*%aK,i64 16
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=load i8*,i8**%h,align 8
%aX=getelementptr inbounds i8,i8*%aK,i64 24
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%m,align 8
%a0=getelementptr inbounds i8,i8*%aK,i64 32
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aK,i64 40
%a3=bitcast i8*%a2 to i32*
store i32 30,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
store i8*%a4,i8**%g,align 8
%a7=getelementptr inbounds i8,i8*%a4,i64 4
%a8=bitcast i8*%a7 to i32*
store i32 0,i32*%a8,align 1
%a9=bitcast i8*%a4 to i32*
store i32 1,i32*%a9,align 4
%ba=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 16
%be=bitcast i8*%bd to i32*
store i32 2,i32*%be,align 4
%bf=load i8*,i8**%d,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
%bj=icmp eq i8*%bi,null
br i1%bj,label%b2,label%bk
bk:
%bl=bitcast i8*%bi to i32*
%bm=load i32,i32*%bl,align 4
switch i32%bm,label%bn[
i32 0,label%bN
i32 2,label%bF
i32 1,label%b2
i32 3,label%b2
]
bn:
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%bo=load i8*,i8**@_SMLZ5Match,align 8
store i8*%bo,i8**%c,align 8
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
store i8*%bp,i8**%d,align 8
%bs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@aB,i64 0,i32 2,i64 0),i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bp,i64 16
%bx=bitcast i8*%bw to i32*
store i32 3,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 60)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177336,i32*%bA,align 4
%bB=getelementptr inbounds i8,i8*%by,i64 56
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=load i8*,i8**%d,align 8
%bE=bitcast i8*%by to i8**
store i8*%bD,i8**%bE,align 8
call void@sml_raise(i8*inreg%by)#1
unreachable
bF:
%bG=getelementptr inbounds i8,i8*%bi,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%d,align 8
%bJ=call i8*@sml_alloc(i32 inreg 12)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177288,i32*%bL,align 4
%bM=load i8*,i8**%d,align 8
br label%bV
bN:
%bO=getelementptr inbounds i8,i8*%bi,i64 8
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%d,align 8
%bR=call i8*@sml_alloc(i32 inreg 12)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177288,i32*%bT,align 4
%bU=load i8*,i8**%d,align 8
br label%bV
bV:
%bW=phi i8*[%bR,%bN],[%bJ,%bF]
%bX=phi i8*[%bU,%bN],[%bM,%bF]
%bY=bitcast i8*%bW to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bW,i64 8
%b0=bitcast i8*%bZ to i32*
store i32 1,i32*%b0,align 4
%b1=icmp eq i8*%bW,null
br i1%b1,label%b2,label%cJ
b2:
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
%b6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%m,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b3,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=call fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_709(i8*inreg%b3)
%ce=getelementptr inbounds i8,i8*%cd,i64 16
%cf=bitcast i8*%ce to i8*(i8*,i8*)**
%cg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cf,align 8
%ch=bitcast i8*%cd to i8**
%ci=load i8*,i8**%ch,align 8
%cj=load i8*,i8**%h,align 8
%ck=call fastcc i8*%cg(i8*inreg%ci,i8*inreg%cj)
store i8*%ck,i8**%d,align 8
%cl=call i8*@sml_alloc(i32 inreg 12)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177288,i32*%cn,align 4
store i8*%cl,i8**%e,align 8
%co=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cp=bitcast i8*%cl to i8**
store i8*%co,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cl,i64 8
%cr=bitcast i8*%cq to i32*
store i32 1,i32*%cr,align 4
%cs=bitcast i8**%k to i8***
%ct=load i8**,i8***%cs,align 8
%cu=load i8*,i8**%ct,align 8
%cv=getelementptr inbounds i8,i8*%cu,i64 8
%cw=bitcast i8*%cv to i8**
%cx=load i8*,i8**%cw,align 8
%cy=call fastcc i8*@_SMLFN13FunEntryLabel8generateE(i8*inreg%cx)
store i8*%cy,i8**%d,align 8
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177296,i32*%cB,align 4
%cC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=load i8*,i8**%d,align 8
%cF=getelementptr inbounds i8,i8*%cz,i64 8
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cz,i64 16
%cI=bitcast i8*%cH to i32*
store i32 3,i32*%cI,align 4
br label%eb
cJ:
%cK=bitcast i8*%bX to i8**
%cL=load i8*,i8**%cK,align 8
%cM=icmp eq i8*%cL,null
br i1%cM,label%cN,label%c1
cN:
store i8*null,i8**%g,align 8
%cO=getelementptr inbounds i8,i8*%bX,i64 16
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
store i8*%cQ,i8**%d,align 8
%cR=call i8*@sml_alloc(i32 inreg 20)#0
%cS=getelementptr inbounds i8,i8*%cR,i64 -4
%cT=bitcast i8*%cS to i32*
store i32 1342177296,i32*%cT,align 4
%cU=bitcast i8*%cR to i8**
store i8*null,i8**%cU,align 8
%cV=load i8*,i8**%d,align 8
%cW=getelementptr inbounds i8,i8*%cR,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cR,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=bitcast i8**%k to i8***
br label%eb
c1:
%c2=call fastcc i8*@_SMLLN18ClosureConversion222decomposeStaticClosureE_663(i8*inreg%bX)
%c3=getelementptr inbounds i8,i8*%c2,i64 16
%c4=bitcast i8*%c3 to i8*(i8*,i8*)**
%c5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c4,align 8
%c6=bitcast i8*%c2 to i8**
%c7=load i8*,i8**%c6,align 8
%c8=load i8*,i8**%h,align 8
%c9=call fastcc i8*%c5(i8*inreg%c7,i8*inreg%c8)
%da=getelementptr inbounds i8,i8*%c9,i64 16
%db=bitcast i8*%da to i8**
%dc=load i8*,i8**%db,align 8
store i8*%dc,i8**%d,align 8
%dd=bitcast i8*%c9 to i8**
%de=load i8*,i8**%dd,align 8
store i8*%de,i8**%e,align 8
%df=call i8*@sml_alloc(i32 inreg 20)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
%di=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=load i8*,i8**%m,align 8
%dl=getelementptr inbounds i8,i8*%df,i64 8
%dm=bitcast i8*%dl to i8**
store i8*%dk,i8**%dm,align 8
%dn=getelementptr inbounds i8,i8*%df,i64 16
%do=bitcast i8*%dn to i32*
store i32 3,i32*%do,align 4
%dp=call fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_709(i8*inreg%df)
%dq=getelementptr inbounds i8,i8*%dp,i64 16
%dr=bitcast i8*%dq to i8*(i8*,i8*)**
%ds=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dr,align 8
%dt=bitcast i8*%dp to i8**
%du=load i8*,i8**%dt,align 8
%dv=load i8*,i8**%h,align 8
%dw=call fastcc i8*%ds(i8*inreg%du,i8*inreg%dv)
%dx=getelementptr inbounds i8,i8*%dw,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%f,align 8
%dA=bitcast i8**%k to i8***
%dB=load i8**,i8***%dA,align 8
%dC=load i8*,i8**%dB,align 8
%dD=getelementptr inbounds i8,i8*%dC,i64 8
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
%dG=call fastcc i8*@_SMLFN13FunEntryLabel8generateE(i8*inreg%dF)
store i8*%dG,i8**%g,align 8
%dH=call i8*@sml_alloc(i32 inreg 28)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177304,i32*%dJ,align 4
store i8*%dH,i8**%l,align 8
%dK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dN=getelementptr inbounds i8,i8*%dH,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dQ=getelementptr inbounds i8,i8*%dH,i64 16
%dR=bitcast i8*%dQ to i8**
store i8*%dP,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dH,i64 24
%dT=bitcast i8*%dS to i32*
store i32 7,i32*%dT,align 4
%dU=call i8*@sml_alloc(i32 inreg 12)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177288,i32*%dW,align 4
store i8*%dU,i8**%d,align 8
%dX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to i32*
store i32 1,i32*%d0,align 4
%d1=call i8*@sml_alloc(i32 inreg 20)#0
%d2=getelementptr inbounds i8,i8*%d1,i64 -4
%d3=bitcast i8*%d2 to i32*
store i32 1342177296,i32*%d3,align 4
%d4=load i8*,i8**%d,align 8
%d5=bitcast i8*%d1 to i8**
store i8*%d4,i8**%d5,align 8
%d6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d7=getelementptr inbounds i8,i8*%d1,i64 8
%d8=bitcast i8*%d7 to i8**
store i8*%d6,i8**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d1,i64 16
%ea=bitcast i8*%d9 to i32*
store i32 3,i32*%ea,align 4
br label%eb
eb:
%ec=phi i8***[%c0,%cN],[%dA,%c1],[%cs,%b2]
%ed=phi i8*[%cV,%cN],[%d6,%c1],[%cE,%b2]
%ee=phi i8*[%cR,%cN],[%d1,%c1],[%cz,%b2]
store i8*%ee,i8**%e,align 8
store i8*%ed,i8**%d,align 8
%ef=load i8**,i8***%ec,align 8
store i8*null,i8**%k,align 8
%eg=load i8*,i8**%ef,align 8
%eh=getelementptr inbounds i8,i8*%eg,i64 8
%ei=bitcast i8*%eh to i8**
%ej=load i8*,i8**%ei,align 8
%ek=call fastcc i8*@_SMLFN15ExternFunSymbol5touchE(i8*inreg%ej)
store i8*%ek,i8**%f,align 8
%el=call i8*@sml_alloc(i32 inreg 28)#0
%em=getelementptr inbounds i8,i8*%el,i64 -4
%en=bitcast i8*%em to i32*
store i32 1342177304,i32*%en,align 4
store i8*%el,i8**%g,align 8
%eo=load i8*,i8**%d,align 8
%ep=bitcast i8*%el to i8**
store i8*%eo,i8**%ep,align 8
%eq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%er=getelementptr inbounds i8,i8*%el,i64 8
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=load i8*,i8**%h,align 8
%eu=getelementptr inbounds i8,i8*%el,i64 16
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%el,i64 24
%ex=bitcast i8*%ew to i32*
store i32 7,i32*%ex,align 4
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
store i8*%ey,i8**%f,align 8
%eB=getelementptr inbounds i8,i8*%ey,i64 4
%eC=bitcast i8*%eB to i32*
store i32 0,i32*%eC,align 1
%eD=bitcast i8*%ey to i32*
store i32 1,i32*%eD,align 4
%eE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eF=getelementptr inbounds i8,i8*%ey,i64 8
%eG=bitcast i8*%eF to i8**
store i8*%eE,i8**%eG,align 8
%eH=getelementptr inbounds i8,i8*%ey,i64 16
%eI=bitcast i8*%eH to i32*
store i32 2,i32*%eI,align 4
%eJ=call i8*@sml_alloc(i32 inreg 20)#0
%eK=getelementptr inbounds i8,i8*%eJ,i64 -4
%eL=bitcast i8*%eK to i32*
store i32 1342177296,i32*%eL,align 4
store i8*%eJ,i8**%n,align 8
%eM=bitcast i8*%eJ to i64*
store i64 0,i64*%eM,align 4
%eN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eO=getelementptr inbounds i8,i8*%eJ,i64 8
%eP=bitcast i8*%eO to i8**
store i8*%eN,i8**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eJ,i64 16
%eR=bitcast i8*%eQ to i32*
store i32 2,i32*%eR,align 4
%eS=bitcast i8**%e to i8***
%eT=load i8**,i8***%eS,align 8
%eU=load i8*,i8**%eT,align 8
%eV=icmp eq i8*%eU,null
br i1%eV,label%eW,label%e6
eW:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%m,align 8
%eX=call i8*@sml_alloc(i32 inreg 20)#0
%eY=getelementptr inbounds i8,i8*%eX,i64 -4
%eZ=bitcast i8*%eY to i32*
store i32 1342177296,i32*%eZ,align 4
%e0=load i8*,i8**%n,align 8
%e1=bitcast i8*%eX to i8**
store i8*%e0,i8**%e1,align 8
%e2=getelementptr inbounds i8,i8*%eX,i64 8
%e3=bitcast i8*%e2 to i8**
store i8*null,i8**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eX,i64 16
%e5=bitcast i8*%e4 to i32*
store i32 3,i32*%e5,align 4
ret i8*%eX
e6:
store i8*null,i8**%e,align 8
%e7=bitcast i8**%eT to i8***
%e8=load i8**,i8***%e7,align 8
%e9=load i8*,i8**%e8,align 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
store i8*%fb,i8**%g,align 8
%fc=getelementptr inbounds i8,i8*%e9,i64 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%k,align 8
%ff=getelementptr inbounds i8,i8*%e9,i64 16
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
store i8*%fh,i8**%l,align 8
%fi=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fj=getelementptr inbounds i8,i8*%fi,i64 16
%fk=bitcast i8*%fj to i8*(i8*,i8*)**
%fl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fk,align 8
%fm=bitcast i8*%fi to i8**
%fn=load i8*,i8**%fm,align 8
%fo=call fastcc i8*%fl(i8*inreg%fn,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a,i64 0,i32 2)to i8*))
%fp=getelementptr inbounds i8,i8*%fo,i64 16
%fq=bitcast i8*%fp to i8*(i8*,i8*)**
%fr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fq,align 8
%fs=bitcast i8*%fo to i8**
%ft=load i8*,i8**%fs,align 8
%fu=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fv=call fastcc i8*%fr(i8*inreg%ft,i8*inreg%fu)
store i8*%fv,i8**%e,align 8
%fw=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fx=getelementptr inbounds i8,i8*%fw,i64 16
%fy=bitcast i8*%fx to i8*(i8*,i8*)**
%fz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fy,align 8
%fA=bitcast i8*%fw to i8**
%fB=load i8*,i8**%fA,align 8
store i8*%fB,i8**%f,align 8
%fC=call i8*@sml_alloc(i32 inreg 12)#0
%fD=getelementptr inbounds i8,i8*%fC,i64 -4
%fE=bitcast i8*%fD to i32*
store i32 1342177288,i32*%fE,align 4
store i8*%fC,i8**%i,align 8
%fF=load i8*,i8**%h,align 8
%fG=bitcast i8*%fC to i8**
store i8*%fF,i8**%fG,align 8
%fH=getelementptr inbounds i8,i8*%fC,i64 8
%fI=bitcast i8*%fH to i32*
store i32 1,i32*%fI,align 4
%fJ=call i8*@sml_alloc(i32 inreg 28)#0
%fK=getelementptr inbounds i8,i8*%fJ,i64 -4
%fL=bitcast i8*%fK to i32*
store i32 1342177304,i32*%fL,align 4
%fM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fN=bitcast i8*%fJ to i8**
store i8*%fM,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fJ,i64 8
%fP=bitcast i8*%fO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214exportFunEntryE_758 to void(...)*),void(...)**%fP,align 8
%fQ=getelementptr inbounds i8,i8*%fJ,i64 16
%fR=bitcast i8*%fQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214exportFunEntryE_758 to void(...)*),void(...)**%fR,align 8
%fS=getelementptr inbounds i8,i8*%fJ,i64 24
%fT=bitcast i8*%fS to i32*
store i32 -2147483647,i32*%fT,align 4
%fU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fV=call fastcc i8*%fz(i8*inreg%fU,i8*inreg%fJ)
%fW=getelementptr inbounds i8,i8*%fV,i64 16
%fX=bitcast i8*%fW to i8*(i8*,i8*)**
%fY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fX,align 8
%fZ=bitcast i8*%fV to i8**
%f0=load i8*,i8**%fZ,align 8
%f1=load i8*,i8**%e,align 8
%f2=call fastcc i8*%fY(i8*inreg%f0,i8*inreg%f1)
store i8*%f2,i8**%f,align 8
%f3=call i8*@sml_alloc(i32 inreg 52)#0
%f4=getelementptr inbounds i8,i8*%f3,i64 -4
%f5=bitcast i8*%f4 to i32*
store i32 1342177328,i32*%f5,align 4
store i8*%f3,i8**%i,align 8
%f6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f7=bitcast i8*%f3 to i8**
store i8*%f6,i8**%f7,align 8
%f8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%f9=getelementptr inbounds i8,i8*%f3,i64 8
%ga=bitcast i8*%f9 to i8**
store i8*%f8,i8**%ga,align 8
%gb=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gc=getelementptr inbounds i8,i8*%f3,i64 16
%gd=bitcast i8*%gc to i8**
store i8*%gb,i8**%gd,align 8
%ge=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gf=getelementptr inbounds i8,i8*%f3,i64 24
%gg=bitcast i8*%gf to i8**
store i8*%ge,i8**%gg,align 8
%gh=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gi=getelementptr inbounds i8,i8*%f3,i64 32
%gj=bitcast i8*%gi to i8**
store i8*%gh,i8**%gj,align 8
%gk=load i8*,i8**%h,align 8
%gl=getelementptr inbounds i8,i8*%f3,i64 40
%gm=bitcast i8*%gl to i8**
store i8*%gk,i8**%gm,align 8
%gn=getelementptr inbounds i8,i8*%f3,i64 48
%go=bitcast i8*%gn to i32*
store i32 63,i32*%go,align 4
%gp=call i8*@sml_alloc(i32 inreg 20)#0
%gq=getelementptr inbounds i8,i8*%gp,i64 -4
%gr=bitcast i8*%gq to i32*
store i32 1342177296,i32*%gr,align 4
store i8*%gp,i8**%f,align 8
%gs=bitcast i8*%gp to i64*
store i64 0,i64*%gs,align 4
%gt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gu=getelementptr inbounds i8,i8*%gp,i64 8
%gv=bitcast i8*%gu to i8**
store i8*%gt,i8**%gv,align 8
%gw=getelementptr inbounds i8,i8*%gp,i64 16
%gx=bitcast i8*%gw to i32*
store i32 2,i32*%gx,align 4
%gy=load i8*,i8**%c,align 8
%gz=getelementptr inbounds i8,i8*%gy,i64 24
%gA=bitcast i8*%gz to i8**
%gB=load i8*,i8**%gA,align 8
store i8*%gB,i8**%c,align 8
%gC=call i8*@sml_alloc(i32 inreg 60)#0
%gD=getelementptr inbounds i8,i8*%gC,i64 -4
%gE=bitcast i8*%gD to i32*
store i32 1342177336,i32*%gE,align 4
%gF=load i8*,i8**%e,align 8
%gG=bitcast i8*%gC to i8**
store i8*%gF,i8**%gG,align 8
%gH=load i8*,i8**%f,align 8
%gI=getelementptr inbounds i8,i8*%gC,i64 8
%gJ=bitcast i8*%gI to i8**
store i8*%gH,i8**%gJ,align 8
%gK=getelementptr inbounds i8,i8*%gC,i64 16
%gL=bitcast i8*%gK to i8**
store i8*null,i8**%gL,align 8
%gM=load i8*,i8**%d,align 8
%gN=getelementptr inbounds i8,i8*%gC,i64 24
%gO=bitcast i8*%gN to i8**
store i8*%gM,i8**%gO,align 8
%gP=load i8*,i8**%h,align 8
%gQ=getelementptr inbounds i8,i8*%gC,i64 32
%gR=bitcast i8*%gQ to i8**
store i8*%gP,i8**%gR,align 8
%gS=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gT=getelementptr inbounds i8,i8*%gC,i64 40
%gU=bitcast i8*%gT to i8**
store i8*%gS,i8**%gU,align 8
%gV=load i8*,i8**%c,align 8
%gW=getelementptr inbounds i8,i8*%gC,i64 48
%gX=bitcast i8*%gW to i8**
store i8*%gV,i8**%gX,align 8
%gY=getelementptr inbounds i8,i8*%gC,i64 56
%gZ=bitcast i8*%gY to i32*
store i32 127,i32*%gZ,align 4
store i8*%gF,i8**%c,align 8
store i8*%gH,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*%gM,i8**%f,align 8
store i8*%gP,i8**%g,align 8
store i8*%gS,i8**%h,align 8
store i8*%gV,i8**%i,align 8
%g0=call i8*@sml_alloc(i32 inreg 60)#0
%g1=getelementptr inbounds i8,i8*%g0,i64 -4
%g2=bitcast i8*%g1 to i32*
store i32 1342177336,i32*%g2,align 4
store i8*%g0,i8**%j,align 8
%g3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%g4=bitcast i8*%g0 to i8**
store i8*%g3,i8**%g4,align 8
%g5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g6=getelementptr inbounds i8,i8*%g0,i64 8
%g7=bitcast i8*%g6 to i8**
store i8*%g5,i8**%g7,align 8
%g8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g9=getelementptr inbounds i8,i8*%g0,i64 16
%ha=bitcast i8*%g9 to i8**
store i8*%g8,i8**%ha,align 8
%hb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hc=getelementptr inbounds i8,i8*%g0,i64 24
%hd=bitcast i8*%hc to i8**
store i8*%hb,i8**%hd,align 8
%he=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hf=getelementptr inbounds i8,i8*%g0,i64 32
%hg=bitcast i8*%hf to i8**
store i8*%he,i8**%hg,align 8
%hh=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hi=getelementptr inbounds i8,i8*%g0,i64 40
%hj=bitcast i8*%hi to i8**
store i8*%hh,i8**%hj,align 8
%hk=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hl=getelementptr inbounds i8,i8*%g0,i64 48
%hm=bitcast i8*%hl to i8**
store i8*%hk,i8**%hm,align 8
%hn=getelementptr inbounds i8,i8*%g0,i64 56
%ho=bitcast i8*%hn to i32*
store i32 127,i32*%ho,align 4
%hp=call i8*@sml_alloc(i32 inreg 20)#0
%hq=getelementptr inbounds i8,i8*%hp,i64 -4
%hr=bitcast i8*%hq to i32*
store i32 1342177296,i32*%hr,align 4
store i8*%hp,i8**%c,align 8
%hs=getelementptr inbounds i8,i8*%hp,i64 4
%ht=bitcast i8*%hs to i32*
store i32 0,i32*%ht,align 1
%hu=bitcast i8*%hp to i32*
store i32 1,i32*%hu,align 4
%hv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hw=getelementptr inbounds i8,i8*%hp,i64 8
%hx=bitcast i8*%hw to i8**
store i8*%hv,i8**%hx,align 8
%hy=getelementptr inbounds i8,i8*%hp,i64 16
%hz=bitcast i8*%hy to i32*
store i32 2,i32*%hz,align 4
%hA=call i8*@sml_alloc(i32 inreg 20)#0
%hB=getelementptr inbounds i8,i8*%hA,i64 -4
%hC=bitcast i8*%hB to i32*
store i32 1342177296,i32*%hC,align 4
store i8*%hA,i8**%d,align 8
%hD=getelementptr inbounds i8,i8*%hA,i64 4
%hE=bitcast i8*%hD to i32*
store i32 0,i32*%hE,align 1
%hF=bitcast i8*%hA to i32*
store i32 1,i32*%hF,align 4
%hG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hH=getelementptr inbounds i8,i8*%hA,i64 8
%hI=bitcast i8*%hH to i8**
store i8*%hG,i8**%hI,align 8
%hJ=getelementptr inbounds i8,i8*%hA,i64 16
%hK=bitcast i8*%hJ to i32*
store i32 2,i32*%hK,align 4
%hL=call i8*@sml_alloc(i32 inreg 20)#0
%hM=getelementptr inbounds i8,i8*%hL,i64 -4
%hN=bitcast i8*%hM to i32*
store i32 1342177296,i32*%hN,align 4
%hO=load i8*,i8**%d,align 8
%hP=bitcast i8*%hL to i8**
store i8*%hO,i8**%hP,align 8
%hQ=getelementptr inbounds i8,i8*%hL,i64 8
%hR=bitcast i8*%hQ to i8**
store i8*null,i8**%hR,align 8
%hS=getelementptr inbounds i8,i8*%hL,i64 16
%hT=bitcast i8*%hS to i32*
store i32 3,i32*%hT,align 4
store i8*%hO,i8**%c,align 8
store i8*null,i8**%d,align 8
%hU=call i8*@sml_alloc(i32 inreg 20)#0
%hV=getelementptr inbounds i8,i8*%hU,i64 -4
%hW=bitcast i8*%hV to i32*
store i32 1342177296,i32*%hW,align 4
store i8*%hU,i8**%e,align 8
%hX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hY=bitcast i8*%hU to i8**
store i8*%hX,i8**%hY,align 8
%hZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%h0=getelementptr inbounds i8,i8*%hU,i64 8
%h1=bitcast i8*%h0 to i8**
store i8*%hZ,i8**%h1,align 8
%h2=getelementptr inbounds i8,i8*%hU,i64 16
%h3=bitcast i8*%h2 to i32*
store i32 3,i32*%h3,align 4
%h4=call i8*@sml_alloc(i32 inreg 20)#0
%h5=getelementptr inbounds i8,i8*%h4,i64 -4
%h6=bitcast i8*%h5 to i32*
store i32 1342177296,i32*%h6,align 4
%h7=load i8*,i8**%n,align 8
%h8=bitcast i8*%h4 to i8**
store i8*%h7,i8**%h8,align 8
%h9=load i8*,i8**%e,align 8
%ia=getelementptr inbounds i8,i8*%h4,i64 8
%ib=bitcast i8*%ia to i8**
store i8*%h9,i8**%ib,align 8
%ic=getelementptr inbounds i8,i8*%h4,i64 16
%id=bitcast i8*%ic to i32*
store i32 3,i32*%id,align 4
ret i8*%h4
}
define internal fastcc i8*@_SMLL4func_771(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLL7entryTy_773(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL11array__alloc_778(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i32*
%h=load i32,i32*%g,align 4
%i=call i8*@sml_alloc(i32 inreg 12)#0
%j=bitcast i8*%i to i32*
%k=getelementptr inbounds i8,i8*%i,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%i,i8**%f,align 8
store i32 11,i32*%j,align 4
%m=getelementptr inbounds i8,i8*%i,i64 4
%n=bitcast i8*%m to i32*
store i32%h,i32*%n,align 4
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i32*
store i32 0,i32*%p,align 4
%q=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
store i8*%q,i8**%d,align 8
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
store i8*%r,i8**%e,align 8
%u=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%r,i64 24
%D=bitcast i8*%C to i32*
store i32 7,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
store i32 3,i32*%F,align 4
%K=load i8*,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLL11array__alloc_779(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%j,align 8
store i8*%b,i8**%e,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
%q=load i8*,i8**%j,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%a,%t]
%u=phi i8*[%p,%o],[%b,%t]
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
%z=load i32,i32*%y,align 4
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=getelementptr inbounds i8,i8*%u,i64 24
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%h,align 8
%J=getelementptr inbounds i8,i8*%u,i64 32
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%i,align 8
%M=getelementptr inbounds i8,i8*%s,i64 16
%N=bitcast i8*%M to i8***
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
%Q=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Q)
%R=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%R)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%P,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%d,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210allocArrayE_552 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion210allocArrayE_552 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Q)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%R)
store i8*%ac,i8**%l,align 8
%ak=load i8*,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 40
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=icmp eq i8*%an,null
store i8*null,i8**%e,align 8
br i1%ao,label%ap,label%aW
ap:
%aq=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%i,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
%ay=bitcast i8*%ax to i32*
%az=load i32,i32*%ay,align 4
%aA=call i8*@sml_alloc(i32 inreg 12)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177288,i32*%aD,align 4
store i8*%aA,i8**%e,align 8
store i32%az,i32*%aB,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 8
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11array__alloc_778 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11array__alloc_778 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
%aR=load i8*,i8**%j,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 24
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=call fastcc i8*@_SMLL11array__alloc_778(i8*inreg%aJ,i8*inreg%aU)
br label%aZ
aW:
%aX=bitcast i8*%an to i8**
%aY=load i8*,i8**%aX,align 8
br label%aZ
aZ:
%a0=phi i8*[%aY,%aW],[%aV,%ap]
store i8*%a0,i8**%e,align 8
%a1=load i8*,i8**%j,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 24
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%k,align 8
%a5=call i8*@sml_alloc(i32 inreg 68)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177344,i32*%a7,align 4
%a8=bitcast i8*%a5 to i64*
store i64 0,i64*%a8,align 4
%a9=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ba=getelementptr inbounds i8,i8*%a5,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bg=getelementptr inbounds i8,i8*%a5,i64 24
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%a5,i64 32
%bj=bitcast i8*%bi to i32*
store i32%z,i32*%bj,align 4
%bk=getelementptr inbounds i8,i8*%a5,i64 36
%bl=bitcast i8*%bk to i32*
store i32%w,i32*%bl,align 4
%bm=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bn=getelementptr inbounds i8,i8*%a5,i64 40
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bq=getelementptr inbounds i8,i8*%a5,i64 48
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bt=getelementptr inbounds i8,i8*%a5,i64 56
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%a5,i64 64
%bw=bitcast i8*%bv to i32*
store i32 238,i32*%bw,align 4
%bx=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%by=call fastcc i8*@_SMLLN18ClosureConversion210allocArrayE_552(i8*inreg%bx,i8*inreg%a5)
%bz=getelementptr inbounds i8,i8*%by,i64 16
%bA=bitcast i8*%bz to i8*(i8*,i8*)**
%bB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bA,align 8
%bC=bitcast i8*%by to i8**
%bD=load i8*,i8**%bC,align 8
%bE=load i8*,i8**%j,align 8
%bF=getelementptr inbounds i8,i8*%bE,i64 8
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
%bI=call fastcc i8*%bB(i8*inreg%bD,i8*inreg%bH)
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%e,align 8
%bL=getelementptr inbounds i8,i8*%bI,i64 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%f,align 8
%bO=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bP=getelementptr inbounds i8,i8*%bO,i64 16
%bQ=bitcast i8*%bP to i8*(i8*,i8*)**
%bR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bQ,align 8
%bS=bitcast i8*%bO to i8**
%bT=load i8*,i8**%bS,align 8
store i8*%bT,i8**%h,align 8
%bU=bitcast i8**%j to i8***
%bV=load i8**,i8***%bU,align 8
store i8*null,i8**%j,align 8
%bW=load i8*,i8**%bV,align 8
store i8*%bW,i8**%g,align 8
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
%b0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b3=getelementptr inbounds i8,i8*%bX,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bX,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 3,i32*%b6,align 4
%b7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b8=call fastcc i8*%bR(i8*inreg%b7,i8*inreg%bX)
store i8*%b8,i8**%e,align 8
%b9=call i8*@sml_alloc(i32 inreg 28)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177304,i32*%cb,align 4
%cc=load i8*,i8**%e,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b9,i64 8
%cf=bitcast i8*%ce to i8**
store i8*null,i8**%cf,align 8
%cg=load i8*,i8**%f,align 8
%ch=getelementptr inbounds i8,i8*%b9,i64 16
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%b9,i64 24
%ck=bitcast i8*%cj to i32*
store i32 7,i32*%ck,align 4
ret i8*%b9
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_780(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_782(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_784(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLL3var_787(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL11codeEntryTy_798(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 8
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL11codeEntryTy_800(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL11recfunBinds_802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%j,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=getelementptr inbounds i8,i8*%p,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%i,align 8
%u=bitcast i8*%p to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%b9[
i32 6,label%U
i32 11,label%y
]
y:
%z=getelementptr inbounds i8,i8*%v,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%B,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=icmp eq i32%I,6
br i1%J,label%K,label%b9
K:
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%d,align 8
br label%af
U:
%V=getelementptr inbounds i8,i8*%v,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%d,align 8
%Y=call fastcc i8*@_SMLFN14BoundTypeVarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%c,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%d,align 8
br label%af
af:
%ag=phi i8*[%Z,%U],[%O,%K]
%ah=phi i8*[%ae,%U],[%T,%K]
%ai=phi i8*[%ac,%U],[%R,%K]
%aj=getelementptr inbounds i8,i8*%ag,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ah,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
store i8*%ag,i8**%f,align 8
store i8*%ai,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%e,align 8
store i8*%ah,i8**%d,align 8
%aq=call fastcc i8*@_SMLFN14BoundTypeVarID3Map9unionWithE(i32 inreg 1,i32 inreg 8)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*%at(i8*inreg%av,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aQ,i64 0,i32 2)to i8*))
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%h,align 8
%aC=load i8*,i8**%j,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%g,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%c,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aR=call fastcc i8*%az(i8*inreg%aQ,i8*inreg%aG)
store i8*%aR,i8**%g,align 8
%aS=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8*(i8*,i8*)**
%aV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aU,align 8
%aW=bitcast i8*%aS to i8**
%aX=load i8*,i8**%aW,align 8
%aY=call fastcc i8*%aV(i8*inreg%aX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aR,i64 0,i32 2)to i8*))
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 8
%a6=bitcast i8*%a5 to i8***
%a7=load i8**,i8***%a6,align 8
%a8=load i8*,i8**%a7,align 8
%a9=call fastcc i8*%a1(i8*inreg%a3,i8*inreg%a8)
store i8*%a9,i8**%h,align 8
%ba=call i8*@sml_alloc(i32 inreg 36)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177312,i32*%bc,align 4
store i8*%ba,i8**%f,align 8
%bd=getelementptr inbounds i8,i8*%ba,i64 12
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 1
%bf=bitcast i8*%ba to i8**
%bg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
store i8*%bg,i8**%bf,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 8
%bi=bitcast i8*%bh to i32*
store i32 1,i32*%bi,align 4
%bj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bk=getelementptr inbounds i8,i8*%ba,i64 16
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bn=getelementptr inbounds i8,i8*%ba,i64 24
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%ba,i64 32
%bq=bitcast i8*%bp to i32*
store i32 13,i32*%bq,align 4
%br=load i8*,i8**%i,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
%bv=call fastcc i8*@_SMLFN13FunEntryLabel8generateE(i8*inreg%bu)
store i8*%bv,i8**%e,align 8
%bw=bitcast i8**%j to i8***
%bx=load i8**,i8***%bw,align 8
store i8*null,i8**%j,align 8
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%g,align 8
%bz=call i8*@sml_alloc(i32 inreg 12)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177288,i32*%bB,align 4
store i8*%bz,i8**%h,align 8
%bC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bz,i64 8
%bF=bitcast i8*%bE to i32*
store i32 1,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 28)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177304,i32*%bI,align 4
store i8*%bG,i8**%g,align 8
%bJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bG,i64 16
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bG,i64 24
%bS=bitcast i8*%bR to i32*
store i32 7,i32*%bS,align 4
%bT=call i8*@sml_alloc(i32 inreg 36)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177312,i32*%bV,align 4
%bW=load i8*,i8**%i,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=load i8*,i8**%c,align 8
%bZ=getelementptr inbounds i8,i8*%bT,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=load i8*,i8**%g,align 8
%b2=getelementptr inbounds i8,i8*%bT,i64 16
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=load i8*,i8**%d,align 8
%b5=getelementptr inbounds i8,i8*%bT,i64 24
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bT,i64 32
%b8=bitcast i8*%b7 to i32*
store i32 15,i32*%b8,align 4
ret i8*%bT
b9:
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
%ca=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ca,i8**%c,align 8
%cb=call i8*@sml_alloc(i32 inreg 28)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177304,i32*%cd,align 4
store i8*%cb,i8**%d,align 8
%ce=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%cb,i64 8
%ch=bitcast i8*%cg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@aO,i64 0,i32 2,i64 0),i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%cb,i64 16
%cj=bitcast i8*%ci to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@aP,i64 0,i32 2,i64 0),i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cb,i64 24
%cl=bitcast i8*%ck to i32*
store i32 7,i32*%cl,align 4
%cm=call i8*@sml_alloc(i32 inreg 60)#0
%cn=getelementptr inbounds i8,i8*%cm,i64 -4
%co=bitcast i8*%cn to i32*
store i32 1342177336,i32*%co,align 4
%cp=getelementptr inbounds i8,i8*%cm,i64 56
%cq=bitcast i8*%cp to i32*
store i32 1,i32*%cq,align 4
%cr=load i8*,i8**%d,align 8
%cs=bitcast i8*%cm to i8**
store i8*%cr,i8**%cs,align 8
call void@sml_raise(i8*inreg%cm)#1
unreachable
}
define internal fastcc i8*@_SMLL12recfunVarEnv_803(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8***
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%b to i8****
%m=load i8***,i8****%l,align 8
br label%n
n:
%o=phi i8***[%m,%k],[%j,%i]
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8**,i8***%o,i64 1
%u=bitcast i8***%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=bitcast i8**%b to i8***
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=getelementptr inbounds i8,i8*%I,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
%N=bitcast i8*%I to i32*
store i32 2,i32*%N,align 4
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 2,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%b,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*null,i8**%Z,align 8
%aa=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 24
%ae=bitcast i8*%ad to i32*
store i32 7,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=getelementptr inbounds i8,i8*%af,i64 12
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%af to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i32*
store i32%s,i32*%an,align 4
%ao=load i8*,i8**%b,align 8
%ap=getelementptr inbounds i8,i8*%af,i64 16
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%af,i64 24
%as=bitcast i8*%ar to i32*
store i32 5,i32*%as,align 4
%at=load i8*,i8**%e,align 8
%au=tail call fastcc i8*%z(i8*inreg%at,i8*inreg%af)
ret i8*%au
}
define internal fastcc i8*@_SMLL2fv_805(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=load i8*,i8**%l,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%j,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_455(i8*inreg%B)
store i8*%L,i8**%b,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%b,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=tail call fastcc i8*@_SMLLN18ClosureConversion28unionSetE_426(i8*inreg%M)
ret i8*%W
}
define internal fastcc i8*@_SMLL13closureEnvVar_807(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLL14newRecfunBinds_809(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%f to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=load i8*,i8**%p,align 8
store i8*%z,i8**%f,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call fastcc i8*@_SMLLN18ClosureConversion220replaceClosureEnvVarE_651(i8*inreg%A)
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%L,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLL16makeTopFunctions_810(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%m,label%o
m:
%n=bitcast i8*%a to i8**
br label%s
o:
call void@sml_check(i32 inreg%k)
%p=load i8*,i8**%c,align 8
%q=bitcast i8**%d to i8***
%r=load i8**,i8***%q,align 8
br label%s
s:
%t=phi i8**[%r,%o],[%n,%m]
%u=phi i8*[%p,%o],[%b,%m]
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=getelementptr inbounds i8*,i8**%x,i64 2
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i8***
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%g,align 8
%F=getelementptr inbounds i8*,i8**%D,i64 2
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%h,align 8
%H=getelementptr inbounds i8*,i8**%D,i64 3
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%i,align 8
store i8*null,i8**%d,align 8
%J=load i8*,i8**%t,align 8
%K=getelementptr inbounds i8*,i8**%D,i64 1
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%J,i8*inreg%L)
store i8*%M,i8**%d,align 8
%N=load i8*,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 24
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%c,align 8
%X=call i8*@sml_alloc(i32 inreg 60)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177336,i32*%Z,align 4
store i8*%X,i8**%j,align 8
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aj=getelementptr inbounds i8,i8*%X,i64 24
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%am=getelementptr inbounds i8,i8*%X,i64 32
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ap=getelementptr inbounds i8,i8*%X,i64 40
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%X,i64 48
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%X,i64 56
%av=bitcast i8*%au to i32*
store i32 127,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%aw,i64 4
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
%aB=bitcast i8*%aw to i32*
store i32 1,i32*%aB,align 4
%aC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i32*
store i32 2,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=bitcast i8*%aH to i32*
%aJ=getelementptr inbounds i8,i8*%aH,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=getelementptr inbounds i8,i8*%aH,i64 4
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
store i32 1,i32*%aI,align 4
%aN=load i8*,i8**%c,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 2,i32*%aR,align 4
ret i8*%aH
}
define internal fastcc i8*@_SMLL16makeTopFunctions_811(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%d to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL16makeTopFunctions_810 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL16makeTopFunctions_810 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=tail call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
ret i8*%T
}
define internal fastcc i8*@_SMLL16makeTopFunctions_812(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL16makeTopFunctions_811 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL16makeTopFunctions_811 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLL15makeRecClsBinds_814(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*%o,i8**%e,align 8
%q=icmp eq i8*%o,null
br i1%q,label%r,label%s
r:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
s:
%t=bitcast i8*%o to i8**
%u=bitcast i8*%o to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%g,align 8
%x=load i8*,i8**%t,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%c,align 8
%B=bitcast i8**%h to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%w,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%f,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_685(i8*inreg%K)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=load i8*,i8**%g,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=call fastcc i8*%X(i8*inreg%ao,i8*inreg%ae)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%h,align 8
%aw=getelementptr inbounds i8,i8*%av,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%as(i8*inreg%au,i8*inreg%ay)
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%az,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%d,align 8
%aF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aG=getelementptr inbounds i8,i8*%aF,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=load i8*,i8**%h,align 8
%aK=call fastcc i8*@_SMLL15makeRecClsBinds_814(i8*inreg%aJ,i8*inreg%aI)
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aK,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%f,align 8
%aQ=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%i,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
%a6=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a7=call fastcc i8*%aT(i8*inreg%a6,i8*inreg%aW)
store i8*%a7,i8**%c,align 8
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 8
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%e,align 8
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
store i8*%bc,i8**%h,align 8
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 16
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bc,i64 24
%bo=bitcast i8*%bn to i32*
store i32 7,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
store i8*%bp,i8**%d,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bp,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=load i8*,i8**%c,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%d,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
ret i8*%bz
}
define internal fastcc i8*@_SMLL7varenv1_816(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8***
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%b to i8****
%m=load i8***,i8****%l,align 8
br label%n
n:
%o=phi i8***[%m,%k],[%j,%i]
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8**,i8***%o,i64 1
%u=bitcast i8***%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=bitcast i8**%b to i8***
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=bitcast i8*%I to i64*
store i64 0,i64*%L,align 4
%M=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
store i8*%R,i8**%b,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*null,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%R,i64 24
%ac=bitcast i8*%ab to i32*
store i32 7,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=getelementptr inbounds i8,i8*%ad,i64 12
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=load i8*,i8**%d,align 8
%aj=bitcast i8*%ad to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i32*
store i32%s,i32*%al,align 4
%am=load i8*,i8**%b,align 8
%an=getelementptr inbounds i8,i8*%ad,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ad,i64 24
%aq=bitcast i8*%ap to i32*
store i32 5,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
%as=tail call fastcc i8*%z(i8*inreg%ar,i8*inreg%ad)
ret i8*%as
}
define internal fastcc i8*@_SMLL11recfunBinds_818(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=bitcast i8*%k to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call fastcc i8*@_SMLLN18ClosureConversion220replaceClosureEnvVarE_651(i8*inreg%u)
store i8*%D,i8**%c,align 8
%E=load i8*,i8**%b,align 8
%F=getelementptr inbounds i8,i8*%E,i64 24
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 36)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177312,i32*%K,align 4
%L=load i8*,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%e,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%b,align 8
%U=getelementptr inbounds i8,i8*%I,i64 24
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%I,i64 32
%X=bitcast i8*%W to i32*
store i32 15,i32*%X,align 4
ret i8*%I
}
define internal fastcc i8*@_SMLL6varEnv_820(i8*inreg%a)#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%b,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%m,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=load i8*,i8**%b,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8***
%G=load i8**,i8***%F,align 8
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%H)
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%e,align 8
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
store i8*%L,i8**%g,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
%S=bitcast i8**%b to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
%V=getelementptr inbounds i8,i8*%U,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
store i8*%Y,i8**%e,align 8
%ab=bitcast i8*%Y to i64*
store i64 0,i64*%ab,align 4
%ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to i32*
store i32 2,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
store i8*%ah,i8**%b,align 8
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ah,i64 24
%at=bitcast i8*%as to i32*
store i32 7,i32*%at,align 4
%au=bitcast i8*%ak to i32*
store i8*null,i8**%c,align 8
%av=load i32,i32*%au,align 4
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
%az=getelementptr inbounds i8,i8*%aw,i64 12
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
%aB=load i8*,i8**%d,align 8
%aC=bitcast i8*%aw to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i32*
store i32%av,i32*%aE,align 4
%aF=load i8*,i8**%b,align 8
%aG=getelementptr inbounds i8,i8*%aw,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aw,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 5,i32*%aJ,align 4
%aK=load i8*,i8**%f,align 8
%aL=tail call fastcc i8*%A(i8*inreg%aK,i8*inreg%aw)
ret i8*%aL
}
define internal fastcc i8*@_SMLL5funTy_825(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL7closure_827(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLL7closure_829(i8*inreg%a)#4 gc"smlsharp"{
%b=getelementptr inbounds i8,i8*%a,i64 16
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
R:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
%C=alloca i8*,align 8
%D=alloca i8*,align 8
%E=alloca i8*,align 8
%F=alloca i8*,align 8
%G=alloca i8*,align 8
%H=alloca i8*,align 8
%I=alloca i8*,align 8
%J=alloca i8*,align 8
%K=alloca i8*,align 8
%L=alloca i8*,align 8
%M=alloca i8*,align 8
%N=alloca i8*,align 8
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
call void@llvm.gcroot(i8**%A,i8*null)#0
call void@llvm.gcroot(i8**%B,i8*null)#0
call void@llvm.gcroot(i8**%C,i8*null)#0
call void@llvm.gcroot(i8**%D,i8*null)#0
call void@llvm.gcroot(i8**%E,i8*null)#0
call void@llvm.gcroot(i8**%F,i8*null)#0
call void@llvm.gcroot(i8**%G,i8*null)#0
call void@llvm.gcroot(i8**%H,i8*null)#0
call void@llvm.gcroot(i8**%I,i8*null)#0
call void@llvm.gcroot(i8**%J,i8*null)#0
call void@llvm.gcroot(i8**%K,i8*null)#0
call void@llvm.gcroot(i8**%L,i8*null)#0
call void@llvm.gcroot(i8**%M,i8*null)#0
call void@llvm.gcroot(i8**%N,i8*null)#0
store i8*%a,i8**%L,align 8
%O=bitcast i8**%w to i8***
br label%P
P:
%Q=phi i8*[%iC,%gJ],[%b,%R]
%S=phi i8*[%iB,%gJ],[%c,%R]
%T=phi i8*[%iq,%gJ],[%d,%R]
store i8*%Q,i8**%w,align 8
store i8*%S,i8**%y,align 8
store i8*%T,i8**%x,align 8
%U=load atomic i32,i32*@sml_check_flag unordered,align 4
%V=icmp eq i32%U,0
br i1%V,label%aa,label%W
W:
call void@sml_check(i32 inreg%U)
%X=load i8*,i8**%y,align 8
%Y=load i8*,i8**%w,align 8
%Z=load i8*,i8**%x,align 8
br label%aa
aa:
%ab=phi i8*[%Z,%W],[%T,%P]
%ac=phi i8*[%Y,%W],[%Q,%P]
%ad=phi i8*[%X,%W],[%S,%P]
store i8*%ad,i8**%E,align 8
store i8*%ac,i8**%F,align 8
%ae=bitcast i8*%ab to i32*
%af=load i32,i32*%ae,align 4
switch i32%af,label%ag[
i32 7,label%ajE
i32 1,label%ac0
i32 4,label%VH
i32 16,label%Sb
i32 20,label%Ok
i32 5,label%Mv
i32 12,label%EN
i32 0,label%yy
i32 9,label%wV
i32 14,label%ub
i32 15,label%rs
i32 10,label%ob
i32 13,label%ni
i32 8,label%ls
i32 3,label%jC
i32 19,label%iD
i32 6,label%gJ
i32 11,label%e2
i32 18,label%dK
i32 17,label%bE
i32 2,label%ay
]
ag:
store i8*null,i8**%x,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
call void@sml_matchcomp_bug()
%ah=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ah,i8**%w,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%x,align 8
%al=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@aL,i64 0,i32 2,i64 0),i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 60)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177336,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%ar,i64 56
%av=bitcast i8*%au to i32*
store i32 1,i32*%av,align 4
%aw=load i8*,i8**%x,align 8
%ax=bitcast i8*%ar to i8**
store i8*%aw,i8**%ax,align 8
call void@sml_raise(i8*inreg%ar)#1
unreachable
ay:
store i8*null,i8**%x,align 8
%az=getelementptr inbounds i8,i8*%ab,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=bitcast i8*%aB to i32*
%aD=load i32,i32*%aC,align 4
%aE=getelementptr inbounds i8,i8*%aB,i64 16
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%y,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 24
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%z,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 32
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%A,align 8
%aN=getelementptr inbounds i8,i8*%aB,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%aR=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%aQ,i8*inreg%ac,i8*inreg%ad,i8*inreg%aP)
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%w,align 8
%aU=getelementptr inbounds i8,i8*%aR,i64 16
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%x,align 8
%aX=call i8*@sml_alloc(i32 inreg 44)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177320,i32*%aZ,align 4
store i8*%aX,i8**%B,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32%aD,i32*%a2,align 4
%a3=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%a7=getelementptr inbounds i8,i8*%aX,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ba=getelementptr inbounds i8,i8*%aX,i64 24
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%bd=getelementptr inbounds i8,i8*%aX,i64 32
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%aX,i64 40
%bg=bitcast i8*%bf to i32*
store i32 30,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
store i8*%bh,i8**%x,align 8
%bk=getelementptr inbounds i8,i8*%bh,i64 4
%bl=bitcast i8*%bk to i32*
store i32 0,i32*%bl,align 1
%bm=bitcast i8*%bh to i32*
store i32 1,i32*%bm,align 4
%bn=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 16
%br=bitcast i8*%bq to i32*
store i32 2,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%w,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i8**
store i8*null,i8**%by,align 8
%bz=load i8*,i8**%x,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bs,i64 24
%bD=bitcast i8*%bC to i32*
store i32 7,i32*%bD,align 4
ret i8*%bs
bE:
store i8*null,i8**%x,align 8
%bF=getelementptr inbounds i8,i8*%ab,i64 8
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%A,align 8
%bI=getelementptr inbounds i8,i8*%bH,i64 16
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%C,align 8
%bL=getelementptr inbounds i8,i8*%bH,i64 24
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%D,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 32
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%G,align 8
%bR=getelementptr inbounds i8,i8*%bH,i64 40
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
%bU=load i8*,i8**%L,align 8
%bV=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%bU,i8*inreg%ac,i8*inreg%ad,i8*inreg%bT)
%bW=bitcast i8*%bV to i8**
%bX=load i8*,i8**%bW,align 8
store i8*%bX,i8**%w,align 8
%bY=getelementptr inbounds i8,i8*%bV,i64 16
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%x,align 8
%b1=bitcast i8**%A to i8***
%b2=load i8**,i8***%b1,align 8
%b3=load i8*,i8**%b2,align 8
%b4=load i8*,i8**%E,align 8
%b5=load i8*,i8**%F,align 8
%b6=load i8*,i8**%D,align 8
%b7=load i8*,i8**%L,align 8
%b8=call fastcc i8*@_SMLLN18ClosureConversion215compileBranchesE_764(i8*inreg%b7,i8*inreg%b5,i8*inreg%b4,i8*inreg%b3,i8*inreg%b6)
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
store i8*%ca,i8**%y,align 8
%cb=getelementptr inbounds i8,i8*%b8,i64 8
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
store i8*%cd,i8**%z,align 8
%ce=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%E,align 8
%cj=load i8*,i8**%F,align 8
%ck=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%cl=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%ck,i8*inreg%cj,i8*inreg%ci,i8*inreg%ch)
%cm=bitcast i8*%cl to i8**
%cn=load i8*,i8**%cm,align 8
store i8*%cn,i8**%A,align 8
%co=getelementptr inbounds i8,i8*%cl,i64 16
%cp=bitcast i8*%co to i8**
%cq=load i8*,i8**%cp,align 8
store i8*%cq,i8**%B,align 8
%cr=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8*(i8*,i8*)**
%cu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ct,align 8
%cv=bitcast i8*%cr to i8**
%cw=load i8*,i8**%cv,align 8
store i8*%cw,i8**%F,align 8
%cx=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%cy=getelementptr inbounds i8,i8*%cx,i64 16
%cz=bitcast i8*%cy to i8*(i8*,i8*)**
%cA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cz,align 8
%cB=bitcast i8*%cx to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%E,align 8
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
%cG=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%cO=call fastcc i8*%cA(i8*inreg%cN,i8*inreg%cD)
store i8*%cO,i8**%y,align 8
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
%cS=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%cV=getelementptr inbounds i8,i8*%cP,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cP,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
%cZ=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%c0=call fastcc i8*%cu(i8*inreg%cZ,i8*inreg%cP)
store i8*%c0,i8**%w,align 8
%c1=call i8*@sml_alloc(i32 inreg 52)#0
%c2=getelementptr inbounds i8,i8*%c1,i64 -4
%c3=bitcast i8*%c2 to i32*
store i32 1342177328,i32*%c3,align 4
store i8*%c1,i8**%y,align 8
%c4=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%c5=bitcast i8*%c1 to i8**
store i8*%c4,i8**%c5,align 8
%c6=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%c7=getelementptr inbounds i8,i8*%c1,i64 8
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%da=getelementptr inbounds i8,i8*%c1,i64 16
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%dd=getelementptr inbounds i8,i8*%c1,i64 24
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%dg=getelementptr inbounds i8,i8*%c1,i64 32
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%dj=getelementptr inbounds i8,i8*%c1,i64 40
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%c1,i64 48
%dm=bitcast i8*%dl to i32*
store i32 63,i32*%dm,align 4
%dn=call i8*@sml_alloc(i32 inreg 20)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177296,i32*%dp,align 4
store i8*%dn,i8**%x,align 8
%dq=getelementptr inbounds i8,i8*%dn,i64 4
%dr=bitcast i8*%dq to i32*
store i32 0,i32*%dr,align 1
%ds=bitcast i8*%dn to i32*
store i32 16,i32*%ds,align 4
%dt=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%du=getelementptr inbounds i8,i8*%dn,i64 8
%dv=bitcast i8*%du to i8**
store i8*%dt,i8**%dv,align 8
%dw=getelementptr inbounds i8,i8*%dn,i64 16
%dx=bitcast i8*%dw to i32*
store i32 2,i32*%dx,align 4
%dy=call i8*@sml_alloc(i32 inreg 28)#0
%dz=getelementptr inbounds i8,i8*%dy,i64 -4
%dA=bitcast i8*%dz to i32*
store i32 1342177304,i32*%dA,align 4
%dB=load i8*,i8**%w,align 8
%dC=bitcast i8*%dy to i8**
store i8*%dB,i8**%dC,align 8
%dD=getelementptr inbounds i8,i8*%dy,i64 8
%dE=bitcast i8*%dD to i8**
store i8*null,i8**%dE,align 8
%dF=load i8*,i8**%x,align 8
%dG=getelementptr inbounds i8,i8*%dy,i64 16
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dy,i64 24
%dJ=bitcast i8*%dI to i32*
store i32 7,i32*%dJ,align 4
ret i8*%dy
dK:
store i8*null,i8**%x,align 8
%dL=getelementptr inbounds i8,i8*%ab,i64 8
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
%dO=getelementptr inbounds i8,i8*%dN,i64 8
%dP=bitcast i8*%dO to i8**
%dQ=load i8*,i8**%dP,align 8
store i8*%dQ,i8**%A,align 8
%dR=getelementptr inbounds i8,i8*%dN,i64 16
%dS=bitcast i8*%dR to i8**
%dT=load i8*,i8**%dS,align 8
store i8*%dT,i8**%z,align 8
%dU=getelementptr inbounds i8,i8*%dN,i64 24
%dV=bitcast i8*%dU to i8**
%dW=load i8*,i8**%dV,align 8
store i8*%dW,i8**%B,align 8
%dX=bitcast i8*%dN to i8**
%dY=load i8*,i8**%dX,align 8
%dZ=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%d0=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%dZ,i8*inreg%ac,i8*inreg%ad,i8*inreg%dY)
%d1=bitcast i8*%d0 to i8**
%d2=load i8*,i8**%d1,align 8
store i8*%d2,i8**%w,align 8
%d3=getelementptr inbounds i8,i8*%d0,i64 8
%d4=bitcast i8*%d3 to i8**
%d5=load i8*,i8**%d4,align 8
store i8*%d5,i8**%x,align 8
%d6=getelementptr inbounds i8,i8*%d0,i64 16
%d7=bitcast i8*%d6 to i8**
%d8=load i8*,i8**%d7,align 8
store i8*%d8,i8**%y,align 8
%d9=call i8*@sml_alloc(i32 inreg 20)#0
%ea=getelementptr inbounds i8,i8*%d9,i64 -4
%eb=bitcast i8*%ea to i32*
store i32 1342177296,i32*%eb,align 4
%ec=load i8*,i8**%A,align 8
%ed=bitcast i8*%d9 to i8**
store i8*%ec,i8**%ed,align 8
%ee=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ef=getelementptr inbounds i8,i8*%d9,i64 8
%eg=bitcast i8*%ef to i8**
store i8*%ee,i8**%eg,align 8
%eh=getelementptr inbounds i8,i8*%d9,i64 16
%ei=bitcast i8*%eh to i32*
store i32 3,i32*%ei,align 4
%ej=call fastcc i8*@_SMLFN11TypesBasics7tpappTyE(i8*inreg%d9)
store i8*%ej,i8**%z,align 8
%ek=call i8*@sml_alloc(i32 inreg 44)#0
%el=getelementptr inbounds i8,i8*%ek,i64 -4
%em=bitcast i8*%el to i32*
store i32 1342177320,i32*%em,align 4
store i8*%ek,i8**%C,align 8
%en=getelementptr inbounds i8,i8*%ek,i64 4
%eo=bitcast i8*%en to i32*
store i32 0,i32*%eo,align 1
%ep=bitcast i8*%ek to i32*
store i32 1,i32*%ep,align 4
%eq=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%er=getelementptr inbounds i8,i8*%ek,i64 8
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%eu=getelementptr inbounds i8,i8*%ek,i64 16
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%ex=getelementptr inbounds i8,i8*%ek,i64 24
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%eA=getelementptr inbounds i8,i8*%ek,i64 32
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%ek,i64 40
%eD=bitcast i8*%eC to i32*
store i32 30,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 20)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177296,i32*%eG,align 4
store i8*%eE,i8**%y,align 8
%eH=getelementptr inbounds i8,i8*%eE,i64 4
%eI=bitcast i8*%eH to i32*
store i32 0,i32*%eI,align 1
%eJ=bitcast i8*%eE to i32*
store i32 1,i32*%eJ,align 4
%eK=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%eL=getelementptr inbounds i8,i8*%eE,i64 8
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eE,i64 16
%eO=bitcast i8*%eN to i32*
store i32 2,i32*%eO,align 4
%eP=call i8*@sml_alloc(i32 inreg 28)#0
%eQ=getelementptr inbounds i8,i8*%eP,i64 -4
%eR=bitcast i8*%eQ to i32*
store i32 1342177304,i32*%eR,align 4
%eS=load i8*,i8**%w,align 8
%eT=bitcast i8*%eP to i8**
store i8*%eS,i8**%eT,align 8
%eU=load i8*,i8**%x,align 8
%eV=getelementptr inbounds i8,i8*%eP,i64 8
%eW=bitcast i8*%eV to i8**
store i8*%eU,i8**%eW,align 8
%eX=load i8*,i8**%y,align 8
%eY=getelementptr inbounds i8,i8*%eP,i64 16
%eZ=bitcast i8*%eY to i8**
store i8*%eX,i8**%eZ,align 8
%e0=getelementptr inbounds i8,i8*%eP,i64 24
%e1=bitcast i8*%e0 to i32*
store i32 7,i32*%e1,align 4
ret i8*%eP
e2:
store i8*null,i8**%x,align 8
%e3=getelementptr inbounds i8,i8*%ab,i64 8
%e4=bitcast i8*%e3 to i8**
%e5=load i8*,i8**%e4,align 8
store i8*%e5,i8**%w,align 8
%e6=bitcast i8*%e5 to i8**
%e7=load i8*,i8**%e6,align 8
store i8*%e7,i8**%z,align 8
%e8=getelementptr inbounds i8,i8*%e5,i64 16
%e9=bitcast i8*%e8 to i8**
%fa=load i8*,i8**%e9,align 8
store i8*%fa,i8**%A,align 8
%fb=getelementptr inbounds i8,i8*%e5,i64 24
%fc=bitcast i8*%fb to i8**
%fd=load i8*,i8**%fc,align 8
store i8*%fd,i8**%B,align 8
%fe=call i8*@sml_alloc(i32 inreg 20)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177296,i32*%fg,align 4
%fh=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%fi=bitcast i8*%fe to i8**
store i8*%fh,i8**%fi,align 8
%fj=load i8*,i8**%z,align 8
%fk=getelementptr inbounds i8,i8*%fe,i64 8
%fl=bitcast i8*%fk to i8**
store i8*%fj,i8**%fl,align 8
%fm=getelementptr inbounds i8,i8*%fe,i64 16
%fn=bitcast i8*%fm to i32*
store i32 3,i32*%fn,align 4
%fo=call fastcc i8*@_SMLLN18ClosureConversion214addBoundTyvarsE_725(i8*inreg%fe)
%fp=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%fq=getelementptr inbounds i8,i8*%fp,i64 8
%fr=bitcast i8*%fq to i8**
%fs=load i8*,i8**%fr,align 8
%ft=load i8*,i8**%F,align 8
%fu=load i8*,i8**%L,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%fv=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%fu,i8*inreg%ft,i8*inreg%fo,i8*inreg%fs)
%fw=bitcast i8*%fv to i8**
%fx=load i8*,i8**%fw,align 8
store i8*%fx,i8**%w,align 8
%fy=getelementptr inbounds i8,i8*%fv,i64 8
%fz=bitcast i8*%fy to i8**
%fA=load i8*,i8**%fz,align 8
store i8*%fA,i8**%x,align 8
%fB=getelementptr inbounds i8,i8*%fv,i64 16
%fC=bitcast i8*%fB to i8**
%fD=load i8*,i8**%fC,align 8
store i8*%fD,i8**%y,align 8
%fE=call i8*@sml_alloc(i32 inreg 28)#0
%fF=getelementptr inbounds i8,i8*%fE,i64 -4
%fG=bitcast i8*%fF to i32*
store i32 1342177304,i32*%fG,align 4
store i8*%fE,i8**%C,align 8
%fH=load i8*,i8**%A,align 8
%fI=bitcast i8*%fE to i8**
store i8*%fH,i8**%fI,align 8
%fJ=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%fK=getelementptr inbounds i8,i8*%fE,i64 8
%fL=bitcast i8*%fK to i8**
store i8*%fJ,i8**%fL,align 8
%fM=getelementptr inbounds i8,i8*%fE,i64 16
%fN=bitcast i8*%fM to i8**
store i8*null,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fE,i64 24
%fP=bitcast i8*%fO to i32*
store i32 7,i32*%fP,align 4
%fQ=call i8*@sml_alloc(i32 inreg 20)#0
%fR=getelementptr inbounds i8,i8*%fQ,i64 -4
%fS=bitcast i8*%fR to i32*
store i32 1342177296,i32*%fS,align 4
store i8*%fQ,i8**%D,align 8
%fT=getelementptr inbounds i8,i8*%fQ,i64 4
%fU=bitcast i8*%fT to i32*
store i32 0,i32*%fU,align 1
%fV=bitcast i8*%fQ to i32*
store i32 7,i32*%fV,align 4
%fW=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%fX=getelementptr inbounds i8,i8*%fQ,i64 8
%fY=bitcast i8*%fX to i8**
store i8*%fW,i8**%fY,align 8
%fZ=getelementptr inbounds i8,i8*%fQ,i64 16
%f0=bitcast i8*%fZ to i32*
store i32 2,i32*%f0,align 4
%f1=call i8*@sml_alloc(i32 inreg 44)#0
%f2=getelementptr inbounds i8,i8*%f1,i64 -4
%f3=bitcast i8*%f2 to i32*
store i32 1342177320,i32*%f3,align 4
store i8*%f1,i8**%z,align 8
%f4=getelementptr inbounds i8,i8*%f1,i64 4
%f5=bitcast i8*%f4 to i32*
store i32 0,i32*%f5,align 1
%f6=bitcast i8*%f1 to i32*
store i32 1,i32*%f6,align 4
%f7=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%f8=getelementptr inbounds i8,i8*%f1,i64 8
%f9=bitcast i8*%f8 to i8**
store i8*%f7,i8**%f9,align 8
%ga=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%gb=getelementptr inbounds i8,i8*%f1,i64 16
%gc=bitcast i8*%gb to i8**
store i8*%ga,i8**%gc,align 8
%gd=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%ge=getelementptr inbounds i8,i8*%f1,i64 24
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%gh=getelementptr inbounds i8,i8*%f1,i64 32
%gi=bitcast i8*%gh to i8**
store i8*%gg,i8**%gi,align 8
%gj=getelementptr inbounds i8,i8*%f1,i64 40
%gk=bitcast i8*%gj to i32*
store i32 30,i32*%gk,align 4
%gl=call i8*@sml_alloc(i32 inreg 20)#0
%gm=getelementptr inbounds i8,i8*%gl,i64 -4
%gn=bitcast i8*%gm to i32*
store i32 1342177296,i32*%gn,align 4
store i8*%gl,i8**%y,align 8
%go=getelementptr inbounds i8,i8*%gl,i64 4
%gp=bitcast i8*%go to i32*
store i32 0,i32*%gp,align 1
%gq=bitcast i8*%gl to i32*
store i32 1,i32*%gq,align 4
%gr=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%gs=getelementptr inbounds i8,i8*%gl,i64 8
%gt=bitcast i8*%gs to i8**
store i8*%gr,i8**%gt,align 8
%gu=getelementptr inbounds i8,i8*%gl,i64 16
%gv=bitcast i8*%gu to i32*
store i32 2,i32*%gv,align 4
%gw=call i8*@sml_alloc(i32 inreg 28)#0
%gx=getelementptr inbounds i8,i8*%gw,i64 -4
%gy=bitcast i8*%gx to i32*
store i32 1342177304,i32*%gy,align 4
%gz=load i8*,i8**%w,align 8
%gA=bitcast i8*%gw to i8**
store i8*%gz,i8**%gA,align 8
%gB=load i8*,i8**%x,align 8
%gC=getelementptr inbounds i8,i8*%gw,i64 8
%gD=bitcast i8*%gC to i8**
store i8*%gB,i8**%gD,align 8
%gE=load i8*,i8**%y,align 8
%gF=getelementptr inbounds i8,i8*%gw,i64 16
%gG=bitcast i8*%gF to i8**
store i8*%gE,i8**%gG,align 8
%gH=getelementptr inbounds i8,i8*%gw,i64 24
%gI=bitcast i8*%gH to i32*
store i32 7,i32*%gI,align 4
ret i8*%gw
gJ:
%gK=getelementptr inbounds i8,i8*%ab,i64 8
%gL=bitcast i8*%gK to i8**
%gM=load i8*,i8**%gL,align 8
store i8*%gM,i8**%w,align 8
%gN=getelementptr inbounds i8,i8*%gM,i64 16
%gO=bitcast i8*%gN to i8**
%gP=load i8*,i8**%gO,align 8
store i8*%gP,i8**%y,align 8
%gQ=getelementptr inbounds i8,i8*%gM,i64 24
%gR=bitcast i8*%gQ to i8**
%gS=load i8*,i8**%gR,align 8
store i8*%gS,i8**%z,align 8
%gT=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gU=getelementptr inbounds i8,i8*%gT,i64 16
%gV=bitcast i8*%gU to i8*(i8*,i8*)**
%gW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gV,align 8
%gX=bitcast i8*%gT to i8**
%gY=load i8*,i8**%gX,align 8
%gZ=call fastcc i8*%gW(i8*inreg%gY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aK,i64 0,i32 2)to i8*))
%g0=getelementptr inbounds i8,i8*%gZ,i64 16
%g1=bitcast i8*%g0 to i8*(i8*,i8*)**
%g2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g1,align 8
%g3=bitcast i8*%gZ to i8**
%g4=load i8*,i8**%g3,align 8
%g5=load i8**,i8***%O,align 8
store i8*null,i8**%w,align 8
%g6=load i8*,i8**%g5,align 8
%g7=call fastcc i8*%g2(i8*inreg%g4,i8*inreg%g6)
store i8*%g7,i8**%w,align 8
%g8=call i8*@sml_alloc(i32 inreg 20)#0
%g9=getelementptr inbounds i8,i8*%g8,i64 -4
%ha=bitcast i8*%g9 to i32*
store i32 1342177296,i32*%ha,align 4
store i8*%g8,i8**%A,align 8
%hb=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%hc=bitcast i8*%g8 to i8**
store i8*%hb,i8**%hc,align 8
%hd=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%he=getelementptr inbounds i8,i8*%g8,i64 8
%hf=bitcast i8*%he to i8**
store i8*%hd,i8**%hf,align 8
%hg=getelementptr inbounds i8,i8*%g8,i64 16
%hh=bitcast i8*%hg to i32*
store i32 3,i32*%hh,align 4
%hi=call i8*@sml_alloc(i32 inreg 20)#0
%hj=bitcast i8*%hi to i32*
%hk=getelementptr inbounds i8,i8*%hi,i64 -4
%hl=bitcast i8*%hk to i32*
store i32 1342177296,i32*%hl,align 4
%hm=getelementptr inbounds i8,i8*%hi,i64 4
%hn=bitcast i8*%hm to i32*
store i32 0,i32*%hn,align 1
store i32 6,i32*%hj,align 4
%ho=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%hp=getelementptr inbounds i8,i8*%hi,i64 8
%hq=bitcast i8*%hp to i8**
store i8*%ho,i8**%hq,align 8
%hr=getelementptr inbounds i8,i8*%hi,i64 16
%hs=bitcast i8*%hr to i32*
store i32 2,i32*%hs,align 4
%ht=call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg%hi)
store i8*%ht,i8**%w,align 8
%hu=call i8*@sml_alloc(i32 inreg 28)#0
%hv=getelementptr inbounds i8,i8*%hu,i64 -4
%hw=bitcast i8*%hv to i32*
store i32 1342177304,i32*%hw,align 4
store i8*%hu,i8**%z,align 8
%hx=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%hy=bitcast i8*%hu to i8**
store i8*%hx,i8**%hy,align 8
%hz=load i8*,i8**%w,align 8
%hA=getelementptr inbounds i8,i8*%hu,i64 8
%hB=bitcast i8*%hA to i8**
store i8*%hz,i8**%hB,align 8
%hC=load i8*,i8**%y,align 8
%hD=getelementptr inbounds i8,i8*%hu,i64 16
%hE=bitcast i8*%hD to i8**
store i8*%hC,i8**%hE,align 8
%hF=getelementptr inbounds i8,i8*%hu,i64 24
%hG=bitcast i8*%hF to i32*
store i32 7,i32*%hG,align 4
%hH=call i8*@sml_alloc(i32 inreg 20)#0
%hI=getelementptr inbounds i8,i8*%hH,i64 -4
%hJ=bitcast i8*%hI to i32*
store i32 1342177296,i32*%hJ,align 4
store i8*%hH,i8**%A,align 8
%hK=getelementptr inbounds i8,i8*%hH,i64 4
%hL=bitcast i8*%hK to i32*
store i32 0,i32*%hL,align 1
%hM=bitcast i8*%hH to i32*
store i32 2,i32*%hM,align 4
%hN=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%hO=getelementptr inbounds i8,i8*%hH,i64 8
%hP=bitcast i8*%hO to i8**
store i8*%hN,i8**%hP,align 8
%hQ=getelementptr inbounds i8,i8*%hH,i64 16
%hR=bitcast i8*%hQ to i32*
store i32 2,i32*%hR,align 4
%hS=call i8*@sml_alloc(i32 inreg 20)#0
%hT=getelementptr inbounds i8,i8*%hS,i64 -4
%hU=bitcast i8*%hT to i32*
store i32 1342177296,i32*%hU,align 4
store i8*%hS,i8**%x,align 8
%hV=load i8*,i8**%y,align 8
%hW=bitcast i8*%hS to i8**
store i8*%hV,i8**%hW,align 8
%hX=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%hY=getelementptr inbounds i8,i8*%hS,i64 8
%hZ=bitcast i8*%hY to i8**
store i8*%hX,i8**%hZ,align 8
%h0=getelementptr inbounds i8,i8*%hS,i64 16
%h1=bitcast i8*%h0 to i32*
store i32 3,i32*%h1,align 4
%h2=call i8*@sml_alloc(i32 inreg 20)#0
%h3=getelementptr inbounds i8,i8*%h2,i64 -4
%h4=bitcast i8*%h3 to i32*
store i32 1342177296,i32*%h4,align 4
store i8*%h2,i8**%z,align 8
%h5=getelementptr inbounds i8,i8*%h2,i64 4
%h6=bitcast i8*%h5 to i32*
store i32 0,i32*%h6,align 1
%h7=bitcast i8*%h2 to i32*
store i32 20,i32*%h7,align 4
%h8=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%h9=getelementptr inbounds i8,i8*%h2,i64 8
%ia=bitcast i8*%h9 to i8**
store i8*%h8,i8**%ia,align 8
%ib=getelementptr inbounds i8,i8*%h2,i64 16
%ic=bitcast i8*%ib to i32*
store i32 2,i32*%ic,align 4
%id=call i8*@sml_alloc(i32 inreg 28)#0
%ie=getelementptr inbounds i8,i8*%id,i64 -4
%if=bitcast i8*%ie to i32*
store i32 1342177304,i32*%if,align 4
store i8*%id,i8**%w,align 8
%ig=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%ih=bitcast i8*%id to i8**
store i8*%ig,i8**%ih,align 8
%ii=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%ij=getelementptr inbounds i8,i8*%id,i64 8
%ik=bitcast i8*%ij to i8**
store i8*%ii,i8**%ik,align 8
%il=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%im=getelementptr inbounds i8,i8*%id,i64 16
%in=bitcast i8*%im to i8**
store i8*%il,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%id,i64 24
%ip=bitcast i8*%io to i32*
store i32 7,i32*%ip,align 4
%iq=call i8*@sml_alloc(i32 inreg 20)#0
%ir=bitcast i8*%iq to i32*
%is=getelementptr inbounds i8,i8*%iq,i64 -4
%it=bitcast i8*%is to i32*
store i32 1342177296,i32*%it,align 4
%iu=getelementptr inbounds i8,i8*%iq,i64 4
%iv=bitcast i8*%iu to i32*
store i32 0,i32*%iv,align 1
store i32 9,i32*%ir,align 4
%iw=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%ix=getelementptr inbounds i8,i8*%iq,i64 8
%iy=bitcast i8*%ix to i8**
store i8*%iw,i8**%iy,align 8
%iz=getelementptr inbounds i8,i8*%iq,i64 16
%iA=bitcast i8*%iz to i32*
store i32 2,i32*%iA,align 4
%iB=load i8*,i8**%E,align 8
%iC=load i8*,i8**%F,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
br label%P
iD:
store i8*null,i8**%x,align 8
%iE=getelementptr inbounds i8,i8*%ab,i64 8
%iF=bitcast i8*%iE to i8**
%iG=load i8*,i8**%iF,align 8
%iH=getelementptr inbounds i8,i8*%iG,i64 8
%iI=bitcast i8*%iH to i8**
%iJ=load i8*,i8**%iI,align 8
store i8*%iJ,i8**%y,align 8
%iK=getelementptr inbounds i8,i8*%iG,i64 16
%iL=bitcast i8*%iK to i8**
%iM=load i8*,i8**%iL,align 8
store i8*%iM,i8**%z,align 8
%iN=getelementptr inbounds i8,i8*%iG,i64 24
%iO=bitcast i8*%iN to i8**
%iP=load i8*,i8**%iO,align 8
store i8*%iP,i8**%A,align 8
%iQ=bitcast i8*%iG to i8**
%iR=load i8*,i8**%iQ,align 8
%iS=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%iT=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%iS,i8*inreg%ac,i8*inreg%ad,i8*inreg%iR)
%iU=bitcast i8*%iT to i8**
%iV=load i8*,i8**%iU,align 8
store i8*%iV,i8**%w,align 8
%iW=getelementptr inbounds i8,i8*%iT,i64 8
%iX=bitcast i8*%iW to i8**
%iY=load i8*,i8**%iX,align 8
store i8*%iY,i8**%x,align 8
%iZ=call i8*@sml_alloc(i32 inreg 36)#0
%i0=getelementptr inbounds i8,i8*%iZ,i64 -4
%i1=bitcast i8*%i0 to i32*
store i32 1342177312,i32*%i1,align 4
store i8*%iZ,i8**%B,align 8
%i2=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%i3=bitcast i8*%iZ to i8**
store i8*%i2,i8**%i3,align 8
%i4=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%i5=getelementptr inbounds i8,i8*%iZ,i64 8
%i6=bitcast i8*%i5 to i8**
store i8*%i4,i8**%i6,align 8
%i7=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%i8=getelementptr inbounds i8,i8*%iZ,i64 16
%i9=bitcast i8*%i8 to i8**
store i8*%i7,i8**%i9,align 8
%ja=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%jb=getelementptr inbounds i8,i8*%iZ,i64 24
%jc=bitcast i8*%jb to i8**
store i8*%ja,i8**%jc,align 8
%jd=getelementptr inbounds i8,i8*%iZ,i64 32
%je=bitcast i8*%jd to i32*
store i32 15,i32*%je,align 4
%jf=call i8*@sml_alloc(i32 inreg 20)#0
%jg=getelementptr inbounds i8,i8*%jf,i64 -4
%jh=bitcast i8*%jg to i32*
store i32 1342177296,i32*%jh,align 4
store i8*%jf,i8**%x,align 8
%ji=getelementptr inbounds i8,i8*%jf,i64 4
%jj=bitcast i8*%ji to i32*
store i32 0,i32*%jj,align 1
%jk=bitcast i8*%jf to i32*
store i32 17,i32*%jk,align 4
%jl=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%jm=getelementptr inbounds i8,i8*%jf,i64 8
%jn=bitcast i8*%jm to i8**
store i8*%jl,i8**%jn,align 8
%jo=getelementptr inbounds i8,i8*%jf,i64 16
%jp=bitcast i8*%jo to i32*
store i32 2,i32*%jp,align 4
%jq=call i8*@sml_alloc(i32 inreg 28)#0
%jr=getelementptr inbounds i8,i8*%jq,i64 -4
%js=bitcast i8*%jr to i32*
store i32 1342177304,i32*%js,align 4
%jt=load i8*,i8**%w,align 8
%ju=bitcast i8*%jq to i8**
store i8*%jt,i8**%ju,align 8
%jv=getelementptr inbounds i8,i8*%jq,i64 8
%jw=bitcast i8*%jv to i8**
store i8*null,i8**%jw,align 8
%jx=load i8*,i8**%x,align 8
%jy=getelementptr inbounds i8,i8*%jq,i64 16
%jz=bitcast i8*%jy to i8**
store i8*%jx,i8**%jz,align 8
%jA=getelementptr inbounds i8,i8*%jq,i64 24
%jB=bitcast i8*%jA to i32*
store i32 7,i32*%jB,align 4
ret i8*%jq
jC:
store i8*null,i8**%x,align 8
%jD=getelementptr inbounds i8,i8*%ab,i64 8
%jE=bitcast i8*%jD to i8**
%jF=load i8*,i8**%jE,align 8
store i8*%jF,i8**%y,align 8
%jG=bitcast i8*%jF to i8**
%jH=load i8*,i8**%jG,align 8
store i8*%jH,i8**%A,align 8
%jI=getelementptr inbounds i8,i8*%jF,i64 16
%jJ=bitcast i8*%jI to i8**
%jK=load i8*,i8**%jJ,align 8
store i8*%jK,i8**%B,align 8
%jL=getelementptr inbounds i8,i8*%jF,i64 24
%jM=bitcast i8*%jL to i8**
%jN=load i8*,i8**%jM,align 8
store i8*%jN,i8**%C,align 8
%jO=getelementptr inbounds i8,i8*%jF,i64 32
%jP=bitcast i8*%jO to i8**
%jQ=load i8*,i8**%jP,align 8
store i8*%jQ,i8**%D,align 8
%jR=call i8*@sml_alloc(i32 inreg 20)#0
%jS=getelementptr inbounds i8,i8*%jR,i64 -4
%jT=bitcast i8*%jS to i32*
store i32 1342177296,i32*%jT,align 4
%jU=load i8*,i8**%E,align 8
%jV=bitcast i8*%jR to i8**
store i8*%jU,i8**%jV,align 8
%jW=load i8*,i8**%A,align 8
%jX=getelementptr inbounds i8,i8*%jR,i64 8
%jY=bitcast i8*%jX to i8**
store i8*%jW,i8**%jY,align 8
%jZ=getelementptr inbounds i8,i8*%jR,i64 16
%j0=bitcast i8*%jZ to i32*
store i32 3,i32*%j0,align 4
%j1=call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%jR)
%j2=load i8*,i8**%y,align 8
%j3=getelementptr inbounds i8,i8*%j2,i64 8
%j4=bitcast i8*%j3 to i8**
%j5=load i8*,i8**%j4,align 8
%j6=load i8*,i8**%F,align 8
%j7=load i8*,i8**%L,align 8
%j8=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%j7,i8*inreg%j6,i8*inreg%j1,i8*inreg%j5)
%j9=bitcast i8*%j8 to i8**
%ka=load i8*,i8**%j9,align 8
store i8*%ka,i8**%w,align 8
%kb=getelementptr inbounds i8,i8*%j8,i64 16
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%x,align 8
%ke=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%kf=getelementptr inbounds i8,i8*%ke,i64 40
%kg=bitcast i8*%kf to i8**
%kh=load i8*,i8**%kg,align 8
%ki=load i8*,i8**%E,align 8
%kj=load i8*,i8**%F,align 8
%kk=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%kl=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%kk,i8*inreg%kj,i8*inreg%ki,i8*inreg%kh)
%km=bitcast i8*%kl to i8**
%kn=load i8*,i8**%km,align 8
store i8*%kn,i8**%y,align 8
%ko=getelementptr inbounds i8,i8*%kl,i64 16
%kp=bitcast i8*%ko to i8**
%kq=load i8*,i8**%kp,align 8
store i8*%kq,i8**%z,align 8
%kr=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ks=getelementptr inbounds i8,i8*%kr,i64 16
%kt=bitcast i8*%ks to i8*(i8*,i8*)**
%ku=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kt,align 8
%kv=bitcast i8*%kr to i8**
%kw=load i8*,i8**%kv,align 8
store i8*%kw,i8**%E,align 8
%kx=call i8*@sml_alloc(i32 inreg 20)#0
%ky=getelementptr inbounds i8,i8*%kx,i64 -4
%kz=bitcast i8*%ky to i32*
store i32 1342177296,i32*%kz,align 4
%kA=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%kB=bitcast i8*%kx to i8**
store i8*%kA,i8**%kB,align 8
%kC=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%kD=getelementptr inbounds i8,i8*%kx,i64 8
%kE=bitcast i8*%kD to i8**
store i8*%kC,i8**%kE,align 8
%kF=getelementptr inbounds i8,i8*%kx,i64 16
%kG=bitcast i8*%kF to i32*
store i32 3,i32*%kG,align 4
%kH=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%kI=call fastcc i8*%ku(i8*inreg%kH,i8*inreg%kx)
store i8*%kI,i8**%w,align 8
%kJ=call i8*@sml_alloc(i32 inreg 52)#0
%kK=getelementptr inbounds i8,i8*%kJ,i64 -4
%kL=bitcast i8*%kK to i32*
store i32 1342177328,i32*%kL,align 4
store i8*%kJ,i8**%y,align 8
%kM=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%kN=bitcast i8*%kJ to i8**
store i8*%kM,i8**%kN,align 8
%kO=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%kP=getelementptr inbounds i8,i8*%kJ,i64 8
%kQ=bitcast i8*%kP to i8**
store i8*%kO,i8**%kQ,align 8
%kR=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%kS=getelementptr inbounds i8,i8*%kJ,i64 16
%kT=bitcast i8*%kS to i8**
store i8*%kR,i8**%kT,align 8
%kU=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%kV=getelementptr inbounds i8,i8*%kJ,i64 24
%kW=bitcast i8*%kV to i8**
store i8*%kU,i8**%kW,align 8
%kX=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%kY=getelementptr inbounds i8,i8*%kJ,i64 32
%kZ=bitcast i8*%kY to i8**
store i8*%kX,i8**%kZ,align 8
%k0=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%k1=getelementptr inbounds i8,i8*%kJ,i64 40
%k2=bitcast i8*%k1 to i8**
store i8*%k0,i8**%k2,align 8
%k3=getelementptr inbounds i8,i8*%kJ,i64 48
%k4=bitcast i8*%k3 to i32*
store i32 63,i32*%k4,align 4
%k5=call i8*@sml_alloc(i32 inreg 20)#0
%k6=getelementptr inbounds i8,i8*%k5,i64 -4
%k7=bitcast i8*%k6 to i32*
store i32 1342177296,i32*%k7,align 4
store i8*%k5,i8**%x,align 8
%k8=getelementptr inbounds i8,i8*%k5,i64 4
%k9=bitcast i8*%k8 to i32*
store i32 0,i32*%k9,align 1
%la=bitcast i8*%k5 to i32*
store i32 2,i32*%la,align 4
%lb=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%lc=getelementptr inbounds i8,i8*%k5,i64 8
%ld=bitcast i8*%lc to i8**
store i8*%lb,i8**%ld,align 8
%le=getelementptr inbounds i8,i8*%k5,i64 16
%lf=bitcast i8*%le to i32*
store i32 2,i32*%lf,align 4
%lg=call i8*@sml_alloc(i32 inreg 28)#0
%lh=getelementptr inbounds i8,i8*%lg,i64 -4
%li=bitcast i8*%lh to i32*
store i32 1342177304,i32*%li,align 4
%lj=load i8*,i8**%w,align 8
%lk=bitcast i8*%lg to i8**
store i8*%lj,i8**%lk,align 8
%ll=getelementptr inbounds i8,i8*%lg,i64 8
%lm=bitcast i8*%ll to i8**
store i8*null,i8**%lm,align 8
%ln=load i8*,i8**%x,align 8
%lo=getelementptr inbounds i8,i8*%lg,i64 16
%lp=bitcast i8*%lo to i8**
store i8*%ln,i8**%lp,align 8
%lq=getelementptr inbounds i8,i8*%lg,i64 24
%lr=bitcast i8*%lq to i32*
store i32 7,i32*%lr,align 4
ret i8*%lg
ls:
store i8*null,i8**%x,align 8
%lt=getelementptr inbounds i8,i8*%ab,i64 8
%lu=bitcast i8*%lt to i8**
%lv=load i8*,i8**%lu,align 8
store i8*%lv,i8**%y,align 8
%lw=bitcast i8*%lv to i8**
%lx=load i8*,i8**%lw,align 8
store i8*%lx,i8**%A,align 8
%ly=getelementptr inbounds i8,i8*%lv,i64 16
%lz=bitcast i8*%ly to i8**
%lA=load i8*,i8**%lz,align 8
store i8*%lA,i8**%B,align 8
%lB=getelementptr inbounds i8,i8*%lv,i64 24
%lC=bitcast i8*%lB to i8**
%lD=load i8*,i8**%lC,align 8
store i8*%lD,i8**%C,align 8
%lE=getelementptr inbounds i8,i8*%lv,i64 32
%lF=bitcast i8*%lE to i8**
%lG=load i8*,i8**%lF,align 8
%lH=load i8*,i8**%L,align 8
%lI=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%lH,i8*inreg%ac,i8*inreg%ad,i8*inreg%lG)
%lJ=bitcast i8*%lI to i8**
%lK=load i8*,i8**%lJ,align 8
store i8*%lK,i8**%w,align 8
%lL=getelementptr inbounds i8,i8*%lI,i64 16
%lM=bitcast i8*%lL to i8**
%lN=load i8*,i8**%lM,align 8
store i8*%lN,i8**%x,align 8
%lO=call i8*@sml_alloc(i32 inreg 20)#0
%lP=getelementptr inbounds i8,i8*%lO,i64 -4
%lQ=bitcast i8*%lP to i32*
store i32 1342177296,i32*%lQ,align 4
store i8*%lO,i8**%z,align 8
%lR=load i8*,i8**%A,align 8
%lS=bitcast i8*%lO to i8**
store i8*%lR,i8**%lS,align 8
%lT=getelementptr inbounds i8,i8*%lO,i64 8
%lU=bitcast i8*%lT to i8**
store i8*null,i8**%lU,align 8
%lV=getelementptr inbounds i8,i8*%lO,i64 16
%lW=bitcast i8*%lV to i32*
store i32 3,i32*%lW,align 4
%lX=call i8*@sml_alloc(i32 inreg 20)#0
%lY=getelementptr inbounds i8,i8*%lX,i64 -4
%lZ=bitcast i8*%lY to i32*
store i32 1342177296,i32*%lZ,align 4
%l0=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%l1=bitcast i8*%lX to i8**
store i8*%l0,i8**%l1,align 8
%l2=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%l3=getelementptr inbounds i8,i8*%lX,i64 8
%l4=bitcast i8*%l3 to i8**
store i8*%l2,i8**%l4,align 8
%l5=getelementptr inbounds i8,i8*%lX,i64 16
%l6=bitcast i8*%l5 to i32*
store i32 3,i32*%l6,align 4
%l7=call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%lX)
%l8=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%l9=getelementptr inbounds i8,i8*%l8,i64 8
%ma=bitcast i8*%l9 to i8**
%mb=load i8*,i8**%ma,align 8
%mc=load i8*,i8**%F,align 8
%md=load i8*,i8**%L,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%me=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%md,i8*inreg%mc,i8*inreg%l7,i8*inreg%mb)
%mf=bitcast i8*%me to i8**
%mg=load i8*,i8**%mf,align 8
store i8*%mg,i8**%y,align 8
%mh=getelementptr inbounds i8,i8*%me,i64 16
%mi=bitcast i8*%mh to i8**
%mj=load i8*,i8**%mi,align 8
store i8*%mj,i8**%z,align 8
%mk=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ml=getelementptr inbounds i8,i8*%mk,i64 16
%mm=bitcast i8*%ml to i8*(i8*,i8*)**
%mn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mm,align 8
%mo=bitcast i8*%mk to i8**
%mp=load i8*,i8**%mo,align 8
store i8*%mp,i8**%D,align 8
%mq=call i8*@sml_alloc(i32 inreg 20)#0
%mr=getelementptr inbounds i8,i8*%mq,i64 -4
%ms=bitcast i8*%mr to i32*
store i32 1342177296,i32*%ms,align 4
%mt=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%mu=bitcast i8*%mq to i8**
store i8*%mt,i8**%mu,align 8
%mv=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%mw=getelementptr inbounds i8,i8*%mq,i64 8
%mx=bitcast i8*%mw to i8**
store i8*%mv,i8**%mx,align 8
%my=getelementptr inbounds i8,i8*%mq,i64 16
%mz=bitcast i8*%my to i32*
store i32 3,i32*%mz,align 4
%mA=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%mB=call fastcc i8*%mn(i8*inreg%mA,i8*inreg%mq)
store i8*%mB,i8**%w,align 8
%mC=call i8*@sml_alloc(i32 inreg 44)#0
%mD=getelementptr inbounds i8,i8*%mC,i64 -4
%mE=bitcast i8*%mD to i32*
store i32 1342177320,i32*%mE,align 4
store i8*%mC,i8**%y,align 8
%mF=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%mG=bitcast i8*%mC to i8**
store i8*%mF,i8**%mG,align 8
%mH=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%mI=getelementptr inbounds i8,i8*%mC,i64 8
%mJ=bitcast i8*%mI to i8**
store i8*%mH,i8**%mJ,align 8
%mK=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%mL=getelementptr inbounds i8,i8*%mC,i64 16
%mM=bitcast i8*%mL to i8**
store i8*%mK,i8**%mM,align 8
%mN=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%mO=getelementptr inbounds i8,i8*%mC,i64 24
%mP=bitcast i8*%mO to i8**
store i8*%mN,i8**%mP,align 8
%mQ=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%mR=getelementptr inbounds i8,i8*%mC,i64 32
%mS=bitcast i8*%mR to i8**
store i8*%mQ,i8**%mS,align 8
%mT=getelementptr inbounds i8,i8*%mC,i64 40
%mU=bitcast i8*%mT to i32*
store i32 31,i32*%mU,align 4
%mV=call i8*@sml_alloc(i32 inreg 20)#0
%mW=getelementptr inbounds i8,i8*%mV,i64 -4
%mX=bitcast i8*%mW to i32*
store i32 1342177296,i32*%mX,align 4
store i8*%mV,i8**%x,align 8
%mY=getelementptr inbounds i8,i8*%mV,i64 4
%mZ=bitcast i8*%mY to i32*
store i32 0,i32*%mZ,align 1
%m0=bitcast i8*%mV to i32*
store i32 8,i32*%m0,align 4
%m1=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%m2=getelementptr inbounds i8,i8*%mV,i64 8
%m3=bitcast i8*%m2 to i8**
store i8*%m1,i8**%m3,align 8
%m4=getelementptr inbounds i8,i8*%mV,i64 16
%m5=bitcast i8*%m4 to i32*
store i32 2,i32*%m5,align 4
%m6=call i8*@sml_alloc(i32 inreg 28)#0
%m7=getelementptr inbounds i8,i8*%m6,i64 -4
%m8=bitcast i8*%m7 to i32*
store i32 1342177304,i32*%m8,align 4
%m9=load i8*,i8**%w,align 8
%na=bitcast i8*%m6 to i8**
store i8*%m9,i8**%na,align 8
%nb=getelementptr inbounds i8,i8*%m6,i64 8
%nc=bitcast i8*%nb to i8**
store i8*null,i8**%nc,align 8
%nd=load i8*,i8**%x,align 8
%ne=getelementptr inbounds i8,i8*%m6,i64 16
%nf=bitcast i8*%ne to i8**
store i8*%nd,i8**%nf,align 8
%ng=getelementptr inbounds i8,i8*%m6,i64 24
%nh=bitcast i8*%ng to i32*
store i32 7,i32*%nh,align 4
ret i8*%m6
ni:
store i8*null,i8**%x,align 8
%nj=getelementptr inbounds i8,i8*%ab,i64 8
%nk=bitcast i8*%nj to i8**
%nl=load i8*,i8**%nk,align 8
%nm=getelementptr inbounds i8,i8*%nl,i64 8
%nn=bitcast i8*%nm to i8**
%no=load i8*,i8**%nn,align 8
store i8*%no,i8**%y,align 8
%np=getelementptr inbounds i8,i8*%nl,i64 16
%nq=bitcast i8*%np to i8**
%nr=load i8*,i8**%nq,align 8
store i8*%nr,i8**%z,align 8
%ns=bitcast i8*%nl to i8**
%nt=load i8*,i8**%ns,align 8
%nu=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%nv=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%nu,i8*inreg%ac,i8*inreg%ad,i8*inreg%nt)
%nw=bitcast i8*%nv to i8**
%nx=load i8*,i8**%nw,align 8
store i8*%nx,i8**%w,align 8
%ny=getelementptr inbounds i8,i8*%nv,i64 16
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
store i8*%nA,i8**%x,align 8
%nB=call i8*@sml_alloc(i32 inreg 28)#0
%nC=getelementptr inbounds i8,i8*%nB,i64 -4
%nD=bitcast i8*%nC to i32*
store i32 1342177304,i32*%nD,align 4
store i8*%nB,i8**%A,align 8
%nE=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%nF=bitcast i8*%nB to i8**
store i8*%nE,i8**%nF,align 8
%nG=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%nH=getelementptr inbounds i8,i8*%nB,i64 8
%nI=bitcast i8*%nH to i8**
store i8*%nG,i8**%nI,align 8
%nJ=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%nK=getelementptr inbounds i8,i8*%nB,i64 16
%nL=bitcast i8*%nK to i8**
store i8*%nJ,i8**%nL,align 8
%nM=getelementptr inbounds i8,i8*%nB,i64 24
%nN=bitcast i8*%nM to i32*
store i32 7,i32*%nN,align 4
%nO=call i8*@sml_alloc(i32 inreg 20)#0
%nP=getelementptr inbounds i8,i8*%nO,i64 -4
%nQ=bitcast i8*%nP to i32*
store i32 1342177296,i32*%nQ,align 4
store i8*%nO,i8**%x,align 8
%nR=getelementptr inbounds i8,i8*%nO,i64 4
%nS=bitcast i8*%nR to i32*
store i32 0,i32*%nS,align 1
%nT=bitcast i8*%nO to i32*
store i32 13,i32*%nT,align 4
%nU=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%nV=getelementptr inbounds i8,i8*%nO,i64 8
%nW=bitcast i8*%nV to i8**
store i8*%nU,i8**%nW,align 8
%nX=getelementptr inbounds i8,i8*%nO,i64 16
%nY=bitcast i8*%nX to i32*
store i32 2,i32*%nY,align 4
%nZ=call i8*@sml_alloc(i32 inreg 28)#0
%n0=getelementptr inbounds i8,i8*%nZ,i64 -4
%n1=bitcast i8*%n0 to i32*
store i32 1342177304,i32*%n1,align 4
%n2=load i8*,i8**%w,align 8
%n3=bitcast i8*%nZ to i8**
store i8*%n2,i8**%n3,align 8
%n4=getelementptr inbounds i8,i8*%nZ,i64 8
%n5=bitcast i8*%n4 to i8**
store i8*null,i8**%n5,align 8
%n6=load i8*,i8**%x,align 8
%n7=getelementptr inbounds i8,i8*%nZ,i64 16
%n8=bitcast i8*%n7 to i8**
store i8*%n6,i8**%n8,align 8
%n9=getelementptr inbounds i8,i8*%nZ,i64 24
%oa=bitcast i8*%n9 to i32*
store i32 7,i32*%oa,align 4
ret i8*%nZ
ob:
store i8*null,i8**%x,align 8
%oc=getelementptr inbounds i8,i8*%ab,i64 8
%od=bitcast i8*%oc to i8**
%oe=load i8*,i8**%od,align 8
store i8*%oe,i8**%G,align 8
%of=getelementptr inbounds i8,i8*%oe,i64 8
%og=bitcast i8*%of to i8**
%oh=load i8*,i8**%og,align 8
store i8*%oh,i8**%H,align 8
%oi=getelementptr inbounds i8,i8*%oe,i64 16
%oj=bitcast i8*%oi to i8**
%ok=load i8*,i8**%oj,align 8
store i8*%ok,i8**%I,align 8
%ol=getelementptr inbounds i8,i8*%oe,i64 32
%om=bitcast i8*%ol to i8**
%on=load i8*,i8**%om,align 8
store i8*%on,i8**%J,align 8
%oo=getelementptr inbounds i8,i8*%oe,i64 64
%op=bitcast i8*%oo to i8**
%oq=load i8*,i8**%op,align 8
store i8*%oq,i8**%K,align 8
%or=getelementptr inbounds i8,i8*%oe,i64 24
%os=bitcast i8*%or to i8**
%ot=load i8*,i8**%os,align 8
%ou=load i8*,i8**%L,align 8
%ov=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%ou,i8*inreg%ac,i8*inreg%ad,i8*inreg%ot)
%ow=bitcast i8*%ov to i8**
%ox=load i8*,i8**%ow,align 8
store i8*%ox,i8**%w,align 8
%oy=getelementptr inbounds i8,i8*%ov,i64 16
%oz=bitcast i8*%oy to i8**
%oA=load i8*,i8**%oz,align 8
store i8*%oA,i8**%x,align 8
%oB=bitcast i8**%G to i8***
%oC=load i8**,i8***%oB,align 8
%oD=load i8*,i8**%oC,align 8
%oE=load i8*,i8**%E,align 8
%oF=load i8*,i8**%F,align 8
%oG=load i8*,i8**%L,align 8
%oH=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%oG,i8*inreg%oF,i8*inreg%oE,i8*inreg%oD)
%oI=bitcast i8*%oH to i8**
%oJ=load i8*,i8**%oI,align 8
store i8*%oJ,i8**%y,align 8
%oK=getelementptr inbounds i8,i8*%oH,i64 16
%oL=bitcast i8*%oK to i8**
%oM=load i8*,i8**%oL,align 8
store i8*%oM,i8**%z,align 8
%oN=load i8*,i8**%G,align 8
%oO=getelementptr inbounds i8,i8*%oN,i64 40
%oP=bitcast i8*%oO to i8**
%oQ=load i8*,i8**%oP,align 8
%oR=load i8*,i8**%E,align 8
%oS=load i8*,i8**%F,align 8
%oT=load i8*,i8**%L,align 8
%oU=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%oT,i8*inreg%oS,i8*inreg%oR,i8*inreg%oQ)
%oV=bitcast i8*%oU to i8**
%oW=load i8*,i8**%oV,align 8
store i8*%oW,i8**%A,align 8
%oX=getelementptr inbounds i8,i8*%oU,i64 16
%oY=bitcast i8*%oX to i8**
%oZ=load i8*,i8**%oY,align 8
store i8*%oZ,i8**%B,align 8
%o0=load i8*,i8**%G,align 8
%o1=getelementptr inbounds i8,i8*%o0,i64 56
%o2=bitcast i8*%o1 to i8**
%o3=load i8*,i8**%o2,align 8
%o4=load i8*,i8**%E,align 8
%o5=load i8*,i8**%F,align 8
%o6=load i8*,i8**%L,align 8
%o7=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%o6,i8*inreg%o5,i8*inreg%o4,i8*inreg%o3)
%o8=bitcast i8*%o7 to i8**
%o9=load i8*,i8**%o8,align 8
store i8*%o9,i8**%C,align 8
%pa=getelementptr inbounds i8,i8*%o7,i64 16
%pb=bitcast i8*%pa to i8**
%pc=load i8*,i8**%pb,align 8
store i8*%pc,i8**%D,align 8
%pd=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%pe=getelementptr inbounds i8,i8*%pd,i64 48
%pf=bitcast i8*%pe to i8**
%pg=load i8*,i8**%pf,align 8
%ph=load i8*,i8**%E,align 8
%pi=load i8*,i8**%F,align 8
%pj=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%pk=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%pj,i8*inreg%pi,i8*inreg%ph,i8*inreg%pg)
%pl=bitcast i8*%pk to i8**
%pm=load i8*,i8**%pl,align 8
store i8*%pm,i8**%E,align 8
%pn=getelementptr inbounds i8,i8*%pk,i64 16
%po=bitcast i8*%pn to i8**
%pp=load i8*,i8**%po,align 8
store i8*%pp,i8**%F,align 8
%pq=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%pr=getelementptr inbounds i8,i8*%pq,i64 16
%ps=bitcast i8*%pr to i8*(i8*,i8*)**
%pt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ps,align 8
%pu=bitcast i8*%pq to i8**
%pv=load i8*,i8**%pu,align 8
store i8*%pv,i8**%N,align 8
%pw=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%px=getelementptr inbounds i8,i8*%pw,i64 16
%py=bitcast i8*%px to i8*(i8*,i8*)**
%pz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%py,align 8
%pA=bitcast i8*%pw to i8**
%pB=load i8*,i8**%pA,align 8
store i8*%pB,i8**%M,align 8
%pC=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%pD=getelementptr inbounds i8,i8*%pC,i64 16
%pE=bitcast i8*%pD to i8*(i8*,i8*)**
%pF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pE,align 8
%pG=bitcast i8*%pC to i8**
%pH=load i8*,i8**%pG,align 8
store i8*%pH,i8**%L,align 8
%pI=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%pJ=getelementptr inbounds i8,i8*%pI,i64 16
%pK=bitcast i8*%pJ to i8*(i8*,i8*)**
%pL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pK,align 8
%pM=bitcast i8*%pI to i8**
%pN=load i8*,i8**%pM,align 8
store i8*%pN,i8**%G,align 8
%pO=call i8*@sml_alloc(i32 inreg 20)#0
%pP=getelementptr inbounds i8,i8*%pO,i64 -4
%pQ=bitcast i8*%pP to i32*
store i32 1342177296,i32*%pQ,align 4
%pR=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%pS=bitcast i8*%pO to i8**
store i8*%pR,i8**%pS,align 8
%pT=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%pU=getelementptr inbounds i8,i8*%pO,i64 8
%pV=bitcast i8*%pU to i8**
store i8*%pT,i8**%pV,align 8
%pW=getelementptr inbounds i8,i8*%pO,i64 16
%pX=bitcast i8*%pW to i32*
store i32 3,i32*%pX,align 4
%pY=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%pZ=call fastcc i8*%pL(i8*inreg%pY,i8*inreg%pO)
store i8*%pZ,i8**%C,align 8
%p0=call i8*@sml_alloc(i32 inreg 20)#0
%p1=getelementptr inbounds i8,i8*%p0,i64 -4
%p2=bitcast i8*%p1 to i32*
store i32 1342177296,i32*%p2,align 4
%p3=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%p4=bitcast i8*%p0 to i8**
store i8*%p3,i8**%p4,align 8
%p5=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%p6=getelementptr inbounds i8,i8*%p0,i64 8
%p7=bitcast i8*%p6 to i8**
store i8*%p5,i8**%p7,align 8
%p8=getelementptr inbounds i8,i8*%p0,i64 16
%p9=bitcast i8*%p8 to i32*
store i32 3,i32*%p9,align 4
%qa=load i8*,i8**%L,align 8
store i8*null,i8**%L,align 8
%qb=call fastcc i8*%pF(i8*inreg%qa,i8*inreg%p0)
store i8*%qb,i8**%A,align 8
%qc=call i8*@sml_alloc(i32 inreg 20)#0
%qd=getelementptr inbounds i8,i8*%qc,i64 -4
%qe=bitcast i8*%qd to i32*
store i32 1342177296,i32*%qe,align 4
%qf=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%qg=bitcast i8*%qc to i8**
store i8*%qf,i8**%qg,align 8
%qh=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%qi=getelementptr inbounds i8,i8*%qc,i64 8
%qj=bitcast i8*%qi to i8**
store i8*%qh,i8**%qj,align 8
%qk=getelementptr inbounds i8,i8*%qc,i64 16
%ql=bitcast i8*%qk to i32*
store i32 3,i32*%ql,align 4
%qm=load i8*,i8**%M,align 8
store i8*null,i8**%M,align 8
%qn=call fastcc i8*%pz(i8*inreg%qm,i8*inreg%qc)
store i8*%qn,i8**%y,align 8
%qo=call i8*@sml_alloc(i32 inreg 20)#0
%qp=getelementptr inbounds i8,i8*%qo,i64 -4
%qq=bitcast i8*%qp to i32*
store i32 1342177296,i32*%qq,align 4
%qr=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%qs=bitcast i8*%qo to i8**
store i8*%qr,i8**%qs,align 8
%qt=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%qu=getelementptr inbounds i8,i8*%qo,i64 8
%qv=bitcast i8*%qu to i8**
store i8*%qt,i8**%qv,align 8
%qw=getelementptr inbounds i8,i8*%qo,i64 16
%qx=bitcast i8*%qw to i32*
store i32 3,i32*%qx,align 4
%qy=load i8*,i8**%N,align 8
store i8*null,i8**%N,align 8
%qz=call fastcc i8*%pt(i8*inreg%qy,i8*inreg%qo)
store i8*%qz,i8**%w,align 8
%qA=call i8*@sml_alloc(i32 inreg 76)#0
%qB=getelementptr inbounds i8,i8*%qA,i64 -4
%qC=bitcast i8*%qB to i32*
store i32 1342177352,i32*%qC,align 4
store i8*%qA,i8**%y,align 8
%qD=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%qE=bitcast i8*%qA to i8**
store i8*%qD,i8**%qE,align 8
%qF=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%qG=getelementptr inbounds i8,i8*%qA,i64 8
%qH=bitcast i8*%qG to i8**
store i8*%qF,i8**%qH,align 8
%qI=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%qJ=getelementptr inbounds i8,i8*%qA,i64 16
%qK=bitcast i8*%qJ to i8**
store i8*%qI,i8**%qK,align 8
%qL=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%qM=getelementptr inbounds i8,i8*%qA,i64 24
%qN=bitcast i8*%qM to i8**
store i8*%qL,i8**%qN,align 8
%qO=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%qP=getelementptr inbounds i8,i8*%qA,i64 32
%qQ=bitcast i8*%qP to i8**
store i8*%qO,i8**%qQ,align 8
%qR=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%qS=getelementptr inbounds i8,i8*%qA,i64 40
%qT=bitcast i8*%qS to i8**
store i8*%qR,i8**%qT,align 8
%qU=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%qV=getelementptr inbounds i8,i8*%qA,i64 48
%qW=bitcast i8*%qV to i8**
store i8*%qU,i8**%qW,align 8
%qX=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%qY=getelementptr inbounds i8,i8*%qA,i64 56
%qZ=bitcast i8*%qY to i8**
store i8*%qX,i8**%qZ,align 8
%q0=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%q1=getelementptr inbounds i8,i8*%qA,i64 64
%q2=bitcast i8*%q1 to i8**
store i8*%q0,i8**%q2,align 8
%q3=getelementptr inbounds i8,i8*%qA,i64 72
%q4=bitcast i8*%q3 to i32*
store i32 511,i32*%q4,align 4
%q5=call i8*@sml_alloc(i32 inreg 20)#0
%q6=getelementptr inbounds i8,i8*%q5,i64 -4
%q7=bitcast i8*%q6 to i32*
store i32 1342177296,i32*%q7,align 4
store i8*%q5,i8**%x,align 8
%q8=getelementptr inbounds i8,i8*%q5,i64 4
%q9=bitcast i8*%q8 to i32*
store i32 0,i32*%q9,align 1
%ra=bitcast i8*%q5 to i32*
store i32 11,i32*%ra,align 4
%rb=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%rc=getelementptr inbounds i8,i8*%q5,i64 8
%rd=bitcast i8*%rc to i8**
store i8*%rb,i8**%rd,align 8
%re=getelementptr inbounds i8,i8*%q5,i64 16
%rf=bitcast i8*%re to i32*
store i32 2,i32*%rf,align 4
%rg=call i8*@sml_alloc(i32 inreg 28)#0
%rh=getelementptr inbounds i8,i8*%rg,i64 -4
%ri=bitcast i8*%rh to i32*
store i32 1342177304,i32*%ri,align 4
%rj=load i8*,i8**%w,align 8
%rk=bitcast i8*%rg to i8**
store i8*%rj,i8**%rk,align 8
%rl=getelementptr inbounds i8,i8*%rg,i64 8
%rm=bitcast i8*%rl to i8**
store i8*null,i8**%rm,align 8
%rn=load i8*,i8**%x,align 8
%ro=getelementptr inbounds i8,i8*%rg,i64 16
%rp=bitcast i8*%ro to i8**
store i8*%rn,i8**%rp,align 8
%rq=getelementptr inbounds i8,i8*%rg,i64 24
%rr=bitcast i8*%rq to i32*
store i32 7,i32*%rr,align 4
ret i8*%rg
rs:
store i8*null,i8**%x,align 8
%rt=getelementptr inbounds i8,i8*%ab,i64 8
%ru=bitcast i8*%rt to i8**
%rv=load i8*,i8**%ru,align 8
store i8*%rv,i8**%C,align 8
%rw=getelementptr inbounds i8,i8*%rv,i64 8
%rx=bitcast i8*%rw to i8**
%ry=load i8*,i8**%rx,align 8
store i8*%ry,i8**%G,align 8
%rz=getelementptr inbounds i8,i8*%rv,i64 16
%rA=bitcast i8*%rz to i8**
%rB=load i8*,i8**%rA,align 8
store i8*%rB,i8**%H,align 8
%rC=getelementptr inbounds i8,i8*%rv,i64 32
%rD=bitcast i8*%rC to i8**
%rE=load i8*,i8**%rD,align 8
store i8*%rE,i8**%I,align 8
%rF=getelementptr inbounds i8,i8*%rv,i64 56
%rG=bitcast i8*%rF to i8**
%rH=load i8*,i8**%rG,align 8
store i8*%rH,i8**%J,align 8
%rI=getelementptr inbounds i8,i8*%rv,i64 24
%rJ=bitcast i8*%rI to i8**
%rK=load i8*,i8**%rJ,align 8
%rL=load i8*,i8**%L,align 8
%rM=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%rL,i8*inreg%ac,i8*inreg%ad,i8*inreg%rK)
%rN=bitcast i8*%rM to i8**
%rO=load i8*,i8**%rN,align 8
store i8*%rO,i8**%w,align 8
%rP=getelementptr inbounds i8,i8*%rM,i64 16
%rQ=bitcast i8*%rP to i8**
%rR=load i8*,i8**%rQ,align 8
store i8*%rR,i8**%x,align 8
%rS=bitcast i8**%C to i8***
%rT=load i8**,i8***%rS,align 8
%rU=load i8*,i8**%rT,align 8
%rV=load i8*,i8**%E,align 8
%rW=load i8*,i8**%F,align 8
%rX=load i8*,i8**%L,align 8
%rY=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%rX,i8*inreg%rW,i8*inreg%rV,i8*inreg%rU)
%rZ=bitcast i8*%rY to i8**
%r0=load i8*,i8**%rZ,align 8
store i8*%r0,i8**%y,align 8
%r1=getelementptr inbounds i8,i8*%rY,i64 16
%r2=bitcast i8*%r1 to i8**
%r3=load i8*,i8**%r2,align 8
store i8*%r3,i8**%z,align 8
%r4=load i8*,i8**%C,align 8
%r5=getelementptr inbounds i8,i8*%r4,i64 40
%r6=bitcast i8*%r5 to i8**
%r7=load i8*,i8**%r6,align 8
%r8=load i8*,i8**%E,align 8
%r9=load i8*,i8**%F,align 8
%sa=load i8*,i8**%L,align 8
%sb=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%sa,i8*inreg%r9,i8*inreg%r8,i8*inreg%r7)
%sc=bitcast i8*%sb to i8**
%sd=load i8*,i8**%sc,align 8
store i8*%sd,i8**%A,align 8
%se=getelementptr inbounds i8,i8*%sb,i64 16
%sf=bitcast i8*%se to i8**
%sg=load i8*,i8**%sf,align 8
store i8*%sg,i8**%B,align 8
%sh=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%si=getelementptr inbounds i8,i8*%sh,i64 48
%sj=bitcast i8*%si to i8**
%sk=load i8*,i8**%sj,align 8
%sl=load i8*,i8**%E,align 8
%sm=load i8*,i8**%F,align 8
%sn=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%so=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%sn,i8*inreg%sm,i8*inreg%sl,i8*inreg%sk)
%sp=bitcast i8*%so to i8**
%sq=load i8*,i8**%sp,align 8
store i8*%sq,i8**%C,align 8
%sr=getelementptr inbounds i8,i8*%so,i64 16
%ss=bitcast i8*%sr to i8**
%st=load i8*,i8**%ss,align 8
store i8*%st,i8**%D,align 8
%su=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%sv=getelementptr inbounds i8,i8*%su,i64 16
%sw=bitcast i8*%sv to i8*(i8*,i8*)**
%sx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sw,align 8
%sy=bitcast i8*%su to i8**
%sz=load i8*,i8**%sy,align 8
store i8*%sz,i8**%K,align 8
%sA=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%sB=getelementptr inbounds i8,i8*%sA,i64 16
%sC=bitcast i8*%sB to i8*(i8*,i8*)**
%sD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sC,align 8
%sE=bitcast i8*%sA to i8**
%sF=load i8*,i8**%sE,align 8
store i8*%sF,i8**%F,align 8
%sG=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%sH=getelementptr inbounds i8,i8*%sG,i64 16
%sI=bitcast i8*%sH to i8*(i8*,i8*)**
%sJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sI,align 8
%sK=bitcast i8*%sG to i8**
%sL=load i8*,i8**%sK,align 8
store i8*%sL,i8**%E,align 8
%sM=call i8*@sml_alloc(i32 inreg 20)#0
%sN=getelementptr inbounds i8,i8*%sM,i64 -4
%sO=bitcast i8*%sN to i32*
store i32 1342177296,i32*%sO,align 4
%sP=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%sQ=bitcast i8*%sM to i8**
store i8*%sP,i8**%sQ,align 8
%sR=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%sS=getelementptr inbounds i8,i8*%sM,i64 8
%sT=bitcast i8*%sS to i8**
store i8*%sR,i8**%sT,align 8
%sU=getelementptr inbounds i8,i8*%sM,i64 16
%sV=bitcast i8*%sU to i32*
store i32 3,i32*%sV,align 4
%sW=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%sX=call fastcc i8*%sJ(i8*inreg%sW,i8*inreg%sM)
store i8*%sX,i8**%A,align 8
%sY=call i8*@sml_alloc(i32 inreg 20)#0
%sZ=getelementptr inbounds i8,i8*%sY,i64 -4
%s0=bitcast i8*%sZ to i32*
store i32 1342177296,i32*%s0,align 4
%s1=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%s2=bitcast i8*%sY to i8**
store i8*%s1,i8**%s2,align 8
%s3=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%s4=getelementptr inbounds i8,i8*%sY,i64 8
%s5=bitcast i8*%s4 to i8**
store i8*%s3,i8**%s5,align 8
%s6=getelementptr inbounds i8,i8*%sY,i64 16
%s7=bitcast i8*%s6 to i32*
store i32 3,i32*%s7,align 4
%s8=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%s9=call fastcc i8*%sD(i8*inreg%s8,i8*inreg%sY)
store i8*%s9,i8**%y,align 8
%ta=call i8*@sml_alloc(i32 inreg 20)#0
%tb=getelementptr inbounds i8,i8*%ta,i64 -4
%tc=bitcast i8*%tb to i32*
store i32 1342177296,i32*%tc,align 4
%td=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%te=bitcast i8*%ta to i8**
store i8*%td,i8**%te,align 8
%tf=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%tg=getelementptr inbounds i8,i8*%ta,i64 8
%th=bitcast i8*%tg to i8**
store i8*%tf,i8**%th,align 8
%ti=getelementptr inbounds i8,i8*%ta,i64 16
%tj=bitcast i8*%ti to i32*
store i32 3,i32*%tj,align 4
%tk=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%tl=call fastcc i8*%sx(i8*inreg%tk,i8*inreg%ta)
store i8*%tl,i8**%w,align 8
%tm=call i8*@sml_alloc(i32 inreg 68)#0
%tn=getelementptr inbounds i8,i8*%tm,i64 -4
%to=bitcast i8*%tn to i32*
store i32 1342177344,i32*%to,align 4
store i8*%tm,i8**%y,align 8
%tp=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%tq=bitcast i8*%tm to i8**
store i8*%tp,i8**%tq,align 8
%tr=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%ts=getelementptr inbounds i8,i8*%tm,i64 8
%tt=bitcast i8*%ts to i8**
store i8*%tr,i8**%tt,align 8
%tu=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%tv=getelementptr inbounds i8,i8*%tm,i64 16
%tw=bitcast i8*%tv to i8**
store i8*%tu,i8**%tw,align 8
%tx=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%ty=getelementptr inbounds i8,i8*%tm,i64 24
%tz=bitcast i8*%ty to i8**
store i8*%tx,i8**%tz,align 8
%tA=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%tB=getelementptr inbounds i8,i8*%tm,i64 32
%tC=bitcast i8*%tB to i8**
store i8*%tA,i8**%tC,align 8
%tD=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%tE=getelementptr inbounds i8,i8*%tm,i64 40
%tF=bitcast i8*%tE to i8**
store i8*%tD,i8**%tF,align 8
%tG=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%tH=getelementptr inbounds i8,i8*%tm,i64 48
%tI=bitcast i8*%tH to i8**
store i8*%tG,i8**%tI,align 8
%tJ=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%tK=getelementptr inbounds i8,i8*%tm,i64 56
%tL=bitcast i8*%tK to i8**
store i8*%tJ,i8**%tL,align 8
%tM=getelementptr inbounds i8,i8*%tm,i64 64
%tN=bitcast i8*%tM to i32*
store i32 255,i32*%tN,align 4
%tO=call i8*@sml_alloc(i32 inreg 20)#0
%tP=getelementptr inbounds i8,i8*%tO,i64 -4
%tQ=bitcast i8*%tP to i32*
store i32 1342177296,i32*%tQ,align 4
store i8*%tO,i8**%x,align 8
%tR=getelementptr inbounds i8,i8*%tO,i64 4
%tS=bitcast i8*%tR to i32*
store i32 0,i32*%tS,align 1
%tT=bitcast i8*%tO to i32*
store i32 15,i32*%tT,align 4
%tU=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%tV=getelementptr inbounds i8,i8*%tO,i64 8
%tW=bitcast i8*%tV to i8**
store i8*%tU,i8**%tW,align 8
%tX=getelementptr inbounds i8,i8*%tO,i64 16
%tY=bitcast i8*%tX to i32*
store i32 2,i32*%tY,align 4
%tZ=call i8*@sml_alloc(i32 inreg 28)#0
%t0=getelementptr inbounds i8,i8*%tZ,i64 -4
%t1=bitcast i8*%t0 to i32*
store i32 1342177304,i32*%t1,align 4
%t2=load i8*,i8**%w,align 8
%t3=bitcast i8*%tZ to i8**
store i8*%t2,i8**%t3,align 8
%t4=getelementptr inbounds i8,i8*%tZ,i64 8
%t5=bitcast i8*%t4 to i8**
store i8*null,i8**%t5,align 8
%t6=load i8*,i8**%x,align 8
%t7=getelementptr inbounds i8,i8*%tZ,i64 16
%t8=bitcast i8*%t7 to i8**
store i8*%t6,i8**%t8,align 8
%t9=getelementptr inbounds i8,i8*%tZ,i64 24
%ua=bitcast i8*%t9 to i32*
store i32 7,i32*%ua,align 4
ret i8*%tZ
ub:
store i8*null,i8**%x,align 8
%uc=getelementptr inbounds i8,i8*%ab,i64 8
%ud=bitcast i8*%uc to i8**
%ue=load i8*,i8**%ud,align 8
store i8*%ue,i8**%A,align 8
%uf=getelementptr inbounds i8,i8*%ue,i64 16
%ug=bitcast i8*%uf to i32*
%uh=load i32,i32*%ug,align 4
%ui=getelementptr inbounds i8,i8*%ue,i64 32
%uj=bitcast i8*%ui to i32*
%uk=load i32,i32*%uj,align 4
%ul=getelementptr inbounds i8,i8*%ue,i64 40
%um=bitcast i8*%ul to i8**
%un=load i8*,i8**%um,align 8
store i8*%un,i8**%C,align 8
%uo=getelementptr inbounds i8,i8*%ue,i64 48
%up=bitcast i8*%uo to i8**
%uq=load i8*,i8**%up,align 8
store i8*%uq,i8**%D,align 8
%ur=getelementptr inbounds i8,i8*%ue,i64 24
%us=bitcast i8*%ur to i8**
%ut=load i8*,i8**%us,align 8
%uu=load i8*,i8**%L,align 8
%uv=call fastcc i8*@_SMLLN18ClosureConversion216compileFieldListE_765(i8*inreg%uu,i8*inreg%ac,i8*inreg%ad,i8*inreg%ut)
%uw=bitcast i8*%uv to i8**
%ux=load i8*,i8**%uw,align 8
store i8*%ux,i8**%w,align 8
%uy=getelementptr inbounds i8,i8*%uv,i64 8
%uz=bitcast i8*%uy to i8**
%uA=load i8*,i8**%uz,align 8
store i8*%uA,i8**%x,align 8
%uB=bitcast i8**%A to i8***
%uC=load i8**,i8***%uB,align 8
%uD=load i8*,i8**%uC,align 8
%uE=load i8*,i8**%E,align 8
%uF=load i8*,i8**%F,align 8
%uG=load i8*,i8**%L,align 8
%uH=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%uG,i8*inreg%uF,i8*inreg%uE,i8*inreg%uD)
%uI=bitcast i8*%uH to i8**
%uJ=load i8*,i8**%uI,align 8
store i8*%uJ,i8**%y,align 8
%uK=getelementptr inbounds i8,i8*%uH,i64 16
%uL=bitcast i8*%uK to i8**
%uM=load i8*,i8**%uL,align 8
store i8*%uM,i8**%z,align 8
%uN=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%uO=getelementptr inbounds i8,i8*%uN,i64 8
%uP=bitcast i8*%uO to i8**
%uQ=load i8*,i8**%uP,align 8
%uR=load i8*,i8**%E,align 8
%uS=load i8*,i8**%F,align 8
%uT=load i8*,i8**%L,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%uU=call fastcc i8*@_SMLLN18ClosureConversion217compileBitmapListE_766(i8*inreg%uT,i8*inreg%uS,i8*inreg%uR,i8*inreg%uQ)
%uV=bitcast i8*%uU to i8**
%uW=load i8*,i8**%uV,align 8
store i8*%uW,i8**%A,align 8
%uX=getelementptr inbounds i8,i8*%uU,i64 8
%uY=bitcast i8*%uX to i8**
%uZ=load i8*,i8**%uY,align 8
store i8*%uZ,i8**%B,align 8
%u0=load i8*,i8**%E,align 8
%u1=getelementptr inbounds i8,i8*%u0,i64 8
%u2=bitcast i8*%u1 to i8**
%u3=load i8*,i8**%u2,align 8
store i8*%u3,i8**%F,align 8
%u4=bitcast i8*%u0 to i8**
%u5=load i8*,i8**%u4,align 8
store i8*%u5,i8**%E,align 8
%u6=call i8*@sml_alloc(i32 inreg 20)#0
%u7=getelementptr inbounds i8,i8*%u6,i64 -4
%u8=bitcast i8*%u7 to i32*
store i32 1342177296,i32*%u8,align 4
%u9=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%va=bitcast i8*%u6 to i8**
store i8*%u9,i8**%va,align 8
%vb=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%vc=getelementptr inbounds i8,i8*%u6,i64 8
%vd=bitcast i8*%vc to i8**
store i8*%vb,i8**%vd,align 8
%ve=getelementptr inbounds i8,i8*%u6,i64 16
%vf=bitcast i8*%ve to i32*
store i32 3,i32*%vf,align 4
%vg=call fastcc i8*@_SMLLN18ClosureConversion211allocRecordE_547(i8*inreg%u6)
%vh=getelementptr inbounds i8,i8*%vg,i64 16
%vi=bitcast i8*%vh to i8*(i8*,i8*)**
%vj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vi,align 8
%vk=bitcast i8*%vg to i8**
%vl=load i8*,i8**%vk,align 8
store i8*%vl,i8**%E,align 8
%vm=call i8*@sml_alloc(i32 inreg 60)#0
%vn=getelementptr inbounds i8,i8*%vm,i64 -4
%vo=bitcast i8*%vn to i32*
store i32 1342177336,i32*%vo,align 4
%vp=getelementptr inbounds i8,i8*%vm,i64 20
call void@llvm.memset.p0i8.i32(i8*%vp,i8 0,i32 20,i1 false)
%vq=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%vr=bitcast i8*%vm to i8**
store i8*%vq,i8**%vr,align 8
%vs=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%vt=getelementptr inbounds i8,i8*%vm,i64 8
%vu=bitcast i8*%vt to i8**
store i8*%vs,i8**%vu,align 8
%vv=getelementptr inbounds i8,i8*%vm,i64 16
%vw=bitcast i8*%vv to i32*
store i32%uh,i32*%vw,align 4
%vx=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%vy=getelementptr inbounds i8,i8*%vm,i64 24
%vz=bitcast i8*%vy to i8**
store i8*%vx,i8**%vz,align 8
%vA=getelementptr inbounds i8,i8*%vm,i64 32
%vB=bitcast i8*%vA to i32*
store i32%uk,i32*%vB,align 4
%vC=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%vD=getelementptr inbounds i8,i8*%vm,i64 40
%vE=bitcast i8*%vD to i8**
store i8*%vC,i8**%vE,align 8
%vF=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%vG=getelementptr inbounds i8,i8*%vm,i64 48
%vH=bitcast i8*%vG to i8**
store i8*%vF,i8**%vH,align 8
%vI=getelementptr inbounds i8,i8*%vm,i64 56
%vJ=bitcast i8*%vI to i32*
store i32 107,i32*%vJ,align 4
%vK=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%vL=call fastcc i8*%vj(i8*inreg%vK,i8*inreg%vm)
%vM=bitcast i8*%vL to i8**
%vN=load i8*,i8**%vM,align 8
store i8*%vN,i8**%x,align 8
%vO=getelementptr inbounds i8,i8*%vL,i64 8
%vP=bitcast i8*%vO to i8**
%vQ=load i8*,i8**%vP,align 8
store i8*%vQ,i8**%z,align 8
%vR=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%vS=getelementptr inbounds i8,i8*%vR,i64 16
%vT=bitcast i8*%vS to i8*(i8*,i8*)**
%vU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vT,align 8
%vV=bitcast i8*%vR to i8**
%vW=load i8*,i8**%vV,align 8
store i8*%vW,i8**%D,align 8
%vX=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%vY=getelementptr inbounds i8,i8*%vX,i64 16
%vZ=bitcast i8*%vY to i8*(i8*,i8*)**
%v0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vZ,align 8
%v1=bitcast i8*%vX to i8**
%v2=load i8*,i8**%v1,align 8
store i8*%v2,i8**%C,align 8
%v3=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%v4=getelementptr inbounds i8,i8*%v3,i64 16
%v5=bitcast i8*%v4 to i8*(i8*,i8*)**
%v6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v5,align 8
%v7=bitcast i8*%v3 to i8**
%v8=load i8*,i8**%v7,align 8
store i8*%v8,i8**%B,align 8
%v9=call i8*@sml_alloc(i32 inreg 20)#0
%wa=getelementptr inbounds i8,i8*%v9,i64 -4
%wb=bitcast i8*%wa to i32*
store i32 1342177296,i32*%wb,align 4
%wc=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%wd=bitcast i8*%v9 to i8**
store i8*%wc,i8**%wd,align 8
%we=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%wf=getelementptr inbounds i8,i8*%v9,i64 8
%wg=bitcast i8*%wf to i8**
store i8*%we,i8**%wg,align 8
%wh=getelementptr inbounds i8,i8*%v9,i64 16
%wi=bitcast i8*%wh to i32*
store i32 3,i32*%wi,align 4
%wj=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%wk=call fastcc i8*%v6(i8*inreg%wj,i8*inreg%v9)
store i8*%wk,i8**%x,align 8
%wl=call i8*@sml_alloc(i32 inreg 20)#0
%wm=getelementptr inbounds i8,i8*%wl,i64 -4
%wn=bitcast i8*%wm to i32*
store i32 1342177296,i32*%wn,align 4
%wo=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%wp=bitcast i8*%wl to i8**
store i8*%wo,i8**%wp,align 8
%wq=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%wr=getelementptr inbounds i8,i8*%wl,i64 8
%ws=bitcast i8*%wr to i8**
store i8*%wq,i8**%ws,align 8
%wt=getelementptr inbounds i8,i8*%wl,i64 16
%wu=bitcast i8*%wt to i32*
store i32 3,i32*%wu,align 4
%wv=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%ww=call fastcc i8*%v0(i8*inreg%wv,i8*inreg%wl)
store i8*%ww,i8**%x,align 8
%wx=call i8*@sml_alloc(i32 inreg 20)#0
%wy=getelementptr inbounds i8,i8*%wx,i64 -4
%wz=bitcast i8*%wy to i32*
store i32 1342177296,i32*%wz,align 4
%wA=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%wB=bitcast i8*%wx to i8**
store i8*%wA,i8**%wB,align 8
%wC=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%wD=getelementptr inbounds i8,i8*%wx,i64 8
%wE=bitcast i8*%wD to i8**
store i8*%wC,i8**%wE,align 8
%wF=getelementptr inbounds i8,i8*%wx,i64 16
%wG=bitcast i8*%wF to i32*
store i32 3,i32*%wG,align 4
%wH=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%wI=call fastcc i8*%vU(i8*inreg%wH,i8*inreg%wx)
store i8*%wI,i8**%w,align 8
%wJ=call i8*@sml_alloc(i32 inreg 28)#0
%wK=getelementptr inbounds i8,i8*%wJ,i64 -4
%wL=bitcast i8*%wK to i32*
store i32 1342177304,i32*%wL,align 4
%wM=load i8*,i8**%w,align 8
%wN=bitcast i8*%wJ to i8**
store i8*%wM,i8**%wN,align 8
%wO=getelementptr inbounds i8,i8*%wJ,i64 8
%wP=bitcast i8*%wO to i8**
store i8*null,i8**%wP,align 8
%wQ=load i8*,i8**%z,align 8
%wR=getelementptr inbounds i8,i8*%wJ,i64 16
%wS=bitcast i8*%wR to i8**
store i8*%wQ,i8**%wS,align 8
%wT=getelementptr inbounds i8,i8*%wJ,i64 24
%wU=bitcast i8*%wT to i32*
store i32 7,i32*%wU,align 4
ret i8*%wJ
wV:
store i8*null,i8**%x,align 8
%wW=getelementptr inbounds i8,i8*%ab,i64 8
%wX=bitcast i8*%wW to i8**
%wY=load i8*,i8**%wX,align 8
store i8*%wY,i8**%z,align 8
%wZ=getelementptr inbounds i8,i8*%wY,i64 8
%w0=bitcast i8*%wZ to i8**
%w1=load i8*,i8**%w0,align 8
%w2=load i8*,i8**%L,align 8
%w3=call fastcc i8*@_SMLLN18ClosureConversion211compileDeclE_768(i8*inreg%w2,i8*inreg%ac,i8*inreg%ad,i8*inreg%w1)
%w4=bitcast i8*%w3 to i8**
%w5=load i8*,i8**%w4,align 8
store i8*%w5,i8**%w,align 8
%w6=getelementptr inbounds i8,i8*%w3,i64 8
%w7=bitcast i8*%w6 to i8**
%w8=load i8*,i8**%w7,align 8
store i8*%w8,i8**%x,align 8
%w9=getelementptr inbounds i8,i8*%w3,i64 16
%xa=bitcast i8*%w9 to i8**
%xb=load i8*,i8**%xa,align 8
store i8*%xb,i8**%y,align 8
%xc=call i8*@sml_alloc(i32 inreg 20)#0
%xd=getelementptr inbounds i8,i8*%xc,i64 -4
%xe=bitcast i8*%xd to i32*
store i32 1342177296,i32*%xe,align 4
%xf=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%xg=bitcast i8*%xc to i8**
store i8*%xf,i8**%xg,align 8
%xh=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%xi=getelementptr inbounds i8,i8*%xc,i64 8
%xj=bitcast i8*%xi to i8**
store i8*%xh,i8**%xj,align 8
%xk=getelementptr inbounds i8,i8*%xc,i64 16
%xl=bitcast i8*%xk to i32*
store i32 3,i32*%xl,align 4
%xm=call fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_719(i8*inreg%xc)
%xn=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%xo=getelementptr inbounds i8,i8*%xn,i64 16
%xp=bitcast i8*%xo to i8**
%xq=load i8*,i8**%xp,align 8
%xr=load i8*,i8**%F,align 8
%xs=load i8*,i8**%L,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%xt=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%xs,i8*inreg%xr,i8*inreg%xm,i8*inreg%xq)
%xu=bitcast i8*%xt to i8**
%xv=load i8*,i8**%xu,align 8
store i8*%xv,i8**%x,align 8
%xw=getelementptr inbounds i8,i8*%xt,i64 8
%xx=bitcast i8*%xw to i8**
%xy=load i8*,i8**%xx,align 8
store i8*%xy,i8**%z,align 8
%xz=getelementptr inbounds i8,i8*%xt,i64 16
%xA=bitcast i8*%xz to i8**
%xB=load i8*,i8**%xA,align 8
store i8*%xB,i8**%A,align 8
%xC=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%xD=getelementptr inbounds i8,i8*%xC,i64 16
%xE=bitcast i8*%xD to i8*(i8*,i8*)**
%xF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xE,align 8
%xG=bitcast i8*%xC to i8**
%xH=load i8*,i8**%xG,align 8
store i8*%xH,i8**%B,align 8
%xI=call i8*@sml_alloc(i32 inreg 20)#0
%xJ=getelementptr inbounds i8,i8*%xI,i64 -4
%xK=bitcast i8*%xJ to i32*
store i32 1342177296,i32*%xK,align 4
%xL=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%xM=bitcast i8*%xI to i8**
store i8*%xL,i8**%xM,align 8
%xN=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%xO=getelementptr inbounds i8,i8*%xI,i64 8
%xP=bitcast i8*%xO to i8**
store i8*%xN,i8**%xP,align 8
%xQ=getelementptr inbounds i8,i8*%xI,i64 16
%xR=bitcast i8*%xQ to i32*
store i32 3,i32*%xR,align 4
%xS=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%xT=call fastcc i8*%xF(i8*inreg%xS,i8*inreg%xI)
store i8*%xT,i8**%w,align 8
%xU=load i8*,i8**%y,align 8
%xV=icmp eq i8*%xU,null
br i1%xV,label%xW,label%ya
xW:
store i8*null,i8**%y,align 8
%xX=call i8*@sml_alloc(i32 inreg 28)#0
%xY=getelementptr inbounds i8,i8*%xX,i64 -4
%xZ=bitcast i8*%xY to i32*
store i32 1342177304,i32*%xZ,align 4
%x0=load i8*,i8**%w,align 8
%x1=bitcast i8*%xX to i8**
store i8*%x0,i8**%x1,align 8
%x2=load i8*,i8**%z,align 8
%x3=getelementptr inbounds i8,i8*%xX,i64 8
%x4=bitcast i8*%x3 to i8**
store i8*%x2,i8**%x4,align 8
%x5=load i8*,i8**%A,align 8
%x6=getelementptr inbounds i8,i8*%xX,i64 16
%x7=bitcast i8*%x6 to i8**
store i8*%x5,i8**%x7,align 8
%x8=getelementptr inbounds i8,i8*%xX,i64 24
%x9=bitcast i8*%x8 to i32*
store i32 7,i32*%x9,align 4
ret i8*%xX
ya:
store i8*null,i8**%z,align 8
%yb=call i8*@sml_alloc(i32 inreg 20)#0
%yc=getelementptr inbounds i8,i8*%yb,i64 -4
%yd=bitcast i8*%yc to i32*
store i32 1342177296,i32*%yd,align 4
%ye=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%yf=bitcast i8*%yb to i8**
store i8*%ye,i8**%yf,align 8
%yg=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%yh=getelementptr inbounds i8,i8*%yb,i64 8
%yi=bitcast i8*%yh to i8**
store i8*%yg,i8**%yi,align 8
%yj=getelementptr inbounds i8,i8*%yb,i64 16
%yk=bitcast i8*%yj to i32*
store i32 3,i32*%yk,align 4
%yl=call fastcc i8*@_SMLLN18ClosureConversion23LetE_559(i8*inreg%yb)
store i8*%yl,i8**%x,align 8
%ym=call i8*@sml_alloc(i32 inreg 28)#0
%yn=getelementptr inbounds i8,i8*%ym,i64 -4
%yo=bitcast i8*%yn to i32*
store i32 1342177304,i32*%yo,align 4
%yp=load i8*,i8**%w,align 8
%yq=bitcast i8*%ym to i8**
store i8*%yp,i8**%yq,align 8
%yr=getelementptr inbounds i8,i8*%ym,i64 8
%ys=bitcast i8*%yr to i8**
store i8*null,i8**%ys,align 8
%yt=load i8*,i8**%x,align 8
%yu=getelementptr inbounds i8,i8*%ym,i64 16
%yv=bitcast i8*%yu to i8**
store i8*%yt,i8**%yv,align 8
%yw=getelementptr inbounds i8,i8*%ym,i64 24
%yx=bitcast i8*%yw to i32*
store i32 7,i32*%yx,align 4
ret i8*%ym
yy:
store i8*null,i8**%x,align 8
%yz=getelementptr inbounds i8,i8*%ab,i64 8
%yA=bitcast i8*%yz to i8**
%yB=load i8*,i8**%yA,align 8
store i8*%yB,i8**%y,align 8
%yC=getelementptr inbounds i8,i8*%yB,i64 16
%yD=bitcast i8*%yC to i8**
%yE=load i8*,i8**%yD,align 8
store i8*%yE,i8**%D,align 8
%yF=getelementptr inbounds i8,i8*%yB,i64 24
%yG=bitcast i8*%yF to i8**
%yH=load i8*,i8**%yG,align 8
store i8*%yH,i8**%G,align 8
%yI=getelementptr inbounds i8,i8*%yB,i64 8
%yJ=bitcast i8*%yI to i8**
%yK=load i8*,i8**%yJ,align 8
%yL=load i8*,i8**%L,align 8
%yM=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%yL,i8*inreg%ac,i8*inreg%ad,i8*inreg%yK)
store i8*%yM,i8**%A,align 8
%yN=bitcast i8*%yM to i8**
%yO=load i8*,i8**%yN,align 8
store i8*%yO,i8**%w,align 8
%yP=getelementptr inbounds i8,i8*%yM,i64 16
%yQ=bitcast i8*%yP to i8**
%yR=load i8*,i8**%yQ,align 8
store i8*%yR,i8**%x,align 8
%yS=bitcast i8**%y to i8***
%yT=load i8**,i8***%yS,align 8
store i8*null,i8**%y,align 8
%yU=load i8*,i8**%yT,align 8
%yV=load i8*,i8**%E,align 8
%yW=load i8*,i8**%F,align 8
%yX=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%yY=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%yX,i8*inreg%yW,i8*inreg%yV,i8*inreg%yU)
%yZ=bitcast i8*%yY to i8**
%y0=load i8*,i8**%yZ,align 8
store i8*%y0,i8**%y,align 8
%y1=getelementptr inbounds i8,i8*%yY,i64 8
%y2=bitcast i8*%y1 to i8**
%y3=load i8*,i8**%y2,align 8
store i8*%y3,i8**%z,align 8
%y4=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%y5=getelementptr inbounds i8,i8*%y4,i64 8
%y6=bitcast i8*%y5 to i8**
%y7=load i8*,i8**%y6,align 8
%y8=icmp eq i8*%y7,null
br i1%y8,label%zu,label%y9
y9:
%za=bitcast i8*%y7 to i32*
%zb=load i32,i32*%za,align 4
switch i32%zb,label%zc[
i32 0,label%C7
i32 2,label%CM
i32 1,label%Cd
i32 3,label%zu
]
zc:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%D,align 8
store i8*null,i8**%G,align 8
call void@sml_matchcomp_bug()
%zd=load i8*,i8**@_SMLZ5Match,align 8
store i8*%zd,i8**%w,align 8
%ze=call i8*@sml_alloc(i32 inreg 20)#0
%zf=getelementptr inbounds i8,i8*%ze,i64 -4
%zg=bitcast i8*%zf to i32*
store i32 1342177296,i32*%zg,align 4
store i8*%ze,i8**%x,align 8
%zh=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%zi=bitcast i8*%ze to i8**
store i8*%zh,i8**%zi,align 8
%zj=getelementptr inbounds i8,i8*%ze,i64 8
%zk=bitcast i8*%zj to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@aJ,i64 0,i32 2,i64 0),i8**%zk,align 8
%zl=getelementptr inbounds i8,i8*%ze,i64 16
%zm=bitcast i8*%zl to i32*
store i32 3,i32*%zm,align 4
%zn=call i8*@sml_alloc(i32 inreg 60)#0
%zo=getelementptr inbounds i8,i8*%zn,i64 -4
%zp=bitcast i8*%zo to i32*
store i32 1342177336,i32*%zp,align 4
%zq=getelementptr inbounds i8,i8*%zn,i64 56
%zr=bitcast i8*%zq to i32*
store i32 1,i32*%zr,align 4
%zs=load i8*,i8**%x,align 8
%zt=bitcast i8*%zn to i8**
store i8*%zs,i8**%zt,align 8
call void@sml_raise(i8*inreg%zn)#1
unreachable
zu:
%zv=call i8*@sml_alloc(i32 inreg 28)#0
%zw=getelementptr inbounds i8,i8*%zv,i64 -4
%zx=bitcast i8*%zw to i32*
store i32 1342177304,i32*%zx,align 4
%zy=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%zz=bitcast i8*%zv to i8**
store i8*%zy,i8**%zz,align 8
%zA=load i8*,i8**%D,align 8
%zB=getelementptr inbounds i8,i8*%zv,i64 8
%zC=bitcast i8*%zB to i8**
store i8*%zA,i8**%zC,align 8
%zD=load i8*,i8**%G,align 8
%zE=getelementptr inbounds i8,i8*%zv,i64 16
%zF=bitcast i8*%zE to i8**
store i8*%zD,i8**%zF,align 8
%zG=getelementptr inbounds i8,i8*%zv,i64 24
%zH=bitcast i8*%zG to i32*
store i32 7,i32*%zH,align 4
%zI=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zI)
%zJ=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zJ)
%zK=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zK)
%zL=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zL)
%zM=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zM)
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%zv,i8**%g,align 8
%zN=load atomic i32,i32*@sml_check_flag unordered,align 4
%zO=icmp eq i32%zN,0
br i1%zO,label%zT,label%zP
zP:
call void@sml_check(i32 inreg%zN)
%zQ=bitcast i8**%g to i8***
%zR=load i8**,i8***%zQ,align 8
%zS=load i8*,i8**%zR,align 8
br label%zT
zT:
%zU=phi i8*[%zS,%zP],[%zy,%zu]
%zV=phi i8**[%zR,%zP],[%zz,%zu]
store i8*%zU,i8**%h,align 8
%zW=getelementptr inbounds i8*,i8**%zV,i64 2
%zX=load i8*,i8**%zW,align 8
store i8*%zX,i8**%i,align 8
%zY=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zY)
%zZ=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%zZ)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
br label%z0
z0:
%z1=phi i8*[%Ay,%As],[%zU,%zT]
store i8*%z1,i8**%e,align 8
%z2=load atomic i32,i32*@sml_check_flag unordered,align 4
%z3=icmp eq i32%z2,0
br i1%z3,label%z6,label%z4
z4:
call void@sml_check(i32 inreg%z2)
%z5=load i8*,i8**%e,align 8
br label%z6
z6:
%z7=phi i8*[%z5,%z4],[%z1,%z0]
%z8=bitcast i8*%z7 to i32*
%z9=load i32,i32*%z8,align 4
switch i32%z9,label%Aa[
i32 7,label%AJ
i32 4,label%AJ
i32 3,label%Az
i32 9,label%AJ
i32 18,label%Az
i32 6,label%AJ
i32 12,label%AJ
i32 0,label%AJ
i32 10,label%AJ
i32 14,label%AJ
i32 15,label%AJ
i32 11,label%AJ
i32 13,label%AJ
i32 8,label%AJ
i32 16,label%AJ
i32 2,label%AJ
i32 17,label%AJ
i32 1,label%As
i32 5,label%AJ
]
Aa:
call void@sml_matchcomp_bug()
%Ab=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Ab,i8**%e,align 8
%Ac=call i8*@sml_alloc(i32 inreg 20)#0
%Ad=getelementptr inbounds i8,i8*%Ac,i64 -4
%Ae=bitcast i8*%Ad to i32*
store i32 1342177296,i32*%Ae,align 4
store i8*%Ac,i8**%f,align 8
%Af=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ag=bitcast i8*%Ac to i8**
store i8*%Af,i8**%Ag,align 8
%Ah=getelementptr inbounds i8,i8*%Ac,i64 8
%Ai=bitcast i8*%Ah to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[83x i8]}>,<{[4x i8],i32,[83x i8]}>*@b,i64 0,i32 2,i64 0),i8**%Ai,align 8
%Aj=getelementptr inbounds i8,i8*%Ac,i64 16
%Ak=bitcast i8*%Aj to i32*
store i32 3,i32*%Ak,align 4
%Al=call i8*@sml_alloc(i32 inreg 60)#0
%Am=getelementptr inbounds i8,i8*%Al,i64 -4
%An=bitcast i8*%Am to i32*
store i32 1342177336,i32*%An,align 4
%Ao=getelementptr inbounds i8,i8*%Al,i64 56
%Ap=bitcast i8*%Ao to i32*
store i32 1,i32*%Ap,align 4
%Aq=load i8*,i8**%f,align 8
%Ar=bitcast i8*%Al to i8**
store i8*%Aq,i8**%Ar,align 8
call void@sml_raise(i8*inreg%Al)#1
unreachable
As:
%At=getelementptr inbounds i8,i8*%z7,i64 8
%Au=bitcast i8*%At to i8**
%Av=load i8*,i8**%Au,align 8
%Aw=getelementptr inbounds i8,i8*%Av,i64 8
%Ax=bitcast i8*%Aw to i8**
%Ay=load i8*,i8**%Ax,align 8
br label%z0
Az:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zZ)
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
%AA=call i8*@sml_alloc(i32 inreg 20)#0
%AB=getelementptr inbounds i8,i8*%AA,i64 -4
%AC=bitcast i8*%AB to i32*
store i32 1342177296,i32*%AC,align 4
%AD=bitcast i8*%AA to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*),i8**%AD,align 8
%AE=load i8*,i8**%h,align 8
%AF=getelementptr inbounds i8,i8*%AA,i64 8
%AG=bitcast i8*%AF to i8**
store i8*%AE,i8**%AG,align 8
%AH=getelementptr inbounds i8,i8*%AA,i64 16
%AI=bitcast i8*%AH to i32*
store i32 3,i32*%AI,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zL)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zM)
br label%BI
AJ:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zZ)
%AK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%AL=getelementptr inbounds i8,i8*%AK,i64 8
%AM=bitcast i8*%AL to i8**
%AN=load i8*,i8**%AM,align 8
%AO=call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg%AN)
store i8*%AO,i8**%g,align 8
%AP=call i8*@sml_alloc(i32 inreg 28)#0
%AQ=getelementptr inbounds i8,i8*%AP,i64 -4
%AR=bitcast i8*%AQ to i32*
store i32 1342177304,i32*%AR,align 4
store i8*%AP,i8**%j,align 8
%AS=load i8*,i8**%g,align 8
%AT=bitcast i8*%AP to i8**
store i8*%AS,i8**%AT,align 8
%AU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%AV=getelementptr inbounds i8,i8*%AP,i64 8
%AW=bitcast i8*%AV to i8**
store i8*%AU,i8**%AW,align 8
%AX=load i8*,i8**%i,align 8
%AY=getelementptr inbounds i8,i8*%AP,i64 16
%AZ=bitcast i8*%AY to i8**
store i8*%AX,i8**%AZ,align 8
%A0=getelementptr inbounds i8,i8*%AP,i64 24
%A1=bitcast i8*%A0 to i32*
store i32 7,i32*%A1,align 4
%A2=call i8*@sml_alloc(i32 inreg 28)#0
%A3=getelementptr inbounds i8,i8*%A2,i64 -4
%A4=bitcast i8*%A3 to i32*
store i32 1342177304,i32*%A4,align 4
store i8*%A2,i8**%k,align 8
%A5=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%A6=bitcast i8*%A2 to i8**
store i8*%A5,i8**%A6,align 8
%A7=getelementptr inbounds i8,i8*%A2,i64 8
%A8=bitcast i8*%A7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28makeBindE_415 to void(...)*),void(...)**%A8,align 8
%A9=getelementptr inbounds i8,i8*%A2,i64 16
%Ba=bitcast i8*%A9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion28makeBindE_415 to void(...)*),void(...)**%Ba,align 8
%Bb=getelementptr inbounds i8,i8*%A2,i64 24
%Bc=bitcast i8*%Bb to i32*
store i32 -2147483647,i32*%Bc,align 4
%Bd=call i8*@sml_alloc(i32 inreg 20)#0
%Be=getelementptr inbounds i8,i8*%Bd,i64 -4
%Bf=bitcast i8*%Be to i32*
store i32 1342177296,i32*%Bf,align 4
store i8*%Bd,i8**%h,align 8
%Bg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%Bh=bitcast i8*%Bd to i8**
store i8*%Bg,i8**%Bh,align 8
%Bi=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Bj=getelementptr inbounds i8,i8*%Bd,i64 8
%Bk=bitcast i8*%Bj to i8**
store i8*%Bi,i8**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%Bd,i64 16
%Bm=bitcast i8*%Bl to i32*
store i32 3,i32*%Bm,align 4
%Bn=call i8*@sml_alloc(i32 inreg 20)#0
%Bo=getelementptr inbounds i8,i8*%Bn,i64 -4
%Bp=bitcast i8*%Bo to i32*
store i32 1342177296,i32*%Bp,align 4
store i8*%Bn,i8**%g,align 8
%Bq=getelementptr inbounds i8,i8*%Bn,i64 4
%Br=bitcast i8*%Bq to i32*
store i32 0,i32*%Br,align 1
%Bs=bitcast i8*%Bn to i32*
store i32 18,i32*%Bs,align 4
%Bt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Bu=getelementptr inbounds i8,i8*%Bn,i64 8
%Bv=bitcast i8*%Bu to i8**
store i8*%Bt,i8**%Bv,align 8
%Bw=getelementptr inbounds i8,i8*%Bn,i64 16
%Bx=bitcast i8*%Bw to i32*
store i32 2,i32*%Bx,align 4
%By=call i8*@sml_alloc(i32 inreg 20)#0
%Bz=getelementptr inbounds i8,i8*%By,i64 -4
%BA=bitcast i8*%Bz to i32*
store i32 1342177296,i32*%BA,align 4
%BB=load i8*,i8**%k,align 8
%BC=bitcast i8*%By to i8**
store i8*%BB,i8**%BC,align 8
%BD=load i8*,i8**%g,align 8
%BE=getelementptr inbounds i8,i8*%By,i64 8
%BF=bitcast i8*%BE to i8**
store i8*%BD,i8**%BF,align 8
%BG=getelementptr inbounds i8,i8*%By,i64 16
%BH=bitcast i8*%BG to i32*
store i32 3,i32*%BH,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zL)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%zM)
br label%BI
BI:
%BJ=phi i8*[%AE,%Az],[%BD,%AJ]
%BK=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@c,i64 0,i32 2)to i8*),%Az],[%BB,%AJ]
store i8*%BK,i8**%x,align 8
store i8*%BJ,i8**%A,align 8
%BL=call i8*@sml_alloc(i32 inreg 20)#0
%BM=getelementptr inbounds i8,i8*%BL,i64 -4
%BN=bitcast i8*%BM to i32*
store i32 1342177296,i32*%BN,align 4
%BO=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%BP=bitcast i8*%BL to i8**
store i8*%BO,i8**%BP,align 8
%BQ=load i8*,i8**%D,align 8
%BR=getelementptr inbounds i8,i8*%BL,i64 8
%BS=bitcast i8*%BR to i8**
store i8*%BQ,i8**%BS,align 8
%BT=getelementptr inbounds i8,i8*%BL,i64 16
%BU=bitcast i8*%BT to i32*
store i32 3,i32*%BU,align 4
%BV=call fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_709(i8*inreg%BL)
%BW=getelementptr inbounds i8,i8*%BV,i64 16
%BX=bitcast i8*%BW to i8*(i8*,i8*)**
%BY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%BX,align 8
%BZ=bitcast i8*%BV to i8**
%B0=load i8*,i8**%BZ,align 8
%B1=load i8*,i8**%G,align 8
%B2=call fastcc i8*%BY(i8*inreg%B0,i8*inreg%B1)
store i8*%B2,i8**%A,align 8
%B3=call i8*@sml_alloc(i32 inreg 20)#0
%B4=getelementptr inbounds i8,i8*%B3,i64 -4
%B5=bitcast i8*%B4 to i32*
store i32 1342177296,i32*%B5,align 4
%B6=load i8*,i8**%x,align 8
%B7=bitcast i8*%B3 to i8**
store i8*%B6,i8**%B7,align 8
%B8=load i8*,i8**%A,align 8
%B9=getelementptr inbounds i8,i8*%B3,i64 8
%Ca=bitcast i8*%B9 to i8**
store i8*%B8,i8**%Ca,align 8
%Cb=getelementptr inbounds i8,i8*%B3,i64 16
%Cc=bitcast i8*%Cb to i32*
store i32 3,i32*%Cc,align 4
store i8*%B3,i8**%C,align 8
br label%Ds
Cd:
store i8*null,i8**%x,align 8
%Ce=getelementptr inbounds i8,i8*%y7,i64 8
%Cf=bitcast i8*%Ce to i8**
%Cg=load i8*,i8**%Cf,align 8
%Ch=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Ch)
%Ci=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Ci)
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%Cg,i8**%l,align 8
%Cj=call i8*@sml_alloc(i32 inreg 12)#0
%Ck=getelementptr inbounds i8,i8*%Cj,i64 -4
%Cl=bitcast i8*%Ck to i32*
store i32 1342177288,i32*%Cl,align 4
store i8*%Cj,i8**%m,align 8
%Cm=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Cn=bitcast i8*%Cj to i8**
store i8*%Cm,i8**%Cn,align 8
%Co=getelementptr inbounds i8,i8*%Cj,i64 8
%Cp=bitcast i8*%Co to i32*
store i32 1,i32*%Cp,align 4
%Cq=call i8*@sml_alloc(i32 inreg 28)#0
%Cr=getelementptr inbounds i8,i8*%Cq,i64 -4
%Cs=bitcast i8*%Cr to i32*
store i32 1342177304,i32*%Cs,align 4
%Ct=load i8*,i8**%m,align 8
%Cu=bitcast i8*%Cq to i8**
store i8*%Ct,i8**%Cu,align 8
%Cv=getelementptr inbounds i8,i8*%Cq,i64 8
%Cw=bitcast i8*%Cv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion219decomposeExFunEntryE_656 to void(...)*),void(...)**%Cw,align 8
%Cx=getelementptr inbounds i8,i8*%Cq,i64 16
%Cy=bitcast i8*%Cx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion219decomposeExFunEntryE_656 to void(...)*),void(...)**%Cy,align 8
%Cz=getelementptr inbounds i8,i8*%Cq,i64 24
%CA=bitcast i8*%Cz to i32*
store i32 -2147483647,i32*%CA,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Ch)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Ci)
%CB=load i8*,i8**%G,align 8
%CC=call fastcc i8*@_SMLLN18ClosureConversion219decomposeExFunEntryE_656(i8*inreg%Ct,i8*inreg%CB)
store i8*%CC,i8**%x,align 8
%CD=call i8*@sml_alloc(i32 inreg 20)#0
%CE=getelementptr inbounds i8,i8*%CD,i64 -4
%CF=bitcast i8*%CE to i32*
store i32 1342177296,i32*%CF,align 4
%CG=bitcast i8*%CD to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aI,i64 0,i32 2)to i8*),i8**%CG,align 8
%CH=load i8*,i8**%x,align 8
%CI=getelementptr inbounds i8,i8*%CD,i64 8
%CJ=bitcast i8*%CI to i8**
store i8*%CH,i8**%CJ,align 8
%CK=getelementptr inbounds i8,i8*%CD,i64 16
%CL=bitcast i8*%CK to i32*
store i32 3,i32*%CL,align 4
store i8*%CD,i8**%C,align 8
br label%Ds
CM:
store i8*null,i8**%x,align 8
%CN=getelementptr inbounds i8,i8*%y7,i64 8
%CO=bitcast i8*%CN to i8**
%CP=load i8*,i8**%CO,align 8
%CQ=call fastcc i8*@_SMLLN18ClosureConversion222decomposeStaticClosureE_663(i8*inreg%CP)
%CR=getelementptr inbounds i8,i8*%CQ,i64 16
%CS=bitcast i8*%CR to i8*(i8*,i8*)**
%CT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%CS,align 8
%CU=bitcast i8*%CQ to i8**
%CV=load i8*,i8**%CU,align 8
%CW=load i8*,i8**%G,align 8
%CX=call fastcc i8*%CT(i8*inreg%CV,i8*inreg%CW)
store i8*%CX,i8**%x,align 8
%CY=call i8*@sml_alloc(i32 inreg 20)#0
%CZ=getelementptr inbounds i8,i8*%CY,i64 -4
%C0=bitcast i8*%CZ to i32*
store i32 1342177296,i32*%C0,align 4
%C1=bitcast i8*%CY to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aH,i64 0,i32 2)to i8*),i8**%C1,align 8
%C2=load i8*,i8**%x,align 8
%C3=getelementptr inbounds i8,i8*%CY,i64 8
%C4=bitcast i8*%C3 to i8**
store i8*%C2,i8**%C4,align 8
%C5=getelementptr inbounds i8,i8*%CY,i64 16
%C6=bitcast i8*%C5 to i32*
store i32 3,i32*%C6,align 4
store i8*%CY,i8**%C,align 8
br label%Ds
C7:
store i8*null,i8**%x,align 8
%C8=getelementptr inbounds i8,i8*%y7,i64 8
%C9=bitcast i8*%C8 to i8**
%Da=load i8*,i8**%C9,align 8
%Db=call fastcc i8*@_SMLLN18ClosureConversion222decomposeStaticClosureE_663(i8*inreg%Da)
%Dc=getelementptr inbounds i8,i8*%Db,i64 16
%Dd=bitcast i8*%Dc to i8*(i8*,i8*)**
%De=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Dd,align 8
%Df=bitcast i8*%Db to i8**
%Dg=load i8*,i8**%Df,align 8
%Dh=load i8*,i8**%G,align 8
%Di=call fastcc i8*%De(i8*inreg%Dg,i8*inreg%Dh)
store i8*%Di,i8**%x,align 8
%Dj=call i8*@sml_alloc(i32 inreg 20)#0
%Dk=getelementptr inbounds i8,i8*%Dj,i64 -4
%Dl=bitcast i8*%Dk to i32*
store i32 1342177296,i32*%Dl,align 4
%Dm=bitcast i8*%Dj to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aG,i64 0,i32 2)to i8*),i8**%Dm,align 8
%Dn=load i8*,i8**%x,align 8
%Do=getelementptr inbounds i8,i8*%Dj,i64 8
%Dp=bitcast i8*%Do to i8**
store i8*%Dn,i8**%Dp,align 8
%Dq=getelementptr inbounds i8,i8*%Dj,i64 16
%Dr=bitcast i8*%Dq to i32*
store i32 3,i32*%Dr,align 4
store i8*%Dj,i8**%C,align 8
br label%Ds
Ds:
%Dt=phi i8*[%Do,%C7],[%C3,%CM],[%CI,%Cd],[%B9,%BI]
%Du=phi i8*[%Dn,%C7],[%C2,%CM],[%CH,%Cd],[%B8,%BI]
%Dv=getelementptr inbounds i8,i8*%Du,i64 16
%Dw=bitcast i8*%Dv to i8**
%Dx=load i8*,i8**%Dw,align 8
store i8*%Dx,i8**%x,align 8
%Dy=getelementptr inbounds i8,i8*%Du,i64 8
%Dz=bitcast i8*%Dy to i8**
%DA=load i8*,i8**%Dz,align 8
store i8*%DA,i8**%A,align 8
%DB=bitcast i8*%Dt to i8***
%DC=load i8**,i8***%DB,align 8
%DD=load i8*,i8**%DC,align 8
store i8*%DD,i8**%B,align 8
%DE=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%DF=getelementptr inbounds i8,i8*%DE,i64 16
%DG=bitcast i8*%DF to i8*(i8*,i8*)**
%DH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%DG,align 8
%DI=bitcast i8*%DE to i8**
%DJ=load i8*,i8**%DI,align 8
store i8*%DJ,i8**%E,align 8
%DK=call i8*@sml_alloc(i32 inreg 20)#0
%DL=getelementptr inbounds i8,i8*%DK,i64 -4
%DM=bitcast i8*%DL to i32*
store i32 1342177296,i32*%DM,align 4
%DN=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%DO=bitcast i8*%DK to i8**
store i8*%DN,i8**%DO,align 8
%DP=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%DQ=getelementptr inbounds i8,i8*%DK,i64 8
%DR=bitcast i8*%DQ to i8**
store i8*%DP,i8**%DR,align 8
%DS=getelementptr inbounds i8,i8*%DK,i64 16
%DT=bitcast i8*%DS to i32*
store i32 3,i32*%DT,align 4
%DU=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%DV=call fastcc i8*%DH(i8*inreg%DU,i8*inreg%DK)
store i8*%DV,i8**%w,align 8
%DW=bitcast i8**%C to i8***
%DX=load i8**,i8***%DW,align 8
%DY=load i8*,i8**%DX,align 8
%DZ=getelementptr inbounds i8,i8*%DY,i64 16
%D0=bitcast i8*%DZ to i8*(i8*,i8*)**
%D1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D0,align 8
%D2=bitcast i8*%DY to i8**
%D3=load i8*,i8**%D2,align 8
store i8*%D3,i8**%C,align 8
%D4=call i8*@sml_alloc(i32 inreg 52)#0
%D5=getelementptr inbounds i8,i8*%D4,i64 -4
%D6=bitcast i8*%D5 to i32*
store i32 1342177328,i32*%D6,align 4
store i8*%D4,i8**%y,align 8
%D7=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%D8=bitcast i8*%D4 to i8**
store i8*%D7,i8**%D8,align 8
%D9=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%Ea=getelementptr inbounds i8,i8*%D4,i64 8
%Eb=bitcast i8*%Ea to i8**
store i8*%D9,i8**%Eb,align 8
%Ec=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%Ed=getelementptr inbounds i8,i8*%D4,i64 16
%Ee=bitcast i8*%Ed to i8**
store i8*%Ec,i8**%Ee,align 8
%Ef=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Eg=getelementptr inbounds i8,i8*%D4,i64 24
%Eh=bitcast i8*%Eg to i8**
store i8*%Ef,i8**%Eh,align 8
%Ei=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%Ej=getelementptr inbounds i8,i8*%D4,i64 32
%Ek=bitcast i8*%Ej to i8**
store i8*%Ei,i8**%Ek,align 8
%El=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%Em=getelementptr inbounds i8,i8*%D4,i64 40
%En=bitcast i8*%Em to i8**
store i8*%El,i8**%En,align 8
%Eo=getelementptr inbounds i8,i8*%D4,i64 48
%Ep=bitcast i8*%Eo to i32*
store i32 63,i32*%Ep,align 4
%Eq=call i8*@sml_alloc(i32 inreg 20)#0
%Er=getelementptr inbounds i8,i8*%Eq,i64 -4
%Es=bitcast i8*%Er to i32*
store i32 1342177296,i32*%Es,align 4
%Et=bitcast i8*%Eq to i64*
store i64 0,i64*%Et,align 4
%Eu=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Ev=getelementptr inbounds i8,i8*%Eq,i64 8
%Ew=bitcast i8*%Ev to i8**
store i8*%Eu,i8**%Ew,align 8
%Ex=getelementptr inbounds i8,i8*%Eq,i64 16
%Ey=bitcast i8*%Ex to i32*
store i32 2,i32*%Ey,align 4
%Ez=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%EA=call fastcc i8*%D1(i8*inreg%Ez,i8*inreg%Eq)
store i8*%EA,i8**%x,align 8
%EB=call i8*@sml_alloc(i32 inreg 28)#0
%EC=getelementptr inbounds i8,i8*%EB,i64 -4
%ED=bitcast i8*%EC to i32*
store i32 1342177304,i32*%ED,align 4
%EE=load i8*,i8**%w,align 8
%EF=bitcast i8*%EB to i8**
store i8*%EE,i8**%EF,align 8
%EG=getelementptr inbounds i8,i8*%EB,i64 8
%EH=bitcast i8*%EG to i8**
store i8*null,i8**%EH,align 8
%EI=load i8*,i8**%x,align 8
%EJ=getelementptr inbounds i8,i8*%EB,i64 16
%EK=bitcast i8*%EJ to i8**
store i8*%EI,i8**%EK,align 8
%EL=getelementptr inbounds i8,i8*%EB,i64 24
%EM=bitcast i8*%EL to i32*
store i32 7,i32*%EM,align 4
ret i8*%EB
EN:
store i8*null,i8**%x,align 8
%EO=getelementptr inbounds i8,i8*%ab,i64 8
%EP=bitcast i8*%EO to i8**
%EQ=load i8*,i8**%EP,align 8
store i8*%EQ,i8**%A,align 8
%ER=getelementptr inbounds i8,i8*%EQ,i64 24
%ES=bitcast i8*%ER to i8**
%ET=load i8*,i8**%ES,align 8
store i8*%ET,i8**%C,align 8
%EU=getelementptr inbounds i8,i8*%EQ,i64 32
%EV=bitcast i8*%EU to i8**
%EW=load i8*,i8**%EV,align 8
store i8*%EW,i8**%D,align 8
%EX=getelementptr inbounds i8,i8*%EQ,i64 40
%EY=bitcast i8*%EX to i8**
%EZ=load i8*,i8**%EY,align 8
store i8*%EZ,i8**%G,align 8
%E0=bitcast i8*%EZ to i8**
%E1=load i8*,i8**%E0,align 8
store i8*%E1,i8**%H,align 8
%E2=bitcast i8*%EQ to i8**
%E3=load i8*,i8**%E2,align 8
%E4=load i8*,i8**%L,align 8
%E5=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%E4,i8*inreg%ac,i8*inreg%ad,i8*inreg%E3)
%E6=bitcast i8*%E5 to i8**
%E7=load i8*,i8**%E6,align 8
store i8*%E7,i8**%w,align 8
%E8=getelementptr inbounds i8,i8*%E5,i64 8
%E9=bitcast i8*%E8 to i8**
%Fa=load i8*,i8**%E9,align 8
store i8*%Fa,i8**%x,align 8
%Fb=load i8*,i8**%A,align 8
%Fc=getelementptr inbounds i8,i8*%Fb,i64 16
%Fd=bitcast i8*%Fc to i8**
%Fe=load i8*,i8**%Fd,align 8
%Ff=load i8*,i8**%E,align 8
%Fg=load i8*,i8**%F,align 8
%Fh=load i8*,i8**%L,align 8
%Fi=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%Fh,i8*inreg%Fg,i8*inreg%Ff,i8*inreg%Fe)
%Fj=bitcast i8*%Fi to i8**
%Fk=load i8*,i8**%Fj,align 8
store i8*%Fk,i8**%y,align 8
%Fl=getelementptr inbounds i8,i8*%Fi,i64 8
%Fm=bitcast i8*%Fl to i8**
%Fn=load i8*,i8**%Fm,align 8
store i8*%Fn,i8**%z,align 8
%Fo=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%Fp=getelementptr inbounds i8,i8*%Fo,i64 8
%Fq=bitcast i8*%Fp to i8**
%Fr=load i8*,i8**%Fq,align 8
%Fs=load i8*,i8**%E,align 8
%Ft=load i8*,i8**%F,align 8
%Fu=load i8*,i8**%L,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%Fv=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%Fu,i8*inreg%Ft,i8*inreg%Fs,i8*inreg%Fr)
%Fw=bitcast i8*%Fv to i8**
%Fx=load i8*,i8**%Fw,align 8
store i8*%Fx,i8**%A,align 8
%Fy=getelementptr inbounds i8,i8*%Fv,i64 8
%Fz=bitcast i8*%Fy to i8**
%FA=load i8*,i8**%Fz,align 8
store i8*%FA,i8**%B,align 8
%FB=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%FC=getelementptr inbounds i8,i8*%FB,i64 16
%FD=bitcast i8*%FC to i8*(i8*,i8*)**
%FE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FD,align 8
%FF=bitcast i8*%FB to i8**
%FG=load i8*,i8**%FF,align 8
store i8*%FG,i8**%I,align 8
%FH=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%FI=getelementptr inbounds i8,i8*%FH,i64 16
%FJ=bitcast i8*%FI to i8*(i8*,i8*)**
%FK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FJ,align 8
%FL=bitcast i8*%FH to i8**
%FM=load i8*,i8**%FL,align 8
store i8*%FM,i8**%F,align 8
%FN=call i8*@sml_alloc(i32 inreg 20)#0
%FO=getelementptr inbounds i8,i8*%FN,i64 -4
%FP=bitcast i8*%FO to i32*
store i32 1342177296,i32*%FP,align 4
%FQ=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%FR=bitcast i8*%FN to i8**
store i8*%FQ,i8**%FR,align 8
%FS=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%FT=getelementptr inbounds i8,i8*%FN,i64 8
%FU=bitcast i8*%FT to i8**
store i8*%FS,i8**%FU,align 8
%FV=getelementptr inbounds i8,i8*%FN,i64 16
%FW=bitcast i8*%FV to i32*
store i32 3,i32*%FW,align 4
%FX=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%FY=call fastcc i8*%FK(i8*inreg%FX,i8*inreg%FN)
store i8*%FY,i8**%y,align 8
%FZ=call i8*@sml_alloc(i32 inreg 20)#0
%F0=getelementptr inbounds i8,i8*%FZ,i64 -4
%F1=bitcast i8*%F0 to i32*
store i32 1342177296,i32*%F1,align 4
%F2=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%F3=bitcast i8*%FZ to i8**
store i8*%F2,i8**%F3,align 8
%F4=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%F5=getelementptr inbounds i8,i8*%FZ,i64 8
%F6=bitcast i8*%F5 to i8**
store i8*%F4,i8**%F6,align 8
%F7=getelementptr inbounds i8,i8*%FZ,i64 16
%F8=bitcast i8*%F7 to i32*
store i32 3,i32*%F8,align 4
%F9=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%Ga=call fastcc i8*%FE(i8*inreg%F9,i8*inreg%FZ)
store i8*%Ga,i8**%w,align 8
%Gb=call i8*@sml_alloc(i32 inreg 52)#0
%Gc=getelementptr inbounds i8,i8*%Gb,i64 -4
%Gd=bitcast i8*%Gc to i32*
store i32 1342177328,i32*%Gd,align 4
store i8*%Gb,i8**%y,align 8
%Ge=load i8*,i8**%x,align 8
%Gf=bitcast i8*%Gb to i8**
store i8*%Ge,i8**%Gf,align 8
%Gg=load i8*,i8**%B,align 8
%Gh=getelementptr inbounds i8,i8*%Gb,i64 8
%Gi=bitcast i8*%Gh to i8**
store i8*%Gg,i8**%Gi,align 8
%Gj=load i8*,i8**%z,align 8
%Gk=getelementptr inbounds i8,i8*%Gb,i64 16
%Gl=bitcast i8*%Gk to i8**
store i8*%Gj,i8**%Gl,align 8
%Gm=load i8*,i8**%C,align 8
%Gn=getelementptr inbounds i8,i8*%Gb,i64 24
%Go=bitcast i8*%Gn to i8**
store i8*%Gm,i8**%Go,align 8
%Gp=load i8*,i8**%D,align 8
%Gq=getelementptr inbounds i8,i8*%Gb,i64 32
%Gr=bitcast i8*%Gq to i8**
store i8*%Gp,i8**%Gr,align 8
%Gs=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%Gt=getelementptr inbounds i8,i8*%Gb,i64 40
%Gu=bitcast i8*%Gt to i8**
store i8*%Gs,i8**%Gu,align 8
%Gv=getelementptr inbounds i8,i8*%Gb,i64 48
%Gw=bitcast i8*%Gv to i32*
store i32 63,i32*%Gw,align 4
%Gx=call i8*@sml_alloc(i32 inreg 20)#0
%Gy=getelementptr inbounds i8,i8*%Gx,i64 -4
%Gz=bitcast i8*%Gy to i32*
store i32 1342177296,i32*%Gz,align 4
store i8*%Gx,i8**%F,align 8
%GA=getelementptr inbounds i8,i8*%Gx,i64 4
%GB=bitcast i8*%GA to i32*
store i32 0,i32*%GB,align 1
%GC=bitcast i8*%Gx to i32*
store i32 12,i32*%GC,align 4
%GD=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%GE=getelementptr inbounds i8,i8*%Gx,i64 8
%GF=bitcast i8*%GE to i8**
store i8*%GD,i8**%GF,align 8
%GG=getelementptr inbounds i8,i8*%Gx,i64 16
%GH=bitcast i8*%GG to i32*
store i32 2,i32*%GH,align 4
%GI=call i8*@sml_alloc(i32 inreg 36)#0
%GJ=getelementptr inbounds i8,i8*%GI,i64 -4
%GK=bitcast i8*%GJ to i32*
store i32 1342177312,i32*%GK,align 4
store i8*%GI,i8**%G,align 8
%GL=load i8*,i8**%w,align 8
%GM=bitcast i8*%GI to i8**
store i8*%GL,i8**%GM,align 8
%GN=load i8*,i8**%F,align 8
%GO=getelementptr inbounds i8,i8*%GI,i64 8
%GP=bitcast i8*%GO to i8**
store i8*%GN,i8**%GP,align 8
%GQ=load i8*,i8**%E,align 8
%GR=getelementptr inbounds i8,i8*%GI,i64 16
%GS=bitcast i8*%GR to i8**
store i8*%GQ,i8**%GS,align 8
%GT=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%GU=getelementptr inbounds i8,i8*%GI,i64 24
%GV=bitcast i8*%GU to i8**
store i8*%GT,i8**%GV,align 8
%GW=getelementptr inbounds i8,i8*%GI,i64 32
%GX=bitcast i8*%GW to i32*
store i32 15,i32*%GX,align 4
%GY=call i8*@sml_alloc(i32 inreg 28)#0
%GZ=getelementptr inbounds i8,i8*%GY,i64 -4
%G0=bitcast i8*%GZ to i32*
store i32 1342177304,i32*%G0,align 4
%G1=load i8*,i8**%G,align 8
%G2=bitcast i8*%GY to i8**
store i8*%G1,i8**%G2,align 8
%G3=getelementptr inbounds i8,i8*%GY,i64 8
%G4=bitcast i8*%G3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11array__alloc_779 to void(...)*),void(...)**%G4,align 8
%G5=getelementptr inbounds i8,i8*%GY,i64 16
%G6=bitcast i8*%G5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11array__alloc_779 to void(...)*),void(...)**%G6,align 8
%G7=getelementptr inbounds i8,i8*%GY,i64 24
%G8=bitcast i8*%G7 to i32*
store i32 -2147483647,i32*%G8,align 4
%G9=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%Ha=getelementptr inbounds i8,i8*%G9,i64 16
%Hb=bitcast i8*%Ha to i32*
%Hc=load i32,i32*%Hb,align 4
%Hd=icmp eq i32%Hc,0
%He=load i8*,i8**%H,align 8
br i1%Hd,label%La,label%Hf
Hf:
%Hg=bitcast i8*%He to i32*
%Hh=load i32,i32*%Hg,align 4
switch i32%Hh,label%Hi[
i32 0,label%Kb
i32 6,label%JH
i32 7,label%II
i32 5,label%Hj
]
Hi:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%H,align 8
store i8*null,i8**%G,align 8
br label%LJ
Hj:
store i8*null,i8**%H,align 8
%Hk=getelementptr inbounds i8,i8*%He,i64 8
%Hl=bitcast i8*%Hk to i32**
%Hm=load i32*,i32**%Hl,align 8
%Hn=load i32,i32*%Hm,align 4
%Ho=icmp eq i32%Hn,0
br i1%Ho,label%Hq,label%Hp
Hp:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Hq:
%Hr=load i8*,i8**%C,align 8
%Hs=icmp eq i8*%Hr,null
br i1%Hs,label%Ht,label%Hu
Ht:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Hu:
%Hv=bitcast i8*%Hr to i8**
%Hw=load i8*,i8**%Hv,align 8
store i8*%Hw,i8**%y,align 8
store i8*null,i8**%C,align 8
%Hx=getelementptr inbounds i8,i8*%Hr,i64 8
%Hy=bitcast i8*%Hx to i8**
%Hz=load i8*,i8**%Hy,align 8
%HA=icmp eq i8*%Hz,null
br i1%HA,label%HB,label%IH
HB:
%HC=load i8*,i8**%z,align 8
%HD=icmp eq i8*%HC,null
br i1%HD,label%HE,label%HF
HE:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
HF:
%HG=bitcast i8*%HC to i8**
%HH=load i8*,i8**%HG,align 8
store i8*%HH,i8**%A,align 8
%HI=getelementptr inbounds i8,i8*%HC,i64 8
%HJ=bitcast i8*%HI to i8**
%HK=load i8*,i8**%HJ,align 8
%HL=icmp eq i8*%HK,null
br i1%HL,label%HM,label%IG
HM:
%HN=load i8*,i8**%B,align 8
%HO=icmp eq i8*%HN,null
br i1%HO,label%HP,label%HQ
HP:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
HQ:
%HR=bitcast i8*%HN to i8**
%HS=load i8*,i8**%HR,align 8
store i8*%HS,i8**%z,align 8
store i8*null,i8**%B,align 8
%HT=getelementptr inbounds i8,i8*%HN,i64 8
%HU=bitcast i8*%HT to i8**
%HV=load i8*,i8**%HU,align 8
%HW=icmp eq i8*%HV,null
br i1%HW,label%HX,label%IF
HX:
%HY=load i8*,i8**%x,align 8
%HZ=icmp eq i8*%HY,null
%H0=bitcast i8*%HY to i8**
br i1%HZ,label%H1,label%H2
H1:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%G,align 8
br label%LJ
H2:
%H3=getelementptr inbounds i8,i8*%HY,i64 8
%H4=bitcast i8*%H3 to i8**
%H5=load i8*,i8**%H4,align 8
%H6=icmp eq i8*%H5,null
br i1%H6,label%H7,label%IE
H7:
store i8*null,i8**%F,align 8
store i8*null,i8**%x,align 8
%H8=load i8*,i8**%H0,align 8
store i8*%H8,i8**%w,align 8
%H9=call i8*@sml_alloc(i32 inreg 12)#0
%Ia=getelementptr inbounds i8,i8*%H9,i64 -4
%Ib=bitcast i8*%Ia to i32*
store i32 1342177288,i32*%Ib,align 4
store i8*%H9,i8**%x,align 8
%Ic=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Id=bitcast i8*%H9 to i8**
store i8*%Ic,i8**%Id,align 8
%Ie=getelementptr inbounds i8,i8*%H9,i64 8
%If=bitcast i8*%Ie to i32*
store i32 1,i32*%If,align 4
%Ig=call i8*@sml_alloc(i32 inreg 52)#0
%Ih=bitcast i8*%Ig to i32*
%Ii=getelementptr inbounds i8,i8*%Ig,i64 -4
%Ij=bitcast i8*%Ii to i32*
store i32 1342177328,i32*%Ij,align 4
store i32 1,i32*%Ih,align 4
%Ik=getelementptr inbounds i8,i8*%Ig,i64 4
%Il=bitcast i8*%Ik to i32*
store i32 0,i32*%Il,align 4
%Im=load i8*,i8**%y,align 8
%In=getelementptr inbounds i8,i8*%Ig,i64 8
%Io=bitcast i8*%In to i8**
store i8*%Im,i8**%Io,align 8
%Ip=load i8*,i8**%A,align 8
%Iq=getelementptr inbounds i8,i8*%Ig,i64 16
%Ir=bitcast i8*%Iq to i8**
store i8*%Ip,i8**%Ir,align 8
%Is=load i8*,i8**%z,align 8
%It=getelementptr inbounds i8,i8*%Ig,i64 24
%Iu=bitcast i8*%It to i8**
store i8*%Is,i8**%Iu,align 8
%Iv=getelementptr inbounds i8,i8*%Ig,i64 32
%Iw=bitcast i8*%Iv to i8**
store i8*null,i8**%Iw,align 8
%Ix=load i8*,i8**%x,align 8
%Iy=getelementptr inbounds i8,i8*%Ig,i64 40
%Iz=bitcast i8*%Iy to i8**
store i8*%Ix,i8**%Iz,align 8
%IA=getelementptr inbounds i8,i8*%Ig,i64 48
%IB=bitcast i8*%IA to i32*
store i32 62,i32*%IB,align 4
%IC=load i8*,i8**%G,align 8
%ID=call fastcc i8*@_SMLL11array__alloc_779(i8*inreg%IC,i8*inreg%Ig)
ret i8*%ID
IE:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%G,align 8
br label%LJ
IF:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%G,align 8
br label%LJ
IG:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
IH:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
II:
store i8*null,i8**%H,align 8
%IJ=load i8*,i8**%C,align 8
%IK=icmp eq i8*%IJ,null
br i1%IK,label%IL,label%IM
IL:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
IM:
%IN=bitcast i8*%IJ to i8**
%IO=load i8*,i8**%IN,align 8
store i8*%IO,i8**%y,align 8
store i8*null,i8**%C,align 8
%IP=getelementptr inbounds i8,i8*%IJ,i64 8
%IQ=bitcast i8*%IP to i8**
%IR=load i8*,i8**%IQ,align 8
%IS=icmp eq i8*%IR,null
br i1%IS,label%IT,label%JG
IT:
%IU=load i8*,i8**%z,align 8
%IV=icmp eq i8*%IU,null
br i1%IV,label%IW,label%IX
IW:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
IX:
%IY=bitcast i8*%IU to i8**
%IZ=load i8*,i8**%IY,align 8
store i8*%IZ,i8**%A,align 8
%I0=getelementptr inbounds i8,i8*%IU,i64 8
%I1=bitcast i8*%I0 to i8**
%I2=load i8*,i8**%I1,align 8
%I3=icmp eq i8*%I2,null
br i1%I3,label%I4,label%JF
I4:
%I5=load i8*,i8**%B,align 8
%I6=icmp eq i8*%I5,null
br i1%I6,label%I7,label%I8
I7:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
I8:
%I9=bitcast i8*%I5 to i8**
%Ja=load i8*,i8**%I9,align 8
store i8*%Ja,i8**%z,align 8
store i8*null,i8**%B,align 8
%Jb=getelementptr inbounds i8,i8*%I5,i64 8
%Jc=bitcast i8*%Jb to i8**
%Jd=load i8*,i8**%Jc,align 8
%Je=icmp eq i8*%Jd,null
br i1%Je,label%Jf,label%JE
Jf:
store i8*null,i8**%w,align 8
store i8*null,i8**%F,align 8
%Jg=call i8*@sml_alloc(i32 inreg 52)#0
%Jh=bitcast i8*%Jg to i32*
%Ji=getelementptr inbounds i8,i8*%Jg,i64 -4
%Jj=bitcast i8*%Ji to i32*
store i32 1342177328,i32*%Jj,align 4
store i32 0,i32*%Jh,align 4
%Jk=getelementptr inbounds i8,i8*%Jg,i64 4
%Jl=bitcast i8*%Jk to i32*
store i32 0,i32*%Jl,align 4
%Jm=load i8*,i8**%y,align 8
%Jn=getelementptr inbounds i8,i8*%Jg,i64 8
%Jo=bitcast i8*%Jn to i8**
store i8*%Jm,i8**%Jo,align 8
%Jp=load i8*,i8**%A,align 8
%Jq=getelementptr inbounds i8,i8*%Jg,i64 16
%Jr=bitcast i8*%Jq to i8**
store i8*%Jp,i8**%Jr,align 8
%Js=load i8*,i8**%z,align 8
%Jt=getelementptr inbounds i8,i8*%Jg,i64 24
%Ju=bitcast i8*%Jt to i8**
store i8*%Js,i8**%Ju,align 8
%Jv=load i8*,i8**%x,align 8
%Jw=getelementptr inbounds i8,i8*%Jg,i64 32
%Jx=bitcast i8*%Jw to i8**
store i8*%Jv,i8**%Jx,align 8
%Jy=getelementptr inbounds i8,i8*%Jg,i64 40
%Jz=bitcast i8*%Jy to i8**
store i8*null,i8**%Jz,align 8
%JA=getelementptr inbounds i8,i8*%Jg,i64 48
%JB=bitcast i8*%JA to i32*
store i32 62,i32*%JB,align 4
%JC=load i8*,i8**%G,align 8
%JD=call fastcc i8*@_SMLL11array__alloc_779(i8*inreg%JC,i8*inreg%Jg)
ret i8*%JD
JE:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%G,align 8
br label%LJ
JF:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
JG:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
JH:
store i8*null,i8**%H,align 8
%JI=load i8*,i8**%C,align 8
%JJ=icmp eq i8*%JI,null
br i1%JJ,label%JK,label%JL
JK:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
JL:
%JM=getelementptr inbounds i8,i8*%JI,i64 8
%JN=bitcast i8*%JM to i8**
%JO=load i8*,i8**%JN,align 8
%JP=icmp eq i8*%JO,null
br i1%JP,label%JQ,label%Ka
JQ:
%JR=load i8*,i8**%z,align 8
%JS=icmp eq i8*%JR,null
br i1%JS,label%JT,label%JU
JT:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
JU:
%JV=getelementptr inbounds i8,i8*%JR,i64 8
%JW=bitcast i8*%JV to i8**
%JX=load i8*,i8**%JW,align 8
%JY=icmp eq i8*%JX,null
br i1%JY,label%JZ,label%J9
JZ:
%J0=load i8*,i8**%B,align 8
%J1=icmp eq i8*%J0,null
br i1%J1,label%J2,label%J3
J2:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
J3:
%J4=getelementptr inbounds i8,i8*%J0,i64 8
%J5=bitcast i8*%J4 to i8**
%J6=load i8*,i8**%J5,align 8
%J7=icmp eq i8*%J6,null
br i1%J7,label%LW,label%J8
J8:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
J9:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Ka:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Kb:
store i8*null,i8**%H,align 8
%Kc=load i8*,i8**%C,align 8
%Kd=icmp eq i8*%Kc,null
br i1%Kd,label%Ke,label%Kf
Ke:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Kf:
%Kg=bitcast i8*%Kc to i8**
%Kh=load i8*,i8**%Kg,align 8
store i8*%Kh,i8**%y,align 8
store i8*null,i8**%C,align 8
%Ki=getelementptr inbounds i8,i8*%Kc,i64 8
%Kj=bitcast i8*%Ki to i8**
%Kk=load i8*,i8**%Kj,align 8
%Kl=icmp eq i8*%Kk,null
br i1%Kl,label%Km,label%K9
Km:
%Kn=load i8*,i8**%z,align 8
%Ko=icmp eq i8*%Kn,null
br i1%Ko,label%Kp,label%Kq
Kp:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
Kq:
%Kr=bitcast i8*%Kn to i8**
%Ks=load i8*,i8**%Kr,align 8
store i8*%Ks,i8**%A,align 8
%Kt=getelementptr inbounds i8,i8*%Kn,i64 8
%Ku=bitcast i8*%Kt to i8**
%Kv=load i8*,i8**%Ku,align 8
%Kw=icmp eq i8*%Kv,null
br i1%Kw,label%Kx,label%K8
Kx:
%Ky=load i8*,i8**%B,align 8
%Kz=icmp eq i8*%Ky,null
br i1%Kz,label%KA,label%KB
KA:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
KB:
%KC=bitcast i8*%Ky to i8**
%KD=load i8*,i8**%KC,align 8
store i8*%KD,i8**%z,align 8
store i8*null,i8**%B,align 8
%KE=getelementptr inbounds i8,i8*%Ky,i64 8
%KF=bitcast i8*%KE to i8**
%KG=load i8*,i8**%KF,align 8
%KH=icmp eq i8*%KG,null
br i1%KH,label%KI,label%K7
KI:
store i8*null,i8**%w,align 8
store i8*null,i8**%F,align 8
%KJ=call i8*@sml_alloc(i32 inreg 52)#0
%KK=bitcast i8*%KJ to i32*
%KL=getelementptr inbounds i8,i8*%KJ,i64 -4
%KM=bitcast i8*%KL to i32*
store i32 1342177328,i32*%KM,align 4
store i32 1,i32*%KK,align 4
%KN=getelementptr inbounds i8,i8*%KJ,i64 4
%KO=bitcast i8*%KN to i32*
store i32 0,i32*%KO,align 4
%KP=load i8*,i8**%y,align 8
%KQ=getelementptr inbounds i8,i8*%KJ,i64 8
%KR=bitcast i8*%KQ to i8**
store i8*%KP,i8**%KR,align 8
%KS=load i8*,i8**%A,align 8
%KT=getelementptr inbounds i8,i8*%KJ,i64 16
%KU=bitcast i8*%KT to i8**
store i8*%KS,i8**%KU,align 8
%KV=load i8*,i8**%z,align 8
%KW=getelementptr inbounds i8,i8*%KJ,i64 24
%KX=bitcast i8*%KW to i8**
store i8*%KV,i8**%KX,align 8
%KY=load i8*,i8**%x,align 8
%KZ=getelementptr inbounds i8,i8*%KJ,i64 32
%K0=bitcast i8*%KZ to i8**
store i8*%KY,i8**%K0,align 8
%K1=getelementptr inbounds i8,i8*%KJ,i64 40
%K2=bitcast i8*%K1 to i8**
store i8*null,i8**%K2,align 8
%K3=getelementptr inbounds i8,i8*%KJ,i64 48
%K4=bitcast i8*%K3 to i32*
store i32 62,i32*%K4,align 4
%K5=load i8*,i8**%G,align 8
%K6=call fastcc i8*@_SMLL11array__alloc_779(i8*inreg%K5,i8*inreg%KJ)
ret i8*%K6
K7:
store i8*null,i8**%x,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%G,align 8
br label%LJ
K8:
store i8*null,i8**%x,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%A,align 8
store i8*null,i8**%G,align 8
br label%LJ
K9:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%y,align 8
store i8*null,i8**%G,align 8
br label%LJ
La:
store i8*null,i8**%H,align 8
%Lb=bitcast i8*%He to i32*
%Lc=load i32,i32*%Lb,align 4
%Ld=icmp eq i32%Lc,6
br i1%Ld,label%Lf,label%Le
Le:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Lf:
%Lg=load i8*,i8**%C,align 8
%Lh=icmp eq i8*%Lg,null
br i1%Lh,label%Li,label%Lj
Li:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Lj:
%Lk=getelementptr inbounds i8,i8*%Lg,i64 8
%Ll=bitcast i8*%Lk to i8**
%Lm=load i8*,i8**%Ll,align 8
%Ln=icmp eq i8*%Lm,null
br i1%Ln,label%Lo,label%LI
Lo:
%Lp=load i8*,i8**%z,align 8
%Lq=icmp eq i8*%Lp,null
br i1%Lq,label%Lr,label%Ls
Lr:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
Ls:
%Lt=getelementptr inbounds i8,i8*%Lp,i64 8
%Lu=bitcast i8*%Lt to i8**
%Lv=load i8*,i8**%Lu,align 8
%Lw=icmp eq i8*%Lv,null
br i1%Lw,label%Lx,label%LH
Lx:
%Ly=load i8*,i8**%B,align 8
%Lz=icmp eq i8*%Ly,null
br i1%Lz,label%LA,label%LB
LA:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
LB:
%LC=getelementptr inbounds i8,i8*%Ly,i64 8
%LD=bitcast i8*%LC to i8**
%LE=load i8*,i8**%LD,align 8
%LF=icmp eq i8*%LE,null
br i1%LF,label%LW,label%LG
LG:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
LH:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
LI:
store i8*null,i8**%x,align 8
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
store i8*null,i8**%C,align 8
store i8*null,i8**%G,align 8
br label%LJ
LJ:
%LK=call i8*@sml_alloc(i32 inreg 28)#0
%LL=getelementptr inbounds i8,i8*%LK,i64 -4
%LM=bitcast i8*%LL to i32*
store i32 1342177304,i32*%LM,align 4
%LN=load i8*,i8**%w,align 8
%LO=bitcast i8*%LK to i8**
store i8*%LN,i8**%LO,align 8
%LP=getelementptr inbounds i8,i8*%LK,i64 8
%LQ=bitcast i8*%LP to i8**
store i8*null,i8**%LQ,align 8
%LR=load i8*,i8**%F,align 8
%LS=getelementptr inbounds i8,i8*%LK,i64 16
%LT=bitcast i8*%LS to i8**
store i8*%LR,i8**%LT,align 8
%LU=getelementptr inbounds i8,i8*%LK,i64 24
%LV=bitcast i8*%LU to i32*
store i32 7,i32*%LV,align 4
ret i8*%LK
LW:
%LX=phi i8*[%Ly,%LB],[%J0,%J3]
%LY=phi i8*[%Lp,%LB],[%JR,%J3]
%LZ=phi i8*[%Lg,%LB],[%JI,%J3]
%L0=bitcast i8*%LZ to i8**
%L1=bitcast i8*%LY to i8**
%L2=bitcast i8*%LX to i8**
store i8*null,i8**%w,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%C,align 8
%L3=load i8*,i8**%L0,align 8
store i8*null,i8**%z,align 8
%L4=load i8*,i8**%L1,align 8
store i8*null,i8**%B,align 8
%L5=load i8*,i8**%x,align 8
%L6=load i8*,i8**%L2,align 8
store i8*%L3,i8**%w,align 8
store i8*%L4,i8**%x,align 8
store i8*%L6,i8**%y,align 8
store i8*%L5,i8**%z,align 8
%L7=call i8*@sml_alloc(i32 inreg 52)#0
%L8=bitcast i8*%L7 to i32*
%L9=getelementptr inbounds i8,i8*%L7,i64 -4
%Ma=bitcast i8*%L9 to i32*
store i32 1342177328,i32*%Ma,align 4
store i32 0,i32*%L8,align 4
%Mb=getelementptr inbounds i8,i8*%L7,i64 4
%Mc=bitcast i8*%Mb to i32*
store i32 1,i32*%Mc,align 4
%Md=load i8*,i8**%w,align 8
%Me=getelementptr inbounds i8,i8*%L7,i64 8
%Mf=bitcast i8*%Me to i8**
store i8*%Md,i8**%Mf,align 8
%Mg=load i8*,i8**%x,align 8
%Mh=getelementptr inbounds i8,i8*%L7,i64 16
%Mi=bitcast i8*%Mh to i8**
store i8*%Mg,i8**%Mi,align 8
%Mj=load i8*,i8**%y,align 8
%Mk=getelementptr inbounds i8,i8*%L7,i64 24
%Ml=bitcast i8*%Mk to i8**
store i8*%Mj,i8**%Ml,align 8
%Mm=load i8*,i8**%z,align 8
%Mn=getelementptr inbounds i8,i8*%L7,i64 32
%Mo=bitcast i8*%Mn to i8**
store i8*%Mm,i8**%Mo,align 8
%Mp=getelementptr inbounds i8,i8*%L7,i64 40
%Mq=bitcast i8*%Mp to i8**
store i8*null,i8**%Mq,align 8
%Mr=getelementptr inbounds i8,i8*%L7,i64 48
%Ms=bitcast i8*%Mr to i32*
store i32 62,i32*%Ms,align 4
%Mt=load i8*,i8**%G,align 8
%Mu=call fastcc i8*@_SMLL11array__alloc_779(i8*inreg%Mt,i8*inreg%L7)
ret i8*%Mu
Mv:
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
store i8*null,i8**%x,align 8
%Mw=getelementptr inbounds i8,i8*%ab,i64 8
%Mx=bitcast i8*%Mw to i8**
%My=load i8*,i8**%Mx,align 8
store i8*%My,i8**%y,align 8
%Mz=bitcast i8*%My to i8**
%MA=load i8*,i8**%Mz,align 8
%MB=getelementptr inbounds i8,i8*%MA,i64 8
%MC=bitcast i8*%MB to i8**
%MD=load i8*,i8**%MC,align 8
store i8*%MD,i8**%z,align 8
%ME=getelementptr inbounds i8,i8*%My,i64 8
%MF=bitcast i8*%ME to i8**
%MG=load i8*,i8**%MF,align 8
store i8*%MG,i8**%A,align 8
%MH=call fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_746(i8*inreg%MD)
%MI=icmp eq i8*%MH,null
br i1%MI,label%MJ,label%ML
MJ:
store i8*null,i8**%E,align 8
%MK=bitcast i8**%y to i8****
br label%Nq
ML:
%MM=bitcast i8*%MH to i8**
%MN=load i8*,i8**%MM,align 8
store i8*%MN,i8**%x,align 8
%MO=bitcast i8**%y to i8****
%MP=load i8***,i8****%MO,align 8
%MQ=load i8**,i8***%MP,align 8
%MR=load i8*,i8**%MQ,align 8
%MS=call fastcc i8*@_SMLFN15ExternFunSymbol5touchE(i8*inreg%MR)
store i8*%MS,i8**%w,align 8
%MT=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%MU=getelementptr inbounds i8,i8*%MT,i64 8
%MV=bitcast i8*%MU to i8**
%MW=load i8*,i8**%MV,align 8
%MX=call fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_755(i8*inreg%MW)
%MY=getelementptr inbounds i8,i8*%MX,i64 16
%MZ=bitcast i8*%MY to i8*(i8*,i8*)**
%M0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%MZ,align 8
%M1=bitcast i8*%MX to i8**
%M2=load i8*,i8**%M1,align 8
%M3=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%M4=call fastcc i8*%M0(i8*inreg%M2,i8*inreg%M3)
store i8*%M4,i8**%x,align 8
%M5=call i8*@sml_alloc(i32 inreg 20)#0
%M6=getelementptr inbounds i8,i8*%M5,i64 -4
%M7=bitcast i8*%M6 to i32*
store i32 1342177296,i32*%M7,align 4
store i8*%M5,i8**%B,align 8
%M8=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%M9=bitcast i8*%M5 to i8**
store i8*%M8,i8**%M9,align 8
%Na=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Nb=getelementptr inbounds i8,i8*%M5,i64 8
%Nc=bitcast i8*%Nb to i8**
store i8*%Na,i8**%Nc,align 8
%Nd=getelementptr inbounds i8,i8*%M5,i64 16
%Ne=bitcast i8*%Nd to i32*
store i32 3,i32*%Ne,align 4
%Nf=call i8*@sml_alloc(i32 inreg 20)#0
%Ng=bitcast i8*%Nf to i32*
%Nh=getelementptr inbounds i8,i8*%Nf,i64 -4
%Ni=bitcast i8*%Nh to i32*
store i32 1342177296,i32*%Ni,align 4
%Nj=getelementptr inbounds i8,i8*%Nf,i64 4
%Nk=bitcast i8*%Nj to i32*
store i32 0,i32*%Nk,align 1
store i32 1,i32*%Ng,align 4
%Nl=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%Nm=getelementptr inbounds i8,i8*%Nf,i64 8
%Nn=bitcast i8*%Nm to i8**
store i8*%Nl,i8**%Nn,align 8
%No=getelementptr inbounds i8,i8*%Nf,i64 16
%Np=bitcast i8*%No to i32*
store i32 2,i32*%Np,align 4
br label%Nq
Nq:
%Nr=phi i8****[%MO,%ML],[%MK,%MJ]
%Ns=phi i8*[%Nf,%ML],[null,%MJ]
store i8*%Ns,i8**%x,align 8
%Nt=load i8***,i8****%Nr,align 8
store i8*null,i8**%y,align 8
%Nu=load i8**,i8***%Nt,align 8
%Nv=load i8*,i8**%Nu,align 8
%Nw=call fastcc i8*@_SMLFN12ExternSymbol5touchE(i8*inreg%Nv)
store i8*%Nw,i8**%w,align 8
%Nx=call i8*@sml_alloc(i32 inreg 28)#0
%Ny=getelementptr inbounds i8,i8*%Nx,i64 -4
%Nz=bitcast i8*%Ny to i32*
store i32 1342177304,i32*%Nz,align 4
store i8*%Nx,i8**%y,align 8
%NA=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%NB=bitcast i8*%Nx to i8**
store i8*%NA,i8**%NB,align 8
%NC=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%ND=getelementptr inbounds i8,i8*%Nx,i64 8
%NE=bitcast i8*%ND to i8**
store i8*%NC,i8**%NE,align 8
%NF=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%NG=getelementptr inbounds i8,i8*%Nx,i64 16
%NH=bitcast i8*%NG to i8**
store i8*%NF,i8**%NH,align 8
%NI=getelementptr inbounds i8,i8*%Nx,i64 24
%NJ=bitcast i8*%NI to i32*
store i32 7,i32*%NJ,align 4
%NK=call i8*@sml_alloc(i32 inreg 20)#0
%NL=getelementptr inbounds i8,i8*%NK,i64 -4
%NM=bitcast i8*%NL to i32*
store i32 1342177296,i32*%NM,align 4
store i8*%NK,i8**%w,align 8
%NN=getelementptr inbounds i8,i8*%NK,i64 4
%NO=bitcast i8*%NN to i32*
store i32 0,i32*%NO,align 1
%NP=bitcast i8*%NK to i32*
store i32 6,i32*%NP,align 4
%NQ=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%NR=getelementptr inbounds i8,i8*%NK,i64 8
%NS=bitcast i8*%NR to i8**
store i8*%NQ,i8**%NS,align 8
%NT=getelementptr inbounds i8,i8*%NK,i64 16
%NU=bitcast i8*%NT to i32*
store i32 2,i32*%NU,align 4
%NV=call i8*@sml_alloc(i32 inreg 28)#0
%NW=getelementptr inbounds i8,i8*%NV,i64 -4
%NX=bitcast i8*%NW to i32*
store i32 1342177304,i32*%NX,align 4
%NY=bitcast i8*%NV to i8**
store i8*null,i8**%NY,align 8
%NZ=load i8*,i8**%x,align 8
%N0=getelementptr inbounds i8,i8*%NV,i64 8
%N1=bitcast i8*%N0 to i8**
store i8*%NZ,i8**%N1,align 8
%N2=load i8*,i8**%w,align 8
%N3=getelementptr inbounds i8,i8*%NV,i64 16
%N4=bitcast i8*%N3 to i8**
store i8*%N2,i8**%N4,align 8
%N5=getelementptr inbounds i8,i8*%NV,i64 24
%N6=bitcast i8*%N5 to i32*
store i32 7,i32*%N6,align 4
store i8*null,i8**%w,align 8
store i8*%N2,i8**%y,align 8
%N7=call i8*@sml_alloc(i32 inreg 28)#0
%N8=getelementptr inbounds i8,i8*%N7,i64 -4
%N9=bitcast i8*%N8 to i32*
store i32 1342177304,i32*%N9,align 4
%Oa=load i8*,i8**%w,align 8
%Ob=bitcast i8*%N7 to i8**
store i8*%Oa,i8**%Ob,align 8
%Oc=load i8*,i8**%x,align 8
%Od=getelementptr inbounds i8,i8*%N7,i64 8
%Oe=bitcast i8*%Od to i8**
store i8*%Oc,i8**%Oe,align 8
%Of=load i8*,i8**%y,align 8
%Og=getelementptr inbounds i8,i8*%N7,i64 16
%Oh=bitcast i8*%Og to i8**
store i8*%Of,i8**%Oh,align 8
%Oi=getelementptr inbounds i8,i8*%N7,i64 24
%Oj=bitcast i8*%Oi to i32*
store i32 7,i32*%Oj,align 4
ret i8*%N7
Ok:
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%Ol=getelementptr inbounds i8,i8*%ab,i64 8
%Om=bitcast i8*%Ol to i8**
%On=load i8*,i8**%Om,align 8
%Oo=bitcast i8*%On to i8**
%Op=load i8*,i8**%Oo,align 8
store i8*%Op,i8**%w,align 8
%Oq=getelementptr inbounds i8,i8*%On,i64 8
%Or=bitcast i8*%Oq to i8**
%Os=load i8*,i8**%Or,align 8
store i8*%Os,i8**%x,align 8
%Ot=call fastcc i8*@_SMLFN5VarID3Map4findE(i32 inreg 1,i32 inreg 8)
%Ou=getelementptr inbounds i8,i8*%Ot,i64 16
%Ov=bitcast i8*%Ou to i8*(i8*,i8*)**
%Ow=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ov,align 8
%Ox=bitcast i8*%Ot to i8**
%Oy=load i8*,i8**%Ox,align 8
store i8*%Oy,i8**%z,align 8
%Oz=load i8*,i8**%E,align 8
%OA=getelementptr inbounds i8,i8*%Oz,i64 24
%OB=bitcast i8*%OA to i8**
%OC=load i8*,i8**%OB,align 8
store i8*%OC,i8**%y,align 8
%OD=bitcast i8**%x to i32**
%OE=load i32*,i32**%OD,align 8
%OF=load i32,i32*%OE,align 4
%OG=call i8*@sml_alloc(i32 inreg 20)#0
%OH=getelementptr inbounds i8,i8*%OG,i64 -4
%OI=bitcast i8*%OH to i32*
store i32 1342177296,i32*%OI,align 4
%OJ=getelementptr inbounds i8,i8*%OG,i64 12
%OK=bitcast i8*%OJ to i32*
store i32 0,i32*%OK,align 1
%OL=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%OM=bitcast i8*%OG to i8**
store i8*%OL,i8**%OM,align 8
%ON=getelementptr inbounds i8,i8*%OG,i64 8
%OO=bitcast i8*%ON to i32*
store i32%OF,i32*%OO,align 4
%OP=getelementptr inbounds i8,i8*%OG,i64 16
%OQ=bitcast i8*%OP to i32*
store i32 1,i32*%OQ,align 4
%OR=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%OS=call fastcc i8*%Ow(i8*inreg%OR,i8*inreg%OG)
%OT=icmp eq i8*%OS,null
br i1%OT,label%OU,label%Ps
OU:
store i8*null,i8**%E,align 8
store i8*null,i8**%w,align 8
%OV=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%OV,i8**%y,align 8
%OW=load i32*,i32**%OD,align 8
store i8*null,i8**%x,align 8
%OX=load i32,i32*%OW,align 4
%OY=call fastcc i8*@_SMLFN5VarID8toStringE(i32 inreg%OX)
store i8*%OY,i8**%w,align 8
%OZ=call i8*@sml_alloc(i32 inreg 20)#0
%O0=getelementptr inbounds i8,i8*%OZ,i64 -4
%O1=bitcast i8*%O0 to i32*
store i32 1342177296,i32*%O1,align 4
%O2=bitcast i8*%OZ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[19x i8]}>,<{[4x i8],i32,[19x i8]}>*@aF,i64 0,i32 2,i64 0),i8**%O2,align 8
%O3=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%O4=getelementptr inbounds i8,i8*%OZ,i64 8
%O5=bitcast i8*%O4 to i8**
store i8*%O3,i8**%O5,align 8
%O6=getelementptr inbounds i8,i8*%OZ,i64 16
%O7=bitcast i8*%O6 to i32*
store i32 3,i32*%O7,align 4
%O8=call fastcc i8*@_SMLFN6String1_ZE(i8*inreg%OZ)
store i8*%O8,i8**%w,align 8
%O9=call i8*@sml_alloc(i32 inreg 28)#0
%Pa=getelementptr inbounds i8,i8*%O9,i64 -4
%Pb=bitcast i8*%Pa to i32*
store i32 1342177304,i32*%Pb,align 4
store i8*%O9,i8**%x,align 8
%Pc=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Pd=bitcast i8*%O9 to i8**
store i8*%Pc,i8**%Pd,align 8
%Pe=getelementptr inbounds i8,i8*%O9,i64 8
%Pf=bitcast i8*%Pe to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@aE,i64 0,i32 2,i64 0),i8**%Pf,align 8
%Pg=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Ph=getelementptr inbounds i8,i8*%O9,i64 16
%Pi=bitcast i8*%Ph to i8**
store i8*%Pg,i8**%Pi,align 8
%Pj=getelementptr inbounds i8,i8*%O9,i64 24
%Pk=bitcast i8*%Pj to i32*
store i32 7,i32*%Pk,align 4
%Pl=call i8*@sml_alloc(i32 inreg 60)#0
%Pm=getelementptr inbounds i8,i8*%Pl,i64 -4
%Pn=bitcast i8*%Pm to i32*
store i32 1342177336,i32*%Pn,align 4
%Po=getelementptr inbounds i8,i8*%Pl,i64 56
%Pp=bitcast i8*%Po to i32*
store i32 1,i32*%Pp,align 4
%Pq=load i8*,i8**%x,align 8
%Pr=bitcast i8*%Pl to i8**
store i8*%Pq,i8**%Pr,align 8
call void@sml_raise(i8*inreg%Pl)#1
unreachable
Ps:
%Pt=bitcast i8*%OS to i8**
%Pu=load i8*,i8**%Pt,align 8
%Pv=bitcast i8*%Pu to i8**
%Pw=load i8*,i8**%Pv,align 8
%Px=getelementptr inbounds i8,i8*%Pw,i64 16
%Py=bitcast i8*%Px to i8**
%Pz=load i8*,i8**%Py,align 8
store i8*%Pz,i8**%y,align 8
%PA=getelementptr inbounds i8,i8*%Pu,i64 8
%PB=bitcast i8*%PA to i8**
%PC=load i8*,i8**%PB,align 8
%PD=icmp eq i8*%PC,null
br i1%PD,label%PE,label%Rv
PE:
%PF=getelementptr inbounds i8,i8*%Pu,i64 16
%PG=bitcast i8*%PF to i8**
%PH=load i8*,i8**%PG,align 8
store i8*%PH,i8**%z,align 8
%PI=icmp eq i8*%PH,null
br i1%PI,label%PN,label%PJ
PJ:
%PK=bitcast i8*%PH to i32*
%PL=load i32,i32*%PK,align 4
%PM=icmp eq i32%PL,2
br i1%PM,label%Ql,label%PN
PN:
store i8*null,i8**%E,align 8
store i8*null,i8**%y,align 8
%PO=call i8*@sml_alloc(i32 inreg 20)#0
%PP=getelementptr inbounds i8,i8*%PO,i64 -4
%PQ=bitcast i8*%PP to i32*
store i32 1342177296,i32*%PQ,align 4
store i8*%PO,i8**%y,align 8
%PR=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%PS=bitcast i8*%PO to i8**
store i8*%PR,i8**%PS,align 8
%PT=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%PU=getelementptr inbounds i8,i8*%PO,i64 8
%PV=bitcast i8*%PU to i8**
store i8*%PT,i8**%PV,align 8
%PW=getelementptr inbounds i8,i8*%PO,i64 16
%PX=bitcast i8*%PW to i32*
store i32 3,i32*%PX,align 4
%PY=call i8*@sml_alloc(i32 inreg 20)#0
%PZ=getelementptr inbounds i8,i8*%PY,i64 -4
%P0=bitcast i8*%PZ to i32*
store i32 1342177296,i32*%P0,align 4
store i8*%PY,i8**%w,align 8
%P1=getelementptr inbounds i8,i8*%PY,i64 4
%P2=bitcast i8*%P1 to i32*
store i32 0,i32*%P2,align 1
%P3=bitcast i8*%PY to i32*
store i32 18,i32*%P3,align 4
%P4=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%P5=getelementptr inbounds i8,i8*%PY,i64 8
%P6=bitcast i8*%P5 to i8**
store i8*%P4,i8**%P6,align 8
%P7=getelementptr inbounds i8,i8*%PY,i64 16
%P8=bitcast i8*%P7 to i32*
store i32 2,i32*%P8,align 4
%P9=call i8*@sml_alloc(i32 inreg 28)#0
%Qa=getelementptr inbounds i8,i8*%P9,i64 -4
%Qb=bitcast i8*%Qa to i32*
store i32 1342177304,i32*%Qb,align 4
%Qc=bitcast i8*%P9 to i8**
store i8*null,i8**%Qc,align 8
%Qd=load i8*,i8**%z,align 8
%Qe=getelementptr inbounds i8,i8*%P9,i64 8
%Qf=bitcast i8*%Qe to i8**
store i8*%Qd,i8**%Qf,align 8
%Qg=load i8*,i8**%w,align 8
%Qh=getelementptr inbounds i8,i8*%P9,i64 16
%Qi=bitcast i8*%Qh to i8**
store i8*%Qg,i8**%Qi,align 8
%Qj=getelementptr inbounds i8,i8*%P9,i64 24
%Qk=bitcast i8*%Qj to i32*
store i32 7,i32*%Qk,align 4
ret i8*%P9
Ql:
%Qm=getelementptr inbounds i8,i8*%PH,i64 8
%Qn=bitcast i8*%Qm to i8**
%Qo=load i8*,i8**%Qn,align 8
store i8*%Qo,i8**%z,align 8
%Qp=load i8*,i8**%E,align 8
%Qq=getelementptr inbounds i8,i8*%Qp,i64 8
%Qr=bitcast i8*%Qq to i8**
%Qs=load i8*,i8**%Qr,align 8
store i8*%Qs,i8**%x,align 8
%Qt=bitcast i8*%Qp to i8**
store i8*null,i8**%E,align 8
%Qu=load i8*,i8**%Qt,align 8
store i8*%Qu,i8**%A,align 8
%Qv=call i8*@sml_alloc(i32 inreg 20)#0
%Qw=getelementptr inbounds i8,i8*%Qv,i64 -4
%Qx=bitcast i8*%Qw to i32*
store i32 1342177296,i32*%Qx,align 4
%Qy=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Qz=bitcast i8*%Qv to i8**
store i8*%Qy,i8**%Qz,align 8
%QA=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%QB=getelementptr inbounds i8,i8*%Qv,i64 8
%QC=bitcast i8*%QB to i8**
store i8*%QA,i8**%QC,align 8
%QD=getelementptr inbounds i8,i8*%Qv,i64 16
%QE=bitcast i8*%QD to i32*
store i32 3,i32*%QE,align 4
%QF=call fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_685(i8*inreg%Qv)
%QG=getelementptr inbounds i8,i8*%QF,i64 16
%QH=bitcast i8*%QG to i8*(i8*,i8*)**
%QI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QH,align 8
%QJ=bitcast i8*%QF to i8**
%QK=load i8*,i8**%QJ,align 8
store i8*%QK,i8**%x,align 8
%QL=call i8*@sml_alloc(i32 inreg 20)#0
%QM=getelementptr inbounds i8,i8*%QL,i64 -4
%QN=bitcast i8*%QM to i32*
store i32 1342177296,i32*%QN,align 4
%QO=load i8*,i8**%z,align 8
%QP=bitcast i8*%QL to i8**
store i8*%QO,i8**%QP,align 8
%QQ=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%QR=getelementptr inbounds i8,i8*%QL,i64 8
%QS=bitcast i8*%QR to i8**
store i8*%QQ,i8**%QS,align 8
%QT=getelementptr inbounds i8,i8*%QL,i64 16
%QU=bitcast i8*%QT to i32*
store i32 3,i32*%QU,align 4
%QV=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%QW=call fastcc i8*%QI(i8*inreg%QV,i8*inreg%QL)
%QX=getelementptr inbounds i8,i8*%QW,i64 16
%QY=bitcast i8*%QX to i8*(i8*,i8*)**
%QZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%QY,align 8
%Q0=bitcast i8*%QW to i8**
%Q1=load i8*,i8**%Q0,align 8
%Q2=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Q3=call fastcc i8*%QZ(i8*inreg%Q1,i8*inreg%Q2)
%Q4=bitcast i8*%Q3 to i8**
%Q5=load i8*,i8**%Q4,align 8
store i8*%Q5,i8**%w,align 8
%Q6=getelementptr inbounds i8,i8*%Q3,i64 8
%Q7=bitcast i8*%Q6 to i8**
%Q8=load i8*,i8**%Q7,align 8
store i8*%Q8,i8**%x,align 8
%Q9=call i8*@sml_alloc(i32 inreg 20)#0
%Ra=getelementptr inbounds i8,i8*%Q9,i64 -4
%Rb=bitcast i8*%Ra to i32*
store i32 1342177296,i32*%Rb,align 4
store i8*%Q9,i8**%y,align 8
%Rc=bitcast i8*%Q9 to i64*
store i64 0,i64*%Rc,align 4
%Rd=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%Re=getelementptr inbounds i8,i8*%Q9,i64 8
%Rf=bitcast i8*%Re to i8**
store i8*%Rd,i8**%Rf,align 8
%Rg=getelementptr inbounds i8,i8*%Q9,i64 16
%Rh=bitcast i8*%Rg to i32*
store i32 2,i32*%Rh,align 4
%Ri=call i8*@sml_alloc(i32 inreg 28)#0
%Rj=getelementptr inbounds i8,i8*%Ri,i64 -4
%Rk=bitcast i8*%Rj to i32*
store i32 1342177304,i32*%Rk,align 4
%Rl=load i8*,i8**%w,align 8
%Rm=bitcast i8*%Ri to i8**
store i8*%Rl,i8**%Rm,align 8
%Rn=load i8*,i8**%y,align 8
%Ro=getelementptr inbounds i8,i8*%Ri,i64 8
%Rp=bitcast i8*%Ro to i8**
store i8*%Rn,i8**%Rp,align 8
%Rq=load i8*,i8**%x,align 8
%Rr=getelementptr inbounds i8,i8*%Ri,i64 16
%Rs=bitcast i8*%Rr to i8**
store i8*%Rq,i8**%Rs,align 8
%Rt=getelementptr inbounds i8,i8*%Ri,i64 24
%Ru=bitcast i8*%Rt to i32*
store i32 7,i32*%Ru,align 4
ret i8*%Ri
Rv:
%Rw=bitcast i8*%PC to i8**
store i8*null,i8**%E,align 8
%Rx=load i8*,i8**%Rw,align 8
store i8*%Rx,i8**%x,align 8
%Ry=getelementptr inbounds i8,i8*%Pu,i64 16
%Rz=bitcast i8*%Ry to i8**
%RA=load i8*,i8**%Rz,align 8
store i8*%RA,i8**%z,align 8
%RB=call i8*@sml_alloc(i32 inreg 28)#0
%RC=getelementptr inbounds i8,i8*%RB,i64 -4
%RD=bitcast i8*%RC to i32*
store i32 1342177304,i32*%RD,align 4
store i8*%RB,i8**%A,align 8
%RE=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%RF=bitcast i8*%RB to i8**
store i8*%RE,i8**%RF,align 8
%RG=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%RH=getelementptr inbounds i8,i8*%RB,i64 8
%RI=bitcast i8*%RH to i8**
store i8*%RG,i8**%RI,align 8
%RJ=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%RK=getelementptr inbounds i8,i8*%RB,i64 16
%RL=bitcast i8*%RK to i8**
store i8*%RJ,i8**%RL,align 8
%RM=getelementptr inbounds i8,i8*%RB,i64 24
%RN=bitcast i8*%RM to i32*
store i32 7,i32*%RN,align 4
%RO=call i8*@sml_alloc(i32 inreg 20)#0
%RP=getelementptr inbounds i8,i8*%RO,i64 -4
%RQ=bitcast i8*%RP to i32*
store i32 1342177296,i32*%RQ,align 4
store i8*%RO,i8**%w,align 8
%RR=getelementptr inbounds i8,i8*%RO,i64 4
%RS=bitcast i8*%RR to i32*
store i32 0,i32*%RS,align 1
%RT=bitcast i8*%RO to i32*
store i32 3,i32*%RT,align 4
%RU=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%RV=getelementptr inbounds i8,i8*%RO,i64 8
%RW=bitcast i8*%RV to i8**
store i8*%RU,i8**%RW,align 8
%RX=getelementptr inbounds i8,i8*%RO,i64 16
%RY=bitcast i8*%RX to i32*
store i32 2,i32*%RY,align 4
%RZ=call i8*@sml_alloc(i32 inreg 28)#0
%R0=getelementptr inbounds i8,i8*%RZ,i64 -4
%R1=bitcast i8*%R0 to i32*
store i32 1342177304,i32*%R1,align 4
%R2=bitcast i8*%RZ to i8**
store i8*null,i8**%R2,align 8
%R3=load i8*,i8**%z,align 8
%R4=getelementptr inbounds i8,i8*%RZ,i64 8
%R5=bitcast i8*%R4 to i8**
store i8*%R3,i8**%R5,align 8
%R6=load i8*,i8**%w,align 8
%R7=getelementptr inbounds i8,i8*%RZ,i64 16
%R8=bitcast i8*%R7 to i8**
store i8*%R6,i8**%R8,align 8
%R9=getelementptr inbounds i8,i8*%RZ,i64 24
%Sa=bitcast i8*%R9 to i32*
store i32 7,i32*%Sa,align 4
ret i8*%RZ
Sb:
%Sc=bitcast i8*%ad to i8**
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%Sd=getelementptr inbounds i8,i8*%ab,i64 8
%Se=bitcast i8*%Sd to i8**
%Sf=load i8*,i8**%Se,align 8
%Sg=bitcast i8*%Sf to i8**
%Sh=load i8*,i8**%Sg,align 8
store i8*%Sh,i8**%x,align 8
%Si=getelementptr inbounds i8,i8*%Sf,i64 8
%Sj=bitcast i8*%Si to i8**
%Sk=load i8*,i8**%Sj,align 8
%Sl=bitcast i8*%Sk to i32*
%Sm=load i32,i32*%Sl,align 4
switch i32%Sm,label%Sn[
i32 1,label%TY
i32 0,label%SF
]
Sn:
store i8*null,i8**%E,align 8
store i8*null,i8**%x,align 8
call void@sml_matchcomp_bug()
%So=load i8*,i8**@_SMLZ5Match,align 8
store i8*%So,i8**%w,align 8
%Sp=call i8*@sml_alloc(i32 inreg 20)#0
%Sq=getelementptr inbounds i8,i8*%Sp,i64 -4
%Sr=bitcast i8*%Sq to i32*
store i32 1342177296,i32*%Sr,align 4
store i8*%Sp,i8**%x,align 8
%Ss=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%St=bitcast i8*%Sp to i8**
store i8*%Ss,i8**%St,align 8
%Su=getelementptr inbounds i8,i8*%Sp,i64 8
%Sv=bitcast i8*%Su to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@aL,i64 0,i32 2,i64 0),i8**%Sv,align 8
%Sw=getelementptr inbounds i8,i8*%Sp,i64 16
%Sx=bitcast i8*%Sw to i32*
store i32 3,i32*%Sx,align 4
%Sy=call i8*@sml_alloc(i32 inreg 60)#0
%Sz=getelementptr inbounds i8,i8*%Sy,i64 -4
%SA=bitcast i8*%Sz to i32*
store i32 1342177336,i32*%SA,align 4
%SB=getelementptr inbounds i8,i8*%Sy,i64 56
%SC=bitcast i8*%SB to i32*
store i32 1,i32*%SC,align 4
%SD=load i8*,i8**%x,align 8
%SE=bitcast i8*%Sy to i8**
store i8*%SD,i8**%SE,align 8
call void@sml_raise(i8*inreg%Sy)#1
unreachable
SF:
%SG=getelementptr inbounds i8,i8*%Sk,i64 8
%SH=bitcast i8*%SG to i8**
%SI=load i8*,i8**%SH,align 8
store i8*%SI,i8**%y,align 8
store i8*null,i8**%E,align 8
%SJ=load i8*,i8**%Sc,align 8
%SK=call fastcc i8*@_SMLFN14ExtraDataLabel8generateE(i8*inreg%SJ)
store i8*%SK,i8**%w,align 8
%SL=call i8*@sml_alloc(i32 inreg 28)#0
%SM=getelementptr inbounds i8,i8*%SL,i64 -4
%SN=bitcast i8*%SM to i32*
store i32 1342177304,i32*%SN,align 4
store i8*%SL,i8**%z,align 8
%SO=load i8*,i8**%w,align 8
%SP=bitcast i8*%SL to i8**
store i8*%SO,i8**%SP,align 8
%SQ=load i8*,i8**%x,align 8
%SR=getelementptr inbounds i8,i8*%SL,i64 8
%SS=bitcast i8*%SR to i8**
store i8*%SQ,i8**%SS,align 8
%ST=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%SU=getelementptr inbounds i8,i8*%SL,i64 16
%SV=bitcast i8*%SU to i8**
store i8*%ST,i8**%SV,align 8
%SW=getelementptr inbounds i8,i8*%SL,i64 24
%SX=bitcast i8*%SW to i32*
store i32 7,i32*%SX,align 4
%SY=call i8*@sml_alloc(i32 inreg 20)#0
%SZ=getelementptr inbounds i8,i8*%SY,i64 -4
%S0=bitcast i8*%SZ to i32*
store i32 1342177296,i32*%S0,align 4
store i8*%SY,i8**%y,align 8
%S1=getelementptr inbounds i8,i8*%SY,i64 4
%S2=bitcast i8*%S1 to i32*
store i32 0,i32*%S2,align 1
%S3=bitcast i8*%SY to i32*
store i32 5,i32*%S3,align 4
%S4=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%S5=getelementptr inbounds i8,i8*%SY,i64 8
%S6=bitcast i8*%S5 to i8**
store i8*%S4,i8**%S6,align 8
%S7=getelementptr inbounds i8,i8*%SY,i64 16
%S8=bitcast i8*%S7 to i32*
store i32 2,i32*%S8,align 4
%S9=call i8*@sml_alloc(i32 inreg 20)#0
%Ta=getelementptr inbounds i8,i8*%S9,i64 -4
%Tb=bitcast i8*%Ta to i32*
store i32 1342177296,i32*%Tb,align 4
store i8*%S9,i8**%z,align 8
%Tc=bitcast i8*%S9 to i64*
store i64 0,i64*%Tc,align 4
%Td=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Te=getelementptr inbounds i8,i8*%S9,i64 8
%Tf=bitcast i8*%Te to i8**
store i8*%Td,i8**%Tf,align 8
%Tg=getelementptr inbounds i8,i8*%S9,i64 16
%Th=bitcast i8*%Tg to i32*
store i32 2,i32*%Th,align 4
%Ti=call i8*@sml_alloc(i32 inreg 20)#0
%Tj=getelementptr inbounds i8,i8*%Ti,i64 -4
%Tk=bitcast i8*%Tj to i32*
store i32 1342177296,i32*%Tk,align 4
store i8*%Ti,i8**%A,align 8
%Tl=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%Tm=bitcast i8*%Ti to i8**
store i8*%Tl,i8**%Tm,align 8
%Tn=getelementptr inbounds i8,i8*%Ti,i64 8
%To=bitcast i8*%Tn to i8**
store i8*null,i8**%To,align 8
%Tp=getelementptr inbounds i8,i8*%Ti,i64 16
%Tq=bitcast i8*%Tp to i32*
store i32 3,i32*%Tq,align 4
%Tr=call i8*@sml_alloc(i32 inreg 20)#0
%Ts=getelementptr inbounds i8,i8*%Tr,i64 -4
%Tt=bitcast i8*%Ts to i32*
store i32 1342177296,i32*%Tt,align 4
store i8*%Tr,i8**%y,align 8
%Tu=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Tv=bitcast i8*%Tr to i8**
store i8*%Tu,i8**%Tv,align 8
%Tw=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Tx=getelementptr inbounds i8,i8*%Tr,i64 8
%Ty=bitcast i8*%Tx to i8**
store i8*%Tw,i8**%Ty,align 8
%Tz=getelementptr inbounds i8,i8*%Tr,i64 16
%TA=bitcast i8*%Tz to i32*
store i32 3,i32*%TA,align 4
%TB=call i8*@sml_alloc(i32 inreg 20)#0
%TC=getelementptr inbounds i8,i8*%TB,i64 -4
%TD=bitcast i8*%TC to i32*
store i32 1342177296,i32*%TD,align 4
store i8*%TB,i8**%w,align 8
%TE=getelementptr inbounds i8,i8*%TB,i64 4
%TF=bitcast i8*%TE to i32*
store i32 0,i32*%TF,align 1
%TG=bitcast i8*%TB to i32*
store i32 9,i32*%TG,align 4
%TH=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%TI=getelementptr inbounds i8,i8*%TB,i64 8
%TJ=bitcast i8*%TI to i8**
store i8*%TH,i8**%TJ,align 8
%TK=getelementptr inbounds i8,i8*%TB,i64 16
%TL=bitcast i8*%TK to i32*
store i32 2,i32*%TL,align 4
%TM=call i8*@sml_alloc(i32 inreg 28)#0
%TN=getelementptr inbounds i8,i8*%TM,i64 -4
%TO=bitcast i8*%TN to i32*
store i32 1342177304,i32*%TO,align 4
%TP=load i8*,i8**%A,align 8
%TQ=bitcast i8*%TM to i8**
store i8*%TP,i8**%TQ,align 8
%TR=getelementptr inbounds i8,i8*%TM,i64 8
%TS=bitcast i8*%TR to i8**
store i8*null,i8**%TS,align 8
%TT=load i8*,i8**%w,align 8
%TU=getelementptr inbounds i8,i8*%TM,i64 16
%TV=bitcast i8*%TU to i8**
store i8*%TT,i8**%TV,align 8
%TW=getelementptr inbounds i8,i8*%TM,i64 24
%TX=bitcast i8*%TW to i32*
store i32 7,i32*%TX,align 4
ret i8*%TM
TY:
%TZ=getelementptr inbounds i8,i8*%Sk,i64 8
%T0=bitcast i8*%TZ to i8**
%T1=load i8*,i8**%T0,align 8
store i8*%T1,i8**%y,align 8
store i8*null,i8**%E,align 8
%T2=load i8*,i8**%Sc,align 8
%T3=call fastcc i8*@_SMLFN9DataLabel8generateE(i8*inreg%T2)
store i8*%T3,i8**%w,align 8
%T4=call i8*@sml_alloc(i32 inreg 28)#0
%T5=getelementptr inbounds i8,i8*%T4,i64 -4
%T6=bitcast i8*%T5 to i32*
store i32 1342177304,i32*%T6,align 4
store i8*%T4,i8**%z,align 8
%T7=load i8*,i8**%w,align 8
%T8=bitcast i8*%T4 to i8**
store i8*%T7,i8**%T8,align 8
%T9=load i8*,i8**%x,align 8
%Ua=getelementptr inbounds i8,i8*%T4,i64 8
%Ub=bitcast i8*%Ua to i8**
store i8*%T9,i8**%Ub,align 8
%Uc=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Ud=getelementptr inbounds i8,i8*%T4,i64 16
%Ue=bitcast i8*%Ud to i8**
store i8*%Uc,i8**%Ue,align 8
%Uf=getelementptr inbounds i8,i8*%T4,i64 24
%Ug=bitcast i8*%Uf to i32*
store i32 7,i32*%Ug,align 4
%Uh=call i8*@sml_alloc(i32 inreg 20)#0
%Ui=getelementptr inbounds i8,i8*%Uh,i64 -4
%Uj=bitcast i8*%Ui to i32*
store i32 1342177296,i32*%Uj,align 4
store i8*%Uh,i8**%y,align 8
%Uk=getelementptr inbounds i8,i8*%Uh,i64 4
%Ul=bitcast i8*%Uk to i32*
store i32 0,i32*%Ul,align 1
%Um=bitcast i8*%Uh to i32*
store i32 7,i32*%Um,align 4
%Un=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%Uo=getelementptr inbounds i8,i8*%Uh,i64 8
%Up=bitcast i8*%Uo to i8**
store i8*%Un,i8**%Up,align 8
%Uq=getelementptr inbounds i8,i8*%Uh,i64 16
%Ur=bitcast i8*%Uq to i32*
store i32 2,i32*%Ur,align 4
%Us=call i8*@sml_alloc(i32 inreg 20)#0
%Ut=getelementptr inbounds i8,i8*%Us,i64 -4
%Uu=bitcast i8*%Ut to i32*
store i32 1342177296,i32*%Uu,align 4
store i8*%Us,i8**%z,align 8
%Uv=bitcast i8*%Us to i64*
store i64 0,i64*%Uv,align 4
%Uw=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Ux=getelementptr inbounds i8,i8*%Us,i64 8
%Uy=bitcast i8*%Ux to i8**
store i8*%Uw,i8**%Uy,align 8
%Uz=getelementptr inbounds i8,i8*%Us,i64 16
%UA=bitcast i8*%Uz to i32*
store i32 2,i32*%UA,align 4
%UB=call i8*@sml_alloc(i32 inreg 20)#0
%UC=getelementptr inbounds i8,i8*%UB,i64 -4
%UD=bitcast i8*%UC to i32*
store i32 1342177296,i32*%UD,align 4
store i8*%UB,i8**%A,align 8
%UE=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%UF=bitcast i8*%UB to i8**
store i8*%UE,i8**%UF,align 8
%UG=getelementptr inbounds i8,i8*%UB,i64 8
%UH=bitcast i8*%UG to i8**
store i8*null,i8**%UH,align 8
%UI=getelementptr inbounds i8,i8*%UB,i64 16
%UJ=bitcast i8*%UI to i32*
store i32 3,i32*%UJ,align 4
%UK=load i8*,i8**@_SMLZN12BuiltinTypes8stringTyE,align 8
store i8*%UK,i8**%y,align 8
%UL=call i8*@sml_alloc(i32 inreg 20)#0
%UM=getelementptr inbounds i8,i8*%UL,i64 -4
%UN=bitcast i8*%UM to i32*
store i32 1342177296,i32*%UN,align 4
store i8*%UL,i8**%z,align 8
%UO=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%UP=bitcast i8*%UL to i8**
store i8*%UO,i8**%UP,align 8
%UQ=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%UR=getelementptr inbounds i8,i8*%UL,i64 8
%US=bitcast i8*%UR to i8**
store i8*%UQ,i8**%US,align 8
%UT=getelementptr inbounds i8,i8*%UL,i64 16
%UU=bitcast i8*%UT to i32*
store i32 3,i32*%UU,align 4
%UV=call i8*@sml_alloc(i32 inreg 20)#0
%UW=getelementptr inbounds i8,i8*%UV,i64 -4
%UX=bitcast i8*%UW to i32*
store i32 1342177296,i32*%UX,align 4
store i8*%UV,i8**%B,align 8
%UY=getelementptr inbounds i8,i8*%UV,i64 4
%UZ=bitcast i8*%UY to i32*
store i32 0,i32*%UZ,align 1
%U0=bitcast i8*%UV to i32*
store i32 20,i32*%U0,align 4
%U1=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%U2=getelementptr inbounds i8,i8*%UV,i64 8
%U3=bitcast i8*%U2 to i8**
store i8*%U1,i8**%U3,align 8
%U4=getelementptr inbounds i8,i8*%UV,i64 16
%U5=bitcast i8*%U4 to i32*
store i32 2,i32*%U5,align 4
%U6=load i8*,i8**@_SMLZN12BuiltinTypes8stringTyE,align 8
store i8*%U6,i8**%w,align 8
%U7=call i8*@sml_alloc(i32 inreg 28)#0
%U8=getelementptr inbounds i8,i8*%U7,i64 -4
%U9=bitcast i8*%U8 to i32*
store i32 1342177304,i32*%U9,align 4
store i8*%U7,i8**%y,align 8
%Va=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%Vb=bitcast i8*%U7 to i8**
store i8*%Va,i8**%Vb,align 8
%Vc=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Vd=getelementptr inbounds i8,i8*%U7,i64 8
%Ve=bitcast i8*%Vd to i8**
store i8*%Vc,i8**%Ve,align 8
%Vf=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%Vg=getelementptr inbounds i8,i8*%U7,i64 16
%Vh=bitcast i8*%Vg to i8**
store i8*%Vf,i8**%Vh,align 8
%Vi=getelementptr inbounds i8,i8*%U7,i64 24
%Vj=bitcast i8*%Vi to i32*
store i32 7,i32*%Vj,align 4
%Vk=call i8*@sml_alloc(i32 inreg 20)#0
%Vl=getelementptr inbounds i8,i8*%Vk,i64 -4
%Vm=bitcast i8*%Vl to i32*
store i32 1342177296,i32*%Vm,align 4
store i8*%Vk,i8**%w,align 8
%Vn=getelementptr inbounds i8,i8*%Vk,i64 4
%Vo=bitcast i8*%Vn to i32*
store i32 0,i32*%Vo,align 1
%Vp=bitcast i8*%Vk to i32*
store i32 3,i32*%Vp,align 4
%Vq=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%Vr=getelementptr inbounds i8,i8*%Vk,i64 8
%Vs=bitcast i8*%Vr to i8**
store i8*%Vq,i8**%Vs,align 8
%Vt=getelementptr inbounds i8,i8*%Vk,i64 16
%Vu=bitcast i8*%Vt to i32*
store i32 2,i32*%Vu,align 4
%Vv=call i8*@sml_alloc(i32 inreg 28)#0
%Vw=getelementptr inbounds i8,i8*%Vv,i64 -4
%Vx=bitcast i8*%Vw to i32*
store i32 1342177304,i32*%Vx,align 4
%Vy=load i8*,i8**%A,align 8
%Vz=bitcast i8*%Vv to i8**
store i8*%Vy,i8**%Vz,align 8
%VA=getelementptr inbounds i8,i8*%Vv,i64 8
%VB=bitcast i8*%VA to i8**
store i8*null,i8**%VB,align 8
%VC=load i8*,i8**%w,align 8
%VD=getelementptr inbounds i8,i8*%Vv,i64 16
%VE=bitcast i8*%VD to i8**
store i8*%VC,i8**%VE,align 8
%VF=getelementptr inbounds i8,i8*%Vv,i64 24
%VG=bitcast i8*%VF to i32*
store i32 7,i32*%VG,align 4
ret i8*%Vv
VH:
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%VI=getelementptr inbounds i8,i8*%ab,i64 8
%VJ=bitcast i8*%VI to i8**
%VK=load i8*,i8**%VJ,align 8
store i8*%VK,i8**%x,align 8
%VL=getelementptr inbounds i8,i8*%VK,i64 8
%VM=bitcast i8*%VL to i8**
%VN=load i8*,i8**%VM,align 8
store i8*%VN,i8**%y,align 8
%VO=bitcast i8*%VK to i8**
%VP=load i8*,i8**%VO,align 8
%VQ=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%VQ)
%VR=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%VR)
%VS=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%VS)
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
store i8*%VP,i8**%n,align 8
%VT=load atomic i32,i32*@sml_check_flag unordered,align 4
%VU=icmp eq i32%VT,0
br i1%VU,label%VX,label%VV
VV:
call void@sml_check(i32 inreg%VT)
%VW=load i8*,i8**%n,align 8
br label%VX
VX:
%VY=phi i8*[%VW,%VV],[%VP,%VH]
%VZ=bitcast i8*%VY to i32*
%V0=load i32,i32*%VZ,align 4
switch i32%V0,label%V1[
i32 1,label%Yp
i32 0,label%Xf
i32 2,label%WM
i32 3,label%Wj
]
V1:
call void@sml_matchcomp_bug()
%V2=load i8*,i8**@_SMLZ5Match,align 8
store i8*%V2,i8**%n,align 8
%V3=call i8*@sml_alloc(i32 inreg 20)#0
%V4=getelementptr inbounds i8,i8*%V3,i64 -4
%V5=bitcast i8*%V4 to i32*
store i32 1342177296,i32*%V5,align 4
store i8*%V3,i8**%o,align 8
%V6=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%V7=bitcast i8*%V3 to i8**
store i8*%V6,i8**%V7,align 8
%V8=getelementptr inbounds i8,i8*%V3,i64 8
%V9=bitcast i8*%V8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@at,i64 0,i32 2,i64 0),i8**%V9,align 8
%Wa=getelementptr inbounds i8,i8*%V3,i64 16
%Wb=bitcast i8*%Wa to i32*
store i32 3,i32*%Wb,align 4
%Wc=call i8*@sml_alloc(i32 inreg 60)#0
%Wd=getelementptr inbounds i8,i8*%Wc,i64 -4
%We=bitcast i8*%Wd to i32*
store i32 1342177336,i32*%We,align 4
%Wf=getelementptr inbounds i8,i8*%Wc,i64 56
%Wg=bitcast i8*%Wf to i32*
store i32 1,i32*%Wg,align 4
%Wh=load i8*,i8**%o,align 8
%Wi=bitcast i8*%Wc to i8**
store i8*%Wh,i8**%Wi,align 8
call void@sml_raise(i8*inreg%Wc)#1
unreachable
Wj:
%Wk=getelementptr inbounds i8,i8*%VY,i64 8
%Wl=bitcast i8*%Wk to i8**
%Wm=load i8*,i8**%Wl,align 8
%Wn=getelementptr inbounds i8,i8*%Wm,i64 8
%Wo=bitcast i8*%Wn to i8**
%Wp=load i8*,i8**%Wo,align 8
store i8*%Wp,i8**%n,align 8
%Wq=call i8*@sml_alloc(i32 inreg 20)#0
%Wr=getelementptr inbounds i8,i8*%Wq,i64 -4
%Ws=bitcast i8*%Wr to i32*
store i32 1342177296,i32*%Ws,align 4
store i8*%Wq,i8**%o,align 8
%Wt=getelementptr inbounds i8,i8*%Wq,i64 4
%Wu=bitcast i8*%Wt to i32*
store i32 0,i32*%Wu,align 1
%Wv=bitcast i8*%Wq to i32*
store i32 4,i32*%Wv,align 4
%Ww=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%Wx=getelementptr inbounds i8,i8*%Wq,i64 8
%Wy=bitcast i8*%Wx to i8**
store i8*%Ww,i8**%Wy,align 8
%Wz=getelementptr inbounds i8,i8*%Wq,i64 16
%WA=bitcast i8*%Wz to i32*
store i32 2,i32*%WA,align 4
%WB=call i8*@sml_alloc(i32 inreg 20)#0
%WC=bitcast i8*%WB to i32*
%WD=getelementptr inbounds i8,i8*%WB,i64 -4
%WE=bitcast i8*%WD to i32*
store i32 1342177296,i32*%WE,align 4
%WF=getelementptr inbounds i8,i8*%WB,i64 4
%WG=bitcast i8*%WF to i32*
store i32 0,i32*%WG,align 1
store i32 9,i32*%WC,align 4
%WH=load i8*,i8**%o,align 8
%WI=getelementptr inbounds i8,i8*%WB,i64 8
%WJ=bitcast i8*%WI to i8**
store i8*%WH,i8**%WJ,align 8
%WK=getelementptr inbounds i8,i8*%WB,i64 16
%WL=bitcast i8*%WK to i32*
store i32 2,i32*%WL,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
WM:
%WN=getelementptr inbounds i8,i8*%VY,i64 8
%WO=bitcast i8*%WN to i8**
%WP=load i8*,i8**%WO,align 8
%WQ=getelementptr inbounds i8,i8*%WP,i64 8
%WR=bitcast i8*%WQ to i8**
%WS=load i8*,i8**%WR,align 8
store i8*%WS,i8**%n,align 8
%WT=call i8*@sml_alloc(i32 inreg 20)#0
%WU=getelementptr inbounds i8,i8*%WT,i64 -4
%WV=bitcast i8*%WU to i32*
store i32 1342177296,i32*%WV,align 4
store i8*%WT,i8**%o,align 8
%WW=getelementptr inbounds i8,i8*%WT,i64 4
%WX=bitcast i8*%WW to i32*
store i32 0,i32*%WX,align 1
%WY=bitcast i8*%WT to i32*
store i32 3,i32*%WY,align 4
%WZ=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%W0=getelementptr inbounds i8,i8*%WT,i64 8
%W1=bitcast i8*%W0 to i8**
store i8*%WZ,i8**%W1,align 8
%W2=getelementptr inbounds i8,i8*%WT,i64 16
%W3=bitcast i8*%W2 to i32*
store i32 2,i32*%W3,align 4
%W4=call i8*@sml_alloc(i32 inreg 20)#0
%W5=bitcast i8*%W4 to i32*
%W6=getelementptr inbounds i8,i8*%W4,i64 -4
%W7=bitcast i8*%W6 to i32*
store i32 1342177296,i32*%W7,align 4
%W8=getelementptr inbounds i8,i8*%W4,i64 4
%W9=bitcast i8*%W8 to i32*
store i32 0,i32*%W9,align 1
store i32 9,i32*%W5,align 4
%Xa=load i8*,i8**%o,align 8
%Xb=getelementptr inbounds i8,i8*%W4,i64 8
%Xc=bitcast i8*%Xb to i8**
store i8*%Xa,i8**%Xc,align 8
%Xd=getelementptr inbounds i8,i8*%W4,i64 16
%Xe=bitcast i8*%Xd to i32*
store i32 2,i32*%Xe,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Xf:
%Xg=getelementptr inbounds i8,i8*%VY,i64 8
%Xh=bitcast i8*%Xg to i8**
%Xi=load i8*,i8**%Xh,align 8
%Xj=bitcast i8*%Xi to i32*
%Xk=load i32,i32*%Xj,align 4
switch i32%Xk,label%Xl[
i32 4,label%Yn
i32 3,label%Yl
i32 5,label%Yj
i32 2,label%XM
i32 1,label%XK
i32 0,label%XD
]
Xl:
call void@sml_matchcomp_bug()
%Xm=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Xm,i8**%n,align 8
%Xn=call i8*@sml_alloc(i32 inreg 20)#0
%Xo=getelementptr inbounds i8,i8*%Xn,i64 -4
%Xp=bitcast i8*%Xo to i32*
store i32 1342177296,i32*%Xp,align 4
store i8*%Xn,i8**%o,align 8
%Xq=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%Xr=bitcast i8*%Xn to i8**
store i8*%Xq,i8**%Xr,align 8
%Xs=getelementptr inbounds i8,i8*%Xn,i64 8
%Xt=bitcast i8*%Xs to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@at,i64 0,i32 2,i64 0),i8**%Xt,align 8
%Xu=getelementptr inbounds i8,i8*%Xn,i64 16
%Xv=bitcast i8*%Xu to i32*
store i32 3,i32*%Xv,align 4
%Xw=call i8*@sml_alloc(i32 inreg 60)#0
%Xx=getelementptr inbounds i8,i8*%Xw,i64 -4
%Xy=bitcast i8*%Xx to i32*
store i32 1342177336,i32*%Xy,align 4
%Xz=getelementptr inbounds i8,i8*%Xw,i64 56
%XA=bitcast i8*%Xz to i32*
store i32 1,i32*%XA,align 4
%XB=load i8*,i8**%o,align 8
%XC=bitcast i8*%Xw to i8**
store i8*%XB,i8**%XC,align 8
call void@sml_raise(i8*inreg%Xw)#1
unreachable
XD:
%XE=getelementptr inbounds i8,i8*%Xi,i64 8
%XF=bitcast i8*%XE to i8**
%XG=load i8*,i8**%XF,align 8
%XH=getelementptr inbounds i8,i8*%XG,i64 8
%XI=bitcast i8*%XH to i8**
%XJ=load i8*,i8**%XI,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
XK:
%XL=load i8*,i8**@_SMLZN12BuiltinTypes7boxedTyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
XM:
%XN=load i8*,i8**@_SMLZN12BuiltinTypes6unitTyE,align 8
store i8*%XN,i8**%n,align 8
%XO=call i8*@sml_alloc(i32 inreg 20)#0
%XP=getelementptr inbounds i8,i8*%XO,i64 -4
%XQ=bitcast i8*%XP to i32*
store i32 1342177296,i32*%XQ,align 4
store i8*%XO,i8**%p,align 8
%XR=load i8*,i8**%n,align 8
%XS=bitcast i8*%XO to i8**
store i8*%XR,i8**%XS,align 8
%XT=getelementptr inbounds i8,i8*%XO,i64 8
%XU=bitcast i8*%XT to i8**
store i8*null,i8**%XU,align 8
%XV=getelementptr inbounds i8,i8*%XO,i64 16
%XW=bitcast i8*%XV to i32*
store i32 3,i32*%XW,align 4
%XX=load i8*,i8**@_SMLZN12BuiltinTypes8ptrTyConE,align 8
store i8*%XX,i8**%n,align 8
%XY=call i8*@sml_alloc(i32 inreg 20)#0
%XZ=getelementptr inbounds i8,i8*%XY,i64 -4
%X0=bitcast i8*%XZ to i32*
store i32 1342177296,i32*%X0,align 4
store i8*%XY,i8**%o,align 8
%X1=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%X2=bitcast i8*%XY to i8**
store i8*%X1,i8**%X2,align 8
%X3=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%X4=getelementptr inbounds i8,i8*%XY,i64 8
%X5=bitcast i8*%X4 to i8**
store i8*%X3,i8**%X5,align 8
%X6=getelementptr inbounds i8,i8*%XY,i64 16
%X7=bitcast i8*%X6 to i32*
store i32 3,i32*%X7,align 4
%X8=call i8*@sml_alloc(i32 inreg 20)#0
%X9=bitcast i8*%X8 to i32*
%Ya=getelementptr inbounds i8,i8*%X8,i64 -4
%Yb=bitcast i8*%Ya to i32*
store i32 1342177296,i32*%Yb,align 4
%Yc=getelementptr inbounds i8,i8*%X8,i64 4
%Yd=bitcast i8*%Yc to i32*
store i32 0,i32*%Yd,align 1
store i32 2,i32*%X9,align 4
%Ye=load i8*,i8**%o,align 8
%Yf=getelementptr inbounds i8,i8*%X8,i64 8
%Yg=bitcast i8*%Yf to i8**
store i8*%Ye,i8**%Yg,align 8
%Yh=getelementptr inbounds i8,i8*%X8,i64 16
%Yi=bitcast i8*%Yh to i32*
store i32 2,i32*%Yi,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Yj:
%Yk=load i8*,i8**@_SMLZN12BuiltinTypes6unitTyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Yl:
%Ym=load i8*,i8**@_SMLZN12BuiltinTypes8real32TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Yn:
%Yo=load i8*,i8**@_SMLZN12BuiltinTypes8real64TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Yp:
%Yq=getelementptr inbounds i8,i8*%VY,i64 8
%Yr=bitcast i8*%Yq to i32**
%Ys=load i32*,i32**%Yr,align 8
%Yt=load i32,i32*%Ys,align 4
switch i32%Yt,label%Yu[
i32 5,label%Y4
i32 2,label%Y2
i32 3,label%Y0
i32 4,label%YY
i32 9,label%YW
i32 6,label%YU
i32 7,label%YS
i32 8,label%YQ
i32 1,label%YO
i32 0,label%YM
]
Yu:
call void@sml_matchcomp_bug()
%Yv=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Yv,i8**%n,align 8
%Yw=call i8*@sml_alloc(i32 inreg 20)#0
%Yx=getelementptr inbounds i8,i8*%Yw,i64 -4
%Yy=bitcast i8*%Yx to i32*
store i32 1342177296,i32*%Yy,align 4
store i8*%Yw,i8**%o,align 8
%Yz=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%YA=bitcast i8*%Yw to i8**
store i8*%Yz,i8**%YA,align 8
%YB=getelementptr inbounds i8,i8*%Yw,i64 8
%YC=bitcast i8*%YB to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@at,i64 0,i32 2,i64 0),i8**%YC,align 8
%YD=getelementptr inbounds i8,i8*%Yw,i64 16
%YE=bitcast i8*%YD to i32*
store i32 3,i32*%YE,align 4
%YF=call i8*@sml_alloc(i32 inreg 60)#0
%YG=getelementptr inbounds i8,i8*%YF,i64 -4
%YH=bitcast i8*%YG to i32*
store i32 1342177336,i32*%YH,align 4
%YI=getelementptr inbounds i8,i8*%YF,i64 56
%YJ=bitcast i8*%YI to i32*
store i32 1,i32*%YJ,align 4
%YK=load i8*,i8**%o,align 8
%YL=bitcast i8*%YF to i8**
store i8*%YK,i8**%YL,align 8
call void@sml_raise(i8*inreg%YF)#1
unreachable
YM:
%YN=load i8*,i8**@_SMLZN12BuiltinTypes6charTyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YO:
%YP=load i8*,i8**@_SMLZN12BuiltinTypes8contagTyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YQ:
%YR=load i8*,i8**@_SMLZN12BuiltinTypes8word64TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YS:
%YT=load i8*,i8**@_SMLZN12BuiltinTypes8word32TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YU:
%YV=load i8*,i8**@_SMLZN12BuiltinTypes8word16TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YW:
%YX=load i8*,i8**@_SMLZN12BuiltinTypes7word8TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
YY:
%YZ=load i8*,i8**@_SMLZN12BuiltinTypes7int64TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Y0:
%Y1=load i8*,i8**@_SMLZN12BuiltinTypes7int32TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Y2:
%Y3=load i8*,i8**@_SMLZN12BuiltinTypes7int16TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Y4:
%Y5=load i8*,i8**@_SMLZN12BuiltinTypes6int8TyE,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%VS)
br label%Y6
Y6:
%Y7=phi i8*[%WB,%Wj],[%W4,%WM],[%XJ,%XD],[%XL,%XK],[%X8,%XM],[%Yk,%Yj],[%Ym,%Yl],[%Yo,%Yn],[%YN,%YM],[%YP,%YO],[%YR,%YQ],[%YT,%YS],[%YV,%YU],[%YX,%YW],[%YZ,%YY],[%Y1,%Y0],[%Y3,%Y2],[%Y5,%Y4]
store i8*%Y7,i8**%w,align 8
%Y8=bitcast i8**%x to i8***
%Y9=load i8**,i8***%Y8,align 8
store i8*null,i8**%x,align 8
%Za=load i8*,i8**%Y9,align 8
%Zb=bitcast i8**%t to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Zb)
%Zc=bitcast i8**%u to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Zc)
%Zd=bitcast i8**%v to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Zd)
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
store i8*%Za,i8**%t,align 8
%Ze=load atomic i32,i32*@sml_check_flag unordered,align 4
%Zf=icmp eq i32%Ze,0
br i1%Zf,label%Zi,label%Zg
Zg:
call void@sml_check(i32 inreg%Ze)
%Zh=load i8*,i8**%t,align 8
br label%Zi
Zi:
%Zj=phi i8*[%Zh,%Zg],[%Za,%Y6]
%Zk=bitcast i8*%Zj to i32*
%Zl=load i32,i32*%Zk,align 4
switch i32%Zl,label%Zm[
i32 1,label%aca
i32 0,label%aaD
i32 2,label%Z9
i32 3,label%ZE
]
Zm:
call void@sml_matchcomp_bug()
%Zn=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Zn,i8**%t,align 8
%Zo=call i8*@sml_alloc(i32 inreg 20)#0
%Zp=getelementptr inbounds i8,i8*%Zo,i64 -4
%Zq=bitcast i8*%Zp to i32*
store i32 1342177296,i32*%Zq,align 4
store i8*%Zo,i8**%u,align 8
%Zr=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%Zs=bitcast i8*%Zo to i8**
store i8*%Zr,i8**%Zs,align 8
%Zt=getelementptr inbounds i8,i8*%Zo,i64 8
%Zu=bitcast i8*%Zt to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@ay,i64 0,i32 2,i64 0),i8**%Zu,align 8
%Zv=getelementptr inbounds i8,i8*%Zo,i64 16
%Zw=bitcast i8*%Zv to i32*
store i32 3,i32*%Zw,align 4
%Zx=call i8*@sml_alloc(i32 inreg 60)#0
%Zy=getelementptr inbounds i8,i8*%Zx,i64 -4
%Zz=bitcast i8*%Zy to i32*
store i32 1342177336,i32*%Zz,align 4
%ZA=getelementptr inbounds i8,i8*%Zx,i64 56
%ZB=bitcast i8*%ZA to i32*
store i32 1,i32*%ZB,align 4
%ZC=load i8*,i8**%u,align 8
%ZD=bitcast i8*%Zx to i8**
store i8*%ZC,i8**%ZD,align 8
call void@sml_raise(i8*inreg%Zx)#1
unreachable
ZE:
%ZF=getelementptr inbounds i8,i8*%Zj,i64 8
%ZG=bitcast i8*%ZF to i8**
%ZH=load i8*,i8**%ZG,align 8
%ZI=bitcast i8*%ZH to i32*
%ZJ=load i32,i32*%ZI,align 4
%ZK=getelementptr inbounds i8,i8*%ZH,i64 8
%ZL=bitcast i8*%ZK to i8**
%ZM=load i8*,i8**%ZL,align 8
store i8*%ZM,i8**%t,align 8
%ZN=call i8*@sml_alloc(i32 inreg 20)#0
%ZO=getelementptr inbounds i8,i8*%ZN,i64 -4
%ZP=bitcast i8*%ZO to i32*
store i32 1342177296,i32*%ZP,align 4
store i8*%ZN,i8**%u,align 8
%ZQ=getelementptr inbounds i8,i8*%ZN,i64 4
%ZR=bitcast i8*%ZQ to i32*
store i32 0,i32*%ZR,align 1
%ZS=bitcast i8*%ZN to i32*
store i32%ZJ,i32*%ZS,align 4
%ZT=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%ZU=getelementptr inbounds i8,i8*%ZN,i64 8
%ZV=bitcast i8*%ZU to i8**
store i8*%ZT,i8**%ZV,align 8
%ZW=getelementptr inbounds i8,i8*%ZN,i64 16
%ZX=bitcast i8*%ZW to i32*
store i32 2,i32*%ZX,align 4
%ZY=call i8*@sml_alloc(i32 inreg 20)#0
%ZZ=bitcast i8*%ZY to i32*
%Z0=getelementptr inbounds i8,i8*%ZY,i64 -4
%Z1=bitcast i8*%Z0 to i32*
store i32 1342177296,i32*%Z1,align 4
%Z2=getelementptr inbounds i8,i8*%ZY,i64 4
%Z3=bitcast i8*%Z2 to i32*
store i32 0,i32*%Z3,align 1
store i32 19,i32*%ZZ,align 4
%Z4=load i8*,i8**%u,align 8
%Z5=getelementptr inbounds i8,i8*%ZY,i64 8
%Z6=bitcast i8*%Z5 to i8**
store i8*%Z4,i8**%Z6,align 8
%Z7=getelementptr inbounds i8,i8*%ZY,i64 16
%Z8=bitcast i8*%Z7 to i32*
store i32 2,i32*%Z8,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zd)
br label%acf
Z9:
%aaa=getelementptr inbounds i8,i8*%Zj,i64 8
%aab=bitcast i8*%aaa to i8**
%aac=load i8*,i8**%aab,align 8
%aad=bitcast i8*%aac to i8**
%aae=load i8*,i8**%aad,align 8
store i8*%aae,i8**%t,align 8
%aaf=getelementptr inbounds i8,i8*%aac,i64 8
%aag=bitcast i8*%aaf to i8**
%aah=load i8*,i8**%aag,align 8
store i8*%aah,i8**%u,align 8
%aai=call i8*@sml_alloc(i32 inreg 20)#0
%aaj=getelementptr inbounds i8,i8*%aai,i64 -4
%aak=bitcast i8*%aaj to i32*
store i32 1342177296,i32*%aak,align 4
store i8*%aai,i8**%v,align 8
%aal=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%aam=bitcast i8*%aai to i8**
store i8*%aal,i8**%aam,align 8
%aan=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%aao=getelementptr inbounds i8,i8*%aai,i64 8
%aap=bitcast i8*%aao to i8**
store i8*%aan,i8**%aap,align 8
%aaq=getelementptr inbounds i8,i8*%aai,i64 16
%aar=bitcast i8*%aaq to i32*
store i32 3,i32*%aar,align 4
%aas=call i8*@sml_alloc(i32 inreg 20)#0
%aat=bitcast i8*%aas to i32*
%aau=getelementptr inbounds i8,i8*%aas,i64 -4
%aav=bitcast i8*%aau to i32*
store i32 1342177296,i32*%aav,align 4
%aaw=getelementptr inbounds i8,i8*%aas,i64 4
%aax=bitcast i8*%aaw to i32*
store i32 0,i32*%aax,align 1
store i32 18,i32*%aat,align 4
%aay=load i8*,i8**%v,align 8
%aaz=getelementptr inbounds i8,i8*%aas,i64 8
%aaA=bitcast i8*%aaz to i8**
store i8*%aay,i8**%aaA,align 8
%aaB=getelementptr inbounds i8,i8*%aas,i64 16
%aaC=bitcast i8*%aaB to i32*
store i32 2,i32*%aaC,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zd)
br label%acf
aaD:
%aaE=getelementptr inbounds i8,i8*%Zj,i64 8
%aaF=bitcast i8*%aaE to i8**
%aaG=load i8*,i8**%aaF,align 8
%aaH=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aaH)
%aaI=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aaI)
%aaJ=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aaJ)
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%aaG,i8**%q,align 8
%aaK=load atomic i32,i32*@sml_check_flag unordered,align 4
%aaL=icmp eq i32%aaK,0
br i1%aaL,label%aaO,label%aaM
aaM:
call void@sml_check(i32 inreg%aaK)
%aaN=load i8*,i8**%q,align 8
br label%aaO
aaO:
%aaP=phi i8*[%aaN,%aaM],[%aaG,%aaD]
%aaQ=bitcast i8*%aaP to i32*
%aaR=load i32,i32*%aaQ,align 4
switch i32%aaR,label%aaS[
i32 4,label%abU
i32 3,label%abI
i32 5,label%abH
i32 2,label%abG
i32 1,label%abE
i32 0,label%aba
]
aaS:
call void@sml_matchcomp_bug()
%aaT=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aaT,i8**%q,align 8
%aaU=call i8*@sml_alloc(i32 inreg 20)#0
%aaV=getelementptr inbounds i8,i8*%aaU,i64 -4
%aaW=bitcast i8*%aaV to i32*
store i32 1342177296,i32*%aaW,align 4
store i8*%aaU,i8**%r,align 8
%aaX=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%aaY=bitcast i8*%aaU to i8**
store i8*%aaX,i8**%aaY,align 8
%aaZ=getelementptr inbounds i8,i8*%aaU,i64 8
%aa0=bitcast i8*%aaZ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@ax,i64 0,i32 2,i64 0),i8**%aa0,align 8
%aa1=getelementptr inbounds i8,i8*%aaU,i64 16
%aa2=bitcast i8*%aa1 to i32*
store i32 3,i32*%aa2,align 4
%aa3=call i8*@sml_alloc(i32 inreg 60)#0
%aa4=getelementptr inbounds i8,i8*%aa3,i64 -4
%aa5=bitcast i8*%aa4 to i32*
store i32 1342177336,i32*%aa5,align 4
%aa6=getelementptr inbounds i8,i8*%aa3,i64 56
%aa7=bitcast i8*%aa6 to i32*
store i32 1,i32*%aa7,align 4
%aa8=load i8*,i8**%r,align 8
%aa9=bitcast i8*%aa3 to i8**
store i8*%aa8,i8**%aa9,align 8
call void@sml_raise(i8*inreg%aa3)#1
unreachable
aba:
%abb=getelementptr inbounds i8,i8*%aaP,i64 8
%abc=bitcast i8*%abb to i8**
%abd=load i8*,i8**%abc,align 8
%abe=bitcast i8*%abd to i8**
%abf=load i8*,i8**%abe,align 8
store i8*%abf,i8**%q,align 8
%abg=getelementptr inbounds i8,i8*%abd,i64 8
%abh=bitcast i8*%abg to i8**
%abi=load i8*,i8**%abh,align 8
store i8*%abi,i8**%r,align 8
%abj=call i8*@sml_alloc(i32 inreg 20)#0
%abk=getelementptr inbounds i8,i8*%abj,i64 -4
%abl=bitcast i8*%abk to i32*
store i32 1342177296,i32*%abl,align 4
store i8*%abj,i8**%s,align 8
%abm=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%abn=bitcast i8*%abj to i8**
store i8*%abm,i8**%abn,align 8
%abo=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%abp=getelementptr inbounds i8,i8*%abj,i64 8
%abq=bitcast i8*%abp to i8**
store i8*%abo,i8**%abq,align 8
%abr=getelementptr inbounds i8,i8*%abj,i64 16
%abs=bitcast i8*%abr to i32*
store i32 3,i32*%abs,align 4
%abt=call i8*@sml_alloc(i32 inreg 20)#0
%abu=bitcast i8*%abt to i32*
%abv=getelementptr inbounds i8,i8*%abt,i64 -4
%abw=bitcast i8*%abv to i32*
store i32 1342177296,i32*%abw,align 4
%abx=getelementptr inbounds i8,i8*%abt,i64 4
%aby=bitcast i8*%abx to i32*
store i32 0,i32*%aby,align 1
store i32 7,i32*%abu,align 4
%abz=load i8*,i8**%s,align 8
%abA=getelementptr inbounds i8,i8*%abt,i64 8
%abB=bitcast i8*%abA to i8**
store i8*%abz,i8**%abB,align 8
%abC=getelementptr inbounds i8,i8*%abt,i64 16
%abD=bitcast i8*%abC to i32*
store i32 2,i32*%abD,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaJ)
br label%ab8
abE:
%abF=phi i8*[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@aw,i64 0,i32 2)to i8*),%aaO],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@av,i64 0,i32 2)to i8*),%abG],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a9,i64 0,i32 2)to i8*),%abH]
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaJ)
br label%ab8
abG:
br label%abE
abH:
br label%abE
abI:
%abJ=getelementptr inbounds i8,i8*%aaP,i64 4
%abK=bitcast i8*%abJ to float*
%abL=load float,float*%abK,align 4
%abM=call i8*@sml_alloc(i32 inreg 12)#0
%abN=bitcast i8*%abM to i32*
%abO=getelementptr inbounds i8,i8*%abM,i64 -4
%abP=bitcast i8*%abO to i32*
store i32 1342177288,i32*%abP,align 4
store i32 16,i32*%abN,align 4
%abQ=getelementptr inbounds i8,i8*%abM,i64 4
%abR=bitcast i8*%abQ to float*
store float%abL,float*%abR,align 4
%abS=getelementptr inbounds i8,i8*%abM,i64 8
%abT=bitcast i8*%abS to i32*
store i32 0,i32*%abT,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaJ)
br label%ab8
abU:
%abV=getelementptr inbounds i8,i8*%aaP,i64 8
%abW=bitcast i8*%abV to double*
%abX=load double,double*%abW,align 8
%abY=call i8*@sml_alloc(i32 inreg 20)#0
%abZ=bitcast i8*%abY to i32*
%ab0=getelementptr inbounds i8,i8*%abY,i64 -4
%ab1=bitcast i8*%ab0 to i32*
store i32 1342177296,i32*%ab1,align 4
%ab2=getelementptr inbounds i8,i8*%abY,i64 4
%ab3=bitcast i8*%ab2 to i32*
store i32 0,i32*%ab3,align 1
store i32 17,i32*%abZ,align 4
%ab4=getelementptr inbounds i8,i8*%abY,i64 8
%ab5=bitcast i8*%ab4 to double*
store double%abX,double*%ab5,align 8
%ab6=getelementptr inbounds i8,i8*%abY,i64 16
%ab7=bitcast i8*%ab6 to i32*
store i32 0,i32*%ab7,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aaJ)
br label%ab8
ab8:
%ab9=phi i8*[%abt,%aba],[%abF,%abE],[%abM,%abI],[%abY,%abU]
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zd)
br label%acf
aca:
%acb=getelementptr inbounds i8,i8*%Zj,i64 8
%acc=bitcast i8*%acb to i8**
%acd=load i8*,i8**%acc,align 8
%ace=call fastcc i8*@_SMLLN18ClosureConversion212compileTlintE_735(i8*inreg%acd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Zd)
br label%acf
acf:
%acg=phi i8*[%ZY,%ZE],[%aas,%Z9],[%ab9,%ab8],[%ace,%aca]
store i8*%acg,i8**%x,align 8
%ach=call i8*@sml_alloc(i32 inreg 28)#0
%aci=getelementptr inbounds i8,i8*%ach,i64 -4
%acj=bitcast i8*%aci to i32*
store i32 1342177304,i32*%acj,align 4
store i8*%ach,i8**%z,align 8
%ack=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%acl=bitcast i8*%ach to i8**
store i8*%ack,i8**%acl,align 8
%acm=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%acn=getelementptr inbounds i8,i8*%ach,i64 8
%aco=bitcast i8*%acn to i8**
store i8*%acm,i8**%aco,align 8
%acp=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%acq=getelementptr inbounds i8,i8*%ach,i64 16
%acr=bitcast i8*%acq to i8**
store i8*%acp,i8**%acr,align 8
%acs=getelementptr inbounds i8,i8*%ach,i64 24
%act=bitcast i8*%acs to i32*
store i32 7,i32*%act,align 4
%acu=call i8*@sml_alloc(i32 inreg 20)#0
%acv=getelementptr inbounds i8,i8*%acu,i64 -4
%acw=bitcast i8*%acv to i32*
store i32 1342177296,i32*%acw,align 4
store i8*%acu,i8**%w,align 8
%acx=getelementptr inbounds i8,i8*%acu,i64 4
%acy=bitcast i8*%acx to i32*
store i32 0,i32*%acy,align 1
%acz=bitcast i8*%acu to i32*
store i32 3,i32*%acz,align 4
%acA=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%acB=getelementptr inbounds i8,i8*%acu,i64 8
%acC=bitcast i8*%acB to i8**
store i8*%acA,i8**%acC,align 8
%acD=getelementptr inbounds i8,i8*%acu,i64 16
%acE=bitcast i8*%acD to i32*
store i32 2,i32*%acE,align 4
%acF=call i8*@sml_alloc(i32 inreg 28)#0
%acG=getelementptr inbounds i8,i8*%acF,i64 -4
%acH=bitcast i8*%acG to i32*
store i32 1342177304,i32*%acH,align 4
call void@llvm.memset.p0i8.i64(i8*%acF,i8 0,i64 16,i1 false)
%acI=load i8*,i8**%w,align 8
%acJ=getelementptr inbounds i8,i8*%acF,i64 16
%acK=bitcast i8*%acJ to i8**
store i8*%acI,i8**%acK,align 8
%acL=getelementptr inbounds i8,i8*%acF,i64 24
%acM=bitcast i8*%acL to i32*
store i32 7,i32*%acM,align 4
store i8*null,i8**%w,align 8
store i8*null,i8**%x,align 8
store i8*%acI,i8**%y,align 8
%acN=call i8*@sml_alloc(i32 inreg 28)#0
%acO=getelementptr inbounds i8,i8*%acN,i64 -4
%acP=bitcast i8*%acO to i32*
store i32 1342177304,i32*%acP,align 4
%acQ=load i8*,i8**%w,align 8
%acR=bitcast i8*%acN to i8**
store i8*%acQ,i8**%acR,align 8
%acS=load i8*,i8**%x,align 8
%acT=getelementptr inbounds i8,i8*%acN,i64 8
%acU=bitcast i8*%acT to i8**
store i8*%acS,i8**%acU,align 8
%acV=load i8*,i8**%y,align 8
%acW=getelementptr inbounds i8,i8*%acN,i64 16
%acX=bitcast i8*%acW to i8**
store i8*%acV,i8**%acX,align 8
%acY=getelementptr inbounds i8,i8*%acN,i64 24
%acZ=bitcast i8*%acY to i32*
store i32 7,i32*%acZ,align 4
ret i8*%acN
ac0:
%ac1=getelementptr inbounds i8,i8*%ab,i64 8
%ac2=bitcast i8*%ac1 to i8**
%ac3=load i8*,i8**%ac2,align 8
store i8*%ac3,i8**%x,align 8
%ac4=bitcast i8*%ac3 to i8**
%ac5=load i8*,i8**%ac4,align 8
store i8*%ac5,i8**%D,align 8
%ac6=getelementptr inbounds i8,i8*%ac3,i64 8
%ac7=bitcast i8*%ac6 to i8**
%ac8=load i8*,i8**%ac7,align 8
store i8*%ac8,i8**%G,align 8
%ac9=getelementptr inbounds i8,i8*%ac3,i64 24
%ada=bitcast i8*%ac9 to i8**
%adb=load i8*,i8**%ada,align 8
store i8*%adb,i8**%H,align 8
%adc=getelementptr inbounds i8,i8*%ac3,i64 32
%add=bitcast i8*%adc to i8**
%ade=load i8*,i8**%add,align 8
store i8*%ade,i8**%I,align 8
%adf=call i8*@sml_alloc(i32 inreg 20)#0
%adg=getelementptr inbounds i8,i8*%adf,i64 -4
%adh=bitcast i8*%adg to i32*
store i32 1342177296,i32*%adh,align 4
%adi=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%adj=bitcast i8*%adf to i8**
store i8*%adi,i8**%adj,align 8
%adk=load i8*,i8**%D,align 8
%adl=getelementptr inbounds i8,i8*%adf,i64 8
%adm=bitcast i8*%adl to i8**
store i8*%adk,i8**%adm,align 8
%adn=getelementptr inbounds i8,i8*%adf,i64 16
%ado=bitcast i8*%adn to i32*
store i32 3,i32*%ado,align 4
%adp=call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%adf)
store i8*%adp,i8**%w,align 8
%adq=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%adr=getelementptr inbounds i8,i8*%adq,i64 16
%ads=bitcast i8*%adr to i8**
%adt=load i8*,i8**%ads,align 8
%adu=load i8*,i8**%H,align 8
%adv=load i8*,i8**%L,align 8
store i8*null,i8**%L,align 8
%adw=call fastcc i8*@_SMLLN18ClosureConversion215compileFuncBodyE_767(i8*inreg%adv,i8*inreg%adp,i8*inreg%adt,i8*inreg%adu)
%adx=bitcast i8*%adw to i8**
%ady=load i8*,i8**%adx,align 8
store i8*%ady,i8**%x,align 8
%adz=getelementptr inbounds i8,i8*%adw,i64 8
%adA=bitcast i8*%adz to i8**
%adB=load i8*,i8**%adA,align 8
store i8*%adB,i8**%y,align 8
%adC=call i8*@sml_alloc(i32 inreg 20)#0
%adD=getelementptr inbounds i8,i8*%adC,i64 -4
%adE=bitcast i8*%adD to i32*
store i32 1342177296,i32*%adE,align 4
%adF=load i8*,i8**%D,align 8
%adG=bitcast i8*%adC to i8**
store i8*%adF,i8**%adG,align 8
%adH=load i8*,i8**%y,align 8
%adI=getelementptr inbounds i8,i8*%adC,i64 8
%adJ=bitcast i8*%adI to i8**
store i8*%adH,i8**%adJ,align 8
%adK=getelementptr inbounds i8,i8*%adC,i64 16
%adL=bitcast i8*%adK to i32*
store i32 3,i32*%adL,align 4
%adM=call fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_455(i8*inreg%adC)
store i8*%adM,i8**%z,align 8
%adN=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%adO=call fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_649(i8*inreg%adN)
%adP=getelementptr inbounds i8,i8*%adO,i64 16
%adQ=bitcast i8*%adP to i8*(i8*,i8*)**
%adR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%adQ,align 8
%adS=bitcast i8*%adO to i8**
%adT=load i8*,i8**%adS,align 8
%adU=load i8*,i8**%w,align 8
%adV=getelementptr inbounds i8,i8*%adU,i64 8
%adW=bitcast i8*%adV to i8**
%adX=load i8*,i8**%adW,align 8
%adY=call fastcc i8*%adR(i8*inreg%adT,i8*inreg%adX)
%adZ=getelementptr inbounds i8,i8*%adY,i64 16
%ad0=bitcast i8*%adZ to i8*(i8*,i8*)**
%ad1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad0,align 8
%ad2=bitcast i8*%adY to i8**
%ad3=load i8*,i8**%ad2,align 8
store i8*%ad3,i8**%A,align 8
%ad4=call i8*@sml_alloc(i32 inreg 20)#0
%ad5=getelementptr inbounds i8,i8*%ad4,i64 -4
%ad6=bitcast i8*%ad5 to i32*
store i32 1342177296,i32*%ad6,align 4
%ad7=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ad8=bitcast i8*%ad4 to i8**
store i8*%ad7,i8**%ad8,align 8
%ad9=load i8*,i8**%H,align 8
%aea=getelementptr inbounds i8,i8*%ad4,i64 8
%aeb=bitcast i8*%aea to i8**
store i8*%ad9,i8**%aeb,align 8
%aec=getelementptr inbounds i8,i8*%ad4,i64 16
%aed=bitcast i8*%aec to i32*
store i32 3,i32*%aed,align 4
%aee=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%aef=call fastcc i8*%ad1(i8*inreg%aee,i8*inreg%ad4)
store i8*%aef,i8**%B,align 8
%aeg=load i8*,i8**%w,align 8
%aeh=getelementptr inbounds i8,i8*%aeg,i64 8
%aei=bitcast i8*%aeh to i8**
%aej=load i8*,i8**%aei,align 8
%aek=call fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%aej)
store i8*%aek,i8**%z,align 8
%ael=load i8**,i8***%O,align 8
store i8*null,i8**%w,align 8
%aem=load i8*,i8**%ael,align 8
%aen=call fastcc i8*@_SMLFN18CallbackEntryLabel8generateE(i8*inreg%aem)
store i8*%aen,i8**%w,align 8
%aeo=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aep=getelementptr inbounds i8,i8*%aeo,i64 16
%aeq=bitcast i8*%aep to i8*(i8*,i8*)**
%aer=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aeq,align 8
%aes=bitcast i8*%aeo to i8**
%aet=load i8*,i8**%aes,align 8
%aeu=call fastcc i8*%aer(i8*inreg%aet,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aC,i64 0,i32 2)to i8*))
%aev=getelementptr inbounds i8,i8*%aeu,i64 16
%aew=bitcast i8*%aev to i8*(i8*,i8*)**
%aex=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aew,align 8
%aey=bitcast i8*%aeu to i8**
%aez=load i8*,i8**%aey,align 8
%aeA=bitcast i8**%B to i8***
%aeB=load i8**,i8***%aeA,align 8
%aeC=load i8*,i8**%aeB,align 8
%aeD=call fastcc i8*%aex(i8*inreg%aez,i8*inreg%aeC)
store i8*%aeD,i8**%A,align 8
%aeE=load i8*,i8**%B,align 8
%aeF=getelementptr inbounds i8,i8*%aeE,i64 8
%aeG=bitcast i8*%aeF to i8**
%aeH=load i8*,i8**%aeG,align 8
%aeI=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%aeJ=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%aeH,i8*inreg%aeI)
store i8*%aeJ,i8**%C,align 8
%aeK=call i8*@sml_alloc(i32 inreg 68)#0
%aeL=getelementptr inbounds i8,i8*%aeK,i64 -4
%aeM=bitcast i8*%aeL to i32*
store i32 1342177344,i32*%aeM,align 4
store i8*%aeK,i8**%y,align 8
%aeN=load i8*,i8**%D,align 8
%aeO=bitcast i8*%aeK to i8**
store i8*%aeN,i8**%aeO,align 8
%aeP=load i8*,i8**%G,align 8
%aeQ=getelementptr inbounds i8,i8*%aeK,i64 8
%aeR=bitcast i8*%aeQ to i8**
store i8*%aeP,i8**%aeR,align 8
%aeS=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%aeT=getelementptr inbounds i8,i8*%aeK,i64 16
%aeU=bitcast i8*%aeT to i8**
store i8*%aeS,i8**%aeU,align 8
%aeV=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%aeW=getelementptr inbounds i8,i8*%aeK,i64 24
%aeX=bitcast i8*%aeW to i8**
store i8*%aeV,i8**%aeX,align 8
%aeY=load i8*,i8**%w,align 8
%aeZ=getelementptr inbounds i8,i8*%aeK,i64 32
%ae0=bitcast i8*%aeZ to i8**
store i8*%aeY,i8**%ae0,align 8
%ae1=load i8*,i8**%H,align 8
%ae2=getelementptr inbounds i8,i8*%aeK,i64 40
%ae3=bitcast i8*%ae2 to i8**
store i8*%ae1,i8**%ae3,align 8
%ae4=load i8*,i8**%I,align 8
%ae5=getelementptr inbounds i8,i8*%aeK,i64 48
%ae6=bitcast i8*%ae5 to i8**
store i8*%ae4,i8**%ae6,align 8
%ae7=load i8*,i8**%z,align 8
%ae8=getelementptr inbounds i8,i8*%aeK,i64 56
%ae9=bitcast i8*%ae8 to i8**
store i8*%ae7,i8**%ae9,align 8
%afa=getelementptr inbounds i8,i8*%aeK,i64 64
%afb=bitcast i8*%afa to i32*
store i32 255,i32*%afb,align 4
%afc=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%afd=getelementptr inbounds i8,i8*%afc,i64 16
%afe=bitcast i8*%afd to i8*(i8*,i8*)**
%aff=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afe,align 8
%afg=bitcast i8*%afc to i8**
%afh=load i8*,i8**%afg,align 8
%afi=load i8**,i8***%aeA,align 8
%afj=load i8*,i8**%afi,align 8
%afk=call fastcc i8*%aff(i8*inreg%afh,i8*inreg%afj)
%afl=bitcast i8*%afk to i32*
%afm=load i32,i32*%afl,align 4
%afn=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%afo=getelementptr inbounds i8,i8*%afn,i64 16
%afp=bitcast i8*%afo to i8*(i8*,i8*)**
%afq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afp,align 8
%afr=bitcast i8*%afn to i8**
%afs=load i8*,i8**%afr,align 8
%aft=call fastcc i8*%afq(i8*inreg%afs,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aD,i64 0,i32 2)to i8*))
%afu=getelementptr inbounds i8,i8*%aft,i64 16
%afv=bitcast i8*%afu to i8*(i8*,i8*)**
%afw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%afv,align 8
%afx=bitcast i8*%aft to i8**
%afy=load i8*,i8**%afx,align 8
%afz=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%afA=call fastcc i8*%afw(i8*inreg%afy,i8*inreg%afz)
store i8*%afA,i8**%C,align 8
%afB=call i8*@sml_alloc(i32 inreg 44)#0
%afC=getelementptr inbounds i8,i8*%afB,i64 -4
%afD=bitcast i8*%afC to i32*
store i32 1342177320,i32*%afD,align 4
store i8*%afB,i8**%A,align 8
%afE=getelementptr inbounds i8,i8*%afB,i64 20
%afF=bitcast i8*%afE to i32*
store i32 0,i32*%afF,align 1
%afG=bitcast i8*%afB to i8**
%afH=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
store i8*%afH,i8**%afG,align 8
%afI=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%afJ=getelementptr inbounds i8,i8*%afB,i64 8
%afK=bitcast i8*%afJ to i8**
store i8*%afI,i8**%afK,align 8
%afL=getelementptr inbounds i8,i8*%afB,i64 16
%afM=bitcast i8*%afL to i32*
store i32%afm,i32*%afM,align 4
%afN=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%afO=getelementptr inbounds i8,i8*%afB,i64 24
%afP=bitcast i8*%afO to i8**
store i8*%afN,i8**%afP,align 8
%afQ=load i8*,i8**%z,align 8
%afR=getelementptr inbounds i8,i8*%afB,i64 32
%afS=bitcast i8*%afR to i8**
store i8*%afQ,i8**%afS,align 8
%afT=getelementptr inbounds i8,i8*%afB,i64 40
%afU=bitcast i8*%afT to i32*
store i32 27,i32*%afU,align 4
%afV=call i8*@sml_alloc(i32 inreg 20)#0
%afW=getelementptr inbounds i8,i8*%afV,i64 -4
%afX=bitcast i8*%afW to i32*
store i32 1342177296,i32*%afX,align 4
store i8*%afV,i8**%C,align 8
%afY=bitcast i8*%afV to i64*
store i64 0,i64*%afY,align 4
%afZ=load i8*,i8**%A,align 8
%af0=getelementptr inbounds i8,i8*%afV,i64 8
%af1=bitcast i8*%af0 to i8**
store i8*%afZ,i8**%af1,align 8
%af2=getelementptr inbounds i8,i8*%afV,i64 16
%af3=bitcast i8*%af2 to i32*
store i32 2,i32*%af3,align 4
%af4=call i8*@sml_alloc(i32 inreg 20)#0
%af5=getelementptr inbounds i8,i8*%af4,i64 -4
%af6=bitcast i8*%af5 to i32*
store i32 1342177296,i32*%af6,align 4
store i8*%af4,i8**%G,align 8
%af7=bitcast i8*%af4 to i64*
store i64 0,i64*%af7,align 4
%af8=load i8*,i8**%C,align 8
%af9=getelementptr inbounds i8,i8*%af4,i64 8
%aga=bitcast i8*%af9 to i8**
store i8*%af8,i8**%aga,align 8
%agb=getelementptr inbounds i8,i8*%af4,i64 16
%agc=bitcast i8*%agb to i32*
store i32 2,i32*%agc,align 4
%agd=bitcast i8**%A to i8***
%age=load i8**,i8***%agd,align 8
%agf=load i8*,i8**%age,align 8
store i8*%agf,i8**%C,align 8
%agg=getelementptr inbounds i8*,i8**%age,i64 1
%agh=load i8*,i8**%agg,align 8
store i8*%agh,i8**%D,align 8
%agi=getelementptr inbounds i8*,i8**%age,i64 3
%agj=load i8*,i8**%agi,align 8
store i8*%agj,i8**%E,align 8
%agk=call i8*@sml_alloc(i32 inreg 36)#0
%agl=getelementptr inbounds i8,i8*%agk,i64 -4
%agm=bitcast i8*%agl to i32*
store i32 1342177312,i32*%agm,align 4
store i8*%agk,i8**%F,align 8
%agn=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%ago=bitcast i8*%agk to i8**
store i8*%agn,i8**%ago,align 8
%agp=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%agq=getelementptr inbounds i8,i8*%agk,i64 8
%agr=bitcast i8*%agq to i8**
store i8*%agp,i8**%agr,align 8
%ags=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%agt=getelementptr inbounds i8,i8*%agk,i64 16
%agu=bitcast i8*%agt to i8**
store i8*%ags,i8**%agu,align 8
%agv=getelementptr inbounds i8,i8*%agk,i64 24
%agw=bitcast i8*%agv to i8**
store i8*null,i8**%agw,align 8
%agx=getelementptr inbounds i8,i8*%agk,i64 32
%agy=bitcast i8*%agx to i32*
store i32 15,i32*%agy,align 4
%agz=call i8*@sml_alloc(i32 inreg 20)#0
%agA=getelementptr inbounds i8,i8*%agz,i64 -4
%agB=bitcast i8*%agA to i32*
store i32 1342177296,i32*%agB,align 4
store i8*%agz,i8**%C,align 8
%agC=getelementptr inbounds i8,i8*%agz,i64 4
%agD=bitcast i8*%agC to i32*
store i32 0,i32*%agD,align 1
%agE=bitcast i8*%agz to i32*
store i32 2,i32*%agE,align 4
%agF=load i8*,i8**%F,align 8
store i8*null,i8**%F,align 8
%agG=getelementptr inbounds i8,i8*%agz,i64 8
%agH=bitcast i8*%agG to i8**
store i8*%agF,i8**%agH,align 8
%agI=getelementptr inbounds i8,i8*%agz,i64 16
%agJ=bitcast i8*%agI to i32*
store i32 2,i32*%agJ,align 4
%agK=call i8*@sml_alloc(i32 inreg 20)#0
%agL=getelementptr inbounds i8,i8*%agK,i64 -4
%agM=bitcast i8*%agL to i32*
store i32 1342177296,i32*%agM,align 4
store i8*%agK,i8**%D,align 8
%agN=bitcast i8*%agK to i64*
store i64 0,i64*%agN,align 4
%agO=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%agP=getelementptr inbounds i8,i8*%agK,i64 8
%agQ=bitcast i8*%agP to i8**
store i8*%agO,i8**%agQ,align 8
%agR=getelementptr inbounds i8,i8*%agK,i64 16
%agS=bitcast i8*%agR to i32*
store i32 2,i32*%agS,align 4
%agT=call i8*@sml_alloc(i32 inreg 20)#0
%agU=getelementptr inbounds i8,i8*%agT,i64 -4
%agV=bitcast i8*%agU to i32*
store i32 1342177296,i32*%agV,align 4
store i8*%agT,i8**%C,align 8
%agW=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%agX=bitcast i8*%agT to i8**
store i8*%agW,i8**%agX,align 8
%agY=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%agZ=getelementptr inbounds i8,i8*%agT,i64 8
%ag0=bitcast i8*%agZ to i8**
store i8*%agY,i8**%ag0,align 8
%ag1=getelementptr inbounds i8,i8*%agT,i64 16
%ag2=bitcast i8*%ag1 to i32*
store i32 3,i32*%ag2,align 4
%ag3=call i8*@sml_alloc(i32 inreg 20)#0
%ag4=getelementptr inbounds i8,i8*%ag3,i64 -4
%ag5=bitcast i8*%ag4 to i32*
store i32 1342177296,i32*%ag5,align 4
store i8*%ag3,i8**%A,align 8
%ag6=bitcast i8*%ag3 to i64*
store i64 0,i64*%ag6,align 4
%ag7=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%ag8=getelementptr inbounds i8,i8*%ag3,i64 8
%ag9=bitcast i8*%ag8 to i8**
store i8*%ag7,i8**%ag9,align 8
%aha=getelementptr inbounds i8,i8*%ag3,i64 16
%ahb=bitcast i8*%aha to i32*
store i32 2,i32*%ahb,align 4
%ahc=call i8*@sml_alloc(i32 inreg 28)#0
%ahd=getelementptr inbounds i8,i8*%ahc,i64 -4
%ahe=bitcast i8*%ahd to i32*
store i32 1342177304,i32*%ahe,align 4
store i8*%ahc,i8**%w,align 8
%ahf=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%ahg=bitcast i8*%ahc to i8**
store i8*%ahf,i8**%ahg,align 8
%ahh=load i8*,i8**%H,align 8
%ahi=getelementptr inbounds i8,i8*%ahc,i64 8
%ahj=bitcast i8*%ahi to i8**
store i8*%ahh,i8**%ahj,align 8
%ahk=load i8*,i8**%G,align 8
%ahl=getelementptr inbounds i8,i8*%ahc,i64 16
%ahm=bitcast i8*%ahl to i8**
store i8*%ahk,i8**%ahm,align 8
%ahn=getelementptr inbounds i8,i8*%ahc,i64 24
%aho=bitcast i8*%ahn to i32*
store i32 7,i32*%aho,align 4
%ahp=call i8*@sml_alloc(i32 inreg 20)#0
%ahq=getelementptr inbounds i8,i8*%ahp,i64 -4
%ahr=bitcast i8*%ahq to i32*
store i32 1342177296,i32*%ahr,align 4
store i8*%ahp,i8**%A,align 8
%ahs=getelementptr inbounds i8,i8*%ahp,i64 4
%aht=bitcast i8*%ahs to i32*
store i32 0,i32*%aht,align 1
%ahu=bitcast i8*%ahp to i32*
store i32 3,i32*%ahu,align 4
%ahv=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%ahw=getelementptr inbounds i8,i8*%ahp,i64 8
%ahx=bitcast i8*%ahw to i8**
store i8*%ahv,i8**%ahx,align 8
%ahy=getelementptr inbounds i8,i8*%ahp,i64 16
%ahz=bitcast i8*%ahy to i32*
store i32 2,i32*%ahz,align 4
%ahA=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ahB=getelementptr inbounds i8,i8*%ahA,i64 16
%ahC=bitcast i8*%ahB to i8*(i8*,i8*)**
%ahD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ahC,align 8
%ahE=bitcast i8*%ahA to i8**
%ahF=load i8*,i8**%ahE,align 8
store i8*%ahF,i8**%w,align 8
%ahG=call i8*@sml_alloc(i32 inreg 20)#0
%ahH=getelementptr inbounds i8,i8*%ahG,i64 -4
%ahI=bitcast i8*%ahH to i32*
store i32 1342177296,i32*%ahI,align 4
store i8*%ahG,i8**%C,align 8
%ahJ=bitcast i8*%ahG to i64*
store i64 0,i64*%ahJ,align 4
%ahK=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%ahL=getelementptr inbounds i8,i8*%ahG,i64 8
%ahM=bitcast i8*%ahL to i8**
store i8*%ahK,i8**%ahM,align 8
%ahN=getelementptr inbounds i8,i8*%ahG,i64 16
%ahO=bitcast i8*%ahN to i32*
store i32 2,i32*%ahO,align 4
%ahP=call i8*@sml_alloc(i32 inreg 20)#0
%ahQ=getelementptr inbounds i8,i8*%ahP,i64 -4
%ahR=bitcast i8*%ahQ to i32*
store i32 1342177296,i32*%ahR,align 4
store i8*%ahP,i8**%y,align 8
%ahS=getelementptr inbounds i8,i8*%ahP,i64 4
%ahT=bitcast i8*%ahS to i32*
store i32 0,i32*%ahT,align 1
%ahU=bitcast i8*%ahP to i32*
store i32 1,i32*%ahU,align 4
%ahV=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%ahW=getelementptr inbounds i8,i8*%ahP,i64 8
%ahX=bitcast i8*%ahW to i8**
store i8*%ahV,i8**%ahX,align 8
%ahY=getelementptr inbounds i8,i8*%ahP,i64 16
%ahZ=bitcast i8*%ahY to i32*
store i32 2,i32*%ahZ,align 4
%ah0=call i8*@sml_alloc(i32 inreg 20)#0
%ah1=getelementptr inbounds i8,i8*%ah0,i64 -4
%ah2=bitcast i8*%ah1 to i32*
store i32 1342177296,i32*%ah2,align 4
store i8*%ah0,i8**%C,align 8
%ah3=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%ah4=bitcast i8*%ah0 to i8**
store i8*%ah3,i8**%ah4,align 8
%ah5=getelementptr inbounds i8,i8*%ah0,i64 8
%ah6=bitcast i8*%ah5 to i8**
store i8*null,i8**%ah6,align 8
%ah7=getelementptr inbounds i8,i8*%ah0,i64 16
%ah8=bitcast i8*%ah7 to i32*
store i32 3,i32*%ah8,align 4
%ah9=call i8*@sml_alloc(i32 inreg 20)#0
%aia=getelementptr inbounds i8,i8*%ah9,i64 -4
%aib=bitcast i8*%aia to i32*
store i32 1342177296,i32*%aib,align 4
%aic=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%aid=bitcast i8*%ah9 to i8**
store i8*%aic,i8**%aid,align 8
%aie=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%aif=getelementptr inbounds i8,i8*%ah9,i64 8
%aig=bitcast i8*%aif to i8**
store i8*%aie,i8**%aig,align 8
%aih=getelementptr inbounds i8,i8*%ah9,i64 16
%aii=bitcast i8*%aih to i32*
store i32 3,i32*%aii,align 4
%aij=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%aik=call fastcc i8*%ahD(i8*inreg%aij,i8*inreg%ah9)
store i8*%aik,i8**%w,align 8
%ail=load i8**,i8***%aeA,align 8
%aim=load i8*,i8**%ail,align 8
%ain=icmp eq i8*%aim,null
br i1%ain,label%aio,label%aiO
aio:
store i8*null,i8**%z,align 8
store i8*null,i8**%B,align 8
%aip=call i8*@sml_alloc(i32 inreg 44)#0
%aiq=getelementptr inbounds i8,i8*%aip,i64 -4
%air=bitcast i8*%aiq to i32*
store i32 1342177320,i32*%air,align 4
store i8*%aip,i8**%x,align 8
%ais=bitcast i8*%aip to i64*
store i64 0,i64*%ais,align 4
%ait=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%aiu=getelementptr inbounds i8,i8*%aip,i64 8
%aiv=bitcast i8*%aiu to i8**
store i8*%ait,i8**%aiv,align 8
%aiw=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%aix=getelementptr inbounds i8,i8*%aip,i64 16
%aiy=bitcast i8*%aix to i8**
store i8*%aiw,i8**%aiy,align 8
%aiz=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%aiA=getelementptr inbounds i8,i8*%aip,i64 24
%aiB=bitcast i8*%aiA to i8**
store i8*%aiz,i8**%aiB,align 8
%aiC=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%aiD=getelementptr inbounds i8,i8*%aip,i64 32
%aiE=bitcast i8*%aiD to i8**
store i8*%aiC,i8**%aiE,align 8
%aiF=getelementptr inbounds i8,i8*%aip,i64 40
%aiG=bitcast i8*%aiF to i32*
store i32 30,i32*%aiG,align 4
%aiH=call i8*@sml_alloc(i32 inreg 20)#0
%aiI=bitcast i8*%aiH to i32*
%aiJ=getelementptr inbounds i8,i8*%aiH,i64 -4
%aiK=bitcast i8*%aiJ to i32*
store i32 1342177296,i32*%aiK,align 4
%aiL=getelementptr inbounds i8,i8*%aiH,i64 4
%aiM=bitcast i8*%aiL to i32*
store i32 0,i32*%aiM,align 1
store i32 1,i32*%aiI,align 4
%aiN=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
br label%ajl
aiO:
%aiP=bitcast i8**%ail to i8***
store i8*null,i8**%G,align 8
store i8*null,i8**%B,align 8
%aiQ=load i8**,i8***%aiP,align 8
%aiR=load i8*,i8**%aiQ,align 8
%aiS=getelementptr inbounds i8,i8*%aiR,i64 8
%aiT=bitcast i8*%aiS to i8**
%aiU=load i8*,i8**%aiT,align 8
store i8*%aiU,i8**%x,align 8
%aiV=call i8*@sml_alloc(i32 inreg 44)#0
%aiW=getelementptr inbounds i8,i8*%aiV,i64 -4
%aiX=bitcast i8*%aiW to i32*
store i32 1342177320,i32*%aiX,align 4
store i8*%aiV,i8**%y,align 8
%aiY=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%aiZ=bitcast i8*%aiV to i8**
store i8*%aiY,i8**%aiZ,align 8
%ai0=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%ai1=getelementptr inbounds i8,i8*%aiV,i64 8
%ai2=bitcast i8*%ai1 to i8**
store i8*%ai0,i8**%ai2,align 8
%ai3=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ai4=getelementptr inbounds i8,i8*%aiV,i64 16
%ai5=bitcast i8*%ai4 to i8**
store i8*%ai3,i8**%ai5,align 8
%ai6=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%ai7=getelementptr inbounds i8,i8*%aiV,i64 24
%ai8=bitcast i8*%ai7 to i8**
store i8*%ai6,i8**%ai8,align 8
%ai9=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%aja=getelementptr inbounds i8,i8*%aiV,i64 32
%ajb=bitcast i8*%aja to i8**
store i8*%ai9,i8**%ajb,align 8
%ajc=getelementptr inbounds i8,i8*%aiV,i64 40
%ajd=bitcast i8*%ajc to i32*
store i32 31,i32*%ajd,align 4
%aje=call i8*@sml_alloc(i32 inreg 20)#0
%ajf=bitcast i8*%aje to i32*
%ajg=getelementptr inbounds i8,i8*%aje,i64 -4
%ajh=bitcast i8*%ajg to i32*
store i32 1342177296,i32*%ajh,align 4
%aji=getelementptr inbounds i8,i8*%aje,i64 4
%ajj=bitcast i8*%aji to i32*
store i32 0,i32*%ajj,align 1
store i32 4,i32*%ajf,align 4
%ajk=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
br label%ajl
ajl:
%ajm=phi i8*[%aje,%aiO],[%aiH,%aio]
%ajn=phi i8*[%ajk,%aiO],[%aiN,%aio]
%ajo=getelementptr inbounds i8,i8*%ajm,i64 8
%ajp=bitcast i8*%ajo to i8**
store i8*%ajn,i8**%ajp,align 8
%ajq=getelementptr inbounds i8,i8*%ajm,i64 16
%ajr=bitcast i8*%ajq to i32*
store i32 2,i32*%ajr,align 4
store i8*%ajm,i8**%x,align 8
%ajs=call i8*@sml_alloc(i32 inreg 28)#0
%ajt=getelementptr inbounds i8,i8*%ajs,i64 -4
%aju=bitcast i8*%ajt to i32*
store i32 1342177304,i32*%aju,align 4
%ajv=load i8*,i8**%w,align 8
%ajw=bitcast i8*%ajs to i8**
store i8*%ajv,i8**%ajw,align 8
%ajx=getelementptr inbounds i8,i8*%ajs,i64 8
%ajy=bitcast i8*%ajx to i8**
store i8*null,i8**%ajy,align 8
%ajz=load i8*,i8**%x,align 8
%ajA=getelementptr inbounds i8,i8*%ajs,i64 16
%ajB=bitcast i8*%ajA to i8**
store i8*%ajz,i8**%ajB,align 8
%ajC=getelementptr inbounds i8,i8*%ajs,i64 24
%ajD=bitcast i8*%ajC to i32*
store i32 7,i32*%ajD,align 4
ret i8*%ajs
ajE:
store i8*null,i8**%x,align 8
%ajF=getelementptr inbounds i8,i8*%ab,i64 8
%ajG=bitcast i8*%ajF to i8**
%ajH=load i8*,i8**%ajG,align 8
store i8*%ajH,i8**%y,align 8
%ajI=getelementptr inbounds i8,i8*%ajH,i64 8
%ajJ=bitcast i8*%ajI to i8**
%ajK=load i8*,i8**%ajJ,align 8
store i8*%ajK,i8**%A,align 8
%ajL=getelementptr inbounds i8,i8*%ajH,i64 24
%ajM=bitcast i8*%ajL to i8**
%ajN=load i8*,i8**%ajM,align 8
store i8*%ajN,i8**%B,align 8
%ajO=getelementptr inbounds i8,i8*%ajH,i64 32
%ajP=bitcast i8*%ajO to i8**
%ajQ=load i8*,i8**%ajP,align 8
store i8*%ajQ,i8**%C,align 8
%ajR=getelementptr inbounds i8,i8*%ajH,i64 16
%ajS=bitcast i8*%ajR to i8**
%ajT=load i8*,i8**%ajS,align 8
%ajU=load i8*,i8**%L,align 8
%ajV=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%ajU,i8*inreg%ac,i8*inreg%ad,i8*inreg%ajT)
%ajW=bitcast i8*%ajV to i8**
%ajX=load i8*,i8**%ajW,align 8
store i8*%ajX,i8**%w,align 8
%ajY=getelementptr inbounds i8,i8*%ajV,i64 16
%ajZ=bitcast i8*%ajY to i8**
%aj0=load i8*,i8**%ajZ,align 8
store i8*%aj0,i8**%x,align 8
%aj1=bitcast i8**%y to i8***
%aj2=load i8**,i8***%aj1,align 8
store i8*null,i8**%y,align 8
%aj3=load i8*,i8**%aj2,align 8
%aj4=load i8*,i8**%E,align 8
%aj5=load i8*,i8**%F,align 8
%aj6=load i8*,i8**%L,align 8
store i8*null,i8**%E,align 8
store i8*null,i8**%F,align 8
store i8*null,i8**%L,align 8
%aj7=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%aj6,i8*inreg%aj5,i8*inreg%aj4,i8*inreg%aj3)
%aj8=bitcast i8*%aj7 to i8**
%aj9=load i8*,i8**%aj8,align 8
store i8*%aj9,i8**%y,align 8
%aka=getelementptr inbounds i8,i8*%aj7,i64 8
%akb=bitcast i8*%aka to i8**
%akc=load i8*,i8**%akb,align 8
store i8*%akc,i8**%z,align 8
%akd=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ake=getelementptr inbounds i8,i8*%akd,i64 16
%akf=bitcast i8*%ake to i8*(i8*,i8*)**
%akg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%akf,align 8
%akh=bitcast i8*%akd to i8**
%aki=load i8*,i8**%akh,align 8
store i8*%aki,i8**%D,align 8
%akj=call i8*@sml_alloc(i32 inreg 20)#0
%akk=getelementptr inbounds i8,i8*%akj,i64 -4
%akl=bitcast i8*%akk to i32*
store i32 1342177296,i32*%akl,align 4
%akm=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%akn=bitcast i8*%akj to i8**
store i8*%akm,i8**%akn,align 8
%ako=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%akp=getelementptr inbounds i8,i8*%akj,i64 8
%akq=bitcast i8*%akp to i8**
store i8*%ako,i8**%akq,align 8
%akr=getelementptr inbounds i8,i8*%akj,i64 16
%aks=bitcast i8*%akr to i32*
store i32 3,i32*%aks,align 4
%akt=load i8*,i8**%D,align 8
store i8*null,i8**%D,align 8
%aku=call fastcc i8*%akg(i8*inreg%akt,i8*inreg%akj)
store i8*%aku,i8**%w,align 8
%akv=call i8*@sml_alloc(i32 inreg 44)#0
%akw=getelementptr inbounds i8,i8*%akv,i64 -4
%akx=bitcast i8*%akw to i32*
store i32 1342177320,i32*%akx,align 4
store i8*%akv,i8**%y,align 8
%aky=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%akz=bitcast i8*%akv to i8**
store i8*%aky,i8**%akz,align 8
%akA=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%akB=getelementptr inbounds i8,i8*%akv,i64 8
%akC=bitcast i8*%akB to i8**
store i8*%akA,i8**%akC,align 8
%akD=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%akE=getelementptr inbounds i8,i8*%akv,i64 16
%akF=bitcast i8*%akE to i8**
store i8*%akD,i8**%akF,align 8
%akG=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%akH=getelementptr inbounds i8,i8*%akv,i64 24
%akI=bitcast i8*%akH to i8**
store i8*%akG,i8**%akI,align 8
%akJ=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%akK=getelementptr inbounds i8,i8*%akv,i64 32
%akL=bitcast i8*%akK to i8**
store i8*%akJ,i8**%akL,align 8
%akM=getelementptr inbounds i8,i8*%akv,i64 40
%akN=bitcast i8*%akM to i32*
store i32 31,i32*%akN,align 4
%akO=call i8*@sml_alloc(i32 inreg 20)#0
%akP=getelementptr inbounds i8,i8*%akO,i64 -4
%akQ=bitcast i8*%akP to i32*
store i32 1342177296,i32*%akQ,align 4
store i8*%akO,i8**%x,align 8
%akR=getelementptr inbounds i8,i8*%akO,i64 4
%akS=bitcast i8*%akR to i32*
store i32 0,i32*%akS,align 1
%akT=bitcast i8*%akO to i32*
store i32 7,i32*%akT,align 4
%akU=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%akV=getelementptr inbounds i8,i8*%akO,i64 8
%akW=bitcast i8*%akV to i8**
store i8*%akU,i8**%akW,align 8
%akX=getelementptr inbounds i8,i8*%akO,i64 16
%akY=bitcast i8*%akX to i32*
store i32 2,i32*%akY,align 4
%akZ=call i8*@sml_alloc(i32 inreg 28)#0
%ak0=getelementptr inbounds i8,i8*%akZ,i64 -4
%ak1=bitcast i8*%ak0 to i32*
store i32 1342177304,i32*%ak1,align 4
%ak2=load i8*,i8**%w,align 8
%ak3=bitcast i8*%akZ to i8**
store i8*%ak2,i8**%ak3,align 8
%ak4=getelementptr inbounds i8,i8*%akZ,i64 8
%ak5=bitcast i8*%ak4 to i8**
store i8*null,i8**%ak5,align 8
%ak6=load i8*,i8**%x,align 8
%ak7=getelementptr inbounds i8,i8*%akZ,i64 16
%ak8=bitcast i8*%ak7 to i8**
store i8*%ak6,i8**%ak8,align 8
%ak9=getelementptr inbounds i8,i8*%akZ,i64 24
%ala=bitcast i8*%ak9 to i32*
store i32 7,i32*%ala,align 4
ret i8*%akZ
}
define internal fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
s:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
store i8*%a,i8**%j,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%q,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%g,align 8
%o=load i8*,i8**%f,align 8
%p=load i8*,i8**%e,align 8
br label%q
q:
%r=phi i8*[%p,%m],[%b,%s]
%t=phi i8*[%o,%m],[%c,%s]
%u=phi i8*[%n,%m],[%d,%s]
store i8*null,i8**%f,align 8
store i8*%t,i8**%h,align 8
store i8*null,i8**%e,align 8
store i8*%r,i8**%i,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%x
w:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
x:
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%j,align 8
%B=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%A,i8*inreg%r,i8*inreg%t,i8*inreg%z)
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=getelementptr inbounds i8,i8*%B,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%f,align 8
%H=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%h,align 8
%M=load i8*,i8**%i,align 8
%N=load i8*,i8**%j,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
%O=call fastcc i8*@_SMLLN18ClosureConversion214compileExpListE_763(i8*inreg%N,i8*inreg%M,i8*inreg%L,i8*inreg%K)
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%g,align 8
%R=getelementptr inbounds i8,i8*%O,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%h,align 8
%U=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%i,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%aa,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
%ak=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%al=call fastcc i8*%X(i8*inreg%ak,i8*inreg%aa)
store i8*%al,i8**%e,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
store i8*%am,i8**%g,align 8
%ap=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%e,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%g,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
ret i8*%aw
}
define internal fastcc i8*@_SMLLN18ClosureConversion215compileBranchesE_764(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d,i8*inreg%e)#2 gc"smlsharp"{
v:
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%b,i8**%f,align 8
store i8*%c,i8**%g,align 8
store i8*%d,i8**%h,align 8
store i8*%e,i8**%i,align 8
store i8*%a,i8**%m,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%t,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%h,align 8
%r=load i8*,i8**%g,align 8
%s=load i8*,i8**%f,align 8
br label%t
t:
%u=phi i8*[%s,%p],[%b,%v]
%w=phi i8*[%r,%p],[%c,%v]
%x=phi i8*[%q,%p],[%d,%v]
store i8*null,i8**%h,align 8
store i8*%x,i8**%j,align 8
store i8*null,i8**%g,align 8
store i8*%w,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*%u,i8**%l,align 8
%y=icmp eq i8*%x,null
br i1%y,label%z,label%A
z:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
A:
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*@_SMLLN18ClosureConversion212compileTlintE_735(i8*inreg%F)
store i8*%G,i8**%f,align 8
%H=bitcast i8**%j to i8****
%I=load i8***,i8****%H,align 8
%J=load i8**,i8***%I,align 8
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%k,align 8
%M=load i8*,i8**%l,align 8
%N=load i8*,i8**%m,align 8
%O=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%N,i8*inreg%M,i8*inreg%L,i8*inreg%K)
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%g,align 8
%R=getelementptr inbounds i8,i8*%O,i64 16
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%h,align 8
%U=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%V=getelementptr inbounds i8,i8*%U,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%i,align 8
%Z=load i8*,i8**%k,align 8
%aa=load i8*,i8**%l,align 8
%ab=load i8*,i8**%m,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
%ac=call fastcc i8*@_SMLLN18ClosureConversion215compileBranchesE_764(i8*inreg%ab,i8*inreg%aa,i8*inreg%Z,i8*inreg%X,i8*inreg%Y)
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%i,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%j,align 8
%ai=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8*(i8*,i8*)**
%al=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak,align 8
%am=bitcast i8*%ai to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%k,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%az=call fastcc i8*%al(i8*inreg%ay,i8*inreg%ao)
store i8*%az,i8**%g,align 8
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%i,align 8
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%f,align 8
%aN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%g,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%f,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
ret i8*%aU
}
define internal fastcc i8*@_SMLLN18ClosureConversion216compileFieldListE_765(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
C:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
store i8*%a,i8**%r,align 8
%u=load atomic i32,i32*@sml_check_flag unordered,align 4
%v=icmp eq i32%u,0
br i1%v,label%A,label%w
w:
call void@sml_check(i32 inreg%u)
%x=load i8*,i8**%g,align 8
%y=load i8*,i8**%f,align 8
%z=load i8*,i8**%e,align 8
br label%A
A:
%B=phi i8*[%z,%w],[%b,%C]
%D=phi i8*[%y,%w],[%c,%C]
%E=phi i8*[%x,%w],[%d,%C]
store i8*null,i8**%g,align 8
store i8*%E,i8**%m,align 8
store i8*null,i8**%f,align 8
store i8*%D,i8**%n,align 8
store i8*null,i8**%e,align 8
store i8*%B,i8**%o,align 8
%F=icmp eq i8*%E,null
%G=bitcast i8*%E to i8**
br i1%F,label%H,label%I
H:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
I:
%J=bitcast i8*%E to i8***
%K=load i8*,i8**%G,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%p,align 8
%O=bitcast i8**%m to i8***
%P=load i8*,i8**%G,align 8
%Q=getelementptr inbounds i8,i8*%P,i64 40
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%q,align 8
%T=load i8**,i8***%J,align 8
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%r,align 8
%W=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%V,i8*inreg%B,i8*inreg%D,i8*inreg%U)
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%W,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%f,align 8
%ac=load i8**,i8***%O,align 8
%ad=load i8*,i8**%ac,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 24
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=load i8*,i8**%n,align 8
%ai=load i8*,i8**%o,align 8
%aj=load i8*,i8**%r,align 8
%ak=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%aj,i8*inreg%ai,i8*inreg%ah,i8*inreg%ag)
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%g,align 8
%an=getelementptr inbounds i8,i8*%ak,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%h,align 8
%aq=load i8**,i8***%O,align 8
%ar=load i8*,i8**%aq,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 32
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%n,align 8
%aw=load i8*,i8**%o,align 8
%ax=load i8*,i8**%r,align 8
%ay=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%ax,i8*inreg%aw,i8*inreg%av,i8*inreg%au)
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%i,align 8
%aB=getelementptr inbounds i8,i8*%ay,i64 16
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%j,align 8
%aE=load i8**,i8***%O,align 8
%aF=load i8*,i8**%aE,align 8
%aG=getelementptr inbounds i8,i8*%aF,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=load i8*,i8**%n,align 8
%aK=load i8*,i8**%o,align 8
%aL=load i8*,i8**%r,align 8
%aM=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%aL,i8*inreg%aK,i8*inreg%aJ,i8*inreg%aI)
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%k,align 8
%aP=getelementptr inbounds i8,i8*%aM,i64 16
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%l,align 8
%aS=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aT=getelementptr inbounds i8,i8*%aS,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%n,align 8
%aX=load i8*,i8**%o,align 8
%aY=load i8*,i8**%r,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%o,align 8
store i8*null,i8**%r,align 8
%aZ=call fastcc i8*@_SMLLN18ClosureConversion216compileFieldListE_765(i8*inreg%aY,i8*inreg%aX,i8*inreg%aW,i8*inreg%aV)
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%m,align 8
%a2=getelementptr inbounds i8,i8*%aZ,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%n,align 8
%a5=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%a6=getelementptr inbounds i8,i8*%a5,i64 16
%a7=bitcast i8*%a6 to i8*(i8*,i8*)**
%a8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a7,align 8
%a9=bitcast i8*%a5 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%t,align 8
%bb=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8*(i8*,i8*)**
%be=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bd,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%s,align 8
%bh=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%r,align 8
%bn=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bo=getelementptr inbounds i8,i8*%bn,i64 16
%bp=bitcast i8*%bo to i8*(i8*,i8*)**
%bq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bp,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%o,align 8
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
%bw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bz=getelementptr inbounds i8,i8*%bt,i64 8
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bt,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%bE=call fastcc i8*%bq(i8*inreg%bD,i8*inreg%bt)
store i8*%bE,i8**%k,align 8
%bF=call i8*@sml_alloc(i32 inreg 20)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177296,i32*%bH,align 4
%bI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bJ=bitcast i8*%bF to i8**
store i8*%bI,i8**%bJ,align 8
%bK=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bL=getelementptr inbounds i8,i8*%bF,i64 8
%bM=bitcast i8*%bL to i8**
store i8*%bK,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bF,i64 16
%bO=bitcast i8*%bN to i32*
store i32 3,i32*%bO,align 4
%bP=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%bQ=call fastcc i8*%bk(i8*inreg%bP,i8*inreg%bF)
store i8*%bQ,i8**%i,align 8
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
%bU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bV=bitcast i8*%bR to i8**
store i8*%bU,i8**%bV,align 8
%bW=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bX=getelementptr inbounds i8,i8*%bR,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bR,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%b2=call fastcc i8*%be(i8*inreg%b1,i8*inreg%bR)
store i8*%b2,i8**%g,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
%b6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b3,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%ce=call fastcc i8*%a8(i8*inreg%cd,i8*inreg%b3)
store i8*%ce,i8**%e,align 8
%cf=call i8*@sml_alloc(i32 inreg 52)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177328,i32*%ch,align 4
store i8*%cf,i8**%g,align 8
%ci=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 16
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cr=getelementptr inbounds i8,i8*%cf,i64 24
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cu=getelementptr inbounds i8,i8*%cf,i64 32
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%cx=getelementptr inbounds i8,i8*%cf,i64 40
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cf,i64 48
%cA=bitcast i8*%cz to i32*
store i32 63,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
store i8*%cB,i8**%f,align 8
%cE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cB,i64 16
%cK=bitcast i8*%cJ to i32*
store i32 3,i32*%cK,align 4
%cL=call i8*@sml_alloc(i32 inreg 20)#0
%cM=getelementptr inbounds i8,i8*%cL,i64 -4
%cN=bitcast i8*%cM to i32*
store i32 1342177296,i32*%cN,align 4
%cO=load i8*,i8**%e,align 8
%cP=bitcast i8*%cL to i8**
store i8*%cO,i8**%cP,align 8
%cQ=load i8*,i8**%f,align 8
%cR=getelementptr inbounds i8,i8*%cL,i64 8
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cL,i64 16
%cU=bitcast i8*%cT to i32*
store i32 3,i32*%cU,align 4
ret i8*%cL
}
define internal fastcc i8*@_SMLLN18ClosureConversion217compileBitmapListE_766(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
u:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
store i8*%a,i8**%l,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%s,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%g,align 8
%q=load i8*,i8**%f,align 8
%r=load i8*,i8**%e,align 8
br label%s
s:
%t=phi i8*[%r,%o],[%b,%u]
%v=phi i8*[%q,%o],[%c,%u]
%w=phi i8*[%p,%o],[%d,%u]
store i8*null,i8**%g,align 8
store i8*%w,i8**%i,align 8
store i8*null,i8**%f,align 8
store i8*%v,i8**%j,align 8
store i8*null,i8**%e,align 8
store i8*%t,i8**%k,align 8
%x=icmp eq i8*%w,null
br i1%x,label%y,label%z
y:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
z:
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=load i8*,i8**%l,align 8
%G=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%F,i8*inreg%t,i8*inreg%v,i8*inreg%E)
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%G,i64 16
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%f,align 8
%M=bitcast i8**%i to i8****
%N=load i8***,i8****%M,align 8
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%j,align 8
%R=load i8*,i8**%k,align 8
%S=load i8*,i8**%l,align 8
%T=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%S,i8*inreg%R,i8*inreg%Q,i8*inreg%P)
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%g,align 8
%W=getelementptr inbounds i8,i8*%T,i64 16
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%h,align 8
%Z=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%j,align 8
%ae=load i8*,i8**%k,align 8
%af=load i8*,i8**%l,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
%ag=call fastcc i8*@_SMLLN18ClosureConversion217compileBitmapListE_766(i8*inreg%af,i8*inreg%ae,i8*inreg%ad,i8*inreg%ac)
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%i,align 8
%aj=getelementptr inbounds i8,i8*%ag,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%j,align 8
%am=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%l,align 8
%as=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%k,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aJ=call fastcc i8*%av(i8*inreg%aI,i8*inreg%ay)
store i8*%aJ,i8**%g,align 8
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%aV=call fastcc i8*%ap(i8*inreg%aU,i8*inreg%aK)
store i8*%aV,i8**%e,align 8
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
store i8*%aW,i8**%g,align 8
%aZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%f,align 8
%a9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=load i8*,i8**%e,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=load i8*,i8**%f,align 8
%bm=getelementptr inbounds i8,i8*%bg,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bg,i64 16
%bp=bitcast i8*%bo to i32*
store i32 3,i32*%bp,align 4
ret i8*%bg
}
define internal fastcc i8*@_SMLLN18ClosureConversion215compileFuncBodyE_767(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
w:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%b,i8**%i,align 8
store i8*%c,i8**%j,align 8
store i8*%d,i8**%k,align 8
store i8*%a,i8**%o,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%u,label%r
r:
call void@sml_check(i32 inreg%p)
%s=load i8*,i8**%k,align 8
%t=load i8*,i8**%i,align 8
br label%u
u:
%v=phi i8*[%t,%r],[%b,%w]
%x=phi i8*[%s,%r],[%d,%w]
store i8*%x,i8**%l,align 8
store i8*null,i8**%i,align 8
store i8*%v,i8**%k,align 8
%y=call fastcc i8*@_SMLFN12RecordLayout19newComputationAccumE(i32 inreg 0)
store i8*%y,i8**%m,align 8
%z=call i8*@sml_alloc(i32 inreg 8)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 805306376,i32*%B,align 4
store i8*%z,i8**%n,align 8
%C=bitcast i8*%z to i64*
store i64 0,i64*%C,align 1
%D=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%E=load i8*,i8**%n,align 8
%F=bitcast i8*%E to i8**
call void@sml_write(i8*inreg%E,i8**inreg%F,i8*inreg%D)#0
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%i,align 8
%J=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=load i8*,i8**%j,align 8
%R=load i8*,i8**%k,align 8
%S=load i8*,i8**%o,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%o,align 8
%T=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%S,i8*inreg%G,i8*inreg%R,i8*inreg%Q)
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%j,align 8
%W=getelementptr inbounds i8,i8*%T,i64 16
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%k,align 8
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%Z,i64 24
%al=bitcast i8*%ak to i32*
store i32 7,i32*%al,align 4
%am=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%am)
%an=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%an)
%ao=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ao)
%ap=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ap)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%Z,i8**%e,align 8
%aq=load atomic i32,i32*@sml_check_flag unordered,align 4
%ar=icmp eq i32%aq,0
br i1%ar,label%ax,label%as
as:
call void@sml_check(i32 inreg%aq)
%at=load i8*,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
br label%ax
ax:
%ay=phi i8*[%aw,%as],[%ah,%u]
store i8*%ay,i8**%f,align 8
%az=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
store i8*%aF,i8**%h,align 8
%aI=load i8*,i8**%e,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
%aS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212extractDeclsE_584 to void(...)*),void(...)**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion212extractDeclsE_584 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 -2147483647,i32*%aZ,align 4
%a0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a1=call fastcc i8*%aC(i8*inreg%a0,i8*inreg%aP)
%a2=getelementptr inbounds i8,i8*%a1,i64 16
%a3=bitcast i8*%a2 to i8*(i8*,i8*)**
%a4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a3,align 8
%a5=bitcast i8*%a1 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=load i8*,i8**%e,align 8
%a8=getelementptr inbounds i8,i8*%a7,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
%bb=call fastcc i8*%a4(i8*inreg%a6,i8*inreg%ba)
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8*(i8*,i8*)**
%be=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bd,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%f,align 8
%bh=bitcast i8**%e to i8****
%bi=load i8***,i8****%bh,align 8
store i8*null,i8**%e,align 8
%bj=load i8**,i8***%bi,align 8
%bk=load i8*,i8**%bj,align 8
%bl=call fastcc i8*@_SMLFN12RecordLayout12extractDeclsE(i8*inreg%bk)
%bm=load i8*,i8**%f,align 8
%bn=call fastcc i8*%be(i8*inreg%bm,i8*inreg%bl)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%an)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ao)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ap)
store i8*%bn,i8**%i,align 8
%bo=call i8*@sml_alloc(i32 inreg 20)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177296,i32*%bq,align 4
%br=load i8*,i8**%j,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=load i8*,i8**%i,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bo,i64 16
%bx=bitcast i8*%bw to i32*
store i32 3,i32*%bx,align 4
ret i8*%bo
}
define internal fastcc i8*@_SMLLN18ClosureConversion211compileDeclE_768(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"personality i32(...)*@sml_personality{
B:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%b,i8**%g,align 8
store i8*%c,i8**%h,align 8
store i8*%d,i8**%i,align 8
store i8*%a,i8**%r,align 8
%t=load atomic i32,i32*@sml_check_flag unordered,align 4
%u=icmp eq i32%t,0
br i1%u,label%z,label%v
v:
call void@sml_check(i32 inreg%t)
%w=load i8*,i8**%i,align 8
%x=load i8*,i8**%h,align 8
%y=load i8*,i8**%g,align 8
br label%z
z:
%A=phi i8*[%y,%v],[%b,%B]
%C=phi i8*[%x,%v],[%c,%B]
%D=phi i8*[%w,%v],[%d,%B]
store i8*%C,i8**%n,align 8
store i8*%A,i8**%m,align 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
switch i32%F,label%G[
i32 2,label%ro
i32 3,label%hT
i32 1,label%e3
i32 0,label%Y
]
G:
store i8*null,i8**%n,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%r,align 8
call void@sml_matchcomp_bug()
%H=load i8*,i8**@_SMLZ5Match,align 8
store i8*%H,i8**%g,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%h,align 8
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@a0,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 60)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177336,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%R,i64 56
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=load i8*,i8**%h,align 8
%X=bitcast i8*%R to i8**
store i8*%W,i8**%X,align 8
call void@sml_raise(i8*inreg%R)#1
unreachable
Y:
%Z=getelementptr inbounds i8,i8*%D,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%h,align 8
%ac=bitcast i8*%ab to i8***
%ad=load i8**,i8***%ac,align 8
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%o,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=getelementptr inbounds i8,i8*%ag,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%p,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%q,align 8
%an=getelementptr inbounds i8,i8*%ab,i64 24
%ao=bitcast i8*%an to i32*
%ap=load i32,i32*%ao,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%o,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call fastcc i8*@_SMLLN18ClosureConversion27setPathE_727(i8*inreg%aq)
store i8*%aA,i8**%g,align 8
%aB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
%aF=load i8*,i8**%m,align 8
%aG=load i8*,i8**%r,align 8
store i8*null,i8**%m,align 8
%aH=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%aG,i8*inreg%aF,i8*inreg%aA,i8*inreg%aE)
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%h,align 8
%aK=getelementptr inbounds i8,i8*%aH,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%i,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 16
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%j,align 8
%aQ=invoke fastcc i8*@_SMLLN18ClosureConversion210expToConstE_528(i8*inreg%aP)
to label%aR unwind label%aZ
aR:
store i8*%aQ,i8**%k,align 8
%aS=call i8*@sml_alloc(i32 inreg 12)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177288,i32*%aU,align 4
%aV=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to i32*
store i32 1,i32*%aY,align 4
br label%bg
aZ:
%a0=landingpad{i8*,i8*}
catch i8*null
%a1=extractvalue{i8*,i8*}%a0,1
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%k,align 8
%a4=bitcast i8*%a3 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=icmp eq i8*%a5,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%a6,label%a7,label%a8
a7:
store i8*null,i8**%k,align 8
br label%bg
a8:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%o,align 8
store i8*null,i8**%p,align 8
store i8*null,i8**%q,align 8
store i8*null,i8**%r,align 8
%a9=call i8*@sml_alloc(i32 inreg 60)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177336,i32*%bb,align 4
%bc=getelementptr inbounds i8,i8*%a9,i64 56
%bd=bitcast i8*%bc to i32*
store i32 1,i32*%bd,align 4
%be=load i8*,i8**%k,align 8
%bf=bitcast i8*%a9 to i8**
store i8*%be,i8**%bf,align 8
call void@sml_raise(i8*inreg%a9)#1
unreachable
bg:
%bh=phi i8*[%aS,%aR],[null,%a7]
store i8*%bh,i8**%n,align 8
%bi=load i8*,i8**%o,align 8
%bj=call fastcc i8*@_SMLFN12ExternSymbol5touchE(i8*inreg%bi)
store i8*%bj,i8**%k,align 8
%bk=load i8*,i8**%n,align 8
%bl=icmp eq i8*%bk,null
br i1%bl,label%bm,label%cm
bm:
%bn=load i8*,i8**@_SMLZN12BuiltinTypes6unitTyE,align 8
%bo=call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg%bn)
store i8*%bo,i8**%l,align 8
%bp=call i8*@sml_alloc(i32 inreg 36)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177312,i32*%br,align 4
store i8*%bp,i8**%m,align 8
%bs=load i8*,i8**%k,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%q,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=load i8*,i8**%p,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 16
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bB=getelementptr inbounds i8,i8*%bp,i64 24
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bp,i64 32
%bE=bitcast i8*%bD to i32*
store i32 15,i32*%bE,align 4
%bF=call i8*@sml_alloc(i32 inreg 20)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177296,i32*%bH,align 4
store i8*%bF,i8**%s,align 8
%bI=getelementptr inbounds i8,i8*%bF,i64 4
%bJ=bitcast i8*%bI to i32*
store i32 0,i32*%bJ,align 1
%bK=bitcast i8*%bF to i32*
store i32 5,i32*%bK,align 4
%bL=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bM=getelementptr inbounds i8,i8*%bF,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bF,i64 16
%bP=bitcast i8*%bO to i32*
store i32 2,i32*%bP,align 4
%bQ=call i8*@sml_alloc(i32 inreg 28)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177304,i32*%bS,align 4
store i8*%bQ,i8**%j,align 8
%bT=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=load i8*,i8**%q,align 8
%bZ=getelementptr inbounds i8,i8*%bQ,i64 16
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bQ,i64 24
%b2=bitcast i8*%b1 to i32*
store i32 7,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
%b6=load i8*,i8**%j,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*null,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
store i8*null,i8**%l,align 8
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ci=getelementptr inbounds i8,i8*%cc,i64 8
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cc,i64 16
%cl=bitcast i8*%ck to i32*
store i32 3,i32*%cl,align 4
br label%cm
cm:
%cn=phi i8*[%cc,%bm],[null,%bg]
store i8*%cn,i8**%j,align 8
%co=icmp eq i32%ap,0
br i1%co,label%cq,label%cp
cp:
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%o,align 8
br label%do
cq:
%cr=load i8*,i8**%g,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 8
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%g,align 8
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
%cF=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cF)
%cG=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cG)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%cv,i8**%e,align 8
%cH=call i8*@sml_alloc(i32 inreg 12)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177288,i32*%cJ,align 4
store i8*%cH,i8**%f,align 8
%cK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cH,i64 8
%cN=bitcast i8*%cM to i32*
store i32 1,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 28)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177304,i32*%cQ,align 4
%cR=load i8*,i8**%f,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cO,i64 8
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214exportFunEntryE_759 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 16
%cW=bitcast i8*%cV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN18ClosureConversion214exportFunEntryE_759 to void(...)*),void(...)**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cO,i64 24
%cY=bitcast i8*%cX to i32*
store i32 -2147483647,i32*%cY,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cF)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cG)
store i8*%cR,i8**%l,align 8
%cZ=call i8*@sml_alloc(i32 inreg 28)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177304,i32*%c1,align 4
store i8*%cZ,i8**%g,align 8
%c2=load i8*,i8**%k,align 8
%c3=bitcast i8*%cZ to i8**
store i8*%c2,i8**%c3,align 8
%c4=load i8*,i8**%q,align 8
%c5=getelementptr inbounds i8,i8*%cZ,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=load i8*,i8**%p,align 8
%c8=getelementptr inbounds i8,i8*%cZ,i64 16
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%cZ,i64 24
%db=bitcast i8*%da to i32*
store i32 7,i32*%db,align 4
%dc=call i8*@sml_alloc(i32 inreg 20)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177296,i32*%de,align 4
%df=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%di=getelementptr inbounds i8,i8*%dc,i64 8
%dj=bitcast i8*%di to i8**
store i8*%dh,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%dc,i64 16
%dl=bitcast i8*%dk to i32*
store i32 3,i32*%dl,align 4
%dm=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dn=call fastcc i8*@_SMLLN18ClosureConversion214exportFunEntryE_759(i8*inreg%dm,i8*inreg%dc)
br label%do
do:
%dp=phi i8*[%dn,%cq],[null,%cp]
store i8*%dp,i8**%g,align 8
%dq=call i8*@sml_alloc(i32 inreg 44)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177320,i32*%ds,align 4
store i8*%dq,i8**%i,align 8
%dt=getelementptr inbounds i8,i8*%dq,i64 36
%du=bitcast i8*%dt to i32*
store i32 0,i32*%du,align 1
%dv=load i8*,i8**%k,align 8
%dw=bitcast i8*%dq to i8**
store i8*null,i8**%k,align 8
store i8*%dv,i8**%dw,align 8
%dx=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dy=getelementptr inbounds i8,i8*%dq,i64 8
%dz=bitcast i8*%dy to i8**
store i8*%dx,i8**%dz,align 8
%dA=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dB=getelementptr inbounds i8,i8*%dq,i64 16
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%dE=getelementptr inbounds i8,i8*%dq,i64 24
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dq,i64 32
%dH=bitcast i8*%dG to i32*
store i32%ap,i32*%dH,align 4
%dI=getelementptr inbounds i8,i8*%dq,i64 40
%dJ=bitcast i8*%dI to i32*
store i32 15,i32*%dJ,align 4
%dK=call i8*@sml_alloc(i32 inreg 20)#0
%dL=getelementptr inbounds i8,i8*%dK,i64 -4
%dM=bitcast i8*%dL to i32*
store i32 1342177296,i32*%dM,align 4
store i8*%dK,i8**%k,align 8
%dN=getelementptr inbounds i8,i8*%dK,i64 4
%dO=bitcast i8*%dN to i32*
store i32 0,i32*%dO,align 1
%dP=bitcast i8*%dK to i32*
store i32 2,i32*%dP,align 4
%dQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dR=getelementptr inbounds i8,i8*%dK,i64 8
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dK,i64 16
%dU=bitcast i8*%dT to i32*
store i32 2,i32*%dU,align 4
%dV=call i8*@sml_alloc(i32 inreg 20)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177296,i32*%dX,align 4
store i8*%dV,i8**%i,align 8
%dY=bitcast i8*%dV to i64*
store i64 0,i64*%dY,align 4
%dZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%d0=getelementptr inbounds i8,i8*%dV,i64 8
%d1=bitcast i8*%d0 to i8**
store i8*%dZ,i8**%d1,align 8
%d2=getelementptr inbounds i8,i8*%dV,i64 16
%d3=bitcast i8*%d2 to i32*
store i32 2,i32*%d3,align 4
%d4=call i8*@sml_alloc(i32 inreg 20)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177296,i32*%d6,align 4
store i8*%d4,i8**%l,align 8
%d7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%d8=bitcast i8*%d4 to i8**
store i8*%d7,i8**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d4,i64 8
%ea=bitcast i8*%d9 to i8**
store i8*null,i8**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d4,i64 16
%ec=bitcast i8*%eb to i32*
store i32 3,i32*%ec,align 4
%ed=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ee=getelementptr inbounds i8,i8*%ed,i64 16
%ef=bitcast i8*%ee to i8*(i8*,i8*)**
%eg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ef,align 8
%eh=bitcast i8*%ed to i8**
%ei=load i8*,i8**%eh,align 8
store i8*%ei,i8**%k,align 8
%ej=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%ek=getelementptr inbounds i8,i8*%ej,i64 16
%el=bitcast i8*%ek to i8*(i8*,i8*)**
%em=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%el,align 8
%en=bitcast i8*%ej to i8**
%eo=load i8*,i8**%en,align 8
store i8*%eo,i8**%i,align 8
%ep=call i8*@sml_alloc(i32 inreg 20)#0
%eq=getelementptr inbounds i8,i8*%ep,i64 -4
%er=bitcast i8*%eq to i32*
store i32 1342177296,i32*%er,align 4
%es=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%et=bitcast i8*%ep to i8**
store i8*%es,i8**%et,align 8
%eu=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ev=getelementptr inbounds i8,i8*%ep,i64 8
%ew=bitcast i8*%ev to i8**
store i8*%eu,i8**%ew,align 8
%ex=getelementptr inbounds i8,i8*%ep,i64 16
%ey=bitcast i8*%ex to i32*
store i32 3,i32*%ey,align 4
%ez=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eA=call fastcc i8*%em(i8*inreg%ez,i8*inreg%ep)
store i8*%eA,i8**%g,align 8
%eB=call i8*@sml_alloc(i32 inreg 20)#0
%eC=getelementptr inbounds i8,i8*%eB,i64 -4
%eD=bitcast i8*%eC to i32*
store i32 1342177296,i32*%eD,align 4
%eE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eF=bitcast i8*%eB to i8**
store i8*%eE,i8**%eF,align 8
%eG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eH=getelementptr inbounds i8,i8*%eB,i64 8
%eI=bitcast i8*%eH to i8**
store i8*%eG,i8**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%eB,i64 16
%eK=bitcast i8*%eJ to i32*
store i32 3,i32*%eK,align 4
%eL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eM=call fastcc i8*%eg(i8*inreg%eL,i8*inreg%eB)
store i8*%eM,i8**%g,align 8
%eN=bitcast i8**%r to i8***
%eO=load i8**,i8***%eN,align 8
store i8*null,i8**%r,align 8
%eP=load i8*,i8**%eO,align 8
store i8*%eP,i8**%h,align 8
%eQ=call i8*@sml_alloc(i32 inreg 28)#0
%eR=getelementptr inbounds i8,i8*%eQ,i64 -4
%eS=bitcast i8*%eR to i32*
store i32 1342177304,i32*%eS,align 4
%eT=load i8*,i8**%g,align 8
%eU=bitcast i8*%eQ to i8**
store i8*%eT,i8**%eU,align 8
%eV=load i8*,i8**%h,align 8
%eW=getelementptr inbounds i8,i8*%eQ,i64 8
%eX=bitcast i8*%eW to i8**
store i8*%eV,i8**%eX,align 8
%eY=load i8*,i8**%j,align 8
%eZ=getelementptr inbounds i8,i8*%eQ,i64 16
%e0=bitcast i8*%eZ to i8**
store i8*%eY,i8**%e0,align 8
%e1=getelementptr inbounds i8,i8*%eQ,i64 24
%e2=bitcast i8*%e1 to i32*
store i32 7,i32*%e2,align 4
ret i8*%eQ
e3:
store i8*null,i8**%n,align 8
store i8*null,i8**%m,align 8
%e4=getelementptr inbounds i8,i8*%D,i64 8
%e5=bitcast i8*%e4 to i8**
%e6=load i8*,i8**%e5,align 8
store i8*%e6,i8**%h,align 8
%e7=bitcast i8*%e6 to i8**
%e8=load i8*,i8**%e7,align 8
%e9=getelementptr inbounds i8,i8*%e8,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
store i8*%fb,i8**%i,align 8
%fc=getelementptr inbounds i8,i8*%e6,i64 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%j,align 8
%ff=getelementptr inbounds i8,i8*%e6,i64 16
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
store i8*%fh,i8**%k,align 8
%fi=bitcast i8*%e6 to i8***
%fj=load i8**,i8***%fi,align 8
%fk=load i8*,i8**%fj,align 8
%fl=call fastcc i8*@_SMLFN12ExternSymbol5touchE(i8*inreg%fk)
store i8*%fl,i8**%g,align 8
%fm=call i8*@sml_alloc(i32 inreg 36)#0
%fn=getelementptr inbounds i8,i8*%fm,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177312,i32*%fo,align 4
store i8*%fm,i8**%l,align 8
%fp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fq=bitcast i8*%fm to i8**
store i8*%fp,i8**%fq,align 8
%fr=load i8*,i8**%j,align 8
%fs=getelementptr inbounds i8,i8*%fm,i64 8
%ft=bitcast i8*%fs to i8**
store i8*%fr,i8**%ft,align 8
%fu=load i8*,i8**%k,align 8
%fv=getelementptr inbounds i8,i8*%fm,i64 16
%fw=bitcast i8*%fv to i8**
store i8*%fu,i8**%fw,align 8
%fx=load i8*,i8**%i,align 8
%fy=getelementptr inbounds i8,i8*%fm,i64 24
%fz=bitcast i8*%fy to i8**
store i8*%fx,i8**%fz,align 8
%fA=getelementptr inbounds i8,i8*%fm,i64 32
%fB=bitcast i8*%fA to i32*
store i32 15,i32*%fB,align 4
%fC=call i8*@sml_alloc(i32 inreg 20)#0
%fD=getelementptr inbounds i8,i8*%fC,i64 -4
%fE=bitcast i8*%fD to i32*
store i32 1342177296,i32*%fE,align 4
store i8*%fC,i8**%g,align 8
%fF=getelementptr inbounds i8,i8*%fC,i64 4
%fG=bitcast i8*%fF to i32*
store i32 0,i32*%fG,align 1
%fH=bitcast i8*%fC to i32*
store i32 4,i32*%fH,align 4
%fI=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fJ=getelementptr inbounds i8,i8*%fC,i64 8
%fK=bitcast i8*%fJ to i8**
store i8*%fI,i8**%fK,align 8
%fL=getelementptr inbounds i8,i8*%fC,i64 16
%fM=bitcast i8*%fL to i32*
store i32 2,i32*%fM,align 4
%fN=call i8*@sml_alloc(i32 inreg 20)#0
%fO=getelementptr inbounds i8,i8*%fN,i64 -4
%fP=bitcast i8*%fO to i32*
store i32 1342177296,i32*%fP,align 4
store i8*%fN,i8**%n,align 8
%fQ=bitcast i8*%fN to i64*
store i64 0,i64*%fQ,align 4
%fR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fS=getelementptr inbounds i8,i8*%fN,i64 8
%fT=bitcast i8*%fS to i8**
store i8*%fR,i8**%fT,align 8
%fU=getelementptr inbounds i8,i8*%fN,i64 16
%fV=bitcast i8*%fU to i32*
store i32 2,i32*%fV,align 4
%fW=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fX=call fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_746(i8*inreg%fW)
%fY=icmp eq i8*%fX,null
br i1%fY,label%fZ,label%f0
fZ:
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
br label%hf
f0:
%f1=bitcast i8**%h to i8****
%f2=bitcast i8*%fX to i8**
%f3=load i8*,i8**%f2,align 8
%f4=bitcast i8*%f3 to i8**
%f5=load i8*,i8**%f4,align 8
store i8*%f5,i8**%i,align 8
%f6=getelementptr inbounds i8,i8*%f3,i64 8
%f7=bitcast i8*%f6 to i8**
%f8=load i8*,i8**%f7,align 8
store i8*%f8,i8**%l,align 8
%f9=getelementptr inbounds i8,i8*%f3,i64 16
%ga=bitcast i8*%f9 to i8**
%gb=load i8*,i8**%ga,align 8
store i8*%gb,i8**%m,align 8
%gc=load i8***,i8****%f1,align 8
store i8*null,i8**%h,align 8
%gd=load i8**,i8***%gc,align 8
%ge=load i8*,i8**%gd,align 8
%gf=call fastcc i8*@_SMLFN15ExternFunSymbol5touchE(i8*inreg%ge)
store i8*%gf,i8**%g,align 8
%gg=call i8*@sml_alloc(i32 inreg 52)#0
%gh=getelementptr inbounds i8,i8*%gg,i64 -4
%gi=bitcast i8*%gh to i32*
store i32 1342177328,i32*%gi,align 4
store i8*%gg,i8**%h,align 8
%gj=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gk=bitcast i8*%gg to i8**
store i8*%gj,i8**%gk,align 8
%gl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gm=getelementptr inbounds i8,i8*%gg,i64 8
%gn=bitcast i8*%gm to i8**
store i8*%gl,i8**%gn,align 8
%go=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gp=getelementptr inbounds i8,i8*%gg,i64 16
%gq=bitcast i8*%gp to i8**
store i8*%go,i8**%gq,align 8
%gr=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gs=getelementptr inbounds i8,i8*%gg,i64 24
%gt=bitcast i8*%gs to i8**
store i8*%gr,i8**%gt,align 8
%gu=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gv=getelementptr inbounds i8,i8*%gg,i64 32
%gw=bitcast i8*%gv to i8**
store i8*%gu,i8**%gw,align 8
%gx=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gy=getelementptr inbounds i8,i8*%gg,i64 40
%gz=bitcast i8*%gy to i8**
store i8*%gx,i8**%gz,align 8
%gA=getelementptr inbounds i8,i8*%gg,i64 48
%gB=bitcast i8*%gA to i32*
store i32 63,i32*%gB,align 4
%gC=call i8*@sml_alloc(i32 inreg 20)#0
%gD=getelementptr inbounds i8,i8*%gC,i64 -4
%gE=bitcast i8*%gD to i32*
store i32 1342177296,i32*%gE,align 4
store i8*%gC,i8**%g,align 8
%gF=getelementptr inbounds i8,i8*%gC,i64 4
%gG=bitcast i8*%gF to i32*
store i32 0,i32*%gG,align 1
%gH=bitcast i8*%gC to i32*
store i32 3,i32*%gH,align 4
%gI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gJ=getelementptr inbounds i8,i8*%gC,i64 8
%gK=bitcast i8*%gJ to i8**
store i8*%gI,i8**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gC,i64 16
%gM=bitcast i8*%gL to i32*
store i32 2,i32*%gM,align 4
%gN=call i8*@sml_alloc(i32 inreg 20)#0
%gO=getelementptr inbounds i8,i8*%gN,i64 -4
%gP=bitcast i8*%gO to i32*
store i32 1342177296,i32*%gP,align 4
store i8*%gN,i8**%h,align 8
%gQ=bitcast i8*%gN to i64*
store i64 0,i64*%gQ,align 4
%gR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gS=getelementptr inbounds i8,i8*%gN,i64 8
%gT=bitcast i8*%gS to i8**
store i8*%gR,i8**%gT,align 8
%gU=getelementptr inbounds i8,i8*%gN,i64 16
%gV=bitcast i8*%gU to i32*
store i32 2,i32*%gV,align 4
%gW=call i8*@sml_alloc(i32 inreg 20)#0
%gX=getelementptr inbounds i8,i8*%gW,i64 -4
%gY=bitcast i8*%gX to i32*
store i32 1342177296,i32*%gY,align 4
%gZ=load i8*,i8**%h,align 8
%g0=bitcast i8*%gW to i8**
store i8*%gZ,i8**%g0,align 8
%g1=getelementptr inbounds i8,i8*%gW,i64 8
%g2=bitcast i8*%g1 to i8**
store i8*null,i8**%g2,align 8
%g3=getelementptr inbounds i8,i8*%gW,i64 16
%g4=bitcast i8*%g3 to i32*
store i32 3,i32*%g4,align 4
store i8*%gZ,i8**%g,align 8
store i8*null,i8**%h,align 8
%g5=call i8*@sml_alloc(i32 inreg 20)#0
%g6=getelementptr inbounds i8,i8*%g5,i64 -4
%g7=bitcast i8*%g6 to i32*
store i32 1342177296,i32*%g7,align 4
%g8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%g9=bitcast i8*%g5 to i8**
store i8*%g8,i8**%g9,align 8
%ha=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hb=getelementptr inbounds i8,i8*%g5,i64 8
%hc=bitcast i8*%hb to i8**
store i8*%ha,i8**%hc,align 8
%hd=getelementptr inbounds i8,i8*%g5,i64 16
%he=bitcast i8*%hd to i32*
store i32 3,i32*%he,align 4
br label%hf
hf:
%hg=phi i8*[%g5,%f0],[null,%fZ]
store i8*%hg,i8**%g,align 8
%hh=call i8*@sml_alloc(i32 inreg 20)#0
%hi=getelementptr inbounds i8,i8*%hh,i64 -4
%hj=bitcast i8*%hi to i32*
store i32 1342177296,i32*%hj,align 4
store i8*%hh,i8**%h,align 8
%hk=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%hl=bitcast i8*%hh to i8**
store i8*%hk,i8**%hl,align 8
%hm=load i8*,i8**%g,align 8
%hn=getelementptr inbounds i8,i8*%hh,i64 8
%ho=bitcast i8*%hn to i8**
store i8*%hm,i8**%ho,align 8
%hp=getelementptr inbounds i8,i8*%hh,i64 16
%hq=bitcast i8*%hp to i32*
store i32 3,i32*%hq,align 4
%hr=bitcast i8**%r to i8***
%hs=load i8**,i8***%hr,align 8
store i8*null,i8**%r,align 8
%ht=load i8*,i8**%hs,align 8
store i8*%ht,i8**%g,align 8
%hu=call i8*@sml_alloc(i32 inreg 28)#0
%hv=getelementptr inbounds i8,i8*%hu,i64 -4
%hw=bitcast i8*%hv to i32*
store i32 1342177304,i32*%hw,align 4
%hx=load i8*,i8**%h,align 8
%hy=bitcast i8*%hu to i8**
store i8*%hx,i8**%hy,align 8
%hz=load i8*,i8**%g,align 8
%hA=getelementptr inbounds i8,i8*%hu,i64 8
%hB=bitcast i8*%hA to i8**
store i8*%hz,i8**%hB,align 8
%hC=getelementptr inbounds i8,i8*%hu,i64 16
%hD=bitcast i8*%hC to i8**
store i8*null,i8**%hD,align 8
%hE=getelementptr inbounds i8,i8*%hu,i64 24
%hF=bitcast i8*%hE to i32*
store i32 7,i32*%hF,align 4
store i8*%hx,i8**%g,align 8
store i8*%hz,i8**%h,align 8
store i8*null,i8**%i,align 8
%hG=call i8*@sml_alloc(i32 inreg 28)#0
%hH=getelementptr inbounds i8,i8*%hG,i64 -4
%hI=bitcast i8*%hH to i32*
store i32 1342177304,i32*%hI,align 4
%hJ=load i8*,i8**%g,align 8
%hK=bitcast i8*%hG to i8**
store i8*%hJ,i8**%hK,align 8
%hL=load i8*,i8**%h,align 8
%hM=getelementptr inbounds i8,i8*%hG,i64 8
%hN=bitcast i8*%hM to i8**
store i8*%hL,i8**%hN,align 8
%hO=load i8*,i8**%i,align 8
%hP=getelementptr inbounds i8,i8*%hG,i64 16
%hQ=bitcast i8*%hP to i8**
store i8*%hO,i8**%hQ,align 8
%hR=getelementptr inbounds i8,i8*%hG,i64 24
%hS=bitcast i8*%hR to i32*
store i32 7,i32*%hS,align 4
ret i8*%hG
hT:
%hU=getelementptr inbounds i8,i8*%D,i64 8
%hV=bitcast i8*%hU to i8**
%hW=load i8*,i8**%hV,align 8
store i8*%hW,i8**%i,align 8
%hX=bitcast i8*%hW to i8**
%hY=load i8*,i8**%hX,align 8
store i8*%hY,i8**%o,align 8
%hZ=call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@aN,i64 0,i32 2)to i8*))
store i8*%hZ,i8**%g,align 8
%h0=load i8*,i8**%n,align 8
%h1=getelementptr inbounds i8,i8*%h0,i64 8
%h2=bitcast i8*%h1 to i8**
%h3=load i8*,i8**%h2,align 8
%h4=call fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%h3)
store i8*%h4,i8**%h,align 8
%h5=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h6=getelementptr inbounds i8,i8*%h5,i64 16
%h7=bitcast i8*%h6 to i8*(i8*,i8*)**
%h8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h7,align 8
%h9=bitcast i8*%h5 to i8**
%ia=load i8*,i8**%h9,align 8
store i8*%ia,i8**%j,align 8
%ib=call i8*@sml_alloc(i32 inreg 20)#0
%ic=getelementptr inbounds i8,i8*%ib,i64 -4
%id=bitcast i8*%ic to i32*
store i32 1342177296,i32*%id,align 4
store i8*%ib,i8**%k,align 8
%ie=load i8*,i8**%g,align 8
%if=bitcast i8*%ib to i8**
store i8*%ie,i8**%if,align 8
%ig=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ih=getelementptr inbounds i8,i8*%ib,i64 8
%ii=bitcast i8*%ih to i8**
store i8*%ig,i8**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ib,i64 16
%ik=bitcast i8*%ij to i32*
store i32 3,i32*%ik,align 4
%il=call i8*@sml_alloc(i32 inreg 28)#0
%im=getelementptr inbounds i8,i8*%il,i64 -4
%in=bitcast i8*%im to i32*
store i32 1342177304,i32*%in,align 4
%io=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ip=bitcast i8*%il to i8**
store i8*%io,i8**%ip,align 8
%iq=getelementptr inbounds i8,i8*%il,i64 8
%ir=bitcast i8*%iq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11recfunBinds_802 to void(...)*),void(...)**%ir,align 8
%is=getelementptr inbounds i8,i8*%il,i64 16
%it=bitcast i8*%is to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11recfunBinds_802 to void(...)*),void(...)**%it,align 8
%iu=getelementptr inbounds i8,i8*%il,i64 24
%iv=bitcast i8*%iu to i32*
store i32 -2147483647,i32*%iv,align 4
%iw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ix=call fastcc i8*%h8(i8*inreg%iw,i8*inreg%il)
%iy=getelementptr inbounds i8,i8*%ix,i64 16
%iz=bitcast i8*%iy to i8*(i8*,i8*)**
%iA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iz,align 8
%iB=bitcast i8*%ix to i8**
%iC=load i8*,i8**%iB,align 8
%iD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%iE=getelementptr inbounds i8,i8*%iD,i64 8
%iF=bitcast i8*%iE to i8**
%iG=load i8*,i8**%iF,align 8
%iH=call fastcc i8*%iA(i8*inreg%iC,i8*inreg%iG)
store i8*%iH,i8**%h,align 8
%iI=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%iJ=getelementptr inbounds i8,i8*%iI,i64 16
%iK=bitcast i8*%iJ to i8*(i8*,i8*)**
%iL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iK,align 8
%iM=bitcast i8*%iI to i8**
%iN=load i8*,i8**%iM,align 8
%iO=call fastcc i8*%iL(i8*inreg%iN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aS,i64 0,i32 2)to i8*))
%iP=getelementptr inbounds i8,i8*%iO,i64 16
%iQ=bitcast i8*%iP to i8*(i8*,i8*)**
%iR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iQ,align 8
%iS=bitcast i8*%iO to i8**
%iT=load i8*,i8**%iS,align 8
%iU=bitcast i8**%r to i8***
%iV=load i8**,i8***%iU,align 8
%iW=load i8*,i8**%iV,align 8
%iX=call fastcc i8*%iR(i8*inreg%iT,i8*inreg%iW)
%iY=getelementptr inbounds i8,i8*%iX,i64 16
%iZ=bitcast i8*%iY to i8*(i8*,i8*)**
%i0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iZ,align 8
%i1=bitcast i8*%iX to i8**
%i2=load i8*,i8**%i1,align 8
%i3=load i8*,i8**%h,align 8
%i4=call fastcc i8*%i0(i8*inreg%i2,i8*inreg%i3)
store i8*%i4,i8**%i,align 8
%i5=call i8*@sml_alloc(i32 inreg 20)#0
%i6=getelementptr inbounds i8,i8*%i5,i64 -4
%i7=bitcast i8*%i6 to i32*
store i32 1342177296,i32*%i7,align 4
%i8=load i8*,i8**%n,align 8
%i9=bitcast i8*%i5 to i8**
store i8*%i8,i8**%i9,align 8
%ja=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jb=getelementptr inbounds i8,i8*%i5,i64 8
%jc=bitcast i8*%jb to i8**
store i8*%ja,i8**%jc,align 8
%jd=getelementptr inbounds i8,i8*%i5,i64 16
%je=bitcast i8*%jd to i32*
store i32 3,i32*%je,align 4
%jf=call fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_719(i8*inreg%i5)
%jg=load i8*,i8**%h,align 8
%jh=load i8*,i8**%r,align 8
%ji=call fastcc i8*@_SMLLN18ClosureConversion218compileRecfunBindsE_770(i8*inreg%jh,i8*inreg%jf,i8*inreg%jg)
store i8*%ji,i8**%l,align 8
%jj=bitcast i8*%ji to i8**
%jk=load i8*,i8**%jj,align 8
store i8*%jk,i8**%i,align 8
%jl=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jm=getelementptr inbounds i8,i8*%jl,i64 16
%jn=bitcast i8*%jm to i8*(i8*,i8*)**
%jo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jn,align 8
%jp=bitcast i8*%jl to i8**
%jq=load i8*,i8**%jp,align 8
%jr=call fastcc i8*%jo(i8*inreg%jq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aT,i64 0,i32 2)to i8*))
%js=getelementptr inbounds i8,i8*%jr,i64 16
%jt=bitcast i8*%js to i8*(i8*,i8*)**
%ju=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jt,align 8
%jv=bitcast i8*%jr to i8**
%jw=load i8*,i8**%jv,align 8
store i8*%jw,i8**%j,align 8
%jx=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%jy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jz=call fastcc i8*%ju(i8*inreg%jy,i8*inreg%jx)
%jA=getelementptr inbounds i8,i8*%jz,i64 16
%jB=bitcast i8*%jA to i8*(i8*,i8*)**
%jC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jB,align 8
%jD=bitcast i8*%jz to i8**
%jE=load i8*,i8**%jD,align 8
%jF=load i8*,i8**%l,align 8
%jG=getelementptr inbounds i8,i8*%jF,i64 8
%jH=bitcast i8*%jG to i8**
%jI=load i8*,i8**%jH,align 8
%jJ=call fastcc i8*%jC(i8*inreg%jE,i8*inreg%jI)
store i8*%jJ,i8**%j,align 8
%jK=call fastcc i8*@_SMLFN5VarID3Map9singletonE(i32 inreg 1,i32 inreg 8)
%jL=getelementptr inbounds i8,i8*%jK,i64 16
%jM=bitcast i8*%jL to i8*(i8*,i8*)**
%jN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jM,align 8
%jO=bitcast i8*%jK to i8**
%jP=load i8*,i8**%jO,align 8
store i8*%jP,i8**%k,align 8
%jQ=bitcast i8**%g to i32**
%jR=load i32*,i32**%jQ,align 8
%jS=load i32,i32*%jR,align 4
%jT=call i8*@sml_alloc(i32 inreg 20)#0
%jU=bitcast i8*%jT to i32*
%jV=getelementptr inbounds i8,i8*%jT,i64 -4
%jW=bitcast i8*%jV to i32*
store i32 1342177296,i32*%jW,align 4
%jX=getelementptr inbounds i8,i8*%jT,i64 4
%jY=bitcast i8*%jX to i32*
store i32 0,i32*%jY,align 1
store i32%jS,i32*%jU,align 4
%jZ=load i8*,i8**%g,align 8
%j0=getelementptr inbounds i8,i8*%jT,i64 8
%j1=bitcast i8*%j0 to i8**
store i8*%jZ,i8**%j1,align 8
%j2=getelementptr inbounds i8,i8*%jT,i64 16
%j3=bitcast i8*%j2 to i32*
store i32 2,i32*%j3,align 4
%j4=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%j5=call fastcc i8*%jN(i8*inreg%j4,i8*inreg%jT)
store i8*%j5,i8**%k,align 8
%j6=call i8*@sml_alloc(i32 inreg 20)#0
%j7=getelementptr inbounds i8,i8*%j6,i64 -4
%j8=bitcast i8*%j7 to i32*
store i32 1342177296,i32*%j8,align 4
%j9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ka=bitcast i8*%j6 to i8**
store i8*%j9,i8**%ka,align 8
%kb=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kc=getelementptr inbounds i8,i8*%j6,i64 8
%kd=bitcast i8*%kc to i8**
store i8*%kb,i8**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j6,i64 16
%kf=bitcast i8*%ke to i32*
store i32 3,i32*%kf,align 4
%kg=call fastcc i8*@_SMLLN18ClosureConversion28minusSetE_429(i8*inreg%j6)
store i8*%kg,i8**%j,align 8
%kh=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ki=call fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_649(i8*inreg%kh)
%kj=getelementptr inbounds i8,i8*%ki,i64 16
%kk=bitcast i8*%kj to i8*(i8*,i8*)**
%kl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kk,align 8
%km=bitcast i8*%ki to i8**
%kn=load i8*,i8**%km,align 8
%ko=load i8*,i8**%n,align 8
%kp=getelementptr inbounds i8,i8*%ko,i64 8
%kq=bitcast i8*%kp to i8**
%kr=load i8*,i8**%kq,align 8
%ks=call fastcc i8*%kl(i8*inreg%kn,i8*inreg%kr)
%kt=getelementptr inbounds i8,i8*%ks,i64 16
%ku=bitcast i8*%kt to i8*(i8*,i8*)**
%kv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ku,align 8
%kw=bitcast i8*%ks to i8**
%kx=load i8*,i8**%kw,align 8
store i8*%kx,i8**%k,align 8
%ky=call i8*@sml_alloc(i32 inreg 20)#0
%kz=getelementptr inbounds i8,i8*%ky,i64 -4
%kA=bitcast i8*%kz to i32*
store i32 1342177296,i32*%kA,align 4
%kB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kC=bitcast i8*%ky to i8**
store i8*%kB,i8**%kC,align 8
%kD=load i8*,i8**%o,align 8
%kE=getelementptr inbounds i8,i8*%ky,i64 8
%kF=bitcast i8*%kE to i8**
store i8*%kD,i8**%kF,align 8
%kG=getelementptr inbounds i8,i8*%ky,i64 16
%kH=bitcast i8*%kG to i32*
store i32 3,i32*%kH,align 4
%kI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kJ=call fastcc i8*%kv(i8*inreg%kI,i8*inreg%ky)
store i8*%kJ,i8**%m,align 8
%kK=getelementptr inbounds i8,i8*%kJ,i64 8
%kL=bitcast i8*%kK to i8**
%kM=load i8*,i8**%kL,align 8
store i8*%kM,i8**%j,align 8
%kN=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kO=getelementptr inbounds i8,i8*%kN,i64 16
%kP=bitcast i8*%kO to i8*(i8*,i8*)**
%kQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kP,align 8
%kR=bitcast i8*%kN to i8**
%kS=load i8*,i8**%kR,align 8
%kT=call fastcc i8*%kQ(i8*inreg%kS,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aU,i64 0,i32 2)to i8*))
%kU=getelementptr inbounds i8,i8*%kT,i64 16
%kV=bitcast i8*%kU to i8*(i8*,i8*)**
%kW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kV,align 8
%kX=bitcast i8*%kT to i8**
%kY=load i8*,i8**%kX,align 8
%kZ=bitcast i8**%m to i8***
%k0=load i8**,i8***%kZ,align 8
%k1=load i8*,i8**%k0,align 8
%k2=call fastcc i8*%kW(i8*inreg%kY,i8*inreg%k1)
store i8*%k2,i8**%k,align 8
%k3=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%k4=getelementptr inbounds i8,i8*%k3,i64 16
%k5=bitcast i8*%k4 to i8*(i8*,i8*)**
%k6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k5,align 8
%k7=bitcast i8*%k3 to i8**
%k8=load i8*,i8**%k7,align 8
store i8*%k8,i8**%p,align 8
%k9=call i8*@sml_alloc(i32 inreg 12)#0
%la=getelementptr inbounds i8,i8*%k9,i64 -4
%lb=bitcast i8*%la to i32*
store i32 1342177288,i32*%lb,align 4
store i8*%k9,i8**%q,align 8
%lc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ld=bitcast i8*%k9 to i8**
store i8*%lc,i8**%ld,align 8
%le=getelementptr inbounds i8,i8*%k9,i64 8
%lf=bitcast i8*%le to i32*
store i32 1,i32*%lf,align 4
%lg=call i8*@sml_alloc(i32 inreg 28)#0
%lh=getelementptr inbounds i8,i8*%lg,i64 -4
%li=bitcast i8*%lh to i32*
store i32 1342177304,i32*%li,align 4
%lj=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%lk=bitcast i8*%lg to i8**
store i8*%lj,i8**%lk,align 8
%ll=getelementptr inbounds i8,i8*%lg,i64 8
%lm=bitcast i8*%ll to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL14newRecfunBinds_809 to void(...)*),void(...)**%lm,align 8
%ln=getelementptr inbounds i8,i8*%lg,i64 16
%lo=bitcast i8*%ln to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL14newRecfunBinds_809 to void(...)*),void(...)**%lo,align 8
%lp=getelementptr inbounds i8,i8*%lg,i64 24
%lq=bitcast i8*%lp to i32*
store i32 -2147483647,i32*%lq,align 4
%lr=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ls=call fastcc i8*%k6(i8*inreg%lr,i8*inreg%lg)
%lt=getelementptr inbounds i8,i8*%ls,i64 16
%lu=bitcast i8*%lt to i8*(i8*,i8*)**
%lv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lu,align 8
%lw=bitcast i8*%ls to i8**
%lx=load i8*,i8**%lw,align 8
%ly=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%lz=getelementptr inbounds i8,i8*%ly,i64 8
%lA=bitcast i8*%lz to i8**
%lB=load i8*,i8**%lA,align 8
%lC=call fastcc i8*%lv(i8*inreg%lx,i8*inreg%lB)
store i8*%lC,i8**%k,align 8
%lD=load i8*,i8**%n,align 8
%lE=getelementptr inbounds i8,i8*%lD,i64 8
%lF=bitcast i8*%lE to i8**
%lG=load i8*,i8**%lF,align 8
%lH=call fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%lG)
%lI=call i8*@sml_alloc(i32 inreg 20)#0
%lJ=getelementptr inbounds i8,i8*%lI,i64 -4
%lK=bitcast i8*%lJ to i32*
store i32 1342177296,i32*%lK,align 4
store i8*%lI,i8**%p,align 8
%lL=load i8*,i8**%n,align 8
%lM=bitcast i8*%lI to i8**
store i8*%lL,i8**%lM,align 8
%lN=load i8*,i8**%o,align 8
%lO=getelementptr inbounds i8,i8*%lI,i64 8
%lP=bitcast i8*%lO to i8**
store i8*%lN,i8**%lP,align 8
%lQ=getelementptr inbounds i8,i8*%lI,i64 16
%lR=bitcast i8*%lQ to i32*
store i32 3,i32*%lR,align 4
%lS=call i8*@sml_alloc(i32 inreg 28)#0
%lT=getelementptr inbounds i8,i8*%lS,i64 -4
%lU=bitcast i8*%lT to i32*
store i32 1342177304,i32*%lU,align 4
%lV=load i8*,i8**%p,align 8
%lW=bitcast i8*%lS to i8**
store i8*%lV,i8**%lW,align 8
%lX=getelementptr inbounds i8,i8*%lS,i64 8
%lY=bitcast i8*%lX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15makeRecClsBinds_814 to void(...)*),void(...)**%lY,align 8
%lZ=getelementptr inbounds i8,i8*%lS,i64 16
%l0=bitcast i8*%lZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15makeRecClsBinds_814 to void(...)*),void(...)**%l0,align 8
%l1=getelementptr inbounds i8,i8*%lS,i64 24
%l2=bitcast i8*%l1 to i32*
store i32 -2147483647,i32*%l2,align 4
%l3=load i8**,i8***%kZ,align 8
%l4=load i8*,i8**%l3,align 8
%l5=icmp eq i8*%l4,null
br i1%l5,label%l6,label%o4
l6:
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%o,align 8
%l7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l8=getelementptr inbounds i8,i8*%l7,i64 16
%l9=bitcast i8*%l8 to i8*(i8*,i8*)**
%ma=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l9,align 8
%mb=bitcast i8*%l7 to i8**
%mc=load i8*,i8**%mb,align 8
%md=call fastcc i8*%ma(i8*inreg%mc,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aW,i64 0,i32 2)to i8*))
%me=getelementptr inbounds i8,i8*%md,i64 16
%mf=bitcast i8*%me to i8*(i8*,i8*)**
%mg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mf,align 8
%mh=bitcast i8*%md to i8**
%mi=load i8*,i8**%mh,align 8
%mj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%mk=call fastcc i8*%mg(i8*inreg%mi,i8*inreg%mj)
store i8*%mk,i8**%g,align 8
%ml=load i8*,i8**%k,align 8
%mm=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%mn=call fastcc i8*@_SMLL15makeRecClsBinds_814(i8*inreg%mm,i8*inreg%ml)
%mo=bitcast i8*%mn to i8**
%mp=load i8*,i8**%mo,align 8
store i8*%mp,i8**%h,align 8
%mq=getelementptr inbounds i8,i8*%mn,i64 8
%mr=bitcast i8*%mq to i8**
%ms=load i8*,i8**%mr,align 8
store i8*%ms,i8**%i,align 8
%mt=invoke fastcc i8*@_SMLFN8ListPair7foldlEqE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
to label%mu unwind label%ou
mu:
%mv=getelementptr inbounds i8,i8*%mt,i64 16
%mw=bitcast i8*%mv to i8*(i8*,i8*)**
%mx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mw,align 8
%my=bitcast i8*%mt to i8**
%mz=load i8*,i8**%my,align 8
%mA=invoke fastcc i8*%mx(i8*inreg%mz,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aX,i64 0,i32 2)to i8*))
to label%mB unwind label%ou
mB:
%mC=getelementptr inbounds i8,i8*%mA,i64 16
%mD=bitcast i8*%mC to i8*(i8*,i8*)**
%mE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mD,align 8
%mF=bitcast i8*%mA to i8**
%mG=load i8*,i8**%mF,align 8
%mH=load i8**,i8***%iU,align 8
%mI=load i8*,i8**%mH,align 8
%mJ=invoke fastcc i8*%mE(i8*inreg%mG,i8*inreg%mI)
to label%mK unwind label%ou
mK:
%mL=getelementptr inbounds i8,i8*%mJ,i64 16
%mM=bitcast i8*%mL to i8*(i8*,i8*)**
%mN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mM,align 8
%mO=bitcast i8*%mJ to i8**
%mP=load i8*,i8**%mO,align 8
store i8*%mP,i8**%j,align 8
%mQ=call i8*@sml_alloc(i32 inreg 20)#0
%mR=getelementptr inbounds i8,i8*%mQ,i64 -4
%mS=bitcast i8*%mR to i32*
store i32 1342177296,i32*%mS,align 4
%mT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%mU=bitcast i8*%mQ to i8**
store i8*%mT,i8**%mU,align 8
%mV=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%mW=getelementptr inbounds i8,i8*%mQ,i64 8
%mX=bitcast i8*%mW to i8**
store i8*%mV,i8**%mX,align 8
%mY=getelementptr inbounds i8,i8*%mQ,i64 16
%mZ=bitcast i8*%mY to i32*
store i32 3,i32*%mZ,align 4
%m0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%m1=invoke fastcc i8*%mN(i8*inreg%m0,i8*inreg%mQ)
to label%m2 unwind label%ou
m2:
store i8*%m1,i8**%l,align 8
%m3=call i8*@sml_alloc(i32 inreg 20)#0
%m4=getelementptr inbounds i8,i8*%m3,i64 -4
%m5=bitcast i8*%m4 to i32*
store i32 1342177296,i32*%m5,align 4
%m6=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%m7=bitcast i8*%m3 to i8**
store i8*%m6,i8**%m7,align 8
%m8=load i8*,i8**%l,align 8
%m9=getelementptr inbounds i8,i8*%m3,i64 8
%na=bitcast i8*%m9 to i8**
store i8*%m8,i8**%na,align 8
%nb=getelementptr inbounds i8,i8*%m3,i64 16
%nc=bitcast i8*%nb to i32*
store i32 3,i32*%nc,align 4
%nd=call fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_719(i8*inreg%m3)
%ne=load i8*,i8**%g,align 8
%nf=load i8*,i8**%r,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%r,align 8
%ng=call fastcc i8*@_SMLLN18ClosureConversion218compileRecfunBindsE_770(i8*inreg%nf,i8*inreg%nd,i8*inreg%ne)
store i8*%ng,i8**%i,align 8
%nh=bitcast i8*%ng to i8**
%ni=load i8*,i8**%nh,align 8
store i8*%ni,i8**%g,align 8
%nj=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%nk=call fastcc i8*@_SMLL16makeTopFunctions_812(i8*inreg%nj)
%nl=getelementptr inbounds i8,i8*%nk,i64 16
%nm=bitcast i8*%nl to i8*(i8*,i8*)**
%nn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nm,align 8
%no=bitcast i8*%nk to i8**
%np=load i8*,i8**%no,align 8
%nq=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nr=getelementptr inbounds i8,i8*%nq,i64 8
%ns=bitcast i8*%nr to i8**
%nt=load i8*,i8**%ns,align 8
%nu=call fastcc i8*%nn(i8*inreg%np,i8*inreg%nt)
store i8*%nu,i8**%i,align 8
%nv=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%nw=getelementptr inbounds i8,i8*%nv,i64 16
%nx=bitcast i8*%nw to i8*(i8*,i8*)**
%ny=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nx,align 8
%nz=bitcast i8*%nv to i8**
%nA=load i8*,i8**%nz,align 8
store i8*%nA,i8**%k,align 8
%nB=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%nC=getelementptr inbounds i8,i8*%nB,i64 16
%nD=bitcast i8*%nC to i8*(i8*,i8*)**
%nE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nD,align 8
%nF=bitcast i8*%nB to i8**
%nG=load i8*,i8**%nF,align 8
store i8*%nG,i8**%j,align 8
%nH=call i8*@sml_alloc(i32 inreg 20)#0
%nI=getelementptr inbounds i8,i8*%nH,i64 -4
%nJ=bitcast i8*%nI to i32*
store i32 1342177296,i32*%nJ,align 4
%nK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nL=bitcast i8*%nH to i8**
store i8*%nK,i8**%nL,align 8
%nM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nN=getelementptr inbounds i8,i8*%nH,i64 8
%nO=bitcast i8*%nN to i8**
store i8*%nM,i8**%nO,align 8
%nP=getelementptr inbounds i8,i8*%nH,i64 16
%nQ=bitcast i8*%nP to i32*
store i32 3,i32*%nQ,align 4
%nR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%nS=call fastcc i8*%nE(i8*inreg%nR,i8*inreg%nH)
store i8*%nS,i8**%g,align 8
%nT=call i8*@sml_alloc(i32 inreg 20)#0
%nU=getelementptr inbounds i8,i8*%nT,i64 -4
%nV=bitcast i8*%nU to i32*
store i32 1342177296,i32*%nV,align 4
%nW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nX=bitcast i8*%nT to i8**
store i8*%nW,i8**%nX,align 8
%nY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nZ=getelementptr inbounds i8,i8*%nT,i64 8
%n0=bitcast i8*%nZ to i8**
store i8*%nY,i8**%n0,align 8
%n1=getelementptr inbounds i8,i8*%nT,i64 16
%n2=bitcast i8*%n1 to i32*
store i32 3,i32*%n2,align 4
%n3=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%n4=call fastcc i8*%ny(i8*inreg%n3,i8*inreg%nT)
store i8*%n4,i8**%g,align 8
%n5=call i8*@sml_alloc(i32 inreg 28)#0
%n6=getelementptr inbounds i8,i8*%n5,i64 -4
%n7=bitcast i8*%n6 to i32*
store i32 1342177304,i32*%n7,align 4
%n8=load i8*,i8**%g,align 8
%n9=bitcast i8*%n5 to i8**
store i8*%n8,i8**%n9,align 8
%oa=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ob=getelementptr inbounds i8,i8*%n5,i64 8
%oc=bitcast i8*%ob to i8**
store i8*%oa,i8**%oc,align 8
%od=getelementptr inbounds i8,i8*%n5,i64 16
%oe=bitcast i8*%od to i8**
store i8*null,i8**%oe,align 8
%of=getelementptr inbounds i8,i8*%n5,i64 24
%og=bitcast i8*%of to i32*
store i32 7,i32*%og,align 4
store i8*%oa,i8**%h,align 8
store i8*null,i8**%i,align 8
%oh=call i8*@sml_alloc(i32 inreg 28)#0
%oi=getelementptr inbounds i8,i8*%oh,i64 -4
%oj=bitcast i8*%oi to i32*
store i32 1342177304,i32*%oj,align 4
%ok=load i8*,i8**%g,align 8
%ol=bitcast i8*%oh to i8**
store i8*%ok,i8**%ol,align 8
%om=load i8*,i8**%h,align 8
%on=getelementptr inbounds i8,i8*%oh,i64 8
%oo=bitcast i8*%on to i8**
store i8*%om,i8**%oo,align 8
%op=load i8*,i8**%i,align 8
%oq=getelementptr inbounds i8,i8*%oh,i64 16
%or=bitcast i8*%oq to i8**
store i8*%op,i8**%or,align 8
%os=getelementptr inbounds i8,i8*%oh,i64 24
%ot=bitcast i8*%os to i32*
store i32 7,i32*%ot,align 4
ret i8*%oh
ou:
%ov=landingpad{i8*,i8*}
catch i8*null
%ow=extractvalue{i8*,i8*}%ov,1
%ox=bitcast i8*%ow to i8**
%oy=load i8*,i8**%ox,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%r,align 8
store i8*%oy,i8**%g,align 8
%oz=bitcast i8*%oy to i8**
%oA=load i8*,i8**%oz,align 8
%oB=icmp eq i8*%oA,bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*}>,<{[4x i8],i32,i8*}>*@_SMLDL521,i64 0,i32 2)to i8*)
br i1%oB,label%oC,label%oW
oC:
%oD=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%oD,i8**%g,align 8
%oE=call i8*@sml_alloc(i32 inreg 28)#0
%oF=getelementptr inbounds i8,i8*%oE,i64 -4
%oG=bitcast i8*%oF to i32*
store i32 1342177304,i32*%oG,align 4
store i8*%oE,i8**%h,align 8
%oH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%oI=bitcast i8*%oE to i8**
store i8*%oH,i8**%oI,align 8
%oJ=getelementptr inbounds i8,i8*%oE,i64 8
%oK=bitcast i8*%oJ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@aY,i64 0,i32 2,i64 0),i8**%oK,align 8
%oL=getelementptr inbounds i8,i8*%oE,i64 16
%oM=bitcast i8*%oL to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[22x i8]}>,<{[4x i8],i32,[22x i8]}>*@aZ,i64 0,i32 2,i64 0),i8**%oM,align 8
%oN=getelementptr inbounds i8,i8*%oE,i64 24
%oO=bitcast i8*%oN to i32*
store i32 7,i32*%oO,align 4
%oP=call i8*@sml_alloc(i32 inreg 60)#0
%oQ=getelementptr inbounds i8,i8*%oP,i64 -4
%oR=bitcast i8*%oQ to i32*
store i32 1342177336,i32*%oR,align 4
%oS=getelementptr inbounds i8,i8*%oP,i64 56
%oT=bitcast i8*%oS to i32*
store i32 1,i32*%oT,align 4
%oU=load i8*,i8**%h,align 8
%oV=bitcast i8*%oP to i8**
store i8*%oU,i8**%oV,align 8
call void@sml_raise(i8*inreg%oP)#1
unreachable
oW:
%oX=call i8*@sml_alloc(i32 inreg 60)#0
%oY=getelementptr inbounds i8,i8*%oX,i64 -4
%oZ=bitcast i8*%oY to i32*
store i32 1342177336,i32*%oZ,align 4
%o0=getelementptr inbounds i8,i8*%oX,i64 56
%o1=bitcast i8*%o0 to i32*
store i32 1,i32*%o1,align 4
%o2=load i8*,i8**%g,align 8
%o3=bitcast i8*%oX to i8**
store i8*%o2,i8**%o3,align 8
call void@sml_raise(i8*inreg%oX)#1
unreachable
o4:
%o5=bitcast i8**%l3 to i8***
store i8*null,i8**%h,align 8
store i8*null,i8**%n,align 8
%o6=load i8**,i8***%o5,align 8
%o7=load i8*,i8**%o6,align 8
%o8=bitcast i8*%o7 to i8**
%o9=load i8*,i8**%o8,align 8
store i8*%o9,i8**%l,align 8
%pa=getelementptr inbounds i8,i8*%o7,i64 8
%pb=bitcast i8*%pa to i8**
%pc=load i8*,i8**%pb,align 8
store i8*%pc,i8**%m,align 8
%pd=call i8*@sml_alloc(i32 inreg 20)#0
%pe=getelementptr inbounds i8,i8*%pd,i64 -4
%pf=bitcast i8*%pe to i32*
store i32 1342177296,i32*%pf,align 4
store i8*%pd,i8**%h,align 8
%pg=load i8*,i8**%o,align 8
%ph=bitcast i8*%pd to i8**
store i8*%pg,i8**%ph,align 8
%pi=load i8*,i8**%l,align 8
%pj=getelementptr inbounds i8,i8*%pd,i64 8
%pk=bitcast i8*%pj to i8**
store i8*%pi,i8**%pk,align 8
%pl=getelementptr inbounds i8,i8*%pd,i64 16
%pm=bitcast i8*%pl to i32*
store i32 3,i32*%pm,align 4
%pn=call i8*@sml_alloc(i32 inreg 20)#0
%po=getelementptr inbounds i8,i8*%pn,i64 -4
%pp=bitcast i8*%po to i32*
store i32 1342177296,i32*%pp,align 4
store i8*%pn,i8**%n,align 8
%pq=getelementptr inbounds i8,i8*%pn,i64 4
%pr=bitcast i8*%pq to i32*
store i32 0,i32*%pr,align 1
%ps=bitcast i8*%pn to i32*
store i32 18,i32*%ps,align 4
%pt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pu=getelementptr inbounds i8,i8*%pn,i64 8
%pv=bitcast i8*%pu to i8**
store i8*%pt,i8**%pv,align 8
%pw=getelementptr inbounds i8,i8*%pn,i64 16
%px=bitcast i8*%pw to i32*
store i32 2,i32*%px,align 4
%py=call fastcc i8*@_SMLFN5VarID3Map6insertE(i32 inreg 1,i32 inreg 8)
%pz=getelementptr inbounds i8,i8*%py,i64 16
%pA=bitcast i8*%pz to i8*(i8*,i8*)**
%pB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pA,align 8
%pC=bitcast i8*%py to i8**
%pD=load i8*,i8**%pC,align 8
store i8*%pD,i8**%h,align 8
%pE=load i32*,i32**%jQ,align 8
store i8*null,i8**%g,align 8
%pF=load i32,i32*%pE,align 4
%pG=call i8*@sml_alloc(i32 inreg 28)#0
%pH=getelementptr inbounds i8,i8*%pG,i64 -4
%pI=bitcast i8*%pH to i32*
store i32 1342177304,i32*%pI,align 4
%pJ=getelementptr inbounds i8,i8*%pG,i64 12
%pK=bitcast i8*%pJ to i32*
store i32 0,i32*%pK,align 1
%pL=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%pM=bitcast i8*%pG to i8**
store i8*%pL,i8**%pM,align 8
%pN=getelementptr inbounds i8,i8*%pG,i64 8
%pO=bitcast i8*%pN to i32*
store i32%pF,i32*%pO,align 4
%pP=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%pQ=getelementptr inbounds i8,i8*%pG,i64 16
%pR=bitcast i8*%pQ to i8**
store i8*%pP,i8**%pR,align 8
%pS=getelementptr inbounds i8,i8*%pG,i64 24
%pT=bitcast i8*%pS to i32*
store i32 5,i32*%pT,align 4
%pU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pV=call fastcc i8*%pB(i8*inreg%pU,i8*inreg%pG)
%pW=call fastcc i8*@_SMLL16makeTopFunctions_812(i8*inreg%pV)
%pX=getelementptr inbounds i8,i8*%pW,i64 16
%pY=bitcast i8*%pX to i8*(i8*,i8*)**
%pZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pY,align 8
%p0=bitcast i8*%pW to i8**
%p1=load i8*,i8**%p0,align 8
%p2=load i8*,i8**%k,align 8
%p3=call fastcc i8*%pZ(i8*inreg%p1,i8*inreg%p2)
store i8*%p3,i8**%g,align 8
%p4=load i8*,i8**%k,align 8
%p5=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%p6=call fastcc i8*@_SMLL15makeRecClsBinds_814(i8*inreg%p5,i8*inreg%p4)
%p7=getelementptr inbounds i8,i8*%p6,i64 8
%p8=bitcast i8*%p7 to i8**
%p9=load i8*,i8**%p8,align 8
store i8*%p9,i8**%h,align 8
%qa=call i8*@sml_alloc(i32 inreg 28)#0
%qb=getelementptr inbounds i8,i8*%qa,i64 -4
%qc=bitcast i8*%qb to i32*
store i32 1342177304,i32*%qc,align 4
store i8*%qa,i8**%j,align 8
%qd=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%qe=bitcast i8*%qa to i8**
store i8*%qd,i8**%qe,align 8
%qf=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%qg=getelementptr inbounds i8,i8*%qa,i64 8
%qh=bitcast i8*%qg to i8**
store i8*%qf,i8**%qh,align 8
%qi=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%qj=getelementptr inbounds i8,i8*%qa,i64 16
%qk=bitcast i8*%qj to i8**
store i8*%qi,i8**%qk,align 8
%ql=getelementptr inbounds i8,i8*%qa,i64 24
%qm=bitcast i8*%ql to i32*
store i32 7,i32*%qm,align 4
%qn=call i8*@sml_alloc(i32 inreg 20)#0
%qo=getelementptr inbounds i8,i8*%qn,i64 -4
%qp=bitcast i8*%qo to i32*
store i32 1342177296,i32*%qp,align 4
store i8*%qn,i8**%l,align 8
%qq=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%qr=bitcast i8*%qn to i8**
store i8*%qq,i8**%qr,align 8
%qs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qt=getelementptr inbounds i8,i8*%qn,i64 8
%qu=bitcast i8*%qt to i8**
store i8*%qs,i8**%qu,align 8
%qv=getelementptr inbounds i8,i8*%qn,i64 16
%qw=bitcast i8*%qv to i32*
store i32 3,i32*%qw,align 4
%qx=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qy=getelementptr inbounds i8,i8*%qx,i64 16
%qz=bitcast i8*%qy to i8*(i8*,i8*)**
%qA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qz,align 8
%qB=bitcast i8*%qx to i8**
%qC=load i8*,i8**%qB,align 8
%qD=call fastcc i8*%qA(i8*inreg%qC,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@aV,i64 0,i32 2)to i8*))
%qE=getelementptr inbounds i8,i8*%qD,i64 16
%qF=bitcast i8*%qE to i8*(i8*,i8*)**
%qG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qF,align 8
%qH=bitcast i8*%qD to i8**
%qI=load i8*,i8**%qH,align 8
%qJ=load i8**,i8***%iU,align 8
store i8*null,i8**%r,align 8
%qK=load i8*,i8**%qJ,align 8
%qL=call fastcc i8*%qG(i8*inreg%qI,i8*inreg%qK)
%qM=getelementptr inbounds i8,i8*%qL,i64 16
%qN=bitcast i8*%qM to i8*(i8*,i8*)**
%qO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qN,align 8
%qP=bitcast i8*%qL to i8**
%qQ=load i8*,i8**%qP,align 8
%qR=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%qS=call fastcc i8*%qO(i8*inreg%qQ,i8*inreg%qR)
store i8*%qS,i8**%h,align 8
%qT=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%qU=getelementptr inbounds i8,i8*%qT,i64 16
%qV=bitcast i8*%qU to i8*(i8*,i8*)**
%qW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qV,align 8
%qX=bitcast i8*%qT to i8**
%qY=load i8*,i8**%qX,align 8
store i8*%qY,i8**%j,align 8
%qZ=call i8*@sml_alloc(i32 inreg 20)#0
%q0=getelementptr inbounds i8,i8*%qZ,i64 -4
%q1=bitcast i8*%q0 to i32*
store i32 1342177296,i32*%q1,align 4
%q2=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%q3=bitcast i8*%qZ to i8**
store i8*%q2,i8**%q3,align 8
%q4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%q5=getelementptr inbounds i8,i8*%qZ,i64 8
%q6=bitcast i8*%q5 to i8**
store i8*%q4,i8**%q6,align 8
%q7=getelementptr inbounds i8,i8*%qZ,i64 16
%q8=bitcast i8*%q7 to i32*
store i32 3,i32*%q8,align 4
%q9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ra=call fastcc i8*%qW(i8*inreg%q9,i8*inreg%qZ)
store i8*%ra,i8**%g,align 8
%rb=call i8*@sml_alloc(i32 inreg 28)#0
%rc=getelementptr inbounds i8,i8*%rb,i64 -4
%rd=bitcast i8*%rc to i32*
store i32 1342177304,i32*%rd,align 4
%re=load i8*,i8**%g,align 8
%rf=bitcast i8*%rb to i8**
store i8*%re,i8**%rf,align 8
%rg=load i8*,i8**%h,align 8
%rh=getelementptr inbounds i8,i8*%rb,i64 8
%ri=bitcast i8*%rh to i8**
store i8*%rg,i8**%ri,align 8
%rj=load i8*,i8**%l,align 8
%rk=getelementptr inbounds i8,i8*%rb,i64 16
%rl=bitcast i8*%rk to i8**
store i8*%rj,i8**%rl,align 8
%rm=getelementptr inbounds i8,i8*%rb,i64 24
%rn=bitcast i8*%rm to i32*
store i32 7,i32*%rn,align 4
ret i8*%rb
ro:
%rp=getelementptr inbounds i8,i8*%D,i64 8
%rq=bitcast i8*%rp to i8**
%rr=load i8*,i8**%rq,align 8
%rs=bitcast i8*%rr to i8**
%rt=load i8*,i8**%rs,align 8
%ru=bitcast i8*%rt to i32*
%rv=load i32,i32*%ru,align 4
switch i32%rv,label%sB[
i32 6,label%sg
i32 11,label%rw
]
rw:
%rx=getelementptr inbounds i8,i8*%rt,i64 8
%ry=bitcast i8*%rx to i8**
%rz=load i8*,i8**%ry,align 8
%rA=bitcast i8*%rz to i8**
%rB=load i8*,i8**%rA,align 8
store i8*%rB,i8**%g,align 8
%rC=getelementptr inbounds i8,i8*%rz,i64 8
%rD=bitcast i8*%rC to i8**
%rE=load i8*,i8**%rD,align 8
%rF=bitcast i8*%rE to i32*
%rG=load i32,i32*%rF,align 4
%rH=icmp eq i32%rG,6
br i1%rH,label%rK,label%rI
rI:
store i8*null,i8**%g,align 8
%rJ=load i8*,i8**%rs,align 8
br label%sB
rK:
%rL=getelementptr inbounds i8,i8*%rE,i64 8
%rM=bitcast i8*%rL to i8**
%rN=load i8*,i8**%rM,align 8
store i8*%rN,i8**%h,align 8
%rO=getelementptr inbounds i8,i8*%rr,i64 8
%rP=bitcast i8*%rO to i8**
%rQ=load i8*,i8**%rP,align 8
store i8*%rQ,i8**%i,align 8
%rR=call i8*@sml_alloc(i32 inreg 20)#0
%rS=getelementptr inbounds i8,i8*%rR,i64 -4
%rT=bitcast i8*%rS to i32*
store i32 1342177296,i32*%rT,align 4
%rU=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%rV=bitcast i8*%rR to i8**
store i8*%rU,i8**%rV,align 8
%rW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rX=getelementptr inbounds i8,i8*%rR,i64 8
%rY=bitcast i8*%rX to i8**
store i8*%rW,i8**%rY,align 8
%rZ=getelementptr inbounds i8,i8*%rR,i64 16
%r0=bitcast i8*%rZ to i32*
store i32 3,i32*%r0,align 4
%r1=call fastcc i8*@_SMLLN18ClosureConversion214addBoundTyvarsE_725(i8*inreg%rR)
store i8*%r1,i8**%g,align 8
%r2=call i8*@sml_alloc(i32 inreg 20)#0
%r3=getelementptr inbounds i8,i8*%r2,i64 -4
%r4=bitcast i8*%r3 to i32*
store i32 1342177296,i32*%r4,align 4
%r5=load i8*,i8**%i,align 8
%r6=bitcast i8*%r2 to i8**
store i8*%r5,i8**%r6,align 8
%r7=load i8*,i8**%h,align 8
%r8=getelementptr inbounds i8,i8*%r2,i64 8
%r9=bitcast i8*%r8 to i8**
store i8*%r7,i8**%r9,align 8
%sa=getelementptr inbounds i8,i8*%r2,i64 16
%sb=bitcast i8*%sa to i32*
store i32 3,i32*%sb,align 4
%sc=load i8*,i8**%m,align 8
%sd=load i8*,i8**%r,align 8
%se=load i8*,i8**%g,align 8
%sf=call fastcc i8*@_SMLLN18ClosureConversion211compileFuncE_769(i8*inreg%sd,i8*inreg%sc,i8*inreg%se,i8*inreg%r2)
ret i8*%sf
sg:
%sh=getelementptr inbounds i8,i8*%rt,i64 8
%si=bitcast i8*%sh to i8**
%sj=load i8*,i8**%si,align 8
store i8*%sj,i8**%g,align 8
%sk=getelementptr inbounds i8,i8*%rr,i64 8
%sl=bitcast i8*%sk to i8**
%sm=load i8*,i8**%sl,align 8
store i8*%sm,i8**%h,align 8
%sn=call i8*@sml_alloc(i32 inreg 20)#0
%so=getelementptr inbounds i8,i8*%sn,i64 -4
%sp=bitcast i8*%so to i32*
store i32 1342177296,i32*%sp,align 4
%sq=load i8*,i8**%h,align 8
%sr=bitcast i8*%sn to i8**
store i8*%sq,i8**%sr,align 8
%ss=load i8*,i8**%g,align 8
%st=getelementptr inbounds i8,i8*%sn,i64 8
%su=bitcast i8*%st to i8**
store i8*%ss,i8**%su,align 8
%sv=getelementptr inbounds i8,i8*%sn,i64 16
%sw=bitcast i8*%sv to i32*
store i32 3,i32*%sw,align 4
%sx=load i8*,i8**%n,align 8
%sy=load i8*,i8**%m,align 8
%sz=load i8*,i8**%r,align 8
%sA=call fastcc i8*@_SMLLN18ClosureConversion211compileFuncE_769(i8*inreg%sz,i8*inreg%sy,i8*inreg%sx,i8*inreg%sn)
ret i8*%sA
sB:
%sC=phi i8*[%rJ,%rI],[%rt,%ro]
%sD=getelementptr inbounds i8,i8*%rr,i64 16
%sE=bitcast i8*%sD to i8**
%sF=load i8*,i8**%sE,align 8
%sG=getelementptr inbounds i8,i8*%rr,i64 8
%sH=bitcast i8*%sG to i8**
%sI=load i8*,i8**%sH,align 8
store i8*%sI,i8**%g,align 8
store i8*%sC,i8**%h,align 8
store i8*%sF,i8**%i,align 8
%sJ=getelementptr inbounds i8,i8*%sI,i64 8
%sK=bitcast i8*%sJ to i8**
%sL=load i8*,i8**%sK,align 8
store i8*%sL,i8**%j,align 8
%sM=call i8*@sml_alloc(i32 inreg 20)#0
%sN=getelementptr inbounds i8,i8*%sM,i64 -4
%sO=bitcast i8*%sN to i32*
store i32 1342177296,i32*%sO,align 4
%sP=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%sQ=bitcast i8*%sM to i8**
store i8*%sP,i8**%sQ,align 8
%sR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%sS=getelementptr inbounds i8,i8*%sM,i64 8
%sT=bitcast i8*%sS to i8**
store i8*%sR,i8**%sT,align 8
%sU=getelementptr inbounds i8,i8*%sM,i64 16
%sV=bitcast i8*%sU to i32*
store i32 3,i32*%sV,align 4
%sW=call fastcc i8*@_SMLLN18ClosureConversion27setPathE_727(i8*inreg%sM)
%sX=load i8*,i8**%h,align 8
%sY=load i8*,i8**%m,align 8
%sZ=load i8*,i8**%r,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%r,align 8
%s0=call fastcc i8*@_SMLLN18ClosureConversion210compileExpE_762(i8*inreg%sZ,i8*inreg%sY,i8*inreg%sW,i8*inreg%sX)
%s1=bitcast i8*%s0 to i8**
%s2=load i8*,i8**%s1,align 8
store i8*%s2,i8**%h,align 8
%s3=getelementptr inbounds i8,i8*%s0,i64 8
%s4=bitcast i8*%s3 to i8**
%s5=load i8*,i8**%s4,align 8
store i8*%s5,i8**%j,align 8
%s6=getelementptr inbounds i8,i8*%s0,i64 16
%s7=bitcast i8*%s6 to i8**
%s8=load i8*,i8**%s7,align 8
store i8*%s8,i8**%k,align 8
%s9=call i8*@sml_alloc(i32 inreg 36)#0
%ta=getelementptr inbounds i8,i8*%s9,i64 -4
%tb=bitcast i8*%ta to i32*
store i32 1342177312,i32*%tb,align 4
%tc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%td=bitcast i8*%s9 to i8**
store i8*%tc,i8**%td,align 8
%te=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%tf=getelementptr inbounds i8,i8*%s9,i64 8
%tg=bitcast i8*%tf to i8**
store i8*%te,i8**%tg,align 8
%th=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ti=getelementptr inbounds i8,i8*%s9,i64 16
%tj=bitcast i8*%ti to i8**
store i8*%th,i8**%tj,align 8
%tk=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tl=getelementptr inbounds i8,i8*%s9,i64 24
%tm=bitcast i8*%tl to i8**
store i8*%tk,i8**%tm,align 8
%tn=getelementptr inbounds i8,i8*%s9,i64 32
%to=bitcast i8*%tn to i32*
store i32 15,i32*%to,align 4
%tp=call fastcc i8*@_SMLLN18ClosureConversion27valbindE_555(i8*inreg%s9)
%tq=bitcast i8*%tp to i8**
%tr=load i8*,i8**%tq,align 8
store i8*%tr,i8**%g,align 8
%ts=getelementptr inbounds i8,i8*%tp,i64 8
%tt=bitcast i8*%ts to i8**
%tu=load i8*,i8**%tt,align 8
store i8*%tu,i8**%i,align 8
%tv=call i8*@sml_alloc(i32 inreg 28)#0
%tw=getelementptr inbounds i8,i8*%tv,i64 -4
%tx=bitcast i8*%tw to i32*
store i32 1342177304,i32*%tx,align 4
%ty=load i8*,i8**%h,align 8
%tz=bitcast i8*%tv to i8**
store i8*%ty,i8**%tz,align 8
%tA=load i8*,i8**%i,align 8
%tB=getelementptr inbounds i8,i8*%tv,i64 8
%tC=bitcast i8*%tB to i8**
store i8*%tA,i8**%tC,align 8
%tD=load i8*,i8**%g,align 8
%tE=getelementptr inbounds i8,i8*%tv,i64 16
%tF=bitcast i8*%tE to i8**
store i8*%tD,i8**%tF,align 8
%tG=getelementptr inbounds i8,i8*%tv,i64 24
%tH=bitcast i8*%tG to i32*
store i32 7,i32*%tH,align 4
ret i8*%tv
}
define internal fastcc i8*@_SMLLN18ClosureConversion211compileFuncE_769(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
store i8*%b,i8**%g,align 8
store i8*%c,i8**%e,align 8
store i8*%d,i8**%f,align 8
store i8*%a,i8**%q,align 8
%s=load atomic i32,i32*@sml_check_flag unordered,align 4
%t=icmp eq i32%s,0
br i1%t,label%u,label%w
u:
%v=bitcast i8*%d to i8**
br label%B
w:
call void@sml_check(i32 inreg%s)
%x=load i8*,i8**%g,align 8
%y=bitcast i8**%f to i8***
%z=load i8**,i8***%y,align 8
%A=bitcast i8**%z to i8*
br label%B
B:
%C=phi i8*[%A,%w],[%d,%u]
%D=phi i8**[%z,%w],[%v,%u]
%E=phi i8*[%x,%w],[%b,%u]
store i8*null,i8**%g,align 8
store i8*%E,i8**%i,align 8
%F=load i8*,i8**%D,align 8
store i8*%F,i8**%m,align 8
%G=getelementptr inbounds i8*,i8**%D,i64 1
%H=bitcast i8**%G to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%n,align 8
%K=getelementptr inbounds i8,i8*%C,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%o,align 8
%Q=getelementptr inbounds i8,i8*%M,i64 24
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%p,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%n,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%T)
store i8*%ad,i8**%e,align 8
%ae=load i8*,i8**%m,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%g,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
%as=call fastcc i8*@_SMLLN18ClosureConversion27setPathE_727(i8*inreg%ai)
store i8*%as,i8**%e,align 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%g,align 8
%av=getelementptr inbounds i8,i8*%as,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%h,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 24
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%j,align 8
%aB=call i8*@sml_alloc(i32 inreg 36)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177312,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aB,i64 20
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=bitcast i8*%aB to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aB,i64 16
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 4
%aN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aO=getelementptr inbounds i8,i8*%aB,i64 24
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aB,i64 32
%aR=bitcast i8*%aQ to i32*
store i32 11,i32*%aR,align 4
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=getelementptr inbounds i8,i8*%aS,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=getelementptr inbounds i8,i8*%aV,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=load i8*,i8**%o,align 8
%a0=load i8*,i8**%q,align 8
%a1=call fastcc i8*@_SMLLN18ClosureConversion215compileFuncBodyE_767(i8*inreg%a0,i8*inreg%aB,i8*inreg%aY,i8*inreg%aZ)
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%f,align 8
%a4=getelementptr inbounds i8,i8*%a1,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%g,align 8
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
%ba=load i8*,i8**%n,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=load i8*,i8**%g,align 8
%bd=getelementptr inbounds i8,i8*%a7,i64 8
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a7,i64 16
%bg=bitcast i8*%bf to i32*
store i32 3,i32*%bg,align 4
%bh=call fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_455(i8*inreg%a7)
store i8*%bh,i8**%h,align 8
%bi=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bj=call fastcc i8*@_SMLLN18ClosureConversion214computeClosureE_649(i8*inreg%bi)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
%bp=load i8*,i8**%e,align 8
%bq=getelementptr inbounds i8,i8*%bp,i64 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
%bt=call fastcc i8*%bm(i8*inreg%bo,i8*inreg%bs)
%bu=getelementptr inbounds i8,i8*%bt,i64 16
%bv=bitcast i8*%bu to i8*(i8*,i8*)**
%bw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bv,align 8
%bx=bitcast i8*%bt to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%i,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%o,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bK=call fastcc i8*%bw(i8*inreg%bJ,i8*inreg%bz)
store i8*%bK,i8**%k,align 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=icmp eq i8*%bM,null
br i1%bN,label%bZ,label%bO
bO:
%bP=bitcast i8*%bM to i8***
%bQ=load i8**,i8***%bP,align 8
%bR=load i8*,i8**%bQ,align 8
store i8*%bR,i8**%h,align 8
%bS=call i8*@sml_alloc(i32 inreg 12)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177288,i32*%bU,align 4
%bV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i32*
store i32 1,i32*%bY,align 4
br label%bZ
bZ:
%b0=phi i8*[%bS,%bO],[null,%B]
store i8*%b0,i8**%h,align 8
%b1=load i8*,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%b1,i64 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
%b5=call fastcc i8*@_SMLFN15SingletonTyEnv26btvEnvE(i8*inreg%b4)
store i8*%b5,i8**%i,align 8
%b6=bitcast i8**%e to i8***
%b7=load i8**,i8***%b6,align 8
%b8=load i8*,i8**%b7,align 8
%b9=call fastcc i8*@_SMLFN13FunEntryLabel8generateE(i8*inreg%b8)
store i8*%b9,i8**%j,align 8
%ca=load i8*,i8**%k,align 8
%cb=getelementptr inbounds i8,i8*%ca,i64 8
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
%ce=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cf=call fastcc i8*@_SMLLN18ClosureConversion28substExpE_457(i8*inreg%cd,i8*inreg%ce)
store i8*%cf,i8**%l,align 8
%cg=call i8*@sml_alloc(i32 inreg 60)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177336,i32*%ci,align 4
store i8*%cg,i8**%g,align 8
%cj=load i8*,i8**%n,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cm=getelementptr inbounds i8,i8*%cg,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%h,align 8
%cp=getelementptr inbounds i8,i8*%cg,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%j,align 8
%cs=getelementptr inbounds i8,i8*%cg,i64 24
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%o,align 8
%cv=getelementptr inbounds i8,i8*%cg,i64 32
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=load i8*,i8**%p,align 8
%cy=getelementptr inbounds i8,i8*%cg,i64 40
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=load i8*,i8**%i,align 8
%cB=getelementptr inbounds i8,i8*%cg,i64 48
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cg,i64 56
%cE=bitcast i8*%cD to i32*
store i32 127,i32*%cE,align 4
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
store i8*%cF,i8**%l,align 8
%cI=getelementptr inbounds i8,i8*%cF,i64 4
%cJ=bitcast i8*%cI to i32*
store i32 0,i32*%cJ,align 1
%cK=bitcast i8*%cF to i32*
store i32 1,i32*%cK,align 4
%cL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cM=getelementptr inbounds i8,i8*%cF,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cF,i64 16
%cP=bitcast i8*%cO to i32*
store i32 2,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%g,align 8
%cT=getelementptr inbounds i8,i8*%cQ,i64 4
%cU=bitcast i8*%cT to i32*
store i32 0,i32*%cU,align 1
%cV=bitcast i8*%cQ to i32*
store i32 1,i32*%cV,align 4
%cW=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cX=getelementptr inbounds i8,i8*%cQ,i64 8
%cY=bitcast i8*%cX to i8**
store i8*%cW,i8**%cY,align 8
%cZ=getelementptr inbounds i8,i8*%cQ,i64 16
%c0=bitcast i8*%cZ to i32*
store i32 2,i32*%c0,align 4
%c1=call i8*@sml_alloc(i32 inreg 20)#0
%c2=getelementptr inbounds i8,i8*%c1,i64 -4
%c3=bitcast i8*%c2 to i32*
store i32 1342177296,i32*%c3,align 4
store i8*%c1,i8**%r,align 8
%c4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c5=bitcast i8*%c1 to i8**
store i8*%c4,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%c1,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*null,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c1,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%db=getelementptr inbounds i8,i8*%da,i64 16
%dc=bitcast i8*%db to i8*(i8*,i8*)**
%dd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dc,align 8
%de=bitcast i8*%da to i8**
%df=load i8*,i8**%de,align 8
%dg=call fastcc i8*%dd(i8*inreg%df,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a1,i64 0,i32 2)to i8*))
%dh=getelementptr inbounds i8,i8*%dg,i64 16
%di=bitcast i8*%dh to i8*(i8*,i8*)**
%dj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%di,align 8
%dk=bitcast i8*%dg to i8**
%dl=load i8*,i8**%dk,align 8
%dm=load i8*,i8**%n,align 8
%dn=call fastcc i8*%dj(i8*inreg%dl,i8*inreg%dm)
store i8*%dn,i8**%g,align 8
%do=call i8*@sml_alloc(i32 inreg 20)#0
%dp=getelementptr inbounds i8,i8*%do,i64 -4
%dq=bitcast i8*%dp to i32*
store i32 1342177296,i32*%dq,align 4
store i8*%do,i8**%l,align 8
%dr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ds=bitcast i8*%do to i8**
store i8*%dr,i8**%ds,align 8
%dt=load i8*,i8**%p,align 8
%du=getelementptr inbounds i8,i8*%do,i64 8
%dv=bitcast i8*%du to i8**
store i8*%dt,i8**%dv,align 8
%dw=getelementptr inbounds i8,i8*%do,i64 16
%dx=bitcast i8*%dw to i32*
store i32 3,i32*%dx,align 4
%dy=call i8*@sml_alloc(i32 inreg 20)#0
%dz=bitcast i8*%dy to i32*
%dA=getelementptr inbounds i8,i8*%dy,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177296,i32*%dB,align 4
%dC=getelementptr inbounds i8,i8*%dy,i64 4
%dD=bitcast i8*%dC to i32*
store i32 0,i32*%dD,align 1
store i32 6,i32*%dz,align 4
%dE=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dF=getelementptr inbounds i8,i8*%dy,i64 8
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dy,i64 16
%dI=bitcast i8*%dH to i32*
store i32 2,i32*%dI,align 4
%dJ=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dK=getelementptr inbounds i8,i8*%dJ,i64 16
%dL=bitcast i8*%dK to i8*(i8*,i8*)**
%dM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dL,align 8
%dN=bitcast i8*%dJ to i8**
%dO=load i8*,i8**%dN,align 8
%dP=call fastcc i8*%dM(i8*inreg%dO,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a2,i64 0,i32 2)to i8*))
%dQ=getelementptr inbounds i8,i8*%dP,i64 16
%dR=bitcast i8*%dQ to i8*(i8*,i8*)**
%dS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dR,align 8
%dT=bitcast i8*%dP to i8**
%dU=load i8*,i8**%dT,align 8
%dV=bitcast i8**%k to i8***
%dW=load i8**,i8***%dV,align 8
%dX=load i8*,i8**%dW,align 8
%dY=call fastcc i8*%dS(i8*inreg%dU,i8*inreg%dX)
store i8*%dY,i8**%l,align 8
%dZ=call fastcc i8*@_SMLFN6Option6isSomeE(i32 inreg 1,i32 inreg 8)
%d0=getelementptr inbounds i8,i8*%dZ,i64 16
%d1=bitcast i8*%d0 to i8*(i8*,i8*)**
%d2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d1,align 8
%d3=bitcast i8*%dZ to i8**
%d4=load i8*,i8**%d3,align 8
%d5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d6=call fastcc i8*%d2(i8*inreg%d4,i8*inreg%d5)
%d7=bitcast i8*%d6 to i32*
%d8=load i32,i32*%d7,align 4
%d9=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ea=getelementptr inbounds i8,i8*%d9,i64 16
%eb=bitcast i8*%ea to i8*(i8*,i8*)**
%ec=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eb,align 8
%ed=bitcast i8*%d9 to i8**
%ee=load i8*,i8**%ed,align 8
%ef=call fastcc i8*%ec(i8*inreg%ee,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a3,i64 0,i32 2)to i8*))
%eg=getelementptr inbounds i8,i8*%ef,i64 16
%eh=bitcast i8*%eg to i8*(i8*,i8*)**
%ei=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eh,align 8
%ej=bitcast i8*%ef to i8**
%ek=load i8*,i8**%ej,align 8
%el=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%em=call fastcc i8*%ei(i8*inreg%ek,i8*inreg%el)
store i8*%em,i8**%g,align 8
%en=call i8*@sml_alloc(i32 inreg 36)#0
%eo=getelementptr inbounds i8,i8*%en,i64 -4
%ep=bitcast i8*%eo to i32*
store i32 1342177312,i32*%ep,align 4
store i8*%en,i8**%h,align 8
%eq=getelementptr inbounds i8,i8*%en,i64 12
%er=bitcast i8*%eq to i32*
store i32 0,i32*%er,align 1
%es=load i8*,i8**%g,align 8
%et=bitcast i8*%en to i8**
store i8*null,i8**%g,align 8
store i8*%es,i8**%et,align 8
%eu=getelementptr inbounds i8,i8*%en,i64 8
%ev=bitcast i8*%eu to i32*
store i32%d8,i32*%ev,align 4
%ew=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ex=getelementptr inbounds i8,i8*%en,i64 16
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eA=getelementptr inbounds i8,i8*%en,i64 24
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%en,i64 32
%eD=bitcast i8*%eC to i32*
store i32 13,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 28)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177304,i32*%eG,align 4
store i8*%eE,i8**%g,align 8
%eH=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=load i8*,i8**%h,align 8
%eK=getelementptr inbounds i8,i8*%eE,i64 8
%eL=bitcast i8*%eK to i8**
store i8*%eJ,i8**%eL,align 8
%eM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%eN=getelementptr inbounds i8,i8*%eE,i64 16
%eO=bitcast i8*%eN to i8**
store i8*%eM,i8**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eE,i64 24
%eQ=bitcast i8*%eP to i32*
store i32 7,i32*%eQ,align 4
%eR=load i8*,i8**%e,align 8
%eS=getelementptr inbounds i8,i8*%eR,i64 8
%eT=bitcast i8*%eS to i8**
%eU=load i8*,i8**%eT,align 8
store i8*%eU,i8**%h,align 8
%eV=bitcast i8*%eR to i8**
%eW=load i8*,i8**%eV,align 8
store i8*%eW,i8**%e,align 8
%eX=call i8*@sml_alloc(i32 inreg 20)#0
%eY=getelementptr inbounds i8,i8*%eX,i64 -4
%eZ=bitcast i8*%eY to i32*
store i32 1342177296,i32*%eZ,align 4
%e0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e1=bitcast i8*%eX to i8**
store i8*%e0,i8**%e1,align 8
%e2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%e3=getelementptr inbounds i8,i8*%eX,i64 8
%e4=bitcast i8*%e3 to i8**
store i8*%e2,i8**%e4,align 8
%e5=getelementptr inbounds i8,i8*%eX,i64 16
%e6=bitcast i8*%e5 to i32*
store i32 3,i32*%e6,align 4
%e7=call fastcc i8*@_SMLLN18ClosureConversion217makeClosureRecordE_685(i8*inreg%eX)
%e8=getelementptr inbounds i8,i8*%e7,i64 16
%e9=bitcast i8*%e8 to i8*(i8*,i8*)**
%fa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e9,align 8
%fb=bitcast i8*%e7 to i8**
%fc=load i8*,i8**%fb,align 8
store i8*%fc,i8**%h,align 8
%fd=load i8*,i8**%m,align 8
%fe=getelementptr inbounds i8,i8*%fd,i64 16
%ff=bitcast i8*%fe to i8**
%fg=load i8*,i8**%ff,align 8
store i8*%fg,i8**%e,align 8
%fh=call i8*@sml_alloc(i32 inreg 20)#0
%fi=getelementptr inbounds i8,i8*%fh,i64 -4
%fj=bitcast i8*%fi to i32*
store i32 1342177296,i32*%fj,align 4
%fk=load i8*,i8**%g,align 8
%fl=bitcast i8*%fh to i8**
store i8*%fk,i8**%fl,align 8
%fm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fn=getelementptr inbounds i8,i8*%fh,i64 8
%fo=bitcast i8*%fn to i8**
store i8*%fm,i8**%fo,align 8
%fp=getelementptr inbounds i8,i8*%fh,i64 16
%fq=bitcast i8*%fp to i32*
store i32 3,i32*%fq,align 4
%fr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fs=call fastcc i8*%fa(i8*inreg%fr,i8*inreg%fh)
%ft=getelementptr inbounds i8,i8*%fs,i64 16
%fu=bitcast i8*%ft to i8*(i8*,i8*)**
%fv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fu,align 8
%fw=bitcast i8*%fs to i8**
%fx=load i8*,i8**%fw,align 8
%fy=load i8*,i8**%o,align 8
%fz=call fastcc i8*%fv(i8*inreg%fx,i8*inreg%fy)
%fA=bitcast i8*%fz to i8**
%fB=load i8*,i8**%fA,align 8
store i8*%fB,i8**%e,align 8
%fC=getelementptr inbounds i8,i8*%fz,i64 8
%fD=bitcast i8*%fC to i8**
%fE=load i8*,i8**%fD,align 8
store i8*%fE,i8**%h,align 8
%fF=load i8**,i8***%dV,align 8
%fG=load i8*,i8**%fF,align 8
%fH=icmp eq i8*%fG,null
br i1%fH,label%fI,label%fV
fI:
store i8*null,i8**%k,align 8
%fJ=bitcast i8**%q to i8***
%fK=load i8**,i8***%fJ,align 8
store i8*null,i8**%q,align 8
%fL=load i8*,i8**%fK,align 8
store i8*%fL,i8**%i,align 8
%fM=call i8*@sml_alloc(i32 inreg 20)#0
%fN=getelementptr inbounds i8,i8*%fM,i64 -4
%fO=bitcast i8*%fN to i32*
store i32 1342177296,i32*%fO,align 4
%fP=bitcast i8*%fM to i8**
store i8*null,i8**%fP,align 8
%fQ=load i8*,i8**%i,align 8
%fR=getelementptr inbounds i8,i8*%fM,i64 8
%fS=bitcast i8*%fR to i8**
store i8*%fQ,i8**%fS,align 8
%fT=getelementptr inbounds i8,i8*%fM,i64 16
%fU=bitcast i8*%fT to i32*
store i32 3,i32*%fU,align 4
br label%gp
fV:
%fW=bitcast i8**%fF to i8***
store i8*null,i8**%q,align 8
store i8*null,i8**%k,align 8
%fX=load i8**,i8***%fW,align 8
%fY=load i8*,i8**%fX,align 8
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%i,align 8
%f1=getelementptr inbounds i8,i8*%fY,i64 8
%f2=bitcast i8*%f1 to i8**
%f3=load i8*,i8**%f2,align 8
store i8*%f3,i8**%j,align 8
%f4=call i8*@sml_alloc(i32 inreg 36)#0
%f5=getelementptr inbounds i8,i8*%f4,i64 -4
%f6=bitcast i8*%f5 to i32*
store i32 1342177312,i32*%f6,align 4
%f7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%f8=bitcast i8*%f4 to i8**
store i8*%f7,i8**%f8,align 8
%f9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ga=getelementptr inbounds i8,i8*%f4,i64 8
%gb=bitcast i8*%ga to i8**
store i8*%f9,i8**%gb,align 8
%gc=getelementptr inbounds i8,i8*%f4,i64 16
%gd=bitcast i8*%gc to i8**
store i8*null,i8**%gd,align 8
%ge=load i8*,i8**%o,align 8
%gf=getelementptr inbounds i8,i8*%f4,i64 24
%gg=bitcast i8*%gf to i8**
store i8*%ge,i8**%gg,align 8
%gh=getelementptr inbounds i8,i8*%f4,i64 32
%gi=bitcast i8*%gh to i32*
store i32 15,i32*%gi,align 4
%gj=call fastcc i8*@_SMLLN18ClosureConversion27valbindE_555(i8*inreg%f4)
%gk=bitcast i8*%gj to i8**
%gl=load i8*,i8**%gk,align 8
%gm=getelementptr inbounds i8,i8*%gj,i64 8
%gn=bitcast i8*%gm to i8**
%go=load i8*,i8**%gn,align 8
br label%gp
gp:
%gq=phi i8*[%fQ,%fI],[%go,%fV]
%gr=phi i8*[null,%fI],[%gl,%fV]
store i8*%gr,i8**%i,align 8
store i8*%gq,i8**%j,align 8
%gs=call i8*@sml_alloc(i32 inreg 20)#0
%gt=getelementptr inbounds i8,i8*%gs,i64 -4
%gu=bitcast i8*%gt to i32*
store i32 1342177296,i32*%gu,align 4
store i8*%gs,i8**%k,align 8
%gv=bitcast i8*%gs to i64*
store i64 0,i64*%gv,align 4
%gw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gx=getelementptr inbounds i8,i8*%gs,i64 8
%gy=bitcast i8*%gx to i8**
store i8*%gw,i8**%gy,align 8
%gz=getelementptr inbounds i8,i8*%gs,i64 16
%gA=bitcast i8*%gz to i32*
store i32 2,i32*%gA,align 4
%gB=call i8*@sml_alloc(i32 inreg 36)#0
%gC=getelementptr inbounds i8,i8*%gB,i64 -4
%gD=bitcast i8*%gC to i32*
store i32 1342177312,i32*%gD,align 4
%gE=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gF=bitcast i8*%gB to i8**
store i8*%gE,i8**%gF,align 8
%gG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gH=getelementptr inbounds i8,i8*%gB,i64 8
%gI=bitcast i8*%gH to i8**
store i8*%gG,i8**%gI,align 8
%gJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gK=getelementptr inbounds i8,i8*%gB,i64 16
%gL=bitcast i8*%gK to i8**
store i8*%gJ,i8**%gL,align 8
%gM=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%gN=getelementptr inbounds i8,i8*%gB,i64 24
%gO=bitcast i8*%gN to i8**
store i8*%gM,i8**%gO,align 8
%gP=getelementptr inbounds i8,i8*%gB,i64 32
%gQ=bitcast i8*%gP to i32*
store i32 15,i32*%gQ,align 4
%gR=call fastcc i8*@_SMLLN18ClosureConversion27valbindE_555(i8*inreg%gB)
%gS=bitcast i8*%gR to i8**
%gT=load i8*,i8**%gS,align 8
store i8*%gT,i8**%g,align 8
%gU=getelementptr inbounds i8,i8*%gR,i64 8
%gV=bitcast i8*%gU to i8**
%gW=load i8*,i8**%gV,align 8
store i8*%gW,i8**%h,align 8
%gX=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%gY=getelementptr inbounds i8,i8*%gX,i64 16
%gZ=bitcast i8*%gY to i8*(i8*,i8*)**
%g0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gZ,align 8
%g1=bitcast i8*%gX to i8**
%g2=load i8*,i8**%g1,align 8
store i8*%g2,i8**%l,align 8
%g3=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%g4=getelementptr inbounds i8,i8*%g3,i64 16
%g5=bitcast i8*%g4 to i8*(i8*,i8*)**
%g6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g5,align 8
%g7=bitcast i8*%g3 to i8**
%g8=load i8*,i8**%g7,align 8
store i8*%g8,i8**%k,align 8
%g9=call i8*@sml_alloc(i32 inreg 20)#0
%ha=getelementptr inbounds i8,i8*%g9,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177296,i32*%hb,align 4
%hc=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%hd=bitcast i8*%g9 to i8**
store i8*%hc,i8**%hd,align 8
%he=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hf=getelementptr inbounds i8,i8*%g9,i64 8
%hg=bitcast i8*%hf to i8**
store i8*%he,i8**%hg,align 8
%hh=getelementptr inbounds i8,i8*%g9,i64 16
%hi=bitcast i8*%hh to i32*
store i32 3,i32*%hi,align 4
%hj=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hk=call fastcc i8*%g6(i8*inreg%hj,i8*inreg%g9)
store i8*%hk,i8**%e,align 8
%hl=call i8*@sml_alloc(i32 inreg 20)#0
%hm=getelementptr inbounds i8,i8*%hl,i64 -4
%hn=bitcast i8*%hm to i32*
store i32 1342177296,i32*%hn,align 4
%ho=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hp=bitcast i8*%hl to i8**
store i8*%ho,i8**%hp,align 8
%hq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hr=getelementptr inbounds i8,i8*%hl,i64 8
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hl,i64 16
%hu=bitcast i8*%ht to i32*
store i32 3,i32*%hu,align 4
%hv=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%hw=call fastcc i8*%g0(i8*inreg%hv,i8*inreg%hl)
store i8*%hw,i8**%e,align 8
%hx=call i8*@sml_alloc(i32 inreg 20)#0
%hy=getelementptr inbounds i8,i8*%hx,i64 -4
%hz=bitcast i8*%hy to i32*
store i32 1342177296,i32*%hz,align 4
%hA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hB=bitcast i8*%hx to i8**
store i8*%hA,i8**%hB,align 8
%hC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hD=getelementptr inbounds i8,i8*%hx,i64 8
%hE=bitcast i8*%hD to i8**
store i8*%hC,i8**%hE,align 8
%hF=getelementptr inbounds i8,i8*%hx,i64 16
%hG=bitcast i8*%hF to i32*
store i32 3,i32*%hG,align 4
%hH=call fastcc i8*@_SMLLN18ClosureConversion212extendVarEnvE_713(i8*inreg%hx)
store i8*%hH,i8**%f,align 8
%hI=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%hJ=getelementptr inbounds i8,i8*%hI,i64 16
%hK=bitcast i8*%hJ to i8*(i8*,i8*)**
%hL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hK,align 8
%hM=bitcast i8*%hI to i8**
%hN=load i8*,i8**%hM,align 8
store i8*%hN,i8**%h,align 8
%hO=call i8*@sml_alloc(i32 inreg 20)#0
%hP=getelementptr inbounds i8,i8*%hO,i64 -4
%hQ=bitcast i8*%hP to i32*
store i32 1342177296,i32*%hQ,align 4
%hR=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hS=bitcast i8*%hO to i8**
store i8*%hR,i8**%hS,align 8
%hT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hU=getelementptr inbounds i8,i8*%hO,i64 8
%hV=bitcast i8*%hU to i8**
store i8*%hT,i8**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hO,i64 16
%hX=bitcast i8*%hW to i32*
store i32 3,i32*%hX,align 4
%hY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hZ=call fastcc i8*%hL(i8*inreg%hY,i8*inreg%hO)
store i8*%hZ,i8**%g,align 8
%h0=call i8*@sml_alloc(i32 inreg 28)#0
%h1=getelementptr inbounds i8,i8*%h0,i64 -4
%h2=bitcast i8*%h1 to i32*
store i32 1342177304,i32*%h2,align 4
%h3=load i8*,i8**%e,align 8
%h4=bitcast i8*%h0 to i8**
store i8*%h3,i8**%h4,align 8
%h5=load i8*,i8**%f,align 8
%h6=getelementptr inbounds i8,i8*%h0,i64 8
%h7=bitcast i8*%h6 to i8**
store i8*%h5,i8**%h7,align 8
%h8=load i8*,i8**%g,align 8
%h9=getelementptr inbounds i8,i8*%h0,i64 16
%ia=bitcast i8*%h9 to i8**
store i8*%h8,i8**%ia,align 8
%ib=getelementptr inbounds i8,i8*%h0,i64 24
%ic=bitcast i8*%ib to i32*
store i32 7,i32*%ic,align 4
ret i8*%h0
}
define internal fastcc i8*@_SMLLN18ClosureConversion218compileRecfunBindsE_770(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
v:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%n,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%t,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%e,align 8
%s=load i8*,i8**%d,align 8
br label%t
t:
%u=phi i8*[%s,%q],[%b,%v]
%w=phi i8*[%r,%q],[%c,%v]
store i8*%w,i8**%j,align 8
store i8*%u,i8**%g,align 8
%x=icmp eq i8*%w,null
%y=bitcast i8*%w to i8**
br i1%x,label%z,label%A
z:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*)
A:
%B=bitcast i8*%w to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%k,align 8
%E=bitcast i8**%j to i8***
%F=load i8*,i8**%y,align 8
%G=getelementptr inbounds i8,i8*%F,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%h,align 8
%J=load i8*,i8**%y,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%l,align 8
%N=load i8*,i8**%y,align 8
%O=getelementptr inbounds i8,i8*%N,i64 24
%P=bitcast i8*%O to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=load i8*,i8**%y,align 8
%T=getelementptr inbounds i8,i8*%S,i64 24
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=getelementptr inbounds i8,i8*%V,i64 24
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%e,align 8
%Z=load i8*,i8**%y,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 24
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%f,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call fastcc i8*@_SMLLN18ClosureConversion214addBoundTyvarsE_725(i8*inreg%ag)
store i8*%aq,i8**%g,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_723(i8*inreg%ar)
store i8*%aB,i8**%g,align 8
%aC=load i8*,i8**%k,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%h,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call fastcc i8*@_SMLLN18ClosureConversion27setPathE_727(i8*inreg%aG)
store i8*%aQ,i8**%g,align 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%h,align 8
%aT=getelementptr inbounds i8,i8*%aQ,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%i,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 24
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%m,align 8
%aZ=call i8*@sml_alloc(i32 inreg 36)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177312,i32*%a1,align 4
%a2=getelementptr inbounds i8,i8*%aZ,i64 20
%a3=bitcast i8*%a2 to i32*
store i32 0,i32*%a3,align 1
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=bitcast i8*%aZ to i8**
store i8*%a4,i8**%a5,align 8
%a6=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aZ,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 0,i32*%ba,align 4
%bb=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bc=getelementptr inbounds i8,i8*%aZ,i64 24
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%aZ,i64 32
%bf=bitcast i8*%be to i32*
store i32 11,i32*%bf,align 4
%bg=load i8**,i8***%E,align 8
%bh=load i8*,i8**%bg,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 24
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
%bl=getelementptr inbounds i8,i8*%bk,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
%bo=load i8*,i8**%f,align 8
%bp=load i8*,i8**%n,align 8
%bq=call fastcc i8*@_SMLLN18ClosureConversion215compileFuncBodyE_767(i8*inreg%bp,i8*inreg%aZ,i8*inreg%bn,i8*inreg%bo)
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bq,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%i,align 8
%bw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bx=getelementptr inbounds i8,i8*%bw,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
%bA=load i8*,i8**%g,align 8
%bB=load i8*,i8**%n,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%n,align 8
%bC=call fastcc i8*@_SMLLN18ClosureConversion218compileRecfunBindsE_770(i8*inreg%bB,i8*inreg%bA,i8*inreg%bz)
%bD=bitcast i8*%bC to i8**
%bE=load i8*,i8**%bD,align 8
store i8*%bE,i8**%g,align 8
%bF=getelementptr inbounds i8,i8*%bC,i64 8
%bG=bitcast i8*%bF to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%j,align 8
%bI=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bJ=getelementptr inbounds i8,i8*%bI,i64 16
%bK=bitcast i8*%bJ to i8*(i8*,i8*)**
%bL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bK,align 8
%bM=bitcast i8*%bI to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%m,align 8
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bO,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
%bY=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bZ=call fastcc i8*%bL(i8*inreg%bY,i8*inreg%bO)
store i8*%bZ,i8**%g,align 8
%b0=call i8*@sml_alloc(i32 inreg 36)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177312,i32*%b2,align 4
store i8*%b0,i8**%h,align 8
%b3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b6=getelementptr inbounds i8,i8*%b0,i64 8
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 16
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cc=getelementptr inbounds i8,i8*%b0,i64 24
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b0,i64 32
%cf=bitcast i8*%ce to i32*
store i32 15,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 28)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177304,i32*%ci,align 4
store i8*%cg,i8**%d,align 8
%cj=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cm=getelementptr inbounds i8,i8*%cg,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cp=getelementptr inbounds i8,i8*%cg,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cg,i64 24
%cs=bitcast i8*%cr to i32*
store i32 7,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 20)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177296,i32*%cv,align 4
store i8*%ct,i8**%e,align 8
%cw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cz=getelementptr inbounds i8,i8*%ct,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%ct,i64 16
%cC=bitcast i8*%cB to i32*
store i32 3,i32*%cC,align 4
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
%cG=load i8*,i8**%g,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%e,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
ret i8*%cD
}
define internal fastcc i8*@_SMLLN18ClosureConversion215compileDeclListE_832(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
t:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%k,align 8
store i8*%b,i8**%e,align 8
store i8*%c,i8**%f,align 8
store i8*%d,i8**%g,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%r,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%g,align 8
%p=load i8*,i8**%f,align 8
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%n],[%b,%t]
%u=phi i8*[%p,%n],[%c,%t]
%v=phi i8*[%o,%n],[%d,%t]
store i8*null,i8**%g,align 8
store i8*%v,i8**%h,align 8
store i8*null,i8**%f,align 8
store i8*%u,i8**%i,align 8
store i8*%s,i8**%j,align 8
%w=icmp eq i8*%v,null
br i1%w,label%x,label%M
x:
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
%y=bitcast i8**%k to i8***
%z=load i8**,i8***%y,align 8
store i8*null,i8**%k,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i8**
store i8*null,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 7,i32*%L,align 4
ret i8*%B
M:
%N=load i8*,i8**%k,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%v to i8**
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*@_SMLLN18ClosureConversion211compileDeclE_768(i8*inreg%Q,i8*inreg%s,i8*inreg%u,i8*inreg%S)
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%T,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 16
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%g,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%f,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_719(i8*inreg%ac)
%an=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%j,align 8
%as=load i8*,i8**%k,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%at=call fastcc i8*@_SMLLN18ClosureConversion215compileDeclListE_832(i8*inreg%as,i8*inreg%ar,i8*inreg%am,i8*inreg%aq)
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%h,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%i,align 8
%az=getelementptr inbounds i8,i8*%at,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%j,align 8
%aC=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%k,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aT=call fastcc i8*%aF(i8*inreg%aS,i8*inreg%aI)
store i8*%aT,i8**%e,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=call fastcc i8*@_SMLLN18ClosureConversion212extendVarEnvE_713(i8*inreg%aU)
store i8*%a4,i8**%f,align 8
%a5=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%a6=getelementptr inbounds i8,i8*%a5,i64 16
%a7=bitcast i8*%a6 to i8*(i8*,i8*)**
%a8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a7,align 8
%a9=bitcast i8*%a5 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%h,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
%be=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bm=call fastcc i8*%a8(i8*inreg%bl,i8*inreg%bb)
store i8*%bm,i8**%g,align 8
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
%bq=load i8*,i8**%e,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%f,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%g,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
ret i8*%bn
}
define internal fastcc i8*@_SMLLN18ClosureConversion27convertE_836(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 1,label%am
i32 0,label%I
]
q:
call void@sml_matchcomp_bug()
%r=load i8*,i8**@_SMLZ5Match,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[88x i8]}>,<{[4x i8],i32,[88x i8]}>*@a6,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=getelementptr inbounds i8,i8*%n,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%b,align 8
%M=getelementptr inbounds i8,i8*%k,i64 8
%N=bitcast i8*%M to i8***
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%c,align 8
%Q=getelementptr inbounds i8*,i8**%O,i64 1
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
ret i8*%ac
am:
%an=getelementptr inbounds i8,i8*%n,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%b,align 8
%aq=getelementptr inbounds i8,i8*%k,i64 8
%ar=bitcast i8*%aq to i8***
%as=load i8**,i8***%ar,align 8
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%c,align 8
%au=getelementptr inbounds i8*,i8**%as,i64 1
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%d,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%e,align 8
%az=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%e,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%d,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
ret i8*%aG
}
define internal fastcc i8*@_SMLLN18ClosureConversion27convertE_840(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%g to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**@_SMLZN15SingletonTyEnv28emptyEnvE,align 8
store i8*%r,i8**%e,align 8
%s=load i8*,i8**%q,align 8
store i8*%s,i8**%f,align 8
%t=call i8*@sml_alloc(i32 inreg 36)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177312,i32*%v,align 4
store i8*%t,i8**%d,align 8
call void@llvm.memset.p0i8.i64(i8*%t,i8 0,i64 24,i1 false)
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%t,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%t,i64 16
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%t,i64 24
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%t,i64 32
%F=bitcast i8*%E to i32*
store i32 11,i32*%F,align 4
%G=call fastcc i8*@_SMLFN12RecordLayout19newComputationAccumE(i32 inreg 0)
store i8*%G,i8**%f,align 8
%H=call i8*@sml_alloc(i32 inreg 8)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 805306376,i32*%J,align 4
store i8*%H,i8**%h,align 8
%K=bitcast i8*%H to i64*
store i64 0,i64*%K,align 1
%L=call fastcc i8*@_SMLFN5VarID3Map5emptyE(i32 inreg 1,i32 inreg 8)
%M=load i8*,i8**%h,align 8
%N=bitcast i8*%M to i8**
call void@sml_write(i8*inreg%M,i8**inreg%N,i8*inreg%L)#0
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%e,align 8
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*@_SMLLN18ClosureConversion215compileDeclListE_832(i8*inreg%ab,i8*inreg%O,i8*inreg%ad,i8*inreg%ac)
store i8*%ae,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%c,align 8
%ai=bitcast i8**%e to i8***
%aj=load i8**,i8***%ai,align 8
store i8*null,i8**%e,align 8
%ak=load i8*,i8**%aj,align 8
%al=call fastcc i8*@_SMLFN12RecordLayout12extractDeclsE(i8*inreg%ak)
%am=icmp eq i8*%al,null
br i1%am,label%aH,label%an
an:
store i8*null,i8**%d,align 8
%ao=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%ao,i8**%c,align 8
%ap=call i8*@sml_alloc(i32 inreg 28)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177304,i32*%ar,align 4
store i8*%ap,i8**%d,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[87x i8]}>,<{[4x i8],i32,[87x i8]}>*@a4,i64 0,i32 2,i64 0),i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a5,i64 0,i32 2,i64 0),i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i32*
store i32 7,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 60)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177336,i32*%aC,align 4
%aD=getelementptr inbounds i8,i8*%aA,i64 56
%aE=bitcast i8*%aD to i32*
store i32 1,i32*%aE,align 4
%aF=load i8*,i8**%d,align 8
%aG=bitcast i8*%aA to i8**
store i8*%aF,i8**%aG,align 8
call void@sml_raise(i8*inreg%aA)#1
unreachable
aH:
%aI=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*%aL(i8*inreg%aN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@a7,i64 0,i32 2)to i8*))
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
%aU=call fastcc i8*%aR(i8*inreg%aT,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*))
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=bitcast i8**%d to i8***
%a1=load i8**,i8***%a0,align 8
store i8*null,i8**%d,align 8
%a2=load i8*,i8**%a1,align 8
%a3=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a2)
%a4=bitcast i8*%a3 to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%d,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%e,align 8
%a9=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%a9,i8**%f,align 8
%ba=load i8*,i8**@_SMLZN12BuiltinTypes6unitTyE,align 8
store i8*%ba,i8**%g,align 8
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
store i8*%bb,i8**%h,align 8
%be=bitcast i8*%bb to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@a9,i64 0,i32 2)to i8*),i8**%be,align 8
%bf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bb,i64 24
%bm=bitcast i8*%bl to i32*
store i32 7,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
store i8*%bn,i8**%f,align 8
%bq=getelementptr inbounds i8,i8*%bn,i64 4
%br=bitcast i8*%bq to i32*
store i32 0,i32*%br,align 1
%bs=bitcast i8*%bn to i32*
store i32 3,i32*%bs,align 4
%bt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i32*
store i32 2,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
%bB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call fastcc i8*@_SMLLN18ClosureConversion23LetE_559(i8*inreg%by)
store i8*%bI,i8**%c,align 8
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
%bM=load i8*,i8**%c,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bJ,i64 24
%bV=bitcast i8*%bU to i32*
store i32 7,i32*%bV,align 4
ret i8*%bJ
}
define fastcc i8*@_SMLFN18ClosureConversion27convertE(i8*inreg%a)local_unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8**,i8***bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar08b2cfa4e142c0c2_ClosureConversion2,i64 0,i32 2,i64 0)to i8***),align 8
%k=load i8*,i8**%j,align 8
%l=tail call fastcc i8*@_SMLLN18ClosureConversion27convertE_840(i8*inreg%k,i8*inreg%h)
ret i8*%l
}
define internal fastcc i8*@_SMLLN18ClosureConversion26newVarE_842(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion26newVarE_402(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion28makeBindE_847(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN18ClosureConversion28unionSetE_851(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion28minusSetE_853(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN18ClosureConversion28minusSetE_428(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLL3bv2_855(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3bv2_448(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_859(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion210freeVarsFnE_453(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL6subst2_861(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL6subst2_482(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL9fieldList_877(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL9fieldList_542(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL10bitmapList_878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL10bitmapList_544(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL15initialElements_880(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL15initialElements_549(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion23LetE_883(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion23LetE_557(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL8recordTy_889(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL8recordTy_594(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_890(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#4 gc"smlsharp"{
%e=bitcast i8*%b to i32*
%f=load i32,i32*%e,align 4
%g=bitcast i8*%c to i32*
%h=load i32,i32*%g,align 4
%i=bitcast i8*%d to i32*
%j=load i32,i32*%i,align 4
%k=tail call fastcc i8*@_SMLLN18ClosureConversion218computeTupleLayoutE_600(i8*inreg%a,i32 inreg%f,i32 inreg%h,i32 inreg%j)
ret i8*%k
}
define internal fastcc i8*@_SMLL12recordFields_894(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL12recordFields_607(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion211tagSizeVarsE_897(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion211tagSizeVarsE_617(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion210sortFieldsE_900(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN18ClosureConversion210sortFieldsE_626(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_909(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion222decomposeClosureRecordE_689(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion212extendVarEnvE_911(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_913(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion29extendEnvE_914(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_916(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion212addBoundVarsE_721(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN18ClosureConversion28getFunTyE_924(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion216exFunCodeEntryTyE_926(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL4func_929(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL7entryTy_930(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_931(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_932(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN18ClosureConversion210compileExpE_933(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLL3var_934(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL11codeEntryTy_935(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 8
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL11codeEntryTy_936(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL12recfunVarEnv_937(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL12recfunVarEnv_803(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL2fv_938(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL2fv_805(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL13closureEnvVar_939(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL7varenv1_941(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL7varenv1_816(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL11recfunBinds_942(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL11recfunBinds_818(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL6varEnv_943(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL6varEnv_820(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL5funTy_944(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLL7closure_945(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLL7closure_946(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=getelementptr inbounds i8,i8*%b,i64 16
%d=bitcast i8*%c to i8**
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN18ClosureConversion27convertE_947(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN18ClosureConversion27convertE_836(i8*inreg%b)
ret i8*%c
}
declare void@llvm.memcpy.p0i8.p0i8.i32(i8*,i8*,i32,i1)#0
declare void@llvm.memset.p0i8.i32(i8*,i8,i32,i1)#0
declare void@llvm.lifetime.start.p0i8(i64,i8*)#0
declare void@llvm.lifetime.end.p0i8(i64,i8*)#0
declare void@llvm.memset.p0i8.i64(i8*,i8,i64,i1)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
