@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN14ElaborateError14EndWithInfixIDE=external local_unnamed_addr global i8*
@_SMLZN14ElaborateError16BeginWithInfixIDE=external local_unnamed_addr global i8*
@_SMLZN14ElaborateError23InvalidFixityPrecedenceE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL11NegNotUnaryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL13AppInSQLQueryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL13CrossJoinNameE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL15TupleInSQLQueryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL20DuplicateSQLSetLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL20UnnaturalNaturalJoinE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL21DuplicateSQLFromLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL22NumberOfSQLInsertLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL23DuplicateSQLInsertLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL23DuplicateSQLSelectLabelE=external local_unnamed_addr global i8*
@_SMLZN3Bug3BugE=external local_unnamed_addr global i8*
@_SMLZN3Loc5nolocE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"SMLSharp_SQL_Prim\00"}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"Op\00"}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@b,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"::\00"}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@e,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"nil\00"}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@g,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"SOME\00"}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@i,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@j,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"NONE\00"}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@m,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@n,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@o,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"true\00"}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@q,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@u,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@r,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@s,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"Bool\00"}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"false\00"}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@v,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@u,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@w,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@x,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"True\00"}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@z,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@A,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@B,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"False\00"}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@D,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@E,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@F,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"Unknown\00"}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@H,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@I,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@J,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"db\00"}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@L,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@M,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"command\00"}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@O,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@P,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"Option\00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"isSome\00"}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@S,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@T,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@U,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"not3\00"}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@W,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@X,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"and3\00"}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aa,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ab,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ac,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"or3\00"}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@ae,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@af,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ag,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"fromBool\00"}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@ai,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ak,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"isTrue\00"}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@am,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@an,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ao,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"Bool3\00"}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"is\00"}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@ar,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@as,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"map\00"}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@av,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ax,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"filter\00"}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@az,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"@\00"}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@aD,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"hd\00"}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@aH,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"take\00"}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aL,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"List\00"}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"drop\00"}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aQ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"onlyOne\00"}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@aU,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aW,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,[11x i8]}><{[4x i8]zeroinitializer,i32 -2147483637,[11x i8]c"isNotEmpty\00"}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[11x i8]}>,<{[4x i8],i32,[11x i8]}>*@aY,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"prod\00"}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@a2,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"join\00"}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@a6,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ba=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"nub\00"}>,align 8
@bb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@ba,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bc,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@be=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"sortBy\00"}>,align 8
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@be,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bf,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bg,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bi=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"List2\00"}>,align 8
@bj=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"groupBy\00"}>,align 8
@bk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bj,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bn=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"compare\00"}>,align 8
@bo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bn,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bp=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bo,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bq=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"comparePair\00"}>,align 8
@br=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@bq,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bs=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@bu,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@br,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bt=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bs,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bu=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"General2\00"}>,align 8
@bv=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"reverseOrder\00"}>,align 8
@bw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bv,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@bu,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@by=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bx,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bz=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"fromSQL\00"}>,align 8
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bz,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bC=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"toSQL\00"}>,align 8
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bC,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bF=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"dummyCursor\00"}>,align 8
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@bF,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bI=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"newCursor\00"}>,align 8
@bJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@bI,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"sqlserver\00"}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@bL,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bO=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"sqleval\00"}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bO,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"closeCommand\00"}>,align 8
@bS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bR,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bU=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"ty\00"}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@bU,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"CONST\00"}>,align 8
@bY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bX,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"INT\00"}>,align 8
@b2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@b1,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"WORD\00"}>,align 8
@b6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@b5,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"REAL\00"}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@b9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ca,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"STRING\00"}>,align 8
@ce=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cd,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ce,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cf,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ch=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"CHAR\00"}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@ch,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ci,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ck=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"BOOL\00"}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@cl,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cm,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h6,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cp,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cs=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"COLUMN1\00"}>,align 8
@ct=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@cs,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ct,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cu,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cw=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"COLUMN2\00"}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@cw,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cx,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cy,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"EXISTS\00"}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cA,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cC,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cE=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"IS\00"}>,align 8
@cF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@cE,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cI=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"IS_NOT\00"}>,align 8
@cJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cI,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cK,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cM=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"NOT\00"}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@cM,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cO,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cQ=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"AND\00"}>,align 8
@cR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@cQ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"OR\00"}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@cU,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cW,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cY=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"EXP_SUBQUERY\00"}>,align 8
@cZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@cY,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c2=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"FUNCALL\00"}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@c2,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c6=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"OP2\00"}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@c6,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@da=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"UNARYOP\00"}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@da,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@db,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dc,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"WHERE\00"}>,align 8
@df=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@de,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@df,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dg,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"TABLEID\00"}>,align 8
@dj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@di,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"TABLE\00"}>,align 8
@dn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@dm,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@do=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@do,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dq=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"TABLE_SUBQUERY\00"}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@dq,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ds=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dr,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ds,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@du=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"TABLE_AS\00"}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@du,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dv,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dy=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"JOIN\00"}>,align 8
@dz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dy,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dC=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"INNERJOIN\00"}>,align 8
@dD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dC,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dG=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"CROSSJOIN\00"}>,align 8
@dH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dG,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dH,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dK=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"NATURALJOIN\00"}>,align 8
@dL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@dK,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dO=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"FROM\00"}>,align 8
@dP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dO,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dS=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"ASC\00"}>,align 8
@dT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@dS,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dT,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dW=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"DESC\00"}>,align 8
@dX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dW,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dX,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d0=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"ORDERBY\00"}>,align 8
@d1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@d0,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d1,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d4=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"OFFSET\00"}>,align 8
@d5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@d4,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d5,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d8=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"LIMIT\00"}>,align 8
@d9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@d8,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ea=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d9,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ea,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ec=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"GROUPBY\00"}>,align 8
@ed=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@ec,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ee=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ed,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ef=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ee,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eg=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"HAVING\00"}>,align 8
@eh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@eg,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ei=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eh,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ej=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ei,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ek=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"ALL\00"}>,align 8
@el=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@ek,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@em=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@el,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@en=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@em,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eo=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"DISTINCT\00"}>,align 8
@ep=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@eo,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ep,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@er=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@es=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"SELECT\00"}>,align 8
@et=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@es,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@et,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ev=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eu,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ew=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"QUERY\00"}>,align 8
@ex=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ew,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ey=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ex,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ez=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ey,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eA=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"QUERY_COMMAND\00"}>,align 8
@eB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@eA,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eC,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eE=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"DEFAULT\00"}>,align 8
@eF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@eE,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eI=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"VALUE\00"}>,align 8
@eJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@eI,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eK,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eM=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"INSERT\00"}>,align 8
@eN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@eM,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eO,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eQ=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"INSERT_VALUES\00"}>,align 8
@eR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@eQ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eU=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"INSERT_SELECT\00"}>,align 8
@eV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@eU,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eW,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eY=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"UPDATE\00"}>,align 8
@eZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@eY,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@e0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e2=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"DELETE\00"}>,align 8
@e3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@e2,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@e4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e6=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"BEGIN\00"}>,align 8
@e7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@e6,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@e8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fa=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"COMMIT\00"}>,align 8
@fb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@fa,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fc,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fe=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"ROLLBACK\00"}>,align 8
@ff=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fe,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ff,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fg,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fi=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"Ast\00"}>,align 8
@fj=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"SEQ\00"}>,align 8
@fk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fj,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fn=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"EXPty\00"}>,align 8
@fo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@fn,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fp=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fo,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fq=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"WHRty\00"}>,align 8
@fr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@fq,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fs=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fr,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ft=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"FROMty\00"}>,align 8
@fu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@ft,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fu,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fw=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"ORDERBYty\00"}>,align 8
@fx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@fw,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fy=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fx,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fz=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"OFFSETty\00"}>,align 8
@fA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fz,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fC=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"LIMITty\00"}>,align 8
@fD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@fC,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fF=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"SELECTty\00"}>,align 8
@fG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fF,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fI=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"QUERYty\00"}>,align 8
@fJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@fI,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fL=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"COMMANDty\00"}>,align 8
@fM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@fL,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fO=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"DBty\00"}>,align 8
@fP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@fO,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL6TyWildE_1137 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6TyWildE_2682 to void(...)*),i32 -2147483647}>,align 8
@fS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7PatWildE_1147 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7PatWildE_2685 to void(...)*),i32 -2147483647}>,align 8
@fT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL4PairE_1201 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4PairE_2700 to void(...)*),i32 -2147483647}>,align 8
@fU=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"1\00"}>,align 8
@fV=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"2\00"}>,align 8
@fW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL4ConsE_1236 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4ConsE_2709 to void(...)*),i32 -2147483647}>,align 8
@fX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL4ListE_1238 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4ListE_2710 to void(...)*),i32 -2147483647}>,align 8
@fY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL6OptionE_1242 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6OptionE_2712 to void(...)*),i32 -2147483647}>,align 8
@fZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Fun__and3E_1250 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__and3E_2716 to void(...)*),i32 -2147483647}>,align 8
@f0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7Fun__or3E_1254 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__or3E_2718 to void(...)*),i32 -2147483647}>,align 8
@f1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1258 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2720 to void(...)*),i32 -2147483647}>,align 8
@f2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Fun__isSomeE_1260 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__isSomeE_2721 to void(...)*),i32 -2147483647}>,align 8
@f3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7Fun__mapE_1264 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__mapE_2723 to void(...)*),i32 -2147483647}>,align 8
@f4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1269 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_2725 to void(...)*),i32 -2147483647}>,align 8
@f5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1271 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_2726 to void(...)*),i32 -2147483647}>,align 8
@f6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Fun__appendE_1277 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__appendE_2728 to void(...)*),i32 -2147483647}>,align 8
@f7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Fun__takeE_1281 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__takeE_2730 to void(...)*),i32 -2147483647}>,align 8
@f8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Fun__dropE_1285 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__dropE_2732 to void(...)*),i32 -2147483647}>,align 8
@f9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Fun__prodE_1289 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__prodE_2734 to void(...)*),i32 -2147483647}>,align 8
@ga=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Fun__joinE_1293 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__joinE_2736 to void(...)*),i32 -2147483647}>,align 8
@gb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7Fun__nubE_1298 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__nubE_2738 to void(...)*),i32 -2147483647}>,align 8
@gc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_1303 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_2740 to void(...)*),i32 -2147483647}>,align 8
@gd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_1309 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_2742 to void(...)*),i32 -2147483647}>,align 8
@ge=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11Fun__compareE_1315 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__compareE_2744 to void(...)*),i32 -2147483647}>,align 8
@gf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL15Fun__comparePairE_1319 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL15Fun__comparePairE_2746 to void(...)*),i32 -2147483647}>,align 8
@gg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16Fun__reverseOrderE_1323 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16Fun__reverseOrderE_2748 to void(...)*),i32 -2147483647}>,align 8
@gh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11Fun__fromSQLE_1327 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__fromSQLE_2750 to void(...)*),i32 -2147483647}>,align 8
@gi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1332 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_2752 to void(...)*),i32 -2147483647}>,align 8
@gj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13Fun__sqlserverE_1336 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13Fun__sqlserverE_2754 to void(...)*),i32 -2147483647}>,align 8
@gk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16Var__closeCommandE_1340 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16Var__closeCommandE_2756 to void(...)*),i32 -2147483647}>,align 8
@gl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8Con__JOINE_1391 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__JOINE_2773 to void(...)*),i32 -2147483647}>,align 8
@gm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13Con__INNERJOINE_1393 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13Con__INNERJOINE_2774 to void(...)*),i32 -2147483647}>,align 8
@gn=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"fetch\00"}>,align 8
@go=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Con__OFFSETE_1408 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__OFFSETE_2779 to void(...)*),i32 -2147483647}>,align 8
@gp=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"limit\00"}>,align 8
@gq=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"offset\00"}>,align 8
@gr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Con__SELECTE_1419 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__SELECTE_2783 to void(...)*),i32 -2147483647}>,align 8
@gs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_1426 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_2786 to void(...)*),i32 -2147483647}>,align 8
@gt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10Con__UPDATEE_1432 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__UPDATEE_2788 to void(...)*),i32 -2147483647}>,align 8
@gu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5unionE_1458 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5unionE_2801 to void(...)*),i32 -2147483647}>,align 8
@gv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5unionE_1460 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5unionE_2802 to void(...)*),i32 -2147483647}>,align 8
@gw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL9listToSetE_1462 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9listToSetE_2803 to void(...)*),i32 -2147483647}>,align 8
@gx=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:684.6(19094)\00"}>,align 8
@gy=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:794.2(22889)\00"}>,align 8
@gz=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:827.6(24105)\00"}>,align 8
@gA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*null,i8*null,i32 3}>,align 8
@gB=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:848.6(24794)\00"}>,align 8
@gC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14tableListToPatE_1498 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14tableListToPatE_2815 to void(...)*),i32 -2147483647}>,align 8
@gD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12flattenTableE_1502 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12flattenTableE_2817 to void(...)*),i32 -2147483647}>,align 8
@gE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_1507 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_2819 to void(...)*),i32 -2147483647}>,align 8
@gF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_1509 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_2820 to void(...)*),i32 -2147483647}>,align 8
@gG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL4pats_1514 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_2822 to void(...)*),i32 -2147483647}>,align 8
@gH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL4pats_1516 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_2823 to void(...)*),i32 -2147483647}>,align 8
@gI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1518 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_2824 to void(...)*),i32 -2147483647}>,align 8
@gJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1521 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_2825 to void(...)*),i32 -2147483647}>,align 8
@gK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL9transposeE_1536 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_2828 to void(...)*),i32 -2147483647}>,align 8
@gL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10nestedPairE_1544 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10nestedPairE_2830 to void(...)*),i32 -2147483647}>,align 8
@gM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10nestedPairE_1546 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10nestedPairE_2831 to void(...)*),i32 -2147483647}>,align 8
@gN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13nestedCompareE_1550 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13nestedCompareE_2833 to void(...)*),i32 -2147483647}>,align 8
@gO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13nestedCompareE_1552 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13nestedCompareE_2834 to void(...)*),i32 -2147483647}>,align 8
@gP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_1556 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_2836 to void(...)*),i32 -2147483647}>,align 8
@gQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_1558 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_2837 to void(...)*),i32 -2147483647}>,align 8
@gR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_1560 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12ascdescToToyE_2838 to void(...)*),i32 -2147483647}>,align 8
@gS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1564 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_2840 to void(...)*),i32 -2147483647}>,align 8
@gT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7compare_1571 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_2841 to void(...)*),i32 -2147483647}>,align 8
@gU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7compare_1573 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_2842 to void(...)*),i32 -2147483647}>,align 8
@gV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1579 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_2843 to void(...)*),i32 -2147483647}>,align 8
@gW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_1865 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_2845 to void(...)*),i32 -2147483647}>,align 8
@gX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1872 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2846 to void(...)*),i32 -2147483647}>,align 8
@gY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1901 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2847 to void(...)*),i32 -2147483647}>,align 8
@gZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1907 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2848 to void(...)*),i32 -2147483647}>,align 8
@g0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1909 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2849 to void(...)*),i32 -2147483647}>,align 8
@g1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1913 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2850 to void(...)*),i32 -2147483647}>,align 8
@g2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1915 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2851 to void(...)*),i32 -2147483647}>,align 8
@g3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1917 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2852 to void(...)*),i32 -2147483647}>,align 8
@g4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1921 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2853 to void(...)*),i32 -2147483647}>,align 8
@g5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1923 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2854 to void(...)*),i32 -2147483647}>,align 8
@g6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1927 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2855 to void(...)*),i32 -2147483647}>,align 8
@g7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1929 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2856 to void(...)*),i32 -2147483647}>,align 8
@g8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1931 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2857 to void(...)*),i32 -2147483647}>,align 8
@g9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_1935 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2858 to void(...)*),i32 -2147483647}>,align 8
@ha=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_1937 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2859 to void(...)*),i32 -2147483647}>,align 8
@hb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1941 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2860 to void(...)*),i32 -2147483647}>,align 8
@hc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1943 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2861 to void(...)*),i32 -2147483647}>,align 8
@hd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1945 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2862 to void(...)*),i32 -2147483647}>,align 8
@he=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1949 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2863 to void(...)*),i32 -2147483647}>,align 8
@hf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1e_1969 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1e_2864 to void(...)*),i32 -2147483647}>,align 8
@hg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1971 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2865 to void(...)*),i32 -2147483647}>,align 8
@hh=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1975 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2866 to void(...)*),i32 -2147483647}>,align 8
@hi=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1987 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2868 to void(...)*),i32 -2147483647}>,align 8
@hj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1991 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2869 to void(...)*),i32 -2147483647}>,align 8
@hk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1995 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2870 to void(...)*),i32 -2147483647}>,align 8
@hl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1999 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2871 to void(...)*),i32 -2147483647}>,align 8
@hm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2001 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2872 to void(...)*),i32 -2147483647}>,align 8
@hn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2006 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2873 to void(...)*),i32 -2147483647}>,align 8
@ho=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2010 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2874 to void(...)*),i32 -2147483647}>,align 8
@hp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2012 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2875 to void(...)*),i32 -2147483647}>,align 8
@hq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2016 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2876 to void(...)*),i32 -2147483647}>,align 8
@hr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2032 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2877 to void(...)*),i32 -2147483647}>,align 8
@hs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7default_2035 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7default_2878 to void(...)*),i32 -2147483647}>,align 8
@ht=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7default_2039 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7default_2879 to void(...)*),i32 -2147483647}>,align 8
@hu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3pat_2041 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3pat_2880 to void(...)*),i32 -2147483647}>,align 8
@hv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3exp_2043 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3exp_2881 to void(...)*),i32 -2147483647}>,align 8
@hw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2046 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2882 to void(...)*),i32 -2147483647}>,align 8
@hx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2050 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2883 to void(...)*),i32 -2147483647}>,align 8
@hy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL7default_2053 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7default_2884 to void(...)*),i32 -2147483647}>,align 8
@hz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3pat_2055 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3pat_2885 to void(...)*),i32 -2147483647}>,align 8
@hA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3exp_2057 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3exp_2886 to void(...)*),i32 -2147483647}>,align 8
@hB=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1006.6(30552)\00"}>,align 8
@hC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14tableListToToyE_2081 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14tableListToToyE_2887 to void(...)*),i32 -2147483647}>,align 8
@hD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14tableListToToyE_2083 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14tableListToToyE_2888 to void(...)*),i32 -2147483647}>,align 8
@hE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2085 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2889 to void(...)*),i32 -2147483647}>,align 8
@hF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2088 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2890 to void(...)*),i32 -2147483647}>,align 8
@hG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2090 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2891 to void(...)*),i32 -2147483647}>,align 8
@hH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2096 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2892 to void(...)*),i32 -2147483647}>,align 8
@hI=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:943.6(28099)\00"}>,align 8
@hJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13queryToToyOptE_2101 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13queryToToyOptE_2893 to void(...)*),i32 -2147483647}>,align 8
@hK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2107 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2894 to void(...)*),i32 -2147483647}>,align 8
@hL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2113 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2895 to void(...)*),i32 -2147483647}>,align 8
@hM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2115 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2896 to void(...)*),i32 -2147483647}>,align 8
@hN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2119 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2897 to void(...)*),i32 -2147483647}>,align 8
@hO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2123 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2898 to void(...)*),i32 -2147483647}>,align 8
@hP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2125 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2910 to void(...)*),i32 -2147483647}>,align 8
@hQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hP,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2128 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2911 to void(...)*),i32 -2147483647}>,align 8
@hS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hR,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2131 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13ascdescToTermE_2912 to void(...)*),i32 -2147483647}>,align 8
@hU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2135 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2914 to void(...)*),i32 -2147483647}>,align 8
@hV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hU,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2138 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2915 to void(...)*),i32 -2147483647}>,align 8
@hX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hW,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2141 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14distinctToTermE_2916 to void(...)*),i32 -2147483647}>,align 8
@hZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_2292 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2918 to void(...)*),i32 -2147483647}>,align 8
@h0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_2303 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2919 to void(...)*),i32 -2147483647}>,align 8
@h1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h0,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@h2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_2307 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2920 to void(...)*),i32 -2147483647}>,align 8
@h3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h2,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@h4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2312 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2921 to void(...)*),i32 -2147483647}>,align 8
@h5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h4,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@h6=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"NULL\00"}>,align 8
@h7=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"TRUE\00"}>,align 8
@h8=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"FALSE\00"}>,align 8
@h9=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"UNKNOWN\00"}>,align 8
@ia=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1277.43(41996)\00"}>,align 8
@ib=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2339 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2922 to void(...)*),i32 -2147483647}>,align 8
@ic=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLLN12ElaborateSQL11queryToTermE_2342 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2923 to void(...)*),i32 -2147483647}>,align 8
@id=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2344 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2924 to void(...)*),i32 -2147483647}>,align 8
@ie=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1281.53(42228)\00"}>,align 8
@if=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2348 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2925 to void(...)*),i32 -2147483647}>,align 8
@ig=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLLN12ElaborateSQL11queryToTermE_2351 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2926 to void(...)*),i32 -2147483647}>,align 8
@ih=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"-\00"}>,align 8
@ii=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1290.43(42722)\00"}>,align 8
@ij=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2358 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2927 to void(...)*),i32 -2147483647}>,align 8
@ik=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2363 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2928 to void(...)*),i32 -2147483647}>,align 8
@il=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2366 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2929 to void(...)*),i32 -2147483647}>,align 8
@im=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2372 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2930 to void(...)*),i32 -2147483647}>,align 8
@in=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2378 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2931 to void(...)*),i32 -2147483647}>,align 8
@io=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2384 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2932 to void(...)*),i32 -2147483647}>,align 8
@ip=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2386 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2933 to void(...)*),i32 -2147483647}>,align 8
@iq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2388 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2934 to void(...)*),i32 -2147483647}>,align 8
@ir=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2390 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2935 to void(...)*),i32 -2147483647}>,align 8
@is=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3arg_2393 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2936 to void(...)*),i32 -2147483647}>,align 8
@it=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3arg_2395 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2937 to void(...)*),i32 -2147483647}>,align 8
@iu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL3pat_2399 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3pat_2938 to void(...)*),i32 -2147483647}>,align 8
@iv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL1x_2401 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2939 to void(...)*),i32 -2147483647}>,align 8
@iw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL11fieldToTerm_2403 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL11fieldToTerm_2940 to void(...)*),i32 -2147483647}>,align 8
@ix=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1225.6(39766)\00"}>,align 8
@iy=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1192.6(38404)\00"}>,align 8
@iz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11whereToTermE_2423 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11whereToTermE_2941 to void(...)*),i32 -2147483647}>,align 8
@iA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL12recordToTermE_2425 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12recordToTermE_2942 to void(...)*),i32 -2147483647}>,align 8
@iB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2429 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2943 to void(...)*),i32 -2147483647}>,align 8
@iC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2431 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2944 to void(...)*),i32 -2147483647}>,align 8
@iD=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1390.19(46442)\00"}>,align 8
@iE=private unnamed_addr constant<{[4x i8],i32,[11x i8]}><{[4x i8]zeroinitializer,i32 -2147483637,[11x i8]c"readResult\00"}>,align 8
@iF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2464 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2955 to void(...)*),i32 -2147483647}>,align 8
@iG=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"3\00"}>,align 8
@iH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2473 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2956 to void(...)*),i32 -2147483647}>,align 8
@iI=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1400.8(46663)\00"}>,align 8
@iJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5mergeE_2479 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5mergeE_2958 to void(...)*),i32 -2147483647}>,align 8
@iK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5mergeE_2481 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5mergeE_2959 to void(...)*),i32 -2147483647}>,align 8
@iL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8makeBindE_2490 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2962 to void(...)*),i32 -2147483647}>,align 8
@iM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5toSQLE_2499 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5toSQLE_2964 to void(...)*),i32 -2147483647}>,align 8
@iN=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1495.2(50355)\00"}>,align 8
@iO=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:638.6(17718)\00"}>,align 8
@iP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL15representatives_2507 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL15representatives_2966 to void(...)*),i32 -2147483647}>,align 8
@iQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2540 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2967 to void(...)*),i32 -2147483647}>,align 8
@iR=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2015.20(68379)\00"}>,align 8
@iS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2543 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2968 to void(...)*),i32 -2147483647}>,align 8
@iT=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2017.10(68426)\00"}>,align 8
@iU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2546 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2969 to void(...)*),i32 -2147483647}>,align 8
@iV=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2058.20(69876)\00"}>,align 8
@iW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2549 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2970 to void(...)*),i32 -2147483647}>,align 8
@iX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2551 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2971 to void(...)*),i32 -2147483647}>,align 8
@iY=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2000.6(67695)\00"}>,align 8
@iZ=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 1,i32 0}>,align 8
@i0=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 0,i32 0}>,align 8
@i1=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1651.10(55701)\00"}>,align 8
@i2=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1676.22(56577)\00"}>,align 8
@i3=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1679.22(56724)\00"}>,align 8
@i4=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1682.22(56882)\00"}>,align 8
@i5=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1673.38(56432)\00"}>,align 8
@i6=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"elabExp: getLongsymbol\00"}>,align 8
@i7=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1674.10(56475)\00"}>,align 8
@i8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLL5error_2569 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5error_2972 to void(...)*),i32 -2147483647}>,align 8
@i9=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1697.23(57455)\00"}>,align 8
@ja=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLN12ElaborateSQL7elabExpE_2574 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabExpE_2973 to void(...)*),i32 -2147483647}>,align 8
@jb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabExpE_2578 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabExpE_2974 to void(...)*),i32 -2147483647}>,align 8
@jc=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1701.52(57652)\00"}>,align 8
@jd=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"elabExp: TUPLE\00"}>,align 8
@je=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1700.29(57582)\00"}>,align 8
@jf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL7elabExpE_2583 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabExpE_2975 to void(...)*),i32 -2147483647}>,align 8
@jg=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1615.6(54214)\00"}>,align 8
@jh=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1610.30(54099)\00"}>,align 8
@ji=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"elabInfixExp: OP2\00"}>,align 8
@jj=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1589.6(53369)\00"}>,align 8
@jk=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1576.8(52898)\00"}>,align 8
@jl=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1586.32(53313)\00"}>,align 8
@jm=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"elabSpine\00"}>,align 8
@jn=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1545.27(51871)\00"}>,align 8
@jo=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1509.2(50742)\00"}>,align 8
@jp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLL6labels_2602 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6labels_2976 to void(...)*),i32 -2147483647}>,align 8
@jq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8elabFromE_2604 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabFromE_2977 to void(...)*),i32 -2147483647}>,align 8
@jr=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1818.18(61237)\00"}>,align 8
@js=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL8elabFromE_2607 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabFromE_2978 to void(...)*),i32 -2147483647}>,align 8
@jt=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1788.49(60135)\00"}>,align 8
@ju=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1800.49(60687)\00"}>,align 8
@jv=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1764.6(59410)\00"}>,align 8
@jw=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,[4x i8]zeroinitializer,i32 0}>,align 8
@jx=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 2,[4x i8]zeroinitializer,i32 0}>,align 8
@jy=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1745.6(58863)\00"}>,align 8
@jz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2620 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2980 to void(...)*),i32 -2147483647}>,align 8
@jA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2631 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2981 to void(...)*),i32 -2147483647}>,align 8
@jB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2634 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2982 to void(...)*),i32 -2147483647}>,align 8
@jC=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1894.18(63934)\00"}>,align 8
@jD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2637 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2983 to void(...)*),i32 -2147483647}>,align 8
@jE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2641 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2984 to void(...)*),i32 -2147483647}>,align 8
@jF=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1991.46(67431)\00"}>,align 8
@jG=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1526.2(51233)\00"}>,align 8
@jH=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2085.30(70944)\00"}>,align 8
@jI=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"elabSeq: nil\00"}>,align 8
@jJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2654 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2988 to void(...)*),i32 -2147483647}>,align 8
@jK=private unnamed_addr constant<{[4x i8],i32,[1x i8]}><{[4x i8]zeroinitializer,i32 -2147483647,[1x i8]zeroinitializer}>,align 8
@jL=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@jM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2663 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2990 to void(...)*),i32 -2147483647}>,align 8
@jN=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2125.6(72291)\00"}>,align 8
@jO=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"like\00"}>,align 8
@jP=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"||\00"}>,align 8
@jQ=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 5,i32 0}>,align 8
@jR=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"%\00"}>,align 8
@jS=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 7,i32 0}>,align 8
@jT=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"mod\00"}>,align 8
@_SML_gvar93050c497abea278_ElaborateSQL=private global<{[4x i8],i32,[1x i8*]}><{[4x i8]zeroinitializer,i32 -1342177272,[1x i8*]zeroinitializer}>,align 8
@jU=private unnamed_addr global[2x i64][i64 1,i64 sub(i64 ptrtoint(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar93050c497abea278_ElaborateSQL,i32 0,i32 2,i32 0)to i64),i64 ptrtoint([2x i64]*@jU to i64))]
@_SML_ftab93050c497abea278_ElaborateSQL=external global i8
@jV=private unnamed_addr global i8 0
@_SMLZN12ElaborateSQL12elaborateExpE=alias i8*,getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar93050c497abea278_ElaborateSQL,i32 0,i32 2,i32 0)
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_end()local_unnamed_addr#0
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare void@sml_save_exn(i8*inreg)local_unnamed_addr#0
declare void@sml_start(i8*inreg)local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map6foldriE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set10differenceE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set5foldrE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set8fromListE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel8toStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN3Loc9mergeLocsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Bool3notE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8@_SMLFN4Char7toUpperE(i8 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List1_VE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3allE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldrE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6concatE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6lengthE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Fixity5parseE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf7fromIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option6getOptE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String3strE(i8 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String9translateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol8generateE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5unzipE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SymbolEnv4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SymbolEnv6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5d4c3ea7bd6f9540_IntInf()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindaa180c1799f3810_Bool()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maince7036f3433e1102_Char()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7aa263535439ee1c_ListPair()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a60343781315c1e_Option()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main67a5b28ff146c353_Loc()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main44ca35c4c731682b_Symbol()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main60e750412e2bb4fe_RecordLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maineaa0aca8fbe4101a_Bug()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main872d7bd4cbb24e12_UserErrorUtils()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainf1ae86f5f6e7b5ce_ElaborateError_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main0438e3dcc01b41bd_ElaborateErrorSQL_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main66e345b3e3a504aa_Fixity()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*)local_unnamed_addr
declare void@_SML_loaddaa180c1799f3810_Bool(i8*)local_unnamed_addr
declare void@_SML_loadce7036f3433e1102_Char(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load7aa263535439ee1c_ListPair(i8*)local_unnamed_addr
declare void@_SML_load3a60343781315c1e_Option(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_load67a5b28ff146c353_Loc(i8*)local_unnamed_addr
declare void@_SML_load44ca35c4c731682b_Symbol(i8*)local_unnamed_addr
declare void@_SML_load60e750412e2bb4fe_RecordLabel(i8*)local_unnamed_addr
declare void@_SML_loadeaa0aca8fbe4101a_Bug(i8*)local_unnamed_addr
declare void@_SML_load872d7bd4cbb24e12_UserErrorUtils(i8*)local_unnamed_addr
declare void@_SML_loadf1ae86f5f6e7b5ce_ElaborateError_ppg(i8*)local_unnamed_addr
declare void@_SML_load0438e3dcc01b41bd_ElaborateErrorSQL_ppg(i8*)local_unnamed_addr
declare void@_SML_load66e345b3e3a504aa_Fixity(i8*)local_unnamed_addr
define private void@_SML_tabb93050c497abea278_ElaborateSQL()#3{
unreachable
}
define void@_SML_load93050c497abea278_ElaborateSQL(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@jV,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@jV,align 1
tail call void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*%a)#0
tail call void@_SML_loaddaa180c1799f3810_Bool(i8*%a)#0
tail call void@_SML_loadce7036f3433e1102_Char(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load7aa263535439ee1c_ListPair(i8*%a)#0
tail call void@_SML_load3a60343781315c1e_Option(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_load67a5b28ff146c353_Loc(i8*%a)#0
tail call void@_SML_load44ca35c4c731682b_Symbol(i8*%a)#0
tail call void@_SML_load60e750412e2bb4fe_RecordLabel(i8*%a)#0
tail call void@_SML_loadeaa0aca8fbe4101a_Bug(i8*%a)#0
tail call void@_SML_load872d7bd4cbb24e12_UserErrorUtils(i8*%a)#0
tail call void@_SML_loadf1ae86f5f6e7b5ce_ElaborateError_ppg(i8*%a)#0
tail call void@_SML_load0438e3dcc01b41bd_ElaborateErrorSQL_ppg(i8*%a)#0
tail call void@_SML_load66e345b3e3a504aa_Fixity(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb93050c497abea278_ElaborateSQL,i8*@_SML_ftab93050c497abea278_ElaborateSQL,i8*bitcast([2x i64]*@jU to i8*))#0
ret void
}
define void@_SML_main93050c497abea278_ElaborateSQL()local_unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
%a=alloca[3x i8*],align 8
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=load i8,i8*@jV,align 1
%m=and i8%l,2
%n=icmp eq i8%m,0
br i1%n,label%p,label%o
o:
ret void
p:
store i8 3,i8*@jV,align 1
tail call void@_SML_main5d4c3ea7bd6f9540_IntInf()#2
tail call void@_SML_maindaa180c1799f3810_Bool()#2
tail call void@_SML_maince7036f3433e1102_Char()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main7aa263535439ee1c_ListPair()#2
tail call void@_SML_main3a60343781315c1e_Option()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_main67a5b28ff146c353_Loc()#2
tail call void@_SML_main44ca35c4c731682b_Symbol()#2
tail call void@_SML_main60e750412e2bb4fe_RecordLabel()#2
tail call void@_SML_maineaa0aca8fbe4101a_Bug()#2
tail call void@_SML_main872d7bd4cbb24e12_UserErrorUtils()#2
tail call void@_SML_mainf1ae86f5f6e7b5ce_ElaborateError_ppg()#2
tail call void@_SML_main0438e3dcc01b41bd_ElaborateErrorSQL_ppg()#2
tail call void@_SML_main66e345b3e3a504aa_Fixity()#2
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
%q=bitcast[3x i8*]*%a to i8*
call void@sml_start(i8*inreg%q)#0
%r=load atomic i32,i32*@sml_check_flag unordered,align 4
%s=icmp eq i32%r,0
br i1%s,label%u,label%t
t:
invoke void@sml_check(i32 inreg%r)
to label%u unwind label%ir
u:
%v=invoke fastcc i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%w unwind label%ir
w:
store i8*%v,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 12)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9listToSetE_1464 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9listToSetE_1464 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 12)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
store i8*%P,i8**%e,align 8
%S=load i8*,i8**%b,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12filterLabelsE_1472 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 16
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12filterLabelsE_1472 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%W,i64 24
%ag=bitcast i8*%af to i32*
store i32 -2147483647,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%c,align 8
%ak=bitcast i8*%ah to i8**
store i8*null,i8**%ak,align 8
%al=load i8*,i8**%b,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 12)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177288,i32*%as,align 4
store i8*%aq,i8**%f,align 8
%at=load i8*,i8**%b,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i32*
store i32 1,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
%aA=load i8*,i8**%f,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5mergeE_2483 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 16
%aF=bitcast i8*%aE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5mergeE_2483 to void(...)*),void(...)**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 24
%aH=bitcast i8*%aG to i32*
store i32 -2147483647,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 12)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177288,i32*%aK,align 4
store i8*%aI,i8**%g,align 8
%aL=load i8*,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i32*
store i32 1,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
%aS=load i8*,i8**%g,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabOptE_2496 to void(...)*),void(...)**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabOptE_2496 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 -2147483647,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 12)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177288,i32*%a2,align 4
store i8*%a0,i8**%h,align 8
%a3=load i8*,i8**%f,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to i32*
store i32 1,i32*%a6,align 4
%a7=call i8*@sml_alloc(i32 inreg 28)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177304,i32*%a9,align 4
%ba=load i8*,i8**%h,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabListE_2498 to void(...)*),void(...)**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabListE_2498 to void(...)*),void(...)**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a7,i64 24
%bh=bitcast i8*%bg to i32*
store i32 -2147483647,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
store i8*%bi,i8**%i,align 8
%bl=load i8*,i8**%b,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%c,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%i,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5toSQLE_2502 to void(...)*),void(...)**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5toSQLE_2502 to void(...)*),void(...)**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 24
%bC=bitcast i8*%bB to i32*
store i32 -2147483647,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 12)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177288,i32*%bF,align 4
store i8*%bD,i8**%j,align 8
%bG=load i8*,i8**%b,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to i32*
store i32 1,i32*%bJ,align 4
%bK=call i8*@sml_alloc(i32 inreg 28)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177304,i32*%bM,align 4
%bN=load i8*,i8**%j,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bK,i64 8
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5embedE_2506 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 16
%bS=bitcast i8*%bR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5embedE_2506 to void(...)*),void(...)**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 24
%bU=bitcast i8*%bT to i32*
store i32 -2147483647,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%k,align 8
%bY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
%b5=call i8*@sml_alloc(i32 inreg 28)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177304,i32*%b7,align 4
%b8=load i8*,i8**%k,align 8
%b9=bitcast i8*%b5 to i8**
store i8*%b8,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b5,i64 8
%cb=bitcast i8*%ca to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12setupGroupByE_2510 to void(...)*),void(...)**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b5,i64 16
%cd=bitcast i8*%cc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12setupGroupByE_2510 to void(...)*),void(...)**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b5,i64 24
%cf=bitcast i8*%ce to i32*
store i32 -2147483647,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 68)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177344,i32*%ci,align 4
store i8*%cg,i8**%d,align 8
%cj=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cm=getelementptr inbounds i8,i8*%cg,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cp=getelementptr inbounds i8,i8*%cg,i64 16
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cs=getelementptr inbounds i8,i8*%cg,i64 24
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cv=getelementptr inbounds i8,i8*%cg,i64 32
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cy=getelementptr inbounds i8,i8*%cg,i64 40
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cB=getelementptr inbounds i8,i8*%cg,i64 48
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cE=getelementptr inbounds i8,i8*%cg,i64 56
%cF=bitcast i8*%cE to i8**
store i8*%cD,i8**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cg,i64 64
%cH=bitcast i8*%cG to i32*
store i32 255,i32*%cH,align 4
%cI=call i8*@sml_alloc(i32 inreg 28)#0
%cJ=getelementptr inbounds i8,i8*%cI,i64 -4
%cK=bitcast i8*%cJ to i32*
store i32 1342177304,i32*%cK,align 4
%cL=load i8*,i8**%d,align 8
%cM=bitcast i8*%cI to i8**
store i8*%cL,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cI,i64 8
%cO=bitcast i8*%cN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i32,i8*)*@_SMLLN12ElaborateSQL9elabEmbedE_2511 to void(...)*),void(...)**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cI,i64 16
%cQ=bitcast i8*%cP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabEmbedE_2985 to void(...)*),void(...)**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cI,i64 24
%cS=bitcast i8*%cR to i32*
store i32 -2147483647,i32*%cS,align 4
%cT=call i8*@sml_alloc(i32 inreg 28)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177304,i32*%cV,align 4
%cW=load i8*,i8**%d,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cT,i64 8
%cZ=bitcast i8*%cY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2512 to void(...)*),void(...)**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cT,i64 16
%c1=bitcast i8*%c0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2512 to void(...)*),void(...)**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cT,i64 24
%c3=bitcast i8*%c2 to i32*
store i32 -2147483647,i32*%c3,align 4
%c4=call i8*@sml_alloc(i32 inreg 28)#0
%c5=getelementptr inbounds i8,i8*%c4,i64 -4
%c6=bitcast i8*%c5 to i32*
store i32 1342177304,i32*%c6,align 4
%c7=load i8*,i8**%d,align 8
%c8=bitcast i8*%c4 to i8**
store i8*%c7,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c4,i64 8
%da=bitcast i8*%c9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513 to void(...)*),void(...)**%da,align 8
%db=getelementptr inbounds i8,i8*%c4,i64 16
%dc=bitcast i8*%db to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513 to void(...)*),void(...)**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c4,i64 24
%de=bitcast i8*%dd to i32*
store i32 -2147483647,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 28)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177304,i32*%dh,align 4
%di=load i8*,i8**%d,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabExpE_2514 to void(...)*),void(...)**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabExpE_2514 to void(...)*),void(...)**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 24
%dp=bitcast i8*%do to i32*
store i32 -2147483647,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 28)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177304,i32*%ds,align 4
%dt=load i8*,i8**%d,align 8
%du=bitcast i8*%dq to i8**
store i8*%dt,i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dq,i64 8
%dw=bitcast i8*%dv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL12elabInfixExpE_2515 to void(...)*),void(...)**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 16
%dy=bitcast i8*%dx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL12elabInfixExpE_2515 to void(...)*),void(...)**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dq,i64 24
%dA=bitcast i8*%dz to i32*
store i32 -2147483647,i32*%dA,align 4
%dB=call i8*@sml_alloc(i32 inreg 28)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177304,i32*%dD,align 4
%dE=load i8*,i8**%d,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dB,i64 8
%dH=bitcast i8*%dG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabSpineE_2516 to void(...)*),void(...)**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dB,i64 16
%dJ=bitcast i8*%dI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabSpineE_2516 to void(...)*),void(...)**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dB,i64 24
%dL=bitcast i8*%dK to i32*
store i32 -2147483647,i32*%dL,align 4
%dM=call i8*@sml_alloc(i32 inreg 28)#0
%dN=getelementptr inbounds i8,i8*%dM,i64 -4
%dO=bitcast i8*%dN to i32*
store i32 1342177304,i32*%dO,align 4
%dP=load i8*,i8**%d,align 8
%dQ=bitcast i8*%dM to i8**
store i8*%dP,i8**%dQ,align 8
%dR=getelementptr inbounds i8,i8*%dM,i64 8
%dS=bitcast i8*%dR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabAppE_2517 to void(...)*),void(...)**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dM,i64 16
%dU=bitcast i8*%dT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabAppE_2517 to void(...)*),void(...)**%dU,align 8
%dV=getelementptr inbounds i8,i8*%dM,i64 24
%dW=bitcast i8*%dV to i32*
store i32 -2147483647,i32*%dW,align 4
%dX=call i8*@sml_alloc(i32 inreg 28)#0
%dY=getelementptr inbounds i8,i8*%dX,i64 -4
%dZ=bitcast i8*%dY to i32*
store i32 1342177304,i32*%dZ,align 4
%d0=load i8*,i8**%d,align 8
%d1=bitcast i8*%dX to i8**
store i8*%d0,i8**%d1,align 8
%d2=getelementptr inbounds i8,i8*%dX,i64 8
%d3=bitcast i8*%d2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2518 to void(...)*),void(...)**%d3,align 8
%d4=getelementptr inbounds i8,i8*%dX,i64 16
%d5=bitcast i8*%d4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2518 to void(...)*),void(...)**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dX,i64 24
%d7=bitcast i8*%d6 to i32*
store i32 -2147483647,i32*%d7,align 4
%d8=call i8*@sml_alloc(i32 inreg 28)#0
%d9=getelementptr inbounds i8,i8*%d8,i64 -4
%ea=bitcast i8*%d9 to i32*
store i32 1342177304,i32*%ea,align 4
%eb=load i8*,i8**%d,align 8
%ec=bitcast i8*%d8 to i8**
store i8*%eb,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d8,i64 8
%ee=bitcast i8*%ed to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519 to void(...)*),void(...)**%ee,align 8
%ef=getelementptr inbounds i8,i8*%d8,i64 16
%eg=bitcast i8*%ef to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519 to void(...)*),void(...)**%eg,align 8
%eh=getelementptr inbounds i8,i8*%d8,i64 24
%ei=bitcast i8*%eh to i32*
store i32 -2147483647,i32*%ei,align 4
%ej=call i8*@sml_alloc(i32 inreg 28)#0
%ek=getelementptr inbounds i8,i8*%ej,i64 -4
%el=bitcast i8*%ek to i32*
store i32 1342177304,i32*%el,align 4
%em=load i8*,i8**%d,align 8
%en=bitcast i8*%ej to i8**
store i8*%em,i8**%en,align 8
%eo=getelementptr inbounds i8,i8*%ej,i64 8
%ep=bitcast i8*%eo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabWhereE_2520 to void(...)*),void(...)**%ep,align 8
%eq=getelementptr inbounds i8,i8*%ej,i64 16
%er=bitcast i8*%eq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabWhereE_2520 to void(...)*),void(...)**%er,align 8
%es=getelementptr inbounds i8,i8*%ej,i64 24
%et=bitcast i8*%es to i32*
store i32 -2147483647,i32*%et,align 4
%eu=call i8*@sml_alloc(i32 inreg 28)#0
%ev=getelementptr inbounds i8,i8*%eu,i64 -4
%ew=bitcast i8*%ev to i32*
store i32 1342177304,i32*%ew,align 4
%ex=load i8*,i8**%d,align 8
%ey=bitcast i8*%eu to i8**
store i8*%ex,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%eu,i64 8
%eA=bitcast i8*%ez to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL14elabFromClauseE_2521 to void(...)*),void(...)**%eA,align 8
%eB=getelementptr inbounds i8,i8*%eu,i64 16
%eC=bitcast i8*%eB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL14elabFromClauseE_2521 to void(...)*),void(...)**%eC,align 8
%eD=getelementptr inbounds i8,i8*%eu,i64 24
%eE=bitcast i8*%eD to i32*
store i32 -2147483647,i32*%eE,align 4
%eF=call i8*@sml_alloc(i32 inreg 28)#0
%eG=getelementptr inbounds i8,i8*%eF,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 1342177304,i32*%eH,align 4
%eI=load i8*,i8**%d,align 8
%eJ=bitcast i8*%eF to i8**
store i8*%eI,i8**%eJ,align 8
%eK=getelementptr inbounds i8,i8*%eF,i64 8
%eL=bitcast i8*%eK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL8elabFromE_2522 to void(...)*),void(...)**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eF,i64 16
%eN=bitcast i8*%eM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL8elabFromE_2522 to void(...)*),void(...)**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eF,i64 24
%eP=bitcast i8*%eO to i32*
store i32 -2147483647,i32*%eP,align 4
%eQ=call i8*@sml_alloc(i32 inreg 28)#0
%eR=getelementptr inbounds i8,i8*%eQ,i64 -4
%eS=bitcast i8*%eR to i32*
store i32 1342177304,i32*%eS,align 4
%eT=load i8*,i8**%d,align 8
%eU=bitcast i8*%eQ to i8**
store i8*%eT,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eQ,i64 8
%eW=bitcast i8*%eV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2523 to void(...)*),void(...)**%eW,align 8
%eX=getelementptr inbounds i8,i8*%eQ,i64 16
%eY=bitcast i8*%eX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2523 to void(...)*),void(...)**%eY,align 8
%eZ=getelementptr inbounds i8,i8*%eQ,i64 24
%e0=bitcast i8*%eZ to i32*
store i32 -2147483647,i32*%e0,align 4
%e1=call i8*@sml_alloc(i32 inreg 28)#0
%e2=getelementptr inbounds i8,i8*%e1,i64 -4
%e3=bitcast i8*%e2 to i32*
store i32 1342177304,i32*%e3,align 4
%e4=load i8*,i8**%d,align 8
%e5=bitcast i8*%e1 to i8**
store i8*%e4,i8**%e5,align 8
%e6=getelementptr inbounds i8,i8*%e1,i64 8
%e7=bitcast i8*%e6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabTableE_2524 to void(...)*),void(...)**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e1,i64 16
%e9=bitcast i8*%e8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabTableE_2524 to void(...)*),void(...)**%e9,align 8
%fa=getelementptr inbounds i8,i8*%e1,i64 24
%fb=bitcast i8*%fa to i32*
store i32 -2147483647,i32*%fb,align 4
%fc=call i8*@sml_alloc(i32 inreg 28)#0
%fd=getelementptr inbounds i8,i8*%fc,i64 -4
%fe=bitcast i8*%fd to i32*
store i32 1342177304,i32*%fe,align 4
%ff=load i8*,i8**%d,align 8
%fg=bitcast i8*%fc to i8**
store i8*%ff,i8**%fg,align 8
%fh=getelementptr inbounds i8,i8*%fc,i64 8
%fi=bitcast i8*%fh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL8elabJoinE_2525 to void(...)*),void(...)**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fc,i64 16
%fk=bitcast i8*%fj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL8elabJoinE_2525 to void(...)*),void(...)**%fk,align 8
%fl=getelementptr inbounds i8,i8*%fc,i64 24
%fm=bitcast i8*%fl to i32*
store i32 -2147483647,i32*%fm,align 4
%fn=call i8*@sml_alloc(i32 inreg 28)#0
%fo=getelementptr inbounds i8,i8*%fn,i64 -4
%fp=bitcast i8*%fo to i32*
store i32 1342177304,i32*%fp,align 4
%fq=load i8*,i8**%d,align 8
%fr=bitcast i8*%fn to i8**
store i8*%fq,i8**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fn,i64 8
%ft=bitcast i8*%fs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL11elabTableIdE_2526 to void(...)*),void(...)**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fn,i64 16
%fv=bitcast i8*%fu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL11elabTableIdE_2526 to void(...)*),void(...)**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fn,i64 24
%fx=bitcast i8*%fw to i32*
store i32 -2147483647,i32*%fx,align 4
%fy=call i8*@sml_alloc(i32 inreg 28)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177304,i32*%fA,align 4
%fB=load i8*,i8**%d,align 8
%fC=bitcast i8*%fy to i8**
store i8*%fB,i8**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fy,i64 8
%fE=bitcast i8*%fD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL17elabOrderByClauseE_2527 to void(...)*),void(...)**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fy,i64 16
%fG=bitcast i8*%fF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL17elabOrderByClauseE_2527 to void(...)*),void(...)**%fG,align 8
%fH=getelementptr inbounds i8,i8*%fy,i64 24
%fI=bitcast i8*%fH to i32*
store i32 -2147483647,i32*%fI,align 4
%fJ=call i8*@sml_alloc(i32 inreg 28)#0
%fK=getelementptr inbounds i8,i8*%fJ,i64 -4
%fL=bitcast i8*%fK to i32*
store i32 1342177304,i32*%fL,align 4
%fM=load i8*,i8**%d,align 8
%fN=bitcast i8*%fJ to i8**
store i8*%fM,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fJ,i64 8
%fP=bitcast i8*%fO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2528 to void(...)*),void(...)**%fP,align 8
%fQ=getelementptr inbounds i8,i8*%fJ,i64 16
%fR=bitcast i8*%fQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2528 to void(...)*),void(...)**%fR,align 8
%fS=getelementptr inbounds i8,i8*%fJ,i64 24
%fT=bitcast i8*%fS to i32*
store i32 -2147483647,i32*%fT,align 4
%fU=call i8*@sml_alloc(i32 inreg 28)#0
%fV=getelementptr inbounds i8,i8*%fU,i64 -4
%fW=bitcast i8*%fV to i32*
store i32 1342177304,i32*%fW,align 4
%fX=load i8*,i8**%d,align 8
%fY=bitcast i8*%fU to i8**
store i8*%fX,i8**%fY,align 8
%fZ=getelementptr inbounds i8,i8*%fU,i64 8
%f0=bitcast i8*%fZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL23elabLimitOrOffsetClauseE_2529 to void(...)*),void(...)**%f0,align 8
%f1=getelementptr inbounds i8,i8*%fU,i64 16
%f2=bitcast i8*%f1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL23elabLimitOrOffsetClauseE_2529 to void(...)*),void(...)**%f2,align 8
%f3=getelementptr inbounds i8,i8*%fU,i64 24
%f4=bitcast i8*%f3 to i32*
store i32 -2147483647,i32*%f4,align 4
%f5=call i8*@sml_alloc(i32 inreg 28)#0
%f6=getelementptr inbounds i8,i8*%f5,i64 -4
%f7=bitcast i8*%f6 to i32*
store i32 1342177304,i32*%f7,align 4
%f8=load i8*,i8**%d,align 8
%f9=bitcast i8*%f5 to i8**
store i8*%f8,i8**%f9,align 8
%ga=getelementptr inbounds i8,i8*%f5,i64 8
%gb=bitcast i8*%ga to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2530 to void(...)*),void(...)**%gb,align 8
%gc=getelementptr inbounds i8,i8*%f5,i64 16
%gd=bitcast i8*%gc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2530 to void(...)*),void(...)**%gd,align 8
%ge=getelementptr inbounds i8,i8*%f5,i64 24
%gf=bitcast i8*%ge to i32*
store i32 -2147483647,i32*%gf,align 4
%gg=call i8*@sml_alloc(i32 inreg 28)#0
%gh=getelementptr inbounds i8,i8*%gg,i64 -4
%gi=bitcast i8*%gh to i32*
store i32 1342177304,i32*%gi,align 4
%gj=load i8*,i8**%d,align 8
%gk=bitcast i8*%gg to i8**
store i8*%gj,i8**%gk,align 8
%gl=getelementptr inbounds i8,i8*%gg,i64 8
%gm=bitcast i8*%gl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2531 to void(...)*),void(...)**%gm,align 8
%gn=getelementptr inbounds i8,i8*%gg,i64 16
%go=bitcast i8*%gn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2531 to void(...)*),void(...)**%go,align 8
%gp=getelementptr inbounds i8,i8*%gg,i64 24
%gq=bitcast i8*%gp to i32*
store i32 -2147483647,i32*%gq,align 4
%gr=call i8*@sml_alloc(i32 inreg 28)#0
%gs=getelementptr inbounds i8,i8*%gr,i64 -4
%gt=bitcast i8*%gs to i32*
store i32 1342177304,i32*%gt,align 4
%gu=load i8*,i8**%d,align 8
%gv=bitcast i8*%gr to i8**
store i8*%gu,i8**%gv,align 8
%gw=getelementptr inbounds i8,i8*%gr,i64 8
%gx=bitcast i8*%gw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL16elabSelectClauseE_2532 to void(...)*),void(...)**%gx,align 8
%gy=getelementptr inbounds i8,i8*%gr,i64 16
%gz=bitcast i8*%gy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL16elabSelectClauseE_2532 to void(...)*),void(...)**%gz,align 8
%gA=getelementptr inbounds i8,i8*%gr,i64 24
%gB=bitcast i8*%gA to i32*
store i32 -2147483647,i32*%gB,align 4
%gC=call i8*@sml_alloc(i32 inreg 28)#0
%gD=getelementptr inbounds i8,i8*%gC,i64 -4
%gE=bitcast i8*%gD to i32*
store i32 1342177304,i32*%gE,align 4
%gF=load i8*,i8**%d,align 8
%gG=bitcast i8*%gC to i8**
store i8*%gF,i8**%gG,align 8
%gH=getelementptr inbounds i8,i8*%gC,i64 8
%gI=bitcast i8*%gH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2533 to void(...)*),void(...)**%gI,align 8
%gJ=getelementptr inbounds i8,i8*%gC,i64 16
%gK=bitcast i8*%gJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2533 to void(...)*),void(...)**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gC,i64 24
%gM=bitcast i8*%gL to i32*
store i32 -2147483647,i32*%gM,align 4
%gN=call i8*@sml_alloc(i32 inreg 28)#0
%gO=getelementptr inbounds i8,i8*%gN,i64 -4
%gP=bitcast i8*%gO to i32*
store i32 1342177304,i32*%gP,align 4
%gQ=load i8*,i8**%d,align 8
%gR=bitcast i8*%gN to i8**
store i8*%gQ,i8**%gR,align 8
%gS=getelementptr inbounds i8,i8*%gN,i64 8
%gT=bitcast i8*%gS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2534 to void(...)*),void(...)**%gT,align 8
%gU=getelementptr inbounds i8,i8*%gN,i64 16
%gV=bitcast i8*%gU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2534 to void(...)*),void(...)**%gV,align 8
%gW=getelementptr inbounds i8,i8*%gN,i64 24
%gX=bitcast i8*%gW to i32*
store i32 -2147483647,i32*%gX,align 4
%gY=call i8*@sml_alloc(i32 inreg 28)#0
%gZ=getelementptr inbounds i8,i8*%gY,i64 -4
%g0=bitcast i8*%gZ to i32*
store i32 1342177304,i32*%g0,align 4
%g1=load i8*,i8**%d,align 8
%g2=bitcast i8*%gY to i8**
store i8*%g1,i8**%g2,align 8
%g3=getelementptr inbounds i8,i8*%gY,i64 8
%g4=bitcast i8*%g3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL16elabHavingClauseE_2535 to void(...)*),void(...)**%g4,align 8
%g5=getelementptr inbounds i8,i8*%gY,i64 16
%g6=bitcast i8*%g5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL16elabHavingClauseE_2535 to void(...)*),void(...)**%g6,align 8
%g7=getelementptr inbounds i8,i8*%gY,i64 24
%g8=bitcast i8*%g7 to i32*
store i32 -2147483647,i32*%g8,align 4
%g9=call i8*@sml_alloc(i32 inreg 28)#0
%ha=getelementptr inbounds i8,i8*%g9,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177304,i32*%hb,align 4
%hc=load i8*,i8**%d,align 8
%hd=bitcast i8*%g9 to i8**
store i8*%hc,i8**%hd,align 8
%he=getelementptr inbounds i8,i8*%g9,i64 8
%hf=bitcast i8*%he to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i32,i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2536 to void(...)*),void(...)**%hf,align 8
%hg=getelementptr inbounds i8,i8*%g9,i64 16
%hh=bitcast i8*%hg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2986 to void(...)*),void(...)**%hh,align 8
%hi=getelementptr inbounds i8,i8*%g9,i64 24
%hj=bitcast i8*%hi to i32*
store i32 -2147483647,i32*%hj,align 4
%hk=call i8*@sml_alloc(i32 inreg 28)#0
%hl=getelementptr inbounds i8,i8*%hk,i64 -4
%hm=bitcast i8*%hl to i32*
store i32 1342177304,i32*%hm,align 4
%hn=load i8*,i8**%d,align 8
%ho=bitcast i8*%hk to i8**
store i8*%hn,i8**%ho,align 8
%hp=getelementptr inbounds i8,i8*%hk,i64 8
%hq=bitcast i8*%hp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i32,i8*)*@_SMLLN12ElaborateSQL13elabInsertRowE_2537 to void(...)*),void(...)**%hq,align 8
%hr=getelementptr inbounds i8,i8*%hk,i64 16
%hs=bitcast i8*%hr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*,i8*)*@_SMLLN12ElaborateSQL13elabInsertRowE_2987 to void(...)*),void(...)**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hk,i64 24
%hu=bitcast i8*%ht to i32*
store i32 -2147483647,i32*%hu,align 4
%hv=call i8*@sml_alloc(i32 inreg 28)#0
%hw=getelementptr inbounds i8,i8*%hv,i64 -4
%hx=bitcast i8*%hw to i32*
store i32 1342177304,i32*%hx,align 4
%hy=load i8*,i8**%d,align 8
%hz=bitcast i8*%hv to i8**
store i8*%hy,i8**%hz,align 8
%hA=getelementptr inbounds i8,i8*%hv,i64 8
%hB=bitcast i8*%hA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL15elabInsertValueE_2538 to void(...)*),void(...)**%hB,align 8
%hC=getelementptr inbounds i8,i8*%hv,i64 16
%hD=bitcast i8*%hC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL15elabInsertValueE_2538 to void(...)*),void(...)**%hD,align 8
%hE=getelementptr inbounds i8,i8*%hv,i64 24
%hF=bitcast i8*%hE to i32*
store i32 -2147483647,i32*%hF,align 4
%hG=call i8*@sml_alloc(i32 inreg 28)#0
%hH=getelementptr inbounds i8,i8*%hG,i64 -4
%hI=bitcast i8*%hH to i32*
store i32 1342177304,i32*%hI,align 4
%hJ=load i8*,i8**%d,align 8
%hK=bitcast i8*%hG to i8**
store i8*%hJ,i8**%hK,align 8
%hL=getelementptr inbounds i8,i8*%hG,i64 8
%hM=bitcast i8*%hL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabSeqE_2539 to void(...)*),void(...)**%hM,align 8
%hN=getelementptr inbounds i8,i8*%hG,i64 16
%hO=bitcast i8*%hN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLN12ElaborateSQL7elabSeqE_2539 to void(...)*),void(...)**%hO,align 8
%hP=getelementptr inbounds i8,i8*%hG,i64 24
%hQ=bitcast i8*%hP to i32*
store i32 -2147483647,i32*%hQ,align 4
%hR=call i8*@sml_alloc(i32 inreg 12)#0
%hS=getelementptr inbounds i8,i8*%hR,i64 -4
%hT=bitcast i8*%hS to i32*
store i32 1342177288,i32*%hT,align 4
store i8*%hR,i8**%b,align 8
%hU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hV=bitcast i8*%hR to i8**
store i8*%hU,i8**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hR,i64 8
%hX=bitcast i8*%hW to i32*
store i32 1,i32*%hX,align 4
%hY=call i8*@sml_alloc(i32 inreg 28)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177304,i32*%h0,align 4
%h1=load i8*,i8**%b,align 8
%h2=bitcast i8*%hY to i8**
store i8*%h1,i8**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hY,i64 8
%h4=bitcast i8*%h3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2668 to void(...)*),void(...)**%h4,align 8
%h5=getelementptr inbounds i8,i8*%hY,i64 16
%h6=bitcast i8*%h5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2668 to void(...)*),void(...)**%h6,align 8
%h7=getelementptr inbounds i8,i8*%hY,i64 24
%h8=bitcast i8*%h7 to i32*
store i32 -2147483647,i32*%h8,align 4
%h9=call i8*@sml_alloc(i32 inreg 12)#0
%ia=getelementptr inbounds i8,i8*%h9,i64 -4
%ib=bitcast i8*%ia to i32*
store i32 1342177288,i32*%ib,align 4
store i8*%h9,i8**%c,align 8
%ic=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%id=bitcast i8*%h9 to i8**
store i8*%ic,i8**%id,align 8
%ie=getelementptr inbounds i8,i8*%h9,i64 8
%if=bitcast i8*%ie to i32*
store i32 1,i32*%if,align 4
%ig=call i8*@sml_alloc(i32 inreg 28)#0
%ih=getelementptr inbounds i8,i8*%ig,i64 -4
%ii=bitcast i8*%ih to i32*
store i32 1342177304,i32*%ii,align 4
%ij=load i8*,i8**%c,align 8
%ik=bitcast i8*%ig to i8**
store i8*%ij,i8**%ik,align 8
%il=getelementptr inbounds i8,i8*%ig,i64 8
%im=bitcast i8*%il to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2678 to void(...)*),void(...)**%im,align 8
%in=getelementptr inbounds i8,i8*%ig,i64 16
%io=bitcast i8*%in to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2678 to void(...)*),void(...)**%io,align 8
%ip=getelementptr inbounds i8,i8*%ig,i64 24
%iq=bitcast i8*%ip to i32*
store i32 -2147483647,i32*%iq,align 4
call void@sml_write(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar93050c497abea278_ElaborateSQL,i64 0,i32 2,i64 0)to i8*),i8**inreg getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar93050c497abea278_ElaborateSQL,i64 0,i32 2,i64 0),i8*inreg%ig)#0
call void@sml_end()#0
ret void
ir:
%is=landingpad{i8*,i8*}
cleanup
%it=extractvalue{i8*,i8*}%is,1
call void@sml_save_exn(i8*inreg%it)#0
call void@sml_end()#0
resume{i8*,i8*}%is
}
define internal fastcc i8*@_SMLL3map_1132(i8*inreg%a,i32 inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%c,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%c,%o]
store i8*%n,i8**%f,align 8
%q=icmp eq i8*%p,null
br i1%q,label%r,label%s
r:
ret i8*null
s:
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%n to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=bitcast i8*%A to i32*
%C=getelementptr inbounds i8,i8*%A,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%A,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
store i32%b,i32*%B,align 4
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 2,i32*%K,align 4
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=call fastcc i8*%x(i8*inreg%L,i8*inreg%A)
store i8*%M,i8**%d,align 8
%N=add nsw i32%b,1
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%T=call fastcc i8*@_SMLL3map_1132(i8*inreg%S,i32 inreg%N,i8*inreg%R)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4mapiE_1134(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLL3map_1132(i8*inreg%p,i32 inreg 0,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6TyWildE_1137(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 7,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1139(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%n,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1140(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1139 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1139 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%e to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%e,align 8
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%af,i8**%f,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%af,i64 24
%ar=bitcast i8*%aq to i32*
store i32 7,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=bitcast i8*%as to i32*
%au=getelementptr inbounds i8,i8*%as,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=getelementptr inbounds i8,i8*%as,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
store i32 1,i32*%at,align 4
%ay=load i8*,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 16
%aC=bitcast i8*%aB to i32*
store i32 2,i32*%aC,align 4
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1141(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1140 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1140 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1142(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1141 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TyConE_1141 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7PatWildE_1147(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 6,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1149(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%o)
%q=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*null,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
store i8*null,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 2,i32*%S,align 4
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11PatVarLabelE_1149 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11PatVarLabelE_1149 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1152(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1153(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13PatFlexRecordE_1152 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13PatFlexRecordE_1152 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 16
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%T,i64 24
%ag=bitcast i8*%af to i32*
store i32 6,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=bitcast i8*%ah to i32*
%aj=getelementptr inbounds i8,i8*%ah,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%ah,i64 4
%am=bitcast i8*%al to i32*
store i32 0,i32*%am,align 1
store i32 4,i32*%ai,align 4
%an=load i8*,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i32*
store i32 2,i32*%ar,align 4
ret i8*%ah
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1154(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13PatFlexRecordE_1153 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13PatFlexRecordE_1153 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1156(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1157(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9PatRecordE_1156 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9PatRecordE_1156 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=bitcast i8*%T to i64*
store i64 0,i64*%W,align 4
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 24
%ae=bitcast i8*%ad to i32*
store i32 6,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
store i32 4,i32*%ag,align 4
%al=load i8*,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9PatRecordE_1157 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9PatRecordE_1157 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10PatAsLabelE_1163(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8***
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%e to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%l],[%k,%j]
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%r)
%t=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%s)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%c,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%d,align 8
%B=bitcast i8**%e to i8***
%C=load i8**,i8***%B,align 8
store i8*null,i8**%e,align 8
%D=load i8*,i8**%C,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
store i8*%N,i8**%e,align 8
%O=call i8*@sml_alloc(i32 inreg 36)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177312,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=load i8*,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%O,i64 24
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%O,i64 32
%ac=bitcast i8*%ab to i32*
store i32 15,i32*%ac,align 4
store i8*%R,i8**%c,align 8
store i8*null,i8**%d,align 8
store i8*%Y,i8**%f,align 8
%ad=call i8*@sml_alloc(i32 inreg 36)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177312,i32*%af,align 4
store i8*%ad,i8**%g,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%ad,i64 24
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ad,i64 32
%as=bitcast i8*%ar to i32*
store i32 15,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=bitcast i8*%at to i32*
%av=getelementptr inbounds i8,i8*%at,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=getelementptr inbounds i8,i8*%at,i64 4
%ay=bitcast i8*%ax to i32*
store i32 0,i32*%ay,align 1
store i32 3,i32*%au,align 4
%az=load i8*,i8**%g,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
ret i8*%at
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6PatConE_1166(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%c,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%K,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%e,align 8
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%g,align 8
%aa=getelementptr inbounds i8,i8*%X,i64 4
%ab=bitcast i8*%aa to i32*
store i32 0,i32*%ab,align 1
%ac=bitcast i8*%X to i32*
store i32 2,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 28)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177304,i32*%ak,align 4
store i8*%ai,i8**%d,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%ai,i64 16
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ai,i64 24
%au=bitcast i8*%at to i32*
store i32 7,i32*%au,align 4
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=bitcast i8*%av to i32*
%ax=getelementptr inbounds i8,i8*%av,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=getelementptr inbounds i8,i8*%av,i64 4
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
store i32 1,i32*%aw,align 4
%aB=load i8*,i8**%d,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 16
%aF=bitcast i8*%aE to i32*
store i32 2,i32*%aF,align 4
ret i8*%av
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6PatConE_1167(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6PatConE_1166 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6PatConE_1166 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8PatTypedE_1170(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8***
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=load i8**,i8***%p,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%q)
store i8*%y,i8**%d,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
store i8*null,i8**%e,align 8
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%e,align 8
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%f,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%M,i64 16
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%M,i64 24
%Y=bitcast i8*%X to i32*
store i32 7,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32 5,i32*%aa,align 4
%af=load i8*,i8**%f,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i32*
store i32 2,i32*%aj,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1173(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%o)
%q=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*null,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
store i8*null,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 25,i32*%S,align 4
%X=load i8*,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8VarLabelE_1173 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8VarLabelE_1173 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1176(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%f to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=load i8*,i8**%r,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%s)
store i8*%z,i8**%d,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*null,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
store i8*null,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%g,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%f,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8***
%W=load i8**,i8***%V,align 8
%X=load i8*,i8**%W,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%d,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
%ai=load i8*,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i8**
store i8*null,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
store i8*null,i8**%e,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
store i8*%ao,i8**%h,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=load i8*,i8**%c,align 8
%aL=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg%aK)
store i8*%aL,i8**%d,align 8
%aM=call i8*@sml_alloc(i32 inreg 28)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177304,i32*%aO,align 4
store i8*%aM,i8**%e,align 8
%aP=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%c,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 16
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aM,i64 24
%aY=bitcast i8*%aX to i32*
store i32 7,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%e,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aZ,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*null,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
store i8*%a2,i8**%d,align 8
store i8*null,i8**%e,align 8
%a8=call i8*@sml_alloc(i32 inreg 20)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177296,i32*%ba,align 4
store i8*%a8,i8**%f,align 8
%bb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a8,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 36)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177312,i32*%bk,align 4
store i8*%bi,i8**%d,align 8
%bl=getelementptr inbounds i8,i8*%bi,i64 20
%bm=bitcast i8*%bl to i32*
store i32 0,i32*%bm,align 1
%bn=bitcast i8*%bi to i8**
%bo=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
store i8*%bo,i8**%bn,align 8
%bp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bi,i64 16
%bt=bitcast i8*%bs to i32*
store i32 2,i32*%bt,align 4
%bu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bv=getelementptr inbounds i8,i8*%bi,i64 24
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bi,i64 32
%by=bitcast i8*%bx to i32*
store i32 11,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=bitcast i8*%bz to i32*
%bB=getelementptr inbounds i8,i8*%bz,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=getelementptr inbounds i8,i8*%bz,i64 4
%bE=bitcast i8*%bD to i32*
store i32 0,i32*%bE,align 1
store i32 1,i32*%bA,align 4
%bF=load i8*,i8**%d,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 2,i32*%bJ,align 4
ret i8*%bz
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1177(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5Case1E_1176 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5Case1E_1176 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5Case1E_1177 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5Case1E_1177 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL2FnE_1180(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8***
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i8****
%o=load i8***,i8****%n,align 8
br label%p
p:
%q=phi i8***[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8**,i8***%q,align 8
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%r)
store i8*%z,i8**%d,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*null,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
store i8*null,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%g,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=bitcast i8**%f to i8***
%U=load i8**,i8***%T,align 8
store i8*null,i8**%f,align 8
%V=load i8*,i8**%U,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%c,align 8
%af=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
store i8*%ag,i8**%e,align 8
%aj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 16
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ag,i64 24
%as=bitcast i8*%ar to i32*
store i32 7,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%e,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to i8**
store i8*null,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
store i8*%aw,i8**%d,align 8
store i8*null,i8**%e,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%f,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aI=getelementptr inbounds i8,i8*%aC,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aC,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
store i8*%aM,i8**%d,align 8
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=bitcast i8*%aW to i32*
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aW,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
store i32 10,i32*%aX,align 4
%a2=load i8*,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 2,i32*%a6,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLN12ElaborateSQL2FnE_1181(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL2FnE_1180 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL2FnE_1180 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1183(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1184(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%j,i8**%c,align 8
%k=call i8*@sml_alloc(i32 inreg 12)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177288,i32*%m,align 4
store i8*%k,i8**%d,align 8
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i32*
store i32 1,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
store i8*%r,i8**%e,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3Fn1E_1183 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3Fn1E_1183 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%b,align 8
%I=call i8*@sml_alloc(i32 inreg 12)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177288,i32*%K,align 4
store i8*%I,i8**%d,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 28)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177304,i32*%R,align 4
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3Fn1E_1184 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3Fn1E_1184 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%P,i64 24
%Z=bitcast i8*%Y to i32*
store i32 -2147483647,i32*%Z,align 4
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*%F(i8*inreg%aa,i8*inreg%P)
store i8*%ab,i8**%b,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%e,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%b,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=tail call fastcc i8*@_SMLLN12ElaborateSQL2FnE_1181(i8*inreg%ac)
ret i8*%am
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3LetE_1187(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=bitcast i8*%h to i8**
store i8*null,i8**%k,align 8
%l=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%q,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
%v=bitcast i8*%q to i32*
store i32 1,i32*%v,align 4
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3LetE_1188(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
%n=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1187 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1187 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*%q(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=bitcast i8**%h to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%P(i8*inreg%R,i8*inreg%U)
store i8*%V,i8**%g,align 8
%W=load i8*,i8**%h,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8***
%Z=load i8**,i8***%Y,align 8
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
%ag=load i8*,i8**%c,align 8
%ah=call fastcc i8*%ad(i8*inreg%af,i8*inreg%ag)
store i8*%ah,i8**%d,align 8
%ai=load i8*,i8**%h,align 8
%aj=getelementptr inbounds i8,i8*%ai,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=getelementptr inbounds i8,i8*%al,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8*(i8*,i8*)**
%ar=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aq,align 8
%as=bitcast i8*%ao to i8**
%at=load i8*,i8**%as,align 8
%au=load i8*,i8**%c,align 8
%av=call fastcc i8*%ar(i8*inreg%at,i8*inreg%au)
store i8*%av,i8**%e,align 8
%aw=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%aw,i8**%i,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%f,align 8
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ax,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*null,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
store i8*%aN,i8**%d,align 8
store i8*null,i8**%e,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%f,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%d,align 8
%a6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%c,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%e,align 8
%bj=getelementptr inbounds i8,i8*%bg,i64 4
%bk=bitcast i8*%bj to i32*
store i32 0,i32*%bk,align 1
%bl=bitcast i8*%bg to i32*
store i32 12,i32*%bl,align 4
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 16
%bq=bitcast i8*%bp to i32*
store i32 2,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
%bu=load i8*,i8**%e,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*null,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 3,i32*%bz,align 4
store i8*%bu,i8**%d,align 8
store i8*null,i8**%e,align 8
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bA,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 3,i32*%bJ,align 4
%bK=load i8*,i8**%h,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 16
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
store i8*null,i8**%h,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
%bT=load i8*,i8**%c,align 8
%bU=call fastcc i8*%bQ(i8*inreg%bS,i8*inreg%bT)
store i8*%bU,i8**%d,align 8
%bV=call i8*@sml_alloc(i32 inreg 28)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177304,i32*%bX,align 4
store i8*%bV,i8**%e,align 8
%bY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 16
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bV,i64 24
%b7=bitcast i8*%b6 to i32*
store i32 7,i32*%b7,align 4
%b8=call i8*@sml_alloc(i32 inreg 20)#0
%b9=bitcast i8*%b8 to i32*
%ca=getelementptr inbounds i8,i8*%b8,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
%cc=getelementptr inbounds i8,i8*%b8,i64 4
%cd=bitcast i8*%cc to i32*
store i32 0,i32*%cd,align 1
store i32 13,i32*%b9,align 4
%ce=load i8*,i8**%e,align 8
%cf=getelementptr inbounds i8,i8*%b8,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b8,i64 16
%ci=bitcast i8*%ch to i32*
store i32 2,i32*%ci,align 4
ret i8*%b8
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3LetE_1189(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1188 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1188 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3LetE_1190(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1189 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1189 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3AppE_1193(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%r)
store i8*%y,i8**%f,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%d,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=load i8*,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
store i8*null,i8**%e,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%g,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ad,i8**%d,align 8
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ad,i64 24
%ap=bitcast i8*%ao to i32*
store i32 7,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=bitcast i8*%aq to i64*
store i64 0,i64*%at,align 4
%au=load i8*,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 2,i32*%ay,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3AppE_1194(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3AppE_1193 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3AppE_1193 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3AppE_1194 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3AppE_1194 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1197(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1198(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6RecordE_1197 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6RecordE_1197 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6RecordE_1198 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6RecordE_1198 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%c,align 8
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=tail call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%Q)
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3FstE_1204(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3FstE_1205(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3FstE_1204 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3FstE_1204 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3FstE_1206(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@fU,i64 0,i32 2,i64 0))
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3FstE_1205 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3FstE_1205 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=load i8*,i8**%b,align 8
%C=tail call fastcc i8*@_SMLLN12ElaborateSQL3FstE_1205(i8*inreg%t,i8*inreg%B)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3SndE_1209(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3SndE_1210(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SndE_1209 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SndE_1209 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3SndE_1211(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@fV,i64 0,i32 2,i64 0))
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SndE_1210 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SndE_1210 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=load i8*,i8**%b,align 8
%C=tail call fastcc i8*@_SMLLN12ElaborateSQL3SndE_1210(i8*inreg%t,i8*inreg%B)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1213(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1214(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%e to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%r)
store i8*%y,i8**%d,align 8
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%g,align 8
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1213 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1213 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%C(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ah)
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 28)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
store i8*%aj,i8**%f,align 8
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%aj,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=bitcast i8*%aw to i32*
%ay=getelementptr inbounds i8,i8*%aw,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=getelementptr inbounds i8,i8*%aw,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
store i32 17,i32*%ax,align 4
%aC=load i8*,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i32*
store i32 2,i32*%aG,align 4
ret i8*%aw
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1215(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1214 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1214 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1216(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1215 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6ModifyE_1215 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5TypedE_1218(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8***
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=load i8**,i8***%p,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%q)
store i8*%y,i8**%d,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
store i8*null,i8**%e,align 8
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%e,align 8
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%f,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%M,i64 16
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%M,i64 24
%Y=bitcast i8*%X to i32*
store i32 7,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32 24,i32*%aa,align 4
%af=load i8*,i8**%f,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i32*
store i32 2,i32*%aj,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1221(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%l],[%b,%j]
%r=phi i8**[%n,%l],[%k,%j]
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
store i8*null,i8**%d,align 8
%w=bitcast i8**%r to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%v(i8*inreg%y,i8*inreg%q)
store i8*%z,i8**%f,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=bitcast i8*%A to i8**
store i8*null,i8**%D,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%J,i64 4
%N=bitcast i8*%M to i32*
store i32 0,i32*%N,align 1
%O=bitcast i8*%J to i32*
store i32 2,i32*%O,align 4
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%J,i64 16
%T=bitcast i8*%S to i32*
store i32 2,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
store i8*%X,i8**%d,align 8
store i8*null,i8**%e,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%g,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ad,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=bitcast i8*%aH to i32*
%aJ=getelementptr inbounds i8,i8*%aH,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=getelementptr inbounds i8,i8*%aH,i64 4
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
store i32 21,i32*%aI,align 4
%aN=load i8*,i8**%d,align 8
%aO=getelementptr inbounds i8,i8*%aH,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 2,i32*%aR,align 4
ret i8*%aH
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6IgnoreE_1221 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6IgnoreE_1221 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3SeqE_1224(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8***
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8****
%o=load i8***,i8****%n,align 8
br label%p
p:
%q=phi i8***[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8**,i8***%q,align 8
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%r)
store i8*%z,i8**%f,align 8
%A=bitcast i8**%d to i8***
%B=load i8**,i8***%A,align 8
store i8*null,i8**%d,align 8
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
%M=call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
store i8*%M,i8**%d,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*null,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
store i8*null,i8**%e,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
store i8*%W,i8**%g,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%e,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4JoinE_1227(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8***
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=load i8**,i8***%p,align 8
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%q)
store i8*%y,i8**%d,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
store i8*null,i8**%e,align 8
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%e,align 8
%M=call i8*@sml_alloc(i32 inreg 36)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177312,i32*%O,align 4
store i8*%M,i8**%f,align 8
%P=getelementptr inbounds i8,i8*%M,i64 4
%Q=bitcast i8*%P to i32*
store i32 0,i32*%Q,align 1
%R=bitcast i8*%M to i32*
store i32 1,i32*%R,align 4
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%M,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%M,i64 16
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%M,i64 24
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%M,i64 32
%ac=bitcast i8*%ab to i32*
store i32 14,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 12,i32*%ae,align 4
%aj=load i8*,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3ConE_1230(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
store i32 25,i32*%x,align 4
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3ConE_1231(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
store i32 25,i32*%x,align 4
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3ConE_1232(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
store i32 25,i32*%x,align 4
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3ConE_1233(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=icmp eq i8*%k,null
br i1%m,label%n,label%J
n:
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%d,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1232 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1232 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
J:
%K=getelementptr inbounds i8,i8*%k,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=icmp eq i8*%M,null
%O=bitcast i8**%d to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%e,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
br i1%N,label%af,label%au
af:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1231 to void(...)*),void(...)**%ae,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1231 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Y,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%Y)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8**%c to i8***
%ar=load i8**,i8***%aq,align 8
%as=load i8*,i8**%ar,align 8
%at=tail call fastcc i8*%an(i8*inreg%ap,i8*inreg%as)
ret i8*%at
au:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1230 to void(...)*),void(...)**%ae,align 8
%av=getelementptr inbounds i8,i8*%Y,i64 16
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1230 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%Y,i64 24
%ay=bitcast i8*%ax to i32*
store i32 -2147483647,i32*%ay,align 4
%az=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%Y)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%d,align 8
%aF=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=call fastcc i8*%aI(i8*inreg%aK,i8*inreg%aL)
%aN=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%aM)
%aO=load i8*,i8**%d,align 8
%aP=tail call fastcc i8*%aC(i8*inreg%aO,i8*inreg%aN)
ret i8*%aP
}
define internal fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1233 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3ConE_1233 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4ConsE_1236(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@f,i64 0,i32 2)to i8*))
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=load i8*,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=tail call fastcc i8*%u(i8*inreg%Q,i8*inreg%G)
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4ListE_1238(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fW,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%p(i8*inreg%r,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%b,align 8
%z=tail call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1242(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*)
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
%y=load i8*,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*null,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=tail call fastcc i8*%s(i8*inreg%E,i8*inreg%v)
ret i8*%F
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__and3E_1250(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ad,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__or3E_1254(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ah,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1e_1258(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@V,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_1260(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@al,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_1262(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f1,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%b,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1264(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ay,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1266(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=bitcast i8**%d to i8***
%q=load i8**,i8***%p,align 8
store i8*null,i8**%d,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%r)
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=call fastcc i8*%m(i8*inreg%t,i8*inreg%s)
%v=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%c,align 8
%C=tail call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__mapE_1266 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__mapE_1266 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1269(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aC,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1271(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ap,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1273(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8**%n to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%s(i8*inreg%v,i8*inreg%o)
store i8*%w,i8**%c,align 8
%x=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f5,i64 0,i32 2)to i8*))
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%c,align 8
%E=tail call fastcc i8*%A(i8*inreg%C,i8*inreg%D)
ret i8*%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1274(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f4,i64 0,i32 2)to i8*))
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%d to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1273 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1273 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%A)
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=call fastcc i8*%n(i8*inreg%M,i8*inreg%L)
%O=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%N)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%c,align 8
%V=tail call fastcc i8*%R(i8*inreg%T,i8*inreg%U)
ret i8*%V
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1275(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1274 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__filterE_1274 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1277(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aG,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1279(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f6,i64 0,i32 2)to i8*))
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
%Y=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%X)
%Z=load i8*,i8**%d,align 8
%aa=tail call fastcc i8*%u(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1281(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aO,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1283(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f7,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%w)
%H=load i8*,i8**%d,align 8
%I=tail call fastcc i8*%t(i8*inreg%H,i8*inreg%G)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_1285(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aT,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_1287(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f8,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%w)
%H=load i8*,i8**%d,align 8
%I=tail call fastcc i8*%t(i8*inreg%H,i8*inreg%G)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1289(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a5,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1291(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f9,i64 0,i32 2)to i8*))
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
%Y=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%X)
%Z=load i8*,i8**%d,align 8
%aa=tail call fastcc i8*%u(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__joinE_1293(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a9,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__joinE_1295(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ga,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
store i8*null,i8**%e,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%A)
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=call fastcc i8*%v(i8*inreg%C,i8*inreg%B)
%E=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%D)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%d,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%ak)
%am=load i8*,i8**%e,align 8
%an=tail call fastcc i8*%H(i8*inreg%am,i8*inreg%al)
ret i8*%an
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__nubE_1298(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bd,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__nubE_1300(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gb,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=bitcast i8**%d to i8***
%q=load i8**,i8***%p,align 8
store i8*null,i8**%d,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%r)
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=call fastcc i8*%m(i8*inreg%t,i8*inreg%s)
%v=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%c,align 8
%C=tail call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_1303(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bh,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_1305(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gc,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=bitcast i8**%d to i8***
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%r)
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=call fastcc i8*%m(i8*inreg%t,i8*inreg%s)
%v=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%y(i8*inreg%A,i8*inreg%E)
%G=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
%N=tail call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
ret i8*%N
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_1306(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_1305 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_1305 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_1309(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bm,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_1311(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gd,i64 0,i32 2)to i8*))
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=bitcast i8**%d to i8***
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%r)
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=call fastcc i8*%m(i8*inreg%t,i8*inreg%s)
%v=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%y(i8*inreg%A,i8*inreg%E)
%G=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
%N=tail call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
ret i8*%N
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_1312(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_1311 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_1311 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__compareE_1315(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15Fun__comparePairE_1319(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bt,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16Fun__reverseOrderE_1323(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@by,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__fromSQLE_1327(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bB,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL4exps_1329(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
%s=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg%r)
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 1,i32*%y,align 4
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
store i8*%E,i8**%d,align 8
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 2,i32*%P,align 4
%U=load i8*,i8**%d,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1332(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bH,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1334(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gi,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13Fun__sqlserverE_1336(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bN,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16Var__closeCommandE_1340(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bT,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Con__INTE_1342(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Con__WORDE_1345(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Con__REALE_1348(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__STRINGE_1351(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Con__CHARE_1354(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__COLUMN1E_1357(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1360(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1361(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1364(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=getelementptr inbounds i8,i8*%g,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=getelementptr inbounds i8,i8*%k,i64 4
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 1
%p=bitcast i8*%k to i32*
store i32 3,i32*%p,align 4
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 16
%u=bitcast i8*%t to i32*
store i32 2,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%F,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
store i32 2,i32*%G,align 4
%L=load i8*,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%F,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1365(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%b to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cH,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
store i8*%w,i8**%c,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i8*%D,i8**%b,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6Con__ISE_1364 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6Con__ISE_1364 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
%R=load i8*,i8**%b,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
store i8*null,i8**%c,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
%as=tail call fastcc i8*%t(i8*inreg%ar,i8*inreg%ah)
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1367(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=getelementptr inbounds i8,i8*%g,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=getelementptr inbounds i8,i8*%k,i64 4
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 1
%p=bitcast i8*%k to i32*
store i32 3,i32*%p,align 4
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 16
%u=bitcast i8*%t to i32*
store i32 2,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%F,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
store i32 2,i32*%G,align 4
%L=load i8*,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%F,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1368(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%b to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cL,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
store i8*%w,i8**%c,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i8*%D,i8**%b,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1367 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1367 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
%R=load i8*,i8**%b,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
store i8*null,i8**%c,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
%as=tail call fastcc i8*%t(i8*inreg%ar,i8*inreg%ah)
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1374(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1375(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c5,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=bitcast i8**%d to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%u,i8**%f,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1374 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1374 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%M)
store i8*%N,i8**%c,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
store i8*null,i8**%d,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%g,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
%as=tail call fastcc i8*%o(i8*inreg%ar,i8*inreg%ah)
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1376(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1375 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1375 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Con__OP2E_1378(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1381(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1382(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dd,i64 0,i32 2)to i8*))
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%d to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1381 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1381 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*null,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%f,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=tail call fastcc i8*%n(i8*inreg%ae,i8*inreg%U)
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Con__TABLEIDE_1385(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12Con__TABLE__ASE_1388(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Con__JOINE_1391(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dB,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*null,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%d,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%b,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=tail call fastcc i8*%y(i8*inreg%ae,i8*inreg%U)
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13Con__INNERJOINE_1393(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dF,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*null,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%d,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%b,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=tail call fastcc i8*%y(i8*inreg%ae,i8*inreg%U)
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__OFFSETE_1404(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=getelementptr inbounds i8,i8*%g,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
%k=getelementptr inbounds i8,i8*%j,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=getelementptr inbounds i8,i8*%n,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
%s=bitcast i8*%n to i32*
store i32 3,i32*%s,align 4
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%n,i64 8
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 16
%x=bitcast i8*%w to i32*
store i32 2,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%d,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=bitcast i8*%I to i32*
%K=getelementptr inbounds i8,i8*%I,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%I,i64 4
%N=bitcast i8*%M to i32*
store i32 0,i32*%N,align 1
store i32 2,i32*%J,align 4
%O=load i8*,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 2,i32*%S,align 4
ret i8*%I
}
define internal fastcc i8*@_SMLL4exps_1406(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8***
%g=load i8**,i8***%f,align 8
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=call i8*@sml_alloc(i32 inreg 20)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
store i8*%i,i8**%e,align 8
%l=getelementptr inbounds i8,i8*%i,i64 4
%m=bitcast i8*%l to i32*
store i32 0,i32*%m,align 1
%n=bitcast i8*%i to i32*
store i32 3,i32*%n,align 4
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
store i8*%o,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%i,i64 16
%s=bitcast i8*%r to i32*
store i32 2,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=bitcast i8*%D to i32*
%F=getelementptr inbounds i8,i8*%D,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%D,i64 4
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 1
store i32 2,i32*%E,align 4
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%D,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i32*
store i32 2,i32*%N,align 4
ret i8*%D
}
define internal fastcc i8*@_SMLL4exps_1407(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=getelementptr inbounds i8,i8*%k,i64 4
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 1
%p=bitcast i8*%k to i32*
store i32 3,i32*%p,align 4
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%k,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 16
%u=bitcast i8*%t to i32*
store i32 2,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=bitcast i8*%F to i32*
%H=getelementptr inbounds i8,i8*%F,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%F,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
store i32 2,i32*%G,align 4
%L=load i8*,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%F,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i32*
store i32 2,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__OFFSETE_1408(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__SELECTE_1418(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__SELECTE_1419(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=bitcast i8*%j to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%p)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
store i8*%y,i8**%c,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__SELECTE_1418 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__SELECTE_1418 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%c,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%b,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%J)
ret i8*%T
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1425(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1426(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%i)
store i8*%k,i8**%b,align 8
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177288,i32*%n,align 4
store i8*%l,i8**%c,align 8
%o=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to i32*
store i32 1,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_1425 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_1425 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 -2147483647,i32*%C,align 4
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1428(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8**%n to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%s(i8*inreg%v,i8*inreg%o)
%x=tail call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1429(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%b,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%b to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=getelementptr inbounds i8*,i8**%q,i64 2
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eP,i64 0,i32 2)to i8*))
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%f,align 8
%G=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*%J(i8*inreg%L,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gs,i64 0,i32 2)to i8*))
store i8*%M,i8**%c,align 8
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
store i8*%N,i8**%h,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_1428 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__INSERTE_1428 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
%af=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ag=call fastcc i8*%D(i8*inreg%af,i8*inreg%U)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%an=getelementptr inbounds i8,i8*%am,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=call fastcc i8*%aj(i8*inreg%al,i8*inreg%ap)
%ar=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%aq)
store i8*%ar,i8**%b,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%c,align 8
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*null,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=load i8*,i8**%d,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%e,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
%aV=load i8*,i8**%g,align 8
%aW=tail call fastcc i8*%x(i8*inreg%aV,i8*inreg%aL)
ret i8*%aW
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__UPDATEE_1431(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__UPDATEE_1432(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=bitcast i8*%j to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%p)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
store i8*%y,i8**%c,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__UPDATEE_1431 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__UPDATEE_1431 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%c,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%b,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%J)
ret i8*%T
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fp,i64 0,i32 2)to i8*))
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=load i8*,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=tail call fastcc i8*%u(i8*inreg%Q,i8*inreg%G)
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fN,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*null,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%d,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%b,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=tail call fastcc i8*%y(i8*inreg%ae,i8*inreg%U)
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5unionE_1458(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%D
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp eq i8*%q,null
br i1%r,label%s,label%t
s:
ret i8*null
t:
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
ret i8*%w
D:
%E=bitcast i8*%l to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%b,align 8
%G=getelementptr inbounds i8,i8*%i,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=icmp eq i8*%I,null
br i1%J,label%K,label%S
K:
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
%O=load i8*,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
ret i8*%L
S:
%T=bitcast i8*%I to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=call fastcc i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg%V)
store i8*%af,i8**%b,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
%aj=load i8*,i8**%b,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
ret i8*%ag
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gu,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9listToSetE_1462(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%b to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%c,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg 1,i32 inreg 8)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg%x)
store i8*%y,i8**%b,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%b,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=tail call fastcc i8*%r(i8*inreg%J,i8*inreg%z)
ret i8*%K
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9listToSetE_1464(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gv,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%d to i8***
%v=load i8**,i8***%u,align 8
store i8*null,i8**%d,align 8
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gw,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
%R=load i8*,i8**%d,align 8
%S=tail call fastcc i8*%A(i8*inreg%R,i8*inreg%Q)
ret i8*%S
}
define internal fastcc i32@_SMLLN12ElaborateSQL12filterLabelsE_1471(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%a to i8**
%i=bitcast i8*%b to i8**
br label%o
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%j],[%h,%g]
%q=phi i8**[%l,%j],[%i,%g]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%p,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=tail call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%t)
ret i32%D
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12filterLabelsE_1472(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%r,label%v
r:
%s=bitcast i8**%d to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
ret i8*%u
v:
%w=bitcast i8*%p to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call fastcc i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg 1,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 12)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177288,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN12ElaborateSQL12filterLabelsE_1471 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12filterLabelsE_2807 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=call fastcc i8*%B(i8*inreg%W,i8*inreg%L)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=bitcast i8**%c to i8***
%ae=load i8**,i8***%ad,align 8
%af=load i8*,i8**%ae,align 8
%ag=tail call fastcc i8*%aa(i8*inreg%ac,i8*inreg%af)
ret i8*%ag
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6expLocE_1474(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 5,label%bi
i32 3,label%bb
i32 9,label%a7
i32 14,label%a3
i32 7,label%aZ
i32 1,label%aS
i32 2,label%aL
i32 4,label%aE
i32 6,label%ax
i32 10,label%aq
i32 11,label%aj
i32 8,label%ae
i32 12,label%X
i32 13,label%S
i32 0,label%L
i32 15,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gx,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
ret i8*%K
L:
%M=getelementptr inbounds i8,i8*%i,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
ret i8*%R
S:
%T=getelementptr inbounds i8,i8*%i,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=tail call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%V)
ret i8*%W
X:
%Y=getelementptr inbounds i8,i8*%i,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
ret i8*%ad
ae:
%af=getelementptr inbounds i8,i8*%i,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=tail call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%ah)
ret i8*%ai
aj:
%ak=getelementptr inbounds i8,i8*%i,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
ret i8*%ap
aq:
%ar=getelementptr inbounds i8,i8*%i,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
ret i8*%aw
ax:
%ay=getelementptr inbounds i8,i8*%i,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
ret i8*%aD
aE:
%aF=getelementptr inbounds i8,i8*%i,i64 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
ret i8*%aK
aL:
%aM=getelementptr inbounds i8,i8*%i,i64 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
ret i8*%aR
aS:
%aT=getelementptr inbounds i8,i8*%i,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=getelementptr inbounds i8,i8*%aV,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
ret i8*%aY
aZ:
%a0=getelementptr inbounds i8,i8*%i,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
ret i8*%a2
a3:
%a4=getelementptr inbounds i8,i8*%i,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
ret i8*%a6
a7:
%a8=getelementptr inbounds i8,i8*%i,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
ret i8*%ba
bb:
%bc=getelementptr inbounds i8,i8*%i,i64 8
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
%bf=getelementptr inbounds i8,i8*%be,i64 8
%bg=bitcast i8*%bf to i8**
%bh=load i8*,i8**%bg,align 8
ret i8*%bh
bi:
%bj=getelementptr inbounds i8,i8*%i,i64 8
%bk=bitcast i8*%bj to i8**
%bl=load i8*,i8**%bk,align 8
%bm=getelementptr inbounds i8,i8*%bl,i64 8
%bn=bitcast i8*%bm to i8**
%bo=load i8*,i8**%bn,align 8
ret i8*%bo
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6getLocE_1476(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
f:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
br label%d
d:
%e=phi i8*[%aH,%aE],[%a,%f]
store i8*%e,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%e,%d]
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 16,label%cV
i32 8,label%cO
i32 6,label%cH
i32 17,label%cD
i32 3,label%cw
i32 4,label%cp
i32 19,label%ci
i32 20,label%cb
i32 0,label%b4
i32 27,label%bX
i32 1,label%bQ
i32 28,label%bJ
i32 9,label%bC
i32 10,label%bv
i32 30,label%bo
i32 11,label%bh
i32 21,label%ba
i32 18,label%a3
i32 15,label%aW
i32 25,label%aP
i32 22,label%aI
i32 23,label%aE
i32 13,label%ax
i32 12,label%aq
i32 14,label%aj
i32 29,label%ae
i32 7,label%Z
i32 2,label%V
i32 5,label%R
i32 24,label%N
i32 26,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gy,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%l,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
ret i8*%M
N:
%O=getelementptr inbounds i8,i8*%l,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
ret i8*%Q
R:
%S=getelementptr inbounds i8,i8*%l,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
ret i8*%U
V:
%W=getelementptr inbounds i8,i8*%l,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
Z:
%aa=getelementptr inbounds i8,i8*%l,i64 8
%ab=bitcast i8*%aa to i8***
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
ret i8*%ad
ae:
%af=getelementptr inbounds i8,i8*%l,i64 8
%ag=bitcast i8*%af to i8***
%ah=load i8**,i8***%ag,align 8
%ai=load i8*,i8**%ah,align 8
ret i8*%ai
aj:
%ak=getelementptr inbounds i8,i8*%l,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
ret i8*%ap
aq:
%ar=getelementptr inbounds i8,i8*%l,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=getelementptr inbounds i8,i8*%at,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
ret i8*%aw
ax:
%ay=getelementptr inbounds i8,i8*%l,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
ret i8*%aD
aE:
%aF=getelementptr inbounds i8,i8*%l,i64 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
br label%d
aI:
%aJ=getelementptr inbounds i8,i8*%l,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=getelementptr inbounds i8,i8*%aL,i64 32
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
ret i8*%aO
aP:
%aQ=getelementptr inbounds i8,i8*%l,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
ret i8*%aV
aW:
%aX=getelementptr inbounds i8,i8*%l,i64 8
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
ret i8*%a2
a3:
%a4=getelementptr inbounds i8,i8*%l,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
ret i8*%a9
ba:
%bb=getelementptr inbounds i8,i8*%l,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=getelementptr inbounds i8,i8*%bd,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
ret i8*%bg
bh:
%bi=getelementptr inbounds i8,i8*%l,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
%bl=getelementptr inbounds i8,i8*%bk,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
ret i8*%bn
bo:
%bp=getelementptr inbounds i8,i8*%l,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
ret i8*%bu
bv:
%bw=getelementptr inbounds i8,i8*%l,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
%bz=getelementptr inbounds i8,i8*%by,i64 8
%bA=bitcast i8*%bz to i8**
%bB=load i8*,i8**%bA,align 8
ret i8*%bB
bC:
%bD=getelementptr inbounds i8,i8*%l,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
%bG=getelementptr inbounds i8,i8*%bF,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
ret i8*%bI
bJ:
%bK=getelementptr inbounds i8,i8*%l,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 8
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
ret i8*%bP
bQ:
%bR=getelementptr inbounds i8,i8*%l,i64 8
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 24
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
ret i8*%bW
bX:
%bY=getelementptr inbounds i8,i8*%l,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
%b1=getelementptr inbounds i8,i8*%b0,i64 24
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
ret i8*%b3
b4:
%b5=getelementptr inbounds i8,i8*%l,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
%b8=getelementptr inbounds i8,i8*%b7,i64 16
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
ret i8*%ca
cb:
%cc=getelementptr inbounds i8,i8*%l,i64 8
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 24
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
ret i8*%ch
ci:
%cj=getelementptr inbounds i8,i8*%l,i64 8
%ck=bitcast i8*%cj to i8**
%cl=load i8*,i8**%ck,align 8
%cm=getelementptr inbounds i8,i8*%cl,i64 16
%cn=bitcast i8*%cm to i8**
%co=load i8*,i8**%cn,align 8
ret i8*%co
cp:
%cq=getelementptr inbounds i8,i8*%l,i64 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
%ct=getelementptr inbounds i8,i8*%cs,i64 8
%cu=bitcast i8*%ct to i8**
%cv=load i8*,i8**%cu,align 8
ret i8*%cv
cw:
%cx=getelementptr inbounds i8,i8*%l,i64 8
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 8
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
ret i8*%cC
cD:
%cE=getelementptr inbounds i8,i8*%l,i64 8
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
ret i8*%cG
cH:
%cI=getelementptr inbounds i8,i8*%l,i64 8
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=getelementptr inbounds i8,i8*%cK,i64 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
ret i8*%cN
cO:
%cP=getelementptr inbounds i8,i8*%l,i64 8
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=getelementptr inbounds i8,i8*%cR,i64 16
%cT=bitcast i8*%cS to i8**
%cU=load i8*,i8**%cT,align 8
ret i8*%cU
cV:
%cW=getelementptr inbounds i8,i8*%l,i64 8
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
%cZ=getelementptr inbounds i8,i8*%cY,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
ret i8*%c1
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 0,label%aY
i32 1,label%am
i32 3,label%al
i32 2,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gz,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%k,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=bitcast i8**%c to i8***
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%S)
store i8*%T,i8**%b,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%X)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=tail call fastcc i8*%N(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
al:
ret i8*null
am:
%an=getelementptr inbounds i8,i8*%k,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%b,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%c,align 8
%at=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%d,align 8
%az=bitcast i8**%b to i8***
%aA=load i8**,i8***%az,align 8
store i8*null,i8**%b,align 8
%aB=load i8*,i8**%aA,align 8
%aC=call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%aB)
store i8*%aC,i8**%b,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*null,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aD,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%b,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%e,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=load i8*,i8**%d,align 8
%aX=tail call fastcc i8*%aw(i8*inreg%aW,i8*inreg%aM)
ret i8*%aX
aY:
%aZ=getelementptr inbounds i8,i8*%k,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
%a5=icmp eq i8*%a4,null
br i1%a5,label%al,label%a6
a6:
%a7=bitcast i8*%a4 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%b,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
%bc=load i8*,i8**%b,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i8**
store i8*null,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
ret i8*%a9
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
%o=icmp eq i8*%n,null
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=icmp eq i8*%r,null
%t=and i1%o,%s
br i1%t,label%u,label%v
u:
ret i8*null
v:
store i8*%n,i8**%b,align 8
store i8*%r,i8**%c,align 8
%w=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=call fastcc i8*%z(i8*inreg%L,i8*inreg%C)
store i8*%M,i8**%d,align 8
%N=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%b,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ad=call fastcc i8*%Q(i8*inreg%ac,i8*inreg%T)
store i8*%ad,i8**%b,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%b,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
store i8*null,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
store i8*null,i8**%c,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%b,align 8
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
%aN=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aO=call fastcc i8*%aK(i8*inreg%aM,i8*inreg%aN)
%aP=call fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%aO)
store i8*%aP,i8**%b,align 8
%aQ=call i8*@sml_alloc(i32 inreg 12)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177288,i32*%aS,align 4
%aT=load i8*,i8**%b,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to i32*
store i32 1,i32*%aW,align 4
ret i8*%aQ
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4joinE_1488(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%f,label%h
f:
%g=bitcast i8*%a to i8**
br label%k
h:
call void@sml_check(i32 inreg%d)
%i=bitcast i8**%b to i8***
%j=load i8**,i8***%i,align 8
br label%k
k:
%l=phi i8**[%j,%h],[%g,%f]
%m=load i8*,i8**%l,align 8
%n=call fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%m)
store i8*%n,i8**%c,align 8
%o=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%r)
store i8*%s,i8**%b,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%t)
store i8*%D,i8**%b,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%b,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
store i8*null,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
o:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%f,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=bitcast i8*%n to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 0,label%b9
i32 1,label%aw
i32 3,label%av
i32 2,label%J
]
r:
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%f,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%g,align 8
%w=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gB,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%g,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%n,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%g,align 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%O)
store i8*%P,i8**%f,align 8
%Q=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%T)
store i8*%U,i8**%g,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=call fastcc i8*@_SMLLN12ElaborateSQL4joinE_1488(i8*inreg%V)
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%f,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%g,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%g,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
ret i8*%al
av:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@gA,i64 0,i32 2)to i8*)
aw:
%ax=getelementptr inbounds i8,i8*%n,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%h,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%aE)
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%f,align 8
%aI=getelementptr inbounds i8,i8*%aF,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%g,align 8
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
%aV=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aV)
%aW=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aW)
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%aL,i8**%d,align 8
%aX=load atomic i32,i32*@sml_check_flag unordered,align 4
%aY=icmp eq i32%aX,0
br i1%aY,label%a6,label%aZ
aZ:
call void@sml_check(i32 inreg%aX)
%a0=load i8*,i8**%d,align 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
%a3=getelementptr inbounds i8,i8*%a0,i64 8
%a4=bitcast i8*%a3 to i8**
%a5=load i8*,i8**%a4,align 8
br label%a6
a6:
%a7=phi i8*[%a5,%aZ],[%aQ,%aw]
%a8=phi i8*[%a2,%aZ],[%aO,%aw]
store i8*%a8,i8**%d,align 8
%a9=icmp eq i8*%a7,null
br i1%a9,label%ba,label%bj
ba:
store i8*null,i8**%d,align 8
%bb=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%a8)
store i8*%bb,i8**%d,align 8
%bc=call i8*@sml_alloc(i32 inreg 12)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177288,i32*%be,align 4
%bf=load i8*,i8**%d,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to i32*
store i32 1,i32*%bi,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aW)
br label%bX
bj:
%bk=bitcast i8*%a7 to i8**
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%e,align 8
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
%bp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bm,i64 16
%bv=bitcast i8*%bu to i32*
store i32 3,i32*%bv,align 4
%bw=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bw)
%bx=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bx)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%bm,i8**%b,align 8
%by=call i8*@sml_alloc(i32 inreg 12)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177288,i32*%bA,align 4
store i8*%by,i8**%c,align 8
%bB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%by,i64 8
%bE=bitcast i8*%bD to i32*
store i32 1,i32*%bE,align 4
%bF=call i8*@sml_alloc(i32 inreg 28)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177304,i32*%bH,align 4
%bI=load i8*,i8**%c,align 8
%bJ=bitcast i8*%bF to i8**
store i8*%bI,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bF,i64 8
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10PatAsLabelE_1163 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bF,i64 16
%bN=bitcast i8*%bM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10PatAsLabelE_1163 to void(...)*),void(...)**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bF,i64 24
%bP=bitcast i8*%bO to i32*
store i32 -2147483647,i32*%bP,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bx)
store i8*%bF,i8**%d,align 8
%bQ=call i8*@sml_alloc(i32 inreg 12)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177288,i32*%bS,align 4
%bT=load i8*,i8**%d,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bQ,i64 8
%bW=bitcast i8*%bV to i32*
store i32 1,i32*%bW,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aW)
br label%bX
bX:
%bY=phi i8*[%bc,%ba],[%bQ,%bj]
store i8*%bY,i8**%g,align 8
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
%b2=load i8*,i8**%f,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=load i8*,i8**%g,align 8
%b5=getelementptr inbounds i8,i8*%bZ,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bZ,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
ret i8*%bZ
b9:
%ca=getelementptr inbounds i8,i8*%n,i64 8
%cb=bitcast i8*%ca to i8**
%cc=load i8*,i8**%cb,align 8
%cd=getelementptr inbounds i8,i8*%cc,i64 8
%ce=bitcast i8*%cd to i8**
%cf=load i8*,i8**%ce,align 8
%cg=icmp eq i8*%cf,null
br i1%cg,label%av,label%ch
ch:
%ci=bitcast i8*%cf to i8**
%cj=load i8*,i8**%ci,align 8
%ck=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%cj)
store i8*%ck,i8**%f,align 8
%cl=call i8*@sml_alloc(i32 inreg 12)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177288,i32*%cn,align 4
store i8*%cl,i8**%g,align 8
%co=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cp=bitcast i8*%cl to i8**
store i8*%co,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cl,i64 8
%cr=bitcast i8*%cq to i32*
store i32 1,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
%cv=bitcast i8*%cs to i8**
store i8*null,i8**%cv,align 8
%cw=load i8*,i8**%g,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
store i8*null,i8**%f,align 8
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
%cE=load i8*,i8**%f,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%g,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cB,i64 16
%cK=bitcast i8*%cJ to i32*
store i32 3,i32*%cK,align 4
ret i8*%cB
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToPatE_1498(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%o)
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call fastcc i8*@_SMLLN12ElaborateSQL4joinE_1488(i8*inreg%q)
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=getelementptr inbounds i8,i8*%A,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%c,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=load i8*,i8**%b,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12flattenTableE_1502(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12flattenTableE_1504(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
store i8*null,i8**%c,align 8
%n=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%l)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%f,align 8
%t=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=bitcast i8**%d to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%B)
%D=call fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%C)
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=call fastcc i8*%w(i8*inreg%N,i8*inreg%E)
store i8*%O,i8**%c,align 8
%P=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*%S(i8*inreg%U,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gD,i64 0,i32 2)to i8*))
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%e,align 8
%ab=load i8**,i8***%z,align 8
store i8*null,i8**%d,align 8
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%ac)
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=call fastcc i8*%Y(i8*inreg%ae,i8*inreg%ad)
%ag=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%af)
store i8*%ag,i8**%d,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%d,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=load i8*,i8**%f,align 8
%as=tail call fastcc i8*%q(i8*inreg%ar,i8*inreg%ah)
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_1507(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_1509(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_1511(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%f,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%f,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
store i8*null,i8**%f,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%p)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%j,align 8
%x=bitcast i8**%g to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
%A=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
%B=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%B)
%C=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%C)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%z,i8**%c,align 8
%D=load atomic i32,i32*@sml_check_flag unordered,align 4
%E=icmp eq i32%D,0
br i1%E,label%H,label%F
F:
call void@sml_check(i32 inreg%D)
%G=load i8*,i8**%c,align 8
br label%H
H:
%I=phi i8*[%G,%F],[%z,%o]
%J=icmp eq i8*%I,null
br i1%J,label%K,label%L
K:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%B)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C)
br label%aG
L:
%M=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gC,i64 0,i32 2)to i8*))
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%d,align 8
%ae=bitcast i8**%c to i8***
%af=load i8**,i8***%ae,align 8
%ag=load i8*,i8**%af,align 8
%ah=call fastcc i8*@_SMLLN12ElaborateSQL14tableToPatPairE_1490(i8*inreg%ag)
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=call fastcc i8*%ab(i8*inreg%ai,i8*inreg%ah)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%am(i8*inreg%ao,i8*inreg%as)
%au=call fastcc i8*@_SMLLN12ElaborateSQL4pairE_1484(i8*inreg%at)
store i8*%au,i8**%c,align 8
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177296,i32*%ax,align 4
%ay=load i8*,i8**%c,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=load i8*,i8**%e,align 8
%aF=call fastcc i8*%P(i8*inreg%aE,i8*inreg%av)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%B)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C)
br label%aG
aG:
%aH=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),%K],[%aF,%L]
store i8*%aH,i8**%f,align 8
%aI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*%aL(i8*inreg%aN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gE,i64 0,i32 2)to i8*))
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%i,align 8
%aU=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%h,align 8
%a0=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=call fastcc i8*%a3(i8*inreg%a5,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gF,i64 0,i32 2)to i8*))
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8**,i8***%x,align 8
store i8*null,i8**%g,align 8
%bd=load i8*,i8**%bc,align 8
%be=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%bd)
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=call fastcc i8*%aX(i8*inreg%bf,i8*inreg%be)
%bh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bi=call fastcc i8*%aR(i8*inreg%bh,i8*inreg%bg)
%bj=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%bi)
store i8*%bj,i8**%g,align 8
%bk=call i8*@sml_alloc(i32 inreg 20)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177296,i32*%bm,align 4
%bn=load i8*,i8**%f,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=load i8*,i8**%g,align 8
%bq=getelementptr inbounds i8,i8*%bk,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bk,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=load i8*,i8**%j,align 8
%bv=tail call fastcc i8*%u(i8*inreg%bu,i8*inreg%bk)
ret i8*%bv
}
define internal fastcc i8*@_SMLL4pats_1514(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL4pats_1516(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1518(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1520(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%q
n:
call void@sml_check(i32 inreg%j)
%o=bitcast i8**%f to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%n],[%m,%l]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%t)
%E=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%D)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%i,align 8
%K=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%N(i8*inreg%P,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gG,i64 0,i32 2)to i8*))
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%f,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%T(i8*inreg%V,i8*inreg%Z)
%ab=call fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1154(i8*inreg%aa)
store i8*%ab,i8**%e,align 8
%ac=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*%af(i8*inreg%ah,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gH,i64 0,i32 2)to i8*))
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8*(i8*,i8*)**
%al=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak,align 8
%am=bitcast i8*%ai to i8**
%an=load i8*,i8**%am,align 8
%ao=load i8*,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
%as=call fastcc i8*%al(i8*inreg%an,i8*inreg%ar)
%at=call fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%as)
store i8*%at,i8**%c,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=load i8*,i8**%c,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*null,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
store i8*null,i8**%d,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%g,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%c,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
%a3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a4=call fastcc i8*%a0(i8*inreg%a2,i8*inreg%a3)
%a5=call fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%a4)
store i8*%a5,i8**%c,align 8
%a6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=call fastcc i8*%a9(i8*inreg%bb,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gI,i64 0,i32 2)to i8*))
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%h,align 8
%bi=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8*(i8*,i8*)**
%bl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bk,align 8
%bm=bitcast i8*%bi to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%g,align 8
%bo=load i8*,i8**%f,align 8
%bp=getelementptr inbounds i8,i8*%bo,i64 16
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%d,align 8
store i8*null,i8**%f,align 8
%bs=getelementptr inbounds i8,i8*%bo,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
store i8*%bu,i8**%e,align 8
%bv=call i8*@sml_alloc(i32 inreg 20)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
%by=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bz=bitcast i8*%bv to i8**
store i8*%by,i8**%bz,align 8
%bA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bB=getelementptr inbounds i8,i8*%bv,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bv,i64 16
%bE=bitcast i8*%bD to i32*
store i32 3,i32*%bE,align 4
%bF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bG=call fastcc i8*%bl(i8*inreg%bF,i8*inreg%bv)
%bH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bI=call fastcc i8*%bf(i8*inreg%bH,i8*inreg%bG)
%bJ=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%bI)
store i8*%bJ,i8**%d,align 8
%bK=call i8*@sml_alloc(i32 inreg 20)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177296,i32*%bM,align 4
%bN=load i8*,i8**%c,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=load i8*,i8**%d,align 8
%bQ=getelementptr inbounds i8,i8*%bK,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*%bP,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bK,i64 16
%bT=bitcast i8*%bS to i32*
store i32 3,i32*%bT,align 4
%bU=load i8*,i8**%i,align 8
%bV=tail call fastcc i8*%H(i8*inreg%bU,i8*inreg%bK)
ret i8*%bV
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1521(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1523(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=icmp eq i8*%p,null
br i1%q,label%r,label%s
r:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gJ,i64 0,i32 2)to i8*)
s:
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%u,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
store i8*%A,i8**%f,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%A,i64 24
%M=bitcast i8*%L to i32*
store i32 7,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1520 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1520 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 24
%X=bitcast i8*%W to i32*
store i32 -2147483647,i32*%X,align 4
%Y=tail call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%N)
ret i8*%Y
}
define internal fastcc i8*@_SMLL5inner_1526(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%p
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%d,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%n to i8*
br label%p
p:
%q=phi i8*[%o,%k],[%a,%i]
%r=phi i8**[%n,%k],[%j,%i]
%s=phi i8*[%l,%k],[%b,%i]
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=load i8*,i8**%r,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%q,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%c,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=call fastcc i8*%B(i8*inreg%R,i8*inreg%H)
store i8*%S,i8**%c,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%d,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=load i8*,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%f,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ad,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLL5inner_1527(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN11RecordLabel3Set5foldrE(i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 1
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%g,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1526 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1526 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=call fastcc i8*%o(i8*inreg%R,i8*inreg%G)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=call fastcc i8*%V(i8*inreg%X,i8*inreg null)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
%af=tail call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ae)
ret i8*%af
}
define internal fastcc i8*@_SMLL5inner_1528(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1527 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1527 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLL5outer_1529(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8*%b to i8**
br label%q
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%l],[%j,%i]
%s=phi i8**[%n,%l],[%k,%i]
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8*,i8**%s,i64 2
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
store i8*null,i8**%d,align 8
%w=load i8*,i8**%r,align 8
%x=call fastcc i8*@_SMLL5inner_1528(i8*inreg%w,i8*inreg%t)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=call fastcc i8*%A(i8*inreg%C,i8*inreg%G)
%I=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%H)
store i8*%I,i8**%c,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%d,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLL5outer_1530(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN11RecordLabel3Map6foldriE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5outer_1529 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5outer_1529 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%P(i8*inreg%R,i8*inreg null)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
%Y=load i8*,i8**%d,align 8
%Z=tail call fastcc i8*%V(i8*inreg%X,i8*inreg%Y)
ret i8*%Z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL18column2setToRecordE_1531(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 12)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177288,i32*%r,align 4
store i8*%p,i8**%e,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i32*
store i32 1,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
%z=load i8*,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1528 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5inner_1528 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 24
%G=bitcast i8*%F to i32*
store i32 -2147483647,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 12)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177288,i32*%J,align 4
store i8*%H,i8**%c,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5outer_1530 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5outer_1530 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 24
%Y=bitcast i8*%X to i32*
store i32 -2147483647,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%aa=call fastcc i8*@_SMLL5outer_1530(i8*inreg%R,i8*inreg%Z)
%ab=tail call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%aa)
ret i8*%ab
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1534(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%e to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%r)
store i8*%y,i8**%d,align 8
%z=load i8*,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i8*%D,i8**%g,align 8
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%D,i64 24
%P=bitcast i8*%O to i32*
store i32 7,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%f,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 20,i32*%V,align 4
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%af,i8**%e,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%af,i64 24
%ar=bitcast i8*%aq to i32*
store i32 7,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=bitcast i8*%as to i32*
%au=getelementptr inbounds i8,i8*%as,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=getelementptr inbounds i8,i8*%as,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
store i32 20,i32*%at,align 4
%ay=load i8*,i8**%e,align 8
%az=getelementptr inbounds i8,i8*%as,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 16
%aC=bitcast i8*%aB to i32*
store i32 2,i32*%aC,align 4
ret i8*%as
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1535(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1534 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1534 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1536(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1538(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1539(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1540(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
s:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%g,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%g,align 8
%p=load i8*,i8**%i,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%a,%s]
%t=phi i8*[%o,%n],[%b,%s]
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%g,align 8
%w=getelementptr inbounds i8,i8*%t,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=getelementptr inbounds i8,i8*%r,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%j,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%k,align 8
%F=load i8*,i8**%g,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W)
%X=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%X)
%Y=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Y)
%Z=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Z)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%M,i8**%c,align 8
%aa=load atomic i32,i32*@sml_check_flag unordered,align 4
%ab=icmp eq i32%aa,0
br i1%ab,label%ah,label%ac
ac:
call void@sml_check(i32 inreg%aa)
%ad=load i8*,i8**%c,align 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 8
br label%ah
ah:
%ai=phi i8*[%ag,%ac],[%S,%q]
%aj=phi i8*[%af,%ac],[%P,%q]
store i8*%aj,i8**%c,align 8
%ak=bitcast i8*%ai to i8***
%al=load i8**,i8***%ak,align 8
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%d,align 8
%an=getelementptr inbounds i8*,i8**%al,i64 1
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%e,align 8
%ap=call fastcc i8*@_SMLFN11RecordLabel3Map4findE(i32 inreg 1,i32 inreg 8)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%f,align 8
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177296,i32*%ax,align 4
%ay=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=getelementptr inbounds i8,i8*%av,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%av,i64 16
%aE=bitcast i8*%aD to i32*
store i32 3,i32*%aE,align 4
%aF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aG=call fastcc i8*%as(i8*inreg%aF,i8*inreg%av)
%aH=icmp eq i8*%aG,null
br i1%aH,label%aI,label%aJ
aI:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Z)
br label%bP
aJ:
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%c,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%c,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%e,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%aM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%X)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Z)
%aX=icmp eq i32%aW,0
br i1%aX,label%bP,label%aY
aY:
%aZ=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gK,i64 0,i32 2)to i8*))
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i8*(i8*,i8*)**
%a2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a1,align 8
%a3=bitcast i8*%aZ to i8**
%a4=load i8*,i8**%a3,align 8
%a5=bitcast i8**%i to i8***
%a6=load i8**,i8***%a5,align 8
store i8*null,i8**%i,align 8
%a7=load i8*,i8**%a6,align 8
%a8=call fastcc i8*%a2(i8*inreg%a4,i8*inreg%a7)
store i8*%a8,i8**%i,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%j,align 8
%bc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bf=getelementptr inbounds i8,i8*%a9,i64 8
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a9,i64 16
%bi=bitcast i8*%bh to i32*
store i32 3,i32*%bi,align 4
%bj=call i8*@sml_alloc(i32 inreg 28)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177304,i32*%bl,align 4
store i8*%bj,i8**%g,align 8
%bm=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bj,i64 8
%bp=bitcast i8*%bo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1538 to void(...)*),void(...)**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bj,i64 16
%br=bitcast i8*%bq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1538 to void(...)*),void(...)**%br,align 8
%bs=getelementptr inbounds i8,i8*%bj,i64 24
%bt=bitcast i8*%bs to i32*
store i32 -2147483647,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
store i8*%bu,i8**%i,align 8
%bx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bA=getelementptr inbounds i8,i8*%bu,i64 8
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 16
%bD=bitcast i8*%bC to i32*
store i32 3,i32*%bD,align 4
%bE=call i8*@sml_alloc(i32 inreg 28)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177304,i32*%bG,align 4
%bH=load i8*,i8**%i,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bE,i64 8
%bK=bitcast i8*%bJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1539 to void(...)*),void(...)**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bE,i64 16
%bM=bitcast i8*%bL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1539 to void(...)*),void(...)**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bE,i64 24
%bO=bitcast i8*%bN to i32*
store i32 -2147483647,i32*%bO,align 4
ret i8*%bE
bP:
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
store i8*%bQ,i8**%j,align 8
%bT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bQ,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 3,i32*%bZ,align 4
%b0=call i8*@sml_alloc(i32 inreg 28)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177304,i32*%b2,align 4
%b3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1535 to void(...)*),void(...)**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1535 to void(...)*),void(...)**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 24
%ca=bitcast i8*%b9 to i32*
store i32 -2147483647,i32*%ca,align 4
%cb=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%b0)
%cc=getelementptr inbounds i8,i8*%cb,i64 16
%cd=bitcast i8*%cc to i8*(i8*,i8*)**
%ce=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cd,align 8
%cf=bitcast i8*%cb to i8**
%cg=load i8*,i8**%cf,align 8
%ch=bitcast i8**%i to i8***
%ci=load i8**,i8***%ch,align 8
%cj=load i8*,i8**%ci,align 8
%ck=tail call fastcc i8*%ce(i8*inreg%cg,i8*inreg%cj)
ret i8*%ck
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1541(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%f,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%g,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%h,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1540 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1540 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%N)
%O=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%C,i8**%c,align 8
%P=call i8*@sml_alloc(i32 inreg 12)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177288,i32*%R,align 4
store i8*%P,i8**%d,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL18column2setToRecordE_1531 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 16
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL18column2setToRecordE_1531 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%W,i64 24
%ag=bitcast i8*%af to i32*
store i32 -2147483647,i32*%ag,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
store i8*%Z,i8**%g,align 8
%ah=bitcast i8**%f to i8***
%ai=load i8**,i8***%ah,align 8
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%e,align 8
%ak=getelementptr inbounds i8*,i8**%ai,i64 1
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%f,align 8
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%am)
%ax=load i8*,i8**%g,align 8
%ay=tail call fastcc i8*@_SMLLN12ElaborateSQL18column2setToRecordE_1531(i8*inreg%ax,i8*inreg%aw)
ret i8*%ay
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1544(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%p)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1546(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg 0)
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%j,i64 4
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 1
%o=bitcast i8*%j to i32*
store i32 1,i32*%o,align 4
%p=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%c,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
store i32 2,i32*%F,align 4
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1548(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gM,i64 0,i32 2)to i8*)
l:
%m=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%p(i8*inreg%r,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gL,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=bitcast i8**%b to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%v(i8*inreg%x,i8*inreg%A)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=tail call fastcc i8*%E(i8*inreg%G,i8*inreg%K)
ret i8*%L
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1550(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%f,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%f,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%C)
%D=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%D)
%E=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%s,i8**%b,align 8
%F=load atomic i32,i32*@sml_check_flag unordered,align 4
%G=icmp eq i32%F,0
br i1%G,label%O,label%H
H:
call void@sml_check(i32 inreg%F)
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=getelementptr inbounds i8,i8*%I,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
br label%O
O:
%P=phi i8*[%N,%H],[%x,%k]
%Q=phi i8*[%K,%H],[%v,%k]
store i8*%Q,i8**%b,align 8
store i8*%P,i8**%c,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gf,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%d,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%X)
%ai=load i8*,i8**%d,align 8
%aj=tail call fastcc i8*%U(i8*inreg%ai,i8*inreg%ah)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%D)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
ret i8*%aj
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1552(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1554(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gO,i64 0,i32 2)to i8*)
l:
%m=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%p(i8*inreg%r,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gN,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=bitcast i8**%b to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%v(i8*inreg%x,i8*inreg%A)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%b,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=tail call fastcc i8*%E(i8*inreg%G,i8*inreg%K)
ret i8*%L
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1556(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1558(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
store i8*null,i8**%d,align 8
%l=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%l)
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%j,i8**%c,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%p,label%o
o:
call void@sml_check(i32 inreg%m)
br label%p
p:
%q=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ge,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%l)
%y=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%y)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%x,i8**%b,align 8
%z=load atomic i32,i32*@sml_check_flag unordered,align 4
%A=icmp eq i32%z,0
br i1%A,label%C,label%B
B:
call void@sml_check(i32 inreg%z)
br label%C
C:
%D=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gg,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%b,align 8
%K=tail call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%y)
ret i8*%K
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1560(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_1564(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLL7toTuple_1566(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%q)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
store i8*%D,i8**%f,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%D,i64 24
%P=bitcast i8*%O to i32*
store i32 7,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=bitcast i8*%Q to i32*
%S=getelementptr inbounds i8,i8*%Q,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%Q,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
store i32 20,i32*%R,align 4
%W=load i8*,i8**%f,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLL7toTuple_1567(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1566 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1566 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLL7toTuple_1568(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1567 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1567 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
%T=tail call fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1548(i8*inreg%S)
ret i8*%T
}
define internal fastcc i8*@_SMLL4pats_1569(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLL4pats_1570(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLL7compare_1571(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL7compare_1573(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gT,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLL7compare_1575(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLL7compare_1576(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLL7compare_1577(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
store i8*null,i8**%c,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%o)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%h,align 8
%w=bitcast i8**%f to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%d,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_1569 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_1569 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
store i8*%V,i8**%d,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
store i8*%ac,i8**%c,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_1570 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4pats_1570 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 24
%am=bitcast i8*%al to i32*
store i32 -2147483647,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
%aq=load i8*,i8**%c,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*null,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
store i8*null,i8**%d,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%g,align 8
%az=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
store i8*%aG,i8**%c,align 8
%aJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aX=call fastcc i8*%aT(i8*inreg%aV,i8*inreg%aW)
%aY=call fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%aX)
store i8*%aY,i8**%e,align 8
%aZ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i8*(i8*,i8*)**
%a2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a1,align 8
%a3=bitcast i8*%aZ to i8**
%a4=load i8*,i8**%a3,align 8
%a5=call fastcc i8*%a2(i8*inreg%a4,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%a6=getelementptr inbounds i8,i8*%a5,i64 16
%a7=bitcast i8*%a6 to i8*(i8*,i8*)**
%a8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a7,align 8
%a9=bitcast i8*%a5 to i8**
%ba=load i8*,i8**%a9,align 8
%bb=load i8*,i8**%f,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
%bf=call fastcc i8*%a8(i8*inreg%ba,i8*inreg%be)
%bg=call fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1554(i8*inreg%bf)
%bh=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%bg)
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
%bl=bitcast i8*%bh to i8**
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%g,align 8
%bn=load i8*,i8**%f,align 8
%bo=getelementptr inbounds i8,i8*%bn,i64 24
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
store i8*%bq,i8**%d,align 8
%br=bitcast i8*%bn to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%c,align 8
%bt=call i8*@sml_alloc(i32 inreg 12)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177288,i32*%bv,align 4
store i8*%bt,i8**%i,align 8
%bw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bt,i64 8
%bz=bitcast i8*%by to i32*
store i32 1,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
%bD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1575 to void(...)*),void(...)**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1575 to void(...)*),void(...)**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 24
%bK=bitcast i8*%bJ to i32*
store i32 -2147483647,i32*%bK,align 4
%bL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bM=call fastcc i8*@_SMLL7toTuple_1568(i8*inreg%bL,i8*inreg%bA)
store i8*%bM,i8**%c,align 8
%bN=load i8*,i8**%f,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 24
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%i,align 8
store i8*null,i8**%f,align 8
%bR=getelementptr inbounds i8,i8*%bN,i64 8
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
store i8*%bT,i8**%d,align 8
%bU=call i8*@sml_alloc(i32 inreg 12)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177288,i32*%bW,align 4
store i8*%bU,i8**%f,align 8
%bX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to i32*
store i32 1,i32*%b0,align 4
%b1=call i8*@sml_alloc(i32 inreg 28)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177304,i32*%b3,align 4
%b4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%b1,i64 8
%b7=bitcast i8*%b6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1576 to void(...)*),void(...)**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b1,i64 16
%b9=bitcast i8*%b8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1576 to void(...)*),void(...)**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b1,i64 24
%cb=bitcast i8*%ca to i32*
store i32 -2147483647,i32*%cb,align 4
%cc=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cd=call fastcc i8*@_SMLL7toTuple_1568(i8*inreg%cc,i8*inreg%b1)
store i8*%cd,i8**%d,align 8
%ce=call i8*@sml_alloc(i32 inreg 20)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177296,i32*%cg,align 4
%ch=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ck=getelementptr inbounds i8,i8*%ce,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ce,i64 16
%cn=bitcast i8*%cm to i32*
store i32 3,i32*%cn,align 4
%co=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%ce)
%cp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cq=call fastcc i8*%bk(i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%c,align 8
%cr=call i8*@sml_alloc(i32 inreg 20)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177296,i32*%ct,align 4
%cu=load i8*,i8**%e,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%c,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cr,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=load i8*,i8**%h,align 8
%cC=tail call fastcc i8*%t(i8*inreg%cB,i8*inreg%cr)
ret i8*%cC
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_1578(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%f to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
store i8*null,i8**%f,align 8
%p=load i8*,i8**%o,align 8
%q=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q)
%r=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%p,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__nubE_1300 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Fun__nubE_1300 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
%K=load i8*,i8**%e,align 8
%L=tail call fastcc i8*@_SMLLN12ElaborateSQL7Fun__nubE_1300(i8*inreg%C,i8*inreg%K)
ret i8*%L
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_1579(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_1581(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
store i8*null,i8**%c,align 8
%o=icmp eq i8*%m,null
br i1%o,label%p,label%r
p:
%q=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gV,i64 0,i32 2)to i8*),%l],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gS,i64 0,i32 2)to i8*),%r]
ret i8*%q
r:
%s=bitcast i8*%m to i32*
%t=load i32,i32*%s,align 4
%u=icmp eq i32%t,0
br i1%u,label%p,label%v
v:
%w=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%w,i8**%c,align 8
%x=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%f,align 8
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%g,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1568 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7toTuple_1568 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=load i8**,i8***%y,align 8
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%e,align 8
%V=call i8*@sml_alloc(i32 inreg 36)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177312,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 16
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=getelementptr inbounds i8,i8*%V,i64 24
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%V,i64 32
%ak=bitcast i8*%aj to i32*
store i32 15,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
store i8*%al,i8**%c,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1577 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL7compare_1577 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 12)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177288,i32*%ay,align 4
store i8*%aw,i8**%d,align 8
%az=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to i32*
store i32 1,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 28)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177304,i32*%aF,align 4
%aG=load i8*,i8**%d,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1578 to void(...)*),void(...)**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aD,i64 16
%aL=bitcast i8*%aK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1578 to void(...)*),void(...)**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 24
%aN=bitcast i8*%aM to i32*
store i32 -2147483647,i32*%aN,align 4
ret i8*%aD
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1865(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*null,i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1867(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1868(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1869(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8***
%e=load i8**,i8***%d,align 8
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32 25,i32*%h,align 4
%m=load i8*,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%g,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%g,i64 16
%q=bitcast i8*%p to i32*
store i32 2,i32*%q,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1870(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1869 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1869 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1871(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1872(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1874(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1875(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%e,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1871 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1871 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=call fastcc i8*@_SMLLN12ElaborateSQL3SndE_1211(i8*inreg%y)
%K=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%J)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%N(i8*inreg%P,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gX,i64 0,i32 2)to i8*))
store i8*%Q,i8**%c,align 8
%R=load i8**,i8***%o,align 8
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1874 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1874 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1876(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1877(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%d to i8***
br label%o
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8***[%k,%i],[%m,%l]
%q=phi i8**[%j,%i],[%n,%l]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1876 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1876 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
%K=call fastcc i8*@_SMLLN12ElaborateSQL3SndE_1211(i8*inreg%z)
%L=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%c,align 8
%T=load i8**,i8***%p,align 8
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%d,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%e,align 8
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1877 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1877 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1879(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 1,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1880(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%k,i64 16
%t=bitcast i8*%s to i32*
store i32 3,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1879 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1879 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1881(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 5,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1882(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%k,i64 16
%t=bitcast i8*%s to i32*
store i32 3,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1881 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1881 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1883(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1884(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%k,i64 16
%t=bitcast i8*%s to i32*
store i32 3,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1883 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1883 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1885(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 2,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1886(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=call i8*@sml_alloc(i32 inreg 20)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
store i8*%k,i8**%e,align 8
%n=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%k,i64 16
%t=bitcast i8*%s to i32*
store i32 3,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
%x=load i8*,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1885 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1885 to void(...)*),void(...)**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 -2147483647,i32*%E,align 4
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1887(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=load i8,i8*%f,align 1
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%h to i64*
store i64 0,i64*%l,align 4
store i8%g,i8*%k,align 1
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=bitcast i8*%B to i32*
%D=getelementptr inbounds i8,i8*%B,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%B,i64 4
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 1
store i32 2,i32*%C,align 4
%H=load i8*,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 2,i32*%L,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1888(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=getelementptr inbounds i8,i8*%a,i64 8
%h=load i8,i8*%g,align 1
%i=call i8*@sml_alloc(i32 inreg 20)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
store i8*%i,i8**%d,align 8
%l=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
store i8%h,i8*%n,align 1
%o=getelementptr inbounds i8,i8*%i,i64 16
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1887 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1887 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1889(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@y,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%z)
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1890(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1889 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1889 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1891(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@t,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%z)
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1892(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1891 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1891 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1894(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1895(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1894 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1894 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1896(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%c,align 8
%n=bitcast i8*%l to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%l,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%r(i8*inreg%t,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8***
%E=load i8**,i8***%D,align 8
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=getelementptr inbounds i8*,i8**%E,i64 1
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%I,i64 24
%U=bitcast i8*%T to i32*
store i32 7,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=bitcast i8*%V to i32*
%X=getelementptr inbounds i8,i8*%V,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%V,i64 4
%aa=bitcast i8*%Z to i32*
store i32 0,i32*%aa,align 1
store i32 20,i32*%W,align 4
%ab=load i8*,i8**%f,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 16
%af=bitcast i8*%ae to i32*
store i32 2,i32*%af,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1897(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1896 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1896 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1898(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%e to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%r)
store i8*%y,i8**%d,align 8
%z=load i8*,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8****
%C=load i8***,i8****%B,align 8
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%F,i8**%g,align 8
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%F,i64 24
%R=bitcast i8*%Q to i32*
store i32 7,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 20,i32*%X,align 4
%Y=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 8
%af=bitcast i8*%ae to i8***
%ag=load i8**,i8***%af,align 8
%ah=load i8*,i8**%ag,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
store i8*%al,i8**%e,align 8
%ao=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%al,i64 24
%ax=bitcast i8*%aw to i32*
store i32 7,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=bitcast i8*%ay to i32*
%aA=getelementptr inbounds i8,i8*%ay,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
%aC=getelementptr inbounds i8,i8*%ay,i64 4
%aD=bitcast i8*%aC to i32*
store i32 0,i32*%aD,align 1
store i32 20,i32*%az,align 4
%aE=load i8*,i8**%e,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 8
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 16
%aI=bitcast i8*%aH to i32*
store i32 2,i32*%aI,align 4
ret i8*%ay
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1899(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8*%j to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1898(i8*inreg%n,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1900(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%e,align 8
%i=call i8*@sml_alloc(i32 inreg 20)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
store i8*%i,i8**%f,align 8
%l=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%i,i64 16
%r=bitcast i8*%q to i32*
store i32 3,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=load i8*,i8**%f,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1898 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1898 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 -2147483647,i32*%C,align 4
%D=bitcast i8**%d to i8***
%E=load i8**,i8***%D,align 8
store i8*null,i8**%d,align 8
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%c,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%d,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1899 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1899 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1901(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1903(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1904(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
%C=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_1262(i8*inreg%B)
store i8*%C,i8**%c,align 8
%D=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gY,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%c,align 8
%L=load i8**,i8***%o,align 8
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%d,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%e,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
%aa=load i8*,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1903 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1903 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 24
%ah=bitcast i8*%ag to i32*
store i32 -2147483647,i32*%ah,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1905(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1906(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
%C=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_1262(i8*inreg%B)
store i8*%C,i8**%c,align 8
%D=load i8**,i8***%o,align 8
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%F,i8**%e,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 28)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177304,i32*%R,align 4
%S=load i8*,i8**%e,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1905 to void(...)*),void(...)**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1905 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%P,i64 24
%Z=bitcast i8*%Y to i32*
store i32 -2147483647,i32*%Z,align 4
ret i8*%P
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1907(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1909(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@C,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1911(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1912(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gZ,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g0,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=load i8**,i8***%o,align 8
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1911 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1911 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLL1e_1913(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1e_1915(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@C,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1917(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1919(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1920(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g1,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g2,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g3,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
store i8*%Y,i8**%c,align 8
%Z=load i8**,i8***%o,align 8
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
store i8*%ab,i8**%e,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1919 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1919 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1921(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1923(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@G,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1925(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1926(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g4,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g5,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=load i8**,i8***%o,align 8
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1925 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1925 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLL1e_1927(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1e_1929(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@G,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1931(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1933(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1934(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g6,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g7,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g8,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
store i8*%Y,i8**%c,align 8
%Z=load i8**,i8***%o,align 8
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
store i8*%ab,i8**%e,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1933 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1933 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLL1x_1935(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1x_1937(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@K,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1939(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1940(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g9,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ha,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%e,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to i8**
store i8*null,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=call fastcc i8*%U(i8*inreg%ag,i8*inreg%X)
store i8*%ah,i8**%c,align 8
%ai=load i8**,i8***%o,align 8
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
store i8*%ak,i8**%e,align 8
%an=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i32*
store i32 3,i32*%at,align 4
%au=call i8*@sml_alloc(i32 inreg 28)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177304,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1939 to void(...)*),void(...)**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 16
%aC=bitcast i8*%aB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1939 to void(...)*),void(...)**%aC,align 8
%aD=getelementptr inbounds i8,i8*%au,i64 24
%aE=bitcast i8*%aD to i32*
store i32 -2147483647,i32*%aE,align 4
ret i8*%au
}
define internal fastcc i8*@_SMLL1e_1941(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@au,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1e_1943(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@K,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1945(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1947(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1948(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hb,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=call fastcc i8*%F(i8*inreg%H,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hc,i64 0,i32 2)to i8*))
%J=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%I)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%c,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hd,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
store i8*%Y,i8**%c,align 8
%Z=load i8**,i8***%o,align 8
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
store i8*%ab,i8**%e,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1947 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1947 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1949(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Z,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1951(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1952(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%d to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=call fastcc i8*%x(i8*inreg%z,i8*inreg%A)
store i8*%B,i8**%c,align 8
%C=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@he,i64 0,i32 2)to i8*))
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=load i8**,i8***%o,align 8
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
store i8*%M,i8**%e,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=getelementptr inbounds i8,i8*%M,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%M,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1951 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 16
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1951 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%W,i64 24
%ag=bitcast i8*%af to i32*
store i32 -2147483647,i32*%ag,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1954(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1955(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%o
l:
%m=bitcast i8*%a to i8**
%n=bitcast i8**%i to i8***
br label%r
o:
call void@sml_check(i32 inreg%j)
%p=bitcast i8**%i to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8***[%n,%l],[%p,%o]
%t=phi i8**[%m,%l],[%q,%o]
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%g,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
store i8*%F,i8**%h,align 8
%G=load i8**,i8***%s,align 8
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%g,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ad)
%ae=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ae)
%af=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%af)
%ag=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ag)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%T,i8**%c,align 8
%ah=load atomic i32,i32*@sml_check_flag unordered,align 4
%ai=icmp eq i32%ah,0
br i1%ai,label%aq,label%aj
aj:
call void@sml_check(i32 inreg%ah)
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%ak,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
br label%aq
aq:
%ar=phi i8*[%ap,%aj],[%Y,%r]
%as=phi i8*[%am,%aj],[%W,%r]
store i8*%as,i8**%c,align 8
store i8*%ar,i8**%d,align 8
%at=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*))
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%f,align 8
%aC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i8**
store i8*null,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%d,align 8
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8*(i8*,i8*)**
%aV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aU,align 8
%aW=bitcast i8*%aS to i8**
%aX=load i8*,i8**%aW,align 8
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=call fastcc i8*%aV(i8*inreg%aX,i8*inreg%aY)
%a0=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%aZ)
%a1=load i8*,i8**%e,align 8
%a2=call fastcc i8*%aw(i8*inreg%a1,i8*inreg%a0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ad)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ae)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%af)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ag)
store i8*%a2,i8**%g,align 8
%a3=load i8**,i8***%s,align 8
store i8*null,i8**%i,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%h,align 8
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
store i8*%a5,i8**%i,align 8
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 28)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177304,i32*%bh,align 4
%bi=load i8*,i8**%i,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1954 to void(...)*),void(...)**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1954 to void(...)*),void(...)**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bf,i64 24
%bp=bitcast i8*%bo to i32*
store i32 -2147483647,i32*%bp,align 4
ret i8*%bf
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1956(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1957(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%o
l:
%m=bitcast i8*%a to i8**
%n=bitcast i8**%i to i8***
br label%r
o:
call void@sml_check(i32 inreg%j)
%p=bitcast i8**%i to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8***[%n,%l],[%p,%o]
%t=phi i8**[%m,%l],[%q,%o]
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%g,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
store i8*%F,i8**%h,align 8
%G=load i8**,i8***%s,align 8
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%K)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%g,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ad)
%ae=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ae)
%af=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%af)
%ag=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ag)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%T,i8**%c,align 8
%ah=load atomic i32,i32*@sml_check_flag unordered,align 4
%ai=icmp eq i32%ah,0
br i1%ai,label%aq,label%aj
aj:
call void@sml_check(i32 inreg%ah)
%ak=load i8*,i8**%c,align 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%ak,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
br label%aq
aq:
%ar=phi i8*[%ap,%aj],[%Y,%r]
%as=phi i8*[%am,%aj],[%W,%r]
store i8*%as,i8**%c,align 8
store i8*%ar,i8**%d,align 8
%at=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f0,i64 0,i32 2)to i8*))
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%f,align 8
%aC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i8**
store i8*null,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%d,align 8
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8*(i8*,i8*)**
%aV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aU,align 8
%aW=bitcast i8*%aS to i8**
%aX=load i8*,i8**%aW,align 8
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=call fastcc i8*%aV(i8*inreg%aX,i8*inreg%aY)
%a0=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%aZ)
%a1=load i8*,i8**%e,align 8
%a2=call fastcc i8*%aw(i8*inreg%a1,i8*inreg%a0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ad)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ae)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%af)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ag)
store i8*%a2,i8**%g,align 8
%a3=load i8**,i8***%s,align 8
store i8*null,i8**%i,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%h,align 8
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
store i8*%a5,i8**%i,align 8
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 28)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177304,i32*%bh,align 4
%bi=load i8*,i8**%i,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1956 to void(...)*),void(...)**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1956 to void(...)*),void(...)**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bf,i64 24
%bp=bitcast i8*%bo to i32*
store i32 -2147483647,i32*%bp,align 4
ret i8*%bf
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1958(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1959(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
%y=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=bitcast i8**%d to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%J)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=call fastcc i8*%N(i8*inreg%P,i8*inreg%Q)
%S=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%T=call fastcc i8*%B(i8*inreg%S,i8*inreg%R)
store i8*%T,i8**%c,align 8
%U=load i8**,i8***%E,align 8
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%d,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
store i8*%W,i8**%e,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1958 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1958 to void(...)*),void(...)**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 24
%aq=bitcast i8*%ap to i32*
store i32 -2147483647,i32*%aq,align 4
ret i8*%ag
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1960(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 1
store i32 25,i32*%g,align 4
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%f,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%f,i64 16
%p=bitcast i8*%o to i32*
store i32 2,i32*%p,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1961(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1962(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1960 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1960 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%x)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=load i8*,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%U)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ab)
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=call fastcc i8*%L(i8*inreg%ad,i8*inreg%ac)
store i8*%ae,i8**%c,align 8
%af=load i8*,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%d,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%e,align 8
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 28)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177304,i32*%av,align 4
%aw=load i8*,i8**%e,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1961 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 16
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1961 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 24
%aD=bitcast i8*%aC to i32*
store i32 -2147483647,i32*%aD,align 4
ret i8*%at
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1963(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 1
store i32 25,i32*%g,align 4
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%f,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%f,i64 16
%p=bitcast i8*%o to i32*
store i32 2,i32*%p,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1964(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1965(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%e,align 8
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1963 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1963 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
%K=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%z)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%g,align 8
%Q=load i8*,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%e,align 8
%af=load i8*,i8**%f,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%al)
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%as)
store i8*%at,i8**%c,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
%ax=load i8*,i8**%c,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*null,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
store i8*null,i8**%d,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%h,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%c,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
%a3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a4=call fastcc i8*%a0(i8*inreg%a2,i8*inreg%a3)
%a5=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%a4)
%a6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a7=call fastcc i8*%N(i8*inreg%a6,i8*inreg%a5)
store i8*%a7,i8**%c,align 8
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 8
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%d,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%e,align 8
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bc,i64 16
%bl=bitcast i8*%bk to i32*
store i32 3,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 28)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177304,i32*%bo,align 4
%bp=load i8*,i8**%e,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bm,i64 8
%bs=bitcast i8*%br to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1964 to void(...)*),void(...)**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 16
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1964 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 24
%bw=bitcast i8*%bv to i32*
store i32 -2147483647,i32*%bw,align 4
ret i8*%bm
}
define internal fastcc i8*@_SMLL4exps_1966(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%j)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=tail call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1967(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1968(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1966 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1966 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8****
%Q=load i8***,i8****%P,align 8
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*%M(i8*inreg%O,i8*inreg%S)
store i8*%T,i8**%c,align 8
%U=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
%ac=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%ab)
store i8*%ac,i8**%c,align 8
%ad=bitcast i8**%d to i8***
%ae=load i8**,i8***%ad,align 8
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%e,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 28)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177304,i32*%as,align 4
%at=load i8*,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1967 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1967 to void(...)*),void(...)**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 24
%aA=bitcast i8*%az to i32*
store i32 -2147483647,i32*%aA,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLL1e_1969(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a1,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1971(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@al,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1973(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1974(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hf,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
store i8*%F,i8**%c,align 8
%G=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hg,i64 0,i32 2)to i8*))
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
store i8*%N,i8**%c,align 8
%O=bitcast i8**%d to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%e,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1973 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1973 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1975(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aX,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1977(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1978(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hh,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
store i8*%F,i8**%c,align 8
%G=bitcast i8**%d to i8***
%H=load i8**,i8***%G,align 8
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%d,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%e,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%J,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1977 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1977 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1979(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1980(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1275(i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
store i8*%y,i8**%c,align 8
%z=bitcast i8**%d to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%e,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1979 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1979 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
ret i8*%M
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1981(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1982(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%o
l:
%m=bitcast i8*%a to i8***
%n=bitcast i8**%h to i8****
br label%r
o:
call void@sml_check(i32 inreg%j)
%p=bitcast i8**%h to i8****
%q=load i8***,i8****%p,align 8
br label%r
r:
%s=phi i8****[%n,%l],[%p,%o]
%t=phi i8***[%m,%l],[%q,%o]
store i8*null,i8**%g,align 8
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%w)
%x=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%v,i8**%e,align 8
%y=call i8*@sml_alloc(i32 inreg 12)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177288,i32*%A,align 4
store i8*%y,i8**%f,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%f,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_1511 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16flattenTableListE_1511 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%w)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
%Q=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%F)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%g,align 8
%W=load i8***,i8****%s,align 8
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
%Z=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Z)
%aa=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aa)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%Y,i8**%c,align 8
%ab=load atomic i32,i32*@sml_check_flag unordered,align 4
%ac=icmp eq i32%ab,0
br i1%ac,label%af,label%ad
ad:
call void@sml_check(i32 inreg%ab)
%ae=load i8*,i8**%c,align 8
br label%af
af:
%ag=phi i8*[%ae,%ad],[%Y,%r]
%ah=icmp eq i8*%ag,null
br i1%ah,label%ai,label%aj
ai:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aa)
br label%aM
aj:
%ak=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=call fastcc i8*%an(i8*inreg%ap,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hC,i64 0,i32 2)to i8*))
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%d,align 8
%aw=bitcast i8**%c to i8***
%ax=load i8**,i8***%aw,align 8
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%ay)
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=call fastcc i8*%at(i8*inreg%aA,i8*inreg%az)
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
%aH=load i8*,i8**%c,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=call fastcc i8*%aE(i8*inreg%aG,i8*inreg%aK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aa)
br label%aM
aM:
%aN=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hD,i64 0,i32 2)to i8*),%ai],[%aL,%aj]
%aO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aP=call fastcc i8*%T(i8*inreg%aO,i8*inreg%aN)
store i8*%aP,i8**%g,align 8
%aQ=bitcast i8**%h to i8***
%aR=load i8**,i8***%aQ,align 8
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%h,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%i,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
%a6=load i8*,i8**%i,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1981 to void(...)*),void(...)**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1981 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 24
%bd=bitcast i8*%bc to i32*
store i32 -2147483647,i32*%bd,align 4
ret i8*%a3
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1983(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1984(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1983 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1983 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8****
%Q=load i8***,i8****%P,align 8
store i8*null,i8**%d,align 8
%R=load i8**,i8***%Q,align 8
%S=load i8*,i8**%R,align 8
%T=call fastcc i8*%M(i8*inreg%O,i8*inreg%S)
%U=tail call fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1548(i8*inreg%T)
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1987(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%c,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%c,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%m,i8**%b,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%s,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%b,align 8
br label%s
s:
%t=phi i8*[%r,%q],[%m,%h]
%u=icmp eq i8*%t,null
br i1%u,label%v,label%x
v:
%w=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gR,i64 0,i32 2)to i8*),%s],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gP,i64 0,i32 2)to i8*),%x]
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
br label%D
x:
%y=bitcast i8*%t to i32*
%z=load i32,i32*%y,align 4
%A=icmp eq i32%z,0
br i1%A,label%v,label%B
B:
%C=tail call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gQ,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
br label%D
D:
%E=phi i8*[%w,%v],[%C,%B]
ret i8*%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1989(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1990(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%n
k:
%l=bitcast i8*%a to i8**
%m=bitcast i8**%f to i8***
br label%q
n:
call void@sml_check(i32 inreg%i)
%o=bitcast i8**%f to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8***[%m,%k],[%o,%n]
%s=phi i8**[%l,%k],[%p,%n]
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%u,i8**%h,align 8
%x=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1984 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1984 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%M)
%N=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%N)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%B,i8**%c,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
store i8*%O,i8**%d,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_1306 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Fun__sortByE_1306 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
store i8*%Y,i8**%g,align 8
%ag=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%aj(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hi,i64 0,i32 2)to i8*))
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=bitcast i8**%f to i8****
%at=load i8***,i8****%as,align 8
%au=load i8**,i8***%at,align 8
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%av)
%ax=call fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1554(i8*inreg%aw)
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_1306(i8*inreg%ay,i8*inreg%ax)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aG=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aF)
store i8*%aG,i8**%e,align 8
%aH=load i8**,i8***%r,align 8
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%f,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%g,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
%aW=load i8*,i8**%g,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1989 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1989 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 -2147483647,i32*%a3,align 4
ret i8*%aT
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1991(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1993(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1994(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hj,i64 0,i32 2)to i8*))
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1283(i8*inreg%w)
store i8*%G,i8**%c,align 8
%H=bitcast i8**%e to i8***
%I=load i8**,i8***%H,align 8
store i8*null,i8**%e,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%d,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1993 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1993 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1995(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg 1)
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%j,i64 4
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 1
%o=bitcast i8*%j to i32*
store i32 1,i32*%o,align 4
%p=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%c,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
store i32 2,i32*%F,align 4
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1997(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1998(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hk,i64 0,i32 2)to i8*),i8**%p,align 8
%q=getelementptr inbounds i8,i8*%j,i64 16
%r=bitcast i8*%q to i32*
store i32 3,i32*%r,align 4
%s=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1283(i8*inreg%j)
store i8*%s,i8**%c,align 8
%t=bitcast i8**%d to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%e,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1997 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1997 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1999(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2001(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2003(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2004(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%k
h:
%i=bitcast i8*%a to i8**
%j=bitcast i8**%e to i8***
br label%n
k:
call void@sml_check(i32 inreg%f)
%l=bitcast i8**%e to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8***[%j,%h],[%l,%k]
%p=phi i8**[%i,%h],[%m,%k]
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*%y(i8*inreg%A,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hm,i64 0,i32 2)to i8*))
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_1287(i8*inreg%C)
store i8*%M,i8**%c,align 8
%N=load i8**,i8***%o,align 8
store i8*null,i8**%e,align 8
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%d,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
store i8*%P,i8**%e,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2003 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2003 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2005(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
store i8*null,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2004(i8*inreg%z,i8*inreg%q)
%B=load i8*,i8**%d,align 8
%C=tail call fastcc i8*%u(i8*inreg%B,i8*inreg%A)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2006(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2008(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2009(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hn,i64 0,i32 2)to i8*))
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1283(i8*inreg%w)
store i8*%G,i8**%c,align 8
%H=bitcast i8**%e to i8***
%I=load i8**,i8***%H,align 8
store i8*null,i8**%e,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%d,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2008 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2008 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2010(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2012(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2014(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2015(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%e to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hp,i64 0,i32 2)to i8*))
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_1287(i8*inreg%x)
store i8*%H,i8**%c,align 8
%I=bitcast i8**%e to i8***
%J=load i8**,i8***%I,align 8
store i8*null,i8**%e,align 8
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%e,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2014 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2014 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2016(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2018(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2019(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2020(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%m
j:
%k=bitcast i8*%a to i8**
%l=bitcast i8**%f to i8***
br label%p
m:
call void@sml_check(i32 inreg%h)
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%l,%j],[%n,%m]
%r=phi i8**[%k,%j],[%o,%m]
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
%y=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%y)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%w,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%d,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11recordToToyE_2104 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11recordToToyE_2104 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%y)
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=call fastcc i8*@_SMLLN12ElaborateSQL11recordToToyE_2104(i8*inreg%J,i8*inreg%R)
%T=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%S)
store i8*%T,i8**%e,align 8
%U=load i8**,i8***%q,align 8
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
store i8*%W,i8**%g,align 8
%Z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
%aj=load i8*,i8**%g,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2019 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2019 to void(...)*),void(...)**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 24
%aq=bitcast i8*%ap to i32*
store i32 -2147483647,i32*%aq,align 4
ret i8*%ag
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2021(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2022(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%o
l:
%m=bitcast i8*%a to i8**
%n=bitcast i8**%f to i8***
br label%r
o:
call void@sml_check(i32 inreg%j)
%p=bitcast i8**%f to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8***[%n,%l],[%p,%o]
%t=phi i8**[%m,%l],[%q,%o]
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8***
%x=load i8**,i8***%w,align 8
%y=load i8*,i8**%x,align 8
%z=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%z)
%A=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%y,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1581 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13distinctToToyE_1581 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
%T=bitcast i8**%f to i8****
%U=load i8***,i8****%T,align 8
%V=load i8**,i8***%U,align 8
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_1581(i8*inreg%L,i8*inreg%W)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%h,align 8
%ad=load i8**,i8***%s,align 8
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%g,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
store i8*%af,i8**%i,align 8
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2020 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2020 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%am)
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i8*(i8*,i8*)**
%aA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%az,align 8
%aB=bitcast i8*%ax to i8**
%aC=load i8*,i8**%aB,align 8
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=call fastcc i8*%aA(i8*inreg%aC,i8*inreg%aD)
%aF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aG=call fastcc i8*%aa(i8*inreg%aF,i8*inreg%aE)
store i8*%aG,i8**%e,align 8
%aH=load i8**,i8***%s,align 8
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%f,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%g,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
%aW=load i8*,i8**%g,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2021 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2021 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 -2147483647,i32*%a3,align 4
ret i8*%aT
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2023(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 32
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2024(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2023 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2023 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2025(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2026(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2027(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2028(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2029(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2030(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2031(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2032(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2034(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%l,align 8
store i8*%b,i8**%i,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%p,label%s
p:
%q=bitcast i8*%a to i8**
%r=bitcast i8**%l to i8***
br label%v
s:
call void@sml_check(i32 inreg%n)
%t=bitcast i8**%l to i8***
%u=load i8**,i8***%t,align 8
br label%v
v:
%w=phi i8***[%r,%p],[%t,%s]
%x=phi i8**[%q,%p],[%u,%s]
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%j,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177288,i32*%B,align 4
store i8*%z,i8**%k,align 8
%C=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%m,align 8
%J=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2024 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2024 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
%R=load i8**,i8***%w,align 8
%S=load i8*,i8**%R,align 8
%T=getelementptr inbounds i8,i8*%S,i64 24
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%V)
store i8*%W,i8**%j,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
%aa=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%j,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
store i8*%aa,i8**%j,align 8
store i8*%ac,i8**%k,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%m,align 8
%ak=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
store i8*%ar,i8**%k,align 8
%au=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2025 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2025 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
%aC=load i8**,i8***%w,align 8
%aD=load i8*,i8**%aC,align 8
%aE=getelementptr inbounds i8,i8*%aD,i64 40
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%aG)
store i8*%aH,i8**%j,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%m,align 8
%aL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 28)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177304,i32*%aU,align 4
store i8*%aS,i8**%k,align 8
%aV=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2026 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aS,i64 16
%a0=bitcast i8*%aZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2026 to void(...)*),void(...)**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aS,i64 24
%a2=bitcast i8*%a1 to i32*
store i32 -2147483647,i32*%a2,align 4
%a3=load i8**,i8***%w,align 8
%a4=load i8*,i8**%a3,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 48
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%a7)
store i8*%a8,i8**%j,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%m,align 8
%bc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bf=getelementptr inbounds i8,i8*%a9,i64 8
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a9,i64 16
%bi=bitcast i8*%bh to i32*
store i32 3,i32*%bi,align 4
%bj=call i8*@sml_alloc(i32 inreg 28)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177304,i32*%bl,align 4
store i8*%bj,i8**%k,align 8
%bm=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bj,i64 8
%bp=bitcast i8*%bo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2027 to void(...)*),void(...)**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bj,i64 16
%br=bitcast i8*%bq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2027 to void(...)*),void(...)**%br,align 8
%bs=getelementptr inbounds i8,i8*%bj,i64 24
%bt=bitcast i8*%bs to i32*
store i32 -2147483647,i32*%bt,align 4
%bu=load i8**,i8***%w,align 8
%bv=load i8*,i8**%bu,align 8
%bw=getelementptr inbounds i8,i8*%bv,i64 16
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
%bz=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bz)
%bA=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bA)
%bB=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bB)
%bC=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bC)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
%bD=icmp eq i8*%by,null
br i1%bD,label%bE,label%bF
bE:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bz)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bC)
br label%cb
bF:
%bG=bitcast i8*%by to i8**
%bH=load i8*,i8**%bG,align 8
store i8*%bH,i8**%e,align 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%f,align 8
%bK=getelementptr inbounds i8,i8*%bH,i64 24
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%g,align 8
%bN=call i8*@sml_alloc(i32 inreg 28)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177304,i32*%bP,align 4
store i8*%bN,i8**%h,align 8
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bT=getelementptr inbounds i8,i8*%bN,i64 8
%bU=bitcast i8*%bT to i8**
store i8*%bS,i8**%bU,align 8
%bV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bW=getelementptr inbounds i8,i8*%bN,i64 16
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bN,i64 24
%bZ=bitcast i8*%bY to i32*
store i32 7,i32*%bZ,align 4
%b0=call i8*@sml_alloc(i32 inreg 28)#0
%b1=getelementptr inbounds i8,i8*%b0,i64 -4
%b2=bitcast i8*%b1 to i32*
store i32 1342177304,i32*%b2,align 4
%b3=load i8*,i8**%h,align 8
%b4=bitcast i8*%b0 to i8**
store i8*%b3,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%b0,i64 8
%b6=bitcast i8*%b5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2118 to void(...)*),void(...)**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b0,i64 16
%b8=bitcast i8*%b7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2118 to void(...)*),void(...)**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b0,i64 24
%ca=bitcast i8*%b9 to i32*
store i32 -2147483647,i32*%ca,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bz)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bC)
br label%cb
cb:
%cc=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hN,i64 0,i32 2)to i8*),%bE],[%b0,%bF]
store i8*%cc,i8**%j,align 8
%cd=call i8*@sml_alloc(i32 inreg 20)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177296,i32*%cf,align 4
store i8*%cd,i8**%m,align 8
%cg=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cj=getelementptr inbounds i8,i8*%cd,i64 8
%ck=bitcast i8*%cj to i8**
store i8*%ci,i8**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cd,i64 16
%cm=bitcast i8*%cl to i32*
store i32 3,i32*%cm,align 4
%cn=call i8*@sml_alloc(i32 inreg 28)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177304,i32*%cp,align 4
store i8*%cn,i8**%k,align 8
%cq=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cn,i64 8
%ct=bitcast i8*%cs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2028 to void(...)*),void(...)**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cn,i64 16
%cv=bitcast i8*%cu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2028 to void(...)*),void(...)**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cn,i64 24
%cx=bitcast i8*%cw to i32*
store i32 -2147483647,i32*%cx,align 4
%cy=load i8**,i8***%w,align 8
%cz=load i8*,i8**%cy,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 56
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
%cD=call fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%cC)
store i8*%cD,i8**%j,align 8
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
store i8*%cE,i8**%m,align 8
%cH=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cI=bitcast i8*%cE to i8**
store i8*%cH,i8**%cI,align 8
%cJ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cK=getelementptr inbounds i8,i8*%cE,i64 8
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cE,i64 16
%cN=bitcast i8*%cM to i32*
store i32 3,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 28)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177304,i32*%cQ,align 4
store i8*%cO,i8**%j,align 8
%cR=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cO,i64 8
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2029 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 16
%cW=bitcast i8*%cV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2029 to void(...)*),void(...)**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cO,i64 24
%cY=bitcast i8*%cX to i32*
store i32 -2147483647,i32*%cY,align 4
%cZ=bitcast i8**%l to i8****
%c0=load i8***,i8****%cZ,align 8
%c1=load i8**,i8***%c0,align 8
%c2=load i8*,i8**%c1,align 8
%c3=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%c3)
%c4=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%c4)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%c2,i8**%c,align 8
%c5=call i8*@sml_alloc(i32 inreg 12)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177288,i32*%c7,align 4
store i8*%c5,i8**%d,align 8
%c8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c9=bitcast i8*%c5 to i8**
store i8*%c8,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%c5,i64 8
%db=bitcast i8*%da to i32*
store i32 1,i32*%db,align 4
%dc=call i8*@sml_alloc(i32 inreg 28)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177304,i32*%de,align 4
%df=load i8*,i8**%d,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1523 to void(...)*),void(...)**%di,align 8
%dj=getelementptr inbounds i8,i8*%dc,i64 16
%dk=bitcast i8*%dj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13correlateJoinE_1523 to void(...)*),void(...)**%dk,align 8
%dl=getelementptr inbounds i8,i8*%dc,i64 24
%dm=bitcast i8*%dl to i32*
store i32 -2147483647,i32*%dm,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%c3)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%c4)
%dn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%do=call fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1523(i8*inreg%df,i8*inreg%dn)
store i8*%do,i8**%i,align 8
%dp=call i8*@sml_alloc(i32 inreg 20)#0
%dq=getelementptr inbounds i8,i8*%dp,i64 -4
%dr=bitcast i8*%dq to i32*
store i32 1342177296,i32*%dr,align 4
store i8*%dp,i8**%k,align 8
%ds=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dt=bitcast i8*%dp to i8**
store i8*%ds,i8**%dt,align 8
%du=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dv=getelementptr inbounds i8,i8*%dp,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dp,i64 16
%dy=bitcast i8*%dx to i32*
store i32 3,i32*%dy,align 4
%dz=call i8*@sml_alloc(i32 inreg 28)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177304,i32*%dB,align 4
store i8*%dz,i8**%j,align 8
%dC=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dD=bitcast i8*%dz to i8**
store i8*%dC,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dz,i64 8
%dF=bitcast i8*%dE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2030 to void(...)*),void(...)**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dz,i64 16
%dH=bitcast i8*%dG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2030 to void(...)*),void(...)**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dz,i64 24
%dJ=bitcast i8*%dI to i32*
store i32 -2147483647,i32*%dJ,align 4
%dK=load i8**,i8***%w,align 8
store i8*null,i8**%l,align 8
%dL=load i8*,i8**%dK,align 8
%dM=getelementptr inbounds i8,i8*%dL,i64 8
%dN=bitcast i8*%dM to i8**
%dO=load i8*,i8**%dN,align 8
%dP=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%dO)
store i8*%dP,i8**%i,align 8
%dQ=call i8*@sml_alloc(i32 inreg 20)#0
%dR=getelementptr inbounds i8,i8*%dQ,i64 -4
%dS=bitcast i8*%dR to i32*
store i32 1342177296,i32*%dS,align 4
store i8*%dQ,i8**%k,align 8
%dT=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dU=bitcast i8*%dQ to i8**
store i8*%dT,i8**%dU,align 8
%dV=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dW=getelementptr inbounds i8,i8*%dQ,i64 8
%dX=bitcast i8*%dW to i8**
store i8*%dV,i8**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dQ,i64 16
%dZ=bitcast i8*%dY to i32*
store i32 3,i32*%dZ,align 4
%d0=call i8*@sml_alloc(i32 inreg 28)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177304,i32*%d2,align 4
%d3=load i8*,i8**%k,align 8
%d4=bitcast i8*%d0 to i8**
store i8*%d3,i8**%d4,align 8
%d5=getelementptr inbounds i8,i8*%d0,i64 8
%d6=bitcast i8*%d5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2031 to void(...)*),void(...)**%d6,align 8
%d7=getelementptr inbounds i8,i8*%d0,i64 16
%d8=bitcast i8*%d7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2031 to void(...)*),void(...)**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d0,i64 24
%ea=bitcast i8*%d9 to i32*
store i32 -2147483647,i32*%ea,align 4
%eb=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2031(i8*inreg%d3,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hr,i64 0,i32 2)to i8*))
ret i8*%eb
}
define internal fastcc i8*@_SMLL7default_2035(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2037(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2038(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8*,i8**%n,i64 1
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1279(i8*inreg%r)
%C=call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%B)
store i8*%C,i8**%c,align 8
%D=load i8*,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%e,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2037 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2037 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLL7default_2039(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL3pat_2041(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL3exp_2043(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2045(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%k)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8*,i8**%t,i64 1
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=tail call fastcc i8*%p(i8*inreg%H,i8*inreg%x)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2046(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2048(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2049(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 1
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2045 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2045 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%C)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%c,align 8
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%Z)
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
%ag=call fastcc i8*%ad(i8*inreg%af,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hw,i64 0,i32 2)to i8*))
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=call fastcc i8*%Q(i8*inreg%ah,i8*inreg%ag)
%aj=call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%ai)
store i8*%aj,i8**%c,align 8
%ak=load i8*,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%d,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
store i8*%ao,i8**%e,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2048 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2048 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 24
%aI=bitcast i8*%aH to i32*
store i32 -2147483647,i32*%aI,align 4
ret i8*%ay
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2050(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2052(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%a to i8**
%i=bitcast i8**%d to i8***
br label%m
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8***[%i,%g],[%k,%j]
%o=phi i8**[%h,%g],[%l,%j]
store i8*null,i8**%c,align 8
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%s)
store i8*%t,i8**%c,align 8
%u=load i8**,i8***%n,align 8
store i8*null,i8**%d,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%y)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hx,i64 0,i32 2)to i8*))
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1279(i8*inreg%G)
%R=tail call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%Q)
ret i8*%R
}
define internal fastcc i8*@_SMLL7default_2053(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL3pat_2055(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL3exp_2057(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL6values_2059(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%k)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8*,i8**%t,i64 1
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=tail call fastcc i8*%p(i8*inreg%H,i8*inreg%x)
ret i8*%I
}
define internal fastcc i8*@_SMLL6values_2060(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=getelementptr inbounds i8,i8*%e,i64 24
%g=bitcast i8*%f to i8***
%h=load i8**,i8***%g,align 8
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=bitcast i8*%j to i32*
%l=getelementptr inbounds i8,i8*%j,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 1
store i32 25,i32*%k,align 4
%p=load i8*,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2061(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2062(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8*,i8**%n,i64 1
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1279(i8*inreg%r)
%C=call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%B)
store i8*%C,i8**%c,align 8
%D=load i8*,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%e,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2061 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2061 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2063(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=load i8*,i8**%c,align 8
%m=bitcast i8**%e to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%k],[%j,%i]
%q=phi i8*[%l,%k],[%b,%i]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%q)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
store i8*%C,i8**%f,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%C,i64 24
%O=bitcast i8*%N to i32*
store i32 7,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=bitcast i8*%P to i32*
%R=getelementptr inbounds i8,i8*%P,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%P,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
store i32 20,i32*%Q,align 4
%V=load i8*,i8**%f,align 8
%W=getelementptr inbounds i8,i8*%P,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%P,i64 16
%Z=bitcast i8*%Y to i32*
store i32 2,i32*%Z,align 4
ret i8*%P
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2064(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8**%c to i8***
%x=load i8**,i8***%w,align 8
store i8*null,i8**%c,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%t(i8*inreg%v,i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2065(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
%E=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2063 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2063 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=call fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1216(i8*inreg%B)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%f,align 8
%S=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8*(i8*,i8*)**
%V=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%U,align 8
%W=bitcast i8*%S to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%e,align 8
%Y=call i8*@sml_alloc(i32 inreg 12)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177288,i32*%aa,align 4
store i8*%Y,i8**%g,align 8
%ab=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
%ai=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2064 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%af,i64 16
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2064 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 24
%ap=bitcast i8*%ao to i32*
store i32 -2147483647,i32*%ap,align 4
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=call fastcc i8*%V(i8*inreg%aq,i8*inreg%af)
%as=getelementptr inbounds i8,i8*%ar,i64 16
%at=bitcast i8*%as to i8*(i8*,i8*)**
%au=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%at,align 8
%av=bitcast i8*%ar to i8**
%aw=load i8*,i8**%av,align 8
%ax=bitcast i8**%d to i8***
%ay=load i8**,i8***%ax,align 8
store i8*null,i8**%d,align 8
%az=load i8*,i8**%ay,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
%aD=call fastcc i8*%au(i8*inreg%aw,i8*inreg%aC)
%aE=load i8*,i8**%f,align 8
%aF=tail call fastcc i8*%P(i8*inreg%aE,i8*inreg%aD)
ret i8*%aF
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2066(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=tail call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%z)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2067(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2068(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%m
j:
%k=bitcast i8*%a to i8**
%l=bitcast i8**%d to i8***
br label%p
m:
call void@sml_check(i32 inreg%h)
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%l,%j],[%n,%m]
%r=phi i8**[%k,%j],[%o,%m]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8*,i8**%r,i64 1
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%f,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2065 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2065 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%F)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=load i8**,i8***%q,align 8
%X=load i8*,i8**%W,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 24
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%aa)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%c,align 8
%al=call i8*@sml_alloc(i32 inreg 12)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177288,i32*%an,align 4
store i8*%al,i8**%g,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to i32*
store i32 1,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 28)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177304,i32*%au,align 4
%av=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2066 to void(...)*),void(...)**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2066 to void(...)*),void(...)**%aA,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 24
%aC=bitcast i8*%aB to i32*
store i32 -2147483647,i32*%aC,align 4
%aD=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%as)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%c,align 8
%aJ=load i8**,i8***%q,align 8
%aK=load i8*,i8**%aJ,align 8
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%aN)
%aP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aQ=call fastcc i8*%aG(i8*inreg%aP,i8*inreg%aO)
%aR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aS=call fastcc i8*%ae(i8*inreg%aR,i8*inreg%aQ)
%aT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aU=call fastcc i8*%T(i8*inreg%aT,i8*inreg%aS)
%aV=call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%aU)
store i8*%aV,i8**%c,align 8
%aW=load i8**,i8***%q,align 8
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%d,align 8
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
store i8*%aY,i8**%e,align 8
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
%bb=load i8*,i8**%e,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a8,i64 8
%be=bitcast i8*%bd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2067 to void(...)*),void(...)**%be,align 8
%bf=getelementptr inbounds i8,i8*%a8,i64 16
%bg=bitcast i8*%bf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2067 to void(...)*),void(...)**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 24
%bi=bitcast i8*%bh to i32*
store i32 -2147483647,i32*%bi,align 4
ret i8*%a8
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2069(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=tail call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%z)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2070(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2071(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%l
i:
%j=bitcast i8*%a to i8**
%k=bitcast i8**%d to i8***
br label%o
l:
call void@sml_check(i32 inreg%g)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8***[%k,%i],[%m,%l]
%q=phi i8**[%j,%i],[%n,%l]
store i8*null,i8**%c,align 8
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%f,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2069 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2069 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%M)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%c,align 8
%ad=load i8**,i8***%p,align 8
%ae=load i8*,i8**%ad,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%ah)
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=call fastcc i8*%aa(i8*inreg%aj,i8*inreg%ai)
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=call fastcc i8*%y(i8*inreg%al,i8*inreg%ak)
%an=call fastcc i8*@_SMLLN12ElaborateSQL6IgnoreE_1222(i8*inreg%am)
store i8*%an,i8**%c,align 8
%ao=load i8**,i8***%p,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%d,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%e,align 8
%at=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 28)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177304,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aA,i64 8
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2070 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 16
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2070 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 -2147483647,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2072(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2073(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2072 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2072 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2074(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2075(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2074 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2074 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2076(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2077(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2076 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2076 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2078(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2079(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8***
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%g to i8****
%n=load i8***,i8****%m,align 8
br label%o
o:
%p=phi i8***[%n,%l],[%k,%j]
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%e,align 8
%z=call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
store i8*%z,i8**%f,align 8
%A=bitcast i8**%g to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%F)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
store i8*%N,i8**%e,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
%R=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Y)
%Z=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Z)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%O,i8**%c,align 8
%aa=call i8*@sml_alloc(i32 inreg 12)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177288,i32*%ac,align 4
store i8*%aa,i8**%d,align 8
%ad=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%d,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SeqE_1224 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3SeqE_1224 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Z)
store i8*%ah,i8**%e,align 8
%as=load i8**,i8***%A,align 8
store i8*null,i8**%g,align 8
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%f,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%g,align 8
%ax=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
%aH=load i8*,i8**%g,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2078 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2078 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 24
%aO=bitcast i8*%aN to i32*
store i32 -2147483647,i32*%aO,align 4
ret i8*%aE
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2081(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%o)
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1291(i8*inreg%q)
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2083(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2085(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=load i8*,i8**%b,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%j,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%g)
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2087(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2088(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=load i8*,i8**%b,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%j,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%g)
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2090(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2092(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2093(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%t)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=bitcast i8**%f to i8***
%B=load i8**,i8***%A,align 8
store i8*null,i8**%f,align 8
%C=load i8*,i8**%B,align 8
%D=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%D)
%E=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%C,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%d,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12flattenTableE_1504 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12flattenTableE_1504 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%D)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=call fastcc i8*@_SMLLN12ElaborateSQL12flattenTableE_1504(i8*inreg%P,i8*inreg%X)
%Z=load i8*,i8**%g,align 8
%aa=tail call fastcc i8*%x(i8*inreg%Z,i8*inreg%Y)
ret i8*%aa
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2094(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2095(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2096(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=call fastcc i8*@_SMLLN12ElaborateSQL3FstE_1206(i8*inreg%k)
store i8*%m,i8**%e,align 8
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=call fastcc i8*@_SMLLN12ElaborateSQL3SndE_1211(i8*inreg%n)
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=load i8*,i8**%e,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%z)
%A=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%p,i8**%b,align 8
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%c,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4JoinE_1227 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4JoinE_1227 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
ret i8*%I
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2098(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_2101(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11recordToToyE_2103(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8**%c to i8***
%x=load i8**,i8***%w,align 8
store i8*null,i8**%c,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%t(i8*inreg%v,i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11recordToToyE_2104(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11recordToToyE_2103 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11recordToToyE_2103 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
%S=tail call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
ret i8*%S
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17insertValuesToToyE_2105(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%i,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%i,align 8
%n=load i8*,i8**%h,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%a,%q]
%r=phi i8*[%m,%l],[%b,%q]
%s=getelementptr inbounds i8,i8*%p,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%p to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
%y=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%y)
%z=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%z)
%A=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%A)
%B=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%B)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%u,i8**%d,align 8
store i8*%w,i8**%c,align 8
store i8*%r,i8**%e,align 8
%C=load atomic i32,i32*@sml_check_flag unordered,align 4
%D=icmp eq i32%C,0
br i1%D,label%E,label%G
E:
%F=bitcast i8*%r to i8**
br label%J
G:
call void@sml_check(i32 inreg%C)
%H=bitcast i8**%e to i8***
%I=load i8**,i8***%H,align 8
br label%J
J:
%K=phi i8**[%I,%G],[%F,%E]
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%e,align 8
%M=call fastcc i8*@_SMLFN8ListPair3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%f,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%g,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14insertRowToToyE_2106 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL14insertRowToToyE_2106 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=call fastcc i8*%P(i8*inreg%ak,i8*inreg%Z)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=call fastcc i8*%ao(i8*inreg%aB,i8*inreg%ar)
%aD=tail call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%aC)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%y)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%z)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%A)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%B)
ret i8*%aD
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14insertRowToToyE_2106(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%h,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%h,align 8
%o=bitcast i8**%g to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=load i8*,i8**%r,align 8
%u=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%u)
%v=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%v)
%w=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%w)
%x=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%x)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%t,i8**%d,align 8
store i8*%s,i8**%c,align 8
%y=load atomic i32,i32*@sml_check_flag unordered,align 4
%z=icmp eq i32%y,0
br i1%z,label%A,label%C
A:
%B=bitcast i8*%s to i8**
br label%G
C:
call void@sml_check(i32 inreg%y)
%D=bitcast i8**%c to i8***
%E=load i8**,i8***%D,align 8
%F=bitcast i8**%E to i8*
br label%G
G:
%H=phi i8*[%F,%C],[%s,%A]
%I=phi i8**[%E,%C],[%B,%A]
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=getelementptr inbounds i8*,i8**%I,i64 1
%L=bitcast i8**%K to i8***
%M=load i8**,i8***%L,align 8
%N=load i8*,i8**%M,align 8
%O=icmp eq i8*%N,null
br i1%O,label%P,label%ay
P:
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
store i8*%Q,i8**%f,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%e,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%Q,i64 24
%ac=bitcast i8*%ab to i32*
store i32 7,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ad,i8**%c,align 8
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2110 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2110 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%u)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%v)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%w)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
br label%bg
ay:
store i8*null,i8**%d,align 8
%az=getelementptr inbounds i8,i8*%H,i64 8
%aA=bitcast i8*%az to i8****
%aB=load i8***,i8****%aA,align 8
%aC=load i8**,i8***%aB,align 8
%aD=load i8*,i8**%aC,align 8
%aE=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%aD)
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hK,i64 0,i32 2)to i8*))
store i8*%aK,i8**%d,align 8
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%f,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
store i8*%aV,i8**%c,align 8
%aY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2109 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16insertValueToToyE_2109 to void(...)*),void(...)**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 -2147483647,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%c,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%u)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%v)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%w)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%x)
br label%bg
bg:
%bh=phi i8*[%ao,%P],[%a6,%ay]
ret i8*%bh
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16insertValueToToyE_2107(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16insertValueToToyE_2109(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16insertValueToToyE_2110(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%s(i8*inreg%u,i8*inreg%C)
store i8*%D,i8**%c,align 8
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%e,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
store i8*%Q,i8**%f,align 8
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%Q,i64 24
%ac=bitcast i8*%ab to i32*
store i32 7,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 20,i32*%ae,align 4
%aj=load i8*,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2111(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%j)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=tail call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2112(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2111 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2111 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8***
%U=load i8**,i8***%T,align 8
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%M(i8*inreg%O,i8*inreg%V)
%X=tail call fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1548(i8*inreg%W)
ret i8*%X
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2113(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bp,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2115(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hL,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2117(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2118(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%a,i8**%k,align 8
store i8*%b,i8**%j,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%r,label%u
r:
%s=bitcast i8*%a to i8**
%t=bitcast i8**%k to i8***
br label%x
u:
call void@sml_check(i32 inreg%p)
%v=bitcast i8**%k to i8***
%w=load i8**,i8***%v,align 8
br label%x
x:
%y=phi i8***[%t,%r],[%v,%u]
%z=phi i8**[%s,%r],[%w,%u]
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
%F=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%F)
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
%G=icmp eq i8*%D,null
br i1%G,label%H,label%I
H:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
br label%ad
I:
%J=bitcast i8*%D to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%h,align 8
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
store i8*%L,i8**%i,align 8
%O=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%i,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2122 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2122 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%F)
br label%ad
ad:
%ae=phi i8*[null,%H],[%V,%I]
%af=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hO,i64 0,i32 2)to i8*),%H],[%S,%I]
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
store i8*%ae,i8**%n,align 8
%aj=load i8*,i8**%k,align 8
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%l,align 8
%an=getelementptr inbounds i8,i8*%aj,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%m,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aA)
%aB=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aB)
%aC=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aC)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%aq,i8**%e,align 8
%aD=load atomic i32,i32*@sml_check_flag unordered,align 4
%aE=icmp eq i32%aD,0
br i1%aE,label%aM,label%aF
aF:
call void@sml_check(i32 inreg%aD)
%aG=load i8*,i8**%e,align 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=getelementptr inbounds i8,i8*%aG,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
br label%aM
aM:
%aN=phi i8*[%aL,%aF],[%av,%ad]
%aO=phi i8*[%aI,%aF],[%at,%ad]
store i8*%aO,i8**%e,align 8
store i8*%aN,i8**%f,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%g,align 8
%aS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aP,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 28)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177304,i32*%a1,align 4
%a2=load i8*,i8**%g,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aZ,i64 8
%a5=bitcast i8*%a4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1541 to void(...)*),void(...)**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 16
%a7=bitcast i8*%a6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9transposeE_1541 to void(...)*),void(...)**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 24
%a9=bitcast i8*%a8 to i32*
store i32 -2147483647,i32*%a9,align 4
%ba=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%aZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aC)
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8*(i8*,i8*)**
%bd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bc,align 8
%be=bitcast i8*%ba to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%m,align 8
%bg=load i8**,i8***%y,align 8
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%l,align 8
%bi=call i8*@sml_alloc(i32 inreg 12)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177288,i32*%bk,align 4
store i8*%bi,i8**%o,align 8
%bl=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bi,i64 8
%bo=bitcast i8*%bn to i32*
store i32 1,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 28)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177304,i32*%br,align 4
%bs=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2112 to void(...)*),void(...)**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bp,i64 16
%bx=bitcast i8*%bw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2112 to void(...)*),void(...)**%bx,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 24
%bz=bitcast i8*%by to i32*
store i32 -2147483647,i32*%bz,align 4
%bA=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bA)
%bB=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bB)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%bp,i8**%c,align 8
%bC=call i8*@sml_alloc(i32 inreg 12)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177288,i32*%bE,align 4
store i8*%bC,i8**%d,align 8
%bF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to i32*
store i32 1,i32*%bI,align 4
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
%bM=load i8*,i8**%d,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bJ,i64 8
%bP=bitcast i8*%bO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_1312 to void(...)*),void(...)**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bJ,i64 16
%bR=bitcast i8*%bQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Fun__groupByE_1312 to void(...)*),void(...)**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 24
%bT=bitcast i8*%bS to i32*
store i32 -2147483647,i32*%bT,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bB)
store i8*%bM,i8**%l,align 8
%bU=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bV=getelementptr inbounds i8,i8*%bU,i64 16
%bW=bitcast i8*%bV to i8*(i8*,i8*)**
%bX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bW,align 8
%bY=bitcast i8*%bU to i8**
%bZ=load i8*,i8**%bY,align 8
%b0=call fastcc i8*%bX(i8*inreg%bZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hM,i64 0,i32 2)to i8*))
%b1=getelementptr inbounds i8,i8*%b0,i64 16
%b2=bitcast i8*%b1 to i8*(i8*,i8*)**
%b3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b2,align 8
%b4=bitcast i8*%b0 to i8**
%b5=load i8*,i8**%b4,align 8
%b6=load i8**,i8***%y,align 8
%b7=load i8*,i8**%b6,align 8
%b8=getelementptr inbounds i8,i8*%b7,i64 8
%b9=bitcast i8*%b8 to i8***
%ca=load i8**,i8***%b9,align 8
%cb=load i8*,i8**%ca,align 8
%cc=call fastcc i8*%b3(i8*inreg%b5,i8*inreg%cb)
%cd=call fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1554(i8*inreg%cc)
%ce=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cf=call fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_1312(i8*inreg%ce,i8*inreg%cd)
%cg=getelementptr inbounds i8,i8*%cf,i64 16
%ch=bitcast i8*%cg to i8*(i8*,i8*)**
%ci=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ch,align 8
%cj=bitcast i8*%cf to i8**
%ck=load i8*,i8**%cj,align 8
%cl=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cm=call fastcc i8*%ci(i8*inreg%ck,i8*inreg%cl)
%cn=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%co=call fastcc i8*%bd(i8*inreg%cn,i8*inreg%cm)
%cp=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cq=call fastcc i8*%ai(i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%j,align 8
%cr=load i8**,i8***%y,align 8
%cs=load i8*,i8**%cr,align 8
store i8*%cs,i8**%k,align 8
%ct=call i8*@sml_alloc(i32 inreg 20)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177296,i32*%cv,align 4
store i8*%ct,i8**%l,align 8
%cw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cz=getelementptr inbounds i8,i8*%ct,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%ct,i64 16
%cC=bitcast i8*%cB to i32*
store i32 3,i32*%cC,align 4
%cD=call i8*@sml_alloc(i32 inreg 28)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177304,i32*%cF,align 4
%cG=load i8*,i8**%l,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cD,i64 8
%cJ=bitcast i8*%cI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2117 to void(...)*),void(...)**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cD,i64 16
%cL=bitcast i8*%cK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12groupByToToyE_2117 to void(...)*),void(...)**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cD,i64 24
%cN=bitcast i8*%cM to i32*
store i32 -2147483647,i32*%cN,align 4
ret i8*%cD
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2119(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11havingToToyE_2121(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11havingToToyE_2122(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8***
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8****
%l=load i8***,i8****%k,align 8
br label%m
m:
%n=phi i8***[%l,%j],[%i,%h]
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%p)
%r=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1275(i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
store i8*%y,i8**%c,align 8
%z=bitcast i8**%d to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%e,align 8
%F=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2121 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11havingToToyE_2121 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
ret i8*%M
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11havingToToyE_2123(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%b to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*%r(i8*inreg%t,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gW,i64 0,i32 2)to i8*))
store i8*%u,i8**%c,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%d,align 8
%y=load i8*,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%v,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%v,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%F,i8**%c,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_1867 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_1867 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%d,align 8
%T=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
%ad=load i8*,i8**%d,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_1868 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12tableIdToToyE_1868 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 24
%ak=bitcast i8*%aj to i32*
store i32 -2147483647,i32*%ak,align 4
ret i8*%aa
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
br label%l
l:
%m=phi i8*[%hE,%hB],[%a,%n]
store i8*%m,i8**%g,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%s,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%g,align 8
br label%s
s:
%t=phi i8*[%r,%q],[%m,%l]
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
switch i32%v,label%w[
i32 16,label%x9
i32 8,label%xD
i32 6,label%ux
i32 17,label%ub
i32 3,label%tP
i32 4,label%tt
i32 19,label%qk
i32 20,label%pP
i32 0,label%pt
i32 27,label%oq
i32 1,label%no
i32 28,label%m2
i32 9,label%mG
i32 10,label%mk
i32 30,label%lY
i32 11,label%lC
i32 21,label%lg
i32 18,label%jJ
i32 15,label%in
i32 25,label%h1
i32 22,label%hF
i32 23,label%hB
i32 13,label%f7
i32 12,label%es
i32 14,label%co
i32 29,label%bT
i32 7,label%bo
i32 2,label%a2
i32 5,label%aG
i32 24,label%ak
i32 26,label%O
]
w:
call void@sml_matchcomp_bug()
%x=load i8*,i8**@_SMLZ5Match,align 8
store i8*%x,i8**%g,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%h,align 8
%B=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hB,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%h,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=getelementptr inbounds i8,i8*%t,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%g,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%h,align 8
%V=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%h,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2079 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2079 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
ret i8*%Z
ak:
%al=getelementptr inbounds i8,i8*%t,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%g,align 8
%ao=call i8*@sml_alloc(i32 inreg 12)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177288,i32*%aq,align 4
store i8*%ao,i8**%h,align 8
%ar=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to i32*
store i32 1,i32*%au,align 4
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
%ay=load i8*,i8**%h,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2077 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 16
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2077 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 24
%aF=bitcast i8*%aE to i32*
store i32 -2147483647,i32*%aF,align 4
ret i8*%av
aG:
%aH=getelementptr inbounds i8,i8*%t,i64 8
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%g,align 8
%aK=call i8*@sml_alloc(i32 inreg 12)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177288,i32*%aM,align 4
store i8*%aK,i8**%h,align 8
%aN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i32*
store i32 1,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
%aU=load i8*,i8**%h,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2075 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 16
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2075 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 -2147483647,i32*%a1,align 4
ret i8*%aR
a2:
%a3=getelementptr inbounds i8,i8*%t,i64 8
%a4=bitcast i8*%a3 to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%g,align 8
%a6=call i8*@sml_alloc(i32 inreg 12)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177288,i32*%a8,align 4
store i8*%a6,i8**%h,align 8
%a9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i32*
store i32 1,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 28)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177304,i32*%bf,align 4
%bg=load i8*,i8**%h,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2073 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2073 to void(...)*),void(...)**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bd,i64 24
%bn=bitcast i8*%bm to i32*
store i32 -2147483647,i32*%bn,align 4
ret i8*%bd
bo:
%bp=getelementptr inbounds i8,i8*%t,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
store i8*%br,i8**%g,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
%bv=getelementptr inbounds i8,i8*%bu,i64 8
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%h,align 8
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
store i8*%by,i8**%i,align 8
%bB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 28)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177304,i32*%bK,align 4
%bL=load i8*,i8**%i,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2071 to void(...)*),void(...)**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 16
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2071 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bI,i64 24
%bS=bitcast i8*%bR to i32*
store i32 -2147483647,i32*%bS,align 4
ret i8*%bI
bT:
%bU=getelementptr inbounds i8,i8*%t,i64 8
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
store i8*%bW,i8**%g,align 8
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8**
%bZ=load i8*,i8**%bY,align 8
%b0=getelementptr inbounds i8,i8*%bZ,i64 8
%b1=bitcast i8*%b0 to i8**
%b2=load i8*,i8**%b1,align 8
store i8*%b2,i8**%h,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
store i8*%b3,i8**%i,align 8
%b6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b3,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=call i8*@sml_alloc(i32 inreg 28)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177304,i32*%cf,align 4
%cg=load i8*,i8**%i,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%cd,i64 8
%cj=bitcast i8*%ci to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2068 to void(...)*),void(...)**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cd,i64 16
%cl=bitcast i8*%ck to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2068 to void(...)*),void(...)**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cd,i64 24
%cn=bitcast i8*%cm to i32*
store i32 -2147483647,i32*%cn,align 4
ret i8*%cd
co:
%cp=getelementptr inbounds i8,i8*%t,i64 8
%cq=bitcast i8*%cp to i8**
%cr=load i8*,i8**%cq,align 8
store i8*%cr,i8**%j,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
%cv=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%cu)
store i8*%cv,i8**%g,align 8
%cw=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hy,i64 0,i32 2)to i8*))
%cx=getelementptr inbounds i8,i8*%cw,i64 16
%cy=bitcast i8*%cx to i8*(i8*,i8*)**
%cz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cy,align 8
%cA=bitcast i8*%cw to i8**
%cB=load i8*,i8**%cA,align 8
%cC=load i8*,i8**%g,align 8
%cD=call fastcc i8*%cz(i8*inreg%cB,i8*inreg%cC)
store i8*%cD,i8**%h,align 8
%cE=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cF=getelementptr inbounds i8,i8*%cE,i64 16
%cG=bitcast i8*%cF to i8*(i8*,i8*)**
%cH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cG,align 8
%cI=bitcast i8*%cE to i8**
%cJ=load i8*,i8**%cI,align 8
%cK=call fastcc i8*%cH(i8*inreg%cJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hz,i64 0,i32 2)to i8*))
%cL=getelementptr inbounds i8,i8*%cK,i64 16
%cM=bitcast i8*%cL to i8*(i8*,i8*)**
%cN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cM,align 8
%cO=bitcast i8*%cK to i8**
%cP=load i8*,i8**%cO,align 8
%cQ=bitcast i8**%j to i8***
%cR=load i8**,i8***%cQ,align 8
%cS=load i8*,i8**%cR,align 8
%cT=call fastcc i8*%cN(i8*inreg%cP,i8*inreg%cS)
%cU=call fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1154(i8*inreg%cT)
store i8*%cU,i8**%i,align 8
%cV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cW=call fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1216(i8*inreg%cV)
%cX=getelementptr inbounds i8,i8*%cW,i64 16
%cY=bitcast i8*%cX to i8*(i8*,i8*)**
%cZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cY,align 8
%c0=bitcast i8*%cW to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%h,align 8
%c2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%c3=getelementptr inbounds i8,i8*%c2,i64 16
%c4=bitcast i8*%c3 to i8*(i8*,i8*)**
%c5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c4,align 8
%c6=bitcast i8*%c2 to i8**
%c7=load i8*,i8**%c6,align 8
%c8=call fastcc i8*%c5(i8*inreg%c7,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hA,i64 0,i32 2)to i8*))
%c9=getelementptr inbounds i8,i8*%c8,i64 16
%da=bitcast i8*%c9 to i8*(i8*,i8*)**
%db=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%da,align 8
%dc=bitcast i8*%c8 to i8**
%dd=load i8*,i8**%dc,align 8
%de=load i8**,i8***%cQ,align 8
%df=load i8*,i8**%de,align 8
%dg=call fastcc i8*%db(i8*inreg%dd,i8*inreg%df)
%dh=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%di=call fastcc i8*%cZ(i8*inreg%dh,i8*inreg%dg)
store i8*%di,i8**%h,align 8
%dj=call i8*@sml_alloc(i32 inreg 20)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177296,i32*%dl,align 4
store i8*%dj,i8**%k,align 8
%dm=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dp=getelementptr inbounds i8,i8*%dj,i64 8
%dq=bitcast i8*%dp to i8**
store i8*%do,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dj,i64 16
%ds=bitcast i8*%dr to i32*
store i32 3,i32*%ds,align 4
%dt=call i8*@sml_alloc(i32 inreg 28)#0
%du=getelementptr inbounds i8,i8*%dt,i64 -4
%dv=bitcast i8*%du to i32*
store i32 1342177304,i32*%dv,align 4
%dw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dx=bitcast i8*%dt to i8**
store i8*%dw,i8**%dx,align 8
%dy=getelementptr inbounds i8,i8*%dt,i64 8
%dz=bitcast i8*%dy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6values_2059 to void(...)*),void(...)**%dz,align 8
%dA=getelementptr inbounds i8,i8*%dt,i64 16
%dB=bitcast i8*%dA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6values_2059 to void(...)*),void(...)**%dB,align 8
%dC=getelementptr inbounds i8,i8*%dt,i64 24
%dD=bitcast i8*%dC to i32*
store i32 -2147483647,i32*%dD,align 4
%dE=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%dt)
%dF=getelementptr inbounds i8,i8*%dE,i64 16
%dG=bitcast i8*%dF to i8*(i8*,i8*)**
%dH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dG,align 8
%dI=bitcast i8*%dE to i8**
%dJ=load i8*,i8**%dI,align 8
store i8*%dJ,i8**%h,align 8
%dK=call i8*@sml_alloc(i32 inreg 12)#0
%dL=getelementptr inbounds i8,i8*%dK,i64 -4
%dM=bitcast i8*%dL to i32*
store i32 1342177288,i32*%dM,align 4
store i8*%dK,i8**%i,align 8
%dN=load i8*,i8**%j,align 8
%dO=bitcast i8*%dK to i8**
store i8*%dN,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dK,i64 8
%dQ=bitcast i8*%dP to i32*
store i32 1,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 28)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177304,i32*%dT,align 4
%dU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dV=bitcast i8*%dR to i8**
store i8*%dU,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dR,i64 8
%dX=bitcast i8*%dW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6values_2060 to void(...)*),void(...)**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dR,i64 16
%dZ=bitcast i8*%dY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6values_2060 to void(...)*),void(...)**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dR,i64 24
%d1=bitcast i8*%d0 to i32*
store i32 -2147483647,i32*%d1,align 4
%d2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d3=call fastcc i8*%dH(i8*inreg%d2,i8*inreg%dR)
store i8*%d3,i8**%h,align 8
%d4=call i8*@sml_alloc(i32 inreg 28)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177304,i32*%d6,align 4
store i8*%d4,i8**%i,align 8
%d7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d8=bitcast i8*%d4 to i8**
store i8*%d7,i8**%d8,align 8
%d9=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ea=getelementptr inbounds i8,i8*%d4,i64 8
%eb=bitcast i8*%ea to i8**
store i8*%d9,i8**%eb,align 8
%ec=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ed=getelementptr inbounds i8,i8*%d4,i64 16
%ee=bitcast i8*%ed to i8**
store i8*%ec,i8**%ee,align 8
%ef=getelementptr inbounds i8,i8*%d4,i64 24
%eg=bitcast i8*%ef to i32*
store i32 7,i32*%eg,align 4
%eh=call i8*@sml_alloc(i32 inreg 28)#0
%ei=getelementptr inbounds i8,i8*%eh,i64 -4
%ej=bitcast i8*%ei to i32*
store i32 1342177304,i32*%ej,align 4
%ek=load i8*,i8**%i,align 8
%el=bitcast i8*%eh to i8**
store i8*%ek,i8**%el,align 8
%em=getelementptr inbounds i8,i8*%eh,i64 8
%en=bitcast i8*%em to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2062 to void(...)*),void(...)**%en,align 8
%eo=getelementptr inbounds i8,i8*%eh,i64 16
%ep=bitcast i8*%eo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2062 to void(...)*),void(...)**%ep,align 8
%eq=getelementptr inbounds i8,i8*%eh,i64 24
%er=bitcast i8*%eq to i32*
store i32 -2147483647,i32*%er,align 4
ret i8*%eh
es:
%et=getelementptr inbounds i8,i8*%t,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
store i8*%ev,i8**%i,align 8
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
%ey=icmp eq i8*%ex,null
br i1%ey,label%ez,label%eS
ez:
%eA=call i8*@sml_alloc(i32 inreg 12)#0
%eB=getelementptr inbounds i8,i8*%eA,i64 -4
%eC=bitcast i8*%eB to i32*
store i32 1342177288,i32*%eC,align 4
store i8*%eA,i8**%g,align 8
%eD=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eE=bitcast i8*%eA to i8**
store i8*%eD,i8**%eE,align 8
%eF=getelementptr inbounds i8,i8*%eA,i64 8
%eG=bitcast i8*%eF to i32*
store i32 1,i32*%eG,align 4
%eH=call i8*@sml_alloc(i32 inreg 28)#0
%eI=getelementptr inbounds i8,i8*%eH,i64 -4
%eJ=bitcast i8*%eI to i32*
store i32 1342177304,i32*%eJ,align 4
%eK=load i8*,i8**%g,align 8
%eL=bitcast i8*%eH to i8**
store i8*%eK,i8**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eH,i64 8
%eN=bitcast i8*%eM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2052 to void(...)*),void(...)**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eH,i64 16
%eP=bitcast i8*%eO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2052 to void(...)*),void(...)**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eH,i64 24
%eR=bitcast i8*%eQ to i32*
store i32 -2147483647,i32*%eR,align 4
ret i8*%eH
eS:
%eT=bitcast i8*%ex to i8**
%eU=load i8*,i8**%eT,align 8
store i8*%eU,i8**%j,align 8
%eV=getelementptr inbounds i8,i8*%ev,i64 24
%eW=bitcast i8*%eV to i8**
%eX=load i8*,i8**%eW,align 8
%eY=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%eX)
store i8*%eY,i8**%g,align 8
%eZ=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ht,i64 0,i32 2)to i8*))
%e0=getelementptr inbounds i8,i8*%eZ,i64 16
%e1=bitcast i8*%e0 to i8*(i8*,i8*)**
%e2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e1,align 8
%e3=bitcast i8*%eZ to i8**
%e4=load i8*,i8**%e3,align 8
%e5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e6=call fastcc i8*%e2(i8*inreg%e4,i8*inreg%e5)
store i8*%e6,i8**%g,align 8
%e7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%e8=getelementptr inbounds i8,i8*%e7,i64 16
%e9=bitcast i8*%e8 to i8*(i8*,i8*)**
%fa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e9,align 8
%fb=bitcast i8*%e7 to i8**
%fc=load i8*,i8**%fb,align 8
%fd=call fastcc i8*%fa(i8*inreg%fc,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hu,i64 0,i32 2)to i8*))
%fe=getelementptr inbounds i8,i8*%fd,i64 16
%ff=bitcast i8*%fe to i8*(i8*,i8*)**
%fg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ff,align 8
%fh=bitcast i8*%fd to i8**
%fi=load i8*,i8**%fh,align 8
%fj=load i8*,i8**%j,align 8
%fk=call fastcc i8*%fg(i8*inreg%fi,i8*inreg%fj)
%fl=call fastcc i8*@_SMLLN12ElaborateSQL13PatFlexRecordE_1154(i8*inreg%fk)
store i8*%fl,i8**%h,align 8
%fm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fn=call fastcc i8*@_SMLLN12ElaborateSQL6ModifyE_1216(i8*inreg%fm)
%fo=getelementptr inbounds i8,i8*%fn,i64 16
%fp=bitcast i8*%fo to i8*(i8*,i8*)**
%fq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fp,align 8
%fr=bitcast i8*%fn to i8**
%fs=load i8*,i8**%fr,align 8
store i8*%fs,i8**%g,align 8
%ft=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fu=getelementptr inbounds i8,i8*%ft,i64 16
%fv=bitcast i8*%fu to i8*(i8*,i8*)**
%fw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fv,align 8
%fx=bitcast i8*%ft to i8**
%fy=load i8*,i8**%fx,align 8
%fz=call fastcc i8*%fw(i8*inreg%fy,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hv,i64 0,i32 2)to i8*))
%fA=getelementptr inbounds i8,i8*%fz,i64 16
%fB=bitcast i8*%fA to i8*(i8*,i8*)**
%fC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fB,align 8
%fD=bitcast i8*%fz to i8**
%fE=load i8*,i8**%fD,align 8
%fF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fG=call fastcc i8*%fC(i8*inreg%fE,i8*inreg%fF)
%fH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fI=call fastcc i8*%fq(i8*inreg%fH,i8*inreg%fG)
store i8*%fI,i8**%g,align 8
%fJ=call i8*@sml_alloc(i32 inreg 28)#0
%fK=getelementptr inbounds i8,i8*%fJ,i64 -4
%fL=bitcast i8*%fK to i32*
store i32 1342177304,i32*%fL,align 4
store i8*%fJ,i8**%j,align 8
%fM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fN=bitcast i8*%fJ to i8**
store i8*%fM,i8**%fN,align 8
%fO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fP=getelementptr inbounds i8,i8*%fJ,i64 8
%fQ=bitcast i8*%fP to i8**
store i8*%fO,i8**%fQ,align 8
%fR=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fS=getelementptr inbounds i8,i8*%fJ,i64 16
%fT=bitcast i8*%fS to i8**
store i8*%fR,i8**%fT,align 8
%fU=getelementptr inbounds i8,i8*%fJ,i64 24
%fV=bitcast i8*%fU to i32*
store i32 7,i32*%fV,align 4
%fW=call i8*@sml_alloc(i32 inreg 28)#0
%fX=getelementptr inbounds i8,i8*%fW,i64 -4
%fY=bitcast i8*%fX to i32*
store i32 1342177304,i32*%fY,align 4
%fZ=load i8*,i8**%j,align 8
%f0=bitcast i8*%fW to i8**
store i8*%fZ,i8**%f0,align 8
%f1=getelementptr inbounds i8,i8*%fW,i64 8
%f2=bitcast i8*%f1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2049 to void(...)*),void(...)**%f2,align 8
%f3=getelementptr inbounds i8,i8*%fW,i64 16
%f4=bitcast i8*%f3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2049 to void(...)*),void(...)**%f4,align 8
%f5=getelementptr inbounds i8,i8*%fW,i64 24
%f6=bitcast i8*%f5 to i32*
store i32 -2147483647,i32*%f6,align 4
ret i8*%fW
f7:
%f8=getelementptr inbounds i8,i8*%t,i64 8
%f9=bitcast i8*%f8 to i8**
%ga=load i8*,i8**%f9,align 8
store i8*%ga,i8**%i,align 8
%gb=getelementptr inbounds i8,i8*%ga,i64 16
%gc=bitcast i8*%gb to i8**
%gd=load i8*,i8**%gc,align 8
%ge=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%gd)
store i8*%ge,i8**%g,align 8
%gf=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hs,i64 0,i32 2)to i8*))
%gg=getelementptr inbounds i8,i8*%gf,i64 16
%gh=bitcast i8*%gg to i8*(i8*,i8*)**
%gi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gh,align 8
%gj=bitcast i8*%gf to i8**
%gk=load i8*,i8**%gj,align 8
%gl=load i8*,i8**%g,align 8
%gm=call fastcc i8*%gi(i8*inreg%gk,i8*inreg%gl)
%gn=load i8*,i8**%i,align 8
%go=bitcast i8*%gn to i8**
%gp=load i8*,i8**%go,align 8
%gq=getelementptr inbounds i8,i8*%gn,i64 24
%gr=bitcast i8*%gq to i8**
%gs=load i8*,i8**%gr,align 8
%gt=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gt)
%gu=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gu)
%gv=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gv)
%gw=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gw)
%gx=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gx)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%gm,i8**%d,align 8
store i8*%gp,i8**%c,align 8
store i8*%gs,i8**%b,align 8
%gy=load atomic i32,i32*@sml_check_flag unordered,align 4
%gz=icmp eq i32%gy,0
br i1%gz,label%gB,label%gA
gA:
call void@sml_check(i32 inreg%gy)
br label%gB
gB:
%gC=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gD=getelementptr inbounds i8,i8*%gC,i64 16
%gE=bitcast i8*%gD to i8*(i8*,i8*)**
%gF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gE,align 8
%gG=bitcast i8*%gC to i8**
%gH=load i8*,i8**%gG,align 8
store i8*%gH,i8**%e,align 8
%gI=call i8*@sml_alloc(i32 inreg 20)#0
%gJ=getelementptr inbounds i8,i8*%gI,i64 -4
%gK=bitcast i8*%gJ to i32*
store i32 1342177296,i32*%gK,align 4
store i8*%gI,i8**%f,align 8
%gL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gM=bitcast i8*%gI to i8**
store i8*%gL,i8**%gM,align 8
%gN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gO=getelementptr inbounds i8,i8*%gI,i64 8
%gP=bitcast i8*%gO to i8**
store i8*%gN,i8**%gP,align 8
%gQ=getelementptr inbounds i8,i8*%gI,i64 16
%gR=bitcast i8*%gQ to i32*
store i32 3,i32*%gR,align 4
%gS=call i8*@sml_alloc(i32 inreg 28)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177304,i32*%gU,align 4
%gV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gW=bitcast i8*%gS to i8**
store i8*%gV,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gS,i64 8
%gY=bitcast i8*%gX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValuesToToyE_2105 to void(...)*),void(...)**%gY,align 8
%gZ=getelementptr inbounds i8,i8*%gS,i64 16
%g0=bitcast i8*%gZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValuesToToyE_2105 to void(...)*),void(...)**%g0,align 8
%g1=getelementptr inbounds i8,i8*%gS,i64 24
%g2=bitcast i8*%g1 to i32*
store i32 -2147483647,i32*%g2,align 4
%g3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g4=call fastcc i8*%gF(i8*inreg%g3,i8*inreg%gS)
%g5=getelementptr inbounds i8,i8*%g4,i64 16
%g6=bitcast i8*%g5 to i8*(i8*,i8*)**
%g7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%g6,align 8
%g8=bitcast i8*%g4 to i8**
%g9=load i8*,i8**%g8,align 8
%ha=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hb=call fastcc i8*%g7(i8*inreg%g9,i8*inreg%ha)
%hc=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%hb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gt)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gu)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gx)
store i8*%hc,i8**%h,align 8
%hd=call i8*@sml_alloc(i32 inreg 28)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177304,i32*%hf,align 4
store i8*%hd,i8**%j,align 8
%hg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hh=bitcast i8*%hd to i8**
store i8*%hg,i8**%hh,align 8
%hi=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hj=getelementptr inbounds i8,i8*%hd,i64 8
%hk=bitcast i8*%hj to i8**
store i8*%hi,i8**%hk,align 8
%hl=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hm=getelementptr inbounds i8,i8*%hd,i64 16
%hn=bitcast i8*%hm to i8**
store i8*%hl,i8**%hn,align 8
%ho=getelementptr inbounds i8,i8*%hd,i64 24
%hp=bitcast i8*%ho to i32*
store i32 7,i32*%hp,align 4
%hq=call i8*@sml_alloc(i32 inreg 28)#0
%hr=getelementptr inbounds i8,i8*%hq,i64 -4
%hs=bitcast i8*%hr to i32*
store i32 1342177304,i32*%hs,align 4
%ht=load i8*,i8**%j,align 8
%hu=bitcast i8*%hq to i8**
store i8*%ht,i8**%hu,align 8
%hv=getelementptr inbounds i8,i8*%hq,i64 8
%hw=bitcast i8*%hv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2038 to void(...)*),void(...)**%hw,align 8
%hx=getelementptr inbounds i8,i8*%hq,i64 16
%hy=bitcast i8*%hx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2038 to void(...)*),void(...)**%hy,align 8
%hz=getelementptr inbounds i8,i8*%hq,i64 24
%hA=bitcast i8*%hz to i32*
store i32 -2147483647,i32*%hA,align 4
ret i8*%hq
hB:
%hC=getelementptr inbounds i8,i8*%t,i64 8
%hD=bitcast i8*%hC to i8**
%hE=load i8*,i8**%hD,align 8
br label%l
hF:
%hG=getelementptr inbounds i8,i8*%t,i64 8
%hH=bitcast i8*%hG to i8**
%hI=load i8*,i8**%hH,align 8
store i8*%hI,i8**%g,align 8
%hJ=call i8*@sml_alloc(i32 inreg 12)#0
%hK=getelementptr inbounds i8,i8*%hJ,i64 -4
%hL=bitcast i8*%hK to i32*
store i32 1342177288,i32*%hL,align 4
store i8*%hJ,i8**%h,align 8
%hM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hN=bitcast i8*%hJ to i8**
store i8*%hM,i8**%hN,align 8
%hO=getelementptr inbounds i8,i8*%hJ,i64 8
%hP=bitcast i8*%hO to i32*
store i32 1,i32*%hP,align 4
%hQ=call i8*@sml_alloc(i32 inreg 28)#0
%hR=getelementptr inbounds i8,i8*%hQ,i64 -4
%hS=bitcast i8*%hR to i32*
store i32 1342177304,i32*%hS,align 4
%hT=load i8*,i8**%h,align 8
%hU=bitcast i8*%hQ to i8**
store i8*%hT,i8**%hU,align 8
%hV=getelementptr inbounds i8,i8*%hQ,i64 8
%hW=bitcast i8*%hV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2034 to void(...)*),void(...)**%hW,align 8
%hX=getelementptr inbounds i8,i8*%hQ,i64 16
%hY=bitcast i8*%hX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2034 to void(...)*),void(...)**%hY,align 8
%hZ=getelementptr inbounds i8,i8*%hQ,i64 24
%h0=bitcast i8*%hZ to i32*
store i32 -2147483647,i32*%h0,align 4
ret i8*%hQ
h1:
%h2=getelementptr inbounds i8,i8*%t,i64 8
%h3=bitcast i8*%h2 to i8**
%h4=load i8*,i8**%h3,align 8
store i8*%h4,i8**%g,align 8
%h5=call i8*@sml_alloc(i32 inreg 12)#0
%h6=getelementptr inbounds i8,i8*%h5,i64 -4
%h7=bitcast i8*%h6 to i32*
store i32 1342177288,i32*%h7,align 4
store i8*%h5,i8**%h,align 8
%h8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%h9=bitcast i8*%h5 to i8**
store i8*%h8,i8**%h9,align 8
%ia=getelementptr inbounds i8,i8*%h5,i64 8
%ib=bitcast i8*%ia to i32*
store i32 1,i32*%ib,align 4
%ic=call i8*@sml_alloc(i32 inreg 28)#0
%id=getelementptr inbounds i8,i8*%ic,i64 -4
%ie=bitcast i8*%id to i32*
store i32 1342177304,i32*%ie,align 4
%if=load i8*,i8**%h,align 8
%ig=bitcast i8*%ic to i8**
store i8*%if,i8**%ig,align 8
%ih=getelementptr inbounds i8,i8*%ic,i64 8
%ii=bitcast i8*%ih to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2022 to void(...)*),void(...)**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ic,i64 16
%ik=bitcast i8*%ij to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2022 to void(...)*),void(...)**%ik,align 8
%il=getelementptr inbounds i8,i8*%ic,i64 24
%im=bitcast i8*%il to i32*
store i32 -2147483647,i32*%im,align 4
ret i8*%ic
in:
%io=getelementptr inbounds i8,i8*%t,i64 8
%ip=bitcast i8*%io to i8**
%iq=load i8*,i8**%ip,align 8
store i8*%iq,i8**%h,align 8
%ir=bitcast i8*%iq to i8***
%is=load i8**,i8***%ir,align 8
%it=load i8*,i8**%is,align 8
%iu=icmp eq i8*%it,null
br i1%iu,label%iU,label%iv
iv:
%iw=bitcast i8*%it to i8**
%ix=load i8*,i8**%iw,align 8
store i8*%ix,i8**%g,align 8
%iy=call i8*@sml_alloc(i32 inreg 20)#0
%iz=getelementptr inbounds i8,i8*%iy,i64 -4
%iA=bitcast i8*%iz to i32*
store i32 1342177296,i32*%iA,align 4
store i8*%iy,i8**%i,align 8
%iB=load i8*,i8**%h,align 8
%iC=bitcast i8*%iy to i8**
store i8*%iB,i8**%iC,align 8
%iD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iE=getelementptr inbounds i8,i8*%iy,i64 8
%iF=bitcast i8*%iE to i8**
store i8*%iD,i8**%iF,align 8
%iG=getelementptr inbounds i8,i8*%iy,i64 16
%iH=bitcast i8*%iG to i32*
store i32 3,i32*%iH,align 4
%iI=call i8*@sml_alloc(i32 inreg 28)#0
%iJ=getelementptr inbounds i8,i8*%iI,i64 -4
%iK=bitcast i8*%iJ to i32*
store i32 1342177304,i32*%iK,align 4
%iL=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%iM=bitcast i8*%iI to i8**
store i8*%iL,i8**%iM,align 8
%iN=getelementptr inbounds i8,i8*%iI,i64 8
%iO=bitcast i8*%iN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2009 to void(...)*),void(...)**%iO,align 8
%iP=getelementptr inbounds i8,i8*%iI,i64 16
%iQ=bitcast i8*%iP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2009 to void(...)*),void(...)**%iQ,align 8
%iR=getelementptr inbounds i8,i8*%iI,i64 24
%iS=bitcast i8*%iR to i32*
store i32 -2147483647,i32*%iS,align 4
%iT=load i8*,i8**%h,align 8
br label%iU
iU:
%iV=phi i8*[%iT,%iv],[%iq,%in]
%iW=phi i8*[%iI,%iv],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ho,i64 0,i32 2)to i8*),%in]
store i8*%iW,i8**%g,align 8
%iX=getelementptr inbounds i8,i8*%iV,i64 16
%iY=bitcast i8*%iX to i8**
%iZ=load i8*,i8**%iY,align 8
%i0=icmp eq i8*%iZ,null
br i1%i0,label%jm,label%i1
i1:
%i2=bitcast i8*%iZ to i8**
%i3=load i8*,i8**%i2,align 8
store i8*%i3,i8**%h,align 8
%i4=call i8*@sml_alloc(i32 inreg 12)#0
%i5=getelementptr inbounds i8,i8*%i4,i64 -4
%i6=bitcast i8*%i5 to i32*
store i32 1342177288,i32*%i6,align 4
store i8*%i4,i8**%i,align 8
%i7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%i8=bitcast i8*%i4 to i8**
store i8*%i7,i8**%i8,align 8
%i9=getelementptr inbounds i8,i8*%i4,i64 8
%ja=bitcast i8*%i9 to i32*
store i32 1,i32*%ja,align 4
%jb=call i8*@sml_alloc(i32 inreg 28)#0
%jc=getelementptr inbounds i8,i8*%jb,i64 -4
%jd=bitcast i8*%jc to i32*
store i32 1342177304,i32*%jd,align 4
%je=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jf=bitcast i8*%jb to i8**
store i8*%je,i8**%jf,align 8
%jg=getelementptr inbounds i8,i8*%jb,i64 8
%jh=bitcast i8*%jg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2015 to void(...)*),void(...)**%jh,align 8
%ji=getelementptr inbounds i8,i8*%jb,i64 16
%jj=bitcast i8*%ji to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2015 to void(...)*),void(...)**%jj,align 8
%jk=getelementptr inbounds i8,i8*%jb,i64 24
%jl=bitcast i8*%jk to i32*
store i32 -2147483647,i32*%jl,align 4
br label%jm
jm:
%jn=phi i8*[%jb,%i1],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hq,i64 0,i32 2)to i8*),%iU]
store i8*%jn,i8**%h,align 8
%jo=call i8*@sml_alloc(i32 inreg 20)#0
%jp=getelementptr inbounds i8,i8*%jo,i64 -4
%jq=bitcast i8*%jp to i32*
store i32 1342177296,i32*%jq,align 4
store i8*%jo,i8**%i,align 8
%jr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%js=bitcast i8*%jo to i8**
store i8*%jr,i8**%js,align 8
%jt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ju=getelementptr inbounds i8,i8*%jo,i64 8
%jv=bitcast i8*%ju to i8**
store i8*%jt,i8**%jv,align 8
%jw=getelementptr inbounds i8,i8*%jo,i64 16
%jx=bitcast i8*%jw to i32*
store i32 3,i32*%jx,align 4
%jy=call i8*@sml_alloc(i32 inreg 28)#0
%jz=getelementptr inbounds i8,i8*%jy,i64 -4
%jA=bitcast i8*%jz to i32*
store i32 1342177304,i32*%jA,align 4
%jB=load i8*,i8**%i,align 8
%jC=bitcast i8*%jy to i8**
store i8*%jB,i8**%jC,align 8
%jD=getelementptr inbounds i8,i8*%jy,i64 8
%jE=bitcast i8*%jD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2018 to void(...)*),void(...)**%jE,align 8
%jF=getelementptr inbounds i8,i8*%jy,i64 16
%jG=bitcast i8*%jF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2018 to void(...)*),void(...)**%jG,align 8
%jH=getelementptr inbounds i8,i8*%jy,i64 24
%jI=bitcast i8*%jH to i32*
store i32 -2147483647,i32*%jI,align 4
ret i8*%jy
jJ:
%jK=getelementptr inbounds i8,i8*%t,i64 8
%jL=bitcast i8*%jK to i8**
%jM=load i8*,i8**%jL,align 8
store i8*%jM,i8**%h,align 8
%jN=bitcast i8*%jM to i8**
%jO=load i8*,i8**%jN,align 8
%jP=icmp eq i8*%jO,null
br i1%jP,label%kB,label%jQ
jQ:
%jR=bitcast i8*%jO to i8**
%jS=load i8*,i8**%jR,align 8
store i8*%jS,i8**%g,align 8
%jT=getelementptr inbounds i8,i8*%jS,i64 8
%jU=bitcast i8*%jT to i8**
%jV=load i8*,i8**%jU,align 8
%jW=icmp eq i8*%jV,null
br i1%jW,label%jX,label%j9
jX:
%jY=call i8*@sml_alloc(i32 inreg 12)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177288,i32*%j0,align 4
store i8*%jY,i8**%i,align 8
%j1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%j2=bitcast i8*%jY to i8**
store i8*%j1,i8**%j2,align 8
%j3=getelementptr inbounds i8,i8*%jY,i64 8
%j4=bitcast i8*%j3 to i32*
store i32 1,i32*%j4,align 4
%j5=call i8*@sml_alloc(i32 inreg 28)#0
%j6=getelementptr inbounds i8,i8*%j5,i64 -4
%j7=bitcast i8*%j6 to i32*
store i32 1342177304,i32*%j7,align 4
%j8=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
br label%kq
j9:
%ka=bitcast i8*%jV to i8**
%kb=load i8*,i8**%ka,align 8
store i8*%kb,i8**%i,align 8
%kc=call i8*@sml_alloc(i32 inreg 20)#0
%kd=getelementptr inbounds i8,i8*%kc,i64 -4
%ke=bitcast i8*%kd to i32*
store i32 1342177296,i32*%ke,align 4
store i8*%kc,i8**%j,align 8
%kf=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kg=bitcast i8*%kc to i8**
store i8*%kf,i8**%kg,align 8
%kh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ki=getelementptr inbounds i8,i8*%kc,i64 8
%kj=bitcast i8*%ki to i8**
store i8*%kh,i8**%kj,align 8
%kk=getelementptr inbounds i8,i8*%kc,i64 16
%kl=bitcast i8*%kk to i32*
store i32 3,i32*%kl,align 4
%km=call i8*@sml_alloc(i32 inreg 28)#0
%kn=getelementptr inbounds i8,i8*%km,i64 -4
%ko=bitcast i8*%kn to i32*
store i32 1342177304,i32*%ko,align 4
%kp=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
br label%kq
kq:
%kr=phi i8*[%j5,%jX],[%km,%j9]
%ks=phi i8*[%j8,%jX],[%kp,%j9]
%kt=phi void(...)*[bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1998 to void(...)*),%jX],[bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1994 to void(...)*),%j9]
%ku=bitcast i8*%kr to i8**
store i8*%ks,i8**%ku,align 8
%kv=getelementptr inbounds i8,i8*%kr,i64 8
%kw=bitcast i8*%kv to void(...)**
store void(...)*%kt,void(...)**%kw,align 8
%kx=getelementptr inbounds i8,i8*%kr,i64 16
%ky=bitcast i8*%kx to void(...)**
store void(...)*%kt,void(...)**%ky,align 8
%kz=getelementptr inbounds i8,i8*%kr,i64 24
%kA=bitcast i8*%kz to i32*
store i32 -2147483647,i32*%kA,align 4
br label%kB
kB:
%kC=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hl,i64 0,i32 2)to i8*),%jJ],[%kr,%kq]
store i8*%kC,i8**%g,align 8
%kD=call i8*@sml_alloc(i32 inreg 12)#0
%kE=getelementptr inbounds i8,i8*%kD,i64 -4
%kF=bitcast i8*%kE to i32*
store i32 1342177288,i32*%kF,align 4
store i8*%kD,i8**%i,align 8
%kG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kH=bitcast i8*%kD to i8**
store i8*%kG,i8**%kH,align 8
%kI=getelementptr inbounds i8,i8*%kD,i64 8
%kJ=bitcast i8*%kI to i32*
store i32 1,i32*%kJ,align 4
%kK=call i8*@sml_alloc(i32 inreg 28)#0
%kL=getelementptr inbounds i8,i8*%kK,i64 -4
%kM=bitcast i8*%kL to i32*
store i32 1342177304,i32*%kM,align 4
%kN=load i8*,i8**%i,align 8
%kO=bitcast i8*%kK to i8**
store i8*%kN,i8**%kO,align 8
%kP=getelementptr inbounds i8,i8*%kK,i64 8
%kQ=bitcast i8*%kP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2004 to void(...)*),void(...)**%kQ,align 8
%kR=getelementptr inbounds i8,i8*%kK,i64 16
%kS=bitcast i8*%kR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2004 to void(...)*),void(...)**%kS,align 8
%kT=getelementptr inbounds i8,i8*%kK,i64 24
%kU=bitcast i8*%kT to i32*
store i32 -2147483647,i32*%kU,align 4
%kV=call i8*@sml_alloc(i32 inreg 20)#0
%kW=getelementptr inbounds i8,i8*%kV,i64 -4
%kX=bitcast i8*%kW to i32*
store i32 1342177296,i32*%kX,align 4
store i8*%kV,i8**%h,align 8
%kY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kZ=bitcast i8*%kV to i8**
store i8*%kY,i8**%kZ,align 8
%k0=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%k1=getelementptr inbounds i8,i8*%kV,i64 8
%k2=bitcast i8*%k1 to i8**
store i8*%k0,i8**%k2,align 8
%k3=getelementptr inbounds i8,i8*%kV,i64 16
%k4=bitcast i8*%k3 to i32*
store i32 3,i32*%k4,align 4
%k5=call i8*@sml_alloc(i32 inreg 28)#0
%k6=getelementptr inbounds i8,i8*%k5,i64 -4
%k7=bitcast i8*%k6 to i32*
store i32 1342177304,i32*%k7,align 4
%k8=load i8*,i8**%h,align 8
%k9=bitcast i8*%k5 to i8**
store i8*%k8,i8**%k9,align 8
%la=getelementptr inbounds i8,i8*%k5,i64 8
%lb=bitcast i8*%la to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2005 to void(...)*),void(...)**%lb,align 8
%lc=getelementptr inbounds i8,i8*%k5,i64 16
%ld=bitcast i8*%lc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_2005 to void(...)*),void(...)**%ld,align 8
%le=getelementptr inbounds i8,i8*%k5,i64 24
%lf=bitcast i8*%le to i32*
store i32 -2147483647,i32*%lf,align 4
ret i8*%k5
lg:
%lh=getelementptr inbounds i8,i8*%t,i64 8
%li=bitcast i8*%lh to i8**
%lj=load i8*,i8**%li,align 8
store i8*%lj,i8**%g,align 8
%lk=call i8*@sml_alloc(i32 inreg 12)#0
%ll=getelementptr inbounds i8,i8*%lk,i64 -4
%lm=bitcast i8*%ll to i32*
store i32 1342177288,i32*%lm,align 4
store i8*%lk,i8**%h,align 8
%ln=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lo=bitcast i8*%lk to i8**
store i8*%ln,i8**%lo,align 8
%lp=getelementptr inbounds i8,i8*%lk,i64 8
%lq=bitcast i8*%lp to i32*
store i32 1,i32*%lq,align 4
%lr=call i8*@sml_alloc(i32 inreg 28)#0
%ls=getelementptr inbounds i8,i8*%lr,i64 -4
%lt=bitcast i8*%ls to i32*
store i32 1342177304,i32*%lt,align 4
%lu=load i8*,i8**%h,align 8
%lv=bitcast i8*%lr to i8**
store i8*%lu,i8**%lv,align 8
%lw=getelementptr inbounds i8,i8*%lr,i64 8
%lx=bitcast i8*%lw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1990 to void(...)*),void(...)**%lx,align 8
%ly=getelementptr inbounds i8,i8*%lr,i64 16
%lz=bitcast i8*%ly to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1990 to void(...)*),void(...)**%lz,align 8
%lA=getelementptr inbounds i8,i8*%lr,i64 24
%lB=bitcast i8*%lA to i32*
store i32 -2147483647,i32*%lB,align 4
ret i8*%lr
lC:
%lD=getelementptr inbounds i8,i8*%t,i64 8
%lE=bitcast i8*%lD to i8**
%lF=load i8*,i8**%lE,align 8
store i8*%lF,i8**%g,align 8
%lG=call i8*@sml_alloc(i32 inreg 12)#0
%lH=getelementptr inbounds i8,i8*%lG,i64 -4
%lI=bitcast i8*%lH to i32*
store i32 1342177288,i32*%lI,align 4
store i8*%lG,i8**%h,align 8
%lJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lK=bitcast i8*%lG to i8**
store i8*%lJ,i8**%lK,align 8
%lL=getelementptr inbounds i8,i8*%lG,i64 8
%lM=bitcast i8*%lL to i32*
store i32 1,i32*%lM,align 4
%lN=call i8*@sml_alloc(i32 inreg 28)#0
%lO=getelementptr inbounds i8,i8*%lN,i64 -4
%lP=bitcast i8*%lO to i32*
store i32 1342177304,i32*%lP,align 4
%lQ=load i8*,i8**%h,align 8
%lR=bitcast i8*%lN to i8**
store i8*%lQ,i8**%lR,align 8
%lS=getelementptr inbounds i8,i8*%lN,i64 8
%lT=bitcast i8*%lS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1982 to void(...)*),void(...)**%lT,align 8
%lU=getelementptr inbounds i8,i8*%lN,i64 16
%lV=bitcast i8*%lU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1982 to void(...)*),void(...)**%lV,align 8
%lW=getelementptr inbounds i8,i8*%lN,i64 24
%lX=bitcast i8*%lW to i32*
store i32 -2147483647,i32*%lX,align 4
ret i8*%lN
lY:
%lZ=getelementptr inbounds i8,i8*%t,i64 8
%l0=bitcast i8*%lZ to i8**
%l1=load i8*,i8**%l0,align 8
store i8*%l1,i8**%g,align 8
%l2=call i8*@sml_alloc(i32 inreg 12)#0
%l3=getelementptr inbounds i8,i8*%l2,i64 -4
%l4=bitcast i8*%l3 to i32*
store i32 1342177288,i32*%l4,align 4
store i8*%l2,i8**%h,align 8
%l5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%l6=bitcast i8*%l2 to i8**
store i8*%l5,i8**%l6,align 8
%l7=getelementptr inbounds i8,i8*%l2,i64 8
%l8=bitcast i8*%l7 to i32*
store i32 1,i32*%l8,align 4
%l9=call i8*@sml_alloc(i32 inreg 28)#0
%ma=getelementptr inbounds i8,i8*%l9,i64 -4
%mb=bitcast i8*%ma to i32*
store i32 1342177304,i32*%mb,align 4
%mc=load i8*,i8**%h,align 8
%md=bitcast i8*%l9 to i8**
store i8*%mc,i8**%md,align 8
%me=getelementptr inbounds i8,i8*%l9,i64 8
%mf=bitcast i8*%me to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1980 to void(...)*),void(...)**%mf,align 8
%mg=getelementptr inbounds i8,i8*%l9,i64 16
%mh=bitcast i8*%mg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1980 to void(...)*),void(...)**%mh,align 8
%mi=getelementptr inbounds i8,i8*%l9,i64 24
%mj=bitcast i8*%mi to i32*
store i32 -2147483647,i32*%mj,align 4
ret i8*%l9
mk:
%ml=getelementptr inbounds i8,i8*%t,i64 8
%mm=bitcast i8*%ml to i8**
%mn=load i8*,i8**%mm,align 8
store i8*%mn,i8**%g,align 8
%mo=call i8*@sml_alloc(i32 inreg 12)#0
%mp=getelementptr inbounds i8,i8*%mo,i64 -4
%mq=bitcast i8*%mp to i32*
store i32 1342177288,i32*%mq,align 4
store i8*%mo,i8**%h,align 8
%mr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ms=bitcast i8*%mo to i8**
store i8*%mr,i8**%ms,align 8
%mt=getelementptr inbounds i8,i8*%mo,i64 8
%mu=bitcast i8*%mt to i32*
store i32 1,i32*%mu,align 4
%mv=call i8*@sml_alloc(i32 inreg 28)#0
%mw=getelementptr inbounds i8,i8*%mv,i64 -4
%mx=bitcast i8*%mw to i32*
store i32 1342177304,i32*%mx,align 4
%my=load i8*,i8**%h,align 8
%mz=bitcast i8*%mv to i8**
store i8*%my,i8**%mz,align 8
%mA=getelementptr inbounds i8,i8*%mv,i64 8
%mB=bitcast i8*%mA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1978 to void(...)*),void(...)**%mB,align 8
%mC=getelementptr inbounds i8,i8*%mv,i64 16
%mD=bitcast i8*%mC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1978 to void(...)*),void(...)**%mD,align 8
%mE=getelementptr inbounds i8,i8*%mv,i64 24
%mF=bitcast i8*%mE to i32*
store i32 -2147483647,i32*%mF,align 4
ret i8*%mv
mG:
%mH=getelementptr inbounds i8,i8*%t,i64 8
%mI=bitcast i8*%mH to i8**
%mJ=load i8*,i8**%mI,align 8
store i8*%mJ,i8**%g,align 8
%mK=call i8*@sml_alloc(i32 inreg 12)#0
%mL=getelementptr inbounds i8,i8*%mK,i64 -4
%mM=bitcast i8*%mL to i32*
store i32 1342177288,i32*%mM,align 4
store i8*%mK,i8**%h,align 8
%mN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mO=bitcast i8*%mK to i8**
store i8*%mN,i8**%mO,align 8
%mP=getelementptr inbounds i8,i8*%mK,i64 8
%mQ=bitcast i8*%mP to i32*
store i32 1,i32*%mQ,align 4
%mR=call i8*@sml_alloc(i32 inreg 28)#0
%mS=getelementptr inbounds i8,i8*%mR,i64 -4
%mT=bitcast i8*%mS to i32*
store i32 1342177304,i32*%mT,align 4
%mU=load i8*,i8**%h,align 8
%mV=bitcast i8*%mR to i8**
store i8*%mU,i8**%mV,align 8
%mW=getelementptr inbounds i8,i8*%mR,i64 8
%mX=bitcast i8*%mW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1974 to void(...)*),void(...)**%mX,align 8
%mY=getelementptr inbounds i8,i8*%mR,i64 16
%mZ=bitcast i8*%mY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1974 to void(...)*),void(...)**%mZ,align 8
%m0=getelementptr inbounds i8,i8*%mR,i64 24
%m1=bitcast i8*%m0 to i32*
store i32 -2147483647,i32*%m1,align 4
ret i8*%mR
m2:
%m3=getelementptr inbounds i8,i8*%t,i64 8
%m4=bitcast i8*%m3 to i8**
%m5=load i8*,i8**%m4,align 8
store i8*%m5,i8**%g,align 8
%m6=call i8*@sml_alloc(i32 inreg 12)#0
%m7=getelementptr inbounds i8,i8*%m6,i64 -4
%m8=bitcast i8*%m7 to i32*
store i32 1342177288,i32*%m8,align 4
store i8*%m6,i8**%h,align 8
%m9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%na=bitcast i8*%m6 to i8**
store i8*%m9,i8**%na,align 8
%nb=getelementptr inbounds i8,i8*%m6,i64 8
%nc=bitcast i8*%nb to i32*
store i32 1,i32*%nc,align 4
%nd=call i8*@sml_alloc(i32 inreg 28)#0
%ne=getelementptr inbounds i8,i8*%nd,i64 -4
%nf=bitcast i8*%ne to i32*
store i32 1342177304,i32*%nf,align 4
%ng=load i8*,i8**%h,align 8
%nh=bitcast i8*%nd to i8**
store i8*%ng,i8**%nh,align 8
%ni=getelementptr inbounds i8,i8*%nd,i64 8
%nj=bitcast i8*%ni to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1968 to void(...)*),void(...)**%nj,align 8
%nk=getelementptr inbounds i8,i8*%nd,i64 16
%nl=bitcast i8*%nk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1968 to void(...)*),void(...)**%nl,align 8
%nm=getelementptr inbounds i8,i8*%nd,i64 24
%nn=bitcast i8*%nm to i32*
store i32 -2147483647,i32*%nn,align 4
ret i8*%nd
no:
%np=getelementptr inbounds i8,i8*%t,i64 8
%nq=bitcast i8*%np to i8**
%nr=load i8*,i8**%nq,align 8
store i8*%nr,i8**%h,align 8
%ns=bitcast i8*%nr to i8**
%nt=load i8*,i8**%ns,align 8
store i8*%nt,i8**%i,align 8
%nu=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%nv=getelementptr inbounds i8,i8*%nu,i64 16
%nw=bitcast i8*%nv to i8*(i8*,i8*)**
%nx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nw,align 8
%ny=bitcast i8*%nu to i8**
%nz=load i8*,i8**%ny,align 8
store i8*%nz,i8**%j,align 8
%nA=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d,i64 0,i32 2)to i8*))
%nB=getelementptr inbounds i8,i8*%nA,i64 16
%nC=bitcast i8*%nB to i8*(i8*,i8*)**
%nD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nC,align 8
%nE=bitcast i8*%nA to i8**
%nF=load i8*,i8**%nE,align 8
store i8*%nF,i8**%g,align 8
%nG=load i8*,i8**%i,align 8
%nH=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%nG)
%nI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nJ=call fastcc i8*%nD(i8*inreg%nI,i8*inreg%nH)
store i8*%nJ,i8**%g,align 8
%nK=call i8*@sml_alloc(i32 inreg 20)#0
%nL=getelementptr inbounds i8,i8*%nK,i64 -4
%nM=bitcast i8*%nL to i32*
store i32 1342177296,i32*%nM,align 4
store i8*%nK,i8**%k,align 8
%nN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%nO=bitcast i8*%nK to i8**
store i8*%nN,i8**%nO,align 8
%nP=getelementptr inbounds i8,i8*%nK,i64 8
%nQ=bitcast i8*%nP to i8**
store i8*null,i8**%nQ,align 8
%nR=getelementptr inbounds i8,i8*%nK,i64 16
%nS=bitcast i8*%nR to i32*
store i32 3,i32*%nS,align 4
%nT=call i8*@sml_alloc(i32 inreg 20)#0
%nU=getelementptr inbounds i8,i8*%nT,i64 -4
%nV=bitcast i8*%nU to i32*
store i32 1342177296,i32*%nV,align 4
%nW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nX=bitcast i8*%nT to i8**
store i8*%nW,i8**%nX,align 8
%nY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nZ=getelementptr inbounds i8,i8*%nT,i64 8
%n0=bitcast i8*%nZ to i8**
store i8*%nY,i8**%n0,align 8
%n1=getelementptr inbounds i8,i8*%nT,i64 16
%n2=bitcast i8*%n1 to i32*
store i32 3,i32*%n2,align 4
%n3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%n4=call fastcc i8*%nx(i8*inreg%n3,i8*inreg%nT)
store i8*%n4,i8**%g,align 8
%n5=call i8*@sml_alloc(i32 inreg 20)#0
%n6=getelementptr inbounds i8,i8*%n5,i64 -4
%n7=bitcast i8*%n6 to i32*
store i32 1342177296,i32*%n7,align 4
store i8*%n5,i8**%i,align 8
%n8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%n9=bitcast i8*%n5 to i8**
store i8*%n8,i8**%n9,align 8
%oa=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ob=getelementptr inbounds i8,i8*%n5,i64 8
%oc=bitcast i8*%ob to i8**
store i8*%oa,i8**%oc,align 8
%od=getelementptr inbounds i8,i8*%n5,i64 16
%oe=bitcast i8*%od to i32*
store i32 3,i32*%oe,align 4
%of=call i8*@sml_alloc(i32 inreg 28)#0
%og=getelementptr inbounds i8,i8*%of,i64 -4
%oh=bitcast i8*%og to i32*
store i32 1342177304,i32*%oh,align 4
%oi=load i8*,i8**%i,align 8
%oj=bitcast i8*%of to i8**
store i8*%oi,i8**%oj,align 8
%ok=getelementptr inbounds i8,i8*%of,i64 8
%ol=bitcast i8*%ok to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1965 to void(...)*),void(...)**%ol,align 8
%om=getelementptr inbounds i8,i8*%of,i64 16
%on=bitcast i8*%om to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1965 to void(...)*),void(...)**%on,align 8
%oo=getelementptr inbounds i8,i8*%of,i64 24
%op=bitcast i8*%oo to i32*
store i32 -2147483647,i32*%op,align 4
ret i8*%of
oq:
%or=getelementptr inbounds i8,i8*%t,i64 8
%os=bitcast i8*%or to i8**
%ot=load i8*,i8**%os,align 8
store i8*%ot,i8**%h,align 8
%ou=getelementptr inbounds i8,i8*%ot,i64 8
%ov=bitcast i8*%ou to i8**
%ow=load i8*,i8**%ov,align 8
store i8*%ow,i8**%i,align 8
%ox=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%oy=getelementptr inbounds i8,i8*%ox,i64 16
%oz=bitcast i8*%oy to i8*(i8*,i8*)**
%oA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oz,align 8
%oB=bitcast i8*%ox to i8**
%oC=load i8*,i8**%oB,align 8
store i8*%oC,i8**%j,align 8
%oD=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d,i64 0,i32 2)to i8*))
%oE=getelementptr inbounds i8,i8*%oD,i64 16
%oF=bitcast i8*%oE to i8*(i8*,i8*)**
%oG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oF,align 8
%oH=bitcast i8*%oD to i8**
%oI=load i8*,i8**%oH,align 8
store i8*%oI,i8**%g,align 8
%oJ=load i8*,i8**%i,align 8
%oK=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%oJ)
%oL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%oM=call fastcc i8*%oG(i8*inreg%oL,i8*inreg%oK)
store i8*%oM,i8**%g,align 8
%oN=call i8*@sml_alloc(i32 inreg 20)#0
%oO=getelementptr inbounds i8,i8*%oN,i64 -4
%oP=bitcast i8*%oO to i32*
store i32 1342177296,i32*%oP,align 4
store i8*%oN,i8**%k,align 8
%oQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%oR=bitcast i8*%oN to i8**
store i8*%oQ,i8**%oR,align 8
%oS=getelementptr inbounds i8,i8*%oN,i64 8
%oT=bitcast i8*%oS to i8**
store i8*null,i8**%oT,align 8
%oU=getelementptr inbounds i8,i8*%oN,i64 16
%oV=bitcast i8*%oU to i32*
store i32 3,i32*%oV,align 4
%oW=call i8*@sml_alloc(i32 inreg 20)#0
%oX=getelementptr inbounds i8,i8*%oW,i64 -4
%oY=bitcast i8*%oX to i32*
store i32 1342177296,i32*%oY,align 4
%oZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%o0=bitcast i8*%oW to i8**
store i8*%oZ,i8**%o0,align 8
%o1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%o2=getelementptr inbounds i8,i8*%oW,i64 8
%o3=bitcast i8*%o2 to i8**
store i8*%o1,i8**%o3,align 8
%o4=getelementptr inbounds i8,i8*%oW,i64 16
%o5=bitcast i8*%o4 to i32*
store i32 3,i32*%o5,align 4
%o6=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%o7=call fastcc i8*%oA(i8*inreg%o6,i8*inreg%oW)
store i8*%o7,i8**%g,align 8
%o8=call i8*@sml_alloc(i32 inreg 20)#0
%o9=getelementptr inbounds i8,i8*%o8,i64 -4
%pa=bitcast i8*%o9 to i32*
store i32 1342177296,i32*%pa,align 4
store i8*%o8,i8**%i,align 8
%pb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pc=bitcast i8*%o8 to i8**
store i8*%pb,i8**%pc,align 8
%pd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%pe=getelementptr inbounds i8,i8*%o8,i64 8
%pf=bitcast i8*%pe to i8**
store i8*%pd,i8**%pf,align 8
%pg=getelementptr inbounds i8,i8*%o8,i64 16
%ph=bitcast i8*%pg to i32*
store i32 3,i32*%ph,align 4
%pi=call i8*@sml_alloc(i32 inreg 28)#0
%pj=getelementptr inbounds i8,i8*%pi,i64 -4
%pk=bitcast i8*%pj to i32*
store i32 1342177304,i32*%pk,align 4
%pl=load i8*,i8**%i,align 8
%pm=bitcast i8*%pi to i8**
store i8*%pl,i8**%pm,align 8
%pn=getelementptr inbounds i8,i8*%pi,i64 8
%po=bitcast i8*%pn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1962 to void(...)*),void(...)**%po,align 8
%pp=getelementptr inbounds i8,i8*%pi,i64 16
%pq=bitcast i8*%pp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1962 to void(...)*),void(...)**%pq,align 8
%pr=getelementptr inbounds i8,i8*%pi,i64 24
%ps=bitcast i8*%pr to i32*
store i32 -2147483647,i32*%ps,align 4
ret i8*%pi
pt:
%pu=getelementptr inbounds i8,i8*%t,i64 8
%pv=bitcast i8*%pu to i8**
%pw=load i8*,i8**%pv,align 8
store i8*%pw,i8**%g,align 8
%px=call i8*@sml_alloc(i32 inreg 12)#0
%py=getelementptr inbounds i8,i8*%px,i64 -4
%pz=bitcast i8*%py to i32*
store i32 1342177288,i32*%pz,align 4
store i8*%px,i8**%h,align 8
%pA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pB=bitcast i8*%px to i8**
store i8*%pA,i8**%pB,align 8
%pC=getelementptr inbounds i8,i8*%px,i64 8
%pD=bitcast i8*%pC to i32*
store i32 1,i32*%pD,align 4
%pE=call i8*@sml_alloc(i32 inreg 28)#0
%pF=getelementptr inbounds i8,i8*%pE,i64 -4
%pG=bitcast i8*%pF to i32*
store i32 1342177304,i32*%pG,align 4
%pH=load i8*,i8**%h,align 8
%pI=bitcast i8*%pE to i8**
store i8*%pH,i8**%pI,align 8
%pJ=getelementptr inbounds i8,i8*%pE,i64 8
%pK=bitcast i8*%pJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1959 to void(...)*),void(...)**%pK,align 8
%pL=getelementptr inbounds i8,i8*%pE,i64 16
%pM=bitcast i8*%pL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1959 to void(...)*),void(...)**%pM,align 8
%pN=getelementptr inbounds i8,i8*%pE,i64 24
%pO=bitcast i8*%pN to i32*
store i32 -2147483647,i32*%pO,align 4
ret i8*%pE
pP:
%pQ=getelementptr inbounds i8,i8*%t,i64 8
%pR=bitcast i8*%pQ to i8**
%pS=load i8*,i8**%pR,align 8
store i8*%pS,i8**%g,align 8
%pT=bitcast i8*%pS to i32*
%pU=load i32,i32*%pT,align 4
%pV=icmp eq i32%pU,0
%pW=call i8*@sml_alloc(i32 inreg 12)#0
%pX=getelementptr inbounds i8,i8*%pW,i64 -4
%pY=bitcast i8*%pX to i32*
store i32 1342177288,i32*%pY,align 4
store i8*%pW,i8**%h,align 8
%pZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%p0=bitcast i8*%pW to i8**
store i8*%pZ,i8**%p0,align 8
%p1=getelementptr inbounds i8,i8*%pW,i64 8
%p2=bitcast i8*%p1 to i32*
store i32 1,i32*%p2,align 4
%p3=call i8*@sml_alloc(i32 inreg 28)#0
%p4=getelementptr inbounds i8,i8*%p3,i64 -4
%p5=bitcast i8*%p4 to i32*
store i32 1342177304,i32*%p5,align 4
%p6=load i8*,i8**%h,align 8
%p7=bitcast i8*%p3 to i8**
store i8*%p6,i8**%p7,align 8
%p8=getelementptr inbounds i8,i8*%p3,i64 8
%p9=bitcast i8*%p8 to void(...)**
br i1%pV,label%qf,label%qa
qa:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1957 to void(...)*),void(...)**%p9,align 8
%qb=getelementptr inbounds i8,i8*%p3,i64 16
%qc=bitcast i8*%qb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1957 to void(...)*),void(...)**%qc,align 8
%qd=getelementptr inbounds i8,i8*%p3,i64 24
%qe=bitcast i8*%qd to i32*
store i32 -2147483647,i32*%qe,align 4
ret i8*%p3
qf:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1955 to void(...)*),void(...)**%p9,align 8
%qg=getelementptr inbounds i8,i8*%p3,i64 16
%qh=bitcast i8*%qg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1955 to void(...)*),void(...)**%qh,align 8
%qi=getelementptr inbounds i8,i8*%p3,i64 24
%qj=bitcast i8*%qi to i32*
store i32 -2147483647,i32*%qj,align 4
ret i8*%p3
qk:
%ql=getelementptr inbounds i8,i8*%t,i64 8
%qm=bitcast i8*%ql to i8**
%qn=load i8*,i8**%qm,align 8
store i8*%qn,i8**%g,align 8
%qo=bitcast i8*%qn to i32*
%qp=load i32,i32*%qo,align 4
switch i32%qp,label%qq[
i32 5,label%ta
i32 2,label%sR
i32 6,label%sy
i32 3,label%sf
i32 0,label%rW
i32 1,label%rD
i32 7,label%rk
i32 4,label%q1
i32 8,label%qI
]
qq:
call void@sml_matchcomp_bug()
%qr=load i8*,i8**@_SMLZ5Match,align 8
store i8*%qr,i8**%g,align 8
%qs=call i8*@sml_alloc(i32 inreg 20)#0
%qt=getelementptr inbounds i8,i8*%qs,i64 -4
%qu=bitcast i8*%qt to i32*
store i32 1342177296,i32*%qu,align 4
store i8*%qs,i8**%h,align 8
%qv=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qw=bitcast i8*%qs to i8**
store i8*%qv,i8**%qw,align 8
%qx=getelementptr inbounds i8,i8*%qs,i64 8
%qy=bitcast i8*%qx to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hB,i64 0,i32 2,i64 0),i8**%qy,align 8
%qz=getelementptr inbounds i8,i8*%qs,i64 16
%qA=bitcast i8*%qz to i32*
store i32 3,i32*%qA,align 4
%qB=call i8*@sml_alloc(i32 inreg 60)#0
%qC=getelementptr inbounds i8,i8*%qB,i64 -4
%qD=bitcast i8*%qC to i32*
store i32 1342177336,i32*%qD,align 4
%qE=getelementptr inbounds i8,i8*%qB,i64 56
%qF=bitcast i8*%qE to i32*
store i32 1,i32*%qF,align 4
%qG=load i8*,i8**%h,align 8
%qH=bitcast i8*%qB to i8**
store i8*%qG,i8**%qH,align 8
call void@sml_raise(i8*inreg%qB)#1
unreachable
qI:
%qJ=call i8*@sml_alloc(i32 inreg 12)#0
%qK=getelementptr inbounds i8,i8*%qJ,i64 -4
%qL=bitcast i8*%qK to i32*
store i32 1342177288,i32*%qL,align 4
store i8*%qJ,i8**%h,align 8
%qM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qN=bitcast i8*%qJ to i8**
store i8*%qM,i8**%qN,align 8
%qO=getelementptr inbounds i8,i8*%qJ,i64 8
%qP=bitcast i8*%qO to i32*
store i32 1,i32*%qP,align 4
%qQ=call i8*@sml_alloc(i32 inreg 28)#0
%qR=getelementptr inbounds i8,i8*%qQ,i64 -4
%qS=bitcast i8*%qR to i32*
store i32 1342177304,i32*%qS,align 4
%qT=load i8*,i8**%h,align 8
%qU=bitcast i8*%qQ to i8**
store i8*%qT,i8**%qU,align 8
%qV=getelementptr inbounds i8,i8*%qQ,i64 8
%qW=bitcast i8*%qV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1952 to void(...)*),void(...)**%qW,align 8
%qX=getelementptr inbounds i8,i8*%qQ,i64 16
%qY=bitcast i8*%qX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1952 to void(...)*),void(...)**%qY,align 8
%qZ=getelementptr inbounds i8,i8*%qQ,i64 24
%q0=bitcast i8*%qZ to i32*
store i32 -2147483647,i32*%q0,align 4
ret i8*%qQ
q1:
%q2=call i8*@sml_alloc(i32 inreg 12)#0
%q3=getelementptr inbounds i8,i8*%q2,i64 -4
%q4=bitcast i8*%q3 to i32*
store i32 1342177288,i32*%q4,align 4
store i8*%q2,i8**%h,align 8
%q5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%q6=bitcast i8*%q2 to i8**
store i8*%q5,i8**%q6,align 8
%q7=getelementptr inbounds i8,i8*%q2,i64 8
%q8=bitcast i8*%q7 to i32*
store i32 1,i32*%q8,align 4
%q9=call i8*@sml_alloc(i32 inreg 28)#0
%ra=getelementptr inbounds i8,i8*%q9,i64 -4
%rb=bitcast i8*%ra to i32*
store i32 1342177304,i32*%rb,align 4
%rc=load i8*,i8**%h,align 8
%rd=bitcast i8*%q9 to i8**
store i8*%rc,i8**%rd,align 8
%re=getelementptr inbounds i8,i8*%q9,i64 8
%rf=bitcast i8*%re to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1948 to void(...)*),void(...)**%rf,align 8
%rg=getelementptr inbounds i8,i8*%q9,i64 16
%rh=bitcast i8*%rg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1948 to void(...)*),void(...)**%rh,align 8
%ri=getelementptr inbounds i8,i8*%q9,i64 24
%rj=bitcast i8*%ri to i32*
store i32 -2147483647,i32*%rj,align 4
ret i8*%q9
rk:
%rl=call i8*@sml_alloc(i32 inreg 12)#0
%rm=getelementptr inbounds i8,i8*%rl,i64 -4
%rn=bitcast i8*%rm to i32*
store i32 1342177288,i32*%rn,align 4
store i8*%rl,i8**%h,align 8
%ro=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rp=bitcast i8*%rl to i8**
store i8*%ro,i8**%rp,align 8
%rq=getelementptr inbounds i8,i8*%rl,i64 8
%rr=bitcast i8*%rq to i32*
store i32 1,i32*%rr,align 4
%rs=call i8*@sml_alloc(i32 inreg 28)#0
%rt=getelementptr inbounds i8,i8*%rs,i64 -4
%ru=bitcast i8*%rt to i32*
store i32 1342177304,i32*%ru,align 4
%rv=load i8*,i8**%h,align 8
%rw=bitcast i8*%rs to i8**
store i8*%rv,i8**%rw,align 8
%rx=getelementptr inbounds i8,i8*%rs,i64 8
%ry=bitcast i8*%rx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1940 to void(...)*),void(...)**%ry,align 8
%rz=getelementptr inbounds i8,i8*%rs,i64 16
%rA=bitcast i8*%rz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1940 to void(...)*),void(...)**%rA,align 8
%rB=getelementptr inbounds i8,i8*%rs,i64 24
%rC=bitcast i8*%rB to i32*
store i32 -2147483647,i32*%rC,align 4
ret i8*%rs
rD:
%rE=call i8*@sml_alloc(i32 inreg 12)#0
%rF=getelementptr inbounds i8,i8*%rE,i64 -4
%rG=bitcast i8*%rF to i32*
store i32 1342177288,i32*%rG,align 4
store i8*%rE,i8**%h,align 8
%rH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rI=bitcast i8*%rE to i8**
store i8*%rH,i8**%rI,align 8
%rJ=getelementptr inbounds i8,i8*%rE,i64 8
%rK=bitcast i8*%rJ to i32*
store i32 1,i32*%rK,align 4
%rL=call i8*@sml_alloc(i32 inreg 28)#0
%rM=getelementptr inbounds i8,i8*%rL,i64 -4
%rN=bitcast i8*%rM to i32*
store i32 1342177304,i32*%rN,align 4
%rO=load i8*,i8**%h,align 8
%rP=bitcast i8*%rL to i8**
store i8*%rO,i8**%rP,align 8
%rQ=getelementptr inbounds i8,i8*%rL,i64 8
%rR=bitcast i8*%rQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1934 to void(...)*),void(...)**%rR,align 8
%rS=getelementptr inbounds i8,i8*%rL,i64 16
%rT=bitcast i8*%rS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1934 to void(...)*),void(...)**%rT,align 8
%rU=getelementptr inbounds i8,i8*%rL,i64 24
%rV=bitcast i8*%rU to i32*
store i32 -2147483647,i32*%rV,align 4
ret i8*%rL
rW:
%rX=call i8*@sml_alloc(i32 inreg 12)#0
%rY=getelementptr inbounds i8,i8*%rX,i64 -4
%rZ=bitcast i8*%rY to i32*
store i32 1342177288,i32*%rZ,align 4
store i8*%rX,i8**%h,align 8
%r0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%r1=bitcast i8*%rX to i8**
store i8*%r0,i8**%r1,align 8
%r2=getelementptr inbounds i8,i8*%rX,i64 8
%r3=bitcast i8*%r2 to i32*
store i32 1,i32*%r3,align 4
%r4=call i8*@sml_alloc(i32 inreg 28)#0
%r5=getelementptr inbounds i8,i8*%r4,i64 -4
%r6=bitcast i8*%r5 to i32*
store i32 1342177304,i32*%r6,align 4
%r7=load i8*,i8**%h,align 8
%r8=bitcast i8*%r4 to i8**
store i8*%r7,i8**%r8,align 8
%r9=getelementptr inbounds i8,i8*%r4,i64 8
%sa=bitcast i8*%r9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1926 to void(...)*),void(...)**%sa,align 8
%sb=getelementptr inbounds i8,i8*%r4,i64 16
%sc=bitcast i8*%sb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1926 to void(...)*),void(...)**%sc,align 8
%sd=getelementptr inbounds i8,i8*%r4,i64 24
%se=bitcast i8*%sd to i32*
store i32 -2147483647,i32*%se,align 4
ret i8*%r4
sf:
%sg=call i8*@sml_alloc(i32 inreg 12)#0
%sh=getelementptr inbounds i8,i8*%sg,i64 -4
%si=bitcast i8*%sh to i32*
store i32 1342177288,i32*%si,align 4
store i8*%sg,i8**%h,align 8
%sj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sk=bitcast i8*%sg to i8**
store i8*%sj,i8**%sk,align 8
%sl=getelementptr inbounds i8,i8*%sg,i64 8
%sm=bitcast i8*%sl to i32*
store i32 1,i32*%sm,align 4
%sn=call i8*@sml_alloc(i32 inreg 28)#0
%so=getelementptr inbounds i8,i8*%sn,i64 -4
%sp=bitcast i8*%so to i32*
store i32 1342177304,i32*%sp,align 4
%sq=load i8*,i8**%h,align 8
%sr=bitcast i8*%sn to i8**
store i8*%sq,i8**%sr,align 8
%ss=getelementptr inbounds i8,i8*%sn,i64 8
%st=bitcast i8*%ss to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1920 to void(...)*),void(...)**%st,align 8
%su=getelementptr inbounds i8,i8*%sn,i64 16
%sv=bitcast i8*%su to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1920 to void(...)*),void(...)**%sv,align 8
%sw=getelementptr inbounds i8,i8*%sn,i64 24
%sx=bitcast i8*%sw to i32*
store i32 -2147483647,i32*%sx,align 4
ret i8*%sn
sy:
%sz=call i8*@sml_alloc(i32 inreg 12)#0
%sA=getelementptr inbounds i8,i8*%sz,i64 -4
%sB=bitcast i8*%sA to i32*
store i32 1342177288,i32*%sB,align 4
store i8*%sz,i8**%h,align 8
%sC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sD=bitcast i8*%sz to i8**
store i8*%sC,i8**%sD,align 8
%sE=getelementptr inbounds i8,i8*%sz,i64 8
%sF=bitcast i8*%sE to i32*
store i32 1,i32*%sF,align 4
%sG=call i8*@sml_alloc(i32 inreg 28)#0
%sH=getelementptr inbounds i8,i8*%sG,i64 -4
%sI=bitcast i8*%sH to i32*
store i32 1342177304,i32*%sI,align 4
%sJ=load i8*,i8**%h,align 8
%sK=bitcast i8*%sG to i8**
store i8*%sJ,i8**%sK,align 8
%sL=getelementptr inbounds i8,i8*%sG,i64 8
%sM=bitcast i8*%sL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1912 to void(...)*),void(...)**%sM,align 8
%sN=getelementptr inbounds i8,i8*%sG,i64 16
%sO=bitcast i8*%sN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1912 to void(...)*),void(...)**%sO,align 8
%sP=getelementptr inbounds i8,i8*%sG,i64 24
%sQ=bitcast i8*%sP to i32*
store i32 -2147483647,i32*%sQ,align 4
ret i8*%sG
sR:
%sS=call i8*@sml_alloc(i32 inreg 12)#0
%sT=getelementptr inbounds i8,i8*%sS,i64 -4
%sU=bitcast i8*%sT to i32*
store i32 1342177288,i32*%sU,align 4
store i8*%sS,i8**%h,align 8
%sV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sW=bitcast i8*%sS to i8**
store i8*%sV,i8**%sW,align 8
%sX=getelementptr inbounds i8,i8*%sS,i64 8
%sY=bitcast i8*%sX to i32*
store i32 1,i32*%sY,align 4
%sZ=call i8*@sml_alloc(i32 inreg 28)#0
%s0=getelementptr inbounds i8,i8*%sZ,i64 -4
%s1=bitcast i8*%s0 to i32*
store i32 1342177304,i32*%s1,align 4
%s2=load i8*,i8**%h,align 8
%s3=bitcast i8*%sZ to i8**
store i8*%s2,i8**%s3,align 8
%s4=getelementptr inbounds i8,i8*%sZ,i64 8
%s5=bitcast i8*%s4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1906 to void(...)*),void(...)**%s5,align 8
%s6=getelementptr inbounds i8,i8*%sZ,i64 16
%s7=bitcast i8*%s6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1906 to void(...)*),void(...)**%s7,align 8
%s8=getelementptr inbounds i8,i8*%sZ,i64 24
%s9=bitcast i8*%s8 to i32*
store i32 -2147483647,i32*%s9,align 4
ret i8*%sZ
ta:
%tb=call i8*@sml_alloc(i32 inreg 12)#0
%tc=getelementptr inbounds i8,i8*%tb,i64 -4
%td=bitcast i8*%tc to i32*
store i32 1342177288,i32*%td,align 4
store i8*%tb,i8**%h,align 8
%te=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tf=bitcast i8*%tb to i8**
store i8*%te,i8**%tf,align 8
%tg=getelementptr inbounds i8,i8*%tb,i64 8
%th=bitcast i8*%tg to i32*
store i32 1,i32*%th,align 4
%ti=call i8*@sml_alloc(i32 inreg 28)#0
%tj=getelementptr inbounds i8,i8*%ti,i64 -4
%tk=bitcast i8*%tj to i32*
store i32 1342177304,i32*%tk,align 4
%tl=load i8*,i8**%h,align 8
%tm=bitcast i8*%ti to i8**
store i8*%tl,i8**%tm,align 8
%tn=getelementptr inbounds i8,i8*%ti,i64 8
%to=bitcast i8*%tn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1904 to void(...)*),void(...)**%to,align 8
%tp=getelementptr inbounds i8,i8*%ti,i64 16
%tq=bitcast i8*%tp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1904 to void(...)*),void(...)**%tq,align 8
%tr=getelementptr inbounds i8,i8*%ti,i64 24
%ts=bitcast i8*%tr to i32*
store i32 -2147483647,i32*%ts,align 4
ret i8*%ti
tt:
%tu=getelementptr inbounds i8,i8*%t,i64 8
%tv=bitcast i8*%tu to i8**
%tw=load i8*,i8**%tv,align 8
store i8*%tw,i8**%g,align 8
%tx=call i8*@sml_alloc(i32 inreg 12)#0
%ty=getelementptr inbounds i8,i8*%tx,i64 -4
%tz=bitcast i8*%ty to i32*
store i32 1342177288,i32*%tz,align 4
store i8*%tx,i8**%h,align 8
%tA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tB=bitcast i8*%tx to i8**
store i8*%tA,i8**%tB,align 8
%tC=getelementptr inbounds i8,i8*%tx,i64 8
%tD=bitcast i8*%tC to i32*
store i32 1,i32*%tD,align 4
%tE=call i8*@sml_alloc(i32 inreg 28)#0
%tF=getelementptr inbounds i8,i8*%tE,i64 -4
%tG=bitcast i8*%tF to i32*
store i32 1342177304,i32*%tG,align 4
%tH=load i8*,i8**%h,align 8
%tI=bitcast i8*%tE to i8**
store i8*%tH,i8**%tI,align 8
%tJ=getelementptr inbounds i8,i8*%tE,i64 8
%tK=bitcast i8*%tJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1900 to void(...)*),void(...)**%tK,align 8
%tL=getelementptr inbounds i8,i8*%tE,i64 16
%tM=bitcast i8*%tL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1900 to void(...)*),void(...)**%tM,align 8
%tN=getelementptr inbounds i8,i8*%tE,i64 24
%tO=bitcast i8*%tN to i32*
store i32 -2147483647,i32*%tO,align 4
ret i8*%tE
tP:
%tQ=getelementptr inbounds i8,i8*%t,i64 8
%tR=bitcast i8*%tQ to i8**
%tS=load i8*,i8**%tR,align 8
store i8*%tS,i8**%g,align 8
%tT=call i8*@sml_alloc(i32 inreg 12)#0
%tU=getelementptr inbounds i8,i8*%tT,i64 -4
%tV=bitcast i8*%tU to i32*
store i32 1342177288,i32*%tV,align 4
store i8*%tT,i8**%h,align 8
%tW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tX=bitcast i8*%tT to i8**
store i8*%tW,i8**%tX,align 8
%tY=getelementptr inbounds i8,i8*%tT,i64 8
%tZ=bitcast i8*%tY to i32*
store i32 1,i32*%tZ,align 4
%t0=call i8*@sml_alloc(i32 inreg 28)#0
%t1=getelementptr inbounds i8,i8*%t0,i64 -4
%t2=bitcast i8*%t1 to i32*
store i32 1342177304,i32*%t2,align 4
%t3=load i8*,i8**%h,align 8
%t4=bitcast i8*%t0 to i8**
store i8*%t3,i8**%t4,align 8
%t5=getelementptr inbounds i8,i8*%t0,i64 8
%t6=bitcast i8*%t5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1897 to void(...)*),void(...)**%t6,align 8
%t7=getelementptr inbounds i8,i8*%t0,i64 16
%t8=bitcast i8*%t7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1897 to void(...)*),void(...)**%t8,align 8
%t9=getelementptr inbounds i8,i8*%t0,i64 24
%ua=bitcast i8*%t9 to i32*
store i32 -2147483647,i32*%ua,align 4
ret i8*%t0
ub:
%uc=getelementptr inbounds i8,i8*%t,i64 8
%ud=bitcast i8*%uc to i8**
%ue=load i8*,i8**%ud,align 8
store i8*%ue,i8**%g,align 8
%uf=call i8*@sml_alloc(i32 inreg 12)#0
%ug=getelementptr inbounds i8,i8*%uf,i64 -4
%uh=bitcast i8*%ug to i32*
store i32 1342177288,i32*%uh,align 4
store i8*%uf,i8**%h,align 8
%ui=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uj=bitcast i8*%uf to i8**
store i8*%ui,i8**%uj,align 8
%uk=getelementptr inbounds i8,i8*%uf,i64 8
%ul=bitcast i8*%uk to i32*
store i32 1,i32*%ul,align 4
%um=call i8*@sml_alloc(i32 inreg 28)#0
%un=getelementptr inbounds i8,i8*%um,i64 -4
%uo=bitcast i8*%un to i32*
store i32 1342177304,i32*%uo,align 4
%up=load i8*,i8**%h,align 8
%uq=bitcast i8*%um to i8**
store i8*%up,i8**%uq,align 8
%ur=getelementptr inbounds i8,i8*%um,i64 8
%us=bitcast i8*%ur to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1895 to void(...)*),void(...)**%us,align 8
%ut=getelementptr inbounds i8,i8*%um,i64 16
%uu=bitcast i8*%ut to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1895 to void(...)*),void(...)**%uu,align 8
%uv=getelementptr inbounds i8,i8*%um,i64 24
%uw=bitcast i8*%uv to i32*
store i32 -2147483647,i32*%uw,align 4
ret i8*%um
ux:
%uy=getelementptr inbounds i8,i8*%t,i64 8
%uz=bitcast i8*%uy to i8**
%uA=load i8*,i8**%uz,align 8
store i8*%uA,i8**%g,align 8
%uB=bitcast i8*%uA to i8**
%uC=load i8*,i8**%uB,align 8
%uD=bitcast i8*%uC to i32*
%uE=load i32,i32*%uD,align 4
switch i32%uE,label%uF[
i32 2,label%xb
i32 5,label%wJ
i32 4,label%wh
i32 3,label%vP
i32 1,label%vq
i32 0,label%uX
]
uF:
call void@sml_matchcomp_bug()
%uG=load i8*,i8**@_SMLZ5Match,align 8
store i8*%uG,i8**%g,align 8
%uH=call i8*@sml_alloc(i32 inreg 20)#0
%uI=getelementptr inbounds i8,i8*%uH,i64 -4
%uJ=bitcast i8*%uI to i32*
store i32 1342177296,i32*%uJ,align 4
store i8*%uH,i8**%h,align 8
%uK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uL=bitcast i8*%uH to i8**
store i8*%uK,i8**%uL,align 8
%uM=getelementptr inbounds i8,i8*%uH,i64 8
%uN=bitcast i8*%uM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hB,i64 0,i32 2,i64 0),i8**%uN,align 8
%uO=getelementptr inbounds i8,i8*%uH,i64 16
%uP=bitcast i8*%uO to i32*
store i32 3,i32*%uP,align 4
%uQ=call i8*@sml_alloc(i32 inreg 60)#0
%uR=getelementptr inbounds i8,i8*%uQ,i64 -4
%uS=bitcast i8*%uR to i32*
store i32 1342177336,i32*%uS,align 4
%uT=getelementptr inbounds i8,i8*%uQ,i64 56
%uU=bitcast i8*%uT to i32*
store i32 1,i32*%uU,align 4
%uV=load i8*,i8**%h,align 8
%uW=bitcast i8*%uQ to i8**
store i8*%uV,i8**%uW,align 8
call void@sml_raise(i8*inreg%uQ)#1
unreachable
uX:
%uY=getelementptr inbounds i8,i8*%uC,i64 4
%uZ=bitcast i8*%uY to i32*
%u0=load i32,i32*%uZ,align 4
%u1=icmp eq i32%u0,0
%u2=call i8*@sml_alloc(i32 inreg 12)#0
%u3=getelementptr inbounds i8,i8*%u2,i64 -4
%u4=bitcast i8*%u3 to i32*
store i32 1342177288,i32*%u4,align 4
store i8*%u2,i8**%h,align 8
%u5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%u6=bitcast i8*%u2 to i8**
store i8*%u5,i8**%u6,align 8
%u7=getelementptr inbounds i8,i8*%u2,i64 8
%u8=bitcast i8*%u7 to i32*
store i32 1,i32*%u8,align 4
%u9=call i8*@sml_alloc(i32 inreg 28)#0
%va=getelementptr inbounds i8,i8*%u9,i64 -4
%vb=bitcast i8*%va to i32*
store i32 1342177304,i32*%vb,align 4
%vc=load i8*,i8**%h,align 8
%vd=bitcast i8*%u9 to i8**
store i8*%vc,i8**%vd,align 8
%ve=getelementptr inbounds i8,i8*%u9,i64 8
%vf=bitcast i8*%ve to void(...)**
br i1%u1,label%vl,label%vg
vg:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1892 to void(...)*),void(...)**%vf,align 8
%vh=getelementptr inbounds i8,i8*%u9,i64 16
%vi=bitcast i8*%vh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1892 to void(...)*),void(...)**%vi,align 8
%vj=getelementptr inbounds i8,i8*%u9,i64 24
%vk=bitcast i8*%vj to i32*
store i32 -2147483647,i32*%vk,align 4
ret i8*%u9
vl:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1890 to void(...)*),void(...)**%vf,align 8
%vm=getelementptr inbounds i8,i8*%u9,i64 16
%vn=bitcast i8*%vm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1890 to void(...)*),void(...)**%vn,align 8
%vo=getelementptr inbounds i8,i8*%u9,i64 24
%vp=bitcast i8*%vo to i32*
store i32 -2147483647,i32*%vp,align 4
ret i8*%u9
vq:
%vr=getelementptr inbounds i8,i8*%uC,i64 4
%vs=load i8,i8*%vr,align 1
%vt=getelementptr inbounds i8,i8*%uA,i64 8
%vu=bitcast i8*%vt to i8**
%vv=load i8*,i8**%vu,align 8
store i8*%vv,i8**%g,align 8
%vw=call i8*@sml_alloc(i32 inreg 20)#0
%vx=getelementptr inbounds i8,i8*%vw,i64 -4
%vy=bitcast i8*%vx to i32*
store i32 1342177296,i32*%vy,align 4
store i8*%vw,i8**%h,align 8
%vz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%vA=bitcast i8*%vw to i8**
store i8*%vz,i8**%vA,align 8
%vB=getelementptr inbounds i8,i8*%vw,i64 8
store i8%vs,i8*%vB,align 1
%vC=getelementptr inbounds i8,i8*%vw,i64 16
%vD=bitcast i8*%vC to i32*
store i32 1,i32*%vD,align 4
%vE=call i8*@sml_alloc(i32 inreg 28)#0
%vF=getelementptr inbounds i8,i8*%vE,i64 -4
%vG=bitcast i8*%vF to i32*
store i32 1342177304,i32*%vG,align 4
%vH=load i8*,i8**%h,align 8
%vI=bitcast i8*%vE to i8**
store i8*%vH,i8**%vI,align 8
%vJ=getelementptr inbounds i8,i8*%vE,i64 8
%vK=bitcast i8*%vJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1888 to void(...)*),void(...)**%vK,align 8
%vL=getelementptr inbounds i8,i8*%vE,i64 16
%vM=bitcast i8*%vL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1888 to void(...)*),void(...)**%vM,align 8
%vN=getelementptr inbounds i8,i8*%vE,i64 24
%vO=bitcast i8*%vN to i32*
store i32 -2147483647,i32*%vO,align 4
ret i8*%vE
vP:
%vQ=getelementptr inbounds i8,i8*%uC,i64 8
%vR=bitcast i8*%vQ to i8**
%vS=load i8*,i8**%vR,align 8
store i8*%vS,i8**%h,align 8
%vT=getelementptr inbounds i8,i8*%uA,i64 8
%vU=bitcast i8*%vT to i8**
%vV=load i8*,i8**%vU,align 8
store i8*%vV,i8**%g,align 8
%vW=call i8*@sml_alloc(i32 inreg 20)#0
%vX=getelementptr inbounds i8,i8*%vW,i64 -4
%vY=bitcast i8*%vX to i32*
store i32 1342177296,i32*%vY,align 4
store i8*%vW,i8**%i,align 8
%vZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%v0=bitcast i8*%vW to i8**
store i8*%vZ,i8**%v0,align 8
%v1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%v2=getelementptr inbounds i8,i8*%vW,i64 8
%v3=bitcast i8*%v2 to i8**
store i8*%v1,i8**%v3,align 8
%v4=getelementptr inbounds i8,i8*%vW,i64 16
%v5=bitcast i8*%v4 to i32*
store i32 3,i32*%v5,align 4
%v6=call i8*@sml_alloc(i32 inreg 28)#0
%v7=getelementptr inbounds i8,i8*%v6,i64 -4
%v8=bitcast i8*%v7 to i32*
store i32 1342177304,i32*%v8,align 4
%v9=load i8*,i8**%i,align 8
%wa=bitcast i8*%v6 to i8**
store i8*%v9,i8**%wa,align 8
%wb=getelementptr inbounds i8,i8*%v6,i64 8
%wc=bitcast i8*%wb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1886 to void(...)*),void(...)**%wc,align 8
%wd=getelementptr inbounds i8,i8*%v6,i64 16
%we=bitcast i8*%wd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1886 to void(...)*),void(...)**%we,align 8
%wf=getelementptr inbounds i8,i8*%v6,i64 24
%wg=bitcast i8*%wf to i32*
store i32 -2147483647,i32*%wg,align 4
ret i8*%v6
wh:
%wi=getelementptr inbounds i8,i8*%uC,i64 8
%wj=bitcast i8*%wi to i8**
%wk=load i8*,i8**%wj,align 8
store i8*%wk,i8**%h,align 8
%wl=getelementptr inbounds i8,i8*%uA,i64 8
%wm=bitcast i8*%wl to i8**
%wn=load i8*,i8**%wm,align 8
store i8*%wn,i8**%g,align 8
%wo=call i8*@sml_alloc(i32 inreg 20)#0
%wp=getelementptr inbounds i8,i8*%wo,i64 -4
%wq=bitcast i8*%wp to i32*
store i32 1342177296,i32*%wq,align 4
store i8*%wo,i8**%i,align 8
%wr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ws=bitcast i8*%wo to i8**
store i8*%wr,i8**%ws,align 8
%wt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wu=getelementptr inbounds i8,i8*%wo,i64 8
%wv=bitcast i8*%wu to i8**
store i8*%wt,i8**%wv,align 8
%ww=getelementptr inbounds i8,i8*%wo,i64 16
%wx=bitcast i8*%ww to i32*
store i32 3,i32*%wx,align 4
%wy=call i8*@sml_alloc(i32 inreg 28)#0
%wz=getelementptr inbounds i8,i8*%wy,i64 -4
%wA=bitcast i8*%wz to i32*
store i32 1342177304,i32*%wA,align 4
%wB=load i8*,i8**%i,align 8
%wC=bitcast i8*%wy to i8**
store i8*%wB,i8**%wC,align 8
%wD=getelementptr inbounds i8,i8*%wy,i64 8
%wE=bitcast i8*%wD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1884 to void(...)*),void(...)**%wE,align 8
%wF=getelementptr inbounds i8,i8*%wy,i64 16
%wG=bitcast i8*%wF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1884 to void(...)*),void(...)**%wG,align 8
%wH=getelementptr inbounds i8,i8*%wy,i64 24
%wI=bitcast i8*%wH to i32*
store i32 -2147483647,i32*%wI,align 4
ret i8*%wy
wJ:
%wK=getelementptr inbounds i8,i8*%uC,i64 8
%wL=bitcast i8*%wK to i8**
%wM=load i8*,i8**%wL,align 8
store i8*%wM,i8**%h,align 8
%wN=getelementptr inbounds i8,i8*%uA,i64 8
%wO=bitcast i8*%wN to i8**
%wP=load i8*,i8**%wO,align 8
store i8*%wP,i8**%g,align 8
%wQ=call i8*@sml_alloc(i32 inreg 20)#0
%wR=getelementptr inbounds i8,i8*%wQ,i64 -4
%wS=bitcast i8*%wR to i32*
store i32 1342177296,i32*%wS,align 4
store i8*%wQ,i8**%i,align 8
%wT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%wU=bitcast i8*%wQ to i8**
store i8*%wT,i8**%wU,align 8
%wV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wW=getelementptr inbounds i8,i8*%wQ,i64 8
%wX=bitcast i8*%wW to i8**
store i8*%wV,i8**%wX,align 8
%wY=getelementptr inbounds i8,i8*%wQ,i64 16
%wZ=bitcast i8*%wY to i32*
store i32 3,i32*%wZ,align 4
%w0=call i8*@sml_alloc(i32 inreg 28)#0
%w1=getelementptr inbounds i8,i8*%w0,i64 -4
%w2=bitcast i8*%w1 to i32*
store i32 1342177304,i32*%w2,align 4
%w3=load i8*,i8**%i,align 8
%w4=bitcast i8*%w0 to i8**
store i8*%w3,i8**%w4,align 8
%w5=getelementptr inbounds i8,i8*%w0,i64 8
%w6=bitcast i8*%w5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1882 to void(...)*),void(...)**%w6,align 8
%w7=getelementptr inbounds i8,i8*%w0,i64 16
%w8=bitcast i8*%w7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1882 to void(...)*),void(...)**%w8,align 8
%w9=getelementptr inbounds i8,i8*%w0,i64 24
%xa=bitcast i8*%w9 to i32*
store i32 -2147483647,i32*%xa,align 4
ret i8*%w0
xb:
%xc=getelementptr inbounds i8,i8*%uC,i64 8
%xd=bitcast i8*%xc to i8**
%xe=load i8*,i8**%xd,align 8
store i8*%xe,i8**%h,align 8
%xf=getelementptr inbounds i8,i8*%uA,i64 8
%xg=bitcast i8*%xf to i8**
%xh=load i8*,i8**%xg,align 8
store i8*%xh,i8**%g,align 8
%xi=call i8*@sml_alloc(i32 inreg 20)#0
%xj=getelementptr inbounds i8,i8*%xi,i64 -4
%xk=bitcast i8*%xj to i32*
store i32 1342177296,i32*%xk,align 4
store i8*%xi,i8**%i,align 8
%xl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%xm=bitcast i8*%xi to i8**
store i8*%xl,i8**%xm,align 8
%xn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xo=getelementptr inbounds i8,i8*%xi,i64 8
%xp=bitcast i8*%xo to i8**
store i8*%xn,i8**%xp,align 8
%xq=getelementptr inbounds i8,i8*%xi,i64 16
%xr=bitcast i8*%xq to i32*
store i32 3,i32*%xr,align 4
%xs=call i8*@sml_alloc(i32 inreg 28)#0
%xt=getelementptr inbounds i8,i8*%xs,i64 -4
%xu=bitcast i8*%xt to i32*
store i32 1342177304,i32*%xu,align 4
%xv=load i8*,i8**%i,align 8
%xw=bitcast i8*%xs to i8**
store i8*%xv,i8**%xw,align 8
%xx=getelementptr inbounds i8,i8*%xs,i64 8
%xy=bitcast i8*%xx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1880 to void(...)*),void(...)**%xy,align 8
%xz=getelementptr inbounds i8,i8*%xs,i64 16
%xA=bitcast i8*%xz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1880 to void(...)*),void(...)**%xA,align 8
%xB=getelementptr inbounds i8,i8*%xs,i64 24
%xC=bitcast i8*%xB to i32*
store i32 -2147483647,i32*%xC,align 4
ret i8*%xs
xD:
%xE=getelementptr inbounds i8,i8*%t,i64 8
%xF=bitcast i8*%xE to i8**
%xG=load i8*,i8**%xF,align 8
store i8*%xG,i8**%g,align 8
%xH=getelementptr inbounds i8,i8*%xG,i64 8
%xI=bitcast i8*%xH to i32*
%xJ=load i32,i32*%xI,align 4
%xK=icmp eq i32%xJ,7
%xL=call i8*@sml_alloc(i32 inreg 12)#0
%xM=getelementptr inbounds i8,i8*%xL,i64 -4
%xN=bitcast i8*%xM to i32*
store i32 1342177288,i32*%xN,align 4
store i8*%xL,i8**%h,align 8
%xO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xP=bitcast i8*%xL to i8**
store i8*%xO,i8**%xP,align 8
%xQ=getelementptr inbounds i8,i8*%xL,i64 8
%xR=bitcast i8*%xQ to i32*
store i32 1,i32*%xR,align 4
%xS=call i8*@sml_alloc(i32 inreg 28)#0
%xT=getelementptr inbounds i8,i8*%xS,i64 -4
%xU=bitcast i8*%xT to i32*
store i32 1342177304,i32*%xU,align 4
%xV=load i8*,i8**%h,align 8
%xW=bitcast i8*%xS to i8**
store i8*%xV,i8**%xW,align 8
%xX=getelementptr inbounds i8,i8*%xS,i64 8
%xY=bitcast i8*%xX to void(...)**
br i1%xK,label%x4,label%xZ
xZ:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1878 to void(...)*),void(...)**%xY,align 8
%x0=getelementptr inbounds i8,i8*%xS,i64 16
%x1=bitcast i8*%x0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1878 to void(...)*),void(...)**%x1,align 8
%x2=getelementptr inbounds i8,i8*%xS,i64 24
%x3=bitcast i8*%x2 to i32*
store i32 -2147483647,i32*%x3,align 4
ret i8*%xS
x4:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1875 to void(...)*),void(...)**%xY,align 8
%x5=getelementptr inbounds i8,i8*%xS,i64 16
%x6=bitcast i8*%x5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1875 to void(...)*),void(...)**%x6,align 8
%x7=getelementptr inbounds i8,i8*%xS,i64 24
%x8=bitcast i8*%x7 to i32*
store i32 -2147483647,i32*%x8,align 4
ret i8*%xS
x9:
%ya=getelementptr inbounds i8,i8*%t,i64 8
%yb=bitcast i8*%ya to i8**
%yc=load i8*,i8**%yb,align 8
store i8*%yc,i8**%g,align 8
%yd=call i8*@sml_alloc(i32 inreg 12)#0
%ye=getelementptr inbounds i8,i8*%yd,i64 -4
%yf=bitcast i8*%ye to i32*
store i32 1342177288,i32*%yf,align 4
store i8*%yd,i8**%h,align 8
%yg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%yh=bitcast i8*%yd to i8**
store i8*%yg,i8**%yh,align 8
%yi=getelementptr inbounds i8,i8*%yd,i64 8
%yj=bitcast i8*%yi to i32*
store i32 1,i32*%yj,align 4
%yk=call i8*@sml_alloc(i32 inreg 28)#0
%yl=getelementptr inbounds i8,i8*%yk,i64 -4
%ym=bitcast i8*%yl to i32*
store i32 1342177304,i32*%ym,align 4
%yn=load i8*,i8**%h,align 8
%yo=bitcast i8*%yk to i8**
store i8*%yn,i8**%yo,align 8
%yp=getelementptr inbounds i8,i8*%yk,i64 8
%yq=bitcast i8*%yp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1870 to void(...)*),void(...)**%yq,align 8
%yr=getelementptr inbounds i8,i8*%yk,i64 16
%ys=bitcast i8*%yr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToToyE_1870 to void(...)*),void(...)**%ys,align 8
%yt=getelementptr inbounds i8,i8*%yk,i64 24
%yu=bitcast i8*%yt to i32*
store i32 -2147483647,i32*%yu,align 4
ret i8*%yk
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
br label%h
h:
%i=phi i8*[%dY,%dU],[%a,%j]
store i8*%i,i8**%d,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%i,%h]
%q=bitcast i8*%p to i32*
%r=load i32,i32*%q,align 4
switch i32%r,label%s[
i32 0,label%dZ
i32 1,label%dU
i32 3,label%dd
i32 2,label%K
]
s:
call void@sml_matchcomp_bug()
%t=load i8*,i8**@_SMLZ5Match,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@hI,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%e,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=getelementptr inbounds i8,i8*%p,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%f,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
switch i32%S,label%T[
i32 1,label%b1
i32 0,label%bm
i32 2,label%al
]
T:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%U=load i8*,i8**@_SMLZ5Match,align 8
store i8*%U,i8**%d,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%e,align 8
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@hI,i64 0,i32 2,i64 0),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 60)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177336,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 56
%ai=bitcast i8*%ah to i32*
store i32 1,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
%ak=bitcast i8*%ae to i8**
store i8*%aj,i8**%ak,align 8
call void@sml_raise(i8*inreg%ae)#1
unreachable
al:
store i8*null,i8**%d,align 8
%am=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%am)
%an=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%an)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hH,i64 0,i32 2)to i8*),i8**%b,align 8
%ao=call i8*@sml_alloc(i32 inreg 12)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177288,i32*%aq,align 4
store i8*%ao,i8**%c,align 8
%ar=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to i32*
store i32 1,i32*%au,align 4
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
%ay=load i8*,i8**%c,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__joinE_1295 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 16
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Fun__joinE_1295 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 24
%aF=bitcast i8*%aE to i32*
store i32 -2147483647,i32*%aF,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%am)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%an)
store i8*%ay,i8**%g,align 8
%aG=bitcast i8**%f to i8***
%aH=load i8**,i8***%aG,align 8
%aI=load i8*,i8**%aH,align 8
%aJ=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%aI)
store i8*%aJ,i8**%d,align 8
%aK=load i8*,i8**%f,align 8
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%aN)
store i8*%aO,i8**%e,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aP,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a0=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__joinE_1295(i8*inreg%aZ,i8*inreg%aP)
store i8*%a0,i8**%d,align 8
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
store i8*%a1,i8**%e,align 8
%a4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%a1,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a1,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
%be=load i8*,i8**%e,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2098 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2098 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 24
%bl=bitcast i8*%bk to i32*
store i32 -2147483647,i32*%bl,align 4
ret i8*%bb
bm:
%bn=bitcast i8*%N to i8**
store i8*null,i8**%d,align 8
%bo=load i8*,i8**%bn,align 8
%bp=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%bo)
store i8*%bp,i8**%d,align 8
%bq=load i8*,i8**%f,align 8
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8**
%bt=load i8*,i8**%bs,align 8
%bu=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%bt)
store i8*%bu,i8**%e,align 8
%bv=call i8*@sml_alloc(i32 inreg 20)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
%by=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bz=bitcast i8*%bv to i8**
store i8*%by,i8**%bz,align 8
%bA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bB=getelementptr inbounds i8,i8*%bv,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bv,i64 16
%bE=bitcast i8*%bD to i32*
store i32 3,i32*%bE,align 4
%bF=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1291(i8*inreg%bv)
store i8*%bF,i8**%d,align 8
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
store i8*%bG,i8**%e,align 8
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bG,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
%bQ=call i8*@sml_alloc(i32 inreg 28)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177304,i32*%bS,align 4
%bT=load i8*,i8**%e,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bQ,i64 8
%bW=bitcast i8*%bV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2095 to void(...)*),void(...)**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bQ,i64 16
%bY=bitcast i8*%bX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2095 to void(...)*),void(...)**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bQ,i64 24
%b0=bitcast i8*%bZ to i32*
store i32 -2147483647,i32*%b0,align 4
ret i8*%bQ
b1:
%b2=getelementptr inbounds i8,i8*%Q,i64 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%e,align 8
%b5=call i8*@sml_alloc(i32 inreg 20)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177296,i32*%b7,align 4
store i8*%b5,i8**%g,align 8
%b8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b9=bitcast i8*%b5 to i8**
store i8*%b8,i8**%b9,align 8
%ca=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cb=getelementptr inbounds i8,i8*%b5,i64 8
%cc=bitcast i8*%cb to i8**
store i8*%ca,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b5,i64 16
%ce=bitcast i8*%cd to i32*
store i32 3,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 28)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177304,i32*%ch,align 4
%ci=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cf,i64 8
%cl=bitcast i8*%ck to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2093 to void(...)*),void(...)**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cf,i64 16
%cn=bitcast i8*%cm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2093 to void(...)*),void(...)**%cn,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 24
%cp=bitcast i8*%co to i32*
store i32 -2147483647,i32*%cp,align 4
%cq=call fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1275(i8*inreg%cf)
%cr=getelementptr inbounds i8,i8*%cq,i64 16
%cs=bitcast i8*%cr to i8*(i8*,i8*)**
%ct=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cs,align 8
%cu=bitcast i8*%cq to i8**
%cv=load i8*,i8**%cu,align 8
store i8*%cv,i8**%g,align 8
%cw=bitcast i8**%f to i8***
%cx=load i8**,i8***%cw,align 8
%cy=load i8*,i8**%cx,align 8
%cz=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%cy)
store i8*%cz,i8**%d,align 8
%cA=load i8*,i8**%f,align 8
%cB=getelementptr inbounds i8,i8*%cA,i64 16
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
%cE=call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_1587(i8*inreg%cD)
store i8*%cE,i8**%e,align 8
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
%cI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cJ=bitcast i8*%cF to i8**
store i8*%cI,i8**%cJ,align 8
%cK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cL=getelementptr inbounds i8,i8*%cF,i64 8
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cF,i64 16
%cO=bitcast i8*%cN to i32*
store i32 3,i32*%cO,align 4
%cP=call fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1291(i8*inreg%cF)
%cQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cR=call fastcc i8*%ct(i8*inreg%cQ,i8*inreg%cP)
store i8*%cR,i8**%d,align 8
%cS=call i8*@sml_alloc(i32 inreg 20)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177296,i32*%cU,align 4
store i8*%cS,i8**%e,align 8
%cV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cY=getelementptr inbounds i8,i8*%cS,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cS,i64 16
%c1=bitcast i8*%c0 to i32*
store i32 3,i32*%c1,align 4
%c2=call i8*@sml_alloc(i32 inreg 28)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177304,i32*%c4,align 4
%c5=load i8*,i8**%e,align 8
%c6=bitcast i8*%c2 to i8**
store i8*%c5,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%c2,i64 8
%c8=bitcast i8*%c7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2094 to void(...)*),void(...)**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c2,i64 16
%da=bitcast i8*%c9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2094 to void(...)*),void(...)**%da,align 8
%db=getelementptr inbounds i8,i8*%c2,i64 24
%dc=bitcast i8*%db to i32*
store i32 -2147483647,i32*%dc,align 4
ret i8*%c2
dd:
%de=getelementptr inbounds i8,i8*%p,i64 8
%df=bitcast i8*%de to i8**
%dg=load i8*,i8**%df,align 8
store i8*%dg,i8**%d,align 8
%dh=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hF,i64 0,i32 2)to i8*))
%di=getelementptr inbounds i8,i8*%dh,i64 16
%dj=bitcast i8*%di to i8*(i8*,i8*)**
%dk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dj,align 8
%dl=bitcast i8*%dh to i8**
%dm=load i8*,i8**%dl,align 8
store i8*%dm,i8**%e,align 8
%dn=bitcast i8**%d to i8***
%do=load i8**,i8***%dn,align 8
%dp=load i8*,i8**%do,align 8
%dq=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%dp)
%dr=getelementptr inbounds i8,i8*%dq,i64 16
%ds=bitcast i8*%dr to i8*(i8*,i8*)**
%dt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ds,align 8
%du=bitcast i8*%dq to i8**
%dv=load i8*,i8**%du,align 8
%dw=call fastcc i8*%dt(i8*inreg%dv,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hG,i64 0,i32 2)to i8*))
%dx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dy=call fastcc i8*%dk(i8*inreg%dx,i8*inreg%dw)
store i8*%dy,i8**%e,align 8
%dz=call i8*@sml_alloc(i32 inreg 20)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177296,i32*%dB,align 4
store i8*%dz,i8**%f,align 8
%dC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dD=bitcast i8*%dz to i8**
store i8*%dC,i8**%dD,align 8
%dE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dF=getelementptr inbounds i8,i8*%dz,i64 8
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dz,i64 16
%dI=bitcast i8*%dH to i32*
store i32 3,i32*%dI,align 4
%dJ=call i8*@sml_alloc(i32 inreg 28)#0
%dK=getelementptr inbounds i8,i8*%dJ,i64 -4
%dL=bitcast i8*%dK to i32*
store i32 1342177304,i32*%dL,align 4
%dM=load i8*,i8**%f,align 8
%dN=bitcast i8*%dJ to i8**
store i8*%dM,i8**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dJ,i64 8
%dP=bitcast i8*%dO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2092 to void(...)*),void(...)**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dJ,i64 16
%dR=bitcast i8*%dQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2092 to void(...)*),void(...)**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dJ,i64 24
%dT=bitcast i8*%dS to i32*
store i32 -2147483647,i32*%dT,align 4
ret i8*%dJ
dU:
store i8*null,i8**%d,align 8
%dV=getelementptr inbounds i8,i8*%p,i64 8
%dW=bitcast i8*%dV to i8***
%dX=load i8**,i8***%dW,align 8
%dY=load i8*,i8**%dX,align 8
br label%h
dZ:
%d0=getelementptr inbounds i8,i8*%p,i64 8
%d1=bitcast i8*%d0 to i8**
%d2=load i8*,i8**%d1,align 8
store i8*%d2,i8**%d,align 8
%d3=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hE,i64 0,i32 2)to i8*))
%d4=getelementptr inbounds i8,i8*%d3,i64 16
%d5=bitcast i8*%d4 to i8*(i8*,i8*)**
%d6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d5,align 8
%d7=bitcast i8*%d3 to i8**
%d8=load i8*,i8**%d7,align 8
store i8*%d8,i8**%e,align 8
%d9=bitcast i8**%d to i8***
%ea=load i8**,i8***%d9,align 8
%eb=load i8*,i8**%ea,align 8
%ec=call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1584(i8*inreg%eb)
%ed=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ee=call fastcc i8*%d6(i8*inreg%ed,i8*inreg%ec)
store i8*%ee,i8**%e,align 8
%ef=call i8*@sml_alloc(i32 inreg 20)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177296,i32*%eh,align 4
store i8*%ef,i8**%f,align 8
%ei=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ej=bitcast i8*%ef to i8**
store i8*%ei,i8**%ej,align 8
%ek=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%el=getelementptr inbounds i8,i8*%ef,i64 8
%em=bitcast i8*%el to i8**
store i8*%ek,i8**%em,align 8
%en=getelementptr inbounds i8,i8*%ef,i64 16
%eo=bitcast i8*%en to i32*
store i32 3,i32*%eo,align 4
%ep=call i8*@sml_alloc(i32 inreg 28)#0
%eq=getelementptr inbounds i8,i8*%ep,i64 -4
%er=bitcast i8*%eq to i32*
store i32 1342177304,i32*%er,align 4
%es=load i8*,i8**%f,align 8
%et=bitcast i8*%ep to i8**
store i8*%es,i8**%et,align 8
%eu=getelementptr inbounds i8,i8*%ep,i64 8
%ev=bitcast i8*%eu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2087 to void(...)*),void(...)**%ev,align 8
%ew=getelementptr inbounds i8,i8*%ep,i64 16
%ex=bitcast i8*%ew to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10tableToToyE_2087 to void(...)*),void(...)**%ex,align 8
%ey=getelementptr inbounds i8,i8*%ep,i64 24
%ez=bitcast i8*%ey to i32*
store i32 -2147483647,i32*%ez,align 4
ret i8*%ep
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_1588(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=icmp eq i8*%h,null
br i1%j,label%k,label%l
k:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hJ,i64 0,i32 2)to i8*)
l:
%m=bitcast i8*%h to i8**
%n=load i8*,i8**%m,align 8
%o=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%n)
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2125(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dV,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2128(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dZ,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2131(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2135(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@en,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2138(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@er,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2141(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2291(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL1x_2292(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bE,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL1x_2294(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8***
%e=load i8**,i8***%d,align 8
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=bitcast i8*%g to i32*
%i=getelementptr inbounds i8,i8*%g,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
%k=getelementptr inbounds i8,i8*%g,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
store i32 25,i32*%h,align 4
%m=load i8*,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%g,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%g,i64 16
%q=bitcast i8*%p to i32*
store i32 2,i32*%q,align 4
ret i8*%g
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2295(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2296(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2297(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2298(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2299(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2300(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2301(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2302(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL1x_2303(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@y,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2306(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL1x_2307(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@t,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2310(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2312(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cr,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2315(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2316(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2317(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2319(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2321(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2323(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2325(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2327(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2329(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2331(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2333(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2334(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2336(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2337(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2339(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*null,i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2342(i8 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=icmp eq i8%a,39
br i1%f,label%j,label%g
g:
%h=tail call fastcc i8@_SMLFN4Char7toUpperE(i8 inreg%a)
%i=tail call fastcc i8*@_SMLFN6String3strE(i8 inreg%h)
ret i8*%i
j:
ret i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i64 0,i32 2,i64 0)
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2344(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2346(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2348(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*null,i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2351(i8 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=icmp eq i8%a,39
br i1%f,label%j,label%g
g:
%h=tail call fastcc i8@_SMLFN4Char7toUpperE(i8 inreg%a)
%i=tail call fastcc i8*@_SMLFN6String3strE(i8 inreg%h)
ret i8*%i
j:
ret i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i64 0,i32 2,i64 0)
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2353(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2355(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2356(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2358(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*null,i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2360(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2361(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2362(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2363(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2365(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2366(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%c to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%n)
store i8*%o,i8**%d,align 8
%p=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%t)
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%s,i8**%b,align 8
%u=load atomic i32,i32*@sml_check_flag unordered,align 4
%v=icmp eq i32%u,0
br i1%v,label%y,label%w
w:
call void@sml_check(i32 inreg%u)
%x=load i8*,i8**%b,align 8
br label%y
y:
%z=phi i8*[%x,%w],[%s,%l]
store i8*null,i8**%b,align 8
%A=icmp eq i8*%z,null
br i1%A,label%B,label%C
B:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%t)
br label%Q
C:
%D=bitcast i8*%z to i32*
%E=load i32,i32*%D,align 4
%F=icmp eq i32%E,0
%G=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
br i1%F,label%O,label%M
M:
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hS,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%t)
br label%Q
O:
%P=call fastcc i8*%J(i8*inreg%L,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hQ,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%t)
br label%Q
Q:
%R=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hT,i64 0,i32 2)to i8*),%B],[%N,%M],[%P,%O]
store i8*%R,i8**%c,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%d,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%c,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
ret i8*%S
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2368(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2369(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2370(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2371(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2370 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2370 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2372(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2374(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2375(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2376(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2377(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2376 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2376 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2378(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2380(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2381(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2382(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2383(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2384(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2386(i8*inreg%a)#2 gc"smlsharp"{
p:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%i,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%i,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q)
%r=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%r)
%s=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%s)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%o,i8**%f,align 8
%t=load atomic i32,i32*@sml_check_flag unordered,align 4
%u=icmp eq i32%t,0
br i1%u,label%x,label%v
v:
call void@sml_check(i32 inreg%t)
%w=load i8*,i8**%f,align 8
br label%x
x:
%y=phi i8*[%w,%v],[%o,%n]
store i8*null,i8**%f,align 8
store i8*%y,i8**%h,align 8
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iB,i64 0,i32 2)to i8*))
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%h,align 8
%M=getelementptr inbounds i8,i8*%L,i64 8
%N=bitcast i8*%M to i8***
%O=load i8**,i8***%N,align 8
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%I(i8*inreg%K,i8*inreg%P)
store i8*%Q,i8**%f,align 8
%R=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=call fastcc i8*%U(i8*inreg%W,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iC,i64 0,i32 2)to i8*))
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%h,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
%ah=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ag)
%ai=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%ah)
store i8*%ai,i8**%g,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
%am=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%at)
%au=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%au)
%av=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%av)
%aw=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aw)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%aj,i8**%b,align 8
%ax=load atomic i32,i32*@sml_check_flag unordered,align 4
%ay=icmp eq i32%ax,0
br i1%ay,label%aE,label%az
az:
call void@sml_check(i32 inreg%ax)
%aA=load i8*,i8**%b,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
br label%aE
aE:
%aF=phi i8*[%aD,%az],[%ao,%x]
store i8*%aF,i8**%c,align 8
%aG=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ef,i64 0,i32 2)to i8*))
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%d,align 8
%aM=bitcast i8**%b to i8***
%aN=load i8**,i8***%aM,align 8
store i8*null,i8**%b,align 8
%aO=load i8*,i8**%aN,align 8
%aP=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%aO)
store i8*%aP,i8**%b,align 8
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
store i8*%aQ,i8**%e,align 8
%aT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to i8**
store i8*null,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%b,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%e,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=load i8*,i8**%d,align 8
%ba=call fastcc i8*%aJ(i8*inreg%a9,i8*inreg%aZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%at)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%au)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%av)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aw)
store i8*%ba,i8**%f,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%g,align 8
%be=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 28)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177304,i32*%bn,align 4
%bo=load i8*,i8**%g,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2433 to void(...)*),void(...)**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13groupByToTermE_2433 to void(...)*),void(...)**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 24
%bv=bitcast i8*%bu to i32*
store i32 -2147483647,i32*%bv,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%r)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%s)
ret i8*%bl
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2388(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2390(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2392(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 32
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL3arg_2393(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%m)
%n=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n)
%o=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%o)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%k,i8**%b,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%r,label%t
r:
%s=bitcast i8*%k to i8**
br label%w
t:
call void@sml_check(i32 inreg%p)
%u=bitcast i8**%b to i8***
%v=load i8**,i8***%u,align 8
br label%w
w:
%x=phi i8**[%v,%t],[%s,%r]
%y=load i8*,i8**%x,align 8
%z=icmp eq i8*%y,null
br i1%z,label%A,label%T
A:
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%c,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValueToTermE_2428 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValueToTermE_2428 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%m)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%o)
br label%aJ
T:
%U=bitcast i8*%y to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%V)
store i8*%W,i8**%c,align 8
%X=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eL,i64 0,i32 2)to i8*))
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=call fastcc i8*%aa(i8*inreg%am,i8*inreg%ad)
store i8*%an,i8**%c,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
store i8*%ao,i8**%d,align 8
%ar=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
%aB=load i8*,i8**%d,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValueToTermE_2427 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17insertValueToTermE_2427 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 24
%aI=bitcast i8*%aH to i32*
store i32 -2147483647,i32*%aI,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%m)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%o)
br label%aJ
aJ:
%aK=phi i8*[%I,%A],[%ay,%T]
ret i8*%aK
}
define internal fastcc i8*@_SMLL3arg_2395(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@is,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%b to i8***
%t=load i8**,i8***%s,align 8
store i8*null,i8**%b,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
%w=tail call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%v)
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2397(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2398(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL3pat_2399(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=call fastcc i8*@_SMLLN12ElaborateSQL11PatVarLabelE_1150(i8*inreg%i)
store i8*%k,i8**%c,align 8
%l=call i8*@sml_alloc(i32 inreg 20)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177296,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%l,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLL1x_2401(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bE,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLL11fieldToTerm_2403(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=call fastcc i8*@_SMLLN12ElaborateSQL8VarLabelE_1174(i8*inreg%i)
store i8*%k,i8**%b,align 8
%l=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iv,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%b,align 8
%t=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%c,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%w(i8*inreg%I,i8*inreg%z)
store i8*%J,i8**%b,align 8
%K=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eL,i64 0,i32 2)to i8*))
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%c,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=load i8*,i8**%b,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*null,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
%aa=tail call fastcc i8*%N(i8*inreg%Z,i8*inreg%Q)
ret i8*%aa
}
define internal fastcc i8*@_SMLL3arg_2405(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%k)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8*,i8**%t,i64 1
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=tail call fastcc i8*%p(i8*inreg%H,i8*inreg%x)
ret i8*%I
}
define internal fastcc i8*@_SMLL3arg_2406(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
%f=getelementptr inbounds i8,i8*%e,i64 24
%g=bitcast i8*%f to i8***
%h=load i8**,i8***%g,align 8
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=bitcast i8*%j to i32*
%l=getelementptr inbounds i8,i8*%j,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177296,i32*%m,align 4
%n=getelementptr inbounds i8,i8*%j,i64 4
%o=bitcast i8*%n to i32*
store i32 0,i32*%o,align 1
store i32 25,i32*%k,align 4
%p=load i8*,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2407(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2408(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2409(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
ret i8*%w
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2410(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e9,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2411(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fd,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2412(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fh,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2413(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2415(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2416(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2417(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2418(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2419(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2420(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2423(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@p,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2425(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%o)
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%b,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17insertValueToTermE_2427(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17insertValueToTermE_2428(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eH,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg null)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%z)
ret i8*%A
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2429(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2431(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%e,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%m)
%n=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n)
%o=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%o)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%k,i8**%b,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%r,label%t
r:
%s=bitcast i8*%k to i8**
br label%w
t:
call void@sml_check(i32 inreg%p)
%u=bitcast i8**%b to i8***
%v=load i8**,i8***%u,align 8
br label%w
w:
%x=phi i8**[%v,%t],[%s,%r]
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ej,i64 0,i32 2)to i8*))
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8**
store i8*null,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=call fastcc i8*%D(i8*inreg%P,i8*inreg%G)
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12havingToTermE_2434 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12havingToTermE_2434 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%m)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%o)
ret i8*%ab
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2433(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12havingToTermE_2434(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
p:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%g,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
store i8*null,i8**%g,align 8
store i8*%o,i8**%h,align 8
%q=getelementptr inbounds i8,i8*%o,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%i,align 8
%t=bitcast i8*%o to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%u)
store i8*%v,i8**%g,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%G)
%H=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%H)
%I=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%I)
%J=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%J)
%K=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%K)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%w,i8**%b,align 8
%L=load atomic i32,i32*@sml_check_flag unordered,align 4
%M=icmp eq i32%L,0
br i1%M,label%R,label%N
N:
call void@sml_check(i32 inreg%L)
%O=bitcast i8**%b to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
br label%R
R:
%S=phi i8*[%Q,%N],[%z,%n]
store i8*%S,i8**%d,align 8
%T=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dl,i64 0,i32 2)to i8*))
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%e,align 8
%Z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%ac)
store i8*%ad,i8**%b,align 8
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
store i8*%ae,i8**%c,align 8
%ah=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i32*
store i32 1,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
store i8*%al,i8**%b,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__TABLEIDE_1385 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__TABLEIDE_1385 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%b,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to i8**
store i8*null,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 16
%aE=bitcast i8*%aD to i32*
store i32 3,i32*%aE,align 4
store i8*null,i8**%c,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
store i8*%aF,i8**%f,align 8
%aI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
%aS=load i8*,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aP,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=load i8*,i8**%e,align 8
%a0=call fastcc i8*%W(i8*inreg%aZ,i8*inreg%aP)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%G)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%H)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%I)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%J)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%K)
store i8*%a0,i8**%g,align 8
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
store i8*%a1,i8**%i,align 8
%a4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a7=getelementptr inbounds i8,i8*%a1,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a1,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
%be=load i8*,i8**%i,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13tableIdToTermE_2291 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13tableIdToTermE_2291 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 24
%bl=bitcast i8*%bk to i32*
store i32 -2147483647,i32*%bl,align 4
ret i8*%bb
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
aT:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
%C=alloca i8*,align 8
%D=alloca i8*,align 8
%E=alloca i8*,align 8
%F=alloca i8*,align 8
%G=alloca i8*,align 8
%H=alloca i8*,align 8
%I=alloca i8*,align 8
%J=alloca i8*,align 8
%K=alloca i8*,align 8
%L=alloca i8*,align 8
%M=alloca i8*,align 8
%N=alloca i8*,align 8
%O=alloca i8*,align 8
%P=alloca i8*,align 8
%Q=alloca i8*,align 8
%R=alloca i8*,align 8
%S=alloca i8*,align 8
%T=alloca i8*,align 8
%U=alloca i8*,align 8
%V=alloca i8*,align 8
%W=alloca i8*,align 8
%X=alloca i8*,align 8
%Y=alloca i8*,align 8
%Z=alloca i8*,align 8
%aa=alloca i8*,align 8
%ab=alloca i8*,align 8
%ac=alloca i8*,align 8
%ad=alloca i8*,align 8
%ae=alloca i8*,align 8
%af=alloca i8*,align 8
%ag=alloca i8*,align 8
%ah=alloca i8*,align 8
%ai=alloca i8*,align 8
%aj=alloca i8*,align 8
%ak=alloca i8*,align 8
%al=alloca i8*,align 8
%am=alloca i8*,align 8
%an=alloca i8*,align 8
%ao=alloca i8*,align 8
%ap=alloca i8*,align 8
%aq=alloca i8*,align 8
%ar=alloca i8*,align 8
%as=alloca i8*,align 8
%at=alloca i8*,align 8
%au=alloca i8*,align 8
%av=alloca i8*,align 8
%aw=alloca i8*,align 8
%ax=alloca i8*,align 8
%ay=alloca i8*,align 8
%az=alloca i8*,align 8
%aA=alloca i8*,align 8
%aB=alloca i8*,align 8
%aC=alloca i8*,align 8
%aD=alloca i8*,align 8
%aE=alloca i8*,align 8
%aF=alloca i8*,align 8
%aG=alloca i8*,align 8
%aH=alloca i8*,align 8
%aI=alloca i8*,align 8
%aJ=alloca i8*,align 8
%aK=alloca i8*,align 8
%aL=alloca i8*,align 8
%aM=alloca i8*,align 8
%aN=alloca i8*,align 8
%aO=alloca i8*,align 8
%aP=alloca i8*,align 8
%aQ=alloca i8*,align 8
call void@llvm.gcroot(i8**%aI,i8*null)#0
call void@llvm.gcroot(i8**%aJ,i8*null)#0
call void@llvm.gcroot(i8**%aK,i8*null)#0
call void@llvm.gcroot(i8**%aL,i8*null)#0
call void@llvm.gcroot(i8**%aM,i8*null)#0
call void@llvm.gcroot(i8**%aN,i8*null)#0
call void@llvm.gcroot(i8**%aO,i8*null)#0
call void@llvm.gcroot(i8**%aP,i8*null)#0
call void@llvm.gcroot(i8**%aQ,i8*null)#0
br label%aR
aR:
%aS=phi i8*[%Ki,%Kf],[%a,%aT]
store i8*%aS,i8**%aI,align 8
%aU=load atomic i32,i32*@sml_check_flag unordered,align 4
%aV=icmp eq i32%aU,0
br i1%aV,label%aY,label%aW
aW:
call void@sml_check(i32 inreg%aU)
%aX=load i8*,i8**%aI,align 8
br label%aY
aY:
%aZ=phi i8*[%aX,%aW],[%aS,%aR]
%a0=bitcast i8*%aZ to i32*
%a1=load i32,i32*%a0,align 4
switch i32%a1,label%a2[
i32 16,label%akW
i32 8,label%ake
i32 6,label%aaL
i32 17,label%aaf
i32 3,label%YW
i32 4,label%WM
i32 19,label%Q3
i32 20,label%Ox
i32 0,label%N6
i32 27,label%J8
i32 1,label%H7
i32 28,label%HG
i32 9,label%GX
i32 10,label%Ge
i32 30,label%Fv
i32 11,label%Eg
i32 21,label%CO
i32 18,label%wn
i32 15,label%sw
i32 25,label%qk
i32 22,label%mr
i32 23,label%l5
i32 13,label%kF
i32 12,label%jA
i32 14,label%ha
i32 29,label%fb
i32 7,label%dM
i32 2,label%dq
i32 5,label%c4
i32 24,label%cI
i32 26,label%bk
]
a2:
call void@sml_matchcomp_bug()
%a3=load i8*,i8**@_SMLZ5Match,align 8
store i8*%a3,i8**%aI,align 8
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
store i8*%a4,i8**%aJ,align 8
%a7=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@ix,i64 0,i32 2,i64 0),i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 3,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 60)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177336,i32*%bf,align 4
%bg=getelementptr inbounds i8,i8*%bd,i64 56
%bh=bitcast i8*%bg to i32*
store i32 1,i32*%bh,align 4
%bi=load i8*,i8**%aJ,align 8
%bj=bitcast i8*%bd to i8**
store i8*%bi,i8**%bj,align 8
call void@sml_raise(i8*inreg%bd)#1
unreachable
bk:
%bl=getelementptr inbounds i8,i8*%aZ,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%aK,align 8
%bo=bitcast i8*%bn to i8**
%bp=load i8*,i8**%bo,align 8
%bq=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%bp)
store i8*%bq,i8**%aI,align 8
%br=load i8*,i8**%aK,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
%bv=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%bu)
store i8*%bv,i8**%aJ,align 8
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
%bz=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=bitcast i8**%aE to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bG)
%bH=bitcast i8**%aF to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bH)
%bI=bitcast i8**%aG to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bI)
%bJ=bitcast i8**%aH to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bJ)
call void@llvm.gcroot(i8**%aE,i8*null)#0
call void@llvm.gcroot(i8**%aF,i8*null)#0
call void@llvm.gcroot(i8**%aG,i8*null)#0
call void@llvm.gcroot(i8**%aH,i8*null)#0
store i8*%bw,i8**%aE,align 8
%bK=load atomic i32,i32*@sml_check_flag unordered,align 4
%bL=icmp eq i32%bK,0
br i1%bL,label%bT,label%bM
bM:
call void@sml_check(i32 inreg%bK)
%bN=load i8*,i8**%aE,align 8
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
%bQ=getelementptr inbounds i8,i8*%bN,i64 8
%bR=bitcast i8*%bQ to i8**
%bS=load i8*,i8**%bR,align 8
br label%bT
bT:
%bU=phi i8*[%bS,%bM],[%bB,%bk]
%bV=phi i8*[%bP,%bM],[%bz,%bk]
store i8*%bV,i8**%aE,align 8
store i8*%bU,i8**%aF,align 8
%bW=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fm,i64 0,i32 2)to i8*))
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%aG,align 8
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
store i8*%b2,i8**%aH,align 8
%b5=load i8*,i8**%aF,align 8
store i8*null,i8**%aF,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b2,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*null,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b2,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call i8*@sml_alloc(i32 inreg 20)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177296,i32*%cd,align 4
%ce=load i8*,i8**%aE,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%aH,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cb,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=load i8*,i8**%aG,align 8
%cm=call fastcc i8*%bZ(i8*inreg%cl,i8*inreg%cb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bG)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bJ)
store i8*%cm,i8**%aI,align 8
%cn=call i8*@sml_alloc(i32 inreg 20)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177296,i32*%cp,align 4
store i8*%cn,i8**%aJ,align 8
%cq=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%ct=getelementptr inbounds i8,i8*%cn,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cn,i64 16
%cw=bitcast i8*%cv to i32*
store i32 3,i32*%cw,align 4
%cx=call i8*@sml_alloc(i32 inreg 28)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177304,i32*%cz,align 4
%cA=load i8*,i8**%aJ,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cx,i64 8
%cD=bitcast i8*%cC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2413 to void(...)*),void(...)**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cx,i64 16
%cF=bitcast i8*%cE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2413 to void(...)*),void(...)**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cx,i64 24
%cH=bitcast i8*%cG to i32*
store i32 -2147483647,i32*%cH,align 4
ret i8*%cx
cI:
%cJ=getelementptr inbounds i8,i8*%aZ,i64 8
%cK=bitcast i8*%cJ to i8**
%cL=load i8*,i8**%cK,align 8
store i8*%cL,i8**%aI,align 8
%cM=call i8*@sml_alloc(i32 inreg 12)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177288,i32*%cO,align 4
store i8*%cM,i8**%aJ,align 8
%cP=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to i32*
store i32 1,i32*%cS,align 4
%cT=call i8*@sml_alloc(i32 inreg 28)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177304,i32*%cV,align 4
%cW=load i8*,i8**%aJ,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cT,i64 8
%cZ=bitcast i8*%cY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2412 to void(...)*),void(...)**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cT,i64 16
%c1=bitcast i8*%c0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2412 to void(...)*),void(...)**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cT,i64 24
%c3=bitcast i8*%c2 to i32*
store i32 -2147483647,i32*%c3,align 4
ret i8*%cT
c4:
%c5=getelementptr inbounds i8,i8*%aZ,i64 8
%c6=bitcast i8*%c5 to i8**
%c7=load i8*,i8**%c6,align 8
store i8*%c7,i8**%aI,align 8
%c8=call i8*@sml_alloc(i32 inreg 12)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177288,i32*%da,align 4
store i8*%c8,i8**%aJ,align 8
%db=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i32*
store i32 1,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 28)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177304,i32*%dh,align 4
%di=load i8*,i8**%aJ,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2411 to void(...)*),void(...)**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2411 to void(...)*),void(...)**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 24
%dp=bitcast i8*%do to i32*
store i32 -2147483647,i32*%dp,align 4
ret i8*%df
dq:
%dr=getelementptr inbounds i8,i8*%aZ,i64 8
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
store i8*%dt,i8**%aI,align 8
%du=call i8*@sml_alloc(i32 inreg 12)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177288,i32*%dw,align 4
store i8*%du,i8**%aJ,align 8
%dx=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%dy=bitcast i8*%du to i8**
store i8*%dx,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%du,i64 8
%dA=bitcast i8*%dz to i32*
store i32 1,i32*%dA,align 4
%dB=call i8*@sml_alloc(i32 inreg 28)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177304,i32*%dD,align 4
%dE=load i8*,i8**%aJ,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dB,i64 8
%dH=bitcast i8*%dG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2410 to void(...)*),void(...)**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dB,i64 16
%dJ=bitcast i8*%dI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2410 to void(...)*),void(...)**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dB,i64 24
%dL=bitcast i8*%dK to i32*
store i32 -2147483647,i32*%dL,align 4
ret i8*%dB
dM:
%dN=getelementptr inbounds i8,i8*%aZ,i64 8
%dO=bitcast i8*%dN to i8**
%dP=load i8*,i8**%dO,align 8
store i8*%dP,i8**%aK,align 8
%dQ=getelementptr inbounds i8,i8*%dP,i64 8
%dR=bitcast i8*%dQ to i8**
%dS=load i8*,i8**%dR,align 8
%dT=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%dS)
store i8*%dT,i8**%aI,align 8
%dU=load i8*,i8**%aK,align 8
%dV=getelementptr inbounds i8,i8*%dU,i64 16
%dW=bitcast i8*%dV to i8**
%dX=load i8*,i8**%dW,align 8
%dY=call fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2148(i8*inreg%dX)
store i8*%dY,i8**%aJ,align 8
%dZ=call i8*@sml_alloc(i32 inreg 20)#0
%d0=getelementptr inbounds i8,i8*%dZ,i64 -4
%d1=bitcast i8*%d0 to i32*
store i32 1342177296,i32*%d1,align 4
%d2=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%d3=bitcast i8*%dZ to i8**
store i8*%d2,i8**%d3,align 8
%d4=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%d5=getelementptr inbounds i8,i8*%dZ,i64 8
%d6=bitcast i8*%d5 to i8**
store i8*%d4,i8**%d6,align 8
%d7=getelementptr inbounds i8,i8*%dZ,i64 16
%d8=bitcast i8*%d7 to i32*
store i32 3,i32*%d8,align 4
%d9=bitcast i8**%aA to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%d9)
%ea=bitcast i8**%aB to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ea)
%eb=bitcast i8**%aC to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%eb)
%ec=bitcast i8**%aD to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ec)
call void@llvm.gcroot(i8**%aA,i8*null)#0
call void@llvm.gcroot(i8**%aB,i8*null)#0
call void@llvm.gcroot(i8**%aC,i8*null)#0
call void@llvm.gcroot(i8**%aD,i8*null)#0
store i8*%dZ,i8**%aA,align 8
%ed=load atomic i32,i32*@sml_check_flag unordered,align 4
%ee=icmp eq i32%ed,0
br i1%ee,label%em,label%ef
ef:
call void@sml_check(i32 inreg%ed)
%eg=load i8*,i8**%aA,align 8
%eh=bitcast i8*%eg to i8**
%ei=load i8*,i8**%eh,align 8
%ej=getelementptr inbounds i8,i8*%eg,i64 8
%ek=bitcast i8*%ej to i8**
%el=load i8*,i8**%ek,align 8
br label%em
em:
%en=phi i8*[%el,%ef],[%d4,%dM]
%eo=phi i8*[%ei,%ef],[%d2,%dM]
store i8*%eo,i8**%aA,align 8
store i8*%en,i8**%aB,align 8
%ep=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e5,i64 0,i32 2)to i8*))
%eq=getelementptr inbounds i8,i8*%ep,i64 16
%er=bitcast i8*%eq to i8*(i8*,i8*)**
%es=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%er,align 8
%et=bitcast i8*%ep to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%aC,align 8
%ev=call i8*@sml_alloc(i32 inreg 20)#0
%ew=getelementptr inbounds i8,i8*%ev,i64 -4
%ex=bitcast i8*%ew to i32*
store i32 1342177296,i32*%ex,align 4
store i8*%ev,i8**%aD,align 8
%ey=load i8*,i8**%aB,align 8
store i8*null,i8**%aB,align 8
%ez=bitcast i8*%ev to i8**
store i8*%ey,i8**%ez,align 8
%eA=getelementptr inbounds i8,i8*%ev,i64 8
%eB=bitcast i8*%eA to i8**
store i8*null,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%ev,i64 16
%eD=bitcast i8*%eC to i32*
store i32 3,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 20)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177296,i32*%eG,align 4
%eH=load i8*,i8**%aA,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=load i8*,i8**%aD,align 8
%eK=getelementptr inbounds i8,i8*%eE,i64 8
%eL=bitcast i8*%eK to i8**
store i8*%eJ,i8**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eE,i64 16
%eN=bitcast i8*%eM to i32*
store i32 3,i32*%eN,align 4
%eO=load i8*,i8**%aC,align 8
%eP=call fastcc i8*%es(i8*inreg%eO,i8*inreg%eE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%d9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ea)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%eb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ec)
store i8*%eP,i8**%aI,align 8
%eQ=call i8*@sml_alloc(i32 inreg 20)#0
%eR=getelementptr inbounds i8,i8*%eQ,i64 -4
%eS=bitcast i8*%eR to i32*
store i32 1342177296,i32*%eS,align 4
store i8*%eQ,i8**%aJ,align 8
%eT=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%eU=bitcast i8*%eQ to i8**
store i8*%eT,i8**%eU,align 8
%eV=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%eW=getelementptr inbounds i8,i8*%eQ,i64 8
%eX=bitcast i8*%eW to i8**
store i8*%eV,i8**%eX,align 8
%eY=getelementptr inbounds i8,i8*%eQ,i64 16
%eZ=bitcast i8*%eY to i32*
store i32 3,i32*%eZ,align 4
%e0=call i8*@sml_alloc(i32 inreg 28)#0
%e1=getelementptr inbounds i8,i8*%e0,i64 -4
%e2=bitcast i8*%e1 to i32*
store i32 1342177304,i32*%e2,align 4
%e3=load i8*,i8**%aJ,align 8
%e4=bitcast i8*%e0 to i8**
store i8*%e3,i8**%e4,align 8
%e5=getelementptr inbounds i8,i8*%e0,i64 8
%e6=bitcast i8*%e5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2409 to void(...)*),void(...)**%e6,align 8
%e7=getelementptr inbounds i8,i8*%e0,i64 16
%e8=bitcast i8*%e7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2409 to void(...)*),void(...)**%e8,align 8
%e9=getelementptr inbounds i8,i8*%e0,i64 24
%fa=bitcast i8*%e9 to i32*
store i32 -2147483647,i32*%fa,align 4
ret i8*%e0
fb:
%fc=getelementptr inbounds i8,i8*%aZ,i64 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%aL,align 8
%ff=getelementptr inbounds i8,i8*%fe,i64 16
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
%fi=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%fh)
store i8*%fi,i8**%aI,align 8
%fj=load i8*,i8**%aL,align 8
%fk=getelementptr inbounds i8,i8*%fj,i64 8
%fl=bitcast i8*%fk to i8**
%fm=load i8*,i8**%fl,align 8
%fn=call fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2149(i8*inreg%fm)
store i8*%fn,i8**%aJ,align 8
%fo=load i8*,i8**%aL,align 8
%fp=getelementptr inbounds i8,i8*%fo,i64 24
%fq=bitcast i8*%fp to i8**
%fr=load i8*,i8**%fq,align 8
%fs=call fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2148(i8*inreg%fr)
store i8*%fs,i8**%aK,align 8
%ft=call i8*@sml_alloc(i32 inreg 28)#0
%fu=getelementptr inbounds i8,i8*%ft,i64 -4
%fv=bitcast i8*%fu to i32*
store i32 1342177304,i32*%fv,align 4
%fw=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%fx=bitcast i8*%ft to i8**
store i8*%fw,i8**%fx,align 8
%fy=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%fz=getelementptr inbounds i8,i8*%ft,i64 8
%fA=bitcast i8*%fz to i8**
store i8*%fy,i8**%fA,align 8
%fB=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%fC=getelementptr inbounds i8,i8*%ft,i64 16
%fD=bitcast i8*%fC to i8**
store i8*%fB,i8**%fD,align 8
%fE=getelementptr inbounds i8,i8*%ft,i64 24
%fF=bitcast i8*%fE to i32*
store i32 7,i32*%fF,align 4
%fG=bitcast i8**%as to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fG)
%fH=bitcast i8**%at to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fH)
%fI=bitcast i8**%au to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fI)
%fJ=bitcast i8**%av to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fJ)
%fK=bitcast i8**%aw to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fK)
call void@llvm.gcroot(i8**%as,i8*null)#0
call void@llvm.gcroot(i8**%at,i8*null)#0
call void@llvm.gcroot(i8**%au,i8*null)#0
call void@llvm.gcroot(i8**%av,i8*null)#0
call void@llvm.gcroot(i8**%aw,i8*null)#0
store i8*%ft,i8**%as,align 8
%fL=load atomic i32,i32*@sml_check_flag unordered,align 4
%fM=icmp eq i32%fL,0
br i1%fM,label%fR,label%fN
fN:
call void@sml_check(i32 inreg%fL)
%fO=bitcast i8**%as to i8***
%fP=load i8**,i8***%fO,align 8
%fQ=load i8*,i8**%fP,align 8
br label%fR
fR:
%fS=phi i8*[%fQ,%fN],[%fw,%fb]
%fT=phi i8**[%fP,%fN],[%fx,%fb]
store i8*%fS,i8**%at,align 8
%fU=getelementptr inbounds i8*,i8**%fT,i64 2
%fV=load i8*,i8**%fU,align 8
store i8*%fV,i8**%au,align 8
%fW=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e1,i64 0,i32 2)to i8*))
%fX=getelementptr inbounds i8,i8*%fW,i64 16
%fY=bitcast i8*%fX to i8*(i8*,i8*)**
%fZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fY,align 8
%f0=bitcast i8*%fW to i8**
%f1=load i8*,i8**%f0,align 8
store i8*%f1,i8**%av,align 8
%f2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%f3=getelementptr inbounds i8,i8*%f2,i64 16
%f4=bitcast i8*%f3 to i8*(i8*,i8*)**
%f5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f4,align 8
%f6=bitcast i8*%f2 to i8**
%f7=load i8*,i8**%f6,align 8
%f8=call fastcc i8*%f5(i8*inreg%f7,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gt,i64 0,i32 2)to i8*))
%f9=getelementptr inbounds i8,i8*%f8,i64 16
%ga=bitcast i8*%f9 to i8*(i8*,i8*)**
%gb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ga,align 8
%gc=bitcast i8*%f8 to i8**
%gd=load i8*,i8**%gc,align 8
%ge=load i8*,i8**%as,align 8
store i8*null,i8**%as,align 8
%gf=getelementptr inbounds i8,i8*%ge,i64 8
%gg=bitcast i8*%gf to i8**
%gh=load i8*,i8**%gg,align 8
%gi=call fastcc i8*%gb(i8*inreg%gd,i8*inreg%gh)
%gj=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%gi)
store i8*%gj,i8**%as,align 8
%gk=call i8*@sml_alloc(i32 inreg 20)#0
%gl=getelementptr inbounds i8,i8*%gk,i64 -4
%gm=bitcast i8*%gl to i32*
store i32 1342177296,i32*%gm,align 4
store i8*%gk,i8**%aw,align 8
%gn=load i8*,i8**%au,align 8
store i8*null,i8**%au,align 8
%go=bitcast i8*%gk to i8**
store i8*%gn,i8**%go,align 8
%gp=getelementptr inbounds i8,i8*%gk,i64 8
%gq=bitcast i8*%gp to i8**
store i8*null,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gk,i64 16
%gs=bitcast i8*%gr to i32*
store i32 3,i32*%gs,align 4
%gt=call i8*@sml_alloc(i32 inreg 20)#0
%gu=getelementptr inbounds i8,i8*%gt,i64 -4
%gv=bitcast i8*%gu to i32*
store i32 1342177296,i32*%gv,align 4
store i8*%gt,i8**%au,align 8
%gw=load i8*,i8**%as,align 8
store i8*null,i8**%as,align 8
%gx=bitcast i8*%gt to i8**
store i8*%gw,i8**%gx,align 8
%gy=load i8*,i8**%aw,align 8
store i8*null,i8**%aw,align 8
%gz=getelementptr inbounds i8,i8*%gt,i64 8
%gA=bitcast i8*%gz to i8**
store i8*%gy,i8**%gA,align 8
%gB=getelementptr inbounds i8,i8*%gt,i64 16
%gC=bitcast i8*%gB to i32*
store i32 3,i32*%gC,align 4
%gD=call i8*@sml_alloc(i32 inreg 20)#0
%gE=getelementptr inbounds i8,i8*%gD,i64 -4
%gF=bitcast i8*%gE to i32*
store i32 1342177296,i32*%gF,align 4
%gG=load i8*,i8**%at,align 8
%gH=bitcast i8*%gD to i8**
store i8*%gG,i8**%gH,align 8
%gI=load i8*,i8**%au,align 8
%gJ=getelementptr inbounds i8,i8*%gD,i64 8
%gK=bitcast i8*%gJ to i8**
store i8*%gI,i8**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gD,i64 16
%gM=bitcast i8*%gL to i32*
store i32 3,i32*%gM,align 4
%gN=load i8*,i8**%av,align 8
%gO=call fastcc i8*%fZ(i8*inreg%gN,i8*inreg%gD)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fG)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fK)
store i8*%gO,i8**%aI,align 8
%gP=call i8*@sml_alloc(i32 inreg 20)#0
%gQ=getelementptr inbounds i8,i8*%gP,i64 -4
%gR=bitcast i8*%gQ to i32*
store i32 1342177296,i32*%gR,align 4
store i8*%gP,i8**%aJ,align 8
%gS=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%gT=bitcast i8*%gP to i8**
store i8*%gS,i8**%gT,align 8
%gU=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%gV=getelementptr inbounds i8,i8*%gP,i64 8
%gW=bitcast i8*%gV to i8**
store i8*%gU,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gP,i64 16
%gY=bitcast i8*%gX to i32*
store i32 3,i32*%gY,align 4
%gZ=call i8*@sml_alloc(i32 inreg 28)#0
%g0=getelementptr inbounds i8,i8*%gZ,i64 -4
%g1=bitcast i8*%g0 to i32*
store i32 1342177304,i32*%g1,align 4
%g2=load i8*,i8**%aJ,align 8
%g3=bitcast i8*%gZ to i8**
store i8*%g2,i8**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gZ,i64 8
%g5=bitcast i8*%g4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2408 to void(...)*),void(...)**%g5,align 8
%g6=getelementptr inbounds i8,i8*%gZ,i64 16
%g7=bitcast i8*%g6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2408 to void(...)*),void(...)**%g7,align 8
%g8=getelementptr inbounds i8,i8*%gZ,i64 24
%g9=bitcast i8*%g8 to i32*
store i32 -2147483647,i32*%g9,align 4
ret i8*%gZ
ha:
%hb=getelementptr inbounds i8,i8*%aZ,i64 8
%hc=bitcast i8*%hb to i8**
%hd=load i8*,i8**%hc,align 8
store i8*%hd,i8**%aL,align 8
%he=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hf=getelementptr inbounds i8,i8*%he,i64 16
%hg=bitcast i8*%hf to i8*(i8*,i8*)**
%hh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hg,align 8
%hi=bitcast i8*%he to i8**
%hj=load i8*,i8**%hi,align 8
%hk=call fastcc i8*%hh(i8*inreg%hj,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iu,i64 0,i32 2)to i8*))
%hl=getelementptr inbounds i8,i8*%hk,i64 16
%hm=bitcast i8*%hl to i8*(i8*,i8*)**
%hn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hm,align 8
%ho=bitcast i8*%hk to i8**
%hp=load i8*,i8**%ho,align 8
%hq=bitcast i8**%aL to i8***
%hr=load i8**,i8***%hq,align 8
%hs=load i8*,i8**%hr,align 8
%ht=call fastcc i8*%hn(i8*inreg%hp,i8*inreg%hs)
%hu=call fastcc i8*@_SMLLN12ElaborateSQL9PatRecordE_1158(i8*inreg%ht)
store i8*%hu,i8**%aI,align 8
%hv=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hw=getelementptr inbounds i8,i8*%hv,i64 16
%hx=bitcast i8*%hw to i8*(i8*,i8*)**
%hy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hx,align 8
%hz=bitcast i8*%hv to i8**
%hA=load i8*,i8**%hz,align 8
%hB=call fastcc i8*%hy(i8*inreg%hA,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iw,i64 0,i32 2)to i8*))
%hC=getelementptr inbounds i8,i8*%hB,i64 16
%hD=bitcast i8*%hC to i8*(i8*,i8*)**
%hE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hD,align 8
%hF=bitcast i8*%hB to i8**
%hG=load i8*,i8**%hF,align 8
%hH=load i8**,i8***%hq,align 8
%hI=load i8*,i8**%hH,align 8
%hJ=call fastcc i8*%hE(i8*inreg%hG,i8*inreg%hI)
%hK=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%hJ)
store i8*%hK,i8**%aJ,align 8
%hL=load i8*,i8**%aL,align 8
%hM=getelementptr inbounds i8,i8*%hL,i64 16
%hN=bitcast i8*%hM to i8**
%hO=load i8*,i8**%hN,align 8
%hP=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%hO)
store i8*%hP,i8**%aK,align 8
%hQ=call i8*@sml_alloc(i32 inreg 20)#0
%hR=getelementptr inbounds i8,i8*%hQ,i64 -4
%hS=bitcast i8*%hR to i32*
store i32 1342177296,i32*%hS,align 4
store i8*%hQ,i8**%aM,align 8
%hT=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%hU=bitcast i8*%hQ to i8**
store i8*%hT,i8**%hU,align 8
%hV=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%hW=getelementptr inbounds i8,i8*%hQ,i64 8
%hX=bitcast i8*%hW to i8**
store i8*%hV,i8**%hX,align 8
%hY=getelementptr inbounds i8,i8*%hQ,i64 16
%hZ=bitcast i8*%hY to i32*
store i32 3,i32*%hZ,align 4
%h0=call i8*@sml_alloc(i32 inreg 28)#0
%h1=getelementptr inbounds i8,i8*%h0,i64 -4
%h2=bitcast i8*%h1 to i32*
store i32 1342177304,i32*%h2,align 4
%h3=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%h4=bitcast i8*%h0 to i8**
store i8*%h3,i8**%h4,align 8
%h5=getelementptr inbounds i8,i8*%h0,i64 8
%h6=bitcast i8*%h5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2405 to void(...)*),void(...)**%h6,align 8
%h7=getelementptr inbounds i8,i8*%h0,i64 16
%h8=bitcast i8*%h7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2405 to void(...)*),void(...)**%h8,align 8
%h9=getelementptr inbounds i8,i8*%h0,i64 24
%ia=bitcast i8*%h9 to i32*
store i32 -2147483647,i32*%ia,align 4
%ib=call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1267(i8*inreg%h0)
%ic=getelementptr inbounds i8,i8*%ib,i64 16
%id=bitcast i8*%ic to i8*(i8*,i8*)**
%ie=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%id,align 8
%if=bitcast i8*%ib to i8**
%ig=load i8*,i8**%if,align 8
store i8*%ig,i8**%aI,align 8
%ih=call i8*@sml_alloc(i32 inreg 12)#0
%ii=getelementptr inbounds i8,i8*%ih,i64 -4
%ij=bitcast i8*%ii to i32*
store i32 1342177288,i32*%ij,align 4
store i8*%ih,i8**%aJ,align 8
%ik=load i8*,i8**%aL,align 8
%il=bitcast i8*%ih to i8**
store i8*%ik,i8**%il,align 8
%im=getelementptr inbounds i8,i8*%ih,i64 8
%in=bitcast i8*%im to i32*
store i32 1,i32*%in,align 4
%io=call i8*@sml_alloc(i32 inreg 28)#0
%ip=getelementptr inbounds i8,i8*%io,i64 -4
%iq=bitcast i8*%ip to i32*
store i32 1342177304,i32*%iq,align 4
%ir=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%is=bitcast i8*%io to i8**
store i8*%ir,i8**%is,align 8
%it=getelementptr inbounds i8,i8*%io,i64 8
%iu=bitcast i8*%it to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2406 to void(...)*),void(...)**%iu,align 8
%iv=getelementptr inbounds i8,i8*%io,i64 16
%iw=bitcast i8*%iv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3arg_2406 to void(...)*),void(...)**%iw,align 8
%ix=getelementptr inbounds i8,i8*%io,i64 24
%iy=bitcast i8*%ix to i32*
store i32 -2147483647,i32*%iy,align 4
%iz=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%iA=call fastcc i8*%ie(i8*inreg%iz,i8*inreg%io)
store i8*%iA,i8**%aI,align 8
%iB=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eT,i64 0,i32 2)to i8*))
%iC=getelementptr inbounds i8,i8*%iB,i64 16
%iD=bitcast i8*%iC to i8*(i8*,i8*)**
%iE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iD,align 8
%iF=bitcast i8*%iB to i8**
%iG=load i8*,i8**%iF,align 8
store i8*%iG,i8**%aJ,align 8
%iH=call i8*@sml_alloc(i32 inreg 20)#0
%iI=getelementptr inbounds i8,i8*%iH,i64 -4
%iJ=bitcast i8*%iI to i32*
store i32 1342177296,i32*%iJ,align 4
%iK=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%iL=bitcast i8*%iH to i8**
store i8*%iK,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iH,i64 8
%iN=bitcast i8*%iM to i8**
store i8*null,i8**%iN,align 8
%iO=getelementptr inbounds i8,i8*%iH,i64 16
%iP=bitcast i8*%iO to i32*
store i32 3,i32*%iP,align 4
%iQ=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%iR=call fastcc i8*%iE(i8*inreg%iQ,i8*inreg%iH)
store i8*%iR,i8**%aI,align 8
%iS=load i8**,i8***%hq,align 8
%iT=load i8*,i8**%iS,align 8
store i8*%iT,i8**%aJ,align 8
%iU=call i8*@sml_alloc(i32 inreg 12)#0
%iV=getelementptr inbounds i8,i8*%iU,i64 -4
%iW=bitcast i8*%iV to i32*
store i32 1342177288,i32*%iW,align 4
store i8*%iU,i8**%aM,align 8
%iX=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%iY=bitcast i8*%iU to i8**
store i8*%iX,i8**%iY,align 8
%iZ=getelementptr inbounds i8,i8*%iU,i64 8
%i0=bitcast i8*%iZ to i32*
store i32 1,i32*%i0,align 4
%i1=call i8*@sml_alloc(i32 inreg 28)#0
%i2=getelementptr inbounds i8,i8*%i1,i64 -4
%i3=bitcast i8*%i2 to i32*
store i32 1342177304,i32*%i3,align 4
%i4=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%i5=bitcast i8*%i1 to i8**
store i8*%i4,i8**%i5,align 8
%i6=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%i7=getelementptr inbounds i8,i8*%i1,i64 8
%i8=bitcast i8*%i7 to i8**
store i8*%i6,i8**%i8,align 8
%i9=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%ja=getelementptr inbounds i8,i8*%i1,i64 16
%jb=bitcast i8*%ja to i8**
store i8*%i9,i8**%jb,align 8
%jc=getelementptr inbounds i8,i8*%i1,i64 24
%jd=bitcast i8*%jc to i32*
store i32 7,i32*%jd,align 4
%je=call fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1429(i8*inreg%i1)
store i8*%je,i8**%aI,align 8
%jf=call i8*@sml_alloc(i32 inreg 20)#0
%jg=getelementptr inbounds i8,i8*%jf,i64 -4
%jh=bitcast i8*%jg to i32*
store i32 1342177296,i32*%jh,align 4
store i8*%jf,i8**%aJ,align 8
%ji=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%jj=bitcast i8*%jf to i8**
store i8*%ji,i8**%jj,align 8
%jk=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%jl=getelementptr inbounds i8,i8*%jf,i64 8
%jm=bitcast i8*%jl to i8**
store i8*%jk,i8**%jm,align 8
%jn=getelementptr inbounds i8,i8*%jf,i64 16
%jo=bitcast i8*%jn to i32*
store i32 3,i32*%jo,align 4
%jp=call i8*@sml_alloc(i32 inreg 28)#0
%jq=getelementptr inbounds i8,i8*%jp,i64 -4
%jr=bitcast i8*%jq to i32*
store i32 1342177304,i32*%jr,align 4
%js=load i8*,i8**%aJ,align 8
%jt=bitcast i8*%jp to i8**
store i8*%js,i8**%jt,align 8
%ju=getelementptr inbounds i8,i8*%jp,i64 8
%jv=bitcast i8*%ju to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2407 to void(...)*),void(...)**%jv,align 8
%jw=getelementptr inbounds i8,i8*%jp,i64 16
%jx=bitcast i8*%jw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2407 to void(...)*),void(...)**%jx,align 8
%jy=getelementptr inbounds i8,i8*%jp,i64 24
%jz=bitcast i8*%jy to i32*
store i32 -2147483647,i32*%jz,align 4
ret i8*%jp
jA:
%jB=getelementptr inbounds i8,i8*%aZ,i64 8
%jC=bitcast i8*%jB to i8**
%jD=load i8*,i8**%jC,align 8
store i8*%jD,i8**%aK,align 8
%jE=bitcast i8*%jD to i8**
%jF=load i8*,i8**%jE,align 8
store i8*%jF,i8**%aL,align 8
%jG=getelementptr inbounds i8,i8*%jD,i64 24
%jH=bitcast i8*%jG to i8**
%jI=load i8*,i8**%jH,align 8
%jJ=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%jI)
store i8*%jJ,i8**%aI,align 8
%jK=load i8*,i8**%aK,align 8
%jL=getelementptr inbounds i8,i8*%jK,i64 16
%jM=bitcast i8*%jL to i8**
%jN=load i8*,i8**%jM,align 8
%jO=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%jN)
store i8*%jO,i8**%aJ,align 8
%jP=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eX,i64 0,i32 2)to i8*))
%jQ=getelementptr inbounds i8,i8*%jP,i64 16
%jR=bitcast i8*%jQ to i8*(i8*,i8*)**
%jS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jR,align 8
%jT=bitcast i8*%jP to i8**
%jU=load i8*,i8**%jT,align 8
store i8*%jU,i8**%aM,align 8
%jV=call i8*@sml_alloc(i32 inreg 20)#0
%jW=getelementptr inbounds i8,i8*%jV,i64 -4
%jX=bitcast i8*%jW to i32*
store i32 1342177296,i32*%jX,align 4
%jY=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%jZ=bitcast i8*%jV to i8**
store i8*%jY,i8**%jZ,align 8
%j0=getelementptr inbounds i8,i8*%jV,i64 8
%j1=bitcast i8*%j0 to i8**
store i8*null,i8**%j1,align 8
%j2=getelementptr inbounds i8,i8*%jV,i64 16
%j3=bitcast i8*%j2 to i32*
store i32 3,i32*%j3,align 4
%j4=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%j5=call fastcc i8*%jS(i8*inreg%j4,i8*inreg%jV)
store i8*%j5,i8**%aJ,align 8
%j6=call i8*@sml_alloc(i32 inreg 28)#0
%j7=getelementptr inbounds i8,i8*%j6,i64 -4
%j8=bitcast i8*%j7 to i32*
store i32 1342177304,i32*%j8,align 4
%j9=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%ka=bitcast i8*%j6 to i8**
store i8*%j9,i8**%ka,align 8
%kb=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%kc=getelementptr inbounds i8,i8*%j6,i64 8
%kd=bitcast i8*%kc to i8**
store i8*%kb,i8**%kd,align 8
%ke=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%kf=getelementptr inbounds i8,i8*%j6,i64 16
%kg=bitcast i8*%kf to i8**
store i8*%ke,i8**%kg,align 8
%kh=getelementptr inbounds i8,i8*%j6,i64 24
%ki=bitcast i8*%kh to i32*
store i32 7,i32*%ki,align 4
%kj=call fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1429(i8*inreg%j6)
store i8*%kj,i8**%aI,align 8
%kk=call i8*@sml_alloc(i32 inreg 20)#0
%kl=getelementptr inbounds i8,i8*%kk,i64 -4
%km=bitcast i8*%kl to i32*
store i32 1342177296,i32*%km,align 4
store i8*%kk,i8**%aJ,align 8
%kn=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%ko=bitcast i8*%kk to i8**
store i8*%kn,i8**%ko,align 8
%kp=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%kq=getelementptr inbounds i8,i8*%kk,i64 8
%kr=bitcast i8*%kq to i8**
store i8*%kp,i8**%kr,align 8
%ks=getelementptr inbounds i8,i8*%kk,i64 16
%kt=bitcast i8*%ks to i32*
store i32 3,i32*%kt,align 4
%ku=call i8*@sml_alloc(i32 inreg 28)#0
%kv=getelementptr inbounds i8,i8*%ku,i64 -4
%kw=bitcast i8*%kv to i32*
store i32 1342177304,i32*%kw,align 4
%kx=load i8*,i8**%aJ,align 8
%ky=bitcast i8*%ku to i8**
store i8*%kx,i8**%ky,align 8
%kz=getelementptr inbounds i8,i8*%ku,i64 8
%kA=bitcast i8*%kz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2398 to void(...)*),void(...)**%kA,align 8
%kB=getelementptr inbounds i8,i8*%ku,i64 16
%kC=bitcast i8*%kB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2398 to void(...)*),void(...)**%kC,align 8
%kD=getelementptr inbounds i8,i8*%ku,i64 24
%kE=bitcast i8*%kD to i32*
store i32 -2147483647,i32*%kE,align 4
ret i8*%ku
kF:
%kG=getelementptr inbounds i8,i8*%aZ,i64 8
%kH=bitcast i8*%kG to i8**
%kI=load i8*,i8**%kH,align 8
store i8*%kI,i8**%aK,align 8
%kJ=getelementptr inbounds i8,i8*%kI,i64 16
%kK=bitcast i8*%kJ to i8**
%kL=load i8*,i8**%kK,align 8
%kM=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%kL)
store i8*%kM,i8**%aI,align 8
%kN=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kO=getelementptr inbounds i8,i8*%kN,i64 16
%kP=bitcast i8*%kO to i8*(i8*,i8*)**
%kQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kP,align 8
%kR=bitcast i8*%kN to i8**
%kS=load i8*,i8**%kR,align 8
%kT=call fastcc i8*%kQ(i8*inreg%kS,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@it,i64 0,i32 2)to i8*))
%kU=getelementptr inbounds i8,i8*%kT,i64 16
%kV=bitcast i8*%kU to i8*(i8*,i8*)**
%kW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kV,align 8
%kX=bitcast i8*%kT to i8**
%kY=load i8*,i8**%kX,align 8
%kZ=load i8*,i8**%aK,align 8
%k0=getelementptr inbounds i8,i8*%kZ,i64 24
%k1=bitcast i8*%k0 to i8**
%k2=load i8*,i8**%k1,align 8
%k3=call fastcc i8*%kW(i8*inreg%kY,i8*inreg%k2)
%k4=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%k3)
store i8*%k4,i8**%aJ,align 8
%k5=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eT,i64 0,i32 2)to i8*))
%k6=getelementptr inbounds i8,i8*%k5,i64 16
%k7=bitcast i8*%k6 to i8*(i8*,i8*)**
%k8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k7,align 8
%k9=bitcast i8*%k5 to i8**
%la=load i8*,i8**%k9,align 8
store i8*%la,i8**%aL,align 8
%lb=call i8*@sml_alloc(i32 inreg 20)#0
%lc=getelementptr inbounds i8,i8*%lb,i64 -4
%ld=bitcast i8*%lc to i32*
store i32 1342177296,i32*%ld,align 4
%le=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%lf=bitcast i8*%lb to i8**
store i8*%le,i8**%lf,align 8
%lg=getelementptr inbounds i8,i8*%lb,i64 8
%lh=bitcast i8*%lg to i8**
store i8*null,i8**%lh,align 8
%li=getelementptr inbounds i8,i8*%lb,i64 16
%lj=bitcast i8*%li to i32*
store i32 3,i32*%lj,align 4
%lk=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%ll=call fastcc i8*%k8(i8*inreg%lk,i8*inreg%lb)
store i8*%ll,i8**%aJ,align 8
%lm=bitcast i8**%aK to i8***
%ln=load i8**,i8***%lm,align 8
%lo=load i8*,i8**%ln,align 8
store i8*%lo,i8**%aL,align 8
%lp=call i8*@sml_alloc(i32 inreg 12)#0
%lq=getelementptr inbounds i8,i8*%lp,i64 -4
%lr=bitcast i8*%lq to i32*
store i32 1342177288,i32*%lr,align 4
store i8*%lp,i8**%aM,align 8
%ls=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%lt=bitcast i8*%lp to i8**
store i8*%ls,i8**%lt,align 8
%lu=getelementptr inbounds i8,i8*%lp,i64 8
%lv=bitcast i8*%lu to i32*
store i32 1,i32*%lv,align 4
%lw=call i8*@sml_alloc(i32 inreg 28)#0
%lx=getelementptr inbounds i8,i8*%lw,i64 -4
%ly=bitcast i8*%lx to i32*
store i32 1342177304,i32*%ly,align 4
%lz=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%lA=bitcast i8*%lw to i8**
store i8*%lz,i8**%lA,align 8
%lB=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%lC=getelementptr inbounds i8,i8*%lw,i64 8
%lD=bitcast i8*%lC to i8**
store i8*%lB,i8**%lD,align 8
%lE=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%lF=getelementptr inbounds i8,i8*%lw,i64 16
%lG=bitcast i8*%lF to i8**
store i8*%lE,i8**%lG,align 8
%lH=getelementptr inbounds i8,i8*%lw,i64 24
%lI=bitcast i8*%lH to i32*
store i32 7,i32*%lI,align 4
%lJ=call fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1429(i8*inreg%lw)
store i8*%lJ,i8**%aI,align 8
%lK=call i8*@sml_alloc(i32 inreg 20)#0
%lL=getelementptr inbounds i8,i8*%lK,i64 -4
%lM=bitcast i8*%lL to i32*
store i32 1342177296,i32*%lM,align 4
store i8*%lK,i8**%aJ,align 8
%lN=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%lO=bitcast i8*%lK to i8**
store i8*%lN,i8**%lO,align 8
%lP=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%lQ=getelementptr inbounds i8,i8*%lK,i64 8
%lR=bitcast i8*%lQ to i8**
store i8*%lP,i8**%lR,align 8
%lS=getelementptr inbounds i8,i8*%lK,i64 16
%lT=bitcast i8*%lS to i32*
store i32 3,i32*%lT,align 4
%lU=call i8*@sml_alloc(i32 inreg 28)#0
%lV=getelementptr inbounds i8,i8*%lU,i64 -4
%lW=bitcast i8*%lV to i32*
store i32 1342177304,i32*%lW,align 4
%lX=load i8*,i8**%aJ,align 8
%lY=bitcast i8*%lU to i8**
store i8*%lX,i8**%lY,align 8
%lZ=getelementptr inbounds i8,i8*%lU,i64 8
%l0=bitcast i8*%lZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2397 to void(...)*),void(...)**%l0,align 8
%l1=getelementptr inbounds i8,i8*%lU,i64 16
%l2=bitcast i8*%l1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2397 to void(...)*),void(...)**%l2,align 8
%l3=getelementptr inbounds i8,i8*%lU,i64 24
%l4=bitcast i8*%l3 to i32*
store i32 -2147483647,i32*%l4,align 4
ret i8*%lU
l5:
%l6=getelementptr inbounds i8,i8*%aZ,i64 8
%l7=bitcast i8*%l6 to i8**
%l8=load i8*,i8**%l7,align 8
%l9=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%l8)
store i8*%l9,i8**%aI,align 8
%ma=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eD,i64 0,i32 2)to i8*))
%mb=getelementptr inbounds i8,i8*%ma,i64 16
%mc=bitcast i8*%mb to i8*(i8*,i8*)**
%md=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mc,align 8
%me=bitcast i8*%ma to i8**
%mf=load i8*,i8**%me,align 8
store i8*%mf,i8**%aJ,align 8
%mg=call i8*@sml_alloc(i32 inreg 20)#0
%mh=getelementptr inbounds i8,i8*%mg,i64 -4
%mi=bitcast i8*%mh to i32*
store i32 1342177296,i32*%mi,align 4
%mj=load i8*,i8**%aI,align 8
%mk=bitcast i8*%mg to i8**
store i8*%mj,i8**%mk,align 8
%ml=getelementptr inbounds i8,i8*%mg,i64 8
%mm=bitcast i8*%ml to i8**
store i8*null,i8**%mm,align 8
%mn=getelementptr inbounds i8,i8*%mg,i64 16
%mo=bitcast i8*%mn to i32*
store i32 3,i32*%mo,align 4
%mp=load i8*,i8**%aJ,align 8
%mq=tail call fastcc i8*%md(i8*inreg%mp,i8*inreg%mg)
ret i8*%mq
mr:
%ms=getelementptr inbounds i8,i8*%aZ,i64 8
%mt=bitcast i8*%ms to i8**
%mu=load i8*,i8**%mt,align 8
store i8*%mu,i8**%aO,align 8
%mv=getelementptr inbounds i8,i8*%mu,i64 48
%mw=bitcast i8*%mv to i8**
%mx=load i8*,i8**%mw,align 8
%my=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%mx)
store i8*%my,i8**%aI,align 8
%mz=load i8*,i8**%aO,align 8
%mA=getelementptr inbounds i8,i8*%mz,i64 8
%mB=bitcast i8*%mA to i8**
%mC=load i8*,i8**%mB,align 8
%mD=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%mC)
store i8*%mD,i8**%aJ,align 8
%mE=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%mF=getelementptr inbounds i8,i8*%mE,i64 16
%mG=bitcast i8*%mF to i8*(i8*,i8*)**
%mH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mG,align 8
%mI=bitcast i8*%mE to i8**
%mJ=load i8*,i8**%mI,align 8
%mK=call fastcc i8*%mH(i8*inreg%mJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@io,i64 0,i32 2)to i8*))
%mL=getelementptr inbounds i8,i8*%mK,i64 16
%mM=bitcast i8*%mL to i8*(i8*,i8*)**
%mN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mM,align 8
%mO=bitcast i8*%mK to i8**
%mP=load i8*,i8**%mO,align 8
%mQ=load i8*,i8**%aO,align 8
%mR=getelementptr inbounds i8,i8*%mQ,i64 56
%mS=bitcast i8*%mR to i8**
%mT=load i8*,i8**%mS,align 8
%mU=call fastcc i8*%mN(i8*inreg%mP,i8*inreg%mT)
store i8*%mU,i8**%aK,align 8
%mV=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%mW=getelementptr inbounds i8,i8*%mV,i64 16
%mX=bitcast i8*%mW to i8*(i8*,i8*)**
%mY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mX,align 8
%mZ=bitcast i8*%mV to i8**
%m0=load i8*,i8**%mZ,align 8
%m1=call fastcc i8*%mY(i8*inreg%m0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ip,i64 0,i32 2)to i8*))
%m2=getelementptr inbounds i8,i8*%m1,i64 16
%m3=bitcast i8*%m2 to i8*(i8*,i8*)**
%m4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m3,align 8
%m5=bitcast i8*%m1 to i8**
%m6=load i8*,i8**%m5,align 8
%m7=load i8*,i8**%aO,align 8
%m8=getelementptr inbounds i8,i8*%m7,i64 16
%m9=bitcast i8*%m8 to i8**
%na=load i8*,i8**%m9,align 8
%nb=call fastcc i8*%m4(i8*inreg%m6,i8*inreg%na)
store i8*%nb,i8**%aL,align 8
%nc=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nd=getelementptr inbounds i8,i8*%nc,i64 16
%ne=bitcast i8*%nd to i8*(i8*,i8*)**
%nf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ne,align 8
%ng=bitcast i8*%nc to i8**
%nh=load i8*,i8**%ng,align 8
%ni=call fastcc i8*%nf(i8*inreg%nh,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iq,i64 0,i32 2)to i8*))
%nj=getelementptr inbounds i8,i8*%ni,i64 16
%nk=bitcast i8*%nj to i8*(i8*,i8*)**
%nl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nk,align 8
%nm=bitcast i8*%ni to i8**
%nn=load i8*,i8**%nm,align 8
%no=load i8*,i8**%aO,align 8
%np=getelementptr inbounds i8,i8*%no,i64 40
%nq=bitcast i8*%np to i8**
%nr=load i8*,i8**%nq,align 8
%ns=call fastcc i8*%nl(i8*inreg%nn,i8*inreg%nr)
store i8*%ns,i8**%aM,align 8
%nt=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nu=getelementptr inbounds i8,i8*%nt,i64 16
%nv=bitcast i8*%nu to i8*(i8*,i8*)**
%nw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nv,align 8
%nx=bitcast i8*%nt to i8**
%ny=load i8*,i8**%nx,align 8
%nz=call fastcc i8*%nw(i8*inreg%ny,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ir,i64 0,i32 2)to i8*))
%nA=getelementptr inbounds i8,i8*%nz,i64 16
%nB=bitcast i8*%nA to i8*(i8*,i8*)**
%nC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nB,align 8
%nD=bitcast i8*%nz to i8**
%nE=load i8*,i8**%nD,align 8
%nF=load i8*,i8**%aO,align 8
%nG=getelementptr inbounds i8,i8*%nF,i64 24
%nH=bitcast i8*%nG to i8**
%nI=load i8*,i8**%nH,align 8
%nJ=call fastcc i8*%nC(i8*inreg%nE,i8*inreg%nI)
store i8*%nJ,i8**%aN,align 8
%nK=call i8*@sml_alloc(i32 inreg 52)#0
%nL=getelementptr inbounds i8,i8*%nK,i64 -4
%nM=bitcast i8*%nL to i32*
store i32 1342177328,i32*%nM,align 4
%nN=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%nO=bitcast i8*%nK to i8**
store i8*%nN,i8**%nO,align 8
%nP=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%nQ=getelementptr inbounds i8,i8*%nK,i64 8
%nR=bitcast i8*%nQ to i8**
store i8*%nP,i8**%nR,align 8
%nS=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%nT=getelementptr inbounds i8,i8*%nK,i64 16
%nU=bitcast i8*%nT to i8**
store i8*%nS,i8**%nU,align 8
%nV=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%nW=getelementptr inbounds i8,i8*%nK,i64 24
%nX=bitcast i8*%nW to i8**
store i8*%nV,i8**%nX,align 8
%nY=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%nZ=getelementptr inbounds i8,i8*%nK,i64 32
%n0=bitcast i8*%nZ to i8**
store i8*%nY,i8**%n0,align 8
%n1=load i8*,i8**%aN,align 8
store i8*null,i8**%aN,align 8
%n2=getelementptr inbounds i8,i8*%nK,i64 40
%n3=bitcast i8*%n2 to i8**
store i8*%n1,i8**%n3,align 8
%n4=getelementptr inbounds i8,i8*%nK,i64 48
%n5=bitcast i8*%n4 to i32*
store i32 63,i32*%n5,align 4
%n6=bitcast i8**%ad to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n6)
%n7=bitcast i8**%ae to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n7)
%n8=bitcast i8**%af to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n8)
%n9=bitcast i8**%ag to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%n9)
%oa=bitcast i8**%ah to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%oa)
%ob=bitcast i8**%ai to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ob)
%oc=bitcast i8**%aj to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%oc)
%od=bitcast i8**%ak to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%od)
%oe=bitcast i8**%al to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%oe)
call void@llvm.gcroot(i8**%ad,i8*null)#0
call void@llvm.gcroot(i8**%ae,i8*null)#0
call void@llvm.gcroot(i8**%af,i8*null)#0
call void@llvm.gcroot(i8**%ag,i8*null)#0
call void@llvm.gcroot(i8**%ah,i8*null)#0
call void@llvm.gcroot(i8**%ai,i8*null)#0
call void@llvm.gcroot(i8**%aj,i8*null)#0
call void@llvm.gcroot(i8**%ak,i8*null)#0
call void@llvm.gcroot(i8**%al,i8*null)#0
store i8*%nK,i8**%ad,align 8
%of=load atomic i32,i32*@sml_check_flag unordered,align 4
%og=icmp eq i32%of,0
br i1%og,label%ol,label%oh
oh:
call void@sml_check(i32 inreg%of)
%oi=bitcast i8**%ad to i8***
%oj=load i8**,i8***%oi,align 8
%ok=load i8*,i8**%oj,align 8
br label%ol
ol:
%om=phi i8*[%ok,%oh],[%nN,%mr]
%on=phi i8**[%oj,%oh],[%nO,%mr]
store i8*%om,i8**%ai,align 8
%oo=getelementptr inbounds i8*,i8**%on,i64 1
%op=load i8*,i8**%oo,align 8
store i8*%op,i8**%aj,align 8
%oq=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ez,i64 0,i32 2)to i8*))
%or=getelementptr inbounds i8,i8*%oq,i64 16
%os=bitcast i8*%or to i8*(i8*,i8*)**
%ot=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%os,align 8
%ou=bitcast i8*%oq to i8**
%ov=load i8*,i8**%ou,align 8
store i8*%ov,i8**%ak,align 8
%ow=load i8*,i8**%ad,align 8
%ox=getelementptr inbounds i8,i8*%ow,i64 16
%oy=bitcast i8*%ox to i8**
%oz=load i8*,i8**%oy,align 8
%oA=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%oz)
store i8*%oA,i8**%ah,align 8
%oB=load i8*,i8**%ad,align 8
%oC=getelementptr inbounds i8,i8*%oB,i64 24
%oD=bitcast i8*%oC to i8**
%oE=load i8*,i8**%oD,align 8
%oF=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%oE)
store i8*%oF,i8**%ag,align 8
%oG=load i8*,i8**%ad,align 8
%oH=getelementptr inbounds i8,i8*%oG,i64 32
%oI=bitcast i8*%oH to i8**
%oJ=load i8*,i8**%oI,align 8
%oK=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%oJ)
store i8*%oK,i8**%af,align 8
%oL=load i8*,i8**%ad,align 8
store i8*null,i8**%ad,align 8
%oM=getelementptr inbounds i8,i8*%oL,i64 40
%oN=bitcast i8*%oM to i8**
%oO=load i8*,i8**%oN,align 8
%oP=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%oO)
store i8*%oP,i8**%ad,align 8
%oQ=call i8*@sml_alloc(i32 inreg 20)#0
%oR=getelementptr inbounds i8,i8*%oQ,i64 -4
%oS=bitcast i8*%oR to i32*
store i32 1342177296,i32*%oS,align 4
%oT=load i8*,i8**%ad,align 8
%oU=bitcast i8*%oQ to i8**
store i8*%oT,i8**%oU,align 8
%oV=getelementptr inbounds i8,i8*%oQ,i64 8
%oW=bitcast i8*%oV to i8**
store i8*null,i8**%oW,align 8
%oX=getelementptr inbounds i8,i8*%oQ,i64 16
%oY=bitcast i8*%oX to i32*
store i32 3,i32*%oY,align 4
store i8*null,i8**%ae,align 8
%oZ=call i8*@sml_alloc(i32 inreg 20)#0
%o0=getelementptr inbounds i8,i8*%oZ,i64 -4
%o1=bitcast i8*%o0 to i32*
store i32 1342177296,i32*%o1,align 4
store i8*%oZ,i8**%al,align 8
%o2=load i8*,i8**%ad,align 8
store i8*null,i8**%ad,align 8
%o3=bitcast i8*%oZ to i8**
store i8*%o2,i8**%o3,align 8
%o4=load i8*,i8**%ae,align 8
store i8*null,i8**%ae,align 8
%o5=getelementptr inbounds i8,i8*%oZ,i64 8
%o6=bitcast i8*%o5 to i8**
store i8*%o4,i8**%o6,align 8
%o7=getelementptr inbounds i8,i8*%oZ,i64 16
%o8=bitcast i8*%o7 to i32*
store i32 3,i32*%o8,align 4
%o9=call i8*@sml_alloc(i32 inreg 20)#0
%pa=getelementptr inbounds i8,i8*%o9,i64 -4
%pb=bitcast i8*%pa to i32*
store i32 1342177296,i32*%pb,align 4
store i8*%o9,i8**%ad,align 8
%pc=load i8*,i8**%af,align 8
store i8*null,i8**%af,align 8
%pd=bitcast i8*%o9 to i8**
store i8*%pc,i8**%pd,align 8
%pe=load i8*,i8**%al,align 8
store i8*null,i8**%al,align 8
%pf=getelementptr inbounds i8,i8*%o9,i64 8
%pg=bitcast i8*%pf to i8**
store i8*%pe,i8**%pg,align 8
%ph=getelementptr inbounds i8,i8*%o9,i64 16
%pi=bitcast i8*%ph to i32*
store i32 3,i32*%pi,align 4
%pj=call i8*@sml_alloc(i32 inreg 20)#0
%pk=getelementptr inbounds i8,i8*%pj,i64 -4
%pl=bitcast i8*%pk to i32*
store i32 1342177296,i32*%pl,align 4
store i8*%pj,i8**%ae,align 8
%pm=load i8*,i8**%ag,align 8
store i8*null,i8**%ag,align 8
%pn=bitcast i8*%pj to i8**
store i8*%pm,i8**%pn,align 8
%po=load i8*,i8**%ad,align 8
store i8*null,i8**%ad,align 8
%pp=getelementptr inbounds i8,i8*%pj,i64 8
%pq=bitcast i8*%pp to i8**
store i8*%po,i8**%pq,align 8
%pr=getelementptr inbounds i8,i8*%pj,i64 16
%ps=bitcast i8*%pr to i32*
store i32 3,i32*%ps,align 4
%pt=call i8*@sml_alloc(i32 inreg 20)#0
%pu=getelementptr inbounds i8,i8*%pt,i64 -4
%pv=bitcast i8*%pu to i32*
store i32 1342177296,i32*%pv,align 4
store i8*%pt,i8**%ad,align 8
%pw=load i8*,i8**%ah,align 8
store i8*null,i8**%ah,align 8
%px=bitcast i8*%pt to i8**
store i8*%pw,i8**%px,align 8
%py=load i8*,i8**%ae,align 8
store i8*null,i8**%ae,align 8
%pz=getelementptr inbounds i8,i8*%pt,i64 8
%pA=bitcast i8*%pz to i8**
store i8*%py,i8**%pA,align 8
%pB=getelementptr inbounds i8,i8*%pt,i64 16
%pC=bitcast i8*%pB to i32*
store i32 3,i32*%pC,align 4
%pD=call i8*@sml_alloc(i32 inreg 20)#0
%pE=getelementptr inbounds i8,i8*%pD,i64 -4
%pF=bitcast i8*%pE to i32*
store i32 1342177296,i32*%pF,align 4
store i8*%pD,i8**%ae,align 8
%pG=load i8*,i8**%aj,align 8
store i8*null,i8**%aj,align 8
%pH=bitcast i8*%pD to i8**
store i8*%pG,i8**%pH,align 8
%pI=load i8*,i8**%ad,align 8
store i8*null,i8**%ad,align 8
%pJ=getelementptr inbounds i8,i8*%pD,i64 8
%pK=bitcast i8*%pJ to i8**
store i8*%pI,i8**%pK,align 8
%pL=getelementptr inbounds i8,i8*%pD,i64 16
%pM=bitcast i8*%pL to i32*
store i32 3,i32*%pM,align 4
%pN=call i8*@sml_alloc(i32 inreg 20)#0
%pO=getelementptr inbounds i8,i8*%pN,i64 -4
%pP=bitcast i8*%pO to i32*
store i32 1342177296,i32*%pP,align 4
%pQ=load i8*,i8**%ai,align 8
%pR=bitcast i8*%pN to i8**
store i8*%pQ,i8**%pR,align 8
%pS=load i8*,i8**%ae,align 8
%pT=getelementptr inbounds i8,i8*%pN,i64 8
%pU=bitcast i8*%pT to i8**
store i8*%pS,i8**%pU,align 8
%pV=getelementptr inbounds i8,i8*%pN,i64 16
%pW=bitcast i8*%pV to i32*
store i32 3,i32*%pW,align 4
%pX=load i8*,i8**%ak,align 8
%pY=call fastcc i8*%ot(i8*inreg%pX,i8*inreg%pN)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n6)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n7)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%n9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%oa)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ob)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%oc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%od)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%oe)
store i8*%pY,i8**%aI,align 8
%pZ=call i8*@sml_alloc(i32 inreg 20)#0
%p0=getelementptr inbounds i8,i8*%pZ,i64 -4
%p1=bitcast i8*%p0 to i32*
store i32 1342177296,i32*%p1,align 4
store i8*%pZ,i8**%aJ,align 8
%p2=load i8*,i8**%aO,align 8
store i8*null,i8**%aO,align 8
%p3=bitcast i8*%pZ to i8**
store i8*%p2,i8**%p3,align 8
%p4=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%p5=getelementptr inbounds i8,i8*%pZ,i64 8
%p6=bitcast i8*%p5 to i8**
store i8*%p4,i8**%p6,align 8
%p7=getelementptr inbounds i8,i8*%pZ,i64 16
%p8=bitcast i8*%p7 to i32*
store i32 3,i32*%p8,align 4
%p9=call i8*@sml_alloc(i32 inreg 28)#0
%qa=getelementptr inbounds i8,i8*%p9,i64 -4
%qb=bitcast i8*%qa to i32*
store i32 1342177304,i32*%qb,align 4
%qc=load i8*,i8**%aJ,align 8
%qd=bitcast i8*%p9 to i8**
store i8*%qc,i8**%qd,align 8
%qe=getelementptr inbounds i8,i8*%p9,i64 8
%qf=bitcast i8*%qe to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2392 to void(...)*),void(...)**%qf,align 8
%qg=getelementptr inbounds i8,i8*%p9,i64 16
%qh=bitcast i8*%qg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2392 to void(...)*),void(...)**%qh,align 8
%qi=getelementptr inbounds i8,i8*%p9,i64 24
%qj=bitcast i8*%qi to i32*
store i32 -2147483647,i32*%qj,align 4
ret i8*%p9
qk:
%ql=getelementptr inbounds i8,i8*%aZ,i64 8
%qm=bitcast i8*%ql to i8**
%qn=load i8*,i8**%qm,align 8
store i8*%qn,i8**%aK,align 8
%qo=bitcast i8*%qn to i8**
%qp=load i8*,i8**%qo,align 8
%qq=bitcast i8**%ac to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%qq)
call void@llvm.gcroot(i8**%ac,i8*null)#0
store i8*%qp,i8**%ac,align 8
%qr=load atomic i32,i32*@sml_check_flag unordered,align 4
%qs=icmp eq i32%qr,0
br i1%qs,label%qv,label%qt
qt:
call void@sml_check(i32 inreg%qr)
%qu=load i8*,i8**%ac,align 8
br label%qv
qv:
%qw=phi i8*[%qu,%qt],[%qp,%qk]
store i8*null,i8**%ac,align 8
%qx=icmp eq i8*%qw,null
br i1%qx,label%qy,label%qz
qy:
call void@llvm.lifetime.end.p0i8(i64 8,i8*%qq)
br label%qN
qz:
%qA=bitcast i8*%qw to i32*
%qB=load i32,i32*%qA,align 4
%qC=icmp eq i32%qB,0
%qD=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
%qE=getelementptr inbounds i8,i8*%qD,i64 16
%qF=bitcast i8*%qE to i8*(i8*,i8*)**
%qG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qF,align 8
%qH=bitcast i8*%qD to i8**
%qI=load i8*,i8**%qH,align 8
br i1%qC,label%qL,label%qJ
qJ:
%qK=call fastcc i8*%qG(i8*inreg%qI,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hX,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%qq)
br label%qN
qL:
%qM=call fastcc i8*%qG(i8*inreg%qI,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hV,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%qq)
br label%qN
qN:
%qO=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hY,i64 0,i32 2)to i8*),%qy],[%qK,%qJ],[%qM,%qL]
store i8*%qO,i8**%aI,align 8
%qP=load i8*,i8**%aK,align 8
%qQ=getelementptr inbounds i8,i8*%qP,i64 8
%qR=bitcast i8*%qQ to i8***
%qS=load i8**,i8***%qR,align 8
%qT=load i8*,i8**%qS,align 8
%qU=call fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2149(i8*inreg%qT)
store i8*%qU,i8**%aJ,align 8
%qV=call i8*@sml_alloc(i32 inreg 20)#0
%qW=getelementptr inbounds i8,i8*%qV,i64 -4
%qX=bitcast i8*%qW to i32*
store i32 1342177296,i32*%qX,align 4
%qY=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%qZ=bitcast i8*%qV to i8**
store i8*%qY,i8**%qZ,align 8
%q0=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%q1=getelementptr inbounds i8,i8*%qV,i64 8
%q2=bitcast i8*%q1 to i8**
store i8*%q0,i8**%q2,align 8
%q3=getelementptr inbounds i8,i8*%qV,i64 16
%q4=bitcast i8*%q3 to i32*
store i32 3,i32*%q4,align 4
%q5=bitcast i8**%X to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q5)
%q6=bitcast i8**%Y to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q6)
%q7=bitcast i8**%Z to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q7)
%q8=bitcast i8**%aa to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q8)
%q9=bitcast i8**%ab to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%q9)
call void@llvm.gcroot(i8**%X,i8*null)#0
call void@llvm.gcroot(i8**%Y,i8*null)#0
call void@llvm.gcroot(i8**%Z,i8*null)#0
call void@llvm.gcroot(i8**%aa,i8*null)#0
call void@llvm.gcroot(i8**%ab,i8*null)#0
store i8*%qV,i8**%X,align 8
%ra=load atomic i32,i32*@sml_check_flag unordered,align 4
%rb=icmp eq i32%ra,0
br i1%rb,label%rg,label%rc
rc:
call void@sml_check(i32 inreg%ra)
%rd=bitcast i8**%X to i8***
%re=load i8**,i8***%rd,align 8
%rf=load i8*,i8**%re,align 8
br label%rg
rg:
%rh=phi i8*[%rf,%rc],[%qY,%qN]
store i8*%rh,i8**%Z,align 8
%ri=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ev,i64 0,i32 2)to i8*))
%rj=getelementptr inbounds i8,i8*%ri,i64 16
%rk=bitcast i8*%rj to i8*(i8*,i8*)**
%rl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rk,align 8
%rm=bitcast i8*%ri to i8**
%rn=load i8*,i8**%rm,align 8
store i8*%rn,i8**%aa,align 8
%ro=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%rp=getelementptr inbounds i8,i8*%ro,i64 16
%rq=bitcast i8*%rp to i8*(i8*,i8*)**
%rr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rq,align 8
%rs=bitcast i8*%ro to i8**
%rt=load i8*,i8**%rs,align 8
%ru=call fastcc i8*%rr(i8*inreg%rt,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gr,i64 0,i32 2)to i8*))
%rv=getelementptr inbounds i8,i8*%ru,i64 16
%rw=bitcast i8*%rv to i8*(i8*,i8*)**
%rx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rw,align 8
%ry=bitcast i8*%ru to i8**
%rz=load i8*,i8**%ry,align 8
%rA=load i8*,i8**%X,align 8
store i8*null,i8**%X,align 8
%rB=getelementptr inbounds i8,i8*%rA,i64 8
%rC=bitcast i8*%rB to i8**
%rD=load i8*,i8**%rC,align 8
%rE=call fastcc i8*%rx(i8*inreg%rz,i8*inreg%rD)
%rF=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%rE)
store i8*%rF,i8**%X,align 8
%rG=call i8*@sml_alloc(i32 inreg 20)#0
%rH=getelementptr inbounds i8,i8*%rG,i64 -4
%rI=bitcast i8*%rH to i32*
store i32 1342177296,i32*%rI,align 4
%rJ=load i8*,i8**%X,align 8
%rK=bitcast i8*%rG to i8**
store i8*%rJ,i8**%rK,align 8
%rL=getelementptr inbounds i8,i8*%rG,i64 8
%rM=bitcast i8*%rL to i8**
store i8*null,i8**%rM,align 8
%rN=getelementptr inbounds i8,i8*%rG,i64 16
%rO=bitcast i8*%rN to i32*
store i32 3,i32*%rO,align 4
store i8*null,i8**%Y,align 8
%rP=call i8*@sml_alloc(i32 inreg 20)#0
%rQ=getelementptr inbounds i8,i8*%rP,i64 -4
%rR=bitcast i8*%rQ to i32*
store i32 1342177296,i32*%rR,align 4
store i8*%rP,i8**%ab,align 8
%rS=load i8*,i8**%X,align 8
store i8*null,i8**%X,align 8
%rT=bitcast i8*%rP to i8**
store i8*%rS,i8**%rT,align 8
%rU=load i8*,i8**%Y,align 8
store i8*null,i8**%Y,align 8
%rV=getelementptr inbounds i8,i8*%rP,i64 8
%rW=bitcast i8*%rV to i8**
store i8*%rU,i8**%rW,align 8
%rX=getelementptr inbounds i8,i8*%rP,i64 16
%rY=bitcast i8*%rX to i32*
store i32 3,i32*%rY,align 4
%rZ=call i8*@sml_alloc(i32 inreg 20)#0
%r0=getelementptr inbounds i8,i8*%rZ,i64 -4
%r1=bitcast i8*%r0 to i32*
store i32 1342177296,i32*%r1,align 4
%r2=load i8*,i8**%Z,align 8
%r3=bitcast i8*%rZ to i8**
store i8*%r2,i8**%r3,align 8
%r4=load i8*,i8**%ab,align 8
%r5=getelementptr inbounds i8,i8*%rZ,i64 8
%r6=bitcast i8*%r5 to i8**
store i8*%r4,i8**%r6,align 8
%r7=getelementptr inbounds i8,i8*%rZ,i64 16
%r8=bitcast i8*%r7 to i32*
store i32 3,i32*%r8,align 4
%r9=load i8*,i8**%aa,align 8
%sa=call fastcc i8*%rl(i8*inreg%r9,i8*inreg%rZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q5)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q6)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q7)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%q9)
store i8*%sa,i8**%aI,align 8
%sb=call i8*@sml_alloc(i32 inreg 20)#0
%sc=getelementptr inbounds i8,i8*%sb,i64 -4
%sd=bitcast i8*%sc to i32*
store i32 1342177296,i32*%sd,align 4
store i8*%sb,i8**%aJ,align 8
%se=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%sf=bitcast i8*%sb to i8**
store i8*%se,i8**%sf,align 8
%sg=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%sh=getelementptr inbounds i8,i8*%sb,i64 8
%si=bitcast i8*%sh to i8**
store i8*%sg,i8**%si,align 8
%sj=getelementptr inbounds i8,i8*%sb,i64 16
%sk=bitcast i8*%sj to i32*
store i32 3,i32*%sk,align 4
%sl=call i8*@sml_alloc(i32 inreg 28)#0
%sm=getelementptr inbounds i8,i8*%sl,i64 -4
%sn=bitcast i8*%sm to i32*
store i32 1342177304,i32*%sn,align 4
%so=load i8*,i8**%aJ,align 8
%sp=bitcast i8*%sl to i8**
store i8*%so,i8**%sp,align 8
%sq=getelementptr inbounds i8,i8*%sl,i64 8
%sr=bitcast i8*%sq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2383 to void(...)*),void(...)**%sr,align 8
%ss=getelementptr inbounds i8,i8*%sl,i64 16
%st=bitcast i8*%ss to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2383 to void(...)*),void(...)**%st,align 8
%su=getelementptr inbounds i8,i8*%sl,i64 24
%sv=bitcast i8*%su to i32*
store i32 -2147483647,i32*%sv,align 4
ret i8*%sl
sw:
%sx=getelementptr inbounds i8,i8*%aZ,i64 8
%sy=bitcast i8*%sx to i8**
%sz=load i8*,i8**%sy,align 8
store i8*%sz,i8**%aK,align 8
%sA=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%sB=getelementptr inbounds i8,i8*%sA,i64 16
%sC=bitcast i8*%sB to i8*(i8*,i8*)**
%sD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sC,align 8
%sE=bitcast i8*%sA to i8**
%sF=load i8*,i8**%sE,align 8
store i8*%sF,i8**%aL,align 8
%sG=call i8*@sml_alloc(i32 inreg 12)#0
%sH=getelementptr inbounds i8,i8*%sG,i64 -4
%sI=bitcast i8*%sH to i32*
store i32 1342177288,i32*%sI,align 4
store i8*%sG,i8**%aI,align 8
%sJ=load i8*,i8**%aK,align 8
%sK=bitcast i8*%sG to i8**
store i8*%sJ,i8**%sK,align 8
%sL=getelementptr inbounds i8,i8*%sG,i64 8
%sM=bitcast i8*%sL to i32*
store i32 1,i32*%sM,align 4
%sN=call i8*@sml_alloc(i32 inreg 28)#0
%sO=getelementptr inbounds i8,i8*%sN,i64 -4
%sP=bitcast i8*%sO to i32*
store i32 1342177304,i32*%sP,align 4
store i8*%sN,i8**%aJ,align 8
%sQ=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%sR=bitcast i8*%sN to i8**
store i8*%sQ,i8**%sR,align 8
%sS=getelementptr inbounds i8,i8*%sN,i64 8
%sT=bitcast i8*%sS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2377 to void(...)*),void(...)**%sT,align 8
%sU=getelementptr inbounds i8,i8*%sN,i64 16
%sV=bitcast i8*%sU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2377 to void(...)*),void(...)**%sV,align 8
%sW=getelementptr inbounds i8,i8*%sN,i64 24
%sX=bitcast i8*%sW to i32*
store i32 -2147483647,i32*%sX,align 4
%sY=call i8*@sml_alloc(i32 inreg 20)#0
%sZ=getelementptr inbounds i8,i8*%sY,i64 -4
%s0=bitcast i8*%sZ to i32*
store i32 1342177296,i32*%s0,align 4
%s1=load i8*,i8**%aJ,align 8
%s2=bitcast i8*%sY to i8**
store i8*%s1,i8**%s2,align 8
%s3=getelementptr inbounds i8,i8*%sY,i64 8
%s4=bitcast i8*%s3 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@in,i64 0,i32 2)to i8*),i8**%s4,align 8
%s5=getelementptr inbounds i8,i8*%sY,i64 16
%s6=bitcast i8*%s5 to i32*
store i32 3,i32*%s6,align 4
store i8*%s1,i8**%aI,align 8
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@in,i64 0,i32 2)to i8*),i8**%aJ,align 8
%s7=call i8*@sml_alloc(i32 inreg 20)#0
%s8=getelementptr inbounds i8,i8*%s7,i64 -4
%s9=bitcast i8*%s8 to i32*
store i32 1342177296,i32*%s9,align 4
store i8*%s7,i8**%aM,align 8
%ta=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%tb=bitcast i8*%s7 to i8**
store i8*%ta,i8**%tb,align 8
%tc=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%td=getelementptr inbounds i8,i8*%s7,i64 8
%te=bitcast i8*%td to i8**
store i8*%tc,i8**%te,align 8
%tf=getelementptr inbounds i8,i8*%s7,i64 16
%tg=bitcast i8*%tf to i32*
store i32 3,i32*%tg,align 4
%th=call i8*@sml_alloc(i32 inreg 28)#0
%ti=getelementptr inbounds i8,i8*%th,i64 -4
%tj=bitcast i8*%ti to i32*
store i32 1342177304,i32*%tj,align 4
%tk=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%tl=bitcast i8*%th to i8**
store i8*%tk,i8**%tl,align 8
%tm=getelementptr inbounds i8,i8*%th,i64 8
%tn=bitcast i8*%tm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2380 to void(...)*),void(...)**%tn,align 8
%to=getelementptr inbounds i8,i8*%th,i64 16
%tp=bitcast i8*%to to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2380 to void(...)*),void(...)**%tp,align 8
%tq=getelementptr inbounds i8,i8*%th,i64 24
%tr=bitcast i8*%tq to i32*
store i32 -2147483647,i32*%tr,align 4
%ts=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%tt=call fastcc i8*%sD(i8*inreg%ts,i8*inreg%th)
%tu=getelementptr inbounds i8,i8*%tt,i64 16
%tv=bitcast i8*%tu to i8*(i8*,i8*)**
%tw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tv,align 8
%tx=bitcast i8*%tt to i8**
%ty=load i8*,i8**%tx,align 8
%tz=bitcast i8**%aK to i8****
%tA=load i8***,i8****%tz,align 8
%tB=load i8**,i8***%tA,align 8
%tC=load i8*,i8**%tB,align 8
%tD=call fastcc i8*%tw(i8*inreg%ty,i8*inreg%tC)
store i8*%tD,i8**%aI,align 8
%tE=load i8*,i8**%aK,align 8
%tF=getelementptr inbounds i8,i8*%tE,i64 16
%tG=bitcast i8*%tF to i8**
%tH=load i8*,i8**%tG,align 8
%tI=icmp eq i8*%tH,null
br i1%tI,label%uh,label%tJ
tJ:
%tK=bitcast i8*%tH to i8**
%tL=load i8*,i8**%tK,align 8
store i8*%tL,i8**%aJ,align 8
%tM=bitcast i8*%tL to i8**
%tN=load i8*,i8**%tM,align 8
%tO=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%tN)
store i8*%tO,i8**%aL,align 8
%tP=call i8*@sml_alloc(i32 inreg 20)#0
%tQ=getelementptr inbounds i8,i8*%tP,i64 -4
%tR=bitcast i8*%tQ to i32*
store i32 1342177296,i32*%tR,align 4
store i8*%tP,i8**%aM,align 8
%tS=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%tT=bitcast i8*%tP to i8**
store i8*%tS,i8**%tT,align 8
%tU=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%tV=getelementptr inbounds i8,i8*%tP,i64 8
%tW=bitcast i8*%tV to i8**
store i8*%tU,i8**%tW,align 8
%tX=getelementptr inbounds i8,i8*%tP,i64 16
%tY=bitcast i8*%tX to i32*
store i32 3,i32*%tY,align 4
%tZ=call i8*@sml_alloc(i32 inreg 28)#0
%t0=getelementptr inbounds i8,i8*%tZ,i64 -4
%t1=bitcast i8*%t0 to i32*
store i32 1342177304,i32*%t1,align 4
store i8*%tZ,i8**%aJ,align 8
%t2=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%t3=bitcast i8*%tZ to i8**
store i8*%t2,i8**%t3,align 8
%t4=getelementptr inbounds i8,i8*%tZ,i64 8
%t5=bitcast i8*%t4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2381 to void(...)*),void(...)**%t5,align 8
%t6=getelementptr inbounds i8,i8*%tZ,i64 16
%t7=bitcast i8*%t6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2381 to void(...)*),void(...)**%t7,align 8
%t8=getelementptr inbounds i8,i8*%tZ,i64 24
%t9=bitcast i8*%t8 to i32*
store i32 -2147483647,i32*%t9,align 4
%ua=call i8*@sml_alloc(i32 inreg 12)#0
%ub=getelementptr inbounds i8,i8*%ua,i64 -4
%uc=bitcast i8*%ub to i32*
store i32 1342177288,i32*%uc,align 4
%ud=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%ue=bitcast i8*%ua to i8**
store i8*%ud,i8**%ue,align 8
%uf=getelementptr inbounds i8,i8*%ua,i64 8
%ug=bitcast i8*%uf to i32*
store i32 1,i32*%ug,align 4
br label%uh
uh:
%ui=phi i8*[%ua,%tJ],[null,%sw]
store i8*%ui,i8**%aJ,align 8
%uj=call i8*@sml_alloc(i32 inreg 20)#0
%uk=getelementptr inbounds i8,i8*%uj,i64 -4
%ul=bitcast i8*%uk to i32*
store i32 1342177296,i32*%ul,align 4
%um=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%un=bitcast i8*%uj to i8**
store i8*%um,i8**%un,align 8
%uo=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%up=getelementptr inbounds i8,i8*%uj,i64 8
%uq=bitcast i8*%up to i8**
store i8*%uo,i8**%uq,align 8
%ur=getelementptr inbounds i8,i8*%uj,i64 16
%us=bitcast i8*%ur to i32*
store i32 3,i32*%us,align 4
%ut=bitcast i8**%S to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ut)
%uu=bitcast i8**%T to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%uu)
%uv=bitcast i8**%U to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%uv)
%uw=bitcast i8**%V to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%uw)
%ux=bitcast i8**%W to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ux)
call void@llvm.gcroot(i8**%S,i8*null)#0
call void@llvm.gcroot(i8**%T,i8*null)#0
call void@llvm.gcroot(i8**%U,i8*null)#0
call void@llvm.gcroot(i8**%V,i8*null)#0
call void@llvm.gcroot(i8**%W,i8*null)#0
store i8*%uj,i8**%S,align 8
%uy=load atomic i32,i32*@sml_check_flag unordered,align 4
%uz=icmp eq i32%uy,0
br i1%uz,label%uB,label%uA
uA:
call void@sml_check(i32 inreg%uy)
br label%uB
uB:
%uC=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eb,i64 0,i32 2)to i8*))
%uD=getelementptr inbounds i8,i8*%uC,i64 16
%uE=bitcast i8*%uD to i8*(i8*,i8*)**
%uF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uE,align 8
%uG=bitcast i8*%uC to i8**
%uH=load i8*,i8**%uG,align 8
store i8*%uH,i8**%W,align 8
%uI=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@gp,i64 0,i32 2,i64 0))
store i8*%uI,i8**%T,align 8
%uJ=bitcast i8**%S to i8***
%uK=load i8**,i8***%uJ,align 8
%uL=load i8*,i8**%uK,align 8
%uM=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%uL)
store i8*%uM,i8**%U,align 8
%uN=call i8*@sml_alloc(i32 inreg 20)#0
%uO=getelementptr inbounds i8,i8*%uN,i64 -4
%uP=bitcast i8*%uO to i32*
store i32 1342177296,i32*%uP,align 4
store i8*%uN,i8**%V,align 8
%uQ=load i8*,i8**%T,align 8
store i8*null,i8**%T,align 8
%uR=bitcast i8*%uN to i8**
store i8*%uQ,i8**%uR,align 8
%uS=load i8*,i8**%U,align 8
store i8*null,i8**%U,align 8
%uT=getelementptr inbounds i8,i8*%uN,i64 8
%uU=bitcast i8*%uT to i8**
store i8*%uS,i8**%uU,align 8
%uV=getelementptr inbounds i8,i8*%uN,i64 16
%uW=bitcast i8*%uV to i32*
store i32 3,i32*%uW,align 4
%uX=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@gq,i64 0,i32 2,i64 0))
store i8*%uX,i8**%T,align 8
%uY=load i8*,i8**%S,align 8
store i8*null,i8**%S,align 8
%uZ=getelementptr inbounds i8,i8*%uY,i64 8
%u0=bitcast i8*%uZ to i8**
%u1=load i8*,i8**%u0,align 8
%u2=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%u1)
store i8*%u2,i8**%S,align 8
%u3=call i8*@sml_alloc(i32 inreg 20)#0
%u4=getelementptr inbounds i8,i8*%u3,i64 -4
%u5=bitcast i8*%u4 to i32*
store i32 1342177296,i32*%u5,align 4
store i8*%u3,i8**%U,align 8
%u6=load i8*,i8**%T,align 8
store i8*null,i8**%T,align 8
%u7=bitcast i8*%u3 to i8**
store i8*%u6,i8**%u7,align 8
%u8=load i8*,i8**%S,align 8
store i8*null,i8**%S,align 8
%u9=getelementptr inbounds i8,i8*%u3,i64 8
%va=bitcast i8*%u9 to i8**
store i8*%u8,i8**%va,align 8
%vb=getelementptr inbounds i8,i8*%u3,i64 16
%vc=bitcast i8*%vb to i32*
store i32 3,i32*%vc,align 4
%vd=call i8*@sml_alloc(i32 inreg 20)#0
%ve=getelementptr inbounds i8,i8*%vd,i64 -4
%vf=bitcast i8*%ve to i32*
store i32 1342177296,i32*%vf,align 4
%vg=load i8*,i8**%U,align 8
store i8*null,i8**%U,align 8
%vh=bitcast i8*%vd to i8**
store i8*%vg,i8**%vh,align 8
%vi=getelementptr inbounds i8,i8*%vd,i64 8
%vj=bitcast i8*%vi to i8**
store i8*null,i8**%vj,align 8
%vk=getelementptr inbounds i8,i8*%vd,i64 16
%vl=bitcast i8*%vk to i32*
store i32 3,i32*%vl,align 4
store i8*%vg,i8**%S,align 8
store i8*null,i8**%T,align 8
%vm=call i8*@sml_alloc(i32 inreg 20)#0
%vn=getelementptr inbounds i8,i8*%vm,i64 -4
%vo=bitcast i8*%vn to i32*
store i32 1342177296,i32*%vo,align 4
store i8*%vm,i8**%U,align 8
%vp=load i8*,i8**%S,align 8
store i8*null,i8**%S,align 8
%vq=bitcast i8*%vm to i8**
store i8*%vp,i8**%vq,align 8
%vr=load i8*,i8**%T,align 8
store i8*null,i8**%T,align 8
%vs=getelementptr inbounds i8,i8*%vm,i64 8
%vt=bitcast i8*%vs to i8**
store i8*%vr,i8**%vt,align 8
%vu=getelementptr inbounds i8,i8*%vm,i64 16
%vv=bitcast i8*%vu to i32*
store i32 3,i32*%vv,align 4
%vw=call i8*@sml_alloc(i32 inreg 20)#0
%vx=getelementptr inbounds i8,i8*%vw,i64 -4
%vy=bitcast i8*%vx to i32*
store i32 1342177296,i32*%vy,align 4
%vz=load i8*,i8**%V,align 8
store i8*null,i8**%V,align 8
%vA=bitcast i8*%vw to i8**
store i8*%vz,i8**%vA,align 8
%vB=load i8*,i8**%U,align 8
store i8*null,i8**%U,align 8
%vC=getelementptr inbounds i8,i8*%vw,i64 8
%vD=bitcast i8*%vC to i8**
store i8*%vB,i8**%vD,align 8
%vE=getelementptr inbounds i8,i8*%vw,i64 16
%vF=bitcast i8*%vE to i32*
store i32 3,i32*%vF,align 4
%vG=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%vw)
store i8*%vG,i8**%S,align 8
%vH=call i8*@sml_alloc(i32 inreg 20)#0
%vI=getelementptr inbounds i8,i8*%vH,i64 -4
%vJ=bitcast i8*%vI to i32*
store i32 1342177296,i32*%vJ,align 4
%vK=load i8*,i8**%S,align 8
%vL=bitcast i8*%vH to i8**
store i8*%vK,i8**%vL,align 8
%vM=getelementptr inbounds i8,i8*%vH,i64 8
%vN=bitcast i8*%vM to i8**
store i8*null,i8**%vN,align 8
%vO=getelementptr inbounds i8,i8*%vH,i64 16
%vP=bitcast i8*%vO to i32*
store i32 3,i32*%vP,align 4
store i8*null,i8**%T,align 8
%vQ=call i8*@sml_alloc(i32 inreg 20)#0
%vR=getelementptr inbounds i8,i8*%vQ,i64 -4
%vS=bitcast i8*%vR to i32*
store i32 1342177296,i32*%vS,align 4
%vT=load i8*,i8**%S,align 8
%vU=bitcast i8*%vQ to i8**
store i8*%vT,i8**%vU,align 8
%vV=load i8*,i8**%T,align 8
%vW=getelementptr inbounds i8,i8*%vQ,i64 8
%vX=bitcast i8*%vW to i8**
store i8*%vV,i8**%vX,align 8
%vY=getelementptr inbounds i8,i8*%vQ,i64 16
%vZ=bitcast i8*%vY to i32*
store i32 3,i32*%vZ,align 4
%v0=load i8*,i8**%W,align 8
%v1=call fastcc i8*%uF(i8*inreg%v0,i8*inreg%vQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ut)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%uu)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%uv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%uw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ux)
store i8*%v1,i8**%aI,align 8
%v2=call i8*@sml_alloc(i32 inreg 20)#0
%v3=getelementptr inbounds i8,i8*%v2,i64 -4
%v4=bitcast i8*%v3 to i32*
store i32 1342177296,i32*%v4,align 4
store i8*%v2,i8**%aJ,align 8
%v5=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%v6=bitcast i8*%v2 to i8**
store i8*%v5,i8**%v6,align 8
%v7=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%v8=getelementptr inbounds i8,i8*%v2,i64 8
%v9=bitcast i8*%v8 to i8**
store i8*%v7,i8**%v9,align 8
%wa=getelementptr inbounds i8,i8*%v2,i64 16
%wb=bitcast i8*%wa to i32*
store i32 3,i32*%wb,align 4
%wc=call i8*@sml_alloc(i32 inreg 28)#0
%wd=getelementptr inbounds i8,i8*%wc,i64 -4
%we=bitcast i8*%wd to i32*
store i32 1342177304,i32*%we,align 4
%wf=load i8*,i8**%aJ,align 8
%wg=bitcast i8*%wc to i8**
store i8*%wf,i8**%wg,align 8
%wh=getelementptr inbounds i8,i8*%wc,i64 8
%wi=bitcast i8*%wh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2382 to void(...)*),void(...)**%wi,align 8
%wj=getelementptr inbounds i8,i8*%wc,i64 16
%wk=bitcast i8*%wj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2382 to void(...)*),void(...)**%wk,align 8
%wl=getelementptr inbounds i8,i8*%wc,i64 24
%wm=bitcast i8*%wl to i32*
store i32 -2147483647,i32*%wm,align 4
ret i8*%wc
wn:
%wo=getelementptr inbounds i8,i8*%aZ,i64 8
%wp=bitcast i8*%wo to i8**
%wq=load i8*,i8**%wp,align 8
store i8*%wq,i8**%aL,align 8
%wr=getelementptr inbounds i8,i8*%wq,i64 16
%ws=bitcast i8*%wr to i8**
%wt=load i8*,i8**%ws,align 8
%wu=getelementptr inbounds i8,i8*%wt,i64 8
%wv=bitcast i8*%wu to i8**
%ww=load i8*,i8**%wv,align 8
store i8*%ww,i8**%aI,align 8
%wx=bitcast i8*%wt to i8**
%wy=load i8*,i8**%wx,align 8
%wz=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%wy)
store i8*%wz,i8**%aJ,align 8
%wA=call i8*@sml_alloc(i32 inreg 20)#0
%wB=getelementptr inbounds i8,i8*%wA,i64 -4
%wC=bitcast i8*%wB to i32*
store i32 1342177296,i32*%wC,align 4
store i8*%wA,i8**%aK,align 8
%wD=load i8*,i8**%aL,align 8
%wE=bitcast i8*%wA to i8**
store i8*%wD,i8**%wE,align 8
%wF=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%wG=getelementptr inbounds i8,i8*%wA,i64 8
%wH=bitcast i8*%wG to i8**
store i8*%wF,i8**%wH,align 8
%wI=getelementptr inbounds i8,i8*%wA,i64 16
%wJ=bitcast i8*%wI to i32*
store i32 3,i32*%wJ,align 4
%wK=call i8*@sml_alloc(i32 inreg 28)#0
%wL=getelementptr inbounds i8,i8*%wK,i64 -4
%wM=bitcast i8*%wL to i32*
store i32 1342177304,i32*%wM,align 4
store i8*%wK,i8**%aJ,align 8
%wN=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%wO=bitcast i8*%wK to i8**
store i8*%wN,i8**%wO,align 8
%wP=getelementptr inbounds i8,i8*%wK,i64 8
%wQ=bitcast i8*%wP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2369 to void(...)*),void(...)**%wQ,align 8
%wR=getelementptr inbounds i8,i8*%wK,i64 16
%wS=bitcast i8*%wR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2369 to void(...)*),void(...)**%wS,align 8
%wT=getelementptr inbounds i8,i8*%wK,i64 24
%wU=bitcast i8*%wT to i32*
store i32 -2147483647,i32*%wU,align 4
%wV=call i8*@sml_alloc(i32 inreg 20)#0
%wW=getelementptr inbounds i8,i8*%wV,i64 -4
%wX=bitcast i8*%wW to i32*
store i32 1342177296,i32*%wX,align 4
store i8*%wV,i8**%aK,align 8
%wY=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%wZ=bitcast i8*%wV to i8**
store i8*%wY,i8**%wZ,align 8
%w0=load i8*,i8**%aI,align 8
%w1=getelementptr inbounds i8,i8*%wV,i64 8
%w2=bitcast i8*%w1 to i8**
store i8*%w0,i8**%w2,align 8
%w3=getelementptr inbounds i8,i8*%wV,i64 16
%w4=bitcast i8*%w3 to i32*
store i32 3,i32*%w4,align 4
%w5=bitcast i8**%aL to i8***
%w6=load i8**,i8***%w5,align 8
%w7=load i8*,i8**%w6,align 8
%w8=icmp eq i8*%w7,null
br i1%w8,label%yF,label%w9
w9:
%xa=bitcast i8*%w7 to i8**
%xb=load i8*,i8**%xa,align 8
store i8*%xb,i8**%aM,align 8
%xc=bitcast i8*%xb to i8**
%xd=load i8*,i8**%xc,align 8
store i8*%xd,i8**%aN,align 8
%xe=getelementptr inbounds i8,i8*%xb,i64 16
%xf=bitcast i8*%xe to i8**
%xg=load i8*,i8**%xf,align 8
store i8*%xg,i8**%aO,align 8
%xh=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%xi=getelementptr inbounds i8,i8*%xh,i64 16
%xj=bitcast i8*%xi to i8*(i8*,i8*)**
%xk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xj,align 8
%xl=bitcast i8*%xh to i8**
%xm=load i8*,i8**%xl,align 8
store i8*%xm,i8**%aP,align 8
%xn=call i8*@sml_alloc(i32 inreg 12)#0
%xo=getelementptr inbounds i8,i8*%xn,i64 -4
%xp=bitcast i8*%xo to i32*
store i32 1342177288,i32*%xp,align 4
store i8*%xn,i8**%aI,align 8
%xq=load i8*,i8**%aM,align 8
%xr=bitcast i8*%xn to i8**
store i8*%xq,i8**%xr,align 8
%xs=getelementptr inbounds i8,i8*%xn,i64 8
%xt=bitcast i8*%xs to i32*
store i32 1,i32*%xt,align 4
%xu=call i8*@sml_alloc(i32 inreg 28)#0
%xv=getelementptr inbounds i8,i8*%xu,i64 -4
%xw=bitcast i8*%xv to i32*
store i32 1342177304,i32*%xw,align 4
store i8*%xu,i8**%aJ,align 8
%xx=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%xy=bitcast i8*%xu to i8**
store i8*%xx,i8**%xy,align 8
%xz=getelementptr inbounds i8,i8*%xu,i64 8
%xA=bitcast i8*%xz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2371 to void(...)*),void(...)**%xA,align 8
%xB=getelementptr inbounds i8,i8*%xu,i64 16
%xC=bitcast i8*%xB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2371 to void(...)*),void(...)**%xC,align 8
%xD=getelementptr inbounds i8,i8*%xu,i64 24
%xE=bitcast i8*%xD to i32*
store i32 -2147483647,i32*%xE,align 4
%xF=call i8*@sml_alloc(i32 inreg 20)#0
%xG=getelementptr inbounds i8,i8*%xF,i64 -4
%xH=bitcast i8*%xG to i32*
store i32 1342177296,i32*%xH,align 4
%xI=load i8*,i8**%aJ,align 8
%xJ=bitcast i8*%xF to i8**
store i8*%xI,i8**%xJ,align 8
%xK=getelementptr inbounds i8,i8*%xF,i64 8
%xL=bitcast i8*%xK to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@im,i64 0,i32 2)to i8*),i8**%xL,align 8
%xM=getelementptr inbounds i8,i8*%xF,i64 16
%xN=bitcast i8*%xM to i32*
store i32 3,i32*%xN,align 4
store i8*%xI,i8**%aI,align 8
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@im,i64 0,i32 2)to i8*),i8**%aJ,align 8
%xO=call i8*@sml_alloc(i32 inreg 20)#0
%xP=getelementptr inbounds i8,i8*%xO,i64 -4
%xQ=bitcast i8*%xP to i32*
store i32 1342177296,i32*%xQ,align 4
store i8*%xO,i8**%aQ,align 8
%xR=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%xS=bitcast i8*%xO to i8**
store i8*%xR,i8**%xS,align 8
%xT=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%xU=getelementptr inbounds i8,i8*%xO,i64 8
%xV=bitcast i8*%xU to i8**
store i8*%xT,i8**%xV,align 8
%xW=getelementptr inbounds i8,i8*%xO,i64 16
%xX=bitcast i8*%xW to i32*
store i32 3,i32*%xX,align 4
%xY=call i8*@sml_alloc(i32 inreg 28)#0
%xZ=getelementptr inbounds i8,i8*%xY,i64 -4
%x0=bitcast i8*%xZ to i32*
store i32 1342177304,i32*%x0,align 4
%x1=load i8*,i8**%aQ,align 8
store i8*null,i8**%aQ,align 8
%x2=bitcast i8*%xY to i8**
store i8*%x1,i8**%x2,align 8
%x3=getelementptr inbounds i8,i8*%xY,i64 8
%x4=bitcast i8*%x3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2374 to void(...)*),void(...)**%x4,align 8
%x5=getelementptr inbounds i8,i8*%xY,i64 16
%x6=bitcast i8*%x5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2374 to void(...)*),void(...)**%x6,align 8
%x7=getelementptr inbounds i8,i8*%xY,i64 24
%x8=bitcast i8*%x7 to i32*
store i32 -2147483647,i32*%x8,align 4
%x9=load i8*,i8**%aP,align 8
store i8*null,i8**%aP,align 8
%ya=call fastcc i8*%xk(i8*inreg%x9,i8*inreg%xY)
%yb=getelementptr inbounds i8,i8*%ya,i64 16
%yc=bitcast i8*%yb to i8*(i8*,i8*)**
%yd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yc,align 8
%ye=bitcast i8*%ya to i8**
%yf=load i8*,i8**%ye,align 8
%yg=load i8*,i8**%aM,align 8
store i8*null,i8**%aM,align 8
%yh=getelementptr inbounds i8,i8*%yg,i64 8
%yi=bitcast i8*%yh to i8**
%yj=load i8*,i8**%yi,align 8
%yk=call fastcc i8*%yd(i8*inreg%yf,i8*inreg%yj)
store i8*%yk,i8**%aI,align 8
%yl=call i8*@sml_alloc(i32 inreg 28)#0
%ym=getelementptr inbounds i8,i8*%yl,i64 -4
%yn=bitcast i8*%ym to i32*
store i32 1342177304,i32*%yn,align 4
store i8*%yl,i8**%aJ,align 8
%yo=load i8*,i8**%aN,align 8
store i8*null,i8**%aN,align 8
%yp=bitcast i8*%yl to i8**
store i8*%yo,i8**%yp,align 8
%yq=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%yr=getelementptr inbounds i8,i8*%yl,i64 8
%ys=bitcast i8*%yr to i8**
store i8*%yq,i8**%ys,align 8
%yt=load i8*,i8**%aO,align 8
store i8*null,i8**%aO,align 8
%yu=getelementptr inbounds i8,i8*%yl,i64 16
%yv=bitcast i8*%yu to i8**
store i8*%yt,i8**%yv,align 8
%yw=getelementptr inbounds i8,i8*%yl,i64 24
%yx=bitcast i8*%yw to i32*
store i32 7,i32*%yx,align 4
%yy=call i8*@sml_alloc(i32 inreg 12)#0
%yz=getelementptr inbounds i8,i8*%yy,i64 -4
%yA=bitcast i8*%yz to i32*
store i32 1342177288,i32*%yA,align 4
%yB=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%yC=bitcast i8*%yy to i8**
store i8*%yB,i8**%yC,align 8
%yD=getelementptr inbounds i8,i8*%yy,i64 8
%yE=bitcast i8*%yD to i32*
store i32 1,i32*%yE,align 4
br label%yF
yF:
%yG=phi i8*[%yy,%w9],[null,%wn]
store i8*%yG,i8**%aI,align 8
%yH=call i8*@sml_alloc(i32 inreg 20)#0
%yI=getelementptr inbounds i8,i8*%yH,i64 -4
%yJ=bitcast i8*%yI to i32*
store i32 1342177296,i32*%yJ,align 4
%yK=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%yL=bitcast i8*%yH to i8**
store i8*%yK,i8**%yL,align 8
%yM=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%yN=getelementptr inbounds i8,i8*%yH,i64 8
%yO=bitcast i8*%yN to i8**
store i8*%yM,i8**%yO,align 8
%yP=getelementptr inbounds i8,i8*%yH,i64 16
%yQ=bitcast i8*%yP to i32*
store i32 3,i32*%yQ,align 4
%yR=bitcast i8**%H to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yR)
%yS=bitcast i8**%I to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yS)
%yT=bitcast i8**%J to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yT)
%yU=bitcast i8**%K to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yU)
%yV=bitcast i8**%L to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yV)
%yW=bitcast i8**%M to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yW)
%yX=bitcast i8**%N to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yX)
%yY=bitcast i8**%O to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%yY)
call void@llvm.gcroot(i8**%H,i8*null)#0
call void@llvm.gcroot(i8**%I,i8*null)#0
call void@llvm.gcroot(i8**%J,i8*null)#0
call void@llvm.gcroot(i8**%K,i8*null)#0
call void@llvm.gcroot(i8**%L,i8*null)#0
call void@llvm.gcroot(i8**%M,i8*null)#0
call void@llvm.gcroot(i8**%N,i8*null)#0
call void@llvm.gcroot(i8**%O,i8*null)#0
store i8*%yH,i8**%H,align 8
%yZ=load atomic i32,i32*@sml_check_flag unordered,align 4
%y0=icmp eq i32%yZ,0
br i1%y0,label%y4,label%y1
y1:
call void@sml_check(i32 inreg%yZ)
%y2=load i8*,i8**%H,align 8
%y3=getelementptr inbounds i8,i8*%y2,i64 8
br label%y4
y4:
%y5=phi i8*[%y3,%y1],[%yN,%yF]
%y6=bitcast i8*%y5 to i8***
%y7=load i8**,i8***%y6,align 8
%y8=load i8*,i8**%y7,align 8
store i8*%y8,i8**%J,align 8
%y9=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d7,i64 0,i32 2)to i8*))
%za=getelementptr inbounds i8,i8*%y9,i64 16
%zb=bitcast i8*%za to i8*(i8*,i8*)**
%zc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zb,align 8
%zd=bitcast i8*%y9 to i8**
%ze=load i8*,i8**%zd,align 8
store i8*%ze,i8**%M,align 8
%zf=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@gq,i64 0,i32 2,i64 0))
store i8*%zf,i8**%I,align 8
%zg=call i8*@sml_alloc(i32 inreg 12)#0
%zh=getelementptr inbounds i8,i8*%zg,i64 -4
%zi=bitcast i8*%zh to i32*
store i32 1342177288,i32*%zi,align 4
store i8*%zg,i8**%K,align 8
%zj=load i8*,i8**%H,align 8
%zk=bitcast i8*%zg to i8**
store i8*%zj,i8**%zk,align 8
%zl=getelementptr inbounds i8,i8*%zg,i64 8
%zm=bitcast i8*%zl to i32*
store i32 1,i32*%zm,align 4
%zn=call i8*@sml_alloc(i32 inreg 28)#0
%zo=getelementptr inbounds i8,i8*%zn,i64 -4
%zp=bitcast i8*%zo to i32*
store i32 1342177304,i32*%zp,align 4
store i8*%zn,i8**%L,align 8
%zq=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%zr=bitcast i8*%zn to i8**
store i8*%zq,i8**%zr,align 8
%zs=getelementptr inbounds i8,i8*%zn,i64 8
%zt=bitcast i8*%zs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__OFFSETE_1404 to void(...)*),void(...)**%zt,align 8
%zu=getelementptr inbounds i8,i8*%zn,i64 16
%zv=bitcast i8*%zu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__OFFSETE_1404 to void(...)*),void(...)**%zv,align 8
%zw=getelementptr inbounds i8,i8*%zn,i64 24
%zx=bitcast i8*%zw to i32*
store i32 -2147483647,i32*%zx,align 4
%zy=call i8*@sml_alloc(i32 inreg 20)#0
%zz=getelementptr inbounds i8,i8*%zy,i64 -4
%zA=bitcast i8*%zz to i32*
store i32 1342177296,i32*%zA,align 4
%zB=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%zC=bitcast i8*%zy to i8**
store i8*%zB,i8**%zC,align 8
%zD=load i8*,i8**%L,align 8
store i8*null,i8**%L,align 8
%zE=getelementptr inbounds i8,i8*%zy,i64 8
%zF=bitcast i8*%zE to i8**
store i8*%zD,i8**%zF,align 8
%zG=getelementptr inbounds i8,i8*%zy,i64 16
%zH=bitcast i8*%zG to i32*
store i32 3,i32*%zH,align 4
%zI=call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%zy)
store i8*%zI,i8**%J,align 8
%zJ=call i8*@sml_alloc(i32 inreg 20)#0
%zK=getelementptr inbounds i8,i8*%zJ,i64 -4
%zL=bitcast i8*%zK to i32*
store i32 1342177296,i32*%zL,align 4
store i8*%zJ,i8**%L,align 8
%zM=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%zN=bitcast i8*%zJ to i8**
store i8*%zM,i8**%zN,align 8
%zO=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%zP=getelementptr inbounds i8,i8*%zJ,i64 8
%zQ=bitcast i8*%zP to i8**
store i8*%zO,i8**%zQ,align 8
%zR=getelementptr inbounds i8,i8*%zJ,i64 16
%zS=bitcast i8*%zR to i32*
store i32 3,i32*%zS,align 4
%zT=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@gn,i64 0,i32 2,i64 0))
store i8*%zT,i8**%K,align 8
%zU=bitcast i8**%H to i8***
%zV=load i8**,i8***%zU,align 8
%zW=load i8*,i8**%zV,align 8
%zX=icmp eq i8*%zW,null
br i1%zX,label%Bs,label%zY
zY:
%zZ=bitcast i8*%zW to i8**
%z0=load i8*,i8**%zZ,align 8
store i8*%z0,i8**%H,align 8
%z1=call i8*@sml_alloc(i32 inreg 12)#0
%z2=getelementptr inbounds i8,i8*%z1,i64 -4
%z3=bitcast i8*%z2 to i32*
store i32 1342177288,i32*%z3,align 4
store i8*%z1,i8**%I,align 8
%z4=load i8*,i8**%H,align 8
%z5=bitcast i8*%z1 to i8**
store i8*%z4,i8**%z5,align 8
%z6=getelementptr inbounds i8,i8*%z1,i64 8
%z7=bitcast i8*%z6 to i32*
store i32 1,i32*%z7,align 4
%z8=call i8*@sml_alloc(i32 inreg 28)#0
%z9=getelementptr inbounds i8,i8*%z8,i64 -4
%Aa=bitcast i8*%z9 to i32*
store i32 1342177304,i32*%Aa,align 4
store i8*%z8,i8**%N,align 8
%Ab=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%Ac=bitcast i8*%z8 to i8**
store i8*%Ab,i8**%Ac,align 8
%Ad=getelementptr inbounds i8,i8*%z8,i64 8
%Ae=bitcast i8*%Ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1406 to void(...)*),void(...)**%Ae,align 8
%Af=getelementptr inbounds i8,i8*%z8,i64 16
%Ag=bitcast i8*%Af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1406 to void(...)*),void(...)**%Ag,align 8
%Ah=getelementptr inbounds i8,i8*%z8,i64 24
%Ai=bitcast i8*%Ah to i32*
store i32 -2147483647,i32*%Ai,align 4
%Aj=load i8*,i8**%H,align 8
%Ak=getelementptr inbounds i8,i8*%Aj,i64 8
%Al=bitcast i8*%Ak to i8**
%Am=load i8*,i8**%Al,align 8
%An=call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1244(i8*inreg%Am)
store i8*%An,i8**%J,align 8
%Ao=call i8*@sml_alloc(i32 inreg 12)#0
%Ap=getelementptr inbounds i8,i8*%Ao,i64 -4
%Aq=bitcast i8*%Ap to i32*
store i32 1342177288,i32*%Aq,align 4
store i8*%Ao,i8**%I,align 8
%Ar=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%As=bitcast i8*%Ao to i8**
store i8*%Ar,i8**%As,align 8
%At=getelementptr inbounds i8,i8*%Ao,i64 8
%Au=bitcast i8*%At to i32*
store i32 1,i32*%Au,align 4
%Av=call i8*@sml_alloc(i32 inreg 28)#0
%Aw=getelementptr inbounds i8,i8*%Av,i64 -4
%Ax=bitcast i8*%Aw to i32*
store i32 1342177304,i32*%Ax,align 4
store i8*%Av,i8**%H,align 8
%Ay=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%Az=bitcast i8*%Av to i8**
store i8*%Ay,i8**%Az,align 8
%AA=getelementptr inbounds i8,i8*%Av,i64 8
%AB=bitcast i8*%AA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1407 to void(...)*),void(...)**%AB,align 8
%AC=getelementptr inbounds i8,i8*%Av,i64 16
%AD=bitcast i8*%AC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1407 to void(...)*),void(...)**%AD,align 8
%AE=getelementptr inbounds i8,i8*%Av,i64 24
%AF=bitcast i8*%AE to i32*
store i32 -2147483647,i32*%AF,align 4
%AG=call i8*@sml_alloc(i32 inreg 20)#0
%AH=getelementptr inbounds i8,i8*%AG,i64 -4
%AI=bitcast i8*%AH to i32*
store i32 1342177296,i32*%AI,align 4
%AJ=load i8*,i8**%H,align 8
%AK=bitcast i8*%AG to i8**
store i8*%AJ,i8**%AK,align 8
%AL=getelementptr inbounds i8,i8*%AG,i64 8
%AM=bitcast i8*%AL to i8**
store i8*null,i8**%AM,align 8
%AN=getelementptr inbounds i8,i8*%AG,i64 16
%AO=bitcast i8*%AN to i32*
store i32 3,i32*%AO,align 4
store i8*null,i8**%I,align 8
%AP=call i8*@sml_alloc(i32 inreg 20)#0
%AQ=getelementptr inbounds i8,i8*%AP,i64 -4
%AR=bitcast i8*%AQ to i32*
store i32 1342177296,i32*%AR,align 4
store i8*%AP,i8**%O,align 8
%AS=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%AT=bitcast i8*%AP to i8**
store i8*%AS,i8**%AT,align 8
%AU=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%AV=getelementptr inbounds i8,i8*%AP,i64 8
%AW=bitcast i8*%AV to i8**
store i8*%AU,i8**%AW,align 8
%AX=getelementptr inbounds i8,i8*%AP,i64 16
%AY=bitcast i8*%AX to i32*
store i32 3,i32*%AY,align 4
%AZ=call i8*@sml_alloc(i32 inreg 20)#0
%A0=getelementptr inbounds i8,i8*%AZ,i64 -4
%A1=bitcast i8*%A0 to i32*
store i32 1342177296,i32*%A1,align 4
store i8*%AZ,i8**%H,align 8
%A2=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%A3=bitcast i8*%AZ to i8**
store i8*%A2,i8**%A3,align 8
%A4=load i8*,i8**%O,align 8
store i8*null,i8**%O,align 8
%A5=getelementptr inbounds i8,i8*%AZ,i64 8
%A6=bitcast i8*%A5 to i8**
store i8*%A4,i8**%A6,align 8
%A7=getelementptr inbounds i8,i8*%AZ,i64 16
%A8=bitcast i8*%A7 to i32*
store i32 3,i32*%A8,align 4
%A9=call i8*@sml_alloc(i32 inreg 20)#0
%Ba=getelementptr inbounds i8,i8*%A9,i64 -4
%Bb=bitcast i8*%Ba to i32*
store i32 1342177296,i32*%Bb,align 4
store i8*%A9,i8**%I,align 8
%Bc=load i8*,i8**%N,align 8
store i8*null,i8**%N,align 8
%Bd=bitcast i8*%A9 to i8**
store i8*%Bc,i8**%Bd,align 8
%Be=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%Bf=getelementptr inbounds i8,i8*%A9,i64 8
%Bg=bitcast i8*%Bf to i8**
store i8*%Be,i8**%Bg,align 8
%Bh=getelementptr inbounds i8,i8*%A9,i64 16
%Bi=bitcast i8*%Bh to i32*
store i32 3,i32*%Bi,align 4
%Bj=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%Bk=getelementptr inbounds i8,i8*%Bj,i64 16
%Bl=bitcast i8*%Bk to i8*(i8*,i8*)**
%Bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Bl,align 8
%Bn=bitcast i8*%Bj to i8**
%Bo=load i8*,i8**%Bn,align 8
%Bp=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%Bq=call fastcc i8*%Bm(i8*inreg%Bo,i8*inreg%Bp)
%Br=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%Bq)
br label%Bs
Bs:
%Bt=phi i8*[%Br,%zY],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@go,i64 0,i32 2)to i8*),%y4]
store i8*%Bt,i8**%H,align 8
%Bu=call i8*@sml_alloc(i32 inreg 20)#0
%Bv=getelementptr inbounds i8,i8*%Bu,i64 -4
%Bw=bitcast i8*%Bv to i32*
store i32 1342177296,i32*%Bw,align 4
store i8*%Bu,i8**%I,align 8
%Bx=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%By=bitcast i8*%Bu to i8**
store i8*%Bx,i8**%By,align 8
%Bz=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%BA=getelementptr inbounds i8,i8*%Bu,i64 8
%BB=bitcast i8*%BA to i8**
store i8*%Bz,i8**%BB,align 8
%BC=getelementptr inbounds i8,i8*%Bu,i64 16
%BD=bitcast i8*%BC to i32*
store i32 3,i32*%BD,align 4
%BE=call i8*@sml_alloc(i32 inreg 20)#0
%BF=getelementptr inbounds i8,i8*%BE,i64 -4
%BG=bitcast i8*%BF to i32*
store i32 1342177296,i32*%BG,align 4
%BH=load i8*,i8**%I,align 8
%BI=bitcast i8*%BE to i8**
store i8*%BH,i8**%BI,align 8
%BJ=getelementptr inbounds i8,i8*%BE,i64 8
%BK=bitcast i8*%BJ to i8**
store i8*null,i8**%BK,align 8
%BL=getelementptr inbounds i8,i8*%BE,i64 16
%BM=bitcast i8*%BL to i32*
store i32 3,i32*%BM,align 4
store i8*%BH,i8**%H,align 8
store i8*null,i8**%I,align 8
%BN=call i8*@sml_alloc(i32 inreg 20)#0
%BO=getelementptr inbounds i8,i8*%BN,i64 -4
%BP=bitcast i8*%BO to i32*
store i32 1342177296,i32*%BP,align 4
store i8*%BN,i8**%J,align 8
%BQ=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%BR=bitcast i8*%BN to i8**
store i8*%BQ,i8**%BR,align 8
%BS=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%BT=getelementptr inbounds i8,i8*%BN,i64 8
%BU=bitcast i8*%BT to i8**
store i8*%BS,i8**%BU,align 8
%BV=getelementptr inbounds i8,i8*%BN,i64 16
%BW=bitcast i8*%BV to i32*
store i32 3,i32*%BW,align 4
%BX=call i8*@sml_alloc(i32 inreg 20)#0
%BY=getelementptr inbounds i8,i8*%BX,i64 -4
%BZ=bitcast i8*%BY to i32*
store i32 1342177296,i32*%BZ,align 4
%B0=load i8*,i8**%L,align 8
store i8*null,i8**%L,align 8
%B1=bitcast i8*%BX to i8**
store i8*%B0,i8**%B1,align 8
%B2=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%B3=getelementptr inbounds i8,i8*%BX,i64 8
%B4=bitcast i8*%B3 to i8**
store i8*%B2,i8**%B4,align 8
%B5=getelementptr inbounds i8,i8*%BX,i64 16
%B6=bitcast i8*%B5 to i32*
store i32 3,i32*%B6,align 4
%B7=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%BX)
store i8*%B7,i8**%H,align 8
%B8=call i8*@sml_alloc(i32 inreg 20)#0
%B9=getelementptr inbounds i8,i8*%B8,i64 -4
%Ca=bitcast i8*%B9 to i32*
store i32 1342177296,i32*%Ca,align 4
%Cb=load i8*,i8**%H,align 8
%Cc=bitcast i8*%B8 to i8**
store i8*%Cb,i8**%Cc,align 8
%Cd=getelementptr inbounds i8,i8*%B8,i64 8
%Ce=bitcast i8*%Cd to i8**
store i8*null,i8**%Ce,align 8
%Cf=getelementptr inbounds i8,i8*%B8,i64 16
%Cg=bitcast i8*%Cf to i32*
store i32 3,i32*%Cg,align 4
store i8*null,i8**%I,align 8
%Ch=call i8*@sml_alloc(i32 inreg 20)#0
%Ci=getelementptr inbounds i8,i8*%Ch,i64 -4
%Cj=bitcast i8*%Ci to i32*
store i32 1342177296,i32*%Cj,align 4
%Ck=load i8*,i8**%H,align 8
%Cl=bitcast i8*%Ch to i8**
store i8*%Ck,i8**%Cl,align 8
%Cm=load i8*,i8**%I,align 8
%Cn=getelementptr inbounds i8,i8*%Ch,i64 8
%Co=bitcast i8*%Cn to i8**
store i8*%Cm,i8**%Co,align 8
%Cp=getelementptr inbounds i8,i8*%Ch,i64 16
%Cq=bitcast i8*%Cp to i32*
store i32 3,i32*%Cq,align 4
%Cr=load i8*,i8**%M,align 8
%Cs=call fastcc i8*%zc(i8*inreg%Cr,i8*inreg%Ch)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yV)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%yY)
store i8*%Cs,i8**%aI,align 8
%Ct=call i8*@sml_alloc(i32 inreg 20)#0
%Cu=getelementptr inbounds i8,i8*%Ct,i64 -4
%Cv=bitcast i8*%Cu to i32*
store i32 1342177296,i32*%Cv,align 4
store i8*%Ct,i8**%aJ,align 8
%Cw=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%Cx=bitcast i8*%Ct to i8**
store i8*%Cw,i8**%Cx,align 8
%Cy=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Cz=getelementptr inbounds i8,i8*%Ct,i64 8
%CA=bitcast i8*%Cz to i8**
store i8*%Cy,i8**%CA,align 8
%CB=getelementptr inbounds i8,i8*%Ct,i64 16
%CC=bitcast i8*%CB to i32*
store i32 3,i32*%CC,align 4
%CD=call i8*@sml_alloc(i32 inreg 28)#0
%CE=getelementptr inbounds i8,i8*%CD,i64 -4
%CF=bitcast i8*%CE to i32*
store i32 1342177304,i32*%CF,align 4
%CG=load i8*,i8**%aJ,align 8
%CH=bitcast i8*%CD to i8**
store i8*%CG,i8**%CH,align 8
%CI=getelementptr inbounds i8,i8*%CD,i64 8
%CJ=bitcast i8*%CI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2375 to void(...)*),void(...)**%CJ,align 8
%CK=getelementptr inbounds i8,i8*%CD,i64 16
%CL=bitcast i8*%CK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2375 to void(...)*),void(...)**%CL,align 8
%CM=getelementptr inbounds i8,i8*%CD,i64 24
%CN=bitcast i8*%CM to i32*
store i32 -2147483647,i32*%CN,align 4
ret i8*%CD
CO:
%CP=getelementptr inbounds i8,i8*%aZ,i64 8
%CQ=bitcast i8*%CP to i8**
%CR=load i8*,i8**%CQ,align 8
store i8*%CR,i8**%aI,align 8
%CS=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%CT=getelementptr inbounds i8,i8*%CS,i64 16
%CU=bitcast i8*%CT to i8*(i8*,i8*)**
%CV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%CU,align 8
%CW=bitcast i8*%CS to i8**
%CX=load i8*,i8**%CW,align 8
%CY=call fastcc i8*%CV(i8*inreg%CX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@il,i64 0,i32 2)to i8*))
%CZ=getelementptr inbounds i8,i8*%CY,i64 16
%C0=bitcast i8*%CZ to i8*(i8*,i8*)**
%C1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C0,align 8
%C2=bitcast i8*%CY to i8**
%C3=load i8*,i8**%C2,align 8
%C4=bitcast i8**%aI to i8***
%C5=load i8**,i8***%C4,align 8
%C6=load i8*,i8**%C5,align 8
%C7=call fastcc i8*%C1(i8*inreg%C3,i8*inreg%C6)
%C8=bitcast i8**%E to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%C8)
%C9=bitcast i8**%F to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%C9)
%Da=bitcast i8**%G to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Da)
call void@llvm.gcroot(i8**%E,i8*null)#0
call void@llvm.gcroot(i8**%F,i8*null)#0
call void@llvm.gcroot(i8**%G,i8*null)#0
store i8*%C7,i8**%E,align 8
%Db=load atomic i32,i32*@sml_check_flag unordered,align 4
%Dc=icmp eq i32%Db,0
br i1%Dc,label%De,label%Dd
Dd:
call void@sml_check(i32 inreg%Db)
br label%De
De:
%Df=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d3,i64 0,i32 2)to i8*))
%Dg=getelementptr inbounds i8,i8*%Df,i64 16
%Dh=bitcast i8*%Dg to i8*(i8*,i8*)**
%Di=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Dh,align 8
%Dj=bitcast i8*%Df to i8**
%Dk=load i8*,i8**%Dj,align 8
store i8*%Dk,i8**%G,align 8
%Dl=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Dm=getelementptr inbounds i8,i8*%Dl,i64 16
%Dn=bitcast i8*%Dm to i8*(i8*,i8*)**
%Do=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Dn,align 8
%Dp=bitcast i8*%Dl to i8**
%Dq=load i8*,i8**%Dp,align 8
%Dr=call fastcc i8*%Do(i8*inreg%Dq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
%Ds=getelementptr inbounds i8,i8*%Dr,i64 16
%Dt=bitcast i8*%Ds to i8*(i8*,i8*)**
%Du=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Dt,align 8
%Dv=bitcast i8*%Dr to i8**
%Dw=load i8*,i8**%Dv,align 8
%Dx=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%Dy=call fastcc i8*%Du(i8*inreg%Dw,i8*inreg%Dx)
%Dz=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%Dy)
store i8*%Dz,i8**%E,align 8
%DA=call i8*@sml_alloc(i32 inreg 20)#0
%DB=getelementptr inbounds i8,i8*%DA,i64 -4
%DC=bitcast i8*%DB to i32*
store i32 1342177296,i32*%DC,align 4
%DD=load i8*,i8**%E,align 8
%DE=bitcast i8*%DA to i8**
store i8*%DD,i8**%DE,align 8
%DF=getelementptr inbounds i8,i8*%DA,i64 8
%DG=bitcast i8*%DF to i8**
store i8*null,i8**%DG,align 8
%DH=getelementptr inbounds i8,i8*%DA,i64 16
%DI=bitcast i8*%DH to i32*
store i32 3,i32*%DI,align 4
store i8*null,i8**%F,align 8
%DJ=call i8*@sml_alloc(i32 inreg 20)#0
%DK=getelementptr inbounds i8,i8*%DJ,i64 -4
%DL=bitcast i8*%DK to i32*
store i32 1342177296,i32*%DL,align 4
%DM=load i8*,i8**%E,align 8
%DN=bitcast i8*%DJ to i8**
store i8*%DM,i8**%DN,align 8
%DO=load i8*,i8**%F,align 8
%DP=getelementptr inbounds i8,i8*%DJ,i64 8
%DQ=bitcast i8*%DP to i8**
store i8*%DO,i8**%DQ,align 8
%DR=getelementptr inbounds i8,i8*%DJ,i64 16
%DS=bitcast i8*%DR to i32*
store i32 3,i32*%DS,align 4
%DT=load i8*,i8**%G,align 8
%DU=call fastcc i8*%Di(i8*inreg%DT,i8*inreg%DJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%C9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Da)
store i8*%DU,i8**%aJ,align 8
%DV=call i8*@sml_alloc(i32 inreg 20)#0
%DW=getelementptr inbounds i8,i8*%DV,i64 -4
%DX=bitcast i8*%DW to i32*
store i32 1342177296,i32*%DX,align 4
store i8*%DV,i8**%aK,align 8
%DY=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%DZ=bitcast i8*%DV to i8**
store i8*%DY,i8**%DZ,align 8
%D0=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%D1=getelementptr inbounds i8,i8*%DV,i64 8
%D2=bitcast i8*%D1 to i8**
store i8*%D0,i8**%D2,align 8
%D3=getelementptr inbounds i8,i8*%DV,i64 16
%D4=bitcast i8*%D3 to i32*
store i32 3,i32*%D4,align 4
%D5=call i8*@sml_alloc(i32 inreg 28)#0
%D6=getelementptr inbounds i8,i8*%D5,i64 -4
%D7=bitcast i8*%D6 to i32*
store i32 1342177304,i32*%D7,align 4
%D8=load i8*,i8**%aK,align 8
%D9=bitcast i8*%D5 to i8**
store i8*%D8,i8**%D9,align 8
%Ea=getelementptr inbounds i8,i8*%D5,i64 8
%Eb=bitcast i8*%Ea to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2368 to void(...)*),void(...)**%Eb,align 8
%Ec=getelementptr inbounds i8,i8*%D5,i64 16
%Ed=bitcast i8*%Ec to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2368 to void(...)*),void(...)**%Ed,align 8
%Ee=getelementptr inbounds i8,i8*%D5,i64 24
%Ef=bitcast i8*%Ee to i32*
store i32 -2147483647,i32*%Ef,align 4
ret i8*%D5
Eg:
%Eh=getelementptr inbounds i8,i8*%aZ,i64 8
%Ei=bitcast i8*%Eh to i8**
%Ej=load i8*,i8**%Ei,align 8
store i8*%Ej,i8**%aI,align 8
%Ek=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%El=getelementptr inbounds i8,i8*%Ek,i64 16
%Em=bitcast i8*%El to i8*(i8*,i8*)**
%En=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Em,align 8
%Eo=bitcast i8*%Ek to i8**
%Ep=load i8*,i8**%Eo,align 8
%Eq=call fastcc i8*%En(i8*inreg%Ep,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ik,i64 0,i32 2)to i8*))
%Er=getelementptr inbounds i8,i8*%Eq,i64 16
%Es=bitcast i8*%Er to i8*(i8*,i8*)**
%Et=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Es,align 8
%Eu=bitcast i8*%Eq to i8**
%Ev=load i8*,i8**%Eu,align 8
%Ew=bitcast i8**%aI to i8***
%Ex=load i8**,i8***%Ew,align 8
%Ey=load i8*,i8**%Ex,align 8
%Ez=call fastcc i8*%Et(i8*inreg%Ev,i8*inreg%Ey)
%EA=bitcast i8**%B to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%EA)
%EB=bitcast i8**%C to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%EB)
%EC=bitcast i8**%D to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%EC)
call void@llvm.gcroot(i8**%B,i8*null)#0
call void@llvm.gcroot(i8**%C,i8*null)#0
call void@llvm.gcroot(i8**%D,i8*null)#0
store i8*%Ez,i8**%B,align 8
%ED=load atomic i32,i32*@sml_check_flag unordered,align 4
%EE=icmp eq i32%ED,0
br i1%EE,label%EG,label%EF
EF:
call void@sml_check(i32 inreg%ED)
br label%EG
EG:
%EH=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dR,i64 0,i32 2)to i8*))
%EI=getelementptr inbounds i8,i8*%EH,i64 16
%EJ=bitcast i8*%EI to i8*(i8*,i8*)**
%EK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EJ,align 8
%EL=bitcast i8*%EH to i8**
%EM=load i8*,i8**%EL,align 8
store i8*%EM,i8**%D,align 8
%EN=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%EO=call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%EN)
store i8*%EO,i8**%B,align 8
%EP=call i8*@sml_alloc(i32 inreg 20)#0
%EQ=getelementptr inbounds i8,i8*%EP,i64 -4
%ER=bitcast i8*%EQ to i32*
store i32 1342177296,i32*%ER,align 4
%ES=load i8*,i8**%B,align 8
%ET=bitcast i8*%EP to i8**
store i8*%ES,i8**%ET,align 8
%EU=getelementptr inbounds i8,i8*%EP,i64 8
%EV=bitcast i8*%EU to i8**
store i8*null,i8**%EV,align 8
%EW=getelementptr inbounds i8,i8*%EP,i64 16
%EX=bitcast i8*%EW to i32*
store i32 3,i32*%EX,align 4
store i8*null,i8**%C,align 8
%EY=call i8*@sml_alloc(i32 inreg 20)#0
%EZ=getelementptr inbounds i8,i8*%EY,i64 -4
%E0=bitcast i8*%EZ to i32*
store i32 1342177296,i32*%E0,align 4
%E1=load i8*,i8**%B,align 8
%E2=bitcast i8*%EY to i8**
store i8*%E1,i8**%E2,align 8
%E3=load i8*,i8**%C,align 8
%E4=getelementptr inbounds i8,i8*%EY,i64 8
%E5=bitcast i8*%E4 to i8**
store i8*%E3,i8**%E5,align 8
%E6=getelementptr inbounds i8,i8*%EY,i64 16
%E7=bitcast i8*%E6 to i32*
store i32 3,i32*%E7,align 4
%E8=load i8*,i8**%D,align 8
%E9=call fastcc i8*%EK(i8*inreg%E8,i8*inreg%EY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%EA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%EB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%EC)
store i8*%E9,i8**%aJ,align 8
%Fa=call i8*@sml_alloc(i32 inreg 20)#0
%Fb=getelementptr inbounds i8,i8*%Fa,i64 -4
%Fc=bitcast i8*%Fb to i32*
store i32 1342177296,i32*%Fc,align 4
store i8*%Fa,i8**%aK,align 8
%Fd=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Fe=bitcast i8*%Fa to i8**
store i8*%Fd,i8**%Fe,align 8
%Ff=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Fg=getelementptr inbounds i8,i8*%Fa,i64 8
%Fh=bitcast i8*%Fg to i8**
store i8*%Ff,i8**%Fh,align 8
%Fi=getelementptr inbounds i8,i8*%Fa,i64 16
%Fj=bitcast i8*%Fi to i32*
store i32 3,i32*%Fj,align 4
%Fk=call i8*@sml_alloc(i32 inreg 28)#0
%Fl=getelementptr inbounds i8,i8*%Fk,i64 -4
%Fm=bitcast i8*%Fl to i32*
store i32 1342177304,i32*%Fm,align 4
%Fn=load i8*,i8**%aK,align 8
%Fo=bitcast i8*%Fk to i8**
store i8*%Fn,i8**%Fo,align 8
%Fp=getelementptr inbounds i8,i8*%Fk,i64 8
%Fq=bitcast i8*%Fp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2365 to void(...)*),void(...)**%Fq,align 8
%Fr=getelementptr inbounds i8,i8*%Fk,i64 16
%Fs=bitcast i8*%Fr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2365 to void(...)*),void(...)**%Fs,align 8
%Ft=getelementptr inbounds i8,i8*%Fk,i64 24
%Fu=bitcast i8*%Ft to i32*
store i32 -2147483647,i32*%Fu,align 4
ret i8*%Fk
Fv:
%Fw=getelementptr inbounds i8,i8*%aZ,i64 8
%Fx=bitcast i8*%Fw to i8**
%Fy=load i8*,i8**%Fx,align 8
store i8*%Fy,i8**%aI,align 8
%Fz=bitcast i8*%Fy to i8**
%FA=load i8*,i8**%Fz,align 8
%FB=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%FA)
store i8*%FB,i8**%aJ,align 8
%FC=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dh,i64 0,i32 2)to i8*))
%FD=getelementptr inbounds i8,i8*%FC,i64 16
%FE=bitcast i8*%FD to i8*(i8*,i8*)**
%FF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FE,align 8
%FG=bitcast i8*%FC to i8**
%FH=load i8*,i8**%FG,align 8
store i8*%FH,i8**%aK,align 8
%FI=call i8*@sml_alloc(i32 inreg 20)#0
%FJ=getelementptr inbounds i8,i8*%FI,i64 -4
%FK=bitcast i8*%FJ to i32*
store i32 1342177296,i32*%FK,align 4
%FL=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%FM=bitcast i8*%FI to i8**
store i8*%FL,i8**%FM,align 8
%FN=getelementptr inbounds i8,i8*%FI,i64 8
%FO=bitcast i8*%FN to i8**
store i8*null,i8**%FO,align 8
%FP=getelementptr inbounds i8,i8*%FI,i64 16
%FQ=bitcast i8*%FP to i32*
store i32 3,i32*%FQ,align 4
%FR=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%FS=call fastcc i8*%FF(i8*inreg%FR,i8*inreg%FI)
store i8*%FS,i8**%aJ,align 8
%FT=call i8*@sml_alloc(i32 inreg 20)#0
%FU=getelementptr inbounds i8,i8*%FT,i64 -4
%FV=bitcast i8*%FU to i32*
store i32 1342177296,i32*%FV,align 4
store i8*%FT,i8**%aK,align 8
%FW=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%FX=bitcast i8*%FT to i8**
store i8*%FW,i8**%FX,align 8
%FY=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%FZ=getelementptr inbounds i8,i8*%FT,i64 8
%F0=bitcast i8*%FZ to i8**
store i8*%FY,i8**%F0,align 8
%F1=getelementptr inbounds i8,i8*%FT,i64 16
%F2=bitcast i8*%F1 to i32*
store i32 3,i32*%F2,align 4
%F3=call i8*@sml_alloc(i32 inreg 28)#0
%F4=getelementptr inbounds i8,i8*%F3,i64 -4
%F5=bitcast i8*%F4 to i32*
store i32 1342177304,i32*%F5,align 4
%F6=load i8*,i8**%aK,align 8
%F7=bitcast i8*%F3 to i8**
store i8*%F6,i8**%F7,align 8
%F8=getelementptr inbounds i8,i8*%F3,i64 8
%F9=bitcast i8*%F8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2362 to void(...)*),void(...)**%F9,align 8
%Ga=getelementptr inbounds i8,i8*%F3,i64 16
%Gb=bitcast i8*%Ga to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2362 to void(...)*),void(...)**%Gb,align 8
%Gc=getelementptr inbounds i8,i8*%F3,i64 24
%Gd=bitcast i8*%Gc to i32*
store i32 -2147483647,i32*%Gd,align 4
ret i8*%F3
Ge:
%Gf=getelementptr inbounds i8,i8*%aZ,i64 8
%Gg=bitcast i8*%Gf to i8**
%Gh=load i8*,i8**%Gg,align 8
store i8*%Gh,i8**%aI,align 8
%Gi=bitcast i8*%Gh to i8**
%Gj=load i8*,i8**%Gi,align 8
%Gk=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Gj)
store i8*%Gk,i8**%aJ,align 8
%Gl=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c1,i64 0,i32 2)to i8*))
%Gm=getelementptr inbounds i8,i8*%Gl,i64 16
%Gn=bitcast i8*%Gm to i8*(i8*,i8*)**
%Go=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Gn,align 8
%Gp=bitcast i8*%Gl to i8**
%Gq=load i8*,i8**%Gp,align 8
store i8*%Gq,i8**%aK,align 8
%Gr=call i8*@sml_alloc(i32 inreg 20)#0
%Gs=getelementptr inbounds i8,i8*%Gr,i64 -4
%Gt=bitcast i8*%Gs to i32*
store i32 1342177296,i32*%Gt,align 4
%Gu=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Gv=bitcast i8*%Gr to i8**
store i8*%Gu,i8**%Gv,align 8
%Gw=getelementptr inbounds i8,i8*%Gr,i64 8
%Gx=bitcast i8*%Gw to i8**
store i8*null,i8**%Gx,align 8
%Gy=getelementptr inbounds i8,i8*%Gr,i64 16
%Gz=bitcast i8*%Gy to i32*
store i32 3,i32*%Gz,align 4
%GA=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%GB=call fastcc i8*%Go(i8*inreg%GA,i8*inreg%Gr)
store i8*%GB,i8**%aJ,align 8
%GC=call i8*@sml_alloc(i32 inreg 20)#0
%GD=getelementptr inbounds i8,i8*%GC,i64 -4
%GE=bitcast i8*%GD to i32*
store i32 1342177296,i32*%GE,align 4
store i8*%GC,i8**%aK,align 8
%GF=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%GG=bitcast i8*%GC to i8**
store i8*%GF,i8**%GG,align 8
%GH=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%GI=getelementptr inbounds i8,i8*%GC,i64 8
%GJ=bitcast i8*%GI to i8**
store i8*%GH,i8**%GJ,align 8
%GK=getelementptr inbounds i8,i8*%GC,i64 16
%GL=bitcast i8*%GK to i32*
store i32 3,i32*%GL,align 4
%GM=call i8*@sml_alloc(i32 inreg 28)#0
%GN=getelementptr inbounds i8,i8*%GM,i64 -4
%GO=bitcast i8*%GN to i32*
store i32 1342177304,i32*%GO,align 4
%GP=load i8*,i8**%aK,align 8
%GQ=bitcast i8*%GM to i8**
store i8*%GP,i8**%GQ,align 8
%GR=getelementptr inbounds i8,i8*%GM,i64 8
%GS=bitcast i8*%GR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2361 to void(...)*),void(...)**%GS,align 8
%GT=getelementptr inbounds i8,i8*%GM,i64 16
%GU=bitcast i8*%GT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2361 to void(...)*),void(...)**%GU,align 8
%GV=getelementptr inbounds i8,i8*%GM,i64 24
%GW=bitcast i8*%GV to i32*
store i32 -2147483647,i32*%GW,align 4
ret i8*%GM
GX:
%GY=getelementptr inbounds i8,i8*%aZ,i64 8
%GZ=bitcast i8*%GY to i8**
%G0=load i8*,i8**%GZ,align 8
store i8*%G0,i8**%aI,align 8
%G1=bitcast i8*%G0 to i8**
%G2=load i8*,i8**%G1,align 8
%G3=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%G2)
store i8*%G3,i8**%aJ,align 8
%G4=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cD,i64 0,i32 2)to i8*))
%G5=getelementptr inbounds i8,i8*%G4,i64 16
%G6=bitcast i8*%G5 to i8*(i8*,i8*)**
%G7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G6,align 8
%G8=bitcast i8*%G4 to i8**
%G9=load i8*,i8**%G8,align 8
store i8*%G9,i8**%aK,align 8
%Ha=call i8*@sml_alloc(i32 inreg 20)#0
%Hb=getelementptr inbounds i8,i8*%Ha,i64 -4
%Hc=bitcast i8*%Hb to i32*
store i32 1342177296,i32*%Hc,align 4
%Hd=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%He=bitcast i8*%Ha to i8**
store i8*%Hd,i8**%He,align 8
%Hf=getelementptr inbounds i8,i8*%Ha,i64 8
%Hg=bitcast i8*%Hf to i8**
store i8*null,i8**%Hg,align 8
%Hh=getelementptr inbounds i8,i8*%Ha,i64 16
%Hi=bitcast i8*%Hh to i32*
store i32 3,i32*%Hi,align 4
%Hj=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%Hk=call fastcc i8*%G7(i8*inreg%Hj,i8*inreg%Ha)
store i8*%Hk,i8**%aJ,align 8
%Hl=call i8*@sml_alloc(i32 inreg 20)#0
%Hm=getelementptr inbounds i8,i8*%Hl,i64 -4
%Hn=bitcast i8*%Hm to i32*
store i32 1342177296,i32*%Hn,align 4
store i8*%Hl,i8**%aK,align 8
%Ho=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Hp=bitcast i8*%Hl to i8**
store i8*%Ho,i8**%Hp,align 8
%Hq=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Hr=getelementptr inbounds i8,i8*%Hl,i64 8
%Hs=bitcast i8*%Hr to i8**
store i8*%Hq,i8**%Hs,align 8
%Ht=getelementptr inbounds i8,i8*%Hl,i64 16
%Hu=bitcast i8*%Ht to i32*
store i32 3,i32*%Hu,align 4
%Hv=call i8*@sml_alloc(i32 inreg 28)#0
%Hw=getelementptr inbounds i8,i8*%Hv,i64 -4
%Hx=bitcast i8*%Hw to i32*
store i32 1342177304,i32*%Hx,align 4
%Hy=load i8*,i8**%aK,align 8
%Hz=bitcast i8*%Hv to i8**
store i8*%Hy,i8**%Hz,align 8
%HA=getelementptr inbounds i8,i8*%Hv,i64 8
%HB=bitcast i8*%HA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2360 to void(...)*),void(...)**%HB,align 8
%HC=getelementptr inbounds i8,i8*%Hv,i64 16
%HD=bitcast i8*%HC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2360 to void(...)*),void(...)**%HD,align 8
%HE=getelementptr inbounds i8,i8*%Hv,i64 24
%HF=bitcast i8*%HE to i32*
store i32 -2147483647,i32*%HF,align 4
ret i8*%Hv
HG:
%HH=getelementptr inbounds i8,i8*%aZ,i64 8
%HI=bitcast i8*%HH to i8**
%HJ=load i8*,i8**%HI,align 8
%HK=getelementptr inbounds i8,i8*%HJ,i64 8
%HL=bitcast i8*%HK to i8**
%HM=load i8*,i8**%HL,align 8
store i8*%HM,i8**%aI,align 8
%HN=load i8*,i8**@_SMLZN17ElaborateErrorSQL15TupleInSQLQueryE,align 8
store i8*%HN,i8**%aJ,align 8
%HO=call i8*@sml_alloc(i32 inreg 20)#0
%HP=getelementptr inbounds i8,i8*%HO,i64 -4
%HQ=bitcast i8*%HP to i32*
store i32 1342177296,i32*%HQ,align 4
store i8*%HO,i8**%aK,align 8
%HR=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%HS=bitcast i8*%HO to i8**
store i8*%HR,i8**%HS,align 8
%HT=getelementptr inbounds i8,i8*%HO,i64 8
%HU=bitcast i8*%HT to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ii,i64 0,i32 2,i64 0),i8**%HU,align 8
%HV=getelementptr inbounds i8,i8*%HO,i64 16
%HW=bitcast i8*%HV to i32*
store i32 3,i32*%HW,align 4
%HX=call i8*@sml_alloc(i32 inreg 20)#0
%HY=getelementptr inbounds i8,i8*%HX,i64 -4
%HZ=bitcast i8*%HY to i32*
store i32 1342177296,i32*%HZ,align 4
%H0=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%H1=bitcast i8*%HX to i8**
store i8*%H0,i8**%H1,align 8
%H2=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%H3=getelementptr inbounds i8,i8*%HX,i64 8
%H4=bitcast i8*%H3 to i8**
store i8*%H2,i8**%H4,align 8
%H5=getelementptr inbounds i8,i8*%HX,i64 16
%H6=bitcast i8*%H5 to i32*
store i32 3,i32*%H6,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%HX)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ij,i64 0,i32 2)to i8*)
H7:
%H8=getelementptr inbounds i8,i8*%aZ,i64 8
%H9=bitcast i8*%H8 to i8**
%Ia=load i8*,i8**%H9,align 8
store i8*%Ia,i8**%aK,align 8
%Ib=bitcast i8*%Ia to i8**
%Ic=load i8*,i8**%Ib,align 8
store i8*%Ic,i8**%aL,align 8
%Id=getelementptr inbounds i8,i8*%Ia,i64 8
%Ie=bitcast i8*%Id to i8**
%If=load i8*,i8**%Ie,align 8
%Ig=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%If)
store i8*%Ig,i8**%aI,align 8
%Ih=load i8*,i8**%aK,align 8
%Ii=getelementptr inbounds i8,i8*%Ih,i64 16
%Ij=bitcast i8*%Ii to i8**
%Ik=load i8*,i8**%Ij,align 8
%Il=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Ik)
store i8*%Il,i8**%aJ,align 8
%Im=call i8*@sml_alloc(i32 inreg 28)#0
%In=getelementptr inbounds i8,i8*%Im,i64 -4
%Io=bitcast i8*%In to i32*
store i32 1342177304,i32*%Io,align 4
%Ip=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Iq=bitcast i8*%Im to i8**
store i8*%Ip,i8**%Iq,align 8
%Ir=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%Is=getelementptr inbounds i8,i8*%Im,i64 8
%It=bitcast i8*%Is to i8**
store i8*%Ir,i8**%It,align 8
%Iu=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Iv=getelementptr inbounds i8,i8*%Im,i64 16
%Iw=bitcast i8*%Iv to i8**
store i8*%Iu,i8**%Iw,align 8
%Ix=getelementptr inbounds i8,i8*%Im,i64 24
%Iy=bitcast i8*%Ix to i32*
store i32 7,i32*%Iy,align 4
%Iz=bitcast i8**%t to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Iz)
%IA=bitcast i8**%u to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%IA)
%IB=bitcast i8**%v to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%IB)
%IC=bitcast i8**%w to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%IC)
%ID=bitcast i8**%x to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ID)
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
store i8*%Im,i8**%t,align 8
%IE=load atomic i32,i32*@sml_check_flag unordered,align 4
%IF=icmp eq i32%IE,0
br i1%IF,label%IK,label%IG
IG:
call void@sml_check(i32 inreg%IE)
%IH=bitcast i8**%t to i8***
%II=load i8**,i8***%IH,align 8
%IJ=load i8*,i8**%II,align 8
br label%IK
IK:
%IL=phi i8*[%IJ,%IG],[%Ip,%H7]
%IM=phi i8**[%II,%IG],[%Iq,%H7]
store i8*%IL,i8**%u,align 8
%IN=getelementptr inbounds i8*,i8**%IM,i64 2
%IO=load i8*,i8**%IN,align 8
store i8*%IO,i8**%v,align 8
%IP=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c9,i64 0,i32 2)to i8*))
%IQ=getelementptr inbounds i8,i8*%IP,i64 16
%IR=bitcast i8*%IQ to i8*(i8*,i8*)**
%IS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%IR,align 8
%IT=bitcast i8*%IP to i8**
%IU=load i8*,i8**%IT,align 8
store i8*%IU,i8**%w,align 8
%IV=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%IW=getelementptr inbounds i8,i8*%IV,i64 8
%IX=bitcast i8*%IW to i8**
%IY=load i8*,i8**%IX,align 8
%IZ=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%IY)
store i8*%IZ,i8**%t,align 8
%I0=call i8*@sml_alloc(i32 inreg 12)#0
%I1=getelementptr inbounds i8,i8*%I0,i64 -4
%I2=bitcast i8*%I1 to i32*
store i32 1342177288,i32*%I2,align 4
store i8*%I0,i8**%x,align 8
%I3=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%I4=bitcast i8*%I0 to i8**
store i8*%I3,i8**%I4,align 8
%I5=getelementptr inbounds i8,i8*%I0,i64 8
%I6=bitcast i8*%I5 to i32*
store i32 1,i32*%I6,align 4
%I7=call i8*@sml_alloc(i32 inreg 28)#0
%I8=getelementptr inbounds i8,i8*%I7,i64 -4
%I9=bitcast i8*%I8 to i32*
store i32 1342177304,i32*%I9,align 4
store i8*%I7,i8**%t,align 8
%Ja=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Jb=bitcast i8*%I7 to i8**
store i8*%Ja,i8**%Jb,align 8
%Jc=getelementptr inbounds i8,i8*%I7,i64 8
%Jd=bitcast i8*%Jc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Con__OP2E_1378 to void(...)*),void(...)**%Jd,align 8
%Je=getelementptr inbounds i8,i8*%I7,i64 16
%Jf=bitcast i8*%Je to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Con__OP2E_1378 to void(...)*),void(...)**%Jf,align 8
%Jg=getelementptr inbounds i8,i8*%I7,i64 24
%Jh=bitcast i8*%Jg to i32*
store i32 -2147483647,i32*%Jh,align 4
%Ji=call i8*@sml_alloc(i32 inreg 20)#0
%Jj=getelementptr inbounds i8,i8*%Ji,i64 -4
%Jk=bitcast i8*%Jj to i32*
store i32 1342177296,i32*%Jk,align 4
store i8*%Ji,i8**%x,align 8
%Jl=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%Jm=bitcast i8*%Ji to i8**
store i8*%Jl,i8**%Jm,align 8
%Jn=getelementptr inbounds i8,i8*%Ji,i64 8
%Jo=bitcast i8*%Jn to i8**
store i8*null,i8**%Jo,align 8
%Jp=getelementptr inbounds i8,i8*%Ji,i64 16
%Jq=bitcast i8*%Jp to i32*
store i32 3,i32*%Jq,align 4
%Jr=call i8*@sml_alloc(i32 inreg 20)#0
%Js=getelementptr inbounds i8,i8*%Jr,i64 -4
%Jt=bitcast i8*%Js to i32*
store i32 1342177296,i32*%Jt,align 4
store i8*%Jr,i8**%v,align 8
%Ju=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%Jv=bitcast i8*%Jr to i8**
store i8*%Ju,i8**%Jv,align 8
%Jw=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%Jx=getelementptr inbounds i8,i8*%Jr,i64 8
%Jy=bitcast i8*%Jx to i8**
store i8*%Jw,i8**%Jy,align 8
%Jz=getelementptr inbounds i8,i8*%Jr,i64 16
%JA=bitcast i8*%Jz to i32*
store i32 3,i32*%JA,align 4
%JB=call i8*@sml_alloc(i32 inreg 20)#0
%JC=getelementptr inbounds i8,i8*%JB,i64 -4
%JD=bitcast i8*%JC to i32*
store i32 1342177296,i32*%JD,align 4
%JE=load i8*,i8**%u,align 8
%JF=bitcast i8*%JB to i8**
store i8*%JE,i8**%JF,align 8
%JG=load i8*,i8**%v,align 8
%JH=getelementptr inbounds i8,i8*%JB,i64 8
%JI=bitcast i8*%JH to i8**
store i8*%JG,i8**%JI,align 8
%JJ=getelementptr inbounds i8,i8*%JB,i64 16
%JK=bitcast i8*%JJ to i32*
store i32 3,i32*%JK,align 4
%JL=load i8*,i8**%w,align 8
%JM=call fastcc i8*%IS(i8*inreg%JL,i8*inreg%JB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Iz)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%IA)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%IB)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%IC)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ID)
store i8*%JM,i8**%aI,align 8
%JN=call i8*@sml_alloc(i32 inreg 20)#0
%JO=getelementptr inbounds i8,i8*%JN,i64 -4
%JP=bitcast i8*%JO to i32*
store i32 1342177296,i32*%JP,align 4
store i8*%JN,i8**%aJ,align 8
%JQ=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%JR=bitcast i8*%JN to i8**
store i8*%JQ,i8**%JR,align 8
%JS=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%JT=getelementptr inbounds i8,i8*%JN,i64 8
%JU=bitcast i8*%JT to i8**
store i8*%JS,i8**%JU,align 8
%JV=getelementptr inbounds i8,i8*%JN,i64 16
%JW=bitcast i8*%JV to i32*
store i32 3,i32*%JW,align 4
%JX=call i8*@sml_alloc(i32 inreg 28)#0
%JY=getelementptr inbounds i8,i8*%JX,i64 -4
%JZ=bitcast i8*%JY to i32*
store i32 1342177304,i32*%JZ,align 4
%J0=load i8*,i8**%aJ,align 8
%J1=bitcast i8*%JX to i8**
store i8*%J0,i8**%J1,align 8
%J2=getelementptr inbounds i8,i8*%JX,i64 8
%J3=bitcast i8*%J2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2356 to void(...)*),void(...)**%J3,align 8
%J4=getelementptr inbounds i8,i8*%JX,i64 16
%J5=bitcast i8*%J4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2356 to void(...)*),void(...)**%J5,align 8
%J6=getelementptr inbounds i8,i8*%JX,i64 24
%J7=bitcast i8*%J6 to i32*
store i32 -2147483647,i32*%J7,align 4
ret i8*%JX
J8:
%J9=getelementptr inbounds i8,i8*%aZ,i64 8
%Ka=bitcast i8*%J9 to i8**
%Kb=load i8*,i8**%Ka,align 8
store i8*%Kb,i8**%aK,align 8
%Kc=bitcast i8*%Kb to i32*
%Kd=load i32,i32*%Kc,align 4
%Ke=icmp eq i32%Kd,0
br i1%Ke,label%Kj,label%Kf
Kf:
store i8*null,i8**%aK,align 8
%Kg=getelementptr inbounds i8,i8*%Kb,i64 16
%Kh=bitcast i8*%Kg to i8**
%Ki=load i8*,i8**%Kh,align 8
br label%aR
Kj:
%Kk=getelementptr inbounds i8,i8*%Kb,i64 16
%Kl=bitcast i8*%Kk to i8**
%Km=load i8*,i8**%Kl,align 8
%Kn=bitcast i8*%Km to i32*
%Ko=load i32,i32*%Kn,align 4
%Kp=icmp eq i32%Ko,28
br i1%Kp,label%Mv,label%Kq
Kq:
%Kr=getelementptr inbounds i8,i8*%Kb,i64 8
%Ks=bitcast i8*%Kr to i8**
%Kt=load i8*,i8**%Ks,align 8
%Ku=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%Kt)
%Kv=getelementptr inbounds i8,i8*%Ku,i64 -4
%Kw=bitcast i8*%Kv to i32*
%Kx=load i32,i32*%Kw,align 4
%Ky=and i32%Kx,268435455
%Kz=icmp eq i32%Ky,2
br i1%Kz,label%KA,label%Lq
KA:
%KB=load i8,i8*%Ku,align 1
%KC=icmp eq i8%KB,126
br i1%KC,label%KD,label%Lq
KD:
%KE=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%KE)
%KF=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%KF)
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@ih,i64 0,i32 2,i64 0),i8**%r,align 8
%KG=call i8*@sml_alloc(i32 inreg 12)#0
%KH=getelementptr inbounds i8,i8*%KG,i64 -4
%KI=bitcast i8*%KH to i32*
store i32 1342177288,i32*%KI,align 4
store i8*%KG,i8**%s,align 8
%KJ=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%KK=bitcast i8*%KG to i8**
store i8*%KJ,i8**%KK,align 8
%KL=getelementptr inbounds i8,i8*%KG,i64 8
%KM=bitcast i8*%KL to i32*
store i32 1,i32*%KM,align 4
%KN=call i8*@sml_alloc(i32 inreg 28)#0
%KO=getelementptr inbounds i8,i8*%KN,i64 -4
%KP=bitcast i8*%KO to i32*
store i32 1342177304,i32*%KP,align 4
%KQ=load i8*,i8**%s,align 8
%KR=bitcast i8*%KN to i8**
store i8*%KQ,i8**%KR,align 8
%KS=getelementptr inbounds i8,i8*%KN,i64 8
%KT=bitcast i8*%KS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1382 to void(...)*),void(...)**%KT,align 8
%KU=getelementptr inbounds i8,i8*%KN,i64 16
%KV=bitcast i8*%KU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1382 to void(...)*),void(...)**%KV,align 8
%KW=getelementptr inbounds i8,i8*%KN,i64 24
%KX=bitcast i8*%KW to i32*
store i32 -2147483647,i32*%KX,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%KE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%KF)
store i8*%KQ,i8**%aI,align 8
%KY=load i8*,i8**%aK,align 8
%KZ=getelementptr inbounds i8,i8*%KY,i64 16
%K0=bitcast i8*%KZ to i8**
%K1=load i8*,i8**%K0,align 8
%K2=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%K1)
%K3=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%K4=call fastcc i8*@_SMLLN12ElaborateSQL11Con__UNARYOPE_1382(i8*inreg%K3,i8*inreg%K2)
store i8*%K4,i8**%aI,align 8
%K5=call i8*@sml_alloc(i32 inreg 20)#0
%K6=getelementptr inbounds i8,i8*%K5,i64 -4
%K7=bitcast i8*%K6 to i32*
store i32 1342177296,i32*%K7,align 4
store i8*%K5,i8**%aJ,align 8
%K8=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%K9=bitcast i8*%K5 to i8**
store i8*%K8,i8**%K9,align 8
%La=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Lb=getelementptr inbounds i8,i8*%K5,i64 8
%Lc=bitcast i8*%Lb to i8**
store i8*%La,i8**%Lc,align 8
%Ld=getelementptr inbounds i8,i8*%K5,i64 16
%Le=bitcast i8*%Ld to i32*
store i32 3,i32*%Le,align 4
%Lf=call i8*@sml_alloc(i32 inreg 28)#0
%Lg=getelementptr inbounds i8,i8*%Lf,i64 -4
%Lh=bitcast i8*%Lg to i32*
store i32 1342177304,i32*%Lh,align 4
%Li=load i8*,i8**%aJ,align 8
%Lj=bitcast i8*%Lf to i8**
store i8*%Li,i8**%Lj,align 8
%Lk=getelementptr inbounds i8,i8*%Lf,i64 8
%Ll=bitcast i8*%Lk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2355 to void(...)*),void(...)**%Ll,align 8
%Lm=getelementptr inbounds i8,i8*%Lf,i64 16
%Ln=bitcast i8*%Lm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2355 to void(...)*),void(...)**%Ln,align 8
%Lo=getelementptr inbounds i8,i8*%Lf,i64 24
%Lp=bitcast i8*%Lo to i32*
store i32 -2147483647,i32*%Lp,align 4
ret i8*%Lf
Lq:
%Lr=call fastcc i8*@_SMLFN6String9translateE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ig,i64 0,i32 2)to i8*))
%Ls=getelementptr inbounds i8,i8*%Lr,i64 16
%Lt=bitcast i8*%Ls to i8*(i8*,i8*)**
%Lu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Lt,align 8
%Lv=bitcast i8*%Lr to i8**
%Lw=load i8*,i8**%Lv,align 8
store i8*%Lw,i8**%aI,align 8
%Lx=load i8*,i8**%aK,align 8
%Ly=getelementptr inbounds i8,i8*%Lx,i64 8
%Lz=bitcast i8*%Ly to i8**
%LA=load i8*,i8**%Lz,align 8
%LB=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%LA)
%LC=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%LD=call fastcc i8*%Lu(i8*inreg%LC,i8*inreg%LB)
%LE=call fastcc i8*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1376(i8*inreg%LD)
%LF=getelementptr inbounds i8,i8*%LE,i64 16
%LG=bitcast i8*%LF to i8*(i8*,i8*)**
%LH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%LG,align 8
%LI=bitcast i8*%LE to i8**
%LJ=load i8*,i8**%LI,align 8
store i8*%LJ,i8**%aL,align 8
%LK=load i8*,i8**%aK,align 8
%LL=getelementptr inbounds i8,i8*%LK,i64 16
%LM=bitcast i8*%LL to i8**
%LN=load i8*,i8**%LM,align 8
%LO=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%LN)
store i8*%LO,i8**%aI,align 8
%LP=call i8*@sml_alloc(i32 inreg 20)#0
%LQ=getelementptr inbounds i8,i8*%LP,i64 -4
%LR=bitcast i8*%LQ to i32*
store i32 1342177296,i32*%LR,align 4
%LS=load i8*,i8**%aI,align 8
%LT=bitcast i8*%LP to i8**
store i8*%LS,i8**%LT,align 8
%LU=getelementptr inbounds i8,i8*%LP,i64 8
%LV=bitcast i8*%LU to i8**
store i8*null,i8**%LV,align 8
%LW=getelementptr inbounds i8,i8*%LP,i64 16
%LX=bitcast i8*%LW to i32*
store i32 3,i32*%LX,align 4
store i8*null,i8**%aJ,align 8
%LY=call i8*@sml_alloc(i32 inreg 20)#0
%LZ=getelementptr inbounds i8,i8*%LY,i64 -4
%L0=bitcast i8*%LZ to i32*
store i32 1342177296,i32*%L0,align 4
%L1=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%L2=bitcast i8*%LY to i8**
store i8*%L1,i8**%L2,align 8
%L3=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%L4=getelementptr inbounds i8,i8*%LY,i64 8
%L5=bitcast i8*%L4 to i8**
store i8*%L3,i8**%L5,align 8
%L6=getelementptr inbounds i8,i8*%LY,i64 16
%L7=bitcast i8*%L6 to i32*
store i32 3,i32*%L7,align 4
%L8=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%L9=call fastcc i8*%LH(i8*inreg%L8,i8*inreg%LY)
store i8*%L9,i8**%aI,align 8
%Ma=call i8*@sml_alloc(i32 inreg 20)#0
%Mb=getelementptr inbounds i8,i8*%Ma,i64 -4
%Mc=bitcast i8*%Mb to i32*
store i32 1342177296,i32*%Mc,align 4
store i8*%Ma,i8**%aJ,align 8
%Md=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%Me=bitcast i8*%Ma to i8**
store i8*%Md,i8**%Me,align 8
%Mf=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Mg=getelementptr inbounds i8,i8*%Ma,i64 8
%Mh=bitcast i8*%Mg to i8**
store i8*%Mf,i8**%Mh,align 8
%Mi=getelementptr inbounds i8,i8*%Ma,i64 16
%Mj=bitcast i8*%Mi to i32*
store i32 3,i32*%Mj,align 4
%Mk=call i8*@sml_alloc(i32 inreg 28)#0
%Ml=getelementptr inbounds i8,i8*%Mk,i64 -4
%Mm=bitcast i8*%Ml to i32*
store i32 1342177304,i32*%Mm,align 4
%Mn=load i8*,i8**%aJ,align 8
%Mo=bitcast i8*%Mk to i8**
store i8*%Mn,i8**%Mo,align 8
%Mp=getelementptr inbounds i8,i8*%Mk,i64 8
%Mq=bitcast i8*%Mp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2353 to void(...)*),void(...)**%Mq,align 8
%Mr=getelementptr inbounds i8,i8*%Mk,i64 16
%Ms=bitcast i8*%Mr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2353 to void(...)*),void(...)**%Ms,align 8
%Mt=getelementptr inbounds i8,i8*%Mk,i64 24
%Mu=bitcast i8*%Mt to i32*
store i32 -2147483647,i32*%Mu,align 4
ret i8*%Mk
Mv:
%Mw=getelementptr inbounds i8,i8*%Km,i64 8
%Mx=bitcast i8*%Mw to i8**
%My=load i8*,i8**%Mx,align 8
store i8*%My,i8**%aI,align 8
%Mz=getelementptr inbounds i8,i8*%Kb,i64 24
%MA=bitcast i8*%Mz to i8**
%MB=load i8*,i8**%MA,align 8
store i8*%MB,i8**%aJ,align 8
%MC=getelementptr inbounds i8,i8*%Kb,i64 8
%MD=bitcast i8*%MC to i8**
%ME=load i8*,i8**%MD,align 8
%MF=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%ME)
%MG=getelementptr inbounds i8,i8*%MF,i64 -4
%MH=bitcast i8*%MG to i32*
%MI=load i32,i32*%MH,align 4
%MJ=and i32%MI,268435455
%MK=icmp eq i32%MJ,2
br i1%MK,label%ML,label%M9
ML:
%MM=load i8,i8*%MF,align 1
%MN=icmp eq i8%MM,126
br i1%MN,label%MO,label%M9
MO:
store i8*null,i8**%aK,align 8
%MP=load i8*,i8**@_SMLZN17ElaborateErrorSQL11NegNotUnaryE,align 8
store i8*%MP,i8**%aI,align 8
%MQ=call i8*@sml_alloc(i32 inreg 20)#0
%MR=getelementptr inbounds i8,i8*%MQ,i64 -4
%MS=bitcast i8*%MR to i32*
store i32 1342177296,i32*%MS,align 4
store i8*%MQ,i8**%aK,align 8
%MT=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%MU=bitcast i8*%MQ to i8**
store i8*%MT,i8**%MU,align 8
%MV=getelementptr inbounds i8,i8*%MQ,i64 8
%MW=bitcast i8*%MV to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ie,i64 0,i32 2,i64 0),i8**%MW,align 8
%MX=getelementptr inbounds i8,i8*%MQ,i64 16
%MY=bitcast i8*%MX to i32*
store i32 3,i32*%MY,align 4
%MZ=call i8*@sml_alloc(i32 inreg 20)#0
%M0=getelementptr inbounds i8,i8*%MZ,i64 -4
%M1=bitcast i8*%M0 to i32*
store i32 1342177296,i32*%M1,align 4
%M2=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%M3=bitcast i8*%MZ to i8**
store i8*%M2,i8**%M3,align 8
%M4=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%M5=getelementptr inbounds i8,i8*%MZ,i64 8
%M6=bitcast i8*%M5 to i8**
store i8*%M4,i8**%M6,align 8
%M7=getelementptr inbounds i8,i8*%MZ,i64 16
%M8=bitcast i8*%M7 to i32*
store i32 3,i32*%M8,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%MZ)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@if,i64 0,i32 2)to i8*)
M9:
%Na=call fastcc i8*@_SMLFN6String9translateE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ic,i64 0,i32 2)to i8*))
%Nb=getelementptr inbounds i8,i8*%Na,i64 16
%Nc=bitcast i8*%Nb to i8*(i8*,i8*)**
%Nd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nc,align 8
%Ne=bitcast i8*%Na to i8**
%Nf=load i8*,i8**%Ne,align 8
store i8*%Nf,i8**%aL,align 8
%Ng=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%Nh=getelementptr inbounds i8,i8*%Ng,i64 8
%Ni=bitcast i8*%Nh to i8**
%Nj=load i8*,i8**%Ni,align 8
%Nk=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%Nj)
%Nl=load i8*,i8**%aL,align 8
store i8*null,i8**%aL,align 8
%Nm=call fastcc i8*%Nd(i8*inreg%Nl,i8*inreg%Nk)
%Nn=call fastcc i8*@_SMLLN12ElaborateSQL11Con__FUNCALLE_1376(i8*inreg%Nm)
%No=getelementptr inbounds i8,i8*%Nn,i64 16
%Np=bitcast i8*%No to i8*(i8*,i8*)**
%Nq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Np,align 8
%Nr=bitcast i8*%Nn to i8**
%Ns=load i8*,i8**%Nr,align 8
store i8*%Ns,i8**%aK,align 8
%Nt=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Nu=getelementptr inbounds i8,i8*%Nt,i64 16
%Nv=bitcast i8*%Nu to i8*(i8*,i8*)**
%Nw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nv,align 8
%Nx=bitcast i8*%Nt to i8**
%Ny=load i8*,i8**%Nx,align 8
%Nz=call fastcc i8*%Nw(i8*inreg%Ny,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@id,i64 0,i32 2)to i8*))
%NA=getelementptr inbounds i8,i8*%Nz,i64 16
%NB=bitcast i8*%NA to i8*(i8*,i8*)**
%NC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%NB,align 8
%ND=bitcast i8*%Nz to i8**
%NE=load i8*,i8**%ND,align 8
%NF=bitcast i8**%aI to i8***
%NG=load i8**,i8***%NF,align 8
store i8*null,i8**%aI,align 8
%NH=load i8*,i8**%NG,align 8
%NI=call fastcc i8*%NC(i8*inreg%NE,i8*inreg%NH)
%NJ=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%NK=call fastcc i8*%Nq(i8*inreg%NJ,i8*inreg%NI)
store i8*%NK,i8**%aI,align 8
%NL=call i8*@sml_alloc(i32 inreg 20)#0
%NM=getelementptr inbounds i8,i8*%NL,i64 -4
%NN=bitcast i8*%NM to i32*
store i32 1342177296,i32*%NN,align 4
store i8*%NL,i8**%aK,align 8
%NO=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%NP=bitcast i8*%NL to i8**
store i8*%NO,i8**%NP,align 8
%NQ=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%NR=getelementptr inbounds i8,i8*%NL,i64 8
%NS=bitcast i8*%NR to i8**
store i8*%NQ,i8**%NS,align 8
%NT=getelementptr inbounds i8,i8*%NL,i64 16
%NU=bitcast i8*%NT to i32*
store i32 3,i32*%NU,align 4
%NV=call i8*@sml_alloc(i32 inreg 28)#0
%NW=getelementptr inbounds i8,i8*%NV,i64 -4
%NX=bitcast i8*%NW to i32*
store i32 1342177304,i32*%NX,align 4
%NY=load i8*,i8**%aK,align 8
%NZ=bitcast i8*%NV to i8**
store i8*%NY,i8**%NZ,align 8
%N0=getelementptr inbounds i8,i8*%NV,i64 8
%N1=bitcast i8*%N0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2346 to void(...)*),void(...)**%N1,align 8
%N2=getelementptr inbounds i8,i8*%NV,i64 16
%N3=bitcast i8*%N2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2346 to void(...)*),void(...)**%N3,align 8
%N4=getelementptr inbounds i8,i8*%NV,i64 24
%N5=bitcast i8*%N4 to i32*
store i32 -2147483647,i32*%N5,align 4
ret i8*%NV
N6:
%N7=getelementptr inbounds i8,i8*%aZ,i64 8
%N8=bitcast i8*%N7 to i8**
%N9=load i8*,i8**%N8,align 8
%Oa=getelementptr inbounds i8,i8*%N9,i64 16
%Ob=bitcast i8*%Oa to i8**
%Oc=load i8*,i8**%Ob,align 8
store i8*%Oc,i8**%aI,align 8
%Od=load i8*,i8**@_SMLZN17ElaborateErrorSQL13AppInSQLQueryE,align 8
store i8*%Od,i8**%aJ,align 8
%Oe=call i8*@sml_alloc(i32 inreg 20)#0
%Of=getelementptr inbounds i8,i8*%Oe,i64 -4
%Og=bitcast i8*%Of to i32*
store i32 1342177296,i32*%Og,align 4
store i8*%Oe,i8**%aK,align 8
%Oh=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Oi=bitcast i8*%Oe to i8**
store i8*%Oh,i8**%Oi,align 8
%Oj=getelementptr inbounds i8,i8*%Oe,i64 8
%Ok=bitcast i8*%Oj to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ia,i64 0,i32 2,i64 0),i8**%Ok,align 8
%Ol=getelementptr inbounds i8,i8*%Oe,i64 16
%Om=bitcast i8*%Ol to i32*
store i32 3,i32*%Om,align 4
%On=call i8*@sml_alloc(i32 inreg 20)#0
%Oo=getelementptr inbounds i8,i8*%On,i64 -4
%Op=bitcast i8*%Oo to i32*
store i32 1342177296,i32*%Op,align 4
%Oq=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Or=bitcast i8*%On to i8**
store i8*%Oq,i8**%Or,align 8
%Os=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%Ot=getelementptr inbounds i8,i8*%On,i64 8
%Ou=bitcast i8*%Ot to i8**
store i8*%Os,i8**%Ou,align 8
%Ov=getelementptr inbounds i8,i8*%On,i64 16
%Ow=bitcast i8*%Ov to i32*
store i32 3,i32*%Ow,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%On)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ib,i64 0,i32 2)to i8*)
Ox:
%Oy=getelementptr inbounds i8,i8*%aZ,i64 8
%Oz=bitcast i8*%Oy to i8**
%OA=load i8*,i8**%Oz,align 8
store i8*%OA,i8**%aK,align 8
%OB=bitcast i8*%OA to i32*
%OC=load i32,i32*%OB,align 4
%OD=icmp eq i32%OC,0
%OE=getelementptr inbounds i8,i8*%OA,i64 8
%OF=bitcast i8*%OE to i8**
%OG=load i8*,i8**%OF,align 8
%OH=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%OG)
store i8*%OH,i8**%aI,align 8
%OI=load i8*,i8**%aK,align 8
%OJ=getelementptr inbounds i8,i8*%OI,i64 16
%OK=bitcast i8*%OJ to i8**
%OL=load i8*,i8**%OK,align 8
%OM=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%OL)
store i8*%OM,i8**%aJ,align 8
%ON=call i8*@sml_alloc(i32 inreg 20)#0
%OO=getelementptr inbounds i8,i8*%ON,i64 -4
%OP=bitcast i8*%OO to i32*
store i32 1342177296,i32*%OP,align 4
%OQ=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%OR=bitcast i8*%ON to i8**
store i8*%OQ,i8**%OR,align 8
%OS=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%OT=getelementptr inbounds i8,i8*%ON,i64 8
%OU=bitcast i8*%OT to i8**
store i8*%OS,i8**%OU,align 8
%OV=getelementptr inbounds i8,i8*%ON,i64 16
%OW=bitcast i8*%OV to i32*
store i32 3,i32*%OW,align 4
br i1%OD,label%P0,label%OX
OX:
%OY=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%OY)
%OZ=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%OZ)
%O0=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O0)
%O1=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O1)
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
store i8*%ON,i8**%n,align 8
%O2=load atomic i32,i32*@sml_check_flag unordered,align 4
%O3=icmp eq i32%O2,0
br i1%O3,label%O9,label%O4
O4:
call void@sml_check(i32 inreg%O2)
%O5=load i8*,i8**%n,align 8
%O6=bitcast i8*%O5 to i8**
%O7=getelementptr inbounds i8,i8*%O5,i64 8
%O8=bitcast i8*%O7 to i8**
br label%O9
O9:
%Pa=phi i8**[%OU,%OX],[%O8,%O4]
%Pb=phi i8**[%OR,%OX],[%O6,%O4]
%Pc=load i8*,i8**%Pb,align 8
store i8*%Pc,i8**%n,align 8
%Pd=load i8*,i8**%Pa,align 8
store i8*%Pd,i8**%o,align 8
%Pe=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cX,i64 0,i32 2)to i8*))
%Pf=getelementptr inbounds i8,i8*%Pe,i64 16
%Pg=bitcast i8*%Pf to i8*(i8*,i8*)**
%Ph=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Pg,align 8
%Pi=bitcast i8*%Pe to i8**
%Pj=load i8*,i8**%Pi,align 8
store i8*%Pj,i8**%p,align 8
%Pk=call i8*@sml_alloc(i32 inreg 20)#0
%Pl=getelementptr inbounds i8,i8*%Pk,i64 -4
%Pm=bitcast i8*%Pl to i32*
store i32 1342177296,i32*%Pm,align 4
store i8*%Pk,i8**%q,align 8
%Pn=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%Po=bitcast i8*%Pk to i8**
store i8*%Pn,i8**%Po,align 8
%Pp=getelementptr inbounds i8,i8*%Pk,i64 8
%Pq=bitcast i8*%Pp to i8**
store i8*null,i8**%Pq,align 8
%Pr=getelementptr inbounds i8,i8*%Pk,i64 16
%Ps=bitcast i8*%Pr to i32*
store i32 3,i32*%Ps,align 4
%Pt=call i8*@sml_alloc(i32 inreg 20)#0
%Pu=getelementptr inbounds i8,i8*%Pt,i64 -4
%Pv=bitcast i8*%Pu to i32*
store i32 1342177296,i32*%Pv,align 4
%Pw=load i8*,i8**%n,align 8
%Px=bitcast i8*%Pt to i8**
store i8*%Pw,i8**%Px,align 8
%Py=load i8*,i8**%q,align 8
%Pz=getelementptr inbounds i8,i8*%Pt,i64 8
%PA=bitcast i8*%Pz to i8**
store i8*%Py,i8**%PA,align 8
%PB=getelementptr inbounds i8,i8*%Pt,i64 16
%PC=bitcast i8*%PB to i32*
store i32 3,i32*%PC,align 4
%PD=load i8*,i8**%p,align 8
%PE=call fastcc i8*%Ph(i8*inreg%PD,i8*inreg%Pt)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%OY)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%OZ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O0)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O1)
store i8*%PE,i8**%aI,align 8
%PF=call i8*@sml_alloc(i32 inreg 20)#0
%PG=getelementptr inbounds i8,i8*%PF,i64 -4
%PH=bitcast i8*%PG to i32*
store i32 1342177296,i32*%PH,align 4
store i8*%PF,i8**%aJ,align 8
%PI=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%PJ=bitcast i8*%PF to i8**
store i8*%PI,i8**%PJ,align 8
%PK=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%PL=getelementptr inbounds i8,i8*%PF,i64 8
%PM=bitcast i8*%PL to i8**
store i8*%PK,i8**%PM,align 8
%PN=getelementptr inbounds i8,i8*%PF,i64 16
%PO=bitcast i8*%PN to i32*
store i32 3,i32*%PO,align 4
%PP=call i8*@sml_alloc(i32 inreg 28)#0
%PQ=getelementptr inbounds i8,i8*%PP,i64 -4
%PR=bitcast i8*%PQ to i32*
store i32 1342177304,i32*%PR,align 4
%PS=load i8*,i8**%aJ,align 8
%PT=bitcast i8*%PP to i8**
store i8*%PS,i8**%PT,align 8
%PU=getelementptr inbounds i8,i8*%PP,i64 8
%PV=bitcast i8*%PU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2337 to void(...)*),void(...)**%PV,align 8
%PW=getelementptr inbounds i8,i8*%PP,i64 16
%PX=bitcast i8*%PW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2337 to void(...)*),void(...)**%PX,align 8
%PY=getelementptr inbounds i8,i8*%PP,i64 24
%PZ=bitcast i8*%PY to i32*
store i32 -2147483647,i32*%PZ,align 4
ret i8*%PP
P0:
%P1=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P1)
%P2=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P2)
%P3=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P3)
%P4=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P4)
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%ON,i8**%j,align 8
%P5=load atomic i32,i32*@sml_check_flag unordered,align 4
%P6=icmp eq i32%P5,0
br i1%P6,label%Qc,label%P7
P7:
call void@sml_check(i32 inreg%P5)
%P8=load i8*,i8**%j,align 8
%P9=bitcast i8*%P8 to i8**
%Qa=getelementptr inbounds i8,i8*%P8,i64 8
%Qb=bitcast i8*%Qa to i8**
br label%Qc
Qc:
%Qd=phi i8**[%OU,%P0],[%Qb,%P7]
%Qe=phi i8**[%OR,%P0],[%P9,%P7]
%Qf=load i8*,i8**%Qe,align 8
store i8*%Qf,i8**%j,align 8
%Qg=load i8*,i8**%Qd,align 8
store i8*%Qg,i8**%k,align 8
%Qh=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cT,i64 0,i32 2)to i8*))
%Qi=getelementptr inbounds i8,i8*%Qh,i64 16
%Qj=bitcast i8*%Qi to i8*(i8*,i8*)**
%Qk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qj,align 8
%Ql=bitcast i8*%Qh to i8**
%Qm=load i8*,i8**%Ql,align 8
store i8*%Qm,i8**%l,align 8
%Qn=call i8*@sml_alloc(i32 inreg 20)#0
%Qo=getelementptr inbounds i8,i8*%Qn,i64 -4
%Qp=bitcast i8*%Qo to i32*
store i32 1342177296,i32*%Qp,align 4
store i8*%Qn,i8**%m,align 8
%Qq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Qr=bitcast i8*%Qn to i8**
store i8*%Qq,i8**%Qr,align 8
%Qs=getelementptr inbounds i8,i8*%Qn,i64 8
%Qt=bitcast i8*%Qs to i8**
store i8*null,i8**%Qt,align 8
%Qu=getelementptr inbounds i8,i8*%Qn,i64 16
%Qv=bitcast i8*%Qu to i32*
store i32 3,i32*%Qv,align 4
%Qw=call i8*@sml_alloc(i32 inreg 20)#0
%Qx=getelementptr inbounds i8,i8*%Qw,i64 -4
%Qy=bitcast i8*%Qx to i32*
store i32 1342177296,i32*%Qy,align 4
%Qz=load i8*,i8**%j,align 8
%QA=bitcast i8*%Qw to i8**
store i8*%Qz,i8**%QA,align 8
%QB=load i8*,i8**%m,align 8
%QC=getelementptr inbounds i8,i8*%Qw,i64 8
%QD=bitcast i8*%QC to i8**
store i8*%QB,i8**%QD,align 8
%QE=getelementptr inbounds i8,i8*%Qw,i64 16
%QF=bitcast i8*%QE to i32*
store i32 3,i32*%QF,align 4
%QG=load i8*,i8**%l,align 8
%QH=call fastcc i8*%Qk(i8*inreg%QG,i8*inreg%Qw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P1)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P2)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P3)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P4)
store i8*%QH,i8**%aI,align 8
%QI=call i8*@sml_alloc(i32 inreg 20)#0
%QJ=getelementptr inbounds i8,i8*%QI,i64 -4
%QK=bitcast i8*%QJ to i32*
store i32 1342177296,i32*%QK,align 4
store i8*%QI,i8**%aJ,align 8
%QL=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%QM=bitcast i8*%QI to i8**
store i8*%QL,i8**%QM,align 8
%QN=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%QO=getelementptr inbounds i8,i8*%QI,i64 8
%QP=bitcast i8*%QO to i8**
store i8*%QN,i8**%QP,align 8
%QQ=getelementptr inbounds i8,i8*%QI,i64 16
%QR=bitcast i8*%QQ to i32*
store i32 3,i32*%QR,align 4
%QS=call i8*@sml_alloc(i32 inreg 28)#0
%QT=getelementptr inbounds i8,i8*%QS,i64 -4
%QU=bitcast i8*%QT to i32*
store i32 1342177304,i32*%QU,align 4
%QV=load i8*,i8**%aJ,align 8
%QW=bitcast i8*%QS to i8**
store i8*%QV,i8**%QW,align 8
%QX=getelementptr inbounds i8,i8*%QS,i64 8
%QY=bitcast i8*%QX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2336 to void(...)*),void(...)**%QY,align 8
%QZ=getelementptr inbounds i8,i8*%QS,i64 16
%Q0=bitcast i8*%QZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2336 to void(...)*),void(...)**%Q0,align 8
%Q1=getelementptr inbounds i8,i8*%QS,i64 24
%Q2=bitcast i8*%Q1 to i32*
store i32 -2147483647,i32*%Q2,align 4
ret i8*%QS
Q3:
%Q4=getelementptr inbounds i8,i8*%aZ,i64 8
%Q5=bitcast i8*%Q4 to i8**
%Q6=load i8*,i8**%Q5,align 8
store i8*%Q6,i8**%aJ,align 8
%Q7=bitcast i8*%Q6 to i32*
%Q8=load i32,i32*%Q7,align 4
switch i32%Q8,label%Q9[
i32 5,label%Wc
i32 2,label%VC
i32 6,label%U2
i32 3,label%Us
i32 0,label%TS
i32 1,label%Ti
i32 7,label%SI
i32 4,label%R8
i32 8,label%Rr
]
Q9:
store i8*null,i8**%aJ,align 8
call void@sml_matchcomp_bug()
%Ra=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Ra,i8**%aI,align 8
%Rb=call i8*@sml_alloc(i32 inreg 20)#0
%Rc=getelementptr inbounds i8,i8*%Rb,i64 -4
%Rd=bitcast i8*%Rc to i32*
store i32 1342177296,i32*%Rd,align 4
store i8*%Rb,i8**%aJ,align 8
%Re=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Rf=bitcast i8*%Rb to i8**
store i8*%Re,i8**%Rf,align 8
%Rg=getelementptr inbounds i8,i8*%Rb,i64 8
%Rh=bitcast i8*%Rg to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@ix,i64 0,i32 2,i64 0),i8**%Rh,align 8
%Ri=getelementptr inbounds i8,i8*%Rb,i64 16
%Rj=bitcast i8*%Ri to i32*
store i32 3,i32*%Rj,align 4
%Rk=call i8*@sml_alloc(i32 inreg 60)#0
%Rl=getelementptr inbounds i8,i8*%Rk,i64 -4
%Rm=bitcast i8*%Rl to i32*
store i32 1342177336,i32*%Rm,align 4
%Rn=getelementptr inbounds i8,i8*%Rk,i64 56
%Ro=bitcast i8*%Rn to i32*
store i32 1,i32*%Ro,align 4
%Rp=load i8*,i8**%aJ,align 8
%Rq=bitcast i8*%Rk to i8**
store i8*%Rp,i8**%Rq,align 8
call void@sml_raise(i8*inreg%Rk)#1
unreachable
Rr:
%Rs=getelementptr inbounds i8,i8*%Q6,i64 8
%Rt=bitcast i8*%Rs to i8**
%Ru=load i8*,i8**%Rt,align 8
%Rv=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Ru)
store i8*%Rv,i8**%aI,align 8
%Rw=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cP,i64 0,i32 2)to i8*))
%Rx=getelementptr inbounds i8,i8*%Rw,i64 16
%Ry=bitcast i8*%Rx to i8*(i8*,i8*)**
%Rz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ry,align 8
%RA=bitcast i8*%Rw to i8**
%RB=load i8*,i8**%RA,align 8
store i8*%RB,i8**%aK,align 8
%RC=call i8*@sml_alloc(i32 inreg 20)#0
%RD=getelementptr inbounds i8,i8*%RC,i64 -4
%RE=bitcast i8*%RD to i32*
store i32 1342177296,i32*%RE,align 4
%RF=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%RG=bitcast i8*%RC to i8**
store i8*%RF,i8**%RG,align 8
%RH=getelementptr inbounds i8,i8*%RC,i64 8
%RI=bitcast i8*%RH to i8**
store i8*null,i8**%RI,align 8
%RJ=getelementptr inbounds i8,i8*%RC,i64 16
%RK=bitcast i8*%RJ to i32*
store i32 3,i32*%RK,align 4
%RL=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%RM=call fastcc i8*%Rz(i8*inreg%RL,i8*inreg%RC)
store i8*%RM,i8**%aI,align 8
%RN=call i8*@sml_alloc(i32 inreg 20)#0
%RO=getelementptr inbounds i8,i8*%RN,i64 -4
%RP=bitcast i8*%RO to i32*
store i32 1342177296,i32*%RP,align 4
store i8*%RN,i8**%aK,align 8
%RQ=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%RR=bitcast i8*%RN to i8**
store i8*%RQ,i8**%RR,align 8
%RS=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%RT=getelementptr inbounds i8,i8*%RN,i64 8
%RU=bitcast i8*%RT to i8**
store i8*%RS,i8**%RU,align 8
%RV=getelementptr inbounds i8,i8*%RN,i64 16
%RW=bitcast i8*%RV to i32*
store i32 3,i32*%RW,align 4
%RX=call i8*@sml_alloc(i32 inreg 28)#0
%RY=getelementptr inbounds i8,i8*%RX,i64 -4
%RZ=bitcast i8*%RY to i32*
store i32 1342177304,i32*%RZ,align 4
%R0=load i8*,i8**%aK,align 8
%R1=bitcast i8*%RX to i8**
store i8*%R0,i8**%R1,align 8
%R2=getelementptr inbounds i8,i8*%RX,i64 8
%R3=bitcast i8*%R2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2334 to void(...)*),void(...)**%R3,align 8
%R4=getelementptr inbounds i8,i8*%RX,i64 16
%R5=bitcast i8*%R4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2334 to void(...)*),void(...)**%R5,align 8
%R6=getelementptr inbounds i8,i8*%RX,i64 24
%R7=bitcast i8*%R6 to i32*
store i32 -2147483647,i32*%R7,align 4
ret i8*%RX
R8:
%R9=getelementptr inbounds i8,i8*%Q6,i64 8
%Sa=bitcast i8*%R9 to i8**
%Sb=load i8*,i8**%Sa,align 8
%Sc=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Sb)
store i8*%Sc,i8**%aI,align 8
%Sd=call i8*@sml_alloc(i32 inreg 20)#0
%Se=getelementptr inbounds i8,i8*%Sd,i64 -4
%Sf=bitcast i8*%Se to i32*
store i32 1342177296,i32*%Sf,align 4
%Sg=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Sh=bitcast i8*%Sd to i8**
store i8*%Sg,i8**%Sh,align 8
%Si=getelementptr inbounds i8,i8*%Sd,i64 8
%Sj=bitcast i8*%Si to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@h9,i64 0,i32 2,i64 0),i8**%Sj,align 8
%Sk=getelementptr inbounds i8,i8*%Sd,i64 16
%Sl=bitcast i8*%Sk to i32*
store i32 3,i32*%Sl,align 4
%Sm=call fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1368(i8*inreg%Sd)
store i8*%Sm,i8**%aI,align 8
%Sn=call i8*@sml_alloc(i32 inreg 20)#0
%So=getelementptr inbounds i8,i8*%Sn,i64 -4
%Sp=bitcast i8*%So to i32*
store i32 1342177296,i32*%Sp,align 4
store i8*%Sn,i8**%aK,align 8
%Sq=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Sr=bitcast i8*%Sn to i8**
store i8*%Sq,i8**%Sr,align 8
%Ss=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%St=getelementptr inbounds i8,i8*%Sn,i64 8
%Su=bitcast i8*%St to i8**
store i8*%Ss,i8**%Su,align 8
%Sv=getelementptr inbounds i8,i8*%Sn,i64 16
%Sw=bitcast i8*%Sv to i32*
store i32 3,i32*%Sw,align 4
%Sx=call i8*@sml_alloc(i32 inreg 28)#0
%Sy=getelementptr inbounds i8,i8*%Sx,i64 -4
%Sz=bitcast i8*%Sy to i32*
store i32 1342177304,i32*%Sz,align 4
%SA=load i8*,i8**%aK,align 8
%SB=bitcast i8*%Sx to i8**
store i8*%SA,i8**%SB,align 8
%SC=getelementptr inbounds i8,i8*%Sx,i64 8
%SD=bitcast i8*%SC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2333 to void(...)*),void(...)**%SD,align 8
%SE=getelementptr inbounds i8,i8*%Sx,i64 16
%SF=bitcast i8*%SE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2333 to void(...)*),void(...)**%SF,align 8
%SG=getelementptr inbounds i8,i8*%Sx,i64 24
%SH=bitcast i8*%SG to i32*
store i32 -2147483647,i32*%SH,align 4
ret i8*%Sx
SI:
%SJ=getelementptr inbounds i8,i8*%Q6,i64 8
%SK=bitcast i8*%SJ to i8**
%SL=load i8*,i8**%SK,align 8
%SM=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%SL)
store i8*%SM,i8**%aI,align 8
%SN=call i8*@sml_alloc(i32 inreg 20)#0
%SO=getelementptr inbounds i8,i8*%SN,i64 -4
%SP=bitcast i8*%SO to i32*
store i32 1342177296,i32*%SP,align 4
%SQ=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%SR=bitcast i8*%SN to i8**
store i8*%SQ,i8**%SR,align 8
%SS=getelementptr inbounds i8,i8*%SN,i64 8
%ST=bitcast i8*%SS to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@h9,i64 0,i32 2,i64 0),i8**%ST,align 8
%SU=getelementptr inbounds i8,i8*%SN,i64 16
%SV=bitcast i8*%SU to i32*
store i32 3,i32*%SV,align 4
%SW=call fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1365(i8*inreg%SN)
store i8*%SW,i8**%aI,align 8
%SX=call i8*@sml_alloc(i32 inreg 20)#0
%SY=getelementptr inbounds i8,i8*%SX,i64 -4
%SZ=bitcast i8*%SY to i32*
store i32 1342177296,i32*%SZ,align 4
store i8*%SX,i8**%aK,align 8
%S0=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%S1=bitcast i8*%SX to i8**
store i8*%S0,i8**%S1,align 8
%S2=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%S3=getelementptr inbounds i8,i8*%SX,i64 8
%S4=bitcast i8*%S3 to i8**
store i8*%S2,i8**%S4,align 8
%S5=getelementptr inbounds i8,i8*%SX,i64 16
%S6=bitcast i8*%S5 to i32*
store i32 3,i32*%S6,align 4
%S7=call i8*@sml_alloc(i32 inreg 28)#0
%S8=getelementptr inbounds i8,i8*%S7,i64 -4
%S9=bitcast i8*%S8 to i32*
store i32 1342177304,i32*%S9,align 4
%Ta=load i8*,i8**%aK,align 8
%Tb=bitcast i8*%S7 to i8**
store i8*%Ta,i8**%Tb,align 8
%Tc=getelementptr inbounds i8,i8*%S7,i64 8
%Td=bitcast i8*%Tc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2331 to void(...)*),void(...)**%Td,align 8
%Te=getelementptr inbounds i8,i8*%S7,i64 16
%Tf=bitcast i8*%Te to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2331 to void(...)*),void(...)**%Tf,align 8
%Tg=getelementptr inbounds i8,i8*%S7,i64 24
%Th=bitcast i8*%Tg to i32*
store i32 -2147483647,i32*%Th,align 4
ret i8*%S7
Ti:
%Tj=getelementptr inbounds i8,i8*%Q6,i64 8
%Tk=bitcast i8*%Tj to i8**
%Tl=load i8*,i8**%Tk,align 8
%Tm=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Tl)
store i8*%Tm,i8**%aI,align 8
%Tn=call i8*@sml_alloc(i32 inreg 20)#0
%To=getelementptr inbounds i8,i8*%Tn,i64 -4
%Tp=bitcast i8*%To to i32*
store i32 1342177296,i32*%Tp,align 4
%Tq=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Tr=bitcast i8*%Tn to i8**
store i8*%Tq,i8**%Tr,align 8
%Ts=getelementptr inbounds i8,i8*%Tn,i64 8
%Tt=bitcast i8*%Ts to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@h8,i64 0,i32 2,i64 0),i8**%Tt,align 8
%Tu=getelementptr inbounds i8,i8*%Tn,i64 16
%Tv=bitcast i8*%Tu to i32*
store i32 3,i32*%Tv,align 4
%Tw=call fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1368(i8*inreg%Tn)
store i8*%Tw,i8**%aI,align 8
%Tx=call i8*@sml_alloc(i32 inreg 20)#0
%Ty=getelementptr inbounds i8,i8*%Tx,i64 -4
%Tz=bitcast i8*%Ty to i32*
store i32 1342177296,i32*%Tz,align 4
store i8*%Tx,i8**%aK,align 8
%TA=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%TB=bitcast i8*%Tx to i8**
store i8*%TA,i8**%TB,align 8
%TC=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%TD=getelementptr inbounds i8,i8*%Tx,i64 8
%TE=bitcast i8*%TD to i8**
store i8*%TC,i8**%TE,align 8
%TF=getelementptr inbounds i8,i8*%Tx,i64 16
%TG=bitcast i8*%TF to i32*
store i32 3,i32*%TG,align 4
%TH=call i8*@sml_alloc(i32 inreg 28)#0
%TI=getelementptr inbounds i8,i8*%TH,i64 -4
%TJ=bitcast i8*%TI to i32*
store i32 1342177304,i32*%TJ,align 4
%TK=load i8*,i8**%aK,align 8
%TL=bitcast i8*%TH to i8**
store i8*%TK,i8**%TL,align 8
%TM=getelementptr inbounds i8,i8*%TH,i64 8
%TN=bitcast i8*%TM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2329 to void(...)*),void(...)**%TN,align 8
%TO=getelementptr inbounds i8,i8*%TH,i64 16
%TP=bitcast i8*%TO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2329 to void(...)*),void(...)**%TP,align 8
%TQ=getelementptr inbounds i8,i8*%TH,i64 24
%TR=bitcast i8*%TQ to i32*
store i32 -2147483647,i32*%TR,align 4
ret i8*%TH
TS:
%TT=getelementptr inbounds i8,i8*%Q6,i64 8
%TU=bitcast i8*%TT to i8**
%TV=load i8*,i8**%TU,align 8
%TW=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%TV)
store i8*%TW,i8**%aI,align 8
%TX=call i8*@sml_alloc(i32 inreg 20)#0
%TY=getelementptr inbounds i8,i8*%TX,i64 -4
%TZ=bitcast i8*%TY to i32*
store i32 1342177296,i32*%TZ,align 4
%T0=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%T1=bitcast i8*%TX to i8**
store i8*%T0,i8**%T1,align 8
%T2=getelementptr inbounds i8,i8*%TX,i64 8
%T3=bitcast i8*%T2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@h8,i64 0,i32 2,i64 0),i8**%T3,align 8
%T4=getelementptr inbounds i8,i8*%TX,i64 16
%T5=bitcast i8*%T4 to i32*
store i32 3,i32*%T5,align 4
%T6=call fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1365(i8*inreg%TX)
store i8*%T6,i8**%aI,align 8
%T7=call i8*@sml_alloc(i32 inreg 20)#0
%T8=getelementptr inbounds i8,i8*%T7,i64 -4
%T9=bitcast i8*%T8 to i32*
store i32 1342177296,i32*%T9,align 4
store i8*%T7,i8**%aK,align 8
%Ua=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Ub=bitcast i8*%T7 to i8**
store i8*%Ua,i8**%Ub,align 8
%Uc=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Ud=getelementptr inbounds i8,i8*%T7,i64 8
%Ue=bitcast i8*%Ud to i8**
store i8*%Uc,i8**%Ue,align 8
%Uf=getelementptr inbounds i8,i8*%T7,i64 16
%Ug=bitcast i8*%Uf to i32*
store i32 3,i32*%Ug,align 4
%Uh=call i8*@sml_alloc(i32 inreg 28)#0
%Ui=getelementptr inbounds i8,i8*%Uh,i64 -4
%Uj=bitcast i8*%Ui to i32*
store i32 1342177304,i32*%Uj,align 4
%Uk=load i8*,i8**%aK,align 8
%Ul=bitcast i8*%Uh to i8**
store i8*%Uk,i8**%Ul,align 8
%Um=getelementptr inbounds i8,i8*%Uh,i64 8
%Un=bitcast i8*%Um to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2327 to void(...)*),void(...)**%Un,align 8
%Uo=getelementptr inbounds i8,i8*%Uh,i64 16
%Up=bitcast i8*%Uo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2327 to void(...)*),void(...)**%Up,align 8
%Uq=getelementptr inbounds i8,i8*%Uh,i64 24
%Ur=bitcast i8*%Uq to i32*
store i32 -2147483647,i32*%Ur,align 4
ret i8*%Uh
Us:
%Ut=getelementptr inbounds i8,i8*%Q6,i64 8
%Uu=bitcast i8*%Ut to i8**
%Uv=load i8*,i8**%Uu,align 8
%Uw=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Uv)
store i8*%Uw,i8**%aI,align 8
%Ux=call i8*@sml_alloc(i32 inreg 20)#0
%Uy=getelementptr inbounds i8,i8*%Ux,i64 -4
%Uz=bitcast i8*%Uy to i32*
store i32 1342177296,i32*%Uz,align 4
%UA=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%UB=bitcast i8*%Ux to i8**
store i8*%UA,i8**%UB,align 8
%UC=getelementptr inbounds i8,i8*%Ux,i64 8
%UD=bitcast i8*%UC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h7,i64 0,i32 2,i64 0),i8**%UD,align 8
%UE=getelementptr inbounds i8,i8*%Ux,i64 16
%UF=bitcast i8*%UE to i32*
store i32 3,i32*%UF,align 4
%UG=call fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1368(i8*inreg%Ux)
store i8*%UG,i8**%aI,align 8
%UH=call i8*@sml_alloc(i32 inreg 20)#0
%UI=getelementptr inbounds i8,i8*%UH,i64 -4
%UJ=bitcast i8*%UI to i32*
store i32 1342177296,i32*%UJ,align 4
store i8*%UH,i8**%aK,align 8
%UK=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%UL=bitcast i8*%UH to i8**
store i8*%UK,i8**%UL,align 8
%UM=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%UN=getelementptr inbounds i8,i8*%UH,i64 8
%UO=bitcast i8*%UN to i8**
store i8*%UM,i8**%UO,align 8
%UP=getelementptr inbounds i8,i8*%UH,i64 16
%UQ=bitcast i8*%UP to i32*
store i32 3,i32*%UQ,align 4
%UR=call i8*@sml_alloc(i32 inreg 28)#0
%US=getelementptr inbounds i8,i8*%UR,i64 -4
%UT=bitcast i8*%US to i32*
store i32 1342177304,i32*%UT,align 4
%UU=load i8*,i8**%aK,align 8
%UV=bitcast i8*%UR to i8**
store i8*%UU,i8**%UV,align 8
%UW=getelementptr inbounds i8,i8*%UR,i64 8
%UX=bitcast i8*%UW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2325 to void(...)*),void(...)**%UX,align 8
%UY=getelementptr inbounds i8,i8*%UR,i64 16
%UZ=bitcast i8*%UY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2325 to void(...)*),void(...)**%UZ,align 8
%U0=getelementptr inbounds i8,i8*%UR,i64 24
%U1=bitcast i8*%U0 to i32*
store i32 -2147483647,i32*%U1,align 4
ret i8*%UR
U2:
%U3=getelementptr inbounds i8,i8*%Q6,i64 8
%U4=bitcast i8*%U3 to i8**
%U5=load i8*,i8**%U4,align 8
%U6=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%U5)
store i8*%U6,i8**%aI,align 8
%U7=call i8*@sml_alloc(i32 inreg 20)#0
%U8=getelementptr inbounds i8,i8*%U7,i64 -4
%U9=bitcast i8*%U8 to i32*
store i32 1342177296,i32*%U9,align 4
%Va=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Vb=bitcast i8*%U7 to i8**
store i8*%Va,i8**%Vb,align 8
%Vc=getelementptr inbounds i8,i8*%U7,i64 8
%Vd=bitcast i8*%Vc to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h7,i64 0,i32 2,i64 0),i8**%Vd,align 8
%Ve=getelementptr inbounds i8,i8*%U7,i64 16
%Vf=bitcast i8*%Ve to i32*
store i32 3,i32*%Vf,align 4
%Vg=call fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1365(i8*inreg%U7)
store i8*%Vg,i8**%aI,align 8
%Vh=call i8*@sml_alloc(i32 inreg 20)#0
%Vi=getelementptr inbounds i8,i8*%Vh,i64 -4
%Vj=bitcast i8*%Vi to i32*
store i32 1342177296,i32*%Vj,align 4
store i8*%Vh,i8**%aK,align 8
%Vk=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Vl=bitcast i8*%Vh to i8**
store i8*%Vk,i8**%Vl,align 8
%Vm=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Vn=getelementptr inbounds i8,i8*%Vh,i64 8
%Vo=bitcast i8*%Vn to i8**
store i8*%Vm,i8**%Vo,align 8
%Vp=getelementptr inbounds i8,i8*%Vh,i64 16
%Vq=bitcast i8*%Vp to i32*
store i32 3,i32*%Vq,align 4
%Vr=call i8*@sml_alloc(i32 inreg 28)#0
%Vs=getelementptr inbounds i8,i8*%Vr,i64 -4
%Vt=bitcast i8*%Vs to i32*
store i32 1342177304,i32*%Vt,align 4
%Vu=load i8*,i8**%aK,align 8
%Vv=bitcast i8*%Vr to i8**
store i8*%Vu,i8**%Vv,align 8
%Vw=getelementptr inbounds i8,i8*%Vr,i64 8
%Vx=bitcast i8*%Vw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2323 to void(...)*),void(...)**%Vx,align 8
%Vy=getelementptr inbounds i8,i8*%Vr,i64 16
%Vz=bitcast i8*%Vy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2323 to void(...)*),void(...)**%Vz,align 8
%VA=getelementptr inbounds i8,i8*%Vr,i64 24
%VB=bitcast i8*%VA to i32*
store i32 -2147483647,i32*%VB,align 4
ret i8*%Vr
VC:
%VD=getelementptr inbounds i8,i8*%Q6,i64 8
%VE=bitcast i8*%VD to i8**
%VF=load i8*,i8**%VE,align 8
%VG=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%VF)
store i8*%VG,i8**%aI,align 8
%VH=call i8*@sml_alloc(i32 inreg 20)#0
%VI=getelementptr inbounds i8,i8*%VH,i64 -4
%VJ=bitcast i8*%VI to i32*
store i32 1342177296,i32*%VJ,align 4
%VK=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%VL=bitcast i8*%VH to i8**
store i8*%VK,i8**%VL,align 8
%VM=getelementptr inbounds i8,i8*%VH,i64 8
%VN=bitcast i8*%VM to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h6,i64 0,i32 2,i64 0),i8**%VN,align 8
%VO=getelementptr inbounds i8,i8*%VH,i64 16
%VP=bitcast i8*%VO to i32*
store i32 3,i32*%VP,align 4
%VQ=call fastcc i8*@_SMLLN12ElaborateSQL10Con__IS__NOTE_1368(i8*inreg%VH)
store i8*%VQ,i8**%aI,align 8
%VR=call i8*@sml_alloc(i32 inreg 20)#0
%VS=getelementptr inbounds i8,i8*%VR,i64 -4
%VT=bitcast i8*%VS to i32*
store i32 1342177296,i32*%VT,align 4
store i8*%VR,i8**%aK,align 8
%VU=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%VV=bitcast i8*%VR to i8**
store i8*%VU,i8**%VV,align 8
%VW=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%VX=getelementptr inbounds i8,i8*%VR,i64 8
%VY=bitcast i8*%VX to i8**
store i8*%VW,i8**%VY,align 8
%VZ=getelementptr inbounds i8,i8*%VR,i64 16
%V0=bitcast i8*%VZ to i32*
store i32 3,i32*%V0,align 4
%V1=call i8*@sml_alloc(i32 inreg 28)#0
%V2=getelementptr inbounds i8,i8*%V1,i64 -4
%V3=bitcast i8*%V2 to i32*
store i32 1342177304,i32*%V3,align 4
%V4=load i8*,i8**%aK,align 8
%V5=bitcast i8*%V1 to i8**
store i8*%V4,i8**%V5,align 8
%V6=getelementptr inbounds i8,i8*%V1,i64 8
%V7=bitcast i8*%V6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2321 to void(...)*),void(...)**%V7,align 8
%V8=getelementptr inbounds i8,i8*%V1,i64 16
%V9=bitcast i8*%V8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2321 to void(...)*),void(...)**%V9,align 8
%Wa=getelementptr inbounds i8,i8*%V1,i64 24
%Wb=bitcast i8*%Wa to i32*
store i32 -2147483647,i32*%Wb,align 4
ret i8*%V1
Wc:
%Wd=getelementptr inbounds i8,i8*%Q6,i64 8
%We=bitcast i8*%Wd to i8**
%Wf=load i8*,i8**%We,align 8
%Wg=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Wf)
store i8*%Wg,i8**%aI,align 8
%Wh=call i8*@sml_alloc(i32 inreg 20)#0
%Wi=getelementptr inbounds i8,i8*%Wh,i64 -4
%Wj=bitcast i8*%Wi to i32*
store i32 1342177296,i32*%Wj,align 4
%Wk=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Wl=bitcast i8*%Wh to i8**
store i8*%Wk,i8**%Wl,align 8
%Wm=getelementptr inbounds i8,i8*%Wh,i64 8
%Wn=bitcast i8*%Wm to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h6,i64 0,i32 2,i64 0),i8**%Wn,align 8
%Wo=getelementptr inbounds i8,i8*%Wh,i64 16
%Wp=bitcast i8*%Wo to i32*
store i32 3,i32*%Wp,align 4
%Wq=call fastcc i8*@_SMLLN12ElaborateSQL6Con__ISE_1365(i8*inreg%Wh)
store i8*%Wq,i8**%aI,align 8
%Wr=call i8*@sml_alloc(i32 inreg 20)#0
%Ws=getelementptr inbounds i8,i8*%Wr,i64 -4
%Wt=bitcast i8*%Ws to i32*
store i32 1342177296,i32*%Wt,align 4
store i8*%Wr,i8**%aK,align 8
%Wu=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Wv=bitcast i8*%Wr to i8**
store i8*%Wu,i8**%Wv,align 8
%Ww=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%Wx=getelementptr inbounds i8,i8*%Wr,i64 8
%Wy=bitcast i8*%Wx to i8**
store i8*%Ww,i8**%Wy,align 8
%Wz=getelementptr inbounds i8,i8*%Wr,i64 16
%WA=bitcast i8*%Wz to i32*
store i32 3,i32*%WA,align 4
%WB=call i8*@sml_alloc(i32 inreg 28)#0
%WC=getelementptr inbounds i8,i8*%WB,i64 -4
%WD=bitcast i8*%WC to i32*
store i32 1342177304,i32*%WD,align 4
%WE=load i8*,i8**%aK,align 8
%WF=bitcast i8*%WB to i8**
store i8*%WE,i8**%WF,align 8
%WG=getelementptr inbounds i8,i8*%WB,i64 8
%WH=bitcast i8*%WG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2319 to void(...)*),void(...)**%WH,align 8
%WI=getelementptr inbounds i8,i8*%WB,i64 16
%WJ=bitcast i8*%WI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2319 to void(...)*),void(...)**%WJ,align 8
%WK=getelementptr inbounds i8,i8*%WB,i64 24
%WL=bitcast i8*%WK to i32*
store i32 -2147483647,i32*%WL,align 4
ret i8*%WB
WM:
%WN=getelementptr inbounds i8,i8*%aZ,i64 8
%WO=bitcast i8*%WN to i8**
%WP=load i8*,i8**%WO,align 8
store i8*%WP,i8**%aI,align 8
%WQ=bitcast i8*%WP to i8***
%WR=load i8**,i8***%WQ,align 8
%WS=load i8*,i8**%WR,align 8
store i8*%WS,i8**%aJ,align 8
%WT=bitcast i8*%WP to i8**
%WU=load i8*,i8**%WT,align 8
%WV=getelementptr inbounds i8,i8*%WU,i64 8
%WW=bitcast i8*%WV to i8**
%WX=load i8*,i8**%WW,align 8
store i8*%WX,i8**%aK,align 8
%WY=call i8*@sml_alloc(i32 inreg 20)#0
%WZ=getelementptr inbounds i8,i8*%WY,i64 -4
%W0=bitcast i8*%WZ to i32*
store i32 1342177296,i32*%W0,align 4
%W1=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%W2=bitcast i8*%WY to i8**
store i8*%W1,i8**%W2,align 8
%W3=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%W4=getelementptr inbounds i8,i8*%WY,i64 8
%W5=bitcast i8*%W4 to i8**
store i8*%W3,i8**%W5,align 8
%W6=getelementptr inbounds i8,i8*%WY,i64 16
%W7=bitcast i8*%W6 to i32*
store i32 3,i32*%W7,align 4
%W8=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W8)
%W9=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%W9)
%Xa=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Xa)
%Xb=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Xb)
%Xc=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Xc)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%WY,i8**%b,align 8
%Xd=load atomic i32,i32*@sml_check_flag unordered,align 4
%Xe=icmp eq i32%Xd,0
br i1%Xe,label%Xg,label%Xf
Xf:
call void@sml_check(i32 inreg%Xd)
br label%Xg
Xg:
%Xh=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cz,i64 0,i32 2)to i8*))
%Xi=getelementptr inbounds i8,i8*%Xh,i64 16
%Xj=bitcast i8*%Xi to i8*(i8*,i8*)**
%Xk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Xj,align 8
%Xl=bitcast i8*%Xh to i8**
%Xm=load i8*,i8**%Xl,align 8
store i8*%Xm,i8**%d,align 8
%Xn=bitcast i8**%b to i8***
%Xo=load i8**,i8***%Xn,align 8
%Xp=load i8*,i8**%Xo,align 8
%Xq=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%Xp)
store i8*%Xq,i8**%c,align 8
%Xr=call i8*@sml_alloc(i32 inreg 12)#0
%Xs=getelementptr inbounds i8,i8*%Xr,i64 -4
%Xt=bitcast i8*%Xs to i32*
store i32 1342177288,i32*%Xt,align 4
store i8*%Xr,i8**%e,align 8
%Xu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Xv=bitcast i8*%Xr to i8**
store i8*%Xu,i8**%Xv,align 8
%Xw=getelementptr inbounds i8,i8*%Xr,i64 8
%Xx=bitcast i8*%Xw to i32*
store i32 1,i32*%Xx,align 4
%Xy=call i8*@sml_alloc(i32 inreg 28)#0
%Xz=getelementptr inbounds i8,i8*%Xy,i64 -4
%XA=bitcast i8*%Xz to i32*
store i32 1342177304,i32*%XA,align 4
store i8*%Xy,i8**%f,align 8
%XB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%XC=bitcast i8*%Xy to i8**
store i8*%XB,i8**%XC,align 8
%XD=getelementptr inbounds i8,i8*%Xy,i64 8
%XE=bitcast i8*%XD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1360 to void(...)*),void(...)**%XE,align 8
%XF=getelementptr inbounds i8,i8*%Xy,i64 16
%XG=bitcast i8*%XF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1360 to void(...)*),void(...)**%XG,align 8
%XH=getelementptr inbounds i8,i8*%Xy,i64 24
%XI=bitcast i8*%XH to i32*
store i32 -2147483647,i32*%XI,align 4
%XJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%XK=getelementptr inbounds i8,i8*%XJ,i64 8
%XL=bitcast i8*%XK to i8**
%XM=load i8*,i8**%XL,align 8
%XN=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%XM)
store i8*%XN,i8**%b,align 8
%XO=call i8*@sml_alloc(i32 inreg 12)#0
%XP=getelementptr inbounds i8,i8*%XO,i64 -4
%XQ=bitcast i8*%XP to i32*
store i32 1342177288,i32*%XQ,align 4
store i8*%XO,i8**%c,align 8
%XR=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%XS=bitcast i8*%XO to i8**
store i8*%XR,i8**%XS,align 8
%XT=getelementptr inbounds i8,i8*%XO,i64 8
%XU=bitcast i8*%XT to i32*
store i32 1,i32*%XU,align 4
%XV=call i8*@sml_alloc(i32 inreg 28)#0
%XW=getelementptr inbounds i8,i8*%XV,i64 -4
%XX=bitcast i8*%XW to i32*
store i32 1342177304,i32*%XX,align 4
store i8*%XV,i8**%b,align 8
%XY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%XZ=bitcast i8*%XV to i8**
store i8*%XY,i8**%XZ,align 8
%X0=getelementptr inbounds i8,i8*%XV,i64 8
%X1=bitcast i8*%X0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1361 to void(...)*),void(...)**%X1,align 8
%X2=getelementptr inbounds i8,i8*%XV,i64 16
%X3=bitcast i8*%X2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN2E_1361 to void(...)*),void(...)**%X3,align 8
%X4=getelementptr inbounds i8,i8*%XV,i64 24
%X5=bitcast i8*%X4 to i32*
store i32 -2147483647,i32*%X5,align 4
%X6=call i8*@sml_alloc(i32 inreg 20)#0
%X7=getelementptr inbounds i8,i8*%X6,i64 -4
%X8=bitcast i8*%X7 to i32*
store i32 1342177296,i32*%X8,align 4
%X9=load i8*,i8**%b,align 8
%Ya=bitcast i8*%X6 to i8**
store i8*%X9,i8**%Ya,align 8
%Yb=getelementptr inbounds i8,i8*%X6,i64 8
%Yc=bitcast i8*%Yb to i8**
store i8*null,i8**%Yc,align 8
%Yd=getelementptr inbounds i8,i8*%X6,i64 16
%Ye=bitcast i8*%Yd to i32*
store i32 3,i32*%Ye,align 4
store i8*null,i8**%c,align 8
%Yf=call i8*@sml_alloc(i32 inreg 20)#0
%Yg=getelementptr inbounds i8,i8*%Yf,i64 -4
%Yh=bitcast i8*%Yg to i32*
store i32 1342177296,i32*%Yh,align 4
store i8*%Yf,i8**%e,align 8
%Yi=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Yj=bitcast i8*%Yf to i8**
store i8*%Yi,i8**%Yj,align 8
%Yk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Yl=getelementptr inbounds i8,i8*%Yf,i64 8
%Ym=bitcast i8*%Yl to i8**
store i8*%Yk,i8**%Ym,align 8
%Yn=getelementptr inbounds i8,i8*%Yf,i64 16
%Yo=bitcast i8*%Yn to i32*
store i32 3,i32*%Yo,align 4
%Yp=call i8*@sml_alloc(i32 inreg 20)#0
%Yq=getelementptr inbounds i8,i8*%Yp,i64 -4
%Yr=bitcast i8*%Yq to i32*
store i32 1342177296,i32*%Yr,align 4
%Ys=load i8*,i8**%f,align 8
%Yt=bitcast i8*%Yp to i8**
store i8*%Ys,i8**%Yt,align 8
%Yu=load i8*,i8**%e,align 8
%Yv=getelementptr inbounds i8,i8*%Yp,i64 8
%Yw=bitcast i8*%Yv to i8**
store i8*%Yu,i8**%Yw,align 8
%Yx=getelementptr inbounds i8,i8*%Yp,i64 16
%Yy=bitcast i8*%Yx to i32*
store i32 3,i32*%Yy,align 4
%Yz=load i8*,i8**%d,align 8
%YA=call fastcc i8*%Xk(i8*inreg%Yz,i8*inreg%Yp)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%W9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Xa)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Xb)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Xc)
store i8*%YA,i8**%aJ,align 8
%YB=call i8*@sml_alloc(i32 inreg 20)#0
%YC=getelementptr inbounds i8,i8*%YB,i64 -4
%YD=bitcast i8*%YC to i32*
store i32 1342177296,i32*%YD,align 4
store i8*%YB,i8**%aK,align 8
%YE=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%YF=bitcast i8*%YB to i8**
store i8*%YE,i8**%YF,align 8
%YG=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%YH=getelementptr inbounds i8,i8*%YB,i64 8
%YI=bitcast i8*%YH to i8**
store i8*%YG,i8**%YI,align 8
%YJ=getelementptr inbounds i8,i8*%YB,i64 16
%YK=bitcast i8*%YJ to i32*
store i32 3,i32*%YK,align 4
%YL=call i8*@sml_alloc(i32 inreg 28)#0
%YM=getelementptr inbounds i8,i8*%YL,i64 -4
%YN=bitcast i8*%YM to i32*
store i32 1342177304,i32*%YN,align 4
%YO=load i8*,i8**%aK,align 8
%YP=bitcast i8*%YL to i8**
store i8*%YO,i8**%YP,align 8
%YQ=getelementptr inbounds i8,i8*%YL,i64 8
%YR=bitcast i8*%YQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2317 to void(...)*),void(...)**%YR,align 8
%YS=getelementptr inbounds i8,i8*%YL,i64 16
%YT=bitcast i8*%YS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2317 to void(...)*),void(...)**%YT,align 8
%YU=getelementptr inbounds i8,i8*%YL,i64 24
%YV=bitcast i8*%YU to i32*
store i32 -2147483647,i32*%YV,align 4
ret i8*%YL
YW:
%YX=getelementptr inbounds i8,i8*%aZ,i64 8
%YY=bitcast i8*%YX to i8**
%YZ=load i8*,i8**%YY,align 8
store i8*%YZ,i8**%aI,align 8
%Y0=bitcast i8*%YZ to i8**
%Y1=load i8*,i8**%Y0,align 8
%Y2=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Y2)
%Y3=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Y3)
%Y4=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Y4)
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%Y1,i8**%g,align 8
%Y5=load atomic i32,i32*@sml_check_flag unordered,align 4
%Y6=icmp eq i32%Y5,0
br i1%Y6,label%Y8,label%Y7
Y7:
call void@sml_check(i32 inreg%Y5)
br label%Y8
Y8:
%Y9=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cv,i64 0,i32 2)to i8*))
%Za=getelementptr inbounds i8,i8*%Y9,i64 16
%Zb=bitcast i8*%Za to i8*(i8*,i8*)**
%Zc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Zb,align 8
%Zd=bitcast i8*%Y9 to i8**
%Ze=load i8*,i8**%Zd,align 8
store i8*%Ze,i8**%i,align 8
%Zf=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Zg=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%Zf)
store i8*%Zg,i8**%g,align 8
%Zh=call i8*@sml_alloc(i32 inreg 12)#0
%Zi=getelementptr inbounds i8,i8*%Zh,i64 -4
%Zj=bitcast i8*%Zi to i32*
store i32 1342177288,i32*%Zj,align 4
store i8*%Zh,i8**%h,align 8
%Zk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Zl=bitcast i8*%Zh to i8**
store i8*%Zk,i8**%Zl,align 8
%Zm=getelementptr inbounds i8,i8*%Zh,i64 8
%Zn=bitcast i8*%Zm to i32*
store i32 1,i32*%Zn,align 4
%Zo=call i8*@sml_alloc(i32 inreg 28)#0
%Zp=getelementptr inbounds i8,i8*%Zo,i64 -4
%Zq=bitcast i8*%Zp to i32*
store i32 1342177304,i32*%Zq,align 4
store i8*%Zo,i8**%g,align 8
%Zr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Zs=bitcast i8*%Zo to i8**
store i8*%Zr,i8**%Zs,align 8
%Zt=getelementptr inbounds i8,i8*%Zo,i64 8
%Zu=bitcast i8*%Zt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN1E_1357 to void(...)*),void(...)**%Zu,align 8
%Zv=getelementptr inbounds i8,i8*%Zo,i64 16
%Zw=bitcast i8*%Zv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11Con__COLUMN1E_1357 to void(...)*),void(...)**%Zw,align 8
%Zx=getelementptr inbounds i8,i8*%Zo,i64 24
%Zy=bitcast i8*%Zx to i32*
store i32 -2147483647,i32*%Zy,align 4
%Zz=call i8*@sml_alloc(i32 inreg 20)#0
%ZA=getelementptr inbounds i8,i8*%Zz,i64 -4
%ZB=bitcast i8*%ZA to i32*
store i32 1342177296,i32*%ZB,align 4
%ZC=load i8*,i8**%g,align 8
%ZD=bitcast i8*%Zz to i8**
store i8*%ZC,i8**%ZD,align 8
%ZE=getelementptr inbounds i8,i8*%Zz,i64 8
%ZF=bitcast i8*%ZE to i8**
store i8*null,i8**%ZF,align 8
%ZG=getelementptr inbounds i8,i8*%Zz,i64 16
%ZH=bitcast i8*%ZG to i32*
store i32 3,i32*%ZH,align 4
store i8*null,i8**%h,align 8
%ZI=call i8*@sml_alloc(i32 inreg 20)#0
%ZJ=getelementptr inbounds i8,i8*%ZI,i64 -4
%ZK=bitcast i8*%ZJ to i32*
store i32 1342177296,i32*%ZK,align 4
%ZL=load i8*,i8**%g,align 8
%ZM=bitcast i8*%ZI to i8**
store i8*%ZL,i8**%ZM,align 8
%ZN=load i8*,i8**%h,align 8
%ZO=getelementptr inbounds i8,i8*%ZI,i64 8
%ZP=bitcast i8*%ZO to i8**
store i8*%ZN,i8**%ZP,align 8
%ZQ=getelementptr inbounds i8,i8*%ZI,i64 16
%ZR=bitcast i8*%ZQ to i32*
store i32 3,i32*%ZR,align 4
%ZS=load i8*,i8**%i,align 8
%ZT=call fastcc i8*%Zc(i8*inreg%ZS,i8*inreg%ZI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y2)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y3)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Y4)
store i8*%ZT,i8**%aJ,align 8
%ZU=call i8*@sml_alloc(i32 inreg 20)#0
%ZV=getelementptr inbounds i8,i8*%ZU,i64 -4
%ZW=bitcast i8*%ZV to i32*
store i32 1342177296,i32*%ZW,align 4
store i8*%ZU,i8**%aK,align 8
%ZX=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%ZY=bitcast i8*%ZU to i8**
store i8*%ZX,i8**%ZY,align 8
%ZZ=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%Z0=getelementptr inbounds i8,i8*%ZU,i64 8
%Z1=bitcast i8*%Z0 to i8**
store i8*%ZZ,i8**%Z1,align 8
%Z2=getelementptr inbounds i8,i8*%ZU,i64 16
%Z3=bitcast i8*%Z2 to i32*
store i32 3,i32*%Z3,align 4
%Z4=call i8*@sml_alloc(i32 inreg 28)#0
%Z5=getelementptr inbounds i8,i8*%Z4,i64 -4
%Z6=bitcast i8*%Z5 to i32*
store i32 1342177304,i32*%Z6,align 4
%Z7=load i8*,i8**%aK,align 8
%Z8=bitcast i8*%Z4 to i8**
store i8*%Z7,i8**%Z8,align 8
%Z9=getelementptr inbounds i8,i8*%Z4,i64 8
%aaa=bitcast i8*%Z9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2316 to void(...)*),void(...)**%aaa,align 8
%aab=getelementptr inbounds i8,i8*%Z4,i64 16
%aac=bitcast i8*%aab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2316 to void(...)*),void(...)**%aac,align 8
%aad=getelementptr inbounds i8,i8*%Z4,i64 24
%aae=bitcast i8*%aad to i32*
store i32 -2147483647,i32*%aae,align 4
ret i8*%Z4
aaf:
%aag=getelementptr inbounds i8,i8*%aZ,i64 8
%aah=bitcast i8*%aag to i8**
%aai=load i8*,i8**%aah,align 8
store i8*%aai,i8**%aI,align 8
%aaj=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%aak=getelementptr inbounds i8,i8*%aaj,i64 16
%aal=bitcast i8*%aak to i8*(i8*,i8*)**
%aam=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aal,align 8
%aan=bitcast i8*%aaj to i8**
%aao=load i8*,i8**%aan,align 8
%aap=call fastcc i8*%aam(i8*inreg%aao,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h5,i64 0,i32 2)to i8*))
store i8*%aap,i8**%aJ,align 8
%aaq=call i8*@sml_alloc(i32 inreg 20)#0
%aar=getelementptr inbounds i8,i8*%aaq,i64 -4
%aas=bitcast i8*%aar to i32*
store i32 1342177296,i32*%aas,align 4
store i8*%aaq,i8**%aK,align 8
%aat=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%aau=bitcast i8*%aaq to i8**
store i8*%aat,i8**%aau,align 8
%aav=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%aaw=getelementptr inbounds i8,i8*%aaq,i64 8
%aax=bitcast i8*%aaw to i8**
store i8*%aav,i8**%aax,align 8
%aay=getelementptr inbounds i8,i8*%aaq,i64 16
%aaz=bitcast i8*%aay to i32*
store i32 3,i32*%aaz,align 4
%aaA=call i8*@sml_alloc(i32 inreg 28)#0
%aaB=getelementptr inbounds i8,i8*%aaA,i64 -4
%aaC=bitcast i8*%aaB to i32*
store i32 1342177304,i32*%aaC,align 4
%aaD=load i8*,i8**%aK,align 8
%aaE=bitcast i8*%aaA to i8**
store i8*%aaD,i8**%aaE,align 8
%aaF=getelementptr inbounds i8,i8*%aaA,i64 8
%aaG=bitcast i8*%aaF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2315 to void(...)*),void(...)**%aaG,align 8
%aaH=getelementptr inbounds i8,i8*%aaA,i64 16
%aaI=bitcast i8*%aaH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2315 to void(...)*),void(...)**%aaI,align 8
%aaJ=getelementptr inbounds i8,i8*%aaA,i64 24
%aaK=bitcast i8*%aaJ to i32*
store i32 -2147483647,i32*%aaK,align 4
ret i8*%aaA
aaL:
%aaM=getelementptr inbounds i8,i8*%aZ,i64 8
%aaN=bitcast i8*%aaM to i8**
%aaO=load i8*,i8**%aaN,align 8
store i8*%aaO,i8**%aI,align 8
%aaP=bitcast i8*%aaO to i8**
%aaQ=load i8*,i8**%aaP,align 8
%aaR=bitcast i8*%aaQ to i32*
%aaS=load i32,i32*%aaR,align 4
switch i32%aaS,label%aaT[
i32 2,label%aiH
i32 5,label%aha
i32 4,label%afD
i32 3,label%ad6
i32 1,label%acE
i32 0,label%abb
]
aaT:
call void@sml_matchcomp_bug()
%aaU=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aaU,i8**%aI,align 8
%aaV=call i8*@sml_alloc(i32 inreg 20)#0
%aaW=getelementptr inbounds i8,i8*%aaV,i64 -4
%aaX=bitcast i8*%aaW to i32*
store i32 1342177296,i32*%aaX,align 4
store i8*%aaV,i8**%aJ,align 8
%aaY=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%aaZ=bitcast i8*%aaV to i8**
store i8*%aaY,i8**%aaZ,align 8
%aa0=getelementptr inbounds i8,i8*%aaV,i64 8
%aa1=bitcast i8*%aa0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@ix,i64 0,i32 2,i64 0),i8**%aa1,align 8
%aa2=getelementptr inbounds i8,i8*%aaV,i64 16
%aa3=bitcast i8*%aa2 to i32*
store i32 3,i32*%aa3,align 4
%aa4=call i8*@sml_alloc(i32 inreg 60)#0
%aa5=getelementptr inbounds i8,i8*%aa4,i64 -4
%aa6=bitcast i8*%aa5 to i32*
store i32 1342177336,i32*%aa6,align 4
%aa7=getelementptr inbounds i8,i8*%aa4,i64 56
%aa8=bitcast i8*%aa7 to i32*
store i32 1,i32*%aa8,align 4
%aa9=load i8*,i8**%aJ,align 8
%aba=bitcast i8*%aa4 to i8**
store i8*%aa9,i8**%aba,align 8
call void@sml_raise(i8*inreg%aa4)#1
unreachable
abb:
%abc=getelementptr inbounds i8,i8*%aaQ,i64 4
%abd=bitcast i8*%abc to i32*
%abe=load i32,i32*%abd,align 4
%abf=icmp eq i32%abe,0
%abg=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@co,i64 0,i32 2)to i8*))
%abh=getelementptr inbounds i8,i8*%abg,i64 16
%abi=bitcast i8*%abh to i8*(i8*,i8*)**
%abj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%abi,align 8
%abk=bitcast i8*%abg to i8**
%abl=load i8*,i8**%abk,align 8
br i1%abf,label%ab0,label%abm
abm:
%abn=call fastcc i8*%abj(i8*inreg%abl,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h3,i64 0,i32 2)to i8*))
store i8*%abn,i8**%aJ,align 8
%abo=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%abp=getelementptr inbounds i8,i8*%abo,i64 16
%abq=bitcast i8*%abp to i8*(i8*,i8*)**
%abr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%abq,align 8
%abs=bitcast i8*%abo to i8**
%abt=load i8*,i8**%abs,align 8
store i8*%abt,i8**%aK,align 8
%abu=call i8*@sml_alloc(i32 inreg 20)#0
%abv=getelementptr inbounds i8,i8*%abu,i64 -4
%abw=bitcast i8*%abv to i32*
store i32 1342177296,i32*%abw,align 4
%abx=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%aby=bitcast i8*%abu to i8**
store i8*%abx,i8**%aby,align 8
%abz=getelementptr inbounds i8,i8*%abu,i64 8
%abA=bitcast i8*%abz to i8**
store i8*null,i8**%abA,align 8
%abB=getelementptr inbounds i8,i8*%abu,i64 16
%abC=bitcast i8*%abB to i32*
store i32 3,i32*%abC,align 4
%abD=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%abE=call fastcc i8*%abr(i8*inreg%abD,i8*inreg%abu)
store i8*%abE,i8**%aJ,align 8
%abF=call i8*@sml_alloc(i32 inreg 20)#0
%abG=getelementptr inbounds i8,i8*%abF,i64 -4
%abH=bitcast i8*%abG to i32*
store i32 1342177296,i32*%abH,align 4
store i8*%abF,i8**%aK,align 8
%abI=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%abJ=bitcast i8*%abF to i8**
store i8*%abI,i8**%abJ,align 8
%abK=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%abL=getelementptr inbounds i8,i8*%abF,i64 8
%abM=bitcast i8*%abL to i8**
store i8*%abK,i8**%abM,align 8
%abN=getelementptr inbounds i8,i8*%abF,i64 16
%abO=bitcast i8*%abN to i32*
store i32 3,i32*%abO,align 4
%abP=call i8*@sml_alloc(i32 inreg 28)#0
%abQ=getelementptr inbounds i8,i8*%abP,i64 -4
%abR=bitcast i8*%abQ to i32*
store i32 1342177304,i32*%abR,align 4
%abS=load i8*,i8**%aK,align 8
%abT=bitcast i8*%abP to i8**
store i8*%abS,i8**%abT,align 8
%abU=getelementptr inbounds i8,i8*%abP,i64 8
%abV=bitcast i8*%abU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2310 to void(...)*),void(...)**%abV,align 8
%abW=getelementptr inbounds i8,i8*%abP,i64 16
%abX=bitcast i8*%abW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2310 to void(...)*),void(...)**%abX,align 8
%abY=getelementptr inbounds i8,i8*%abP,i64 24
%abZ=bitcast i8*%abY to i32*
store i32 -2147483647,i32*%abZ,align 4
ret i8*%abP
ab0:
%ab1=call fastcc i8*%abj(i8*inreg%abl,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@h1,i64 0,i32 2)to i8*))
store i8*%ab1,i8**%aJ,align 8
%ab2=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%ab3=getelementptr inbounds i8,i8*%ab2,i64 16
%ab4=bitcast i8*%ab3 to i8*(i8*,i8*)**
%ab5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab4,align 8
%ab6=bitcast i8*%ab2 to i8**
%ab7=load i8*,i8**%ab6,align 8
store i8*%ab7,i8**%aK,align 8
%ab8=call i8*@sml_alloc(i32 inreg 20)#0
%ab9=getelementptr inbounds i8,i8*%ab8,i64 -4
%aca=bitcast i8*%ab9 to i32*
store i32 1342177296,i32*%aca,align 4
%acb=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%acc=bitcast i8*%ab8 to i8**
store i8*%acb,i8**%acc,align 8
%acd=getelementptr inbounds i8,i8*%ab8,i64 8
%ace=bitcast i8*%acd to i8**
store i8*null,i8**%ace,align 8
%acf=getelementptr inbounds i8,i8*%ab8,i64 16
%acg=bitcast i8*%acf to i32*
store i32 3,i32*%acg,align 4
%ach=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%aci=call fastcc i8*%ab5(i8*inreg%ach,i8*inreg%ab8)
store i8*%aci,i8**%aJ,align 8
%acj=call i8*@sml_alloc(i32 inreg 20)#0
%ack=getelementptr inbounds i8,i8*%acj,i64 -4
%acl=bitcast i8*%ack to i32*
store i32 1342177296,i32*%acl,align 4
store i8*%acj,i8**%aK,align 8
%acm=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%acn=bitcast i8*%acj to i8**
store i8*%acm,i8**%acn,align 8
%aco=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%acp=getelementptr inbounds i8,i8*%acj,i64 8
%acq=bitcast i8*%acp to i8**
store i8*%aco,i8**%acq,align 8
%acr=getelementptr inbounds i8,i8*%acj,i64 16
%acs=bitcast i8*%acr to i32*
store i32 3,i32*%acs,align 4
%act=call i8*@sml_alloc(i32 inreg 28)#0
%acu=getelementptr inbounds i8,i8*%act,i64 -4
%acv=bitcast i8*%acu to i32*
store i32 1342177304,i32*%acv,align 4
%acw=load i8*,i8**%aK,align 8
%acx=bitcast i8*%act to i8**
store i8*%acw,i8**%acx,align 8
%acy=getelementptr inbounds i8,i8*%act,i64 8
%acz=bitcast i8*%acy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2306 to void(...)*),void(...)**%acz,align 8
%acA=getelementptr inbounds i8,i8*%act,i64 16
%acB=bitcast i8*%acA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2306 to void(...)*),void(...)**%acB,align 8
%acC=getelementptr inbounds i8,i8*%act,i64 24
%acD=bitcast i8*%acC to i32*
store i32 -2147483647,i32*%acD,align 4
ret i8*%act
acE:
%acF=getelementptr inbounds i8,i8*%aaQ,i64 4
%acG=load i8,i8*%acF,align 1
%acH=call i8*@sml_alloc(i32 inreg 12)#0
%acI=getelementptr inbounds i8,i8*%acH,i64 -4
%acJ=bitcast i8*%acI to i32*
store i32 1342177288,i32*%acJ,align 4
%acK=getelementptr inbounds i8,i8*%acH,i64 4
%acL=bitcast i8*%acH to i64*
store i64 0,i64*%acL,align 4
store i8%acG,i8*%acK,align 1
%acM=getelementptr inbounds i8,i8*%acH,i64 8
%acN=bitcast i8*%acM to i32*
store i32 0,i32*%acN,align 4
%acO=bitcast i8**%y to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%acO)
%acP=bitcast i8**%z to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%acP)
%acQ=bitcast i8**%A to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%acQ)
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
call void@llvm.gcroot(i8**%A,i8*null)#0
store i8*%acH,i8**%y,align 8
%acR=load atomic i32,i32*@sml_check_flag unordered,align 4
%acS=icmp eq i32%acR,0
br i1%acS,label%acU,label%acT
acT:
call void@sml_check(i32 inreg%acR)
br label%acU
acU:
%acV=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ck,i64 0,i32 2)to i8*))
%acW=getelementptr inbounds i8,i8*%acV,i64 16
%acX=bitcast i8*%acW to i8*(i8*,i8*)**
%acY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%acX,align 8
%acZ=bitcast i8*%acV to i8**
%ac0=load i8*,i8**%acZ,align 8
store i8*%ac0,i8**%z,align 8
%ac1=call i8*@sml_alloc(i32 inreg 12)#0
%ac2=getelementptr inbounds i8,i8*%ac1,i64 -4
%ac3=bitcast i8*%ac2 to i32*
store i32 1342177288,i32*%ac3,align 4
store i8*%ac1,i8**%A,align 8
%ac4=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%ac5=bitcast i8*%ac1 to i8**
store i8*%ac4,i8**%ac5,align 8
%ac6=getelementptr inbounds i8,i8*%ac1,i64 8
%ac7=bitcast i8*%ac6 to i32*
store i32 1,i32*%ac7,align 4
%ac8=call i8*@sml_alloc(i32 inreg 28)#0
%ac9=getelementptr inbounds i8,i8*%ac8,i64 -4
%ada=bitcast i8*%ac9 to i32*
store i32 1342177304,i32*%ada,align 4
store i8*%ac8,i8**%y,align 8
%adb=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%adc=bitcast i8*%ac8 to i8**
store i8*%adb,i8**%adc,align 8
%add=getelementptr inbounds i8,i8*%ac8,i64 8
%ade=bitcast i8*%add to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__CHARE_1354 to void(...)*),void(...)**%ade,align 8
%adf=getelementptr inbounds i8,i8*%ac8,i64 16
%adg=bitcast i8*%adf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__CHARE_1354 to void(...)*),void(...)**%adg,align 8
%adh=getelementptr inbounds i8,i8*%ac8,i64 24
%adi=bitcast i8*%adh to i32*
store i32 -2147483647,i32*%adi,align 4
%adj=call i8*@sml_alloc(i32 inreg 20)#0
%adk=getelementptr inbounds i8,i8*%adj,i64 -4
%adl=bitcast i8*%adk to i32*
store i32 1342177296,i32*%adl,align 4
%adm=load i8*,i8**%y,align 8
%adn=bitcast i8*%adj to i8**
store i8*%adm,i8**%adn,align 8
%ado=getelementptr inbounds i8,i8*%adj,i64 8
%adp=bitcast i8*%ado to i8**
store i8*null,i8**%adp,align 8
%adq=getelementptr inbounds i8,i8*%adj,i64 16
%adr=bitcast i8*%adq to i32*
store i32 3,i32*%adr,align 4
%ads=load i8*,i8**%z,align 8
%adt=call fastcc i8*%acY(i8*inreg%ads,i8*inreg%adj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%acO)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%acP)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%acQ)
store i8*%adt,i8**%aJ,align 8
%adu=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%adv=getelementptr inbounds i8,i8*%adu,i64 16
%adw=bitcast i8*%adv to i8*(i8*,i8*)**
%adx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%adw,align 8
%ady=bitcast i8*%adu to i8**
%adz=load i8*,i8**%ady,align 8
store i8*%adz,i8**%aK,align 8
%adA=call i8*@sml_alloc(i32 inreg 20)#0
%adB=getelementptr inbounds i8,i8*%adA,i64 -4
%adC=bitcast i8*%adB to i32*
store i32 1342177296,i32*%adC,align 4
%adD=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%adE=bitcast i8*%adA to i8**
store i8*%adD,i8**%adE,align 8
%adF=getelementptr inbounds i8,i8*%adA,i64 8
%adG=bitcast i8*%adF to i8**
store i8*null,i8**%adG,align 8
%adH=getelementptr inbounds i8,i8*%adA,i64 16
%adI=bitcast i8*%adH to i32*
store i32 3,i32*%adI,align 4
%adJ=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%adK=call fastcc i8*%adx(i8*inreg%adJ,i8*inreg%adA)
store i8*%adK,i8**%aJ,align 8
%adL=call i8*@sml_alloc(i32 inreg 20)#0
%adM=getelementptr inbounds i8,i8*%adL,i64 -4
%adN=bitcast i8*%adM to i32*
store i32 1342177296,i32*%adN,align 4
store i8*%adL,i8**%aK,align 8
%adO=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%adP=bitcast i8*%adL to i8**
store i8*%adO,i8**%adP,align 8
%adQ=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%adR=getelementptr inbounds i8,i8*%adL,i64 8
%adS=bitcast i8*%adR to i8**
store i8*%adQ,i8**%adS,align 8
%adT=getelementptr inbounds i8,i8*%adL,i64 16
%adU=bitcast i8*%adT to i32*
store i32 3,i32*%adU,align 4
%adV=call i8*@sml_alloc(i32 inreg 28)#0
%adW=getelementptr inbounds i8,i8*%adV,i64 -4
%adX=bitcast i8*%adW to i32*
store i32 1342177304,i32*%adX,align 4
%adY=load i8*,i8**%aK,align 8
%adZ=bitcast i8*%adV to i8**
store i8*%adY,i8**%adZ,align 8
%ad0=getelementptr inbounds i8,i8*%adV,i64 8
%ad1=bitcast i8*%ad0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2302 to void(...)*),void(...)**%ad1,align 8
%ad2=getelementptr inbounds i8,i8*%adV,i64 16
%ad3=bitcast i8*%ad2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2302 to void(...)*),void(...)**%ad3,align 8
%ad4=getelementptr inbounds i8,i8*%adV,i64 24
%ad5=bitcast i8*%ad4 to i32*
store i32 -2147483647,i32*%ad5,align 4
ret i8*%adV
ad6:
%ad7=getelementptr inbounds i8,i8*%aaQ,i64 8
%ad8=bitcast i8*%ad7 to i8**
%ad9=load i8*,i8**%ad8,align 8
store i8*%ad9,i8**%aJ,align 8
%aea=call i8*@sml_alloc(i32 inreg 20)#0
%aeb=bitcast i8*%aea to i32*
%aec=getelementptr inbounds i8,i8*%aea,i64 -4
%aed=bitcast i8*%aec to i32*
store i32 1342177296,i32*%aed,align 4
%aee=getelementptr inbounds i8,i8*%aea,i64 4
%aef=bitcast i8*%aee to i32*
store i32 0,i32*%aef,align 1
store i32 2,i32*%aeb,align 4
%aeg=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%aeh=getelementptr inbounds i8,i8*%aea,i64 8
%aei=bitcast i8*%aeh to i8**
store i8*%aeg,i8**%aei,align 8
%aej=getelementptr inbounds i8,i8*%aea,i64 16
%aek=bitcast i8*%aej to i32*
store i32 2,i32*%aek,align 4
%ael=bitcast i8**%P to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ael)
%aem=bitcast i8**%Q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aem)
%aen=bitcast i8**%R to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aen)
call void@llvm.gcroot(i8**%P,i8*null)#0
call void@llvm.gcroot(i8**%Q,i8*null)#0
call void@llvm.gcroot(i8**%R,i8*null)#0
store i8*%aea,i8**%P,align 8
%aeo=load atomic i32,i32*@sml_check_flag unordered,align 4
%aep=icmp eq i32%aeo,0
br i1%aep,label%aer,label%aeq
aeq:
call void@sml_check(i32 inreg%aeo)
br label%aer
aer:
%aes=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cc,i64 0,i32 2)to i8*))
%aet=getelementptr inbounds i8,i8*%aes,i64 16
%aeu=bitcast i8*%aet to i8*(i8*,i8*)**
%aev=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aeu,align 8
%aew=bitcast i8*%aes to i8**
%aex=load i8*,i8**%aew,align 8
store i8*%aex,i8**%Q,align 8
%aey=call i8*@sml_alloc(i32 inreg 12)#0
%aez=getelementptr inbounds i8,i8*%aey,i64 -4
%aeA=bitcast i8*%aez to i32*
store i32 1342177288,i32*%aeA,align 4
store i8*%aey,i8**%R,align 8
%aeB=load i8*,i8**%P,align 8
store i8*null,i8**%P,align 8
%aeC=bitcast i8*%aey to i8**
store i8*%aeB,i8**%aeC,align 8
%aeD=getelementptr inbounds i8,i8*%aey,i64 8
%aeE=bitcast i8*%aeD to i32*
store i32 1,i32*%aeE,align 4
%aeF=call i8*@sml_alloc(i32 inreg 28)#0
%aeG=getelementptr inbounds i8,i8*%aeF,i64 -4
%aeH=bitcast i8*%aeG to i32*
store i32 1342177304,i32*%aeH,align 4
store i8*%aeF,i8**%P,align 8
%aeI=load i8*,i8**%R,align 8
store i8*null,i8**%R,align 8
%aeJ=bitcast i8*%aeF to i8**
store i8*%aeI,i8**%aeJ,align 8
%aeK=getelementptr inbounds i8,i8*%aeF,i64 8
%aeL=bitcast i8*%aeK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__REALE_1348 to void(...)*),void(...)**%aeL,align 8
%aeM=getelementptr inbounds i8,i8*%aeF,i64 16
%aeN=bitcast i8*%aeM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__REALE_1348 to void(...)*),void(...)**%aeN,align 8
%aeO=getelementptr inbounds i8,i8*%aeF,i64 24
%aeP=bitcast i8*%aeO to i32*
store i32 -2147483647,i32*%aeP,align 4
%aeQ=call i8*@sml_alloc(i32 inreg 20)#0
%aeR=getelementptr inbounds i8,i8*%aeQ,i64 -4
%aeS=bitcast i8*%aeR to i32*
store i32 1342177296,i32*%aeS,align 4
%aeT=load i8*,i8**%P,align 8
%aeU=bitcast i8*%aeQ to i8**
store i8*%aeT,i8**%aeU,align 8
%aeV=getelementptr inbounds i8,i8*%aeQ,i64 8
%aeW=bitcast i8*%aeV to i8**
store i8*null,i8**%aeW,align 8
%aeX=getelementptr inbounds i8,i8*%aeQ,i64 16
%aeY=bitcast i8*%aeX to i32*
store i32 3,i32*%aeY,align 4
%aeZ=load i8*,i8**%Q,align 8
%ae0=call fastcc i8*%aev(i8*inreg%aeZ,i8*inreg%aeQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ael)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aem)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aen)
store i8*%ae0,i8**%aJ,align 8
%ae1=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%ae2=getelementptr inbounds i8,i8*%ae1,i64 16
%ae3=bitcast i8*%ae2 to i8*(i8*,i8*)**
%ae4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae3,align 8
%ae5=bitcast i8*%ae1 to i8**
%ae6=load i8*,i8**%ae5,align 8
store i8*%ae6,i8**%aK,align 8
%ae7=call i8*@sml_alloc(i32 inreg 20)#0
%ae8=getelementptr inbounds i8,i8*%ae7,i64 -4
%ae9=bitcast i8*%ae8 to i32*
store i32 1342177296,i32*%ae9,align 4
%afa=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%afb=bitcast i8*%ae7 to i8**
store i8*%afa,i8**%afb,align 8
%afc=getelementptr inbounds i8,i8*%ae7,i64 8
%afd=bitcast i8*%afc to i8**
store i8*null,i8**%afd,align 8
%afe=getelementptr inbounds i8,i8*%ae7,i64 16
%aff=bitcast i8*%afe to i32*
store i32 3,i32*%aff,align 4
%afg=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%afh=call fastcc i8*%ae4(i8*inreg%afg,i8*inreg%ae7)
store i8*%afh,i8**%aJ,align 8
%afi=call i8*@sml_alloc(i32 inreg 20)#0
%afj=getelementptr inbounds i8,i8*%afi,i64 -4
%afk=bitcast i8*%afj to i32*
store i32 1342177296,i32*%afk,align 4
store i8*%afi,i8**%aK,align 8
%afl=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%afm=bitcast i8*%afi to i8**
store i8*%afl,i8**%afm,align 8
%afn=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%afo=getelementptr inbounds i8,i8*%afi,i64 8
%afp=bitcast i8*%afo to i8**
store i8*%afn,i8**%afp,align 8
%afq=getelementptr inbounds i8,i8*%afi,i64 16
%afr=bitcast i8*%afq to i32*
store i32 3,i32*%afr,align 4
%afs=call i8*@sml_alloc(i32 inreg 28)#0
%aft=getelementptr inbounds i8,i8*%afs,i64 -4
%afu=bitcast i8*%aft to i32*
store i32 1342177304,i32*%afu,align 4
%afv=load i8*,i8**%aK,align 8
%afw=bitcast i8*%afs to i8**
store i8*%afv,i8**%afw,align 8
%afx=getelementptr inbounds i8,i8*%afs,i64 8
%afy=bitcast i8*%afx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2301 to void(...)*),void(...)**%afy,align 8
%afz=getelementptr inbounds i8,i8*%afs,i64 16
%afA=bitcast i8*%afz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2301 to void(...)*),void(...)**%afA,align 8
%afB=getelementptr inbounds i8,i8*%afs,i64 24
%afC=bitcast i8*%afB to i32*
store i32 -2147483647,i32*%afC,align 4
ret i8*%afs
afD:
%afE=getelementptr inbounds i8,i8*%aaQ,i64 8
%afF=bitcast i8*%afE to i8**
%afG=load i8*,i8**%afF,align 8
store i8*%afG,i8**%aJ,align 8
%afH=call i8*@sml_alloc(i32 inreg 20)#0
%afI=bitcast i8*%afH to i32*
%afJ=getelementptr inbounds i8,i8*%afH,i64 -4
%afK=bitcast i8*%afJ to i32*
store i32 1342177296,i32*%afK,align 4
%afL=getelementptr inbounds i8,i8*%afH,i64 4
%afM=bitcast i8*%afL to i32*
store i32 0,i32*%afM,align 1
store i32 3,i32*%afI,align 4
%afN=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%afO=getelementptr inbounds i8,i8*%afH,i64 8
%afP=bitcast i8*%afO to i8**
store i8*%afN,i8**%afP,align 8
%afQ=getelementptr inbounds i8,i8*%afH,i64 16
%afR=bitcast i8*%afQ to i32*
store i32 2,i32*%afR,align 4
%afS=bitcast i8**%am to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%afS)
%afT=bitcast i8**%an to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%afT)
%afU=bitcast i8**%ao to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%afU)
call void@llvm.gcroot(i8**%am,i8*null)#0
call void@llvm.gcroot(i8**%an,i8*null)#0
call void@llvm.gcroot(i8**%ao,i8*null)#0
store i8*%afH,i8**%am,align 8
%afV=load atomic i32,i32*@sml_check_flag unordered,align 4
%afW=icmp eq i32%afV,0
br i1%afW,label%afY,label%afX
afX:
call void@sml_check(i32 inreg%afV)
br label%afY
afY:
%afZ=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cg,i64 0,i32 2)to i8*))
%af0=getelementptr inbounds i8,i8*%afZ,i64 16
%af1=bitcast i8*%af0 to i8*(i8*,i8*)**
%af2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af1,align 8
%af3=bitcast i8*%afZ to i8**
%af4=load i8*,i8**%af3,align 8
store i8*%af4,i8**%an,align 8
%af5=call i8*@sml_alloc(i32 inreg 12)#0
%af6=getelementptr inbounds i8,i8*%af5,i64 -4
%af7=bitcast i8*%af6 to i32*
store i32 1342177288,i32*%af7,align 4
store i8*%af5,i8**%ao,align 8
%af8=load i8*,i8**%am,align 8
store i8*null,i8**%am,align 8
%af9=bitcast i8*%af5 to i8**
store i8*%af8,i8**%af9,align 8
%aga=getelementptr inbounds i8,i8*%af5,i64 8
%agb=bitcast i8*%aga to i32*
store i32 1,i32*%agb,align 4
%agc=call i8*@sml_alloc(i32 inreg 28)#0
%agd=getelementptr inbounds i8,i8*%agc,i64 -4
%age=bitcast i8*%agd to i32*
store i32 1342177304,i32*%age,align 4
store i8*%agc,i8**%am,align 8
%agf=load i8*,i8**%ao,align 8
store i8*null,i8**%ao,align 8
%agg=bitcast i8*%agc to i8**
store i8*%agf,i8**%agg,align 8
%agh=getelementptr inbounds i8,i8*%agc,i64 8
%agi=bitcast i8*%agh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__STRINGE_1351 to void(...)*),void(...)**%agi,align 8
%agj=getelementptr inbounds i8,i8*%agc,i64 16
%agk=bitcast i8*%agj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10Con__STRINGE_1351 to void(...)*),void(...)**%agk,align 8
%agl=getelementptr inbounds i8,i8*%agc,i64 24
%agm=bitcast i8*%agl to i32*
store i32 -2147483647,i32*%agm,align 4
%agn=call i8*@sml_alloc(i32 inreg 20)#0
%ago=getelementptr inbounds i8,i8*%agn,i64 -4
%agp=bitcast i8*%ago to i32*
store i32 1342177296,i32*%agp,align 4
%agq=load i8*,i8**%am,align 8
%agr=bitcast i8*%agn to i8**
store i8*%agq,i8**%agr,align 8
%ags=getelementptr inbounds i8,i8*%agn,i64 8
%agt=bitcast i8*%ags to i8**
store i8*null,i8**%agt,align 8
%agu=getelementptr inbounds i8,i8*%agn,i64 16
%agv=bitcast i8*%agu to i32*
store i32 3,i32*%agv,align 4
%agw=load i8*,i8**%an,align 8
%agx=call fastcc i8*%af2(i8*inreg%agw,i8*inreg%agn)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%afS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%afT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%afU)
store i8*%agx,i8**%aJ,align 8
%agy=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%agz=getelementptr inbounds i8,i8*%agy,i64 16
%agA=bitcast i8*%agz to i8*(i8*,i8*)**
%agB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%agA,align 8
%agC=bitcast i8*%agy to i8**
%agD=load i8*,i8**%agC,align 8
store i8*%agD,i8**%aK,align 8
%agE=call i8*@sml_alloc(i32 inreg 20)#0
%agF=getelementptr inbounds i8,i8*%agE,i64 -4
%agG=bitcast i8*%agF to i32*
store i32 1342177296,i32*%agG,align 4
%agH=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%agI=bitcast i8*%agE to i8**
store i8*%agH,i8**%agI,align 8
%agJ=getelementptr inbounds i8,i8*%agE,i64 8
%agK=bitcast i8*%agJ to i8**
store i8*null,i8**%agK,align 8
%agL=getelementptr inbounds i8,i8*%agE,i64 16
%agM=bitcast i8*%agL to i32*
store i32 3,i32*%agM,align 4
%agN=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%agO=call fastcc i8*%agB(i8*inreg%agN,i8*inreg%agE)
store i8*%agO,i8**%aJ,align 8
%agP=call i8*@sml_alloc(i32 inreg 20)#0
%agQ=getelementptr inbounds i8,i8*%agP,i64 -4
%agR=bitcast i8*%agQ to i32*
store i32 1342177296,i32*%agR,align 4
store i8*%agP,i8**%aK,align 8
%agS=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%agT=bitcast i8*%agP to i8**
store i8*%agS,i8**%agT,align 8
%agU=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%agV=getelementptr inbounds i8,i8*%agP,i64 8
%agW=bitcast i8*%agV to i8**
store i8*%agU,i8**%agW,align 8
%agX=getelementptr inbounds i8,i8*%agP,i64 16
%agY=bitcast i8*%agX to i32*
store i32 3,i32*%agY,align 4
%agZ=call i8*@sml_alloc(i32 inreg 28)#0
%ag0=getelementptr inbounds i8,i8*%agZ,i64 -4
%ag1=bitcast i8*%ag0 to i32*
store i32 1342177304,i32*%ag1,align 4
%ag2=load i8*,i8**%aK,align 8
%ag3=bitcast i8*%agZ to i8**
store i8*%ag2,i8**%ag3,align 8
%ag4=getelementptr inbounds i8,i8*%agZ,i64 8
%ag5=bitcast i8*%ag4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2300 to void(...)*),void(...)**%ag5,align 8
%ag6=getelementptr inbounds i8,i8*%agZ,i64 16
%ag7=bitcast i8*%ag6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2300 to void(...)*),void(...)**%ag7,align 8
%ag8=getelementptr inbounds i8,i8*%agZ,i64 24
%ag9=bitcast i8*%ag8 to i32*
store i32 -2147483647,i32*%ag9,align 4
ret i8*%agZ
aha:
%ahb=getelementptr inbounds i8,i8*%aaQ,i64 8
%ahc=bitcast i8*%ahb to i8**
%ahd=load i8*,i8**%ahc,align 8
store i8*%ahd,i8**%aJ,align 8
%ahe=call i8*@sml_alloc(i32 inreg 20)#0
%ahf=bitcast i8*%ahe to i32*
%ahg=getelementptr inbounds i8,i8*%ahe,i64 -4
%ahh=bitcast i8*%ahg to i32*
store i32 1342177296,i32*%ahh,align 4
%ahi=getelementptr inbounds i8,i8*%ahe,i64 4
%ahj=bitcast i8*%ahi to i32*
store i32 0,i32*%ahj,align 1
store i32 5,i32*%ahf,align 4
%ahk=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%ahl=getelementptr inbounds i8,i8*%ahe,i64 8
%ahm=bitcast i8*%ahl to i8**
store i8*%ahk,i8**%ahm,align 8
%ahn=getelementptr inbounds i8,i8*%ahe,i64 16
%aho=bitcast i8*%ahn to i32*
store i32 2,i32*%aho,align 4
%ahp=bitcast i8**%ap to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ahp)
%ahq=bitcast i8**%aq to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ahq)
%ahr=bitcast i8**%ar to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ahr)
call void@llvm.gcroot(i8**%ap,i8*null)#0
call void@llvm.gcroot(i8**%aq,i8*null)#0
call void@llvm.gcroot(i8**%ar,i8*null)#0
store i8*%ahe,i8**%ap,align 8
%ahs=load atomic i32,i32*@sml_check_flag unordered,align 4
%aht=icmp eq i32%ahs,0
br i1%aht,label%ahv,label%ahu
ahu:
call void@sml_check(i32 inreg%ahs)
br label%ahv
ahv:
%ahw=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b8,i64 0,i32 2)to i8*))
%ahx=getelementptr inbounds i8,i8*%ahw,i64 16
%ahy=bitcast i8*%ahx to i8*(i8*,i8*)**
%ahz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ahy,align 8
%ahA=bitcast i8*%ahw to i8**
%ahB=load i8*,i8**%ahA,align 8
store i8*%ahB,i8**%aq,align 8
%ahC=call i8*@sml_alloc(i32 inreg 12)#0
%ahD=getelementptr inbounds i8,i8*%ahC,i64 -4
%ahE=bitcast i8*%ahD to i32*
store i32 1342177288,i32*%ahE,align 4
store i8*%ahC,i8**%ar,align 8
%ahF=load i8*,i8**%ap,align 8
store i8*null,i8**%ap,align 8
%ahG=bitcast i8*%ahC to i8**
store i8*%ahF,i8**%ahG,align 8
%ahH=getelementptr inbounds i8,i8*%ahC,i64 8
%ahI=bitcast i8*%ahH to i32*
store i32 1,i32*%ahI,align 4
%ahJ=call i8*@sml_alloc(i32 inreg 28)#0
%ahK=getelementptr inbounds i8,i8*%ahJ,i64 -4
%ahL=bitcast i8*%ahK to i32*
store i32 1342177304,i32*%ahL,align 4
store i8*%ahJ,i8**%ap,align 8
%ahM=load i8*,i8**%ar,align 8
store i8*null,i8**%ar,align 8
%ahN=bitcast i8*%ahJ to i8**
store i8*%ahM,i8**%ahN,align 8
%ahO=getelementptr inbounds i8,i8*%ahJ,i64 8
%ahP=bitcast i8*%ahO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__WORDE_1345 to void(...)*),void(...)**%ahP,align 8
%ahQ=getelementptr inbounds i8,i8*%ahJ,i64 16
%ahR=bitcast i8*%ahQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8Con__WORDE_1345 to void(...)*),void(...)**%ahR,align 8
%ahS=getelementptr inbounds i8,i8*%ahJ,i64 24
%ahT=bitcast i8*%ahS to i32*
store i32 -2147483647,i32*%ahT,align 4
%ahU=call i8*@sml_alloc(i32 inreg 20)#0
%ahV=getelementptr inbounds i8,i8*%ahU,i64 -4
%ahW=bitcast i8*%ahV to i32*
store i32 1342177296,i32*%ahW,align 4
%ahX=load i8*,i8**%ap,align 8
%ahY=bitcast i8*%ahU to i8**
store i8*%ahX,i8**%ahY,align 8
%ahZ=getelementptr inbounds i8,i8*%ahU,i64 8
%ah0=bitcast i8*%ahZ to i8**
store i8*null,i8**%ah0,align 8
%ah1=getelementptr inbounds i8,i8*%ahU,i64 16
%ah2=bitcast i8*%ah1 to i32*
store i32 3,i32*%ah2,align 4
%ah3=load i8*,i8**%aq,align 8
%ah4=call fastcc i8*%ahz(i8*inreg%ah3,i8*inreg%ahU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ahp)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ahq)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ahr)
store i8*%ah4,i8**%aJ,align 8
%ah5=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%ah6=getelementptr inbounds i8,i8*%ah5,i64 16
%ah7=bitcast i8*%ah6 to i8*(i8*,i8*)**
%ah8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah7,align 8
%ah9=bitcast i8*%ah5 to i8**
%aia=load i8*,i8**%ah9,align 8
store i8*%aia,i8**%aK,align 8
%aib=call i8*@sml_alloc(i32 inreg 20)#0
%aic=getelementptr inbounds i8,i8*%aib,i64 -4
%aid=bitcast i8*%aic to i32*
store i32 1342177296,i32*%aid,align 4
%aie=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%aif=bitcast i8*%aib to i8**
store i8*%aie,i8**%aif,align 8
%aig=getelementptr inbounds i8,i8*%aib,i64 8
%aih=bitcast i8*%aig to i8**
store i8*null,i8**%aih,align 8
%aii=getelementptr inbounds i8,i8*%aib,i64 16
%aij=bitcast i8*%aii to i32*
store i32 3,i32*%aij,align 4
%aik=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%ail=call fastcc i8*%ah8(i8*inreg%aik,i8*inreg%aib)
store i8*%ail,i8**%aJ,align 8
%aim=call i8*@sml_alloc(i32 inreg 20)#0
%ain=getelementptr inbounds i8,i8*%aim,i64 -4
%aio=bitcast i8*%ain to i32*
store i32 1342177296,i32*%aio,align 4
store i8*%aim,i8**%aK,align 8
%aip=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%aiq=bitcast i8*%aim to i8**
store i8*%aip,i8**%aiq,align 8
%air=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%ais=getelementptr inbounds i8,i8*%aim,i64 8
%ait=bitcast i8*%ais to i8**
store i8*%air,i8**%ait,align 8
%aiu=getelementptr inbounds i8,i8*%aim,i64 16
%aiv=bitcast i8*%aiu to i32*
store i32 3,i32*%aiv,align 4
%aiw=call i8*@sml_alloc(i32 inreg 28)#0
%aix=getelementptr inbounds i8,i8*%aiw,i64 -4
%aiy=bitcast i8*%aix to i32*
store i32 1342177304,i32*%aiy,align 4
%aiz=load i8*,i8**%aK,align 8
%aiA=bitcast i8*%aiw to i8**
store i8*%aiz,i8**%aiA,align 8
%aiB=getelementptr inbounds i8,i8*%aiw,i64 8
%aiC=bitcast i8*%aiB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2299 to void(...)*),void(...)**%aiC,align 8
%aiD=getelementptr inbounds i8,i8*%aiw,i64 16
%aiE=bitcast i8*%aiD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2299 to void(...)*),void(...)**%aiE,align 8
%aiF=getelementptr inbounds i8,i8*%aiw,i64 24
%aiG=bitcast i8*%aiF to i32*
store i32 -2147483647,i32*%aiG,align 4
ret i8*%aiw
aiH:
%aiI=getelementptr inbounds i8,i8*%aaQ,i64 8
%aiJ=bitcast i8*%aiI to i8**
%aiK=load i8*,i8**%aiJ,align 8
store i8*%aiK,i8**%aJ,align 8
%aiL=call i8*@sml_alloc(i32 inreg 20)#0
%aiM=bitcast i8*%aiL to i32*
%aiN=getelementptr inbounds i8,i8*%aiL,i64 -4
%aiO=bitcast i8*%aiN to i32*
store i32 1342177296,i32*%aiO,align 4
%aiP=getelementptr inbounds i8,i8*%aiL,i64 4
%aiQ=bitcast i8*%aiP to i32*
store i32 0,i32*%aiQ,align 1
store i32 1,i32*%aiM,align 4
%aiR=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%aiS=getelementptr inbounds i8,i8*%aiL,i64 8
%aiT=bitcast i8*%aiS to i8**
store i8*%aiR,i8**%aiT,align 8
%aiU=getelementptr inbounds i8,i8*%aiL,i64 16
%aiV=bitcast i8*%aiU to i32*
store i32 2,i32*%aiV,align 4
%aiW=bitcast i8**%ax to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aiW)
%aiX=bitcast i8**%ay to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aiX)
%aiY=bitcast i8**%az to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aiY)
call void@llvm.gcroot(i8**%ax,i8*null)#0
call void@llvm.gcroot(i8**%ay,i8*null)#0
call void@llvm.gcroot(i8**%az,i8*null)#0
store i8*%aiL,i8**%ax,align 8
%aiZ=load atomic i32,i32*@sml_check_flag unordered,align 4
%ai0=icmp eq i32%aiZ,0
br i1%ai0,label%ai2,label%ai1
ai1:
call void@sml_check(i32 inreg%aiZ)
br label%ai2
ai2:
%ai3=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b4,i64 0,i32 2)to i8*))
%ai4=getelementptr inbounds i8,i8*%ai3,i64 16
%ai5=bitcast i8*%ai4 to i8*(i8*,i8*)**
%ai6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai5,align 8
%ai7=bitcast i8*%ai3 to i8**
%ai8=load i8*,i8**%ai7,align 8
store i8*%ai8,i8**%ay,align 8
%ai9=call i8*@sml_alloc(i32 inreg 12)#0
%aja=getelementptr inbounds i8,i8*%ai9,i64 -4
%ajb=bitcast i8*%aja to i32*
store i32 1342177288,i32*%ajb,align 4
store i8*%ai9,i8**%az,align 8
%ajc=load i8*,i8**%ax,align 8
store i8*null,i8**%ax,align 8
%ajd=bitcast i8*%ai9 to i8**
store i8*%ajc,i8**%ajd,align 8
%aje=getelementptr inbounds i8,i8*%ai9,i64 8
%ajf=bitcast i8*%aje to i32*
store i32 1,i32*%ajf,align 4
%ajg=call i8*@sml_alloc(i32 inreg 28)#0
%ajh=getelementptr inbounds i8,i8*%ajg,i64 -4
%aji=bitcast i8*%ajh to i32*
store i32 1342177304,i32*%aji,align 4
store i8*%ajg,i8**%ax,align 8
%ajj=load i8*,i8**%az,align 8
store i8*null,i8**%az,align 8
%ajk=bitcast i8*%ajg to i8**
store i8*%ajj,i8**%ajk,align 8
%ajl=getelementptr inbounds i8,i8*%ajg,i64 8
%ajm=bitcast i8*%ajl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Con__INTE_1342 to void(...)*),void(...)**%ajm,align 8
%ajn=getelementptr inbounds i8,i8*%ajg,i64 16
%ajo=bitcast i8*%ajn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7Con__INTE_1342 to void(...)*),void(...)**%ajo,align 8
%ajp=getelementptr inbounds i8,i8*%ajg,i64 24
%ajq=bitcast i8*%ajp to i32*
store i32 -2147483647,i32*%ajq,align 4
%ajr=call i8*@sml_alloc(i32 inreg 20)#0
%ajs=getelementptr inbounds i8,i8*%ajr,i64 -4
%ajt=bitcast i8*%ajs to i32*
store i32 1342177296,i32*%ajt,align 4
%aju=load i8*,i8**%ax,align 8
%ajv=bitcast i8*%ajr to i8**
store i8*%aju,i8**%ajv,align 8
%ajw=getelementptr inbounds i8,i8*%ajr,i64 8
%ajx=bitcast i8*%ajw to i8**
store i8*null,i8**%ajx,align 8
%ajy=getelementptr inbounds i8,i8*%ajr,i64 16
%ajz=bitcast i8*%ajy to i32*
store i32 3,i32*%ajz,align 4
%ajA=load i8*,i8**%ay,align 8
%ajB=call fastcc i8*%ai6(i8*inreg%ajA,i8*inreg%ajr)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aiW)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aiX)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aiY)
store i8*%ajB,i8**%aJ,align 8
%ajC=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%ajD=getelementptr inbounds i8,i8*%ajC,i64 16
%ajE=bitcast i8*%ajD to i8*(i8*,i8*)**
%ajF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ajE,align 8
%ajG=bitcast i8*%ajC to i8**
%ajH=load i8*,i8**%ajG,align 8
store i8*%ajH,i8**%aK,align 8
%ajI=call i8*@sml_alloc(i32 inreg 20)#0
%ajJ=getelementptr inbounds i8,i8*%ajI,i64 -4
%ajK=bitcast i8*%ajJ to i32*
store i32 1342177296,i32*%ajK,align 4
%ajL=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%ajM=bitcast i8*%ajI to i8**
store i8*%ajL,i8**%ajM,align 8
%ajN=getelementptr inbounds i8,i8*%ajI,i64 8
%ajO=bitcast i8*%ajN to i8**
store i8*null,i8**%ajO,align 8
%ajP=getelementptr inbounds i8,i8*%ajI,i64 16
%ajQ=bitcast i8*%ajP to i32*
store i32 3,i32*%ajQ,align 4
%ajR=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%ajS=call fastcc i8*%ajF(i8*inreg%ajR,i8*inreg%ajI)
store i8*%ajS,i8**%aJ,align 8
%ajT=call i8*@sml_alloc(i32 inreg 20)#0
%ajU=getelementptr inbounds i8,i8*%ajT,i64 -4
%ajV=bitcast i8*%ajU to i32*
store i32 1342177296,i32*%ajV,align 4
store i8*%ajT,i8**%aK,align 8
%ajW=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%ajX=bitcast i8*%ajT to i8**
store i8*%ajW,i8**%ajX,align 8
%ajY=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%ajZ=getelementptr inbounds i8,i8*%ajT,i64 8
%aj0=bitcast i8*%ajZ to i8**
store i8*%ajY,i8**%aj0,align 8
%aj1=getelementptr inbounds i8,i8*%ajT,i64 16
%aj2=bitcast i8*%aj1 to i32*
store i32 3,i32*%aj2,align 4
%aj3=call i8*@sml_alloc(i32 inreg 28)#0
%aj4=getelementptr inbounds i8,i8*%aj3,i64 -4
%aj5=bitcast i8*%aj4 to i32*
store i32 1342177304,i32*%aj5,align 4
%aj6=load i8*,i8**%aK,align 8
%aj7=bitcast i8*%aj3 to i8**
store i8*%aj6,i8**%aj7,align 8
%aj8=getelementptr inbounds i8,i8*%aj3,i64 8
%aj9=bitcast i8*%aj8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2298 to void(...)*),void(...)**%aj9,align 8
%aka=getelementptr inbounds i8,i8*%aj3,i64 16
%akb=bitcast i8*%aka to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2298 to void(...)*),void(...)**%akb,align 8
%akc=getelementptr inbounds i8,i8*%aj3,i64 24
%akd=bitcast i8*%akc to i32*
store i32 -2147483647,i32*%akd,align 4
ret i8*%aj3
ake:
%akf=getelementptr inbounds i8,i8*%aZ,i64 8
%akg=bitcast i8*%akf to i8**
%akh=load i8*,i8**%akg,align 8
store i8*%akh,i8**%aI,align 8
%aki=call i8*@sml_alloc(i32 inreg 12)#0
%akj=getelementptr inbounds i8,i8*%aki,i64 -4
%akk=bitcast i8*%akj to i32*
store i32 1342177288,i32*%akk,align 4
store i8*%aki,i8**%aJ,align 8
%akl=load i8*,i8**%aI,align 8
%akm=bitcast i8*%aki to i8**
store i8*%akl,i8**%akm,align 8
%akn=getelementptr inbounds i8,i8*%aki,i64 8
%ako=bitcast i8*%akn to i32*
store i32 1,i32*%ako,align 4
%akp=call i8*@sml_alloc(i32 inreg 28)#0
%akq=getelementptr inbounds i8,i8*%akp,i64 -4
%akr=bitcast i8*%akq to i32*
store i32 1342177304,i32*%akr,align 4
%aks=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%akt=bitcast i8*%akp to i8**
store i8*%aks,i8**%akt,align 8
%aku=getelementptr inbounds i8,i8*%akp,i64 8
%akv=bitcast i8*%aku to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2296 to void(...)*),void(...)**%akv,align 8
%akw=getelementptr inbounds i8,i8*%akp,i64 16
%akx=bitcast i8*%akw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2296 to void(...)*),void(...)**%akx,align 8
%aky=getelementptr inbounds i8,i8*%akp,i64 24
%akz=bitcast i8*%aky to i32*
store i32 -2147483647,i32*%akz,align 4
%akA=call fastcc i8*@_SMLLN12ElaborateSQL3FstE_1206(i8*inreg%akp)
store i8*%akA,i8**%aJ,align 8
%akB=call i8*@sml_alloc(i32 inreg 20)#0
%akC=getelementptr inbounds i8,i8*%akB,i64 -4
%akD=bitcast i8*%akC to i32*
store i32 1342177296,i32*%akD,align 4
store i8*%akB,i8**%aK,align 8
%akE=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%akF=bitcast i8*%akB to i8**
store i8*%akE,i8**%akF,align 8
%akG=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%akH=getelementptr inbounds i8,i8*%akB,i64 8
%akI=bitcast i8*%akH to i8**
store i8*%akG,i8**%akI,align 8
%akJ=getelementptr inbounds i8,i8*%akB,i64 16
%akK=bitcast i8*%akJ to i32*
store i32 3,i32*%akK,align 4
%akL=call i8*@sml_alloc(i32 inreg 28)#0
%akM=getelementptr inbounds i8,i8*%akL,i64 -4
%akN=bitcast i8*%akM to i32*
store i32 1342177304,i32*%akN,align 4
%akO=load i8*,i8**%aK,align 8
%akP=bitcast i8*%akL to i8**
store i8*%akO,i8**%akP,align 8
%akQ=getelementptr inbounds i8,i8*%akL,i64 8
%akR=bitcast i8*%akQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2297 to void(...)*),void(...)**%akR,align 8
%akS=getelementptr inbounds i8,i8*%akL,i64 16
%akT=bitcast i8*%akS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2297 to void(...)*),void(...)**%akT,align 8
%akU=getelementptr inbounds i8,i8*%akL,i64 24
%akV=bitcast i8*%akU to i32*
store i32 -2147483647,i32*%akV,align 4
ret i8*%akL
akW:
%akX=getelementptr inbounds i8,i8*%aZ,i64 8
%akY=bitcast i8*%akX to i8**
%akZ=load i8*,i8**%akY,align 8
store i8*%akZ,i8**%aI,align 8
%ak0=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hZ,i64 0,i32 2)to i8*))
%ak1=getelementptr inbounds i8,i8*%ak0,i64 16
%ak2=bitcast i8*%ak1 to i8*(i8*,i8*)**
%ak3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak2,align 8
%ak4=bitcast i8*%ak0 to i8**
%ak5=load i8*,i8**%ak4,align 8
store i8*%ak5,i8**%aJ,align 8
%ak6=call i8*@sml_alloc(i32 inreg 12)#0
%ak7=getelementptr inbounds i8,i8*%ak6,i64 -4
%ak8=bitcast i8*%ak7 to i32*
store i32 1342177288,i32*%ak8,align 4
store i8*%ak6,i8**%aK,align 8
%ak9=load i8*,i8**%aI,align 8
%ala=bitcast i8*%ak6 to i8**
store i8*%ak9,i8**%ala,align 8
%alb=getelementptr inbounds i8,i8*%ak6,i64 8
%alc=bitcast i8*%alb to i32*
store i32 1,i32*%alc,align 4
%ald=call i8*@sml_alloc(i32 inreg 28)#0
%ale=getelementptr inbounds i8,i8*%ald,i64 -4
%alf=bitcast i8*%ale to i32*
store i32 1342177304,i32*%alf,align 4
%alg=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%alh=bitcast i8*%ald to i8**
store i8*%alg,i8**%alh,align 8
%ali=getelementptr inbounds i8,i8*%ald,i64 8
%alj=bitcast i8*%ali to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2294 to void(...)*),void(...)**%alj,align 8
%alk=getelementptr inbounds i8,i8*%ald,i64 16
%all=bitcast i8*%alk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL1x_2294 to void(...)*),void(...)**%all,align 8
%alm=getelementptr inbounds i8,i8*%ald,i64 24
%aln=bitcast i8*%alm to i32*
store i32 -2147483647,i32*%aln,align 4
%alo=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%alp=call fastcc i8*%ak3(i8*inreg%alo,i8*inreg%ald)
store i8*%alp,i8**%aJ,align 8
%alq=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b0,i64 0,i32 2)to i8*))
%alr=getelementptr inbounds i8,i8*%alq,i64 16
%als=bitcast i8*%alr to i8*(i8*,i8*)**
%alt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%als,align 8
%alu=bitcast i8*%alq to i8**
%alv=load i8*,i8**%alu,align 8
store i8*%alv,i8**%aK,align 8
%alw=call i8*@sml_alloc(i32 inreg 20)#0
%alx=getelementptr inbounds i8,i8*%alw,i64 -4
%aly=bitcast i8*%alx to i32*
store i32 1342177296,i32*%aly,align 4
%alz=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%alA=bitcast i8*%alw to i8**
store i8*%alz,i8**%alA,align 8
%alB=getelementptr inbounds i8,i8*%alw,i64 8
%alC=bitcast i8*%alB to i8**
store i8*null,i8**%alC,align 8
%alD=getelementptr inbounds i8,i8*%alw,i64 16
%alE=bitcast i8*%alD to i32*
store i32 3,i32*%alE,align 4
%alF=load i8*,i8**%aK,align 8
store i8*null,i8**%aK,align 8
%alG=call fastcc i8*%alt(i8*inreg%alF,i8*inreg%alw)
store i8*%alG,i8**%aJ,align 8
%alH=call i8*@sml_alloc(i32 inreg 20)#0
%alI=getelementptr inbounds i8,i8*%alH,i64 -4
%alJ=bitcast i8*%alI to i32*
store i32 1342177296,i32*%alJ,align 4
store i8*%alH,i8**%aK,align 8
%alK=load i8*,i8**%aI,align 8
store i8*null,i8**%aI,align 8
%alL=bitcast i8*%alH to i8**
store i8*%alK,i8**%alL,align 8
%alM=load i8*,i8**%aJ,align 8
store i8*null,i8**%aJ,align 8
%alN=getelementptr inbounds i8,i8*%alH,i64 8
%alO=bitcast i8*%alN to i8**
store i8*%alM,i8**%alO,align 8
%alP=getelementptr inbounds i8,i8*%alH,i64 16
%alQ=bitcast i8*%alP to i32*
store i32 3,i32*%alQ,align 4
%alR=call i8*@sml_alloc(i32 inreg 28)#0
%alS=getelementptr inbounds i8,i8*%alR,i64 -4
%alT=bitcast i8*%alS to i32*
store i32 1342177304,i32*%alT,align 4
%alU=load i8*,i8**%aK,align 8
%alV=bitcast i8*%alR to i8**
store i8*%alU,i8**%alV,align 8
%alW=getelementptr inbounds i8,i8*%alR,i64 8
%alX=bitcast i8*%alW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2295 to void(...)*),void(...)**%alX,align 8
%alY=getelementptr inbounds i8,i8*%alR,i64 16
%alZ=bitcast i8*%alY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11queryToTermE_2295 to void(...)*),void(...)**%alZ,align 8
%al0=getelementptr inbounds i8,i8*%alR,i64 24
%al1=bitcast i8*%al0 to i32*
store i32 -2147483647,i32*%al1,align 4
ret i8*%alR
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
z:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%a,i8**%o,align 8
%t=load atomic i32,i32*@sml_check_flag unordered,align 4
%u=icmp eq i32%t,0
br i1%u,label%x,label%v
v:
call void@sml_check(i32 inreg%t)
%w=load i8*,i8**%o,align 8
br label%x
x:
%y=phi i8*[%w,%v],[%a,%z]
%A=bitcast i8*%y to i32*
%B=load i32,i32*%A,align 4
switch i32%B,label%C[
i32 0,label%gJ
i32 1,label%eT
i32 3,label%ea
i32 2,label%U
]
C:
call void@sml_matchcomp_bug()
%D=load i8*,i8**@_SMLZ5Match,align 8
store i8*%D,i8**%o,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
store i8*%E,i8**%p,align 8
%H=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iy,i64 0,i32 2,i64 0),i8**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 60)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177336,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%N,i64 56
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
%S=load i8*,i8**%p,align 8
%T=bitcast i8*%N to i8**
store i8*%S,i8**%T,align 8
call void@sml_raise(i8*inreg%N)#1
unreachable
U:
%V=getelementptr inbounds i8,i8*%y,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
store i8*%X,i8**%r,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=bitcast i8*%aa to i32*
%ac=load i32,i32*%ab,align 4
%ad=bitcast i8*%X to i8**
switch i32%ac,label%ae[
i32 1,label%da
i32 0,label%bQ
i32 2,label%aw
]
ae:
store i8*null,i8**%r,align 8
call void@sml_matchcomp_bug()
%af=load i8*,i8**@_SMLZ5Match,align 8
store i8*%af,i8**%o,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%p,align 8
%aj=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iy,i64 0,i32 2,i64 0),i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 60)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177336,i32*%ar,align 4
%as=getelementptr inbounds i8,i8*%ap,i64 56
%at=bitcast i8*%as to i32*
store i32 1,i32*%at,align 4
%au=load i8*,i8**%p,align 8
%av=bitcast i8*%ap to i8**
store i8*%au,i8**%av,align 8
call void@sml_raise(i8*inreg%ap)#1
unreachable
aw:
%ax=load i8*,i8**%ad,align 8
%ay=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%ax)
store i8*%ay,i8**%o,align 8
%az=load i8*,i8**%r,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
%aD=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%aC)
store i8*%aD,i8**%p,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
%aH=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aE,i64 16
%aN=bitcast i8*%aM to i32*
store i32 3,i32*%aN,align 4
%aO=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aO)
%aP=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aP)
%aQ=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aQ)
%aR=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%aR)
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%aE,i8**%k,align 8
%aS=load atomic i32,i32*@sml_check_flag unordered,align 4
%aT=icmp eq i32%aS,0
br i1%aT,label%a1,label%aU
aU:
call void@sml_check(i32 inreg%aS)
%aV=load i8*,i8**%k,align 8
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
%aY=getelementptr inbounds i8,i8*%aV,i64 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
br label%a1
a1:
%a2=phi i8*[%a0,%aU],[%aJ,%aw]
%a3=phi i8*[%aX,%aU],[%aH,%aw]
store i8*%a3,i8**%k,align 8
store i8*%a2,i8**%l,align 8
%a4=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dN,i64 0,i32 2)to i8*))
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%m,align 8
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%n,align 8
%bd=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to i8**
store i8*null,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 16
%bi=bitcast i8*%bh to i32*
store i32 3,i32*%bi,align 4
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
%bm=load i8*,i8**%k,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=load i8*,i8**%n,align 8
%bp=getelementptr inbounds i8,i8*%bj,i64 8
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bj,i64 16
%bs=bitcast i8*%br to i32*
store i32 3,i32*%bs,align 4
%bt=load i8*,i8**%m,align 8
%bu=call fastcc i8*%a7(i8*inreg%bt,i8*inreg%bj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aO)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aP)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aQ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%aR)
store i8*%bu,i8**%o,align 8
%bv=call i8*@sml_alloc(i32 inreg 20)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
store i8*%bv,i8**%p,align 8
%by=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%bz=bitcast i8*%bv to i8**
store i8*%by,i8**%bz,align 8
%bA=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%bB=getelementptr inbounds i8,i8*%bv,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bv,i64 16
%bE=bitcast i8*%bD to i32*
store i32 3,i32*%bE,align 4
%bF=call i8*@sml_alloc(i32 inreg 28)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177304,i32*%bH,align 4
%bI=load i8*,i8**%p,align 8
%bJ=bitcast i8*%bF to i8**
store i8*%bI,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bF,i64 8
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2420 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bF,i64 16
%bN=bitcast i8*%bM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2420 to void(...)*),void(...)**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bF,i64 24
%bP=bitcast i8*%bO to i32*
store i32 -2147483647,i32*%bP,align 4
ret i8*%bF
bQ:
%bR=load i8*,i8**%ad,align 8
%bS=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%bR)
store i8*%bS,i8**%o,align 8
%bT=load i8*,i8**%r,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
%bX=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%bW)
store i8*%bX,i8**%p,align 8
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
%b1=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%b2=bitcast i8*%bY to i8**
store i8*%b1,i8**%b2,align 8
%b3=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%b4=getelementptr inbounds i8,i8*%bY,i64 8
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bY,i64 16
%b7=bitcast i8*%b6 to i32*
store i32 3,i32*%b7,align 4
%b8=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%b8)
%b9=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%b9)
%ca=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ca)
%cb=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cb)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%bY,i8**%b,align 8
%cc=load atomic i32,i32*@sml_check_flag unordered,align 4
%cd=icmp eq i32%cc,0
br i1%cd,label%cl,label%ce
ce:
call void@sml_check(i32 inreg%cc)
%cf=load i8*,i8**%b,align 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
%ci=getelementptr inbounds i8,i8*%cf,i64 8
%cj=bitcast i8*%ci to i8**
%ck=load i8*,i8**%cj,align 8
br label%cl
cl:
%cm=phi i8*[%ck,%ce],[%b3,%bQ]
%cn=phi i8*[%ch,%ce],[%b1,%bQ]
store i8*%cn,i8**%b,align 8
store i8*%cm,i8**%c,align 8
%co=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dJ,i64 0,i32 2)to i8*))
%cp=getelementptr inbounds i8,i8*%co,i64 16
%cq=bitcast i8*%cp to i8*(i8*,i8*)**
%cr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cq,align 8
%cs=bitcast i8*%co to i8**
%ct=load i8*,i8**%cs,align 8
store i8*%ct,i8**%d,align 8
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177296,i32*%cw,align 4
store i8*%cu,i8**%e,align 8
%cx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cy=bitcast i8*%cu to i8**
store i8*%cx,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cu,i64 8
%cA=bitcast i8*%cz to i8**
store i8*null,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 16
%cC=bitcast i8*%cB to i32*
store i32 3,i32*%cC,align 4
%cD=call i8*@sml_alloc(i32 inreg 20)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177296,i32*%cF,align 4
%cG=load i8*,i8**%b,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=load i8*,i8**%e,align 8
%cJ=getelementptr inbounds i8,i8*%cD,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cD,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=load i8*,i8**%d,align 8
%cO=call fastcc i8*%cr(i8*inreg%cN,i8*inreg%cD)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%b8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%b9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ca)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cb)
store i8*%cO,i8**%o,align 8
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
store i8*%cP,i8**%p,align 8
%cS=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cV=getelementptr inbounds i8,i8*%cP,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cP,i64 16
%cY=bitcast i8*%cX to i32*
store i32 3,i32*%cY,align 4
%cZ=call i8*@sml_alloc(i32 inreg 28)#0
%c0=getelementptr inbounds i8,i8*%cZ,i64 -4
%c1=bitcast i8*%c0 to i32*
store i32 1342177304,i32*%c1,align 4
%c2=load i8*,i8**%p,align 8
%c3=bitcast i8*%cZ to i8**
store i8*%c2,i8**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cZ,i64 8
%c5=bitcast i8*%c4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2419 to void(...)*),void(...)**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cZ,i64 16
%c7=bitcast i8*%c6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2419 to void(...)*),void(...)**%c7,align 8
%c8=getelementptr inbounds i8,i8*%cZ,i64 24
%c9=bitcast i8*%c8 to i32*
store i32 -2147483647,i32*%c9,align 4
ret i8*%cZ
da:
%db=getelementptr inbounds i8,i8*%aa,i64 8
%dc=bitcast i8*%db to i8**
%dd=load i8*,i8**%dc,align 8
store i8*%dd,i8**%q,align 8
%de=bitcast i8*%dd to i32**
%df=load i32*,i32**%de,align 8
%dg=load i32,i32*%df,align 4
%dh=icmp eq i32%dg,0
%di=select i1%dh,i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gl,i64 0,i32 2)to i8*),i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gm,i64 0,i32 2)to i8*)
%dj=getelementptr inbounds i8,i8*%di,i64 16
%dk=bitcast i8*%dj to i8*(i8*,i8*)**
%dl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dk,align 8
%dm=bitcast i8*%di to i8**
%dn=load i8*,i8**%dm,align 8
store i8*%dn,i8**%s,align 8
%do=load i8*,i8**%ad,align 8
%dp=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%do)
store i8*%dp,i8**%o,align 8
%dq=load i8*,i8**%r,align 8
%dr=getelementptr inbounds i8,i8*%dq,i64 16
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
%du=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%dt)
store i8*%du,i8**%p,align 8
%dv=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dw=getelementptr inbounds i8,i8*%dv,i64 8
%dx=bitcast i8*%dw to i8**
%dy=load i8*,i8**%dx,align 8
%dz=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%dy)
store i8*%dz,i8**%q,align 8
%dA=call i8*@sml_alloc(i32 inreg 28)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177304,i32*%dC,align 4
%dD=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dG=getelementptr inbounds i8,i8*%dA,i64 8
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dJ=getelementptr inbounds i8,i8*%dA,i64 16
%dK=bitcast i8*%dJ to i8**
store i8*%dI,i8**%dK,align 8
%dL=getelementptr inbounds i8,i8*%dA,i64 24
%dM=bitcast i8*%dL to i32*
store i32 7,i32*%dM,align 4
%dN=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%dO=call fastcc i8*%dl(i8*inreg%dN,i8*inreg%dA)
store i8*%dO,i8**%o,align 8
%dP=call i8*@sml_alloc(i32 inreg 20)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177296,i32*%dR,align 4
store i8*%dP,i8**%p,align 8
%dS=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%dT=bitcast i8*%dP to i8**
store i8*%dS,i8**%dT,align 8
%dU=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%dV=getelementptr inbounds i8,i8*%dP,i64 8
%dW=bitcast i8*%dV to i8**
store i8*%dU,i8**%dW,align 8
%dX=getelementptr inbounds i8,i8*%dP,i64 16
%dY=bitcast i8*%dX to i32*
store i32 3,i32*%dY,align 4
%dZ=call i8*@sml_alloc(i32 inreg 28)#0
%d0=getelementptr inbounds i8,i8*%dZ,i64 -4
%d1=bitcast i8*%d0 to i32*
store i32 1342177304,i32*%d1,align 4
%d2=load i8*,i8**%p,align 8
%d3=bitcast i8*%dZ to i8**
store i8*%d2,i8**%d3,align 8
%d4=getelementptr inbounds i8,i8*%dZ,i64 8
%d5=bitcast i8*%d4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2418 to void(...)*),void(...)**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dZ,i64 16
%d7=bitcast i8*%d6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2418 to void(...)*),void(...)**%d7,align 8
%d8=getelementptr inbounds i8,i8*%dZ,i64 24
%d9=bitcast i8*%d8 to i32*
store i32 -2147483647,i32*%d9,align 4
ret i8*%dZ
ea:
%eb=getelementptr inbounds i8,i8*%y,i64 8
%ec=bitcast i8*%eb to i8**
%ed=load i8*,i8**%ec,align 8
store i8*%ed,i8**%o,align 8
%ee=bitcast i8*%ed to i8**
%ef=load i8*,i8**%ee,align 8
%eg=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%ef)
store i8*%eg,i8**%p,align 8
%eh=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dt,i64 0,i32 2)to i8*))
%ei=getelementptr inbounds i8,i8*%eh,i64 16
%ej=bitcast i8*%ei to i8*(i8*,i8*)**
%ek=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ej,align 8
%el=bitcast i8*%eh to i8**
%em=load i8*,i8**%el,align 8
store i8*%em,i8**%q,align 8
%en=call i8*@sml_alloc(i32 inreg 20)#0
%eo=getelementptr inbounds i8,i8*%en,i64 -4
%ep=bitcast i8*%eo to i32*
store i32 1342177296,i32*%ep,align 4
%eq=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%er=bitcast i8*%en to i8**
store i8*%eq,i8**%er,align 8
%es=getelementptr inbounds i8,i8*%en,i64 8
%et=bitcast i8*%es to i8**
store i8*null,i8**%et,align 8
%eu=getelementptr inbounds i8,i8*%en,i64 16
%ev=bitcast i8*%eu to i32*
store i32 3,i32*%ev,align 4
%ew=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%ex=call fastcc i8*%ek(i8*inreg%ew,i8*inreg%en)
store i8*%ex,i8**%p,align 8
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
store i8*%ey,i8**%q,align 8
%eB=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%eC=bitcast i8*%ey to i8**
store i8*%eB,i8**%eC,align 8
%eD=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%eE=getelementptr inbounds i8,i8*%ey,i64 8
%eF=bitcast i8*%eE to i8**
store i8*%eD,i8**%eF,align 8
%eG=getelementptr inbounds i8,i8*%ey,i64 16
%eH=bitcast i8*%eG to i32*
store i32 3,i32*%eH,align 4
%eI=call i8*@sml_alloc(i32 inreg 28)#0
%eJ=getelementptr inbounds i8,i8*%eI,i64 -4
%eK=bitcast i8*%eJ to i32*
store i32 1342177304,i32*%eK,align 4
%eL=load i8*,i8**%q,align 8
%eM=bitcast i8*%eI to i8**
store i8*%eL,i8**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eI,i64 8
%eO=bitcast i8*%eN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2417 to void(...)*),void(...)**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eI,i64 16
%eQ=bitcast i8*%eP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2417 to void(...)*),void(...)**%eQ,align 8
%eR=getelementptr inbounds i8,i8*%eI,i64 24
%eS=bitcast i8*%eR to i32*
store i32 -2147483647,i32*%eS,align 4
ret i8*%eI
eT:
%eU=getelementptr inbounds i8,i8*%y,i64 8
%eV=bitcast i8*%eU to i8**
%eW=load i8*,i8**%eV,align 8
store i8*%eW,i8**%p,align 8
%eX=getelementptr inbounds i8,i8*%eW,i64 8
%eY=bitcast i8*%eX to i8**
%eZ=load i8*,i8**%eY,align 8
store i8*%eZ,i8**%q,align 8
%e0=bitcast i8*%eW to i8**
%e1=load i8*,i8**%e0,align 8
%e2=call fastcc i8*@_SMLLN12ElaborateSQL11tableToTermE_2147(i8*inreg%e1)
store i8*%e2,i8**%o,align 8
%e3=call i8*@sml_alloc(i32 inreg 20)#0
%e4=getelementptr inbounds i8,i8*%e3,i64 -4
%e5=bitcast i8*%e4 to i32*
store i32 1342177296,i32*%e5,align 4
%e6=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%e7=bitcast i8*%e3 to i8**
store i8*%e6,i8**%e7,align 8
%e8=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%e9=getelementptr inbounds i8,i8*%e3,i64 8
%fa=bitcast i8*%e9 to i8**
store i8*%e8,i8**%fa,align 8
%fb=getelementptr inbounds i8,i8*%e3,i64 16
%fc=bitcast i8*%fb to i32*
store i32 3,i32*%fc,align 4
%fd=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fd)
%fe=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fe)
%ff=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ff)
%fg=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fg)
%fh=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%fh)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%e3,i8**%f,align 8
%fi=load atomic i32,i32*@sml_check_flag unordered,align 4
%fj=icmp eq i32%fi,0
br i1%fj,label%fo,label%fk
fk:
call void@sml_check(i32 inreg%fi)
%fl=bitcast i8**%f to i8***
%fm=load i8**,i8***%fl,align 8
%fn=load i8*,i8**%fm,align 8
br label%fo
fo:
%fp=phi i8*[%fn,%fk],[%e6,%eT]
store i8*%fp,i8**%h,align 8
%fq=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dx,i64 0,i32 2)to i8*))
%fr=getelementptr inbounds i8,i8*%fq,i64 16
%fs=bitcast i8*%fr to i8*(i8*,i8*)**
%ft=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fs,align 8
%fu=bitcast i8*%fq to i8**
%fv=load i8*,i8**%fu,align 8
store i8*%fv,i8**%i,align 8
%fw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fx=getelementptr inbounds i8,i8*%fw,i64 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
%fA=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%fz)
store i8*%fA,i8**%f,align 8
%fB=call i8*@sml_alloc(i32 inreg 12)#0
%fC=getelementptr inbounds i8,i8*%fB,i64 -4
%fD=bitcast i8*%fC to i32*
store i32 1342177288,i32*%fD,align 4
store i8*%fB,i8**%g,align 8
%fE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fF=bitcast i8*%fB to i8**
store i8*%fE,i8**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fB,i64 8
%fH=bitcast i8*%fG to i32*
store i32 1,i32*%fH,align 4
%fI=call i8*@sml_alloc(i32 inreg 28)#0
%fJ=getelementptr inbounds i8,i8*%fI,i64 -4
%fK=bitcast i8*%fJ to i32*
store i32 1342177304,i32*%fK,align 4
store i8*%fI,i8**%f,align 8
%fL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fM=bitcast i8*%fI to i8**
store i8*%fL,i8**%fM,align 8
%fN=getelementptr inbounds i8,i8*%fI,i64 8
%fO=bitcast i8*%fN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12Con__TABLE__ASE_1388 to void(...)*),void(...)**%fO,align 8
%fP=getelementptr inbounds i8,i8*%fI,i64 16
%fQ=bitcast i8*%fP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12Con__TABLE__ASE_1388 to void(...)*),void(...)**%fQ,align 8
%fR=getelementptr inbounds i8,i8*%fI,i64 24
%fS=bitcast i8*%fR to i32*
store i32 -2147483647,i32*%fS,align 4
%fT=call i8*@sml_alloc(i32 inreg 20)#0
%fU=getelementptr inbounds i8,i8*%fT,i64 -4
%fV=bitcast i8*%fU to i32*
store i32 1342177296,i32*%fV,align 4
%fW=load i8*,i8**%f,align 8
%fX=bitcast i8*%fT to i8**
store i8*%fW,i8**%fX,align 8
%fY=getelementptr inbounds i8,i8*%fT,i64 8
%fZ=bitcast i8*%fY to i8**
store i8*null,i8**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fT,i64 16
%f1=bitcast i8*%f0 to i32*
store i32 3,i32*%f1,align 4
store i8*null,i8**%g,align 8
%f2=call i8*@sml_alloc(i32 inreg 20)#0
%f3=getelementptr inbounds i8,i8*%f2,i64 -4
%f4=bitcast i8*%f3 to i32*
store i32 1342177296,i32*%f4,align 4
store i8*%f2,i8**%j,align 8
%f5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f6=bitcast i8*%f2 to i8**
store i8*%f5,i8**%f6,align 8
%f7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%f8=getelementptr inbounds i8,i8*%f2,i64 8
%f9=bitcast i8*%f8 to i8**
store i8*%f7,i8**%f9,align 8
%ga=getelementptr inbounds i8,i8*%f2,i64 16
%gb=bitcast i8*%ga to i32*
store i32 3,i32*%gb,align 4
%gc=call i8*@sml_alloc(i32 inreg 20)#0
%gd=getelementptr inbounds i8,i8*%gc,i64 -4
%ge=bitcast i8*%gd to i32*
store i32 1342177296,i32*%ge,align 4
%gf=load i8*,i8**%h,align 8
%gg=bitcast i8*%gc to i8**
store i8*%gf,i8**%gg,align 8
%gh=load i8*,i8**%j,align 8
%gi=getelementptr inbounds i8,i8*%gc,i64 8
%gj=bitcast i8*%gi to i8**
store i8*%gh,i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%gc,i64 16
%gl=bitcast i8*%gk to i32*
store i32 3,i32*%gl,align 4
%gm=load i8*,i8**%i,align 8
%gn=call fastcc i8*%ft(i8*inreg%gm,i8*inreg%gc)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fd)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fe)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ff)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fg)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%fh)
store i8*%gn,i8**%o,align 8
%go=call i8*@sml_alloc(i32 inreg 20)#0
%gp=getelementptr inbounds i8,i8*%go,i64 -4
%gq=bitcast i8*%gp to i32*
store i32 1342177296,i32*%gq,align 4
store i8*%go,i8**%q,align 8
%gr=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%gs=bitcast i8*%go to i8**
store i8*%gr,i8**%gs,align 8
%gt=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%gu=getelementptr inbounds i8,i8*%go,i64 8
%gv=bitcast i8*%gu to i8**
store i8*%gt,i8**%gv,align 8
%gw=getelementptr inbounds i8,i8*%go,i64 16
%gx=bitcast i8*%gw to i32*
store i32 3,i32*%gx,align 4
%gy=call i8*@sml_alloc(i32 inreg 28)#0
%gz=getelementptr inbounds i8,i8*%gy,i64 -4
%gA=bitcast i8*%gz to i32*
store i32 1342177304,i32*%gA,align 4
%gB=load i8*,i8**%q,align 8
%gC=bitcast i8*%gy to i8**
store i8*%gB,i8**%gC,align 8
%gD=getelementptr inbounds i8,i8*%gy,i64 8
%gE=bitcast i8*%gD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2416 to void(...)*),void(...)**%gE,align 8
%gF=getelementptr inbounds i8,i8*%gy,i64 16
%gG=bitcast i8*%gF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2416 to void(...)*),void(...)**%gG,align 8
%gH=getelementptr inbounds i8,i8*%gy,i64 24
%gI=bitcast i8*%gH to i32*
store i32 -2147483647,i32*%gI,align 4
ret i8*%gy
gJ:
%gK=getelementptr inbounds i8,i8*%y,i64 8
%gL=bitcast i8*%gK to i8**
%gM=load i8*,i8**%gL,align 8
store i8*%gM,i8**%o,align 8
%gN=bitcast i8*%gM to i8**
%gO=load i8*,i8**%gN,align 8
%gP=call fastcc i8*@_SMLLN12ElaborateSQL13tableIdToTermE_2145(i8*inreg%gO)
store i8*%gP,i8**%p,align 8
%gQ=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dp,i64 0,i32 2)to i8*))
%gR=getelementptr inbounds i8,i8*%gQ,i64 16
%gS=bitcast i8*%gR to i8*(i8*,i8*)**
%gT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gS,align 8
%gU=bitcast i8*%gQ to i8**
%gV=load i8*,i8**%gU,align 8
store i8*%gV,i8**%q,align 8
%gW=call i8*@sml_alloc(i32 inreg 20)#0
%gX=getelementptr inbounds i8,i8*%gW,i64 -4
%gY=bitcast i8*%gX to i32*
store i32 1342177296,i32*%gY,align 4
%gZ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%g0=bitcast i8*%gW to i8**
store i8*%gZ,i8**%g0,align 8
%g1=getelementptr inbounds i8,i8*%gW,i64 8
%g2=bitcast i8*%g1 to i8**
store i8*null,i8**%g2,align 8
%g3=getelementptr inbounds i8,i8*%gW,i64 16
%g4=bitcast i8*%g3 to i32*
store i32 3,i32*%g4,align 4
%g5=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%g6=call fastcc i8*%gT(i8*inreg%g5,i8*inreg%gW)
store i8*%g6,i8**%p,align 8
%g7=call i8*@sml_alloc(i32 inreg 20)#0
%g8=getelementptr inbounds i8,i8*%g7,i64 -4
%g9=bitcast i8*%g8 to i32*
store i32 1342177296,i32*%g9,align 4
store i8*%g7,i8**%q,align 8
%ha=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%hb=bitcast i8*%g7 to i8**
store i8*%ha,i8**%hb,align 8
%hc=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%hd=getelementptr inbounds i8,i8*%g7,i64 8
%he=bitcast i8*%hd to i8**
store i8*%hc,i8**%he,align 8
%hf=getelementptr inbounds i8,i8*%g7,i64 16
%hg=bitcast i8*%hf to i32*
store i32 3,i32*%hg,align 4
%hh=call i8*@sml_alloc(i32 inreg 28)#0
%hi=getelementptr inbounds i8,i8*%hh,i64 -4
%hj=bitcast i8*%hi to i32*
store i32 1342177304,i32*%hj,align 4
%hk=load i8*,i8**%q,align 8
%hl=bitcast i8*%hh to i8**
store i8*%hk,i8**%hl,align 8
%hm=getelementptr inbounds i8,i8*%hh,i64 8
%hn=bitcast i8*%hm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2415 to void(...)*),void(...)**%hn,align 8
%ho=getelementptr inbounds i8,i8*%hh,i64 16
%hp=bitcast i8*%ho to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11tableToTermE_2415 to void(...)*),void(...)**%hp,align 8
%hq=getelementptr inbounds i8,i8*%hh,i64 24
%hr=bitcast i8*%hq to i32*
store i32 -2147483647,i32*%hr,align 4
ret i8*%hh
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2148(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iz,i64 0,i32 2)to i8*)
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%o)
store i8*%p,i8**%b,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@l,i64 0,i32 2)to i8*))
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*null,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=tail call fastcc i8*%t(i8*inreg%F,i8*inreg%w)
ret i8*%G
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2149(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iA,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%b,align 8
%t=tail call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2449(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2450(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2449 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2449 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2451(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2452(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLL6fields_2453(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%i,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=load i8*,i8**%i,align 8
%p=bitcast i8**%h to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8**[%q,%n],[%m,%l]
%t=phi i8*[%o,%n],[%b,%l]
%u=bitcast i8*%t to i32*
%v=load i32,i32*%u,align 4
%w=getelementptr inbounds i8,i8*%t,i64 8
%x=bitcast i8*%w to i8***
%y=load i8**,i8***%x,align 8
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%i,align 8
%A=load i8*,i8**%s,align 8
store i8*%A,i8**%h,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 12
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
%G=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i32*
store i32%v,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%M)
%N=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%N)
%O=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%O)
%P=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%P)
%Q=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%Q)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%B,i8**%c,align 8
%R=load atomic i32,i32*@sml_check_flag unordered,align 4
%S=icmp eq i32%R,0
br i1%S,label%X,label%T
T:
call void@sml_check(i32 inreg%R)
%U=bitcast i8**%c to i8***
%V=load i8**,i8***%U,align 8
%W=load i8*,i8**%V,align 8
br label%X
X:
%Y=phi i8*[%W,%T],[%G,%r]
store i8*%Y,i8**%e,align 8
%Z=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gh,i64 0,i32 2)to i8*))
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%f,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
store i8*%af,i8**%d,align 8
%ai=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
store i8*%am,i8**%c,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1329 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_1329 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%c,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to i8**
store i8*null,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
store i8*null,i8**%d,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
store i8*%aG,i8**%g,align 8
%aJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
store i8*%aQ,i8**%c,align 8
%aT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aQ,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
%a0=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
%a8=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%a7)
%a9=load i8*,i8**%f,align 8
%ba=call fastcc i8*%ac(i8*inreg%a9,i8*inreg%a8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%M)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%N)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%O)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%P)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%Q)
store i8*%ba,i8**%h,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
%be=load i8*,i8**%i,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%h,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
ret i8*%bb
}
define internal fastcc i8*@_SMLL6fields_2454(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177288,i32*%n,align 4
store i8*%l,i8**%g,align 8
%o=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to i32*
store i32 1,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_2453 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_2453 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 -2147483647,i32*%C,align 4
%D=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%D)
%E=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%E)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%s,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%d,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4mapiE_1134 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL4mapiE_1134 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%D)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%E)
%X=bitcast i8**%f to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8***
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
%ae=tail call fastcc i8*@_SMLLN12ElaborateSQL4mapiE_1134(i8*inreg%P,i8*inreg%ad)
ret i8*%ae
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2455(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%p=load i8*,i8**%n,align 8
%q=call fastcc i8*@_SMLL6fields_2454(i8*inreg%p,i8*inreg%o)
%r=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%q)
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*null,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
store i8*null,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=tail call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1240(i8*inreg%B)
ret i8*%L
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2456(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
%B=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%A)
ret i8*%B
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2435(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
g:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
br label%e
e:
%f=phi i8*[%a,%g],[%R,%Q]
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%f,%e]
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 8,label%bd
i32 25,label%ad
i32 22,label%W
i32 23,label%S
i32 26,label%J
]
p:
%q=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iD,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[11x i8]}>,<{[4x i8],i32,[11x i8]}>*@iE,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 7,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%c,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%m,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%b,align 8
br label%Q
Q:
%R=phi i8*[%P,%J],[%V,%S],[%ac,%W]
br label%e
S:
%T=getelementptr inbounds i8,i8*%m,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%b,align 8
br label%Q
W:
%X=getelementptr inbounds i8,i8*%m,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 48
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%b,align 8
br label%Q
ad:
%ae=getelementptr inbounds i8,i8*%m,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%b,align 8
%ah=call i8*@sml_alloc(i32 inreg 12)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177288,i32*%aj,align 4
store i8*%ah,i8**%c,align 8
%ak=load i8*,i8**%b,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
%ar=load i8*,i8**%c,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_2454 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 16
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL6fields_2454 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 24
%ay=bitcast i8*%ax to i32*
store i32 -2147483647,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 12)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177288,i32*%aB,align 4
store i8*%az,i8**%d,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i32*
store i32 1,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2455 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2455 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
%aR=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%aG)
store i8*%aR,i8**%c,align 8
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
store i8*%aS,i8**%d,align 8
%aV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aS,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
%a5=load i8*,i8**%d,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2456 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2456 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 24
%bc=bitcast i8*%bb to i32*
store i32 -2147483647,i32*%bc,align 4
ret i8*%a2
bd:
%be=getelementptr inbounds i8,i8*%m,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%b,align 8
%bh=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@iG,i64 0,i32 2,i64 0))
store i8*%bh,i8**%c,align 8
%bi=call i8*@sml_alloc(i32 inreg 12)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177288,i32*%bk,align 4
store i8*%bi,i8**%d,align 8
%bl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bi,i64 8
%bo=bitcast i8*%bn to i32*
store i32 1,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 28)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177304,i32*%br,align 4
%bs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2450 to void(...)*),void(...)**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bp,i64 16
%bx=bitcast i8*%bw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2450 to void(...)*),void(...)**%bx,align 8
%by=getelementptr inbounds i8,i8*%bp,i64 24
%bz=bitcast i8*%by to i32*
store i32 -2147483647,i32*%bz,align 4
store i8*%bs,i8**%c,align 8
%bA=call i8*@sml_alloc(i32 inreg 12)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177288,i32*%bC,align 4
store i8*%bA,i8**%d,align 8
%bD=load i8*,i8**%b,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i32*
store i32 1,i32*%bG,align 4
%bH=call i8*@sml_alloc(i32 inreg 28)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177304,i32*%bJ,align 4
%bK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bL=bitcast i8*%bH to i8**
store i8*%bK,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bH,i64 8
%bN=bitcast i8*%bM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2451 to void(...)*),void(...)**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 16
%bP=bitcast i8*%bO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2451 to void(...)*),void(...)**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bH,i64 24
%bR=bitcast i8*%bQ to i32*
store i32 -2147483647,i32*%bR,align 4
%bS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bT=call fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2450(i8*inreg%bS,i8*inreg%bH)
store i8*%bT,i8**%c,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%d,align 8
%bX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=getelementptr inbounds i8,i8*%bU,i64 8
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bU,i64 16
%b3=bitcast i8*%b2 to i32*
store i32 3,i32*%b3,align 4
%b4=call i8*@sml_alloc(i32 inreg 28)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177304,i32*%b6,align 4
%b7=load i8*,i8**%d,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2452 to void(...)*),void(...)**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10readResultE_2452 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b4,i64 24
%ce=bitcast i8*%cd to i32*
store i32 -2147483647,i32*%ce,align 4
ret i8*%b4
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2462(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2463(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8**%n to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%s(i8*inreg%v,i8*inreg%o)
%x=tail call fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1334(i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2464(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2466(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iF,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%d,align 8
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
%s=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%c,align 8
%z=tail call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2468(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%u(i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%e to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=bitcast i8*%O to i32*
%Q=getelementptr inbounds i8,i8*%O,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=getelementptr inbounds i8,i8*%O,i64 4
%T=bitcast i8*%S to i32*
store i32 0,i32*%T,align 1
store i32 20,i32*%P,align 4
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
ret i8*%O
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2469(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2468 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2468 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2470(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8***
%f=load i8**,i8***%e,align 8
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*null,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=bitcast i8*%q to i32*
%s=getelementptr inbounds i8,i8*%q,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=getelementptr inbounds i8,i8*%q,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
store i32 25,i32*%r,align 4
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2471(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%x)
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2472(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8**%n to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%s(i8*inreg%v,i8*inreg%o)
%x=tail call fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1334(i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2473(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bK,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2475(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iH,i64 0,i32 2)to i8*))
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
store i8*null,i8**%d,align 8
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
%s=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%r)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%c,align 8
%z=tail call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2477(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
R:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
%C=alloca i8*,align 8
%D=alloca i8*,align 8
%E=alloca i8*,align 8
%F=alloca i8*,align 8
%G=alloca i8*,align 8
%H=alloca i8*,align 8
%I=alloca i8*,align 8
%J=alloca i8*,align 8
%K=alloca i8*,align 8
call void@llvm.gcroot(i8**%G,i8*null)#0
call void@llvm.gcroot(i8**%H,i8*null)#0
call void@llvm.gcroot(i8**%I,i8*null)#0
call void@llvm.gcroot(i8**%J,i8*null)#0
call void@llvm.gcroot(i8**%K,i8*null)#0
store i8*%a,i8**%G,align 8
%L=load atomic i32,i32*@sml_check_flag unordered,align 4
%M=icmp eq i32%L,0
br i1%M,label%P,label%N
N:
call void@sml_check(i32 inreg%L)
%O=load i8*,i8**%G,align 8
br label%P
P:
%Q=phi i8*[%O,%N],[%a,%R]
%S=call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2146(i8*inreg%Q)
store i8*%S,i8**%H,align 8
%T=load i8*,i8**%G,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%T)
store i8*%U,i8**%I,align 8
%V=load i8*,i8**%G,align 8
%W=bitcast i8*%V to i32*
%X=load i32,i32*%W,align 4
switch i32%X,label%Y[
i32 16,label%qO
i32 8,label%pv
i32 6,label%pi
i32 17,label%o5
i32 3,label%oS
i32 4,label%oF
i32 19,label%os
i32 20,label%of
i32 0,label%n2
i32 27,label%nP
i32 1,label%nC
i32 28,label%np
i32 9,label%nc
i32 10,label%mZ
i32 30,label%l6
i32 11,label%ld
i32 21,label%kk
i32 18,label%jr
i32 15,label%iy
i32 25,label%hl
i32 22,label%f8
i32 23,label%ff
i32 13,label%e0
i32 12,label%eL
i32 14,label%ew
i32 29,label%eh
i32 7,label%d2
i32 2,label%dN
i32 5,label%dy
i32 24,label%dj
i32 26,label%aq
]
Y:
store i8*null,i8**%H,align 8
store i8*null,i8**%I,align 8
call void@sml_matchcomp_bug()
%Z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Z,i8**%G,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
store i8*%aa,i8**%H,align 8
%ad=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iI,i64 0,i32 2,i64 0),i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 60)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177336,i32*%al,align 4
%am=getelementptr inbounds i8,i8*%aj,i64 56
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=load i8*,i8**%H,align 8
%ap=bitcast i8*%aj to i8**
store i8*%ao,i8**%ap,align 8
call void@sml_raise(i8*inreg%aj)#1
unreachable
aq:
store i8*null,i8**%G,align 8
%ar=bitcast i8**%F to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ar)
call void@llvm.gcroot(i8**%F,i8*null)#0
br label%as
as:
%at=phi i8*[%aJ,%aD],[%V,%aq]
store i8*%at,i8**%F,align 8
%au=load atomic i32,i32*@sml_check_flag unordered,align 4
%av=icmp eq i32%au,0
br i1%av,label%ay,label%aw
aw:
call void@sml_check(i32 inreg%au)
%ax=load i8*,i8**%F,align 8
br label%ay
ay:
%az=phi i8*[%ax,%aw],[%at,%as]
%aA=bitcast i8*%az to i32*
%aB=load i32,i32*%aA,align 4
%aC=icmp eq i32%aB,26
br i1%aC,label%aD,label%aK
aD:
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=getelementptr inbounds i8,i8*%aG,i64 8
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
br label%as
aK:
%aL=bitcast i8*%az to i32*
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ar)
store i8*%az,i8**%J,align 8
%aM=load i32,i32*%aL,align 4
switch i32%aM,label%c3[
i32 8,label%bG
i32 23,label%aN
]
aN:
%aO=call i8*@sml_alloc(i32 inreg 12)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177288,i32*%aQ,align 4
store i8*%aO,i8**%G,align 8
%aR=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to i32*
store i32 1,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
%aY=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2472 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2472 to void(...)*),void(...)**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 -2147483647,i32*%a5,align 4
%a6=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%aV)
store i8*%a6,i8**%G,align 8
%a7=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%a8=call fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2435(i8*inreg%a7)
store i8*%a8,i8**%I,align 8
%a9=call i8*@sml_alloc(i32 inreg 12)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177288,i32*%bb,align 4
store i8*%a9,i8**%J,align 8
%bc=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i32*
store i32 1,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
%bj=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2475 to void(...)*),void(...)**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2475 to void(...)*),void(...)**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 24
%bq=bitcast i8*%bp to i32*
store i32 -2147483647,i32*%bq,align 4
%br=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%bg)
store i8*%br,i8**%I,align 8
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%H,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%G,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=load i8*,i8**%I,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 16
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bs,i64 24
%bE=bitcast i8*%bD to i32*
store i32 7,i32*%bE,align 4
%bF=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%bs)
ret i8*%bF
bG:
%bH=getelementptr inbounds i8,i8*%az,i64 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%J,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i32*
%bM=load i32,i32*%bL,align 4
%bN=icmp eq i32%bM,0
br i1%bN,label%bO,label%c3
bO:
%bP=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%bQ=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%bP)
store i8*%bQ,i8**%G,align 8
%bR=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@iG,i64 0,i32 2,i64 0))
store i8*%bR,i8**%I,align 8
%bS=call i8*@sml_alloc(i32 inreg 12)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177288,i32*%bU,align 4
store i8*%bS,i8**%K,align 8
%bV=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i32*
store i32 1,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 28)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177304,i32*%b1,align 4
%b2=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bZ,i64 8
%b5=bitcast i8*%b4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2469 to void(...)*),void(...)**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bZ,i64 16
%b7=bitcast i8*%b6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2469 to void(...)*),void(...)**%b7,align 8
%b8=getelementptr inbounds i8,i8*%bZ,i64 24
%b9=bitcast i8*%b8 to i32*
store i32 -2147483647,i32*%b9,align 4
store i8*%b2,i8**%I,align 8
%ca=call i8*@sml_alloc(i32 inreg 12)#0
%cb=getelementptr inbounds i8,i8*%ca,i64 -4
%cc=bitcast i8*%cb to i32*
store i32 1342177288,i32*%cc,align 4
store i8*%ca,i8**%K,align 8
%cd=load i8*,i8**%J,align 8
%ce=bitcast i8*%ca to i8**
store i8*%cd,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%ca,i64 8
%cg=bitcast i8*%cf to i32*
store i32 1,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 28)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177304,i32*%cj,align 4
%ck=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2470 to void(...)*),void(...)**%cn,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 16
%cp=bitcast i8*%co to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2470 to void(...)*),void(...)**%cp,align 8
%cq=getelementptr inbounds i8,i8*%ch,i64 24
%cr=bitcast i8*%cq to i32*
store i32 -2147483647,i32*%cr,align 4
%cs=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%ct=call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2469(i8*inreg%cs,i8*inreg%ch)
store i8*%ct,i8**%I,align 8
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177296,i32*%cw,align 4
store i8*%cu,i8**%K,align 8
%cx=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%cy=bitcast i8*%cu to i8**
store i8*%cx,i8**%cy,align 8
%cz=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%cA=getelementptr inbounds i8,i8*%cu,i64 8
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cu,i64 16
%cD=bitcast i8*%cC to i32*
store i32 3,i32*%cD,align 4
%cE=call i8*@sml_alloc(i32 inreg 28)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177304,i32*%cG,align 4
store i8*%cE,i8**%I,align 8
%cH=load i8*,i8**%K,align 8
store i8*null,i8**%K,align 8
%cI=bitcast i8*%cE to i8**
store i8*%cH,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2471 to void(...)*),void(...)**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2471 to void(...)*),void(...)**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cE,i64 24
%cO=bitcast i8*%cN to i32*
store i32 -2147483647,i32*%cO,align 4
%cP=call i8*@sml_alloc(i32 inreg 28)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177304,i32*%cR,align 4
%cS=load i8*,i8**%H,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=load i8*,i8**%G,align 8
%cV=getelementptr inbounds i8,i8*%cP,i64 8
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=load i8*,i8**%I,align 8
%cY=getelementptr inbounds i8,i8*%cP,i64 16
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cP,i64 24
%c1=bitcast i8*%c0 to i32*
store i32 7,i32*%c1,align 4
%c2=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%cP)
ret i8*%c2
c3:
store i8*null,i8**%J,align 8
%c4=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%c5=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%c4)
store i8*%c5,i8**%G,align 8
%c6=call i8*@sml_alloc(i32 inreg 28)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177304,i32*%c8,align 4
%c9=load i8*,i8**%H,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=load i8*,i8**%G,align 8
%dc=getelementptr inbounds i8,i8*%c6,i64 8
%dd=bitcast i8*%dc to i8**
store i8*%db,i8**%dd,align 8
%de=getelementptr inbounds i8,i8*%c6,i64 16
%df=bitcast i8*%de to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%df,align 8
%dg=getelementptr inbounds i8,i8*%c6,i64 24
%dh=bitcast i8*%dg to i32*
store i32 7,i32*%dh,align 4
%di=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%c6)
ret i8*%di
dj:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%dk=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%dk,i8**%G,align 8
%dl=call i8*@sml_alloc(i32 inreg 28)#0
%dm=getelementptr inbounds i8,i8*%dl,i64 -4
%dn=bitcast i8*%dm to i32*
store i32 1342177304,i32*%dn,align 4
%do=load i8*,i8**%H,align 8
%dp=bitcast i8*%dl to i8**
store i8*%do,i8**%dp,align 8
%dq=load i8*,i8**%G,align 8
%dr=getelementptr inbounds i8,i8*%dl,i64 8
%ds=bitcast i8*%dr to i8**
store i8*%dq,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dl,i64 16
%du=bitcast i8*%dt to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dl,i64 24
%dw=bitcast i8*%dv to i32*
store i32 7,i32*%dw,align 4
%dx=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%dl)
ret i8*%dx
dy:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%dz=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%dz,i8**%G,align 8
%dA=call i8*@sml_alloc(i32 inreg 28)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177304,i32*%dC,align 4
%dD=load i8*,i8**%H,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=load i8*,i8**%G,align 8
%dG=getelementptr inbounds i8,i8*%dA,i64 8
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dA,i64 16
%dJ=bitcast i8*%dI to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%dJ,align 8
%dK=getelementptr inbounds i8,i8*%dA,i64 24
%dL=bitcast i8*%dK to i32*
store i32 7,i32*%dL,align 4
%dM=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%dA)
ret i8*%dM
dN:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%dO=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%dO,i8**%G,align 8
%dP=call i8*@sml_alloc(i32 inreg 28)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177304,i32*%dR,align 4
%dS=load i8*,i8**%H,align 8
%dT=bitcast i8*%dP to i8**
store i8*%dS,i8**%dT,align 8
%dU=load i8*,i8**%G,align 8
%dV=getelementptr inbounds i8,i8*%dP,i64 8
%dW=bitcast i8*%dV to i8**
store i8*%dU,i8**%dW,align 8
%dX=getelementptr inbounds i8,i8*%dP,i64 16
%dY=bitcast i8*%dX to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dP,i64 24
%d0=bitcast i8*%dZ to i32*
store i32 7,i32*%d0,align 4
%d1=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%dP)
ret i8*%d1
d2:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%d3=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%d3,i8**%G,align 8
%d4=call i8*@sml_alloc(i32 inreg 28)#0
%d5=getelementptr inbounds i8,i8*%d4,i64 -4
%d6=bitcast i8*%d5 to i32*
store i32 1342177304,i32*%d6,align 4
%d7=load i8*,i8**%H,align 8
%d8=bitcast i8*%d4 to i8**
store i8*%d7,i8**%d8,align 8
%d9=load i8*,i8**%G,align 8
%ea=getelementptr inbounds i8,i8*%d4,i64 8
%eb=bitcast i8*%ea to i8**
store i8*%d9,i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d4,i64 16
%ed=bitcast i8*%ec to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%ed,align 8
%ee=getelementptr inbounds i8,i8*%d4,i64 24
%ef=bitcast i8*%ee to i32*
store i32 7,i32*%ef,align 4
%eg=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%d4)
ret i8*%eg
eh:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%ei=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%ei,i8**%G,align 8
%ej=call i8*@sml_alloc(i32 inreg 28)#0
%ek=getelementptr inbounds i8,i8*%ej,i64 -4
%el=bitcast i8*%ek to i32*
store i32 1342177304,i32*%el,align 4
%em=load i8*,i8**%H,align 8
%en=bitcast i8*%ej to i8**
store i8*%em,i8**%en,align 8
%eo=load i8*,i8**%G,align 8
%ep=getelementptr inbounds i8,i8*%ej,i64 8
%eq=bitcast i8*%ep to i8**
store i8*%eo,i8**%eq,align 8
%er=getelementptr inbounds i8,i8*%ej,i64 16
%es=bitcast i8*%er to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%es,align 8
%et=getelementptr inbounds i8,i8*%ej,i64 24
%eu=bitcast i8*%et to i32*
store i32 7,i32*%eu,align 4
%ev=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%ej)
ret i8*%ev
ew:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%ex=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%ex,i8**%G,align 8
%ey=call i8*@sml_alloc(i32 inreg 28)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177304,i32*%eA,align 4
%eB=load i8*,i8**%H,align 8
%eC=bitcast i8*%ey to i8**
store i8*%eB,i8**%eC,align 8
%eD=load i8*,i8**%G,align 8
%eE=getelementptr inbounds i8,i8*%ey,i64 8
%eF=bitcast i8*%eE to i8**
store i8*%eD,i8**%eF,align 8
%eG=getelementptr inbounds i8,i8*%ey,i64 16
%eH=bitcast i8*%eG to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%eH,align 8
%eI=getelementptr inbounds i8,i8*%ey,i64 24
%eJ=bitcast i8*%eI to i32*
store i32 7,i32*%eJ,align 4
%eK=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%ey)
ret i8*%eK
eL:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%eM=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%eM,i8**%G,align 8
%eN=call i8*@sml_alloc(i32 inreg 28)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177304,i32*%eP,align 4
%eQ=load i8*,i8**%H,align 8
%eR=bitcast i8*%eN to i8**
store i8*%eQ,i8**%eR,align 8
%eS=load i8*,i8**%G,align 8
%eT=getelementptr inbounds i8,i8*%eN,i64 8
%eU=bitcast i8*%eT to i8**
store i8*%eS,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eN,i64 16
%eW=bitcast i8*%eV to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%eW,align 8
%eX=getelementptr inbounds i8,i8*%eN,i64 24
%eY=bitcast i8*%eX to i32*
store i32 7,i32*%eY,align 4
%eZ=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%eN)
ret i8*%eZ
e0:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%e1=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%e1,i8**%G,align 8
%e2=call i8*@sml_alloc(i32 inreg 28)#0
%e3=getelementptr inbounds i8,i8*%e2,i64 -4
%e4=bitcast i8*%e3 to i32*
store i32 1342177304,i32*%e4,align 4
%e5=load i8*,i8**%H,align 8
%e6=bitcast i8*%e2 to i8**
store i8*%e5,i8**%e6,align 8
%e7=load i8*,i8**%G,align 8
%e8=getelementptr inbounds i8,i8*%e2,i64 8
%e9=bitcast i8*%e8 to i8**
store i8*%e7,i8**%e9,align 8
%fa=getelementptr inbounds i8,i8*%e2,i64 16
%fb=bitcast i8*%fa to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*),i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e2,i64 24
%fd=bitcast i8*%fc to i32*
store i32 7,i32*%fd,align 4
%fe=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%e2)
ret i8*%fe
ff:
%fg=call i8*@sml_alloc(i32 inreg 12)#0
%fh=getelementptr inbounds i8,i8*%fg,i64 -4
%fi=bitcast i8*%fh to i32*
store i32 1342177288,i32*%fi,align 4
store i8*%fg,i8**%J,align 8
%fj=load i8*,i8**%I,align 8
store i8*null,i8**%I,align 8
%fk=bitcast i8*%fg to i8**
store i8*%fj,i8**%fk,align 8
%fl=getelementptr inbounds i8,i8*%fg,i64 8
%fm=bitcast i8*%fl to i32*
store i32 1,i32*%fm,align 4
%fn=call i8*@sml_alloc(i32 inreg 28)#0
%fo=getelementptr inbounds i8,i8*%fn,i64 -4
%fp=bitcast i8*%fo to i32*
store i32 1342177304,i32*%fp,align 4
%fq=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%fr=bitcast i8*%fn to i8**
store i8*%fq,i8**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fn,i64 8
%ft=bitcast i8*%fs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2463 to void(...)*),void(...)**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fn,i64 16
%fv=bitcast i8*%fu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2463 to void(...)*),void(...)**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fn,i64 24
%fx=bitcast i8*%fw to i32*
store i32 -2147483647,i32*%fx,align 4
%fy=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%fn)
store i8*%fy,i8**%I,align 8
%fz=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%fA=call fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2435(i8*inreg%fz)
store i8*%fA,i8**%G,align 8
%fB=call i8*@sml_alloc(i32 inreg 12)#0
%fC=getelementptr inbounds i8,i8*%fB,i64 -4
%fD=bitcast i8*%fC to i32*
store i32 1342177288,i32*%fD,align 4
store i8*%fB,i8**%J,align 8
%fE=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%fF=bitcast i8*%fB to i8**
store i8*%fE,i8**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fB,i64 8
%fH=bitcast i8*%fG to i32*
store i32 1,i32*%fH,align 4
%fI=call i8*@sml_alloc(i32 inreg 28)#0
%fJ=getelementptr inbounds i8,i8*%fI,i64 -4
%fK=bitcast i8*%fJ to i32*
store i32 1342177304,i32*%fK,align 4
%fL=load i8*,i8**%J,align 8
store i8*null,i8**%J,align 8
%fM=bitcast i8*%fI to i8**
store i8*%fL,i8**%fM,align 8
%fN=getelementptr inbounds i8,i8*%fI,i64 8
%fO=bitcast i8*%fN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2466 to void(...)*),void(...)**%fO,align 8
%fP=getelementptr inbounds i8,i8*%fI,i64 16
%fQ=bitcast i8*%fP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2466 to void(...)*),void(...)**%fQ,align 8
%fR=getelementptr inbounds i8,i8*%fI,i64 24
%fS=bitcast i8*%fR to i32*
store i32 -2147483647,i32*%fS,align 4
%fT=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%fI)
store i8*%fT,i8**%G,align 8
%fU=call i8*@sml_alloc(i32 inreg 28)#0
%fV=getelementptr inbounds i8,i8*%fU,i64 -4
%fW=bitcast i8*%fV to i32*
store i32 1342177304,i32*%fW,align 4
%fX=load i8*,i8**%H,align 8
%fY=bitcast i8*%fU to i8**
store i8*%fX,i8**%fY,align 8
%fZ=load i8*,i8**%I,align 8
%f0=getelementptr inbounds i8,i8*%fU,i64 8
%f1=bitcast i8*%f0 to i8**
store i8*%fZ,i8**%f1,align 8
%f2=load i8*,i8**%G,align 8
%f3=getelementptr inbounds i8,i8*%fU,i64 16
%f4=bitcast i8*%f3 to i8**
store i8*%f2,i8**%f4,align 8
%f5=getelementptr inbounds i8,i8*%fU,i64 24
%f6=bitcast i8*%f5 to i32*
store i32 7,i32*%f6,align 4
%f7=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__COMMANDtyE_1456(i8*inreg%fU)
ret i8*%f7
f8:
store i8*null,i8**%I,align 8
%f9=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%f9,i8**%I,align 8
%ga=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%gb=call fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2435(i8*inreg%ga)
store i8*%gb,i8**%G,align 8
%gc=call i8*@sml_alloc(i32 inreg 28)#0
%gd=getelementptr inbounds i8,i8*%gc,i64 -4
%ge=bitcast i8*%gd to i32*
store i32 1342177304,i32*%ge,align 4
%gf=load i8*,i8**%H,align 8
%gg=bitcast i8*%gc to i8**
store i8*%gf,i8**%gg,align 8
%gh=load i8*,i8**%I,align 8
%gi=getelementptr inbounds i8,i8*%gc,i64 8
%gj=bitcast i8*%gi to i8**
store i8*%gh,i8**%gj,align 8
%gk=load i8*,i8**%G,align 8
%gl=getelementptr inbounds i8,i8*%gc,i64 16
%gm=bitcast i8*%gl to i8**
store i8*%gk,i8**%gm,align 8
%gn=getelementptr inbounds i8,i8*%gc,i64 24
%go=bitcast i8*%gn to i32*
store i32 7,i32*%go,align 4
%gp=bitcast i8**%A to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gp)
%gq=bitcast i8**%B to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gq)
%gr=bitcast i8**%C to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gr)
%gs=bitcast i8**%D to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gs)
%gt=bitcast i8**%E to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%gt)
call void@llvm.gcroot(i8**%A,i8*null)#0
call void@llvm.gcroot(i8**%B,i8*null)#0
call void@llvm.gcroot(i8**%C,i8*null)#0
call void@llvm.gcroot(i8**%D,i8*null)#0
call void@llvm.gcroot(i8**%E,i8*null)#0
store i8*%gc,i8**%A,align 8
%gu=load atomic i32,i32*@sml_check_flag unordered,align 4
%gv=icmp eq i32%gu,0
br i1%gv,label%gG,label%gw
gw:
call void@sml_check(i32 inreg%gu)
%gx=load i8*,i8**%A,align 8
%gy=bitcast i8*%gx to i8**
%gz=load i8*,i8**%gy,align 8
%gA=getelementptr inbounds i8,i8*%gx,i64 8
%gB=bitcast i8*%gA to i8**
%gC=load i8*,i8**%gB,align 8
%gD=getelementptr inbounds i8,i8*%gx,i64 16
%gE=bitcast i8*%gD to i8**
%gF=load i8*,i8**%gE,align 8
br label%gG
gG:
%gH=phi i8*[%gF,%gw],[%gk,%f8]
%gI=phi i8*[%gC,%gw],[%gh,%f8]
%gJ=phi i8*[%gz,%gw],[%gf,%f8]
store i8*%gJ,i8**%A,align 8
store i8*%gI,i8**%B,align 8
store i8*%gH,i8**%C,align 8
%gK=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fK,i64 0,i32 2)to i8*))
%gL=getelementptr inbounds i8,i8*%gK,i64 16
%gM=bitcast i8*%gL to i8*(i8*,i8*)**
%gN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gM,align 8
%gO=bitcast i8*%gK to i8**
%gP=load i8*,i8**%gO,align 8
store i8*%gP,i8**%D,align 8
%gQ=call i8*@sml_alloc(i32 inreg 20)#0
%gR=getelementptr inbounds i8,i8*%gQ,i64 -4
%gS=bitcast i8*%gR to i32*
store i32 1342177296,i32*%gS,align 4
store i8*%gQ,i8**%E,align 8
%gT=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%gU=bitcast i8*%gQ to i8**
store i8*%gT,i8**%gU,align 8
%gV=getelementptr inbounds i8,i8*%gQ,i64 8
%gW=bitcast i8*%gV to i8**
store i8*null,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gQ,i64 16
%gY=bitcast i8*%gX to i32*
store i32 3,i32*%gY,align 4
%gZ=call i8*@sml_alloc(i32 inreg 20)#0
%g0=getelementptr inbounds i8,i8*%gZ,i64 -4
%g1=bitcast i8*%g0 to i32*
store i32 1342177296,i32*%g1,align 4
store i8*%gZ,i8**%C,align 8
%g2=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%g3=bitcast i8*%gZ to i8**
store i8*%g2,i8**%g3,align 8
%g4=load i8*,i8**%E,align 8
store i8*null,i8**%E,align 8
%g5=getelementptr inbounds i8,i8*%gZ,i64 8
%g6=bitcast i8*%g5 to i8**
store i8*%g4,i8**%g6,align 8
%g7=getelementptr inbounds i8,i8*%gZ,i64 16
%g8=bitcast i8*%g7 to i32*
store i32 3,i32*%g8,align 4
%g9=call i8*@sml_alloc(i32 inreg 20)#0
%ha=getelementptr inbounds i8,i8*%g9,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177296,i32*%hb,align 4
%hc=load i8*,i8**%A,align 8
%hd=bitcast i8*%g9 to i8**
store i8*%hc,i8**%hd,align 8
%he=load i8*,i8**%C,align 8
%hf=getelementptr inbounds i8,i8*%g9,i64 8
%hg=bitcast i8*%hf to i8**
store i8*%he,i8**%hg,align 8
%hh=getelementptr inbounds i8,i8*%g9,i64 16
%hi=bitcast i8*%hh to i32*
store i32 3,i32*%hi,align 4
%hj=load i8*,i8**%D,align 8
%hk=tail call fastcc i8*%gN(i8*inreg%hj,i8*inreg%g9)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gp)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gq)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gr)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gs)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%gt)
ret i8*%hk
hl:
store i8*null,i8**%I,align 8
%hm=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%hm,i8**%I,align 8
%hn=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%ho=call fastcc i8*@_SMLLN12ElaborateSQL10readResultE_2435(i8*inreg%hn)
store i8*%ho,i8**%G,align 8
%hp=call i8*@sml_alloc(i32 inreg 28)#0
%hq=getelementptr inbounds i8,i8*%hp,i64 -4
%hr=bitcast i8*%hq to i32*
store i32 1342177304,i32*%hr,align 4
%hs=load i8*,i8**%H,align 8
%ht=bitcast i8*%hp to i8**
store i8*%hs,i8**%ht,align 8
%hu=load i8*,i8**%I,align 8
%hv=getelementptr inbounds i8,i8*%hp,i64 8
%hw=bitcast i8*%hv to i8**
store i8*%hu,i8**%hw,align 8
%hx=load i8*,i8**%G,align 8
%hy=getelementptr inbounds i8,i8*%hp,i64 16
%hz=bitcast i8*%hy to i8**
store i8*%hx,i8**%hz,align 8
%hA=getelementptr inbounds i8,i8*%hp,i64 24
%hB=bitcast i8*%hA to i32*
store i32 7,i32*%hB,align 4
%hC=bitcast i8**%v to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hC)
%hD=bitcast i8**%w to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hD)
%hE=bitcast i8**%x to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hE)
%hF=bitcast i8**%y to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hF)
%hG=bitcast i8**%z to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hG)
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
store i8*%hp,i8**%v,align 8
%hH=load atomic i32,i32*@sml_check_flag unordered,align 4
%hI=icmp eq i32%hH,0
br i1%hI,label%hT,label%hJ
hJ:
call void@sml_check(i32 inreg%hH)
%hK=load i8*,i8**%v,align 8
%hL=bitcast i8*%hK to i8**
%hM=load i8*,i8**%hL,align 8
%hN=getelementptr inbounds i8,i8*%hK,i64 8
%hO=bitcast i8*%hN to i8**
%hP=load i8*,i8**%hO,align 8
%hQ=getelementptr inbounds i8,i8*%hK,i64 16
%hR=bitcast i8*%hQ to i8**
%hS=load i8*,i8**%hR,align 8
br label%hT
hT:
%hU=phi i8*[%hS,%hJ],[%hx,%hl]
%hV=phi i8*[%hP,%hJ],[%hu,%hl]
%hW=phi i8*[%hM,%hJ],[%hs,%hl]
store i8*%hW,i8**%v,align 8
store i8*%hV,i8**%w,align 8
store i8*%hU,i8**%x,align 8
%hX=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fH,i64 0,i32 2)to i8*))
%hY=getelementptr inbounds i8,i8*%hX,i64 16
%hZ=bitcast i8*%hY to i8*(i8*,i8*)**
%h0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hZ,align 8
%h1=bitcast i8*%hX to i8**
%h2=load i8*,i8**%h1,align 8
store i8*%h2,i8**%y,align 8
%h3=call i8*@sml_alloc(i32 inreg 20)#0
%h4=getelementptr inbounds i8,i8*%h3,i64 -4
%h5=bitcast i8*%h4 to i32*
store i32 1342177296,i32*%h5,align 4
store i8*%h3,i8**%z,align 8
%h6=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%h7=bitcast i8*%h3 to i8**
store i8*%h6,i8**%h7,align 8
%h8=getelementptr inbounds i8,i8*%h3,i64 8
%h9=bitcast i8*%h8 to i8**
store i8*null,i8**%h9,align 8
%ia=getelementptr inbounds i8,i8*%h3,i64 16
%ib=bitcast i8*%ia to i32*
store i32 3,i32*%ib,align 4
%ic=call i8*@sml_alloc(i32 inreg 20)#0
%id=getelementptr inbounds i8,i8*%ic,i64 -4
%ie=bitcast i8*%id to i32*
store i32 1342177296,i32*%ie,align 4
store i8*%ic,i8**%x,align 8
%if=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%ig=bitcast i8*%ic to i8**
store i8*%if,i8**%ig,align 8
%ih=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%ii=getelementptr inbounds i8,i8*%ic,i64 8
%ij=bitcast i8*%ii to i8**
store i8*%ih,i8**%ij,align 8
%ik=getelementptr inbounds i8,i8*%ic,i64 16
%il=bitcast i8*%ik to i32*
store i32 3,i32*%il,align 4
%im=call i8*@sml_alloc(i32 inreg 20)#0
%in=getelementptr inbounds i8,i8*%im,i64 -4
%io=bitcast i8*%in to i32*
store i32 1342177296,i32*%io,align 4
%ip=load i8*,i8**%v,align 8
%iq=bitcast i8*%im to i8**
store i8*%ip,i8**%iq,align 8
%ir=load i8*,i8**%x,align 8
%is=getelementptr inbounds i8,i8*%im,i64 8
%it=bitcast i8*%is to i8**
store i8*%ir,i8**%it,align 8
%iu=getelementptr inbounds i8,i8*%im,i64 16
%iv=bitcast i8*%iu to i32*
store i32 3,i32*%iv,align 4
%iw=load i8*,i8**%y,align 8
%ix=tail call fastcc i8*%h0(i8*inreg%iw,i8*inreg%im)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hC)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hD)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hF)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hG)
ret i8*%ix
iy:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%iz=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%iz,i8**%G,align 8
%iA=call i8*@sml_alloc(i32 inreg 20)#0
%iB=getelementptr inbounds i8,i8*%iA,i64 -4
%iC=bitcast i8*%iB to i32*
store i32 1342177296,i32*%iC,align 4
%iD=load i8*,i8**%H,align 8
%iE=bitcast i8*%iA to i8**
store i8*%iD,i8**%iE,align 8
%iF=load i8*,i8**%G,align 8
%iG=getelementptr inbounds i8,i8*%iA,i64 8
%iH=bitcast i8*%iG to i8**
store i8*%iF,i8**%iH,align 8
%iI=getelementptr inbounds i8,i8*%iA,i64 16
%iJ=bitcast i8*%iI to i32*
store i32 3,i32*%iJ,align 4
%iK=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iK)
%iL=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iL)
%iM=bitcast i8**%t to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iM)
%iN=bitcast i8**%u to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%iN)
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
store i8*%iA,i8**%r,align 8
%iO=load atomic i32,i32*@sml_check_flag unordered,align 4
%iP=icmp eq i32%iO,0
br i1%iP,label%iX,label%iQ
iQ:
call void@sml_check(i32 inreg%iO)
%iR=load i8*,i8**%r,align 8
%iS=bitcast i8*%iR to i8**
%iT=load i8*,i8**%iS,align 8
%iU=getelementptr inbounds i8,i8*%iR,i64 8
%iV=bitcast i8*%iU to i8**
%iW=load i8*,i8**%iV,align 8
br label%iX
iX:
%iY=phi i8*[%iW,%iQ],[%iF,%iy]
%iZ=phi i8*[%iT,%iQ],[%iD,%iy]
store i8*%iZ,i8**%r,align 8
store i8*%iY,i8**%s,align 8
%i0=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fE,i64 0,i32 2)to i8*))
%i1=getelementptr inbounds i8,i8*%i0,i64 16
%i2=bitcast i8*%i1 to i8*(i8*,i8*)**
%i3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i2,align 8
%i4=bitcast i8*%i0 to i8**
%i5=load i8*,i8**%i4,align 8
store i8*%i5,i8**%t,align 8
%i6=call i8*@sml_alloc(i32 inreg 20)#0
%i7=getelementptr inbounds i8,i8*%i6,i64 -4
%i8=bitcast i8*%i7 to i32*
store i32 1342177296,i32*%i8,align 4
store i8*%i6,i8**%u,align 8
%i9=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%ja=bitcast i8*%i6 to i8**
store i8*%i9,i8**%ja,align 8
%jb=getelementptr inbounds i8,i8*%i6,i64 8
%jc=bitcast i8*%jb to i8**
store i8*null,i8**%jc,align 8
%jd=getelementptr inbounds i8,i8*%i6,i64 16
%je=bitcast i8*%jd to i32*
store i32 3,i32*%je,align 4
%jf=call i8*@sml_alloc(i32 inreg 20)#0
%jg=getelementptr inbounds i8,i8*%jf,i64 -4
%jh=bitcast i8*%jg to i32*
store i32 1342177296,i32*%jh,align 4
%ji=load i8*,i8**%r,align 8
%jj=bitcast i8*%jf to i8**
store i8*%ji,i8**%jj,align 8
%jk=load i8*,i8**%u,align 8
%jl=getelementptr inbounds i8,i8*%jf,i64 8
%jm=bitcast i8*%jl to i8**
store i8*%jk,i8**%jm,align 8
%jn=getelementptr inbounds i8,i8*%jf,i64 16
%jo=bitcast i8*%jn to i32*
store i32 3,i32*%jo,align 4
%jp=load i8*,i8**%t,align 8
%jq=tail call fastcc i8*%i3(i8*inreg%jp,i8*inreg%jf)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iL)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iM)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%iN)
ret i8*%jq
jr:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%js=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%js,i8**%G,align 8
%jt=call i8*@sml_alloc(i32 inreg 20)#0
%ju=getelementptr inbounds i8,i8*%jt,i64 -4
%jv=bitcast i8*%ju to i32*
store i32 1342177296,i32*%jv,align 4
%jw=load i8*,i8**%H,align 8
%jx=bitcast i8*%jt to i8**
store i8*%jw,i8**%jx,align 8
%jy=load i8*,i8**%G,align 8
%jz=getelementptr inbounds i8,i8*%jt,i64 8
%jA=bitcast i8*%jz to i8**
store i8*%jy,i8**%jA,align 8
%jB=getelementptr inbounds i8,i8*%jt,i64 16
%jC=bitcast i8*%jB to i32*
store i32 3,i32*%jC,align 4
%jD=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jD)
%jE=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jE)
%jF=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jF)
%jG=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%jG)
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
store i8*%jt,i8**%n,align 8
%jH=load atomic i32,i32*@sml_check_flag unordered,align 4
%jI=icmp eq i32%jH,0
br i1%jI,label%jQ,label%jJ
jJ:
call void@sml_check(i32 inreg%jH)
%jK=load i8*,i8**%n,align 8
%jL=bitcast i8*%jK to i8**
%jM=load i8*,i8**%jL,align 8
%jN=getelementptr inbounds i8,i8*%jK,i64 8
%jO=bitcast i8*%jN to i8**
%jP=load i8*,i8**%jO,align 8
br label%jQ
jQ:
%jR=phi i8*[%jP,%jJ],[%jy,%jr]
%jS=phi i8*[%jM,%jJ],[%jw,%jr]
store i8*%jS,i8**%n,align 8
store i8*%jR,i8**%o,align 8
%jT=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fB,i64 0,i32 2)to i8*))
%jU=getelementptr inbounds i8,i8*%jT,i64 16
%jV=bitcast i8*%jU to i8*(i8*,i8*)**
%jW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jV,align 8
%jX=bitcast i8*%jT to i8**
%jY=load i8*,i8**%jX,align 8
store i8*%jY,i8**%p,align 8
%jZ=call i8*@sml_alloc(i32 inreg 20)#0
%j0=getelementptr inbounds i8,i8*%jZ,i64 -4
%j1=bitcast i8*%j0 to i32*
store i32 1342177296,i32*%j1,align 4
store i8*%jZ,i8**%q,align 8
%j2=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%j3=bitcast i8*%jZ to i8**
store i8*%j2,i8**%j3,align 8
%j4=getelementptr inbounds i8,i8*%jZ,i64 8
%j5=bitcast i8*%j4 to i8**
store i8*null,i8**%j5,align 8
%j6=getelementptr inbounds i8,i8*%jZ,i64 16
%j7=bitcast i8*%j6 to i32*
store i32 3,i32*%j7,align 4
%j8=call i8*@sml_alloc(i32 inreg 20)#0
%j9=getelementptr inbounds i8,i8*%j8,i64 -4
%ka=bitcast i8*%j9 to i32*
store i32 1342177296,i32*%ka,align 4
%kb=load i8*,i8**%n,align 8
%kc=bitcast i8*%j8 to i8**
store i8*%kb,i8**%kc,align 8
%kd=load i8*,i8**%q,align 8
%ke=getelementptr inbounds i8,i8*%j8,i64 8
%kf=bitcast i8*%ke to i8**
store i8*%kd,i8**%kf,align 8
%kg=getelementptr inbounds i8,i8*%j8,i64 16
%kh=bitcast i8*%kg to i32*
store i32 3,i32*%kh,align 4
%ki=load i8*,i8**%p,align 8
%kj=tail call fastcc i8*%jW(i8*inreg%ki,i8*inreg%j8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jD)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jF)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%jG)
ret i8*%kj
kk:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%kl=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%kl,i8**%G,align 8
%km=call i8*@sml_alloc(i32 inreg 20)#0
%kn=getelementptr inbounds i8,i8*%km,i64 -4
%ko=bitcast i8*%kn to i32*
store i32 1342177296,i32*%ko,align 4
%kp=load i8*,i8**%H,align 8
%kq=bitcast i8*%km to i8**
store i8*%kp,i8**%kq,align 8
%kr=load i8*,i8**%G,align 8
%ks=getelementptr inbounds i8,i8*%km,i64 8
%kt=bitcast i8*%ks to i8**
store i8*%kr,i8**%kt,align 8
%ku=getelementptr inbounds i8,i8*%km,i64 16
%kv=bitcast i8*%ku to i32*
store i32 3,i32*%kv,align 4
%kw=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kw)
%kx=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kx)
%ky=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ky)
%kz=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%kz)
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%km,i8**%j,align 8
%kA=load atomic i32,i32*@sml_check_flag unordered,align 4
%kB=icmp eq i32%kA,0
br i1%kB,label%kJ,label%kC
kC:
call void@sml_check(i32 inreg%kA)
%kD=load i8*,i8**%j,align 8
%kE=bitcast i8*%kD to i8**
%kF=load i8*,i8**%kE,align 8
%kG=getelementptr inbounds i8,i8*%kD,i64 8
%kH=bitcast i8*%kG to i8**
%kI=load i8*,i8**%kH,align 8
br label%kJ
kJ:
%kK=phi i8*[%kI,%kC],[%kr,%kk]
%kL=phi i8*[%kF,%kC],[%kp,%kk]
store i8*%kL,i8**%j,align 8
store i8*%kK,i8**%k,align 8
%kM=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fy,i64 0,i32 2)to i8*))
%kN=getelementptr inbounds i8,i8*%kM,i64 16
%kO=bitcast i8*%kN to i8*(i8*,i8*)**
%kP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kO,align 8
%kQ=bitcast i8*%kM to i8**
%kR=load i8*,i8**%kQ,align 8
store i8*%kR,i8**%l,align 8
%kS=call i8*@sml_alloc(i32 inreg 20)#0
%kT=getelementptr inbounds i8,i8*%kS,i64 -4
%kU=bitcast i8*%kT to i32*
store i32 1342177296,i32*%kU,align 4
store i8*%kS,i8**%m,align 8
%kV=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kW=bitcast i8*%kS to i8**
store i8*%kV,i8**%kW,align 8
%kX=getelementptr inbounds i8,i8*%kS,i64 8
%kY=bitcast i8*%kX to i8**
store i8*null,i8**%kY,align 8
%kZ=getelementptr inbounds i8,i8*%kS,i64 16
%k0=bitcast i8*%kZ to i32*
store i32 3,i32*%k0,align 4
%k1=call i8*@sml_alloc(i32 inreg 20)#0
%k2=getelementptr inbounds i8,i8*%k1,i64 -4
%k3=bitcast i8*%k2 to i32*
store i32 1342177296,i32*%k3,align 4
%k4=load i8*,i8**%j,align 8
%k5=bitcast i8*%k1 to i8**
store i8*%k4,i8**%k5,align 8
%k6=load i8*,i8**%m,align 8
%k7=getelementptr inbounds i8,i8*%k1,i64 8
%k8=bitcast i8*%k7 to i8**
store i8*%k6,i8**%k8,align 8
%k9=getelementptr inbounds i8,i8*%k1,i64 16
%la=bitcast i8*%k9 to i32*
store i32 3,i32*%la,align 4
%lb=load i8*,i8**%l,align 8
%lc=tail call fastcc i8*%kP(i8*inreg%lb,i8*inreg%k1)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kw)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kx)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ky)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%kz)
ret i8*%lc
ld:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%le=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%le,i8**%G,align 8
%lf=call i8*@sml_alloc(i32 inreg 20)#0
%lg=getelementptr inbounds i8,i8*%lf,i64 -4
%lh=bitcast i8*%lg to i32*
store i32 1342177296,i32*%lh,align 4
%li=load i8*,i8**%H,align 8
%lj=bitcast i8*%lf to i8**
store i8*%li,i8**%lj,align 8
%lk=load i8*,i8**%G,align 8
%ll=getelementptr inbounds i8,i8*%lf,i64 8
%lm=bitcast i8*%ll to i8**
store i8*%lk,i8**%lm,align 8
%ln=getelementptr inbounds i8,i8*%lf,i64 16
%lo=bitcast i8*%ln to i32*
store i32 3,i32*%lo,align 4
%lp=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%lp)
%lq=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%lq)
%lr=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%lr)
%ls=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ls)
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%lf,i8**%f,align 8
%lt=load atomic i32,i32*@sml_check_flag unordered,align 4
%lu=icmp eq i32%lt,0
br i1%lu,label%lC,label%lv
lv:
call void@sml_check(i32 inreg%lt)
%lw=load i8*,i8**%f,align 8
%lx=bitcast i8*%lw to i8**
%ly=load i8*,i8**%lx,align 8
%lz=getelementptr inbounds i8,i8*%lw,i64 8
%lA=bitcast i8*%lz to i8**
%lB=load i8*,i8**%lA,align 8
br label%lC
lC:
%lD=phi i8*[%lB,%lv],[%lk,%ld]
%lE=phi i8*[%ly,%lv],[%li,%ld]
store i8*%lE,i8**%f,align 8
store i8*%lD,i8**%g,align 8
%lF=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fv,i64 0,i32 2)to i8*))
%lG=getelementptr inbounds i8,i8*%lF,i64 16
%lH=bitcast i8*%lG to i8*(i8*,i8*)**
%lI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lH,align 8
%lJ=bitcast i8*%lF to i8**
%lK=load i8*,i8**%lJ,align 8
store i8*%lK,i8**%h,align 8
%lL=call i8*@sml_alloc(i32 inreg 20)#0
%lM=getelementptr inbounds i8,i8*%lL,i64 -4
%lN=bitcast i8*%lM to i32*
store i32 1342177296,i32*%lN,align 4
store i8*%lL,i8**%i,align 8
%lO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lP=bitcast i8*%lL to i8**
store i8*%lO,i8**%lP,align 8
%lQ=getelementptr inbounds i8,i8*%lL,i64 8
%lR=bitcast i8*%lQ to i8**
store i8*null,i8**%lR,align 8
%lS=getelementptr inbounds i8,i8*%lL,i64 16
%lT=bitcast i8*%lS to i32*
store i32 3,i32*%lT,align 4
%lU=call i8*@sml_alloc(i32 inreg 20)#0
%lV=getelementptr inbounds i8,i8*%lU,i64 -4
%lW=bitcast i8*%lV to i32*
store i32 1342177296,i32*%lW,align 4
%lX=load i8*,i8**%f,align 8
%lY=bitcast i8*%lU to i8**
store i8*%lX,i8**%lY,align 8
%lZ=load i8*,i8**%i,align 8
%l0=getelementptr inbounds i8,i8*%lU,i64 8
%l1=bitcast i8*%l0 to i8**
store i8*%lZ,i8**%l1,align 8
%l2=getelementptr inbounds i8,i8*%lU,i64 16
%l3=bitcast i8*%l2 to i32*
store i32 3,i32*%l3,align 4
%l4=load i8*,i8**%h,align 8
%l5=tail call fastcc i8*%lI(i8*inreg%l4,i8*inreg%lU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%lp)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%lq)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%lr)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ls)
ret i8*%l5
l6:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%l7=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%l7,i8**%G,align 8
%l8=call i8*@sml_alloc(i32 inreg 20)#0
%l9=getelementptr inbounds i8,i8*%l8,i64 -4
%ma=bitcast i8*%l9 to i32*
store i32 1342177296,i32*%ma,align 4
%mb=load i8*,i8**%H,align 8
%mc=bitcast i8*%l8 to i8**
store i8*%mb,i8**%mc,align 8
%md=load i8*,i8**%G,align 8
%me=getelementptr inbounds i8,i8*%l8,i64 8
%mf=bitcast i8*%me to i8**
store i8*%md,i8**%mf,align 8
%mg=getelementptr inbounds i8,i8*%l8,i64 16
%mh=bitcast i8*%mg to i32*
store i32 3,i32*%mh,align 4
%mi=bitcast i8**%b to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%mi)
%mj=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%mj)
%mk=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%mk)
%ml=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ml)
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%l8,i8**%b,align 8
%mm=load atomic i32,i32*@sml_check_flag unordered,align 4
%mn=icmp eq i32%mm,0
br i1%mn,label%mv,label%mo
mo:
call void@sml_check(i32 inreg%mm)
%mp=load i8*,i8**%b,align 8
%mq=bitcast i8*%mp to i8**
%mr=load i8*,i8**%mq,align 8
%ms=getelementptr inbounds i8,i8*%mp,i64 8
%mt=bitcast i8*%ms to i8**
%mu=load i8*,i8**%mt,align 8
br label%mv
mv:
%mw=phi i8*[%mu,%mo],[%md,%l6]
%mx=phi i8*[%mr,%mo],[%mb,%l6]
store i8*%mx,i8**%b,align 8
store i8*%mw,i8**%c,align 8
%my=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fs,i64 0,i32 2)to i8*))
%mz=getelementptr inbounds i8,i8*%my,i64 16
%mA=bitcast i8*%mz to i8*(i8*,i8*)**
%mB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mA,align 8
%mC=bitcast i8*%my to i8**
%mD=load i8*,i8**%mC,align 8
store i8*%mD,i8**%d,align 8
%mE=call i8*@sml_alloc(i32 inreg 20)#0
%mF=getelementptr inbounds i8,i8*%mE,i64 -4
%mG=bitcast i8*%mF to i32*
store i32 1342177296,i32*%mG,align 4
store i8*%mE,i8**%e,align 8
%mH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mI=bitcast i8*%mE to i8**
store i8*%mH,i8**%mI,align 8
%mJ=getelementptr inbounds i8,i8*%mE,i64 8
%mK=bitcast i8*%mJ to i8**
store i8*null,i8**%mK,align 8
%mL=getelementptr inbounds i8,i8*%mE,i64 16
%mM=bitcast i8*%mL to i32*
store i32 3,i32*%mM,align 4
%mN=call i8*@sml_alloc(i32 inreg 20)#0
%mO=getelementptr inbounds i8,i8*%mN,i64 -4
%mP=bitcast i8*%mO to i32*
store i32 1342177296,i32*%mP,align 4
%mQ=load i8*,i8**%b,align 8
%mR=bitcast i8*%mN to i8**
store i8*%mQ,i8**%mR,align 8
%mS=load i8*,i8**%e,align 8
%mT=getelementptr inbounds i8,i8*%mN,i64 8
%mU=bitcast i8*%mT to i8**
store i8*%mS,i8**%mU,align 8
%mV=getelementptr inbounds i8,i8*%mN,i64 16
%mW=bitcast i8*%mV to i32*
store i32 3,i32*%mW,align 4
%mX=load i8*,i8**%d,align 8
%mY=tail call fastcc i8*%mB(i8*inreg%mX,i8*inreg%mN)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%mi)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%mj)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%mk)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ml)
ret i8*%mY
mZ:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%m0=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%m0,i8**%G,align 8
%m1=call i8*@sml_alloc(i32 inreg 20)#0
%m2=getelementptr inbounds i8,i8*%m1,i64 -4
%m3=bitcast i8*%m2 to i32*
store i32 1342177296,i32*%m3,align 4
%m4=load i8*,i8**%H,align 8
%m5=bitcast i8*%m1 to i8**
store i8*%m4,i8**%m5,align 8
%m6=load i8*,i8**%G,align 8
%m7=getelementptr inbounds i8,i8*%m1,i64 8
%m8=bitcast i8*%m7 to i8**
store i8*%m6,i8**%m8,align 8
%m9=getelementptr inbounds i8,i8*%m1,i64 16
%na=bitcast i8*%m9 to i32*
store i32 3,i32*%na,align 4
%nb=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%m1)
ret i8*%nb
nc:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%nd=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%nd,i8**%G,align 8
%ne=call i8*@sml_alloc(i32 inreg 20)#0
%nf=getelementptr inbounds i8,i8*%ne,i64 -4
%ng=bitcast i8*%nf to i32*
store i32 1342177296,i32*%ng,align 4
%nh=load i8*,i8**%H,align 8
%ni=bitcast i8*%ne to i8**
store i8*%nh,i8**%ni,align 8
%nj=load i8*,i8**%G,align 8
%nk=getelementptr inbounds i8,i8*%ne,i64 8
%nl=bitcast i8*%nk to i8**
store i8*%nj,i8**%nl,align 8
%nm=getelementptr inbounds i8,i8*%ne,i64 16
%nn=bitcast i8*%nm to i32*
store i32 3,i32*%nn,align 4
%no=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%ne)
ret i8*%no
np:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%nq=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%nq,i8**%G,align 8
%nr=call i8*@sml_alloc(i32 inreg 20)#0
%ns=getelementptr inbounds i8,i8*%nr,i64 -4
%nt=bitcast i8*%ns to i32*
store i32 1342177296,i32*%nt,align 4
%nu=load i8*,i8**%H,align 8
%nv=bitcast i8*%nr to i8**
store i8*%nu,i8**%nv,align 8
%nw=load i8*,i8**%G,align 8
%nx=getelementptr inbounds i8,i8*%nr,i64 8
%ny=bitcast i8*%nx to i8**
store i8*%nw,i8**%ny,align 8
%nz=getelementptr inbounds i8,i8*%nr,i64 16
%nA=bitcast i8*%nz to i32*
store i32 3,i32*%nA,align 4
%nB=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%nr)
ret i8*%nB
nC:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%nD=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%nD,i8**%G,align 8
%nE=call i8*@sml_alloc(i32 inreg 20)#0
%nF=getelementptr inbounds i8,i8*%nE,i64 -4
%nG=bitcast i8*%nF to i32*
store i32 1342177296,i32*%nG,align 4
%nH=load i8*,i8**%H,align 8
%nI=bitcast i8*%nE to i8**
store i8*%nH,i8**%nI,align 8
%nJ=load i8*,i8**%G,align 8
%nK=getelementptr inbounds i8,i8*%nE,i64 8
%nL=bitcast i8*%nK to i8**
store i8*%nJ,i8**%nL,align 8
%nM=getelementptr inbounds i8,i8*%nE,i64 16
%nN=bitcast i8*%nM to i32*
store i32 3,i32*%nN,align 4
%nO=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%nE)
ret i8*%nO
nP:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%nQ=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%nQ,i8**%G,align 8
%nR=call i8*@sml_alloc(i32 inreg 20)#0
%nS=getelementptr inbounds i8,i8*%nR,i64 -4
%nT=bitcast i8*%nS to i32*
store i32 1342177296,i32*%nT,align 4
%nU=load i8*,i8**%H,align 8
%nV=bitcast i8*%nR to i8**
store i8*%nU,i8**%nV,align 8
%nW=load i8*,i8**%G,align 8
%nX=getelementptr inbounds i8,i8*%nR,i64 8
%nY=bitcast i8*%nX to i8**
store i8*%nW,i8**%nY,align 8
%nZ=getelementptr inbounds i8,i8*%nR,i64 16
%n0=bitcast i8*%nZ to i32*
store i32 3,i32*%n0,align 4
%n1=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%nR)
ret i8*%n1
n2:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%n3=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%n3,i8**%G,align 8
%n4=call i8*@sml_alloc(i32 inreg 20)#0
%n5=getelementptr inbounds i8,i8*%n4,i64 -4
%n6=bitcast i8*%n5 to i32*
store i32 1342177296,i32*%n6,align 4
%n7=load i8*,i8**%H,align 8
%n8=bitcast i8*%n4 to i8**
store i8*%n7,i8**%n8,align 8
%n9=load i8*,i8**%G,align 8
%oa=getelementptr inbounds i8,i8*%n4,i64 8
%ob=bitcast i8*%oa to i8**
store i8*%n9,i8**%ob,align 8
%oc=getelementptr inbounds i8,i8*%n4,i64 16
%od=bitcast i8*%oc to i32*
store i32 3,i32*%od,align 4
%oe=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%n4)
ret i8*%oe
of:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%og=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%og,i8**%G,align 8
%oh=call i8*@sml_alloc(i32 inreg 20)#0
%oi=getelementptr inbounds i8,i8*%oh,i64 -4
%oj=bitcast i8*%oi to i32*
store i32 1342177296,i32*%oj,align 4
%ok=load i8*,i8**%H,align 8
%ol=bitcast i8*%oh to i8**
store i8*%ok,i8**%ol,align 8
%om=load i8*,i8**%G,align 8
%on=getelementptr inbounds i8,i8*%oh,i64 8
%oo=bitcast i8*%on to i8**
store i8*%om,i8**%oo,align 8
%op=getelementptr inbounds i8,i8*%oh,i64 16
%oq=bitcast i8*%op to i32*
store i32 3,i32*%oq,align 4
%or=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%oh)
ret i8*%or
os:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%ot=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%ot,i8**%G,align 8
%ou=call i8*@sml_alloc(i32 inreg 20)#0
%ov=getelementptr inbounds i8,i8*%ou,i64 -4
%ow=bitcast i8*%ov to i32*
store i32 1342177296,i32*%ow,align 4
%ox=load i8*,i8**%H,align 8
%oy=bitcast i8*%ou to i8**
store i8*%ox,i8**%oy,align 8
%oz=load i8*,i8**%G,align 8
%oA=getelementptr inbounds i8,i8*%ou,i64 8
%oB=bitcast i8*%oA to i8**
store i8*%oz,i8**%oB,align 8
%oC=getelementptr inbounds i8,i8*%ou,i64 16
%oD=bitcast i8*%oC to i32*
store i32 3,i32*%oD,align 4
%oE=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%ou)
ret i8*%oE
oF:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%oG=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%oG,i8**%G,align 8
%oH=call i8*@sml_alloc(i32 inreg 20)#0
%oI=getelementptr inbounds i8,i8*%oH,i64 -4
%oJ=bitcast i8*%oI to i32*
store i32 1342177296,i32*%oJ,align 4
%oK=load i8*,i8**%H,align 8
%oL=bitcast i8*%oH to i8**
store i8*%oK,i8**%oL,align 8
%oM=load i8*,i8**%G,align 8
%oN=getelementptr inbounds i8,i8*%oH,i64 8
%oO=bitcast i8*%oN to i8**
store i8*%oM,i8**%oO,align 8
%oP=getelementptr inbounds i8,i8*%oH,i64 16
%oQ=bitcast i8*%oP to i32*
store i32 3,i32*%oQ,align 4
%oR=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%oH)
ret i8*%oR
oS:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%oT=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%oT,i8**%G,align 8
%oU=call i8*@sml_alloc(i32 inreg 20)#0
%oV=getelementptr inbounds i8,i8*%oU,i64 -4
%oW=bitcast i8*%oV to i32*
store i32 1342177296,i32*%oW,align 4
%oX=load i8*,i8**%H,align 8
%oY=bitcast i8*%oU to i8**
store i8*%oX,i8**%oY,align 8
%oZ=load i8*,i8**%G,align 8
%o0=getelementptr inbounds i8,i8*%oU,i64 8
%o1=bitcast i8*%o0 to i8**
store i8*%oZ,i8**%o1,align 8
%o2=getelementptr inbounds i8,i8*%oU,i64 16
%o3=bitcast i8*%o2 to i32*
store i32 3,i32*%o3,align 4
%o4=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%oU)
ret i8*%o4
o5:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%o6=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%o6,i8**%G,align 8
%o7=call i8*@sml_alloc(i32 inreg 20)#0
%o8=getelementptr inbounds i8,i8*%o7,i64 -4
%o9=bitcast i8*%o8 to i32*
store i32 1342177296,i32*%o9,align 4
%pa=load i8*,i8**%H,align 8
%pb=bitcast i8*%o7 to i8**
store i8*%pa,i8**%pb,align 8
%pc=load i8*,i8**%G,align 8
%pd=getelementptr inbounds i8,i8*%o7,i64 8
%pe=bitcast i8*%pd to i8**
store i8*%pc,i8**%pe,align 8
%pf=getelementptr inbounds i8,i8*%o7,i64 16
%pg=bitcast i8*%pf to i32*
store i32 3,i32*%pg,align 4
%ph=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%o7)
ret i8*%ph
pi:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%pj=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%pj,i8**%G,align 8
%pk=call i8*@sml_alloc(i32 inreg 20)#0
%pl=getelementptr inbounds i8,i8*%pk,i64 -4
%pm=bitcast i8*%pl to i32*
store i32 1342177296,i32*%pm,align 4
%pn=load i8*,i8**%H,align 8
%po=bitcast i8*%pk to i8**
store i8*%pn,i8**%po,align 8
%pp=load i8*,i8**%G,align 8
%pq=getelementptr inbounds i8,i8*%pk,i64 8
%pr=bitcast i8*%pq to i8**
store i8*%pp,i8**%pr,align 8
%ps=getelementptr inbounds i8,i8*%pk,i64 16
%pt=bitcast i8*%ps to i32*
store i32 3,i32*%pt,align 4
%pu=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%pk)
ret i8*%pu
pv:
store i8*null,i8**%H,align 8
store i8*null,i8**%I,align 8
%pw=getelementptr inbounds i8,i8*%V,i64 8
%px=bitcast i8*%pw to i8**
%py=load i8*,i8**%px,align 8
store i8*%py,i8**%G,align 8
%pz=getelementptr inbounds i8,i8*%py,i64 8
%pA=bitcast i8*%pz to i32*
%pB=load i32,i32*%pA,align 4
switch i32%pB,label%pC[
i32 2,label%p2
i32 9,label%p1
i32 3,label%p0
i32 6,label%pZ
i32 5,label%pY
i32 4,label%pX
i32 8,label%pW
i32 7,label%pV
i32 0,label%pU
i32 1,label%p3
]
pC:
call void@sml_matchcomp_bug()
%pD=load i8*,i8**@_SMLZ5Match,align 8
store i8*%pD,i8**%G,align 8
%pE=call i8*@sml_alloc(i32 inreg 20)#0
%pF=getelementptr inbounds i8,i8*%pE,i64 -4
%pG=bitcast i8*%pF to i32*
store i32 1342177296,i32*%pG,align 4
store i8*%pE,i8**%H,align 8
%pH=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%pI=bitcast i8*%pE to i8**
store i8*%pH,i8**%pI,align 8
%pJ=getelementptr inbounds i8,i8*%pE,i64 8
%pK=bitcast i8*%pJ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@iO,i64 0,i32 2,i64 0),i8**%pK,align 8
%pL=getelementptr inbounds i8,i8*%pE,i64 16
%pM=bitcast i8*%pL to i32*
store i32 3,i32*%pM,align 4
%pN=call i8*@sml_alloc(i32 inreg 60)#0
%pO=getelementptr inbounds i8,i8*%pN,i64 -4
%pP=bitcast i8*%pO to i32*
store i32 1342177336,i32*%pP,align 4
%pQ=getelementptr inbounds i8,i8*%pN,i64 56
%pR=bitcast i8*%pQ to i32*
store i32 1,i32*%pR,align 4
%pS=load i8*,i8**%H,align 8
%pT=bitcast i8*%pN to i8**
store i8*%pS,i8**%pT,align 8
call void@sml_raise(i8*inreg%pN)#1
unreachable
pU:
br label%p3
pV:
br label%p3
pW:
br label%p3
pX:
br label%p3
pY:
br label%p3
pZ:
br label%p3
p0:
br label%p3
p1:
br label%p3
p2:
br label%p3
p3:
%p4=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fN,i64 0,i32 2)to i8*),%pU],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fK,i64 0,i32 2)to i8*),%pV],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fH,i64 0,i32 2)to i8*),%pW],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fE,i64 0,i32 2)to i8*),%pX],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fB,i64 0,i32 2)to i8*),%pY],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fy,i64 0,i32 2)to i8*),%pZ],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fv,i64 0,i32 2)to i8*),%p0],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fs,i64 0,i32 2)to i8*),%p1],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fp,i64 0,i32 2)to i8*),%p2],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fQ,i64 0,i32 2)to i8*),%pv]
%p5=call fastcc i8*@_SMLLN12ElaborateSQL3ConE_1234(i8*inreg%p4)
%p6=getelementptr inbounds i8,i8*%p5,i64 16
%p7=bitcast i8*%p6 to i8*(i8*,i8*)**
%p8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p7,align 8
%p9=bitcast i8*%p5 to i8**
%qa=load i8*,i8**%p9,align 8
store i8*%qa,i8**%I,align 8
%qb=call i8*@sml_alloc(i32 inreg 12)#0
%qc=getelementptr inbounds i8,i8*%qb,i64 -4
%qd=bitcast i8*%qc to i32*
store i32 1342177288,i32*%qd,align 4
store i8*%qb,i8**%H,align 8
%qe=load i8*,i8**%G,align 8
store i8*null,i8**%G,align 8
%qf=bitcast i8*%qb to i8**
store i8*%qe,i8**%qf,align 8
%qg=getelementptr inbounds i8,i8*%qb,i64 8
%qh=bitcast i8*%qg to i32*
store i32 1,i32*%qh,align 4
%qi=call i8*@sml_alloc(i32 inreg 28)#0
%qj=getelementptr inbounds i8,i8*%qi,i64 -4
%qk=bitcast i8*%qj to i32*
store i32 1342177304,i32*%qk,align 4
store i8*%qi,i8**%G,align 8
%ql=load i8*,i8**%H,align 8
store i8*null,i8**%H,align 8
%qm=bitcast i8*%qi to i8**
store i8*%ql,i8**%qm,align 8
%qn=getelementptr inbounds i8,i8*%qi,i64 8
%qo=bitcast i8*%qn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2462 to void(...)*),void(...)**%qo,align 8
%qp=getelementptr inbounds i8,i8*%qi,i64 16
%qq=bitcast i8*%qp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10queryToExpE_2462 to void(...)*),void(...)**%qq,align 8
%qr=getelementptr inbounds i8,i8*%qi,i64 24
%qs=bitcast i8*%qr to i32*
store i32 -2147483647,i32*%qs,align 4
%qt=call i8*@sml_alloc(i32 inreg 20)#0
%qu=getelementptr inbounds i8,i8*%qt,i64 -4
%qv=bitcast i8*%qu to i32*
store i32 1342177296,i32*%qv,align 4
%qw=load i8*,i8**%G,align 8
%qx=bitcast i8*%qt to i8**
store i8*%qw,i8**%qx,align 8
%qy=getelementptr inbounds i8,i8*%qt,i64 8
%qz=bitcast i8*%qy to i8**
store i8*null,i8**%qz,align 8
%qA=getelementptr inbounds i8,i8*%qt,i64 16
%qB=bitcast i8*%qA to i32*
store i32 3,i32*%qB,align 4
store i8*null,i8**%H,align 8
%qC=call i8*@sml_alloc(i32 inreg 20)#0
%qD=getelementptr inbounds i8,i8*%qC,i64 -4
%qE=bitcast i8*%qD to i32*
store i32 1342177296,i32*%qE,align 4
%qF=load i8*,i8**%G,align 8
%qG=bitcast i8*%qC to i8**
store i8*%qF,i8**%qG,align 8
%qH=load i8*,i8**%H,align 8
%qI=getelementptr inbounds i8,i8*%qC,i64 8
%qJ=bitcast i8*%qI to i8**
store i8*%qH,i8**%qJ,align 8
%qK=getelementptr inbounds i8,i8*%qC,i64 16
%qL=bitcast i8*%qK to i32*
store i32 3,i32*%qL,align 4
%qM=load i8*,i8**%I,align 8
%qN=tail call fastcc i8*%p8(i8*inreg%qM,i8*inreg%qC)
ret i8*%qN
qO:
store i8*null,i8**%G,align 8
store i8*null,i8**%I,align 8
%qP=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%U)
store i8*%qP,i8**%G,align 8
%qQ=call i8*@sml_alloc(i32 inreg 20)#0
%qR=getelementptr inbounds i8,i8*%qQ,i64 -4
%qS=bitcast i8*%qR to i32*
store i32 1342177296,i32*%qS,align 4
%qT=load i8*,i8**%H,align 8
%qU=bitcast i8*%qQ to i8**
store i8*%qT,i8**%qU,align 8
%qV=load i8*,i8**%G,align 8
%qW=getelementptr inbounds i8,i8*%qQ,i64 8
%qX=bitcast i8*%qW to i8**
store i8*%qV,i8**%qX,align 8
%qY=getelementptr inbounds i8,i8*%qQ,i64 16
%qZ=bitcast i8*%qY to i32*
store i32 3,i32*%qZ,align 4
%q0=tail call fastcc i8*@_SMLLN12ElaborateSQL9Con__EXPtyE_1440(i8*inreg%qQ)
ret i8*%q0
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2479(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2481(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iJ,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%c,align 8
%C=call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=call fastcc i8*%m(i8*inreg%D,i8*inreg%C)
store i8*%E,i8**%d,align 8
%F=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*%I(i8*inreg%K,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iK,i64 0,i32 2)to i8*))
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8**%e to i8***
%S=load i8**,i8***%R,align 8
store i8*null,i8**%e,align 8
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%O(i8*inreg%Q,i8*inreg%T)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
ret i8*%ac
}
define internal fastcc i32@_SMLLN12ElaborateSQL12removeLabelsE_2484(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%a to i8**
%i=bitcast i8*%b to i8**
br label%o
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%j],[%h,%g]
%q=phi i8**[%l,%j],[%i,%g]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%p,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%t)
%E=tail call fastcc i32@_SMLFN4Bool3notE(i32 inreg%D)
ret i32%E
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2487(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8****
%d=load i8***,i8****%c,align 8
%e=load i8**,i8***%d,align 8
%f=load i8*,i8**%e,align 8
ret i8*%f
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2488(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8***
%d=load i8**,i8***%c,align 8
%e=load i8*,i8**%d,align 8
%f=getelementptr inbounds i8,i8*%e,i64 16
%g=bitcast i8*%f to i8**
%h=load i8*,i8**%g,align 8
ret i8*%h
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2489(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%y)
ret i8*%z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2490(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2487 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2487 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=call fastcc i8*@_SMLLN12ElaborateSQL5Case1E_1178(i8*inreg%x)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
store i8*%O,i8**%e,align 8
%R=load i8*,i8**%b,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2488 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2488 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=call fastcc i8*%L(i8*inreg%aq,i8*inreg%ag)
store i8*%ar,i8**%c,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%d,align 8
%av=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2489 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2489 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 24
%aM=bitcast i8*%aL to i32*
store i32 -2147483647,i32*%aM,align 4
ret i8*%aC
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2492(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iL,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8**%d to i8****
%C=load i8***,i8****%B,align 8
%D=load i8**,i8***%C,align 8
%E=load i8*,i8**%D,align 8
%F=tail call fastcc i8*%y(i8*inreg%A,i8*inreg%E)
ret i8*%F
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2493(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 12)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177288,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%h=bitcast i8*%d to i8**
store i8*%g,i8**%h,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i32*
store i32 1,i32*%j,align 4
%k=call i8*@sml_alloc(i32 inreg 28)#0
%l=getelementptr inbounds i8,i8*%k,i64 -4
%m=bitcast i8*%l to i32*
store i32 1342177304,i32*%m,align 4
%n=load i8*,i8**%c,align 8
%o=bitcast i8*%k to i8**
store i8*%n,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2492 to void(...)*),void(...)**%q,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8makeBindE_2492 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%k,i64 24
%u=bitcast i8*%t to i32*
store i32 -2147483647,i32*%u,align 4
ret i8*%k
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2495(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%d,align 8
%m=icmp eq i8*%k,null
br i1%m,label%n,label%A
n:
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
ret i8*%r
A:
%B=bitcast i8*%k to i8**
%C=load i8*,i8**%B,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%D,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*%J(i8*inreg%L,i8*inreg%C)
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%M,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%c,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabOptE_2495 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabOptE_2495 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2497(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLFN8ListPair5unzipE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%e,align 8
%p=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8**%d to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%s(i8*inreg%u,i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=call fastcc i8*%m(i8*inreg%G,i8*inreg%F)
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%L,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%H to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%O,i8*inreg%Q)
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%d,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%c,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
ret i8*%S
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabListE_2497 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8elabListE_2497 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2499(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=call fastcc i8*%j(i8*inreg%l,i8*inreg null)
%n=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%m)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%b,align 8
%u=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%cf
i32 0,label%J
]
r:
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iN,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%n,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%e,align 8
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=icmp eq i32%O,6
br i1%P,label%b0,label%Q
Q:
%R=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%R,i8**%c,align 8
%S=load i8*,i8**%e,align 8
%T=call fastcc i8*@_SMLLN12ElaborateSQL6getLocE_1476(i8*inreg%S)
store i8*%T,i8**%d,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%f,align 8
%X=load i8*,i8**%c,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%h,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 4
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=bitcast i8*%ad to i32*
store i32 2,i32*%ai,align 4
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
%ao=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ap=call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1585(i8*inreg%ao)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%as(i8*inreg%au,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iM,i64 0,i32 2)to i8*))
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
%aB=load i8*,i8**%d,align 8
%aC=call fastcc i8*%ay(i8*inreg%aA,i8*inreg%aB)
store i8*%aC,i8**%e,align 8
%aD=call i8*@sml_alloc(i32 inreg 28)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177304,i32*%aF,align 4
store i8*%aD,i8**%f,align 8
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aD,i64 24
%aP=bitcast i8*%aO to i32*
store i32 7,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
%aT=load i8*,i8**%f,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to i8**
store i8*null,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
store i8*%aT,i8**%e,align 8
store i8*null,i8**%f,align 8
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%h,align 8
%a2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=bitcast i8**%g to i8***
%ba=load i8**,i8***%a9,align 8
store i8*null,i8**%g,align 8
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%f,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%e,align 8
%bf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bc,i64 16
%bl=bitcast i8*%bk to i32*
store i32 3,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%f,align 8
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bm,i64 8
%bs=bitcast i8*%br to i8**
store i8*null,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
%bv=call i8*@sml_alloc(i32 inreg 20)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
store i8*%bv,i8**%c,align 8
%by=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bz=bitcast i8*%bv to i8**
store i8*%by,i8**%bz,align 8
%bA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%bv,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bv,i64 16
%bE=bitcast i8*%bD to i32*
store i32 3,i32*%bE,align 4
%bF=call i8*@sml_alloc(i32 inreg 20)#0
%bG=getelementptr inbounds i8,i8*%bF,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 1342177296,i32*%bH,align 4
store i8*%bF,i8**%d,align 8
%bI=getelementptr inbounds i8,i8*%bF,i64 4
%bJ=bitcast i8*%bI to i32*
store i32 0,i32*%bJ,align 1
%bK=bitcast i8*%bF to i32*
store i32 16,i32*%bK,align 4
%bL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bM=getelementptr inbounds i8,i8*%bF,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bF,i64 16
%bP=bitcast i8*%bO to i32*
store i32 2,i32*%bP,align 4
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
%bT=load i8*,i8**%e,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%d,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bQ,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 3,i32*%bZ,align 4
ret i8*%bQ
b0:
%b1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b2=getelementptr inbounds i8,i8*%b1,i64 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%c,align 8
%b5=call i8*@sml_alloc(i32 inreg 20)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177296,i32*%b7,align 4
%b8=load i8*,i8**%c,align 8
%b9=bitcast i8*%b5 to i8**
store i8*%b8,i8**%b9,align 8
%ca=load i8*,i8**%e,align 8
%cb=getelementptr inbounds i8,i8*%b5,i64 8
%cc=bitcast i8*%cb to i8**
store i8*%ca,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b5,i64 16
%ce=bitcast i8*%cd to i32*
store i32 3,i32*%ce,align 4
ret i8*%b5
cf:
%cg=getelementptr inbounds i8,i8*%n,i64 8
%ch=bitcast i8*%cg to i8**
%ci=load i8*,i8**%ch,align 8
store i8*%ci,i8**%c,align 8
%cj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ck=getelementptr inbounds i8,i8*%cj,i64 8
%cl=bitcast i8*%ck to i8**
%cm=load i8*,i8**%cl,align 8
store i8*%cm,i8**%d,align 8
%cn=call i8*@sml_alloc(i32 inreg 20)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177296,i32*%cp,align 4
%cq=load i8*,i8**%d,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=load i8*,i8**%c,align 8
%ct=getelementptr inbounds i8,i8*%cn,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cn,i64 16
%cw=bitcast i8*%cv to i32*
store i32 3,i32*%cw,align 4
ret i8*%cn
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8getSpineE_2503(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%n,0
br i1%o,label%z,label%p
p:
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
ret i8*%q
z:
%A=getelementptr inbounds i8,i8*%k,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%b,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%c,align 8
%G=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%d,align 8
%M=bitcast i8**%b to i8***
%N=load i8**,i8***%M,align 8
store i8*null,i8**%b,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*@_SMLLN12ElaborateSQL8getSpineE_2503(i8*inreg%O)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%e,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*null,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=tail call fastcc i8*%J(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5embedE_2506(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%j,align 8
store i8*%b,i8**%e,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
store i8*null,i8**%e,align 8
%r=bitcast i8*%p to i32*
%s=load i32,i32*%r,align 4
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%h,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%i,align 8
%z=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%z,i8**%e,align 8
switch i32%s,label%A[
i32 2,label%aa
i32 9,label%Z
i32 3,label%Y
i32 6,label%X
i32 5,label%W
i32 4,label%V
i32 8,label%U
i32 7,label%T
i32 0,label%S
i32 1,label%ab
]
A:
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
call void@sml_matchcomp_bug()
%B=load i8*,i8**@_SMLZ5Match,align 8
store i8*%B,i8**%e,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%f,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@iO,i64 0,i32 2,i64 0),i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 60)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177336,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 56
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
call void@sml_raise(i8*inreg%L)#1
unreachable
S:
br label%ab
T:
br label%ab
U:
br label%ab
V:
br label%ab
W:
br label%ab
X:
br label%ab
Y:
br label%ab
Z:
br label%ab
aa:
br label%ab
ab:
%ac=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fN,i64 0,i32 2)to i8*),%S],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fK,i64 0,i32 2)to i8*),%T],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fH,i64 0,i32 2)to i8*),%U],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fE,i64 0,i32 2)to i8*),%V],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fB,i64 0,i32 2)to i8*),%W],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fy,i64 0,i32 2)to i8*),%X],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fv,i64 0,i32 2)to i8*),%Y],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fs,i64 0,i32 2)to i8*),%Z],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fp,i64 0,i32 2)to i8*),%aa],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fQ,i64 0,i32 2)to i8*),%o]
%ad=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ad)
%ae=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%ae)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%ac,i8**%c,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
store i8*%af,i8**%d,align 8
%ai=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%d,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6PatConE_1167 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL6PatConE_1167 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ad)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%ae)
%ax=load i8*,i8**%e,align 8
%ay=call fastcc i8*@_SMLLN12ElaborateSQL6PatConE_1167(i8*inreg%ap,i8*inreg%ax)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%i,align 8
%aF=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%f,align 8
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
store i8*%aG,i8**%g,align 8
%aJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%i,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aG,i64 24
%aS=bitcast i8*%aR to i32*
store i32 7,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%h,align 8
%aW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*null,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
%a2=bitcast i8**%j to i8***
%a3=load i8**,i8***%a2,align 8
store i8*null,i8**%j,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%f,align 8
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
store i8*%a5,i8**%g,align 8
%a8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 28)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177304,i32*%bh,align 4
store i8*%bf,i8**%f,align 8
%bi=getelementptr inbounds i8,i8*%bf,i64 12
%bj=bitcast i8*%bi to i32*
store i32 0,i32*%bj,align 1
%bk=load i8*,i8**%e,align 8
%bl=bitcast i8*%bf to i8**
store i8*null,i8**%e,align 8
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 8
%bn=bitcast i8*%bm to i32*
store i32%s,i32*%bn,align 4
%bo=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bp=getelementptr inbounds i8,i8*%bf,i64 16
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bf,i64 24
%bs=bitcast i8*%br to i32*
store i32 5,i32*%bs,align 4
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
store i8*%bt,i8**%e,align 8
%bw=getelementptr inbounds i8,i8*%bt,i64 4
%bx=bitcast i8*%bw to i32*
store i32 0,i32*%bx,align 1
%by=bitcast i8*%bt to i32*
store i32 8,i32*%by,align 4
%bz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bA=getelementptr inbounds i8,i8*%bt,i64 8
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bt,i64 16
%bD=bitcast i8*%bC to i32*
store i32 2,i32*%bD,align 4
%bE=call i8*@sml_alloc(i32 inreg 20)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177296,i32*%bG,align 4
%bH=load i8*,i8**%g,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%e,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bE,i64 16
%bN=bitcast i8*%bM to i32*
store i32 3,i32*%bN,align 4
ret i8*%bE
}
define internal fastcc i8*@_SMLL15representatives_2507(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=bitcast i8*%a to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,4
br i1%e,label%g,label%f
f:
ret i8*null
g:
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8***
%j=load i8**,i8***%i,align 8
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%b,align 8
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177288,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to i32*
store i32 1,i32*%r,align 4
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12setupGroupByE_2509(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8***
br label%r
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%h to i8****
%p=load i8***,i8****%o,align 8
%q=bitcast i8***%p to i8*
br label%r
r:
%s=phi i8*[%q,%m],[%a,%k]
%t=phi i8***[%p,%m],[%l,%k]
%u=phi i8*[%n,%m],[%b,%k]
%v=load i8**,i8***%t,align 8
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=bitcast i8***%t to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=bitcast i8*%u to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=getelementptr inbounds i8,i8*%u,i64 8
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%g,align 8
%H=getelementptr inbounds i8,i8*%s,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%N(i8*inreg%P,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iP,i64 0,i32 2)to i8*))
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=bitcast i8**%f to i8***
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
%Z=call fastcc i8*%T(i8*inreg%V,i8*inreg%Y)
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=call fastcc i8*@_SMLLN12ElaborateSQL9listToSetE_1464(i8*inreg%aa,i8*inreg%Z)
store i8*%ab,i8**%c,align 8
%ac=load i8*,i8**%h,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%h,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ar=call fastcc i8*@_SMLLN12ElaborateSQL12filterLabelsE_1472(i8*inreg%aq,i8*inreg%ag)
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%as)
store i8*%aC,i8**%c,align 8
%aD=call i8*@sml_alloc(i32 inreg 36)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177312,i32*%aF,align 4
%aG=load i8*,i8**%e,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%f,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=load i8*,i8**%g,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=load i8*,i8**%c,align 8
%aP=getelementptr inbounds i8,i8*%aD,i64 24
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aD,i64 32
%aS=bitcast i8*%aR to i32*
store i32 15,i32*%aS,align 4
ret i8*%aD
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12setupGroupByE_2510(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12setupGroupByE_2509 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12setupGroupByE_2509 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2540(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2543(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL23DuplicateSQLInsertLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iR,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2546(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2549(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL20DuplicateSQLSetLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iV,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2551(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8***
%j=load i8**,i8***%i,align 8
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8*,i8**%j,i64 1
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2553(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*null,i8**%c,align 8
%s=bitcast i8*%k to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%m,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%r,i8*inreg%t,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2554(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2555(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc void@_SMLL5error_2569(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 1,label%bY
i32 0,label%aU
i32 2,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i7,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%k,i64 16
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%b,align 8
%K=load i8*,i8**@_SMLZN14ElaborateError14EndWithInfixIDE,align 8
store i8*%K,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%k,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8*%N to i32*
%P=load i32,i32*%O,align 4
%Q=icmp eq i32%P,8
br i1%Q,label%al,label%R
R:
store i8*null,i8**%d,align 8
%S=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%S,i8**%b,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%c,align 8
%W=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i5,i64 0,i32 2,i64 0),i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@i6,i64 0,i32 2,i64 0),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 7,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 60)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177336,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 56
%ai=bitcast i8*%ah to i32*
store i32 1,i32*%ai,align 4
%aj=load i8*,i8**%c,align 8
%ak=bitcast i8*%ae to i8**
store i8*%aj,i8**%ak,align 8
call void@sml_raise(i8*inreg%ae)#1
unreachable
al:
%am=getelementptr inbounds i8,i8*%N,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%c,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*null,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
store i8*%ap,i8**%c,align 8
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i4,i64 0,i32 2,i64 0),i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ay,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=load i8*,i8**%b,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%aK)
ret void
aU:
%aV=getelementptr inbounds i8,i8*%k,i64 16
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%b,align 8
%aY=load i8*,i8**@_SMLZN14ElaborateError16BeginWithInfixIDE,align 8
store i8*%aY,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%k,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
%a2=bitcast i8*%a1 to i32*
%a3=load i32,i32*%a2,align 4
%a4=icmp eq i32%a3,8
br i1%a4,label%bp,label%a5
a5:
store i8*null,i8**%d,align 8
%a6=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%a6,i8**%b,align 8
%a7=call i8*@sml_alloc(i32 inreg 28)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177304,i32*%a9,align 4
store i8*%a7,i8**%c,align 8
%ba=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i5,i64 0,i32 2,i64 0),i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@i6,i64 0,i32 2,i64 0),i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a7,i64 24
%bh=bitcast i8*%bg to i32*
store i32 7,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 60)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177336,i32*%bk,align 4
%bl=getelementptr inbounds i8,i8*%bi,i64 56
%bm=bitcast i8*%bl to i32*
store i32 1,i32*%bm,align 4
%bn=load i8*,i8**%c,align 8
%bo=bitcast i8*%bi to i8**
store i8*%bn,i8**%bo,align 8
call void@sml_raise(i8*inreg%bi)#1
unreachable
bp:
%bq=getelementptr inbounds i8,i8*%a1,i64 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%c,align 8
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
%bw=load i8*,i8**%c,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bt,i64 8
%bz=bitcast i8*%by to i8**
store i8*null,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bt,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
store i8*%bt,i8**%c,align 8
%bC=call i8*@sml_alloc(i32 inreg 28)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177304,i32*%bE,align 4
store i8*%bC,i8**%e,align 8
%bF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i3,i64 0,i32 2,i64 0),i8**%bI,align 8
%bJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bK=getelementptr inbounds i8,i8*%bC,i64 16
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bC,i64 24
%bN=bitcast i8*%bM to i32*
store i32 7,i32*%bN,align 4
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%b,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bO,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%bO)
ret void
bY:
%bZ=getelementptr inbounds i8,i8*%k,i64 16
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%b,align 8
%b2=load i8*,i8**@_SMLZN14ElaborateError23InvalidFixityPrecedenceE,align 8
store i8*%b2,i8**%c,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
store i8*%b3,i8**%d,align 8
%b6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i2,i64 0,i32 2,i64 0),i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%b,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%d,align 8
%ci=getelementptr inbounds i8,i8*%cc,i64 8
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cc,i64 16
%cl=bitcast i8*%ck to i32*
store i32 3,i32*%cl,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%cc)
ret void
}
define internal fastcc i8*@_SMLL3src_2571(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,8
br i1%p,label%E,label%q
q:
store i8*null,i8**%e,align 8
%r=call fastcc i8*@_SMLLN12ElaborateSQL6expLocE_1474(i8*inreg%l)
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=bitcast i8*%s to i8**
store i8*null,i8**%v,align 8
%w=load i8*,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%s,i64 24
%D=bitcast i8*%C to i32*
store i32 7,i32*%D,align 4
ret i8*%s
E:
%F=getelementptr inbounds i8,i8*%l,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=call fastcc i8*@_SMLFN9SymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%f,align 8
%O=bitcast i8**%e to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%af=call fastcc i8*%L(i8*inreg%ae,i8*inreg%U)
%ag=icmp eq i8*%af,null
br i1%ag,label%ah,label%aw
ah:
%ai=load i8*,i8**%c,align 8
%aj=call fastcc i8*@_SMLLN12ElaborateSQL6expLocE_1474(i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=bitcast i8*%ak to i8**
store i8*null,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ak,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
ret i8*%ak
aw:
%ax=bitcast i8*%af to i8***
%ay=load i8**,i8***%ax,align 8
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%e,align 8
%aA=load i8*,i8**%c,align 8
%aB=call fastcc i8*@_SMLLN12ElaborateSQL6expLocE_1474(i8*inreg%aA)
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%e,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=load i8*,i8**%c,align 8
%aI=getelementptr inbounds i8,i8*%aC,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=load i8*,i8**%d,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aC,i64 24
%aO=bitcast i8*%aN to i32*
store i32 7,i32*%aO,align 4
ret i8*%aC
}
define internal fastcc i8*@_SMLL4exps_2572(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i32@_SMLLN12ElaborateSQL7elabExpE_2574(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i32**
%m=load i32*,i32**%l,align 8
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 1,label%I
i32 0,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i9,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=phi i32[1,%h],[0,%I]
ret i32%H
I:
br label%G
}
define internal fastcc i8*@_SMLL4exps_2576(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLL4exps_2577(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%r,i64 8
%v=bitcast i8*%u to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=getelementptr inbounds i8*,i8**%w,i64 1
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%q,align 8
store i8*%A,i8**%f,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*null,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%V=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%U,i8*inreg%K)
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%e,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
ret i8*%W
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2578(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2583(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 1,label%L
i32 0,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@je,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%m,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
ret i8*%K
L:
%M=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
store i8*%N,i8**%c,align 8
%Q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jc,i64 0,i32 2,i64 0),i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@jd,i64 0,i32 2,i64 0),i8**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 60)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177336,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%Y,i64 56
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
%ad=load i8*,i8**%c,align 8
%ae=bitcast i8*%Y to i8**
store i8*%ad,i8**%ae,align 8
call void@sml_raise(i8*inreg%Y)#1
unreachable
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2595(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2596(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2534(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2597(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL17elabOrderByClauseE_2527(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2598(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL23elabLimitOrOffsetClauseE_2529(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLL6labels_2602(i8*inreg%a)#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableNamesE_1480(i8*inreg%h)
ret i8*%j
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2604(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2607(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL21DuplicateSQLFromLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jr,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabTableListE_2609(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL9elabTableE_2524(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabTableListE_2612(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
store i8*null,i8**%c,align 8
%p=load i8*,i8**%n,align 8
%q=call fastcc i8*@_SMLLN12ElaborateSQL13elabTableListE_2609(i8*inreg%p,i8*inreg%o)
%r=getelementptr inbounds i8,i8*%q,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
ret i8*%t
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2620(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8***
%g=load i8**,i8***%f,align 8
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%b,align 8
%i=getelementptr inbounds i8*,i8**%g,i64 1
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%a,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2622(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%m,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%k,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%k to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%m to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%s,i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabOffsetE_2626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabOffsetE_2627(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%m,label%o
m:
%n=bitcast i8*%b to i8**
br label%s
o:
call void@sml_check(i32 inreg%k)
%p=bitcast i8**%c to i8***
%q=load i8**,i8***%p,align 8
%r=load i8*,i8**%d,align 8
br label%s
s:
%t=phi i8*[%r,%o],[%a,%m]
%u=phi i8**[%q,%o],[%n,%m]
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8*,i8**%u,i64 2
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=getelementptr inbounds i8*,i8**%u,i64 3
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%g,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%i,align 8
%D=bitcast i8*%t to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=getelementptr inbounds i8,i8*%t,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%j,align 8
%L=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%I,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2626 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2626 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
%ad=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ae=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%ad,i8*inreg%S)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%an)
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%d,align 8
%au=call i8*@sml_alloc(i32 inreg 36)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177312,i32*%aw,align 4
store i8*%au,i8**%h,align 8
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%au,i64 16
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aG=getelementptr inbounds i8,i8*%au,i64 24
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%au,i64 32
%aJ=bitcast i8*%aI to i32*
store i32 15,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=load i8*,i8**%c,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%h,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabLimitE_2628(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabLimitE_2629(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
store i8*null,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%o,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%m,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%m to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8*%o to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%u,i8*inreg%w,i8*inreg%y)
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%z,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%F,i8**%f,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%F,i64 16
%O=bitcast i8*%N to i32*
store i32 3,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%f,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
ret i8*%P
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2631(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8***
%j=load i8**,i8***%i,align 8
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%c,align 8
%l=getelementptr inbounds i8*,i8**%j,i64 1
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2633(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%b to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8*,i8**%p,i64 1
%s=bitcast i8**%r to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%g,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=call fastcc i8*%y(i8*inreg%L,i8*inreg%B)
store i8*%M,i8**%d,align 8
%N=load i8*,i8**%f,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*null,i8**%f,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%Q,i8*inreg%S,i8*inreg%Z)
store i8*%aa,i8**%c,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2634(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2637(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL23DuplicateSQLSelectLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jC,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2640(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL16elabHavingClauseE_2535(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2641(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8***
%g=load i8**,i8***%f,align 8
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%b,align 8
%i=getelementptr inbounds i8*,i8**%g,i64 1
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%a,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%e,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%n,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
ret i8*%x
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2643(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%k,i64 16
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
%v=call fastcc i8*@_SMLLN12ElaborateSQL13elabInsertRowE_2537(i8*inreg%p,i8*inreg%r,i32 inreg%u,i8*inreg%m)
ret i8*%v
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabInsertRowE_2645(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL15elabInsertValueE_2538(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15elabInsertValueE_2646(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%a,i8*inreg%b,i32 inreg%c,i8*inreg%d)#2 gc"smlsharp"{
l:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%e,align 8
br label%j
j:
%k=phi i8*[%b1,%bX],[%d,%l]
store i8*%k,i8**%f,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%f,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%k,%j]
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=bitcast i8*%w to i32*
%y=load i32,i32*%x,align 4
switch i32%y,label%cb[
i32 0,label%bJ
i32 29,label%z
]
z:
%A=getelementptr inbounds i8,i8*%w,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=icmp eq i32%G,0
br i1%H,label%I,label%cb
I:
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%f,align 8
%M=getelementptr inbounds i8,i8*%C,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%g,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=load i8*,i8**%g,align 8
%V=getelementptr inbounds i8,i8*%P,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%P,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=load i8*,i8**%e,align 8
%aa=load i8*,i8**%h,align 8
store i8*null,i8**%e,align 8
%ab=call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%aa,i8*inreg%Z,i8*inreg%P)
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=getelementptr inbounds i8,i8*%ab,i64 8
%af=bitcast i8*%ae to i8***
%ag=load i8**,i8***%af,align 8
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%e,align 8
%ai=getelementptr inbounds i8*,i8**%ag,i64 1
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%f,align 8
%ak=icmp eq i32%ad,%c
%al=load i8*,i8**%h,align 8
br i1%ak,label%am,label%aA
am:
%an=getelementptr inbounds i8,i8*%al,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%g,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=load i8*,i8**%g,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%f,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
br label%a7
aA:
%aB=getelementptr inbounds i8,i8*%al,i64 48
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%i,align 8
store i8*null,i8**%f,align 8
%aE=call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2477(i8*inreg%aj)
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=load i8*,i8**%g,align 8
%aL=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg%aK)
store i8*%aL,i8**%f,align 8
%aM=call i8*@sml_alloc(i32 inreg 28)#0
%aN=bitcast i8*%aM to i32*
%aO=getelementptr inbounds i8,i8*%aM,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177304,i32*%aP,align 4
%aQ=getelementptr inbounds i8,i8*%aM,i64 4
%aR=bitcast i8*%aQ to i32*
store i32 0,i32*%aR,align 1
store i32%c,i32*%aN,align 4
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aW=getelementptr inbounds i8,i8*%aM,i64 16
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aM,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 6,i32*%aZ,align 4
%a0=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a1=call fastcc i8*@_SMLLN12ElaborateSQL5embedE_2506(i8*inreg%a0,i8*inreg%aM)
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=getelementptr inbounds i8,i8*%a1,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
br label%a7
a7:
%a8=phi i8*[%av,%am],[%a6,%aA]
%a9=phi i8*[%at,%am],[%a3,%aA]
store i8*%a9,i8**%f,align 8
store i8*%a8,i8**%g,align 8
%ba=load i8*,i8**%h,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%h,align 8
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%i,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bn,i64 16
%bw=bitcast i8*%bv to i32*
store i32 3,i32*%bw,align 4
%bx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%by=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%bx,i8*inreg%bn)
store i8*%by,i8**%e,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=load i8*,i8**%e,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%g,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
ret i8*%bz
bJ:
%bK=getelementptr inbounds i8,i8*%w,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=bitcast i8*%bM to i8**
%bO=load i8*,i8**%bN,align 8
%bP=icmp eq i8*%bO,null
br i1%bP,label%cb,label%bQ
bQ:
%bR=bitcast i8*%bO to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%g,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
%bW=icmp eq i8*%bV,null
br i1%bW,label%bX,label%cb
bX:
%bY=getelementptr inbounds i8,i8*%bM,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%f,align 8
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
br label%j
cb:
%cc=bitcast i8*%r to i8**
%cd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ce=getelementptr inbounds i8,i8*%cd,i64 48
%cf=bitcast i8*%ce to i8**
%cg=load i8*,i8**%cf,align 8
store i8*%cg,i8**%g,align 8
%ch=bitcast i8**%e to i8***
%ci=load i8**,i8***%ch,align 8
store i8*null,i8**%e,align 8
%cj=load i8*,i8**%ci,align 8
%ck=getelementptr inbounds i8,i8*%cj,i64 16
%cl=bitcast i8*%ck to i8*(i8*,i8*)**
%cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cl,align 8
%cn=bitcast i8*%cj to i8**
%co=load i8*,i8**%cn,align 8
%cp=load i8*,i8**%cc,align 8
%cq=call fastcc i8*%cm(i8*inreg%co,i8*inreg%cp)
store i8*%cq,i8**%e,align 8
%cr=call i8*@sml_alloc(i32 inreg 28)#0
%cs=bitcast i8*%cr to i32*
%ct=getelementptr inbounds i8,i8*%cr,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177304,i32*%cu,align 4
%cv=getelementptr inbounds i8,i8*%cr,i64 4
%cw=bitcast i8*%cv to i32*
store i32 0,i32*%cw,align 1
store i32%c,i32*%cs,align 4
%cx=load i8*,i8**%e,align 8
%cy=getelementptr inbounds i8,i8*%cr,i64 8
%cz=bitcast i8*%cy to i8**
store i8*%cx,i8**%cz,align 8
%cA=load i8*,i8**%f,align 8
%cB=getelementptr inbounds i8,i8*%cr,i64 16
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cr,i64 24
%cE=bitcast i8*%cD to i32*
store i32 6,i32*%cE,align 4
%cF=load i8*,i8**%g,align 8
%cG=call fastcc i8*@_SMLLN12ElaborateSQL5embedE_2506(i8*inreg%cF,i8*inreg%cr)
ret i8*%cG
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
p:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%k,align 8
br label%n
n:
%o=phi i8*[%b,%p],[%aH,%aw]
%q=phi i8*[%c,%p],[%ax,%aw]
store i8*%o,i8**%d,align 8
store i8*%q,i8**%e,align 8
%r=load atomic i32,i32*@sml_check_flag unordered,align 4
%s=icmp eq i32%r,0
br i1%s,label%w,label%t
t:
call void@sml_check(i32 inreg%r)
%u=load i8*,i8**%e,align 8
%v=load i8*,i8**%d,align 8
br label%w
w:
%x=phi i8*[%v,%t],[%o,%n]
%y=phi i8*[%u,%t],[%q,%n]
store i8*%x,i8**%h,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%i,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
switch i32%F,label%G[
i32 3,label%qL
i32 10,label%qu
i32 12,label%qd
i32 4,label%pT
i32 15,label%pC
i32 9,label%pl
i32 8,label%o4
i32 7,label%oN
i32 5,label%jE
i32 6,label%h7
i32 14,label%ep
i32 2,label%cq
i32 0,label%bR
i32 1,label%bi
i32 11,label%aJ
i32 13,label%Y
]
G:
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%H=load i8*,i8**@_SMLZ5Match,align 8
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iY,i64 0,i32 2,i64 0),i8**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 60)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177336,i32*%T,align 4
%U=getelementptr inbounds i8,i8*%R,i64 56
%V=bitcast i8*%U to i32*
store i32 1,i32*%V,align 4
%W=load i8*,i8**%e,align 8
%X=bitcast i8*%R to i8**
store i8*%W,i8**%X,align 8
call void@sml_raise(i8*inreg%R)#1
unreachable
Y:
store i8*null,i8**%i,align 8
%Z=getelementptr inbounds i8,i8*%D,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=icmp eq i8*%ab,null
br i1%ac,label%q2,label%ad
ad:
%ae=bitcast i8*%ab to i8**
%af=load i8*,i8**%ae,align 8
%ag=bitcast i8*%af to i32*
%ah=load i32,i32*%ag,align 4
%ai=icmp eq i32%ah,0
br i1%ai,label%aj,label%q2
aj:
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=getelementptr inbounds i8,i8*%am,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%ab,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=icmp eq i8*%au,null
br i1%av,label%aw,label%aI
aw:
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
br label%n
aI:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
br label%q2
aJ:
store i8*null,i8**%h,align 8
%aK=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aL=getelementptr inbounds i8,i8*%aK,i64 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
store i8*%aN,i8**%d,align 8
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
store i8*%aO,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aO,i64 4
%aS=bitcast i8*%aR to i32*
store i32 0,i32*%aS,align 1
%aT=bitcast i8*%aO to i32*
store i32 24,i32*%aT,align 4
%aU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 16
%aY=bitcast i8*%aX to i32*
store i32 2,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%e,align 8
%a2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
%bc=bitcast i8*%a9 to i64*
store i64 0,i64*%bc,align 4
%bd=load i8*,i8**%e,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to i32*
store i32 2,i32*%bh,align 4
ret i8*%a9
bi:
store i8*null,i8**%h,align 8
%bj=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bk=getelementptr inbounds i8,i8*%bj,i64 8
%bl=bitcast i8*%bk to i8**
%bm=load i8*,i8**%bl,align 8
store i8*%bm,i8**%d,align 8
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
store i8*%bn,i8**%f,align 8
%bq=getelementptr inbounds i8,i8*%bn,i64 4
%br=bitcast i8*%bq to i32*
store i32 0,i32*%br,align 1
%bs=bitcast i8*%bn to i32*
store i32 5,i32*%bs,align 4
%bt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bu=getelementptr inbounds i8,i8*%bn,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i32*
store i32 2,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
store i8*%by,i8**%e,align 8
%bB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 20)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177296,i32*%bK,align 4
%bL=bitcast i8*%bI to i64*
store i64 0,i64*%bL,align 4
%bM=load i8*,i8**%e,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to i8**
store i8*%bM,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 16
%bQ=bitcast i8*%bP to i32*
store i32 2,i32*%bQ,align 4
ret i8*%bI
bR:
store i8*null,i8**%h,align 8
%bS=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bT=getelementptr inbounds i8,i8*%bS,i64 8
%bU=bitcast i8*%bT to i8**
%bV=load i8*,i8**%bU,align 8
store i8*%bV,i8**%d,align 8
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%f,align 8
%bZ=getelementptr inbounds i8,i8*%bW,i64 4
%b0=bitcast i8*%bZ to i32*
store i32 0,i32*%b0,align 1
%b1=bitcast i8*%bW to i32*
store i32 2,i32*%b1,align 4
%b2=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b3=getelementptr inbounds i8,i8*%bW,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 2,i32*%b6,align 4
%b7=call i8*@sml_alloc(i32 inreg 20)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177296,i32*%b9,align 4
store i8*%b7,i8**%e,align 8
%ca=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cb=bitcast i8*%b7 to i8**
store i8*%ca,i8**%cb,align 8
%cc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cd=getelementptr inbounds i8,i8*%b7,i64 8
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b7,i64 16
%cg=bitcast i8*%cf to i32*
store i32 3,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
%ck=bitcast i8*%ch to i64*
store i64 0,i64*%ck,align 4
%cl=load i8*,i8**%e,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 16
%cp=bitcast i8*%co to i32*
store i32 2,i32*%cp,align 4
ret i8*%ch
cq:
%cr=getelementptr inbounds i8,i8*%D,i64 8
%cs=bitcast i8*%cr to i8**
%ct=load i8*,i8**%cs,align 8
store i8*%ct,i8**%f,align 8
%cu=bitcast i8*%ct to i8**
%cv=load i8*,i8**%cu,align 8
%cw=load i8*,i8**%k,align 8
%cx=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%cw,i8*inreg%x,i8*inreg%cv)
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
store i8*%cz,i8**%d,align 8
%cA=getelementptr inbounds i8,i8*%cx,i64 8
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%e,align 8
%cD=load i8*,i8**%k,align 8
%cE=getelementptr inbounds i8,i8*%cD,i64 24
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
store i8*%cG,i8**%g,align 8
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
store i8*%cH,i8**%j,align 8
%cK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=load i8*,i8**%k,align 8
%cN=getelementptr inbounds i8,i8*%cH,i64 8
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cH,i64 16
%cQ=bitcast i8*%cP to i32*
store i32 3,i32*%cQ,align 4
%cR=call i8*@sml_alloc(i32 inreg 28)#0
%cS=getelementptr inbounds i8,i8*%cR,i64 -4
%cT=bitcast i8*%cS to i32*
store i32 1342177304,i32*%cT,align 4
%cU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cV=bitcast i8*%cR to i8**
store i8*%cU,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cR,i64 8
%cX=bitcast i8*%cW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2555 to void(...)*),void(...)**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cR,i64 16
%cZ=bitcast i8*%cY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2555 to void(...)*),void(...)**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cR,i64 24
%c1=bitcast i8*%c0 to i32*
store i32 -2147483647,i32*%c1,align 4
%c2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c3=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%c2,i8*inreg%cR)
%c4=getelementptr inbounds i8,i8*%c3,i64 16
%c5=bitcast i8*%c4 to i8*(i8*,i8*)**
%c6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c5,align 8
%c7=bitcast i8*%c3 to i8**
%c8=load i8*,i8**%c7,align 8
%c9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%da=getelementptr inbounds i8,i8*%c9,i64 8
%db=bitcast i8*%da to i8**
%dc=load i8*,i8**%db,align 8
%dd=call fastcc i8*%c6(i8*inreg%c8,i8*inreg%dc)
%de=bitcast i8*%dd to i8**
%df=load i8*,i8**%de,align 8
store i8*%df,i8**%f,align 8
%dg=getelementptr inbounds i8,i8*%dd,i64 8
%dh=bitcast i8*%dg to i8**
%di=load i8*,i8**%dh,align 8
store i8*%di,i8**%g,align 8
%dj=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dk=getelementptr inbounds i8,i8*%dj,i64 16
%dl=bitcast i8*%dk to i8**
%dm=load i8*,i8**%dl,align 8
store i8*%dm,i8**%h,align 8
%dn=call i8*@sml_alloc(i32 inreg 20)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177296,i32*%dp,align 4
store i8*%dn,i8**%j,align 8
%dq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dn,i64 8
%dt=bitcast i8*%ds to i8**
store i8*null,i8**%dt,align 8
%du=getelementptr inbounds i8,i8*%dn,i64 16
%dv=bitcast i8*%du to i32*
store i32 3,i32*%dv,align 4
%dw=call i8*@sml_alloc(i32 inreg 20)#0
%dx=getelementptr inbounds i8,i8*%dw,i64 -4
%dy=bitcast i8*%dx to i32*
store i32 1342177296,i32*%dy,align 4
%dz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dA=bitcast i8*%dw to i8**
store i8*%dz,i8**%dA,align 8
%dB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dC=getelementptr inbounds i8,i8*%dw,i64 8
%dD=bitcast i8*%dC to i8**
store i8*%dB,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dw,i64 16
%dF=bitcast i8*%dE to i32*
store i32 3,i32*%dF,align 4
%dG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dH=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%dG,i8*inreg%dw)
store i8*%dH,i8**%d,align 8
%dI=call i8*@sml_alloc(i32 inreg 28)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177304,i32*%dK,align 4
store i8*%dI,i8**%f,align 8
%dL=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dO=getelementptr inbounds i8,i8*%dI,i64 8
%dP=bitcast i8*%dO to i8**
store i8*%dN,i8**%dP,align 8
%dQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dR=getelementptr inbounds i8,i8*%dI,i64 16
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dI,i64 24
%dU=bitcast i8*%dT to i32*
store i32 7,i32*%dU,align 4
%dV=call i8*@sml_alloc(i32 inreg 20)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177296,i32*%dX,align 4
store i8*%dV,i8**%g,align 8
%dY=getelementptr inbounds i8,i8*%dV,i64 4
%dZ=bitcast i8*%dY to i32*
store i32 0,i32*%dZ,align 1
%d0=bitcast i8*%dV to i32*
store i32 7,i32*%d0,align 4
%d1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%d2=getelementptr inbounds i8,i8*%dV,i64 8
%d3=bitcast i8*%d2 to i8**
store i8*%d1,i8**%d3,align 8
%d4=getelementptr inbounds i8,i8*%dV,i64 16
%d5=bitcast i8*%d4 to i32*
store i32 2,i32*%d5,align 4
%d6=call i8*@sml_alloc(i32 inreg 20)#0
%d7=getelementptr inbounds i8,i8*%d6,i64 -4
%d8=bitcast i8*%d7 to i32*
store i32 1342177296,i32*%d8,align 4
store i8*%d6,i8**%e,align 8
%d9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ea=bitcast i8*%d6 to i8**
store i8*%d9,i8**%ea,align 8
%eb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ec=getelementptr inbounds i8,i8*%d6,i64 8
%ed=bitcast i8*%ec to i8**
store i8*%eb,i8**%ed,align 8
%ee=getelementptr inbounds i8,i8*%d6,i64 16
%ef=bitcast i8*%ee to i32*
store i32 3,i32*%ef,align 4
%eg=call i8*@sml_alloc(i32 inreg 20)#0
%eh=getelementptr inbounds i8,i8*%eg,i64 -4
%ei=bitcast i8*%eh to i32*
store i32 1342177296,i32*%ei,align 4
%ej=bitcast i8*%eg to i64*
store i64 0,i64*%ej,align 4
%ek=load i8*,i8**%e,align 8
%el=getelementptr inbounds i8,i8*%eg,i64 8
%em=bitcast i8*%el to i8**
store i8*%ek,i8**%em,align 8
%en=getelementptr inbounds i8,i8*%eg,i64 16
%eo=bitcast i8*%en to i32*
store i32 2,i32*%eo,align 4
ret i8*%eg
ep:
%eq=getelementptr inbounds i8,i8*%D,i64 8
%er=bitcast i8*%eq to i8**
%es=load i8*,i8**%er,align 8
store i8*%es,i8**%i,align 8
%et=getelementptr inbounds i8,i8*%es,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
%ew=getelementptr inbounds i8,i8*%ev,i64 8
%ex=bitcast i8*%ew to i8**
%ey=load i8*,i8**%ex,align 8
store i8*%ey,i8**%j,align 8
%ez=bitcast i8*%es to i8**
%eA=load i8*,i8**%ez,align 8
%eB=load i8*,i8**%k,align 8
%eC=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%eB,i8*inreg%x,i8*inreg%eA)
%eD=bitcast i8*%eC to i8**
%eE=load i8*,i8**%eD,align 8
store i8*%eE,i8**%d,align 8
%eF=getelementptr inbounds i8,i8*%eC,i64 8
%eG=bitcast i8*%eF to i8**
%eH=load i8*,i8**%eG,align 8
store i8*%eH,i8**%e,align 8
%eI=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%eJ=getelementptr inbounds i8,i8*%eI,i64 16
%eK=bitcast i8*%eJ to i8*(i8*,i8*)**
%eL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eK,align 8
%eM=bitcast i8*%eI to i8**
%eN=load i8*,i8**%eM,align 8
%eO=call fastcc i8*%eL(i8*inreg%eN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iU,i64 0,i32 2)to i8*))
%eP=getelementptr inbounds i8,i8*%eO,i64 16
%eQ=bitcast i8*%eP to i8*(i8*,i8*)**
%eR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eQ,align 8
%eS=bitcast i8*%eO to i8**
%eT=load i8*,i8**%eS,align 8
%eU=load i8*,i8**%i,align 8
%eV=getelementptr inbounds i8,i8*%eU,i64 8
%eW=bitcast i8*%eV to i8***
%eX=load i8**,i8***%eW,align 8
%eY=load i8*,i8**%eX,align 8
%eZ=call fastcc i8*%eR(i8*inreg%eT,i8*inreg%eY)
%e0=getelementptr inbounds i8,i8*%eZ,i64 16
%e1=bitcast i8*%e0 to i8*(i8*,i8*)**
%e2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e1,align 8
%e3=bitcast i8*%eZ to i8**
%e4=load i8*,i8**%e3,align 8
%e5=load i8*,i8**%j,align 8
%e6=call fastcc i8*%e2(i8*inreg%e4,i8*inreg%e5)
%e7=getelementptr inbounds i8,i8*%e6,i64 16
%e8=bitcast i8*%e7 to i8*(i8*,i8*)**
%e9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e8,align 8
%fa=bitcast i8*%e6 to i8**
%fb=load i8*,i8**%fa,align 8
%fc=call fastcc i8*%e9(i8*inreg%fb,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iW,i64 0,i32 2)to i8*))
%fd=load i8*,i8**%k,align 8
%fe=getelementptr inbounds i8,i8*%fd,i64 32
%ff=bitcast i8*%fe to i8**
%fg=load i8*,i8**%ff,align 8
%fh=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%fg,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iX,i64 0,i32 2)to i8*))
%fi=getelementptr inbounds i8,i8*%fh,i64 16
%fj=bitcast i8*%fi to i8*(i8*,i8*)**
%fk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fj,align 8
%fl=bitcast i8*%fh to i8**
%fm=load i8*,i8**%fl,align 8
store i8*%fm,i8**%g,align 8
%fn=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fo=getelementptr inbounds i8,i8*%fn,i64 16
%fp=bitcast i8*%fo to i8*(i8*,i8*)**
%fq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fp,align 8
%fr=bitcast i8*%fn to i8**
%fs=load i8*,i8**%fr,align 8
store i8*%fs,i8**%f,align 8
%ft=call i8*@sml_alloc(i32 inreg 20)#0
%fu=getelementptr inbounds i8,i8*%ft,i64 -4
%fv=bitcast i8*%fu to i32*
store i32 1342177296,i32*%fv,align 4
store i8*%ft,i8**%l,align 8
%fw=load i8*,i8**%h,align 8
%fx=bitcast i8*%ft to i8**
store i8*%fw,i8**%fx,align 8
%fy=load i8*,i8**%k,align 8
%fz=getelementptr inbounds i8,i8*%ft,i64 8
%fA=bitcast i8*%fz to i8**
store i8*%fy,i8**%fA,align 8
%fB=getelementptr inbounds i8,i8*%ft,i64 16
%fC=bitcast i8*%fB to i32*
store i32 3,i32*%fC,align 4
%fD=call i8*@sml_alloc(i32 inreg 28)#0
%fE=getelementptr inbounds i8,i8*%fD,i64 -4
%fF=bitcast i8*%fE to i32*
store i32 1342177304,i32*%fF,align 4
%fG=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%fH=bitcast i8*%fD to i8**
store i8*%fG,i8**%fH,align 8
%fI=getelementptr inbounds i8,i8*%fD,i64 8
%fJ=bitcast i8*%fI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2553 to void(...)*),void(...)**%fJ,align 8
%fK=getelementptr inbounds i8,i8*%fD,i64 16
%fL=bitcast i8*%fK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2553 to void(...)*),void(...)**%fL,align 8
%fM=getelementptr inbounds i8,i8*%fD,i64 24
%fN=bitcast i8*%fM to i32*
store i32 -2147483647,i32*%fN,align 4
%fO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fP=call fastcc i8*%fq(i8*inreg%fO,i8*inreg%fD)
%fQ=getelementptr inbounds i8,i8*%fP,i64 16
%fR=bitcast i8*%fQ to i8*(i8*,i8*)**
%fS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fR,align 8
%fT=bitcast i8*%fP to i8**
%fU=load i8*,i8**%fT,align 8
%fV=load i8*,i8**%i,align 8
%fW=getelementptr inbounds i8,i8*%fV,i64 8
%fX=bitcast i8*%fW to i8***
%fY=load i8**,i8***%fX,align 8
%fZ=load i8*,i8**%fY,align 8
%f0=call fastcc i8*%fS(i8*inreg%fU,i8*inreg%fZ)
%f1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%f2=call fastcc i8*%fk(i8*inreg%f1,i8*inreg%f0)
%f3=bitcast i8*%f2 to i8**
%f4=load i8*,i8**%f3,align 8
store i8*%f4,i8**%f,align 8
%f5=getelementptr inbounds i8,i8*%f2,i64 8
%f6=bitcast i8*%f5 to i8**
%f7=load i8*,i8**%f6,align 8
store i8*%f7,i8**%g,align 8
%f8=load i8*,i8**%k,align 8
%f9=getelementptr inbounds i8,i8*%f8,i64 24
%ga=bitcast i8*%f9 to i8**
%gb=load i8*,i8**%ga,align 8
store i8*%gb,i8**%l,align 8
%gc=call i8*@sml_alloc(i32 inreg 20)#0
%gd=getelementptr inbounds i8,i8*%gc,i64 -4
%ge=bitcast i8*%gd to i32*
store i32 1342177296,i32*%ge,align 4
store i8*%gc,i8**%m,align 8
%gf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gg=bitcast i8*%gc to i8**
store i8*%gf,i8**%gg,align 8
%gh=load i8*,i8**%k,align 8
%gi=getelementptr inbounds i8,i8*%gc,i64 8
%gj=bitcast i8*%gi to i8**
store i8*%gh,i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%gc,i64 16
%gl=bitcast i8*%gk to i32*
store i32 3,i32*%gl,align 4
%gm=call i8*@sml_alloc(i32 inreg 28)#0
%gn=getelementptr inbounds i8,i8*%gm,i64 -4
%go=bitcast i8*%gn to i32*
store i32 1342177304,i32*%go,align 4
%gp=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%gq=bitcast i8*%gm to i8**
store i8*%gp,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gm,i64 8
%gs=bitcast i8*%gr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2554 to void(...)*),void(...)**%gs,align 8
%gt=getelementptr inbounds i8,i8*%gm,i64 16
%gu=bitcast i8*%gt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL7elabSQLE_2554 to void(...)*),void(...)**%gu,align 8
%gv=getelementptr inbounds i8,i8*%gm,i64 24
%gw=bitcast i8*%gv to i32*
store i32 -2147483647,i32*%gw,align 4
%gx=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gy=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%gx,i8*inreg%gm)
%gz=getelementptr inbounds i8,i8*%gy,i64 16
%gA=bitcast i8*%gz to i8*(i8*,i8*)**
%gB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gA,align 8
%gC=bitcast i8*%gy to i8**
%gD=load i8*,i8**%gC,align 8
%gE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gF=getelementptr inbounds i8,i8*%gE,i64 16
%gG=bitcast i8*%gF to i8**
%gH=load i8*,i8**%gG,align 8
%gI=call fastcc i8*%gB(i8*inreg%gD,i8*inreg%gH)
%gJ=bitcast i8*%gI to i8**
%gK=load i8*,i8**%gJ,align 8
store i8*%gK,i8**%h,align 8
%gL=getelementptr inbounds i8,i8*%gI,i64 8
%gM=bitcast i8*%gL to i8**
%gN=load i8*,i8**%gM,align 8
store i8*%gN,i8**%i,align 8
%gO=load i8*,i8**%k,align 8
%gP=getelementptr inbounds i8,i8*%gO,i64 16
%gQ=bitcast i8*%gP to i8**
%gR=load i8*,i8**%gQ,align 8
store i8*%gR,i8**%k,align 8
%gS=call i8*@sml_alloc(i32 inreg 20)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177296,i32*%gU,align 4
store i8*%gS,i8**%l,align 8
%gV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gW=bitcast i8*%gS to i8**
store i8*%gV,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gS,i64 8
%gY=bitcast i8*%gX to i8**
store i8*null,i8**%gY,align 8
%gZ=getelementptr inbounds i8,i8*%gS,i64 16
%g0=bitcast i8*%gZ to i32*
store i32 3,i32*%g0,align 4
%g1=call i8*@sml_alloc(i32 inreg 20)#0
%g2=getelementptr inbounds i8,i8*%g1,i64 -4
%g3=bitcast i8*%g2 to i32*
store i32 1342177296,i32*%g3,align 4
store i8*%g1,i8**%h,align 8
%g4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%g5=bitcast i8*%g1 to i8**
store i8*%g4,i8**%g5,align 8
%g6=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%g7=getelementptr inbounds i8,i8*%g1,i64 8
%g8=bitcast i8*%g7 to i8**
store i8*%g6,i8**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g1,i64 16
%ha=bitcast i8*%g9 to i32*
store i32 3,i32*%ha,align 4
%hb=call i8*@sml_alloc(i32 inreg 20)#0
%hc=getelementptr inbounds i8,i8*%hb,i64 -4
%hd=bitcast i8*%hc to i32*
store i32 1342177296,i32*%hd,align 4
%he=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hf=bitcast i8*%hb to i8**
store i8*%he,i8**%hf,align 8
%hg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hh=getelementptr inbounds i8,i8*%hb,i64 8
%hi=bitcast i8*%hh to i8**
store i8*%hg,i8**%hi,align 8
%hj=getelementptr inbounds i8,i8*%hb,i64 16
%hk=bitcast i8*%hj to i32*
store i32 3,i32*%hk,align 4
%hl=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hm=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%hl,i8*inreg%hb)
store i8*%hm,i8**%d,align 8
%hn=call i8*@sml_alloc(i32 inreg 36)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177312,i32*%hp,align 4
store i8*%hn,i8**%f,align 8
%hq=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hr=bitcast i8*%hn to i8**
store i8*%hq,i8**%hr,align 8
%hs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ht=getelementptr inbounds i8,i8*%hn,i64 8
%hu=bitcast i8*%ht to i8**
store i8*%hs,i8**%hu,align 8
%hv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hw=getelementptr inbounds i8,i8*%hn,i64 16
%hx=bitcast i8*%hw to i8**
store i8*%hv,i8**%hx,align 8
%hy=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hz=getelementptr inbounds i8,i8*%hn,i64 24
%hA=bitcast i8*%hz to i8**
store i8*%hy,i8**%hA,align 8
%hB=getelementptr inbounds i8,i8*%hn,i64 32
%hC=bitcast i8*%hB to i32*
store i32 15,i32*%hC,align 4
%hD=call i8*@sml_alloc(i32 inreg 20)#0
%hE=getelementptr inbounds i8,i8*%hD,i64 -4
%hF=bitcast i8*%hE to i32*
store i32 1342177296,i32*%hF,align 4
store i8*%hD,i8**%g,align 8
%hG=getelementptr inbounds i8,i8*%hD,i64 4
%hH=bitcast i8*%hG to i32*
store i32 0,i32*%hH,align 1
%hI=bitcast i8*%hD to i32*
store i32 29,i32*%hI,align 4
%hJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hK=getelementptr inbounds i8,i8*%hD,i64 8
%hL=bitcast i8*%hK to i8**
store i8*%hJ,i8**%hL,align 8
%hM=getelementptr inbounds i8,i8*%hD,i64 16
%hN=bitcast i8*%hM to i32*
store i32 2,i32*%hN,align 4
%hO=call i8*@sml_alloc(i32 inreg 20)#0
%hP=getelementptr inbounds i8,i8*%hO,i64 -4
%hQ=bitcast i8*%hP to i32*
store i32 1342177296,i32*%hQ,align 4
store i8*%hO,i8**%e,align 8
%hR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hS=bitcast i8*%hO to i8**
store i8*%hR,i8**%hS,align 8
%hT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hU=getelementptr inbounds i8,i8*%hO,i64 8
%hV=bitcast i8*%hU to i8**
store i8*%hT,i8**%hV,align 8
%hW=getelementptr inbounds i8,i8*%hO,i64 16
%hX=bitcast i8*%hW to i32*
store i32 3,i32*%hX,align 4
%hY=call i8*@sml_alloc(i32 inreg 20)#0
%hZ=getelementptr inbounds i8,i8*%hY,i64 -4
%h0=bitcast i8*%hZ to i32*
store i32 1342177296,i32*%h0,align 4
%h1=bitcast i8*%hY to i64*
store i64 0,i64*%h1,align 4
%h2=load i8*,i8**%e,align 8
%h3=getelementptr inbounds i8,i8*%hY,i64 8
%h4=bitcast i8*%h3 to i8**
store i8*%h2,i8**%h4,align 8
%h5=getelementptr inbounds i8,i8*%hY,i64 16
%h6=bitcast i8*%h5 to i32*
store i32 2,i32*%h6,align 4
ret i8*%hY
h7:
%h8=getelementptr inbounds i8,i8*%D,i64 8
%h9=bitcast i8*%h8 to i8**
%ia=load i8*,i8**%h9,align 8
store i8*%ia,i8**%f,align 8
%ib=bitcast i8*%ia to i8**
%ic=load i8*,i8**%ib,align 8
%id=load i8*,i8**%k,align 8
%ie=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%id,i8*inreg%x,i8*inreg%ic)
%if=bitcast i8*%ie to i8**
%ig=load i8*,i8**%if,align 8
store i8*%ig,i8**%d,align 8
%ih=getelementptr inbounds i8,i8*%ie,i64 8
%ii=bitcast i8*%ih to i8**
%ij=load i8*,i8**%ii,align 8
store i8*%ij,i8**%e,align 8
%ik=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%il=getelementptr inbounds i8,i8*%ik,i64 8
%im=bitcast i8*%il to i8**
%in=load i8*,i8**%im,align 8
%io=load i8*,i8**%h,align 8
%ip=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
%iq=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%ip,i8*inreg%io,i8*inreg%in)
%ir=bitcast i8*%iq to i8**
%is=load i8*,i8**%ir,align 8
store i8*%is,i8**%f,align 8
%it=getelementptr inbounds i8,i8*%iq,i64 8
%iu=bitcast i8*%it to i8**
%iv=load i8*,i8**%iu,align 8
store i8*%iv,i8**%g,align 8
%iw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ix=getelementptr inbounds i8,i8*%iw,i64 16
%iy=bitcast i8*%ix to i8**
%iz=load i8*,i8**%iy,align 8
store i8*%iz,i8**%h,align 8
%iA=call i8*@sml_alloc(i32 inreg 20)#0
%iB=getelementptr inbounds i8,i8*%iA,i64 -4
%iC=bitcast i8*%iB to i32*
store i32 1342177296,i32*%iC,align 4
store i8*%iA,i8**%j,align 8
%iD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iE=bitcast i8*%iA to i8**
store i8*%iD,i8**%iE,align 8
%iF=getelementptr inbounds i8,i8*%iA,i64 8
%iG=bitcast i8*%iF to i8**
store i8*null,i8**%iG,align 8
%iH=getelementptr inbounds i8,i8*%iA,i64 16
%iI=bitcast i8*%iH to i32*
store i32 3,i32*%iI,align 4
%iJ=call i8*@sml_alloc(i32 inreg 20)#0
%iK=getelementptr inbounds i8,i8*%iJ,i64 -4
%iL=bitcast i8*%iK to i32*
store i32 1342177296,i32*%iL,align 4
%iM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iN=bitcast i8*%iJ to i8**
store i8*%iM,i8**%iN,align 8
%iO=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iP=getelementptr inbounds i8,i8*%iJ,i64 8
%iQ=bitcast i8*%iP to i8**
store i8*%iO,i8**%iQ,align 8
%iR=getelementptr inbounds i8,i8*%iJ,i64 16
%iS=bitcast i8*%iR to i32*
store i32 3,i32*%iS,align 4
%iT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iU=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%iT,i8*inreg%iJ)
store i8*%iU,i8**%d,align 8
%iV=call i8*@sml_alloc(i32 inreg 36)#0
%iW=getelementptr inbounds i8,i8*%iV,i64 -4
%iX=bitcast i8*%iW to i32*
store i32 1342177312,i32*%iX,align 4
store i8*%iV,i8**%f,align 8
%iY=bitcast i8*%iV to i8**
store i8*null,i8**%iY,align 8
%iZ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%i0=getelementptr inbounds i8,i8*%iV,i64 8
%i1=bitcast i8*%i0 to i8**
store i8*%iZ,i8**%i1,align 8
%i2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%i3=getelementptr inbounds i8,i8*%iV,i64 16
%i4=bitcast i8*%i3 to i8**
store i8*%i2,i8**%i4,align 8
%i5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%i6=getelementptr inbounds i8,i8*%iV,i64 24
%i7=bitcast i8*%i6 to i8**
store i8*%i5,i8**%i7,align 8
%i8=getelementptr inbounds i8,i8*%iV,i64 32
%i9=bitcast i8*%i8 to i32*
store i32 15,i32*%i9,align 4
%ja=call i8*@sml_alloc(i32 inreg 20)#0
%jb=getelementptr inbounds i8,i8*%ja,i64 -4
%jc=bitcast i8*%jb to i32*
store i32 1342177296,i32*%jc,align 4
store i8*%ja,i8**%g,align 8
%jd=getelementptr inbounds i8,i8*%ja,i64 4
%je=bitcast i8*%jd to i32*
store i32 0,i32*%je,align 1
%jf=bitcast i8*%ja to i32*
store i32 12,i32*%jf,align 4
%jg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jh=getelementptr inbounds i8,i8*%ja,i64 8
%ji=bitcast i8*%jh to i8**
store i8*%jg,i8**%ji,align 8
%jj=getelementptr inbounds i8,i8*%ja,i64 16
%jk=bitcast i8*%jj to i32*
store i32 2,i32*%jk,align 4
%jl=call i8*@sml_alloc(i32 inreg 20)#0
%jm=getelementptr inbounds i8,i8*%jl,i64 -4
%jn=bitcast i8*%jm to i32*
store i32 1342177296,i32*%jn,align 4
store i8*%jl,i8**%e,align 8
%jo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jp=bitcast i8*%jl to i8**
store i8*%jo,i8**%jp,align 8
%jq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jr=getelementptr inbounds i8,i8*%jl,i64 8
%js=bitcast i8*%jr to i8**
store i8*%jq,i8**%js,align 8
%jt=getelementptr inbounds i8,i8*%jl,i64 16
%ju=bitcast i8*%jt to i32*
store i32 3,i32*%ju,align 4
%jv=call i8*@sml_alloc(i32 inreg 20)#0
%jw=getelementptr inbounds i8,i8*%jv,i64 -4
%jx=bitcast i8*%jw to i32*
store i32 1342177296,i32*%jx,align 4
%jy=bitcast i8*%jv to i64*
store i64 0,i64*%jy,align 4
%jz=load i8*,i8**%e,align 8
%jA=getelementptr inbounds i8,i8*%jv,i64 8
%jB=bitcast i8*%jA to i8**
store i8*%jz,i8**%jB,align 8
%jC=getelementptr inbounds i8,i8*%jv,i64 16
%jD=bitcast i8*%jC to i32*
store i32 2,i32*%jD,align 4
ret i8*%jv
jE:
%jF=getelementptr inbounds i8,i8*%D,i64 8
%jG=bitcast i8*%jF to i8**
%jH=load i8*,i8**%jG,align 8
store i8*%jH,i8**%f,align 8
%jI=getelementptr inbounds i8,i8*%jH,i64 8
%jJ=bitcast i8*%jI to i8***
%jK=load i8**,i8***%jJ,align 8
%jL=load i8*,i8**%jK,align 8
store i8*%jL,i8**%i,align 8
%jM=getelementptr inbounds i8*,i8**%jK,i64 1
%jN=load i8*,i8**%jM,align 8
store i8*%jN,i8**%j,align 8
%jO=bitcast i8*%jH to i8**
%jP=load i8*,i8**%jO,align 8
%jQ=load i8*,i8**%k,align 8
%jR=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%jQ,i8*inreg%x,i8*inreg%jP)
%jS=bitcast i8*%jR to i8**
%jT=load i8*,i8**%jS,align 8
store i8*%jT,i8**%d,align 8
%jU=getelementptr inbounds i8,i8*%jR,i64 8
%jV=bitcast i8*%jU to i8**
%jW=load i8*,i8**%jV,align 8
store i8*%jW,i8**%e,align 8
%jX=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%jY=getelementptr inbounds i8,i8*%jX,i64 16
%jZ=bitcast i8*%jY to i8*(i8*,i8*)**
%j0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jZ,align 8
%j1=bitcast i8*%jX to i8**
%j2=load i8*,i8**%j1,align 8
%j3=call fastcc i8*%j0(i8*inreg%j2,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iQ,i64 0,i32 2)to i8*))
%j4=getelementptr inbounds i8,i8*%j3,i64 16
%j5=bitcast i8*%j4 to i8*(i8*,i8*)**
%j6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j5,align 8
%j7=bitcast i8*%j3 to i8**
%j8=load i8*,i8**%j7,align 8
%j9=load i8*,i8**%i,align 8
%ka=call fastcc i8*%j6(i8*inreg%j8,i8*inreg%j9)
%kb=getelementptr inbounds i8,i8*%ka,i64 16
%kc=bitcast i8*%kb to i8*(i8*,i8*)**
%kd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kc,align 8
%ke=bitcast i8*%ka to i8**
%kf=load i8*,i8**%ke,align 8
%kg=load i8*,i8**%j,align 8
%kh=call fastcc i8*%kd(i8*inreg%kf,i8*inreg%kg)
%ki=getelementptr inbounds i8,i8*%kh,i64 16
%kj=bitcast i8*%ki to i8*(i8*,i8*)**
%kk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kj,align 8
%kl=bitcast i8*%kh to i8**
%km=load i8*,i8**%kl,align 8
%kn=call fastcc i8*%kk(i8*inreg%km,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iS,i64 0,i32 2)to i8*))
%ko=load i8*,i8**%f,align 8
%kp=getelementptr inbounds i8,i8*%ko,i64 16
%kq=bitcast i8*%kp to i8**
%kr=load i8*,i8**%kq,align 8
%ks=bitcast i8*%kr to i32*
%kt=load i32,i32*%ks,align 4
switch i32%kt,label%ku[
i32 1,label%nh
i32 2,label%me
i32 0,label%kM
]
ku:
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%kv=load i8*,i8**@_SMLZ5Match,align 8
store i8*%kv,i8**%d,align 8
%kw=call i8*@sml_alloc(i32 inreg 20)#0
%kx=getelementptr inbounds i8,i8*%kw,i64 -4
%ky=bitcast i8*%kx to i32*
store i32 1342177296,i32*%ky,align 4
store i8*%kw,i8**%e,align 8
%kz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kA=bitcast i8*%kw to i8**
store i8*%kz,i8**%kA,align 8
%kB=getelementptr inbounds i8,i8*%kw,i64 8
%kC=bitcast i8*%kB to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iT,i64 0,i32 2,i64 0),i8**%kC,align 8
%kD=getelementptr inbounds i8,i8*%kw,i64 16
%kE=bitcast i8*%kD to i32*
store i32 3,i32*%kE,align 4
%kF=call i8*@sml_alloc(i32 inreg 60)#0
%kG=getelementptr inbounds i8,i8*%kF,i64 -4
%kH=bitcast i8*%kG to i32*
store i32 1342177336,i32*%kH,align 4
%kI=getelementptr inbounds i8,i8*%kF,i64 56
%kJ=bitcast i8*%kI to i32*
store i32 1,i32*%kJ,align 4
%kK=load i8*,i8**%e,align 8
%kL=bitcast i8*%kF to i8**
store i8*%kK,i8**%kL,align 8
call void@sml_raise(i8*inreg%kF)#1
unreachable
kM:
%kN=getelementptr inbounds i8,i8*%kr,i64 8
%kO=bitcast i8*%kN to i8**
%kP=load i8*,i8**%kO,align 8
%kQ=load i8*,i8**%h,align 8
%kR=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
%kS=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%kR,i8*inreg%kQ,i8*inreg%kP)
%kT=bitcast i8*%kS to i8**
%kU=load i8*,i8**%kT,align 8
store i8*%kU,i8**%f,align 8
%kV=getelementptr inbounds i8,i8*%kS,i64 8
%kW=bitcast i8*%kV to i8**
%kX=load i8*,i8**%kW,align 8
store i8*%kX,i8**%g,align 8
%kY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kZ=getelementptr inbounds i8,i8*%kY,i64 16
%k0=bitcast i8*%kZ to i8**
%k1=load i8*,i8**%k0,align 8
store i8*%k1,i8**%h,align 8
%k2=call i8*@sml_alloc(i32 inreg 20)#0
%k3=getelementptr inbounds i8,i8*%k2,i64 -4
%k4=bitcast i8*%k3 to i32*
store i32 1342177296,i32*%k4,align 4
store i8*%k2,i8**%k,align 8
%k5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%k6=bitcast i8*%k2 to i8**
store i8*%k5,i8**%k6,align 8
%k7=getelementptr inbounds i8,i8*%k2,i64 8
%k8=bitcast i8*%k7 to i8**
store i8*null,i8**%k8,align 8
%k9=getelementptr inbounds i8,i8*%k2,i64 16
%la=bitcast i8*%k9 to i32*
store i32 3,i32*%la,align 4
%lb=call i8*@sml_alloc(i32 inreg 20)#0
%lc=getelementptr inbounds i8,i8*%lb,i64 -4
%ld=bitcast i8*%lc to i32*
store i32 1342177296,i32*%ld,align 4
%le=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lf=bitcast i8*%lb to i8**
store i8*%le,i8**%lf,align 8
%lg=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%lh=getelementptr inbounds i8,i8*%lb,i64 8
%li=bitcast i8*%lh to i8**
store i8*%lg,i8**%li,align 8
%lj=getelementptr inbounds i8,i8*%lb,i64 16
%lk=bitcast i8*%lj to i32*
store i32 3,i32*%lk,align 4
%ll=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lm=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%ll,i8*inreg%lb)
store i8*%lm,i8**%d,align 8
%ln=call i8*@sml_alloc(i32 inreg 12)#0
%lo=getelementptr inbounds i8,i8*%ln,i64 -4
%lp=bitcast i8*%lo to i32*
store i32 1342177288,i32*%lp,align 4
store i8*%ln,i8**%h,align 8
%lq=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lr=bitcast i8*%ln to i8**
store i8*%lq,i8**%lr,align 8
%ls=getelementptr inbounds i8,i8*%ln,i64 8
%lt=bitcast i8*%ls to i32*
store i32 1,i32*%lt,align 4
%lu=call i8*@sml_alloc(i32 inreg 36)#0
%lv=getelementptr inbounds i8,i8*%lu,i64 -4
%lw=bitcast i8*%lv to i32*
store i32 1342177312,i32*%lw,align 4
store i8*%lu,i8**%f,align 8
%lx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ly=bitcast i8*%lu to i8**
store i8*%lx,i8**%ly,align 8
%lz=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lA=getelementptr inbounds i8,i8*%lu,i64 8
%lB=bitcast i8*%lA to i8**
store i8*%lz,i8**%lB,align 8
%lC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lD=getelementptr inbounds i8,i8*%lu,i64 16
%lE=bitcast i8*%lD to i8**
store i8*%lC,i8**%lE,align 8
%lF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lG=getelementptr inbounds i8,i8*%lu,i64 24
%lH=bitcast i8*%lG to i8**
store i8*%lF,i8**%lH,align 8
%lI=getelementptr inbounds i8,i8*%lu,i64 32
%lJ=bitcast i8*%lI to i32*
store i32 15,i32*%lJ,align 4
%lK=call i8*@sml_alloc(i32 inreg 20)#0
%lL=getelementptr inbounds i8,i8*%lK,i64 -4
%lM=bitcast i8*%lL to i32*
store i32 1342177296,i32*%lM,align 4
store i8*%lK,i8**%g,align 8
%lN=getelementptr inbounds i8,i8*%lK,i64 4
%lO=bitcast i8*%lN to i32*
store i32 0,i32*%lO,align 1
%lP=bitcast i8*%lK to i32*
store i32 12,i32*%lP,align 4
%lQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lR=getelementptr inbounds i8,i8*%lK,i64 8
%lS=bitcast i8*%lR to i8**
store i8*%lQ,i8**%lS,align 8
%lT=getelementptr inbounds i8,i8*%lK,i64 16
%lU=bitcast i8*%lT to i32*
store i32 2,i32*%lU,align 4
%lV=call i8*@sml_alloc(i32 inreg 20)#0
%lW=getelementptr inbounds i8,i8*%lV,i64 -4
%lX=bitcast i8*%lW to i32*
store i32 1342177296,i32*%lX,align 4
store i8*%lV,i8**%e,align 8
%lY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lZ=bitcast i8*%lV to i8**
store i8*%lY,i8**%lZ,align 8
%l0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%l1=getelementptr inbounds i8,i8*%lV,i64 8
%l2=bitcast i8*%l1 to i8**
store i8*%l0,i8**%l2,align 8
%l3=getelementptr inbounds i8,i8*%lV,i64 16
%l4=bitcast i8*%l3 to i32*
store i32 3,i32*%l4,align 4
%l5=call i8*@sml_alloc(i32 inreg 20)#0
%l6=getelementptr inbounds i8,i8*%l5,i64 -4
%l7=bitcast i8*%l6 to i32*
store i32 1342177296,i32*%l7,align 4
%l8=bitcast i8*%l5 to i64*
store i64 0,i64*%l8,align 4
%l9=load i8*,i8**%e,align 8
%ma=getelementptr inbounds i8,i8*%l5,i64 8
%mb=bitcast i8*%ma to i8**
store i8*%l9,i8**%mb,align 8
%mc=getelementptr inbounds i8,i8*%l5,i64 16
%md=bitcast i8*%mc to i32*
store i32 2,i32*%md,align 4
ret i8*%l5
me:
store i8*null,i8**%h,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
%mf=getelementptr inbounds i8,i8*%kr,i64 8
%mg=bitcast i8*%mf to i8**
%mh=load i8*,i8**%mg,align 8
%mi=bitcast i8*%mh to i8**
%mj=load i8*,i8**%mi,align 8
store i8*%mj,i8**%f,align 8
%mk=getelementptr inbounds i8,i8*%mh,i64 8
%ml=bitcast i8*%mk to i8**
%mm=load i8*,i8**%ml,align 8
store i8*%mm,i8**%g,align 8
%mn=call i8*@sml_alloc(i32 inreg 20)#0
%mo=getelementptr inbounds i8,i8*%mn,i64 -4
%mp=bitcast i8*%mo to i32*
store i32 1342177296,i32*%mp,align 4
store i8*%mn,i8**%h,align 8
%mq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mr=bitcast i8*%mn to i8**
store i8*%mq,i8**%mr,align 8
%ms=load i8*,i8**%g,align 8
%mt=getelementptr inbounds i8,i8*%mn,i64 8
%mu=bitcast i8*%mt to i8**
store i8*%ms,i8**%mu,align 8
%mv=getelementptr inbounds i8,i8*%mn,i64 16
%mw=bitcast i8*%mv to i32*
store i32 3,i32*%mw,align 4
%mx=call i8*@sml_alloc(i32 inreg 36)#0
%my=getelementptr inbounds i8,i8*%mx,i64 -4
%mz=bitcast i8*%my to i32*
store i32 1342177312,i32*%mz,align 4
store i8*%mx,i8**%f,align 8
%mA=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%mB=bitcast i8*%mx to i8**
store i8*%mA,i8**%mB,align 8
%mC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mD=getelementptr inbounds i8,i8*%mx,i64 8
%mE=bitcast i8*%mD to i8**
store i8*%mC,i8**%mE,align 8
%mF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mG=getelementptr inbounds i8,i8*%mx,i64 16
%mH=bitcast i8*%mG to i8**
store i8*%mF,i8**%mH,align 8
%mI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%mJ=getelementptr inbounds i8,i8*%mx,i64 24
%mK=bitcast i8*%mJ to i8**
store i8*%mI,i8**%mK,align 8
%mL=getelementptr inbounds i8,i8*%mx,i64 32
%mM=bitcast i8*%mL to i32*
store i32 15,i32*%mM,align 4
%mN=call i8*@sml_alloc(i32 inreg 20)#0
%mO=getelementptr inbounds i8,i8*%mN,i64 -4
%mP=bitcast i8*%mO to i32*
store i32 1342177296,i32*%mP,align 4
store i8*%mN,i8**%g,align 8
%mQ=getelementptr inbounds i8,i8*%mN,i64 4
%mR=bitcast i8*%mQ to i32*
store i32 0,i32*%mR,align 1
%mS=bitcast i8*%mN to i32*
store i32 14,i32*%mS,align 4
%mT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mU=getelementptr inbounds i8,i8*%mN,i64 8
%mV=bitcast i8*%mU to i8**
store i8*%mT,i8**%mV,align 8
%mW=getelementptr inbounds i8,i8*%mN,i64 16
%mX=bitcast i8*%mW to i32*
store i32 2,i32*%mX,align 4
%mY=call i8*@sml_alloc(i32 inreg 20)#0
%mZ=getelementptr inbounds i8,i8*%mY,i64 -4
%m0=bitcast i8*%mZ to i32*
store i32 1342177296,i32*%m0,align 4
store i8*%mY,i8**%e,align 8
%m1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%m2=bitcast i8*%mY to i8**
store i8*%m1,i8**%m2,align 8
%m3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%m4=getelementptr inbounds i8,i8*%mY,i64 8
%m5=bitcast i8*%m4 to i8**
store i8*%m3,i8**%m5,align 8
%m6=getelementptr inbounds i8,i8*%mY,i64 16
%m7=bitcast i8*%m6 to i32*
store i32 3,i32*%m7,align 4
%m8=call i8*@sml_alloc(i32 inreg 20)#0
%m9=getelementptr inbounds i8,i8*%m8,i64 -4
%na=bitcast i8*%m9 to i32*
store i32 1342177296,i32*%na,align 4
%nb=bitcast i8*%m8 to i64*
store i64 0,i64*%nb,align 4
%nc=load i8*,i8**%e,align 8
%nd=getelementptr inbounds i8,i8*%m8,i64 8
%ne=bitcast i8*%nd to i8**
store i8*%nc,i8**%ne,align 8
%nf=getelementptr inbounds i8,i8*%m8,i64 16
%ng=bitcast i8*%nf to i32*
store i32 2,i32*%ng,align 4
ret i8*%m8
nh:
%ni=getelementptr inbounds i8,i8*%kr,i64 8
%nj=bitcast i8*%ni to i8**
%nk=load i8*,i8**%nj,align 8
store i8*%nk,i8**%f,align 8
%nl=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%nm=getelementptr inbounds i8,i8*%nl,i64 16
%nn=bitcast i8*%nm to i8*(i8*,i8*)**
%no=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nn,align 8
%np=bitcast i8*%nl to i8**
%nq=load i8*,i8**%np,align 8
%nr=load i8*,i8**%i,align 8
%ns=call fastcc i8*%no(i8*inreg%nq,i8*inreg%nr)
%nt=bitcast i8*%ns to i32*
%nu=load i32,i32*%nt,align 4
%nv=load i8*,i8**%h,align 8
%nw=load i8*,i8**%f,align 8
%nx=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
%ny=call fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2536(i8*inreg%nx,i8*inreg%nv,i32 inreg%nu,i8*inreg%nw)
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
store i8*%nA,i8**%f,align 8
%nB=getelementptr inbounds i8,i8*%ny,i64 8
%nC=bitcast i8*%nB to i8**
%nD=load i8*,i8**%nC,align 8
store i8*%nD,i8**%g,align 8
%nE=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nF=getelementptr inbounds i8,i8*%nE,i64 16
%nG=bitcast i8*%nF to i8**
%nH=load i8*,i8**%nG,align 8
store i8*%nH,i8**%h,align 8
%nI=call i8*@sml_alloc(i32 inreg 20)#0
%nJ=getelementptr inbounds i8,i8*%nI,i64 -4
%nK=bitcast i8*%nJ to i32*
store i32 1342177296,i32*%nK,align 4
store i8*%nI,i8**%k,align 8
%nL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nM=bitcast i8*%nI to i8**
store i8*%nL,i8**%nM,align 8
%nN=getelementptr inbounds i8,i8*%nI,i64 8
%nO=bitcast i8*%nN to i8**
store i8*null,i8**%nO,align 8
%nP=getelementptr inbounds i8,i8*%nI,i64 16
%nQ=bitcast i8*%nP to i32*
store i32 3,i32*%nQ,align 4
%nR=call i8*@sml_alloc(i32 inreg 20)#0
%nS=getelementptr inbounds i8,i8*%nR,i64 -4
%nT=bitcast i8*%nS to i32*
store i32 1342177296,i32*%nT,align 4
%nU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nV=bitcast i8*%nR to i8**
store i8*%nU,i8**%nV,align 8
%nW=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nX=getelementptr inbounds i8,i8*%nR,i64 8
%nY=bitcast i8*%nX to i8**
store i8*%nW,i8**%nY,align 8
%nZ=getelementptr inbounds i8,i8*%nR,i64 16
%n0=bitcast i8*%nZ to i32*
store i32 3,i32*%n0,align 4
%n1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%n2=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%n1,i8*inreg%nR)
store i8*%n2,i8**%d,align 8
%n3=call i8*@sml_alloc(i32 inreg 36)#0
%n4=getelementptr inbounds i8,i8*%n3,i64 -4
%n5=bitcast i8*%n4 to i32*
store i32 1342177312,i32*%n5,align 4
store i8*%n3,i8**%f,align 8
%n6=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%n7=bitcast i8*%n3 to i8**
store i8*%n6,i8**%n7,align 8
%n8=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%n9=getelementptr inbounds i8,i8*%n3,i64 8
%oa=bitcast i8*%n9 to i8**
store i8*%n8,i8**%oa,align 8
%ob=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oc=getelementptr inbounds i8,i8*%n3,i64 16
%od=bitcast i8*%oc to i8**
store i8*%ob,i8**%od,align 8
%oe=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%of=getelementptr inbounds i8,i8*%n3,i64 24
%og=bitcast i8*%of to i8**
store i8*%oe,i8**%og,align 8
%oh=getelementptr inbounds i8,i8*%n3,i64 32
%oi=bitcast i8*%oh to i32*
store i32 15,i32*%oi,align 4
%oj=call i8*@sml_alloc(i32 inreg 20)#0
%ok=getelementptr inbounds i8,i8*%oj,i64 -4
%ol=bitcast i8*%ok to i32*
store i32 1342177296,i32*%ol,align 4
store i8*%oj,i8**%g,align 8
%om=getelementptr inbounds i8,i8*%oj,i64 4
%on=bitcast i8*%om to i32*
store i32 0,i32*%on,align 1
%oo=bitcast i8*%oj to i32*
store i32 13,i32*%oo,align 4
%op=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%oq=getelementptr inbounds i8,i8*%oj,i64 8
%or=bitcast i8*%oq to i8**
store i8*%op,i8**%or,align 8
%os=getelementptr inbounds i8,i8*%oj,i64 16
%ot=bitcast i8*%os to i32*
store i32 2,i32*%ot,align 4
%ou=call i8*@sml_alloc(i32 inreg 20)#0
%ov=getelementptr inbounds i8,i8*%ou,i64 -4
%ow=bitcast i8*%ov to i32*
store i32 1342177296,i32*%ow,align 4
store i8*%ou,i8**%e,align 8
%ox=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oy=bitcast i8*%ou to i8**
store i8*%ox,i8**%oy,align 8
%oz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%oA=getelementptr inbounds i8,i8*%ou,i64 8
%oB=bitcast i8*%oA to i8**
store i8*%oz,i8**%oB,align 8
%oC=getelementptr inbounds i8,i8*%ou,i64 16
%oD=bitcast i8*%oC to i32*
store i32 3,i32*%oD,align 4
%oE=call i8*@sml_alloc(i32 inreg 20)#0
%oF=getelementptr inbounds i8,i8*%oE,i64 -4
%oG=bitcast i8*%oF to i32*
store i32 1342177296,i32*%oG,align 4
%oH=bitcast i8*%oE to i64*
store i64 0,i64*%oH,align 4
%oI=load i8*,i8**%e,align 8
%oJ=getelementptr inbounds i8,i8*%oE,i64 8
%oK=bitcast i8*%oJ to i8**
store i8*%oI,i8**%oK,align 8
%oL=getelementptr inbounds i8,i8*%oE,i64 16
%oM=bitcast i8*%oL to i32*
store i32 2,i32*%oM,align 4
ret i8*%oE
oN:
store i8*null,i8**%i,align 8
%oO=getelementptr inbounds i8,i8*%D,i64 8
%oP=bitcast i8*%oO to i8**
%oQ=load i8*,i8**%oP,align 8
%oR=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%oS=call fastcc i8*@_SMLLN12ElaborateSQL9elabLimitE_2531(i8*inreg%oR,i8*inreg%x,i8*inreg%oQ)
store i8*%oS,i8**%d,align 8
%oT=call i8*@sml_alloc(i32 inreg 20)#0
%oU=bitcast i8*%oT to i32*
%oV=getelementptr inbounds i8,i8*%oT,i64 -4
%oW=bitcast i8*%oV to i32*
store i32 1342177296,i32*%oW,align 4
%oX=getelementptr inbounds i8,i8*%oT,i64 4
%oY=bitcast i8*%oX to i32*
store i32 0,i32*%oY,align 1
store i32 4,i32*%oU,align 4
%oZ=load i8*,i8**%d,align 8
%o0=getelementptr inbounds i8,i8*%oT,i64 8
%o1=bitcast i8*%o0 to i8**
store i8*%oZ,i8**%o1,align 8
%o2=getelementptr inbounds i8,i8*%oT,i64 16
%o3=bitcast i8*%o2 to i32*
store i32 2,i32*%o3,align 4
ret i8*%oT
o4:
store i8*null,i8**%i,align 8
%o5=getelementptr inbounds i8,i8*%D,i64 8
%o6=bitcast i8*%o5 to i8**
%o7=load i8*,i8**%o6,align 8
%o8=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%o9=call fastcc i8*@_SMLLN12ElaborateSQL10elabOffsetE_2530(i8*inreg%o8,i8*inreg%x,i8*inreg%o7)
store i8*%o9,i8**%d,align 8
%pa=call i8*@sml_alloc(i32 inreg 20)#0
%pb=bitcast i8*%pa to i32*
%pc=getelementptr inbounds i8,i8*%pa,i64 -4
%pd=bitcast i8*%pc to i32*
store i32 1342177296,i32*%pd,align 4
%pe=getelementptr inbounds i8,i8*%pa,i64 4
%pf=bitcast i8*%pe to i32*
store i32 0,i32*%pf,align 1
store i32 5,i32*%pb,align 4
%pg=load i8*,i8**%d,align 8
%ph=getelementptr inbounds i8,i8*%pa,i64 8
%pi=bitcast i8*%ph to i8**
store i8*%pg,i8**%pi,align 8
%pj=getelementptr inbounds i8,i8*%pa,i64 16
%pk=bitcast i8*%pj to i32*
store i32 2,i32*%pk,align 4
ret i8*%pa
pl:
store i8*null,i8**%i,align 8
%pm=getelementptr inbounds i8,i8*%D,i64 8
%pn=bitcast i8*%pm to i8**
%po=load i8*,i8**%pn,align 8
%pp=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%pq=call fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2528(i8*inreg%pp,i8*inreg%x,i8*inreg%po)
store i8*%pq,i8**%d,align 8
%pr=call i8*@sml_alloc(i32 inreg 20)#0
%ps=bitcast i8*%pr to i32*
%pt=getelementptr inbounds i8,i8*%pr,i64 -4
%pu=bitcast i8*%pt to i32*
store i32 1342177296,i32*%pu,align 4
%pv=getelementptr inbounds i8,i8*%pr,i64 4
%pw=bitcast i8*%pv to i32*
store i32 0,i32*%pw,align 1
store i32 6,i32*%ps,align 4
%px=load i8*,i8**%d,align 8
%py=getelementptr inbounds i8,i8*%pr,i64 8
%pz=bitcast i8*%py to i8**
store i8*%px,i8**%pz,align 8
%pA=getelementptr inbounds i8,i8*%pr,i64 16
%pB=bitcast i8*%pA to i32*
store i32 2,i32*%pB,align 4
ret i8*%pr
pC:
store i8*null,i8**%i,align 8
%pD=getelementptr inbounds i8,i8*%D,i64 8
%pE=bitcast i8*%pD to i8**
%pF=load i8*,i8**%pE,align 8
%pG=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%pH=call fastcc i8*@_SMLLN12ElaborateSQL9elabWhereE_2520(i8*inreg%pG,i8*inreg%x,i8*inreg%pF)
store i8*%pH,i8**%d,align 8
%pI=call i8*@sml_alloc(i32 inreg 20)#0
%pJ=bitcast i8*%pI to i32*
%pK=getelementptr inbounds i8,i8*%pI,i64 -4
%pL=bitcast i8*%pK to i32*
store i32 1342177296,i32*%pL,align 4
%pM=getelementptr inbounds i8,i8*%pI,i64 4
%pN=bitcast i8*%pM to i32*
store i32 0,i32*%pN,align 1
store i32 9,i32*%pJ,align 4
%pO=load i8*,i8**%d,align 8
%pP=getelementptr inbounds i8,i8*%pI,i64 8
%pQ=bitcast i8*%pP to i8**
store i8*%pO,i8**%pQ,align 8
%pR=getelementptr inbounds i8,i8*%pI,i64 16
%pS=bitcast i8*%pR to i32*
store i32 2,i32*%pS,align 4
ret i8*%pI
pT:
store i8*null,i8**%i,align 8
%pU=getelementptr inbounds i8,i8*%D,i64 8
%pV=bitcast i8*%pU to i8**
%pW=load i8*,i8**%pV,align 8
%pX=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%pY=call fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2522(i8*inreg%pX,i8*inreg%x,i8*inreg%pW)
%pZ=getelementptr inbounds i8,i8*%pY,i64 8
%p0=bitcast i8*%pZ to i8**
%p1=load i8*,i8**%p0,align 8
store i8*%p1,i8**%d,align 8
%p2=call i8*@sml_alloc(i32 inreg 20)#0
%p3=bitcast i8*%p2 to i32*
%p4=getelementptr inbounds i8,i8*%p2,i64 -4
%p5=bitcast i8*%p4 to i32*
store i32 1342177296,i32*%p5,align 4
%p6=getelementptr inbounds i8,i8*%p2,i64 4
%p7=bitcast i8*%p6 to i32*
store i32 0,i32*%p7,align 1
store i32 3,i32*%p3,align 4
%p8=load i8*,i8**%d,align 8
%p9=getelementptr inbounds i8,i8*%p2,i64 8
%qa=bitcast i8*%p9 to i8**
store i8*%p8,i8**%qa,align 8
%qb=getelementptr inbounds i8,i8*%p2,i64 16
%qc=bitcast i8*%qb to i32*
store i32 2,i32*%qc,align 4
ret i8*%p2
qd:
store i8*null,i8**%i,align 8
%qe=getelementptr inbounds i8,i8*%D,i64 8
%qf=bitcast i8*%qe to i8**
%qg=load i8*,i8**%qf,align 8
%qh=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%qi=call fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2533(i8*inreg%qh,i8*inreg%x,i8*inreg%qg)
store i8*%qi,i8**%d,align 8
%qj=call i8*@sml_alloc(i32 inreg 20)#0
%qk=bitcast i8*%qj to i32*
%ql=getelementptr inbounds i8,i8*%qj,i64 -4
%qm=bitcast i8*%ql to i32*
store i32 1342177296,i32*%qm,align 4
%qn=getelementptr inbounds i8,i8*%qj,i64 4
%qo=bitcast i8*%qn to i32*
store i32 0,i32*%qo,align 1
store i32 8,i32*%qk,align 4
%qp=load i8*,i8**%d,align 8
%qq=getelementptr inbounds i8,i8*%qj,i64 8
%qr=bitcast i8*%qq to i8**
store i8*%qp,i8**%qr,align 8
%qs=getelementptr inbounds i8,i8*%qj,i64 16
%qt=bitcast i8*%qs to i32*
store i32 2,i32*%qt,align 4
ret i8*%qj
qu:
store i8*null,i8**%i,align 8
%qv=getelementptr inbounds i8,i8*%D,i64 8
%qw=bitcast i8*%qv to i8**
%qx=load i8*,i8**%qw,align 8
%qy=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%qz=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%qy,i8*inreg%x,i8*inreg%qx)
store i8*%qz,i8**%d,align 8
%qA=call i8*@sml_alloc(i32 inreg 20)#0
%qB=bitcast i8*%qA to i32*
%qC=getelementptr inbounds i8,i8*%qA,i64 -4
%qD=bitcast i8*%qC to i32*
store i32 1342177296,i32*%qD,align 4
%qE=getelementptr inbounds i8,i8*%qA,i64 4
%qF=bitcast i8*%qE to i32*
store i32 0,i32*%qF,align 1
store i32 7,i32*%qB,align 4
%qG=load i8*,i8**%d,align 8
%qH=getelementptr inbounds i8,i8*%qA,i64 8
%qI=bitcast i8*%qH to i8**
store i8*%qG,i8**%qI,align 8
%qJ=getelementptr inbounds i8,i8*%qA,i64 16
%qK=bitcast i8*%qJ to i32*
store i32 2,i32*%qK,align 4
ret i8*%qA
qL:
store i8*null,i8**%i,align 8
%qM=getelementptr inbounds i8,i8*%D,i64 8
%qN=bitcast i8*%qM to i8**
%qO=load i8*,i8**%qN,align 8
%qP=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%qQ=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%qP,i8*inreg%x,i8*inreg%qO)
store i8*%qQ,i8**%d,align 8
%qR=call i8*@sml_alloc(i32 inreg 20)#0
%qS=bitcast i8*%qR to i32*
%qT=getelementptr inbounds i8,i8*%qR,i64 -4
%qU=bitcast i8*%qT to i32*
store i32 1342177296,i32*%qU,align 4
%qV=getelementptr inbounds i8,i8*%qR,i64 4
%qW=bitcast i8*%qV to i32*
store i32 0,i32*%qW,align 1
store i32 2,i32*%qS,align 4
%qX=load i8*,i8**%d,align 8
%qY=getelementptr inbounds i8,i8*%qR,i64 8
%qZ=bitcast i8*%qY to i8**
store i8*%qX,i8**%qZ,align 8
%q0=getelementptr inbounds i8,i8*%qR,i64 16
%q1=bitcast i8*%q0 to i32*
store i32 2,i32*%q1,align 4
ret i8*%qR
q2:
%q3=load i8*,i8**%k,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%k,align 8
%q4=call fastcc i8*@_SMLLN12ElaborateSQL7elabSeqE_2539(i8*inreg%q3,i8*inreg%x,i8*inreg%ab)
store i8*%q4,i8**%d,align 8
%q5=call i8*@sml_alloc(i32 inreg 20)#0
%q6=getelementptr inbounds i8,i8*%q5,i64 -4
%q7=bitcast i8*%q6 to i32*
store i32 1342177296,i32*%q7,align 4
%q8=bitcast i8*%q5 to i64*
store i64 0,i64*%q8,align 4
%q9=load i8*,i8**%d,align 8
%ra=getelementptr inbounds i8,i8*%q5,i64 8
%rb=bitcast i8*%ra to i8**
store i8*%q9,i8**%rb,align 8
%rc=getelementptr inbounds i8,i8*%q5,i64 16
%rd=bitcast i8*%rc to i32*
store i32 2,i32*%rd,align 4
ret i8*%q5
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%o,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%e,align 8
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%k],[%a,%q]
%r=phi i8*[%m,%k],[%b,%q]
%s=phi i8*[%l,%k],[%c,%q]
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%t=call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%p,i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=load i8*,i8**%g,align 8
%x=getelementptr inbounds i8,i8*%w,i64 40
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%z,i8*inreg%C)
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%D,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%f,align 8
%J=load i8*,i8**%g,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%g,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%h,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*null,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%ag,i8*inreg%W)
store i8*%ah,i8**%d,align 8
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=load i8*,i8**%d,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%f,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ai,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
ret i8*%ai
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
t:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%k,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
%q=load i8*,i8**%d,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%b,%t]
%u=phi i8*[%p,%o],[%c,%t]
store i8*%s,i8**%f,align 8
%v=bitcast i8*%u to i32*
%w=load i32,i32*%v,align 4
switch i32%w,label%x[
i32 5,label%Cp
i32 3,label%uM
i32 9,label%t8
i32 14,label%tn
i32 7,label%sC
i32 1,label%rJ
i32 2,label%pS
i32 4,label%oW
i32 6,label%n0
i32 10,label%lN
i32 11,label%h0
i32 8,label%g4
i32 12,label%gd
i32 13,label%fh
i32 0,label%en
i32 15,label%P
]
x:
store i8*null,i8**%f,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%y=load i8*,i8**@_SMLZ5Match,align 8
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jg,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%e,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=getelementptr inbounds i8,i8*%u,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%g,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%e,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%h,align 8
%af=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%k,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2572 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2572 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=call fastcc i8*%Z(i8*inreg%ax,i8*inreg%am)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=bitcast i8**%d to i8***
%aF=load i8**,i8***%aE,align 8
store i8*null,i8**%d,align 8
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call fastcc i8*@_SMLFN4List3allE(i32 inreg 1,i32 inreg 8)
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=call fastcc i8*%aL(i8*inreg%aN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ja,i64 0,i32 2)to i8*))
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
%aU=load i8*,i8**%d,align 8
%aV=call fastcc i8*%aR(i8*inreg%aT,i8*inreg%aU)
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
%aY=icmp eq i32%aX,0
br i1%aY,label%cc,label%aZ
aZ:
%a0=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
store i8*%a3,i8**%e,align 8
%a4=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=call fastcc i8*%a7(i8*inreg%a9,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jb,i64 0,i32 2)to i8*))
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8*(i8*,i8*)**
%bd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bc,align 8
%be=bitcast i8*%ba to i8**
%bf=load i8*,i8**%be,align 8
%bg=load i8*,i8**%d,align 8
%bh=call fastcc i8*%bd(i8*inreg%bf,i8*inreg%bg)
%bi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bj=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%bi,i8*inreg%bh)
store i8*%bj,i8**%e,align 8
%bk=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bl=getelementptr inbounds i8,i8*%bk,i64 16
%bm=bitcast i8*%bl to i8*(i8*,i8*)**
%bn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bm,align 8
%bo=bitcast i8*%bk to i8**
%bp=load i8*,i8**%bo,align 8
%bq=call fastcc i8*%bn(i8*inreg%bp,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jf,i64 0,i32 2)to i8*))
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bq to i8**
%bv=load i8*,i8**%bu,align 8
%bw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bx=call fastcc i8*%bt(i8*inreg%bv,i8*inreg%bw)
store i8*%bx,i8**%d,align 8
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
store i8*%by,i8**%f,align 8
%bB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%by,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 20)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177296,i32*%bK,align 4
store i8*%bI,i8**%d,align 8
%bL=getelementptr inbounds i8,i8*%bI,i64 4
%bM=bitcast i8*%bL to i32*
store i32 0,i32*%bM,align 1
%bN=bitcast i8*%bI to i32*
store i32 28,i32*%bN,align 4
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bI,i64 16
%bS=bitcast i8*%bR to i32*
store i32 2,i32*%bS,align 4
%bT=call i8*@sml_alloc(i32 inreg 20)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177296,i32*%bV,align 4
store i8*%bT,i8**%f,align 8
%bW=bitcast i8*%bT to i64*
store i64 0,i64*%bW,align 4
%bX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bY=getelementptr inbounds i8,i8*%bT,i64 8
%bZ=bitcast i8*%bY to i8**
store i8*%bX,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bT,i64 16
%b1=bitcast i8*%b0 to i32*
store i32 2,i32*%b1,align 4
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
%b5=load i8*,i8**%e,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=load i8*,i8**%f,align 8
%b8=getelementptr inbounds i8,i8*%b2,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*%b7,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b2,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
ret i8*%b2
cc:
%cd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ce=getelementptr inbounds i8,i8*%cd,i64 16
%cf=bitcast i8*%ce to i8*(i8*,i8*)**
%cg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cf,align 8
%ch=bitcast i8*%cd to i8**
%ci=load i8*,i8**%ch,align 8
store i8*%ci,i8**%f,align 8
%cj=load i8*,i8**%k,align 8
%ck=getelementptr inbounds i8,i8*%cj,i64 40
%cl=bitcast i8*%ck to i8**
%cm=load i8*,i8**%cl,align 8
store i8*%cm,i8**%e,align 8
%cn=call i8*@sml_alloc(i32 inreg 12)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177288,i32*%cp,align 4
store i8*%cn,i8**%h,align 8
%cq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cn,i64 8
%ct=bitcast i8*%cs to i32*
store i32 1,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 28)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177304,i32*%cw,align 4
%cx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cy=bitcast i8*%cu to i8**
store i8*%cx,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cu,i64 8
%cA=bitcast i8*%cz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2576 to void(...)*),void(...)**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 16
%cC=bitcast i8*%cB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2576 to void(...)*),void(...)**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 24
%cE=bitcast i8*%cD to i32*
store i32 -2147483647,i32*%cE,align 4
%cF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cG=call fastcc i8*%cg(i8*inreg%cF,i8*inreg%cu)
%cH=getelementptr inbounds i8,i8*%cG,i64 16
%cI=bitcast i8*%cH to i8*(i8*,i8*)**
%cJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cI,align 8
%cK=bitcast i8*%cG to i8**
%cL=load i8*,i8**%cK,align 8
%cM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cN=call fastcc i8*%cJ(i8*inreg%cL,i8*inreg%cM)
store i8*%cN,i8**%d,align 8
%cO=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cP=getelementptr inbounds i8,i8*%cO,i64 16
%cQ=bitcast i8*%cP to i8*(i8*,i8*)**
%cR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cQ,align 8
%cS=bitcast i8*%cO to i8**
%cT=load i8*,i8**%cS,align 8
store i8*%cT,i8**%f,align 8
%cU=load i8*,i8**%k,align 8
%cV=getelementptr inbounds i8,i8*%cU,i64 16
%cW=bitcast i8*%cV to i8**
%cX=load i8*,i8**%cW,align 8
store i8*%cX,i8**%e,align 8
%cY=call i8*@sml_alloc(i32 inreg 12)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 1342177288,i32*%c0,align 4
store i8*%cY,i8**%h,align 8
%c1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c2=bitcast i8*%cY to i8**
store i8*%c1,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cY,i64 8
%c4=bitcast i8*%c3 to i32*
store i32 1,i32*%c4,align 4
%c5=call i8*@sml_alloc(i32 inreg 28)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177304,i32*%c7,align 4
%c8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c9=bitcast i8*%c5 to i8**
store i8*%c8,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%c5,i64 8
%db=bitcast i8*%da to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2577 to void(...)*),void(...)**%db,align 8
%dc=getelementptr inbounds i8,i8*%c5,i64 16
%dd=bitcast i8*%dc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL4exps_2577 to void(...)*),void(...)**%dd,align 8
%de=getelementptr inbounds i8,i8*%c5,i64 24
%df=bitcast i8*%de to i32*
store i32 -2147483647,i32*%df,align 4
%dg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dh=call fastcc i8*%cR(i8*inreg%dg,i8*inreg%c5)
%di=getelementptr inbounds i8,i8*%dh,i64 16
%dj=bitcast i8*%di to i8*(i8*,i8*)**
%dk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dj,align 8
%dl=bitcast i8*%dh to i8**
%dm=load i8*,i8**%dl,align 8
%dn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%do=call fastcc i8*%dk(i8*inreg%dm,i8*inreg%dn)
store i8*%do,i8**%d,align 8
%dp=call fastcc i8*@_SMLFN8ListPair5unzipE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dq=getelementptr inbounds i8,i8*%dp,i64 16
%dr=bitcast i8*%dq to i8*(i8*,i8*)**
%ds=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dr,align 8
%dt=bitcast i8*%dp to i8**
%du=load i8*,i8**%dt,align 8
%dv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dw=call fastcc i8*%ds(i8*inreg%du,i8*inreg%dv)
%dx=getelementptr inbounds i8,i8*%dw,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%d,align 8
%dA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dB=getelementptr inbounds i8,i8*%dA,i64 16
%dC=bitcast i8*%dB to i8**
%dD=load i8*,i8**%dC,align 8
%dE=bitcast i8*%dw to i8**
%dF=load i8*,i8**%dE,align 8
%dG=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%dD,i8*inreg%dF)
store i8*%dG,i8**%e,align 8
%dH=call i8*@sml_alloc(i32 inreg 20)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177296,i32*%dJ,align 4
store i8*%dH,i8**%f,align 8
%dK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dN=getelementptr inbounds i8,i8*%dH,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dH,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 3,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177296,i32*%dT,align 4
store i8*%dR,i8**%d,align 8
%dU=getelementptr inbounds i8,i8*%dR,i64 4
%dV=bitcast i8*%dU to i32*
store i32 0,i32*%dV,align 1
%dW=bitcast i8*%dR to i32*
store i32 28,i32*%dW,align 4
%dX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dY=getelementptr inbounds i8,i8*%dR,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dR,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 2,i32*%d1,align 4
%d2=call i8*@sml_alloc(i32 inreg 20)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177296,i32*%d4,align 4
store i8*%d2,i8**%f,align 8
%d5=getelementptr inbounds i8,i8*%d2,i64 4
%d6=bitcast i8*%d5 to i32*
store i32 0,i32*%d6,align 1
%d7=bitcast i8*%d2 to i32*
store i32 1,i32*%d7,align 4
%d8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d9=getelementptr inbounds i8,i8*%d2,i64 8
%ea=bitcast i8*%d9 to i8**
store i8*%d8,i8**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d2,i64 16
%ec=bitcast i8*%eb to i32*
store i32 2,i32*%ec,align 4
%ed=call i8*@sml_alloc(i32 inreg 20)#0
%ee=getelementptr inbounds i8,i8*%ed,i64 -4
%ef=bitcast i8*%ee to i32*
store i32 1342177296,i32*%ef,align 4
%eg=load i8*,i8**%e,align 8
%eh=bitcast i8*%ed to i8**
store i8*%eg,i8**%eh,align 8
%ei=load i8*,i8**%f,align 8
%ej=getelementptr inbounds i8,i8*%ed,i64 8
%ek=bitcast i8*%ej to i8**
store i8*%ei,i8**%ek,align 8
%el=getelementptr inbounds i8,i8*%ed,i64 16
%em=bitcast i8*%el to i32*
store i32 3,i32*%em,align 4
ret i8*%ed
en:
%eo=getelementptr inbounds i8,i8*%u,i64 8
%ep=bitcast i8*%eo to i8**
%eq=load i8*,i8**%ep,align 8
store i8*%eq,i8**%d,align 8
%er=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%es=getelementptr inbounds i8,i8*%er,i64 16
%et=bitcast i8*%es to i8*(i8*,i8*)**
%eu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%et,align 8
%ev=bitcast i8*%er to i8**
%ew=load i8*,i8**%ev,align 8
store i8*%ew,i8**%e,align 8
%ex=call i8*@sml_alloc(i32 inreg 12)#0
%ey=getelementptr inbounds i8,i8*%ex,i64 -4
%ez=bitcast i8*%ey to i32*
store i32 1342177288,i32*%ez,align 4
store i8*%ex,i8**%g,align 8
%eA=load i8*,i8**%f,align 8
%eB=bitcast i8*%ex to i8**
store i8*%eA,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%ex,i64 8
%eD=bitcast i8*%eC to i32*
store i32 1,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 28)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177304,i32*%eG,align 4
%eH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%eE,i64 8
%eK=bitcast i8*%eJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3src_2571 to void(...)*),void(...)**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eE,i64 16
%eM=bitcast i8*%eL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL3src_2571 to void(...)*),void(...)**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eE,i64 24
%eO=bitcast i8*%eN to i32*
store i32 -2147483647,i32*%eO,align 4
%eP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eQ=call fastcc i8*%eu(i8*inreg%eP,i8*inreg%eE)
%eR=getelementptr inbounds i8,i8*%eQ,i64 16
%eS=bitcast i8*%eR to i8*(i8*,i8*)**
%eT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eS,align 8
%eU=bitcast i8*%eQ to i8**
%eV=load i8*,i8**%eU,align 8
%eW=bitcast i8**%d to i8***
%eX=load i8**,i8***%eW,align 8
store i8*null,i8**%d,align 8
%eY=load i8*,i8**%eX,align 8
%eZ=call fastcc i8*%eT(i8*inreg%eV,i8*inreg%eY)
store i8*%eZ,i8**%d,align 8
%e0=call fastcc i8*@_SMLFN6Fixity5parseE(i32 inreg 1,i32 inreg 8)
%e1=getelementptr inbounds i8,i8*%e0,i64 16
%e2=bitcast i8*%e1 to i8*(i8*,i8*)**
%e3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e2,align 8
%e4=bitcast i8*%e0 to i8**
%e5=load i8*,i8**%e4,align 8
%e6=call fastcc i8*%e3(i8*inreg%e5,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i8,i64 0,i32 2)to i8*))
%e7=getelementptr inbounds i8,i8*%e6,i64 16
%e8=bitcast i8*%e7 to i8*(i8*,i8*)**
%e9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e8,align 8
%fa=bitcast i8*%e6 to i8**
%fb=load i8*,i8**%fa,align 8
%fc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fd=call fastcc i8*%e9(i8*inreg%fb,i8*inreg%fc)
%fe=load i8*,i8**%f,align 8
%ff=load i8*,i8**%k,align 8
%fg=tail call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%ff,i8*inreg%fe,i8*inreg%fd)
ret i8*%fg
fh:
store i8*null,i8**%f,align 8
%fi=getelementptr inbounds i8,i8*%u,i64 8
%fj=bitcast i8*%fi to i8**
%fk=load i8*,i8**%fj,align 8
store i8*%fk,i8**%e,align 8
%fl=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%fk)
store i8*%fl,i8**%d,align 8
%fm=call i8*@sml_alloc(i32 inreg 20)#0
%fn=getelementptr inbounds i8,i8*%fm,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177296,i32*%fo,align 4
store i8*%fm,i8**%f,align 8
%fp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fq=bitcast i8*%fm to i8**
store i8*%fp,i8**%fq,align 8
%fr=getelementptr inbounds i8,i8*%fm,i64 8
%fs=bitcast i8*%fr to i8**
store i8*null,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fm,i64 16
%fu=bitcast i8*%ft to i32*
store i32 3,i32*%fu,align 4
%fv=call i8*@sml_alloc(i32 inreg 20)#0
%fw=getelementptr inbounds i8,i8*%fv,i64 -4
%fx=bitcast i8*%fw to i32*
store i32 1342177296,i32*%fx,align 4
store i8*%fv,i8**%e,align 8
%fy=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fz=bitcast i8*%fv to i8**
store i8*%fy,i8**%fz,align 8
%fA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fB=getelementptr inbounds i8,i8*%fv,i64 8
%fC=bitcast i8*%fB to i8**
store i8*%fA,i8**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fv,i64 16
%fE=bitcast i8*%fD to i32*
store i32 3,i32*%fE,align 4
%fF=call i8*@sml_alloc(i32 inreg 20)#0
%fG=getelementptr inbounds i8,i8*%fF,i64 -4
%fH=bitcast i8*%fG to i32*
store i32 1342177296,i32*%fH,align 4
store i8*%fF,i8**%d,align 8
%fI=getelementptr inbounds i8,i8*%fF,i64 4
%fJ=bitcast i8*%fI to i32*
store i32 0,i32*%fJ,align 1
%fK=bitcast i8*%fF to i32*
store i32 16,i32*%fK,align 4
%fL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fM=getelementptr inbounds i8,i8*%fF,i64 8
%fN=bitcast i8*%fM to i8**
store i8*%fL,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fF,i64 16
%fP=bitcast i8*%fO to i32*
store i32 2,i32*%fP,align 4
%fQ=call i8*@sml_alloc(i32 inreg 20)#0
%fR=getelementptr inbounds i8,i8*%fQ,i64 -4
%fS=bitcast i8*%fR to i32*
store i32 1342177296,i32*%fS,align 4
store i8*%fQ,i8**%e,align 8
%fT=bitcast i8*%fQ to i64*
store i64 0,i64*%fT,align 4
%fU=load i8*,i8**%d,align 8
%fV=getelementptr inbounds i8,i8*%fQ,i64 8
%fW=bitcast i8*%fV to i8**
store i8*%fU,i8**%fW,align 8
%fX=getelementptr inbounds i8,i8*%fQ,i64 16
%fY=bitcast i8*%fX to i32*
store i32 2,i32*%fY,align 4
%fZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%f0=getelementptr inbounds i8,i8*%fZ,i64 8
%f1=bitcast i8*%f0 to i8**
%f2=load i8*,i8**%f1,align 8
store i8*%f2,i8**%d,align 8
%f3=call i8*@sml_alloc(i32 inreg 20)#0
%f4=getelementptr inbounds i8,i8*%f3,i64 -4
%f5=bitcast i8*%f4 to i32*
store i32 1342177296,i32*%f5,align 4
%f6=load i8*,i8**%d,align 8
%f7=bitcast i8*%f3 to i8**
store i8*%f6,i8**%f7,align 8
%f8=load i8*,i8**%e,align 8
%f9=getelementptr inbounds i8,i8*%f3,i64 8
%ga=bitcast i8*%f9 to i8**
store i8*%f8,i8**%ga,align 8
%gb=getelementptr inbounds i8,i8*%f3,i64 16
%gc=bitcast i8*%gb to i32*
store i32 3,i32*%gc,align 4
ret i8*%f3
gd:
%ge=getelementptr inbounds i8,i8*%u,i64 8
%gf=bitcast i8*%ge to i8**
%gg=load i8*,i8**%gf,align 8
%gh=bitcast i8*%gg to i8**
%gi=load i8*,i8**%gh,align 8
store i8*%gi,i8**%d,align 8
%gj=getelementptr inbounds i8,i8*%gg,i64 8
%gk=bitcast i8*%gj to i8**
%gl=load i8*,i8**%gk,align 8
store i8*%gl,i8**%e,align 8
%gm=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gn=getelementptr inbounds i8,i8*%gm,i64 8
%go=bitcast i8*%gn to i8**
%gp=load i8*,i8**%go,align 8
store i8*%gp,i8**%f,align 8
%gq=call i8*@sml_alloc(i32 inreg 20)#0
%gr=getelementptr inbounds i8,i8*%gq,i64 -4
%gs=bitcast i8*%gr to i32*
store i32 1342177296,i32*%gs,align 4
store i8*%gq,i8**%g,align 8
%gt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gu=bitcast i8*%gq to i8**
store i8*%gt,i8**%gu,align 8
%gv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gw=getelementptr inbounds i8,i8*%gq,i64 8
%gx=bitcast i8*%gw to i8**
store i8*%gv,i8**%gx,align 8
%gy=getelementptr inbounds i8,i8*%gq,i64 16
%gz=bitcast i8*%gy to i32*
store i32 3,i32*%gz,align 4
%gA=call i8*@sml_alloc(i32 inreg 20)#0
%gB=getelementptr inbounds i8,i8*%gA,i64 -4
%gC=bitcast i8*%gB to i32*
store i32 1342177296,i32*%gC,align 4
store i8*%gA,i8**%d,align 8
%gD=getelementptr inbounds i8,i8*%gA,i64 4
%gE=bitcast i8*%gD to i32*
store i32 0,i32*%gE,align 1
%gF=bitcast i8*%gA to i32*
store i32 16,i32*%gF,align 4
%gG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gH=getelementptr inbounds i8,i8*%gA,i64 8
%gI=bitcast i8*%gH to i8**
store i8*%gG,i8**%gI,align 8
%gJ=getelementptr inbounds i8,i8*%gA,i64 16
%gK=bitcast i8*%gJ to i32*
store i32 2,i32*%gK,align 4
%gL=call i8*@sml_alloc(i32 inreg 20)#0
%gM=getelementptr inbounds i8,i8*%gL,i64 -4
%gN=bitcast i8*%gM to i32*
store i32 1342177296,i32*%gN,align 4
store i8*%gL,i8**%e,align 8
%gO=bitcast i8*%gL to i64*
store i64 0,i64*%gO,align 4
%gP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gQ=getelementptr inbounds i8,i8*%gL,i64 8
%gR=bitcast i8*%gQ to i8**
store i8*%gP,i8**%gR,align 8
%gS=getelementptr inbounds i8,i8*%gL,i64 16
%gT=bitcast i8*%gS to i32*
store i32 2,i32*%gT,align 4
%gU=call i8*@sml_alloc(i32 inreg 20)#0
%gV=getelementptr inbounds i8,i8*%gU,i64 -4
%gW=bitcast i8*%gV to i32*
store i32 1342177296,i32*%gW,align 4
%gX=load i8*,i8**%f,align 8
%gY=bitcast i8*%gU to i8**
store i8*%gX,i8**%gY,align 8
%gZ=load i8*,i8**%e,align 8
%g0=getelementptr inbounds i8,i8*%gU,i64 8
%g1=bitcast i8*%g0 to i8**
store i8*%gZ,i8**%g1,align 8
%g2=getelementptr inbounds i8,i8*%gU,i64 16
%g3=bitcast i8*%g2 to i32*
store i32 3,i32*%g3,align 4
ret i8*%gU
g4:
store i8*null,i8**%f,align 8
%g5=getelementptr inbounds i8,i8*%u,i64 8
%g6=bitcast i8*%g5 to i8**
%g7=load i8*,i8**%g6,align 8
store i8*%g7,i8**%e,align 8
%g8=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%g7)
store i8*%g8,i8**%d,align 8
%g9=call i8*@sml_alloc(i32 inreg 20)#0
%ha=getelementptr inbounds i8,i8*%g9,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177296,i32*%hb,align 4
store i8*%g9,i8**%f,align 8
%hc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hd=bitcast i8*%g9 to i8**
store i8*%hc,i8**%hd,align 8
%he=getelementptr inbounds i8,i8*%g9,i64 8
%hf=bitcast i8*%he to i8**
store i8*null,i8**%hf,align 8
%hg=getelementptr inbounds i8,i8*%g9,i64 16
%hh=bitcast i8*%hg to i32*
store i32 3,i32*%hh,align 4
%hi=call i8*@sml_alloc(i32 inreg 20)#0
%hj=getelementptr inbounds i8,i8*%hi,i64 -4
%hk=bitcast i8*%hj to i32*
store i32 1342177296,i32*%hk,align 4
store i8*%hi,i8**%e,align 8
%hl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hm=bitcast i8*%hi to i8**
store i8*%hl,i8**%hm,align 8
%hn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ho=getelementptr inbounds i8,i8*%hi,i64 8
%hp=bitcast i8*%ho to i8**
store i8*%hn,i8**%hp,align 8
%hq=getelementptr inbounds i8,i8*%hi,i64 16
%hr=bitcast i8*%hq to i32*
store i32 3,i32*%hr,align 4
%hs=call i8*@sml_alloc(i32 inreg 20)#0
%ht=getelementptr inbounds i8,i8*%hs,i64 -4
%hu=bitcast i8*%ht to i32*
store i32 1342177296,i32*%hu,align 4
store i8*%hs,i8**%d,align 8
%hv=getelementptr inbounds i8,i8*%hs,i64 4
%hw=bitcast i8*%hv to i32*
store i32 0,i32*%hw,align 1
%hx=bitcast i8*%hs to i32*
store i32 16,i32*%hx,align 4
%hy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hz=getelementptr inbounds i8,i8*%hs,i64 8
%hA=bitcast i8*%hz to i8**
store i8*%hy,i8**%hA,align 8
%hB=getelementptr inbounds i8,i8*%hs,i64 16
%hC=bitcast i8*%hB to i32*
store i32 2,i32*%hC,align 4
%hD=call i8*@sml_alloc(i32 inreg 20)#0
%hE=getelementptr inbounds i8,i8*%hD,i64 -4
%hF=bitcast i8*%hE to i32*
store i32 1342177296,i32*%hF,align 4
store i8*%hD,i8**%e,align 8
%hG=bitcast i8*%hD to i64*
store i64 0,i64*%hG,align 4
%hH=load i8*,i8**%d,align 8
%hI=getelementptr inbounds i8,i8*%hD,i64 8
%hJ=bitcast i8*%hI to i8**
store i8*%hH,i8**%hJ,align 8
%hK=getelementptr inbounds i8,i8*%hD,i64 16
%hL=bitcast i8*%hK to i32*
store i32 2,i32*%hL,align 4
%hM=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hN=getelementptr inbounds i8,i8*%hM,i64 8
%hO=bitcast i8*%hN to i8**
%hP=load i8*,i8**%hO,align 8
store i8*%hP,i8**%d,align 8
%hQ=call i8*@sml_alloc(i32 inreg 20)#0
%hR=getelementptr inbounds i8,i8*%hQ,i64 -4
%hS=bitcast i8*%hR to i32*
store i32 1342177296,i32*%hS,align 4
%hT=load i8*,i8**%d,align 8
%hU=bitcast i8*%hQ to i8**
store i8*%hT,i8**%hU,align 8
%hV=load i8*,i8**%e,align 8
%hW=getelementptr inbounds i8,i8*%hQ,i64 8
%hX=bitcast i8*%hW to i8**
store i8*%hV,i8**%hX,align 8
%hY=getelementptr inbounds i8,i8*%hQ,i64 16
%hZ=bitcast i8*%hY to i32*
store i32 3,i32*%hZ,align 4
ret i8*%hQ
h0:
%h1=getelementptr inbounds i8,i8*%u,i64 8
%h2=bitcast i8*%h1 to i8**
%h3=load i8*,i8**%h2,align 8
store i8*%h3,i8**%g,align 8
%h4=bitcast i8*%h3 to i32*
%h5=load i32,i32*%h4,align 4
%h6=getelementptr inbounds i8,i8*%h3,i64 24
%h7=bitcast i8*%h6 to i8**
%h8=load i8*,i8**%h7,align 8
store i8*%h8,i8**%j,align 8
%h9=getelementptr inbounds i8,i8*%h3,i64 8
%ia=bitcast i8*%h9 to i8**
%ib=load i8*,i8**%ia,align 8
%ic=load i8*,i8**%k,align 8
%id=call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%ic,i8*inreg%s,i8*inreg%ib)
%ie=bitcast i8*%id to i8**
%if=load i8*,i8**%ie,align 8
store i8*%if,i8**%d,align 8
%ig=getelementptr inbounds i8,i8*%id,i64 8
%ih=bitcast i8*%ig to i8**
%ii=load i8*,i8**%ih,align 8
store i8*%ii,i8**%e,align 8
%ij=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ik=getelementptr inbounds i8,i8*%ij,i64 16
%il=bitcast i8*%ik to i8**
%im=load i8*,i8**%il,align 8
%in=load i8*,i8**%f,align 8
%io=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
%ip=call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%io,i8*inreg%in,i8*inreg%im)
%iq=bitcast i8*%ip to i8**
%ir=load i8*,i8**%iq,align 8
store i8*%ir,i8**%f,align 8
%is=getelementptr inbounds i8,i8*%ip,i64 8
%it=bitcast i8*%is to i8**
%iu=load i8*,i8**%it,align 8
store i8*%iu,i8**%g,align 8
%iv=load i8*,i8**%e,align 8
%iw=bitcast i8*%iv to i32*
%ix=load i32,i32*%iw,align 4
%iy=icmp eq i32%ix,0
br i1%iy,label%iz,label%jV
iz:
%iA=getelementptr inbounds i8,i8*%iv,i64 8
%iB=bitcast i8*%iA to i8**
%iC=load i8*,i8**%iB,align 8
store i8*%iC,i8**%h,align 8
%iD=bitcast i8*%iu to i32*
%iE=load i32,i32*%iD,align 4
%iF=icmp eq i32%iE,0
br i1%iF,label%iH,label%iG
iG:
store i8*null,i8**%h,align 8
br label%jV
iH:
%iI=getelementptr inbounds i8,i8*%iu,i64 8
%iJ=bitcast i8*%iI to i8**
%iK=load i8*,i8**%iJ,align 8
store i8*%iK,i8**%e,align 8
%iL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%iM=getelementptr inbounds i8,i8*%iL,i64 16
%iN=bitcast i8*%iM to i8**
%iO=load i8*,i8**%iN,align 8
store i8*%iO,i8**%g,align 8
%iP=call i8*@sml_alloc(i32 inreg 20)#0
%iQ=getelementptr inbounds i8,i8*%iP,i64 -4
%iR=bitcast i8*%iQ to i32*
store i32 1342177296,i32*%iR,align 4
store i8*%iP,i8**%i,align 8
%iS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iT=bitcast i8*%iP to i8**
store i8*%iS,i8**%iT,align 8
%iU=getelementptr inbounds i8,i8*%iP,i64 8
%iV=bitcast i8*%iU to i8**
store i8*null,i8**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iP,i64 16
%iX=bitcast i8*%iW to i32*
store i32 3,i32*%iX,align 4
%iY=call i8*@sml_alloc(i32 inreg 20)#0
%iZ=getelementptr inbounds i8,i8*%iY,i64 -4
%i0=bitcast i8*%iZ to i32*
store i32 1342177296,i32*%i0,align 4
%i1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%i2=bitcast i8*%iY to i8**
store i8*%i1,i8**%i2,align 8
%i3=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%i4=getelementptr inbounds i8,i8*%iY,i64 8
%i5=bitcast i8*%i4 to i8**
store i8*%i3,i8**%i5,align 8
%i6=getelementptr inbounds i8,i8*%iY,i64 16
%i7=bitcast i8*%i6 to i32*
store i32 3,i32*%i7,align 4
%i8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%i9=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%i8,i8*inreg%iY)
store i8*%i9,i8**%d,align 8
%ja=call i8*@sml_alloc(i32 inreg 36)#0
%jb=getelementptr inbounds i8,i8*%ja,i64 -4
%jc=bitcast i8*%jb to i32*
store i32 1342177312,i32*%jc,align 4
store i8*%ja,i8**%f,align 8
%jd=getelementptr inbounds i8,i8*%ja,i64 4
%je=bitcast i8*%jd to i32*
store i32 0,i32*%je,align 1
%jf=bitcast i8*%ja to i32*
store i32%h5,i32*%jf,align 4
%jg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jh=getelementptr inbounds i8,i8*%ja,i64 8
%ji=bitcast i8*%jh to i8**
store i8*%jg,i8**%ji,align 8
%jj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jk=getelementptr inbounds i8,i8*%ja,i64 16
%jl=bitcast i8*%jk to i8**
store i8*%jj,i8**%jl,align 8
%jm=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jn=getelementptr inbounds i8,i8*%ja,i64 24
%jo=bitcast i8*%jn to i8**
store i8*%jm,i8**%jo,align 8
%jp=getelementptr inbounds i8,i8*%ja,i64 32
%jq=bitcast i8*%jp to i32*
store i32 14,i32*%jq,align 4
%jr=call i8*@sml_alloc(i32 inreg 20)#0
%js=getelementptr inbounds i8,i8*%jr,i64 -4
%jt=bitcast i8*%js to i32*
store i32 1342177296,i32*%jt,align 4
store i8*%jr,i8**%e,align 8
%ju=getelementptr inbounds i8,i8*%jr,i64 4
%jv=bitcast i8*%ju to i32*
store i32 0,i32*%jv,align 1
%jw=bitcast i8*%jr to i32*
store i32 20,i32*%jw,align 4
%jx=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jy=getelementptr inbounds i8,i8*%jr,i64 8
%jz=bitcast i8*%jy to i8**
store i8*%jx,i8**%jz,align 8
%jA=getelementptr inbounds i8,i8*%jr,i64 16
%jB=bitcast i8*%jA to i32*
store i32 2,i32*%jB,align 4
%jC=call i8*@sml_alloc(i32 inreg 20)#0
%jD=getelementptr inbounds i8,i8*%jC,i64 -4
%jE=bitcast i8*%jD to i32*
store i32 1342177296,i32*%jE,align 4
store i8*%jC,i8**%f,align 8
%jF=bitcast i8*%jC to i64*
store i64 0,i64*%jF,align 4
%jG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jH=getelementptr inbounds i8,i8*%jC,i64 8
%jI=bitcast i8*%jH to i8**
store i8*%jG,i8**%jI,align 8
%jJ=getelementptr inbounds i8,i8*%jC,i64 16
%jK=bitcast i8*%jJ to i32*
store i32 2,i32*%jK,align 4
%jL=call i8*@sml_alloc(i32 inreg 20)#0
%jM=getelementptr inbounds i8,i8*%jL,i64 -4
%jN=bitcast i8*%jM to i32*
store i32 1342177296,i32*%jN,align 4
%jO=load i8*,i8**%d,align 8
%jP=bitcast i8*%jL to i8**
store i8*%jO,i8**%jP,align 8
%jQ=load i8*,i8**%f,align 8
%jR=getelementptr inbounds i8,i8*%jL,i64 8
%jS=bitcast i8*%jR to i8**
store i8*%jQ,i8**%jS,align 8
%jT=getelementptr inbounds i8,i8*%jL,i64 16
%jU=bitcast i8*%jT to i32*
store i32 3,i32*%jU,align 4
ret i8*%jL
jV:
%jW=load i8*,i8**%k,align 8
%jX=getelementptr inbounds i8,i8*%jW,i64 40
%jY=bitcast i8*%jX to i8**
%jZ=load i8*,i8**%jY,align 8
store i8*null,i8**%e,align 8
%j0=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%jZ,i8*inreg%iv)
%j1=bitcast i8*%j0 to i8**
%j2=load i8*,i8**%j1,align 8
store i8*%j2,i8**%e,align 8
%j3=getelementptr inbounds i8,i8*%j0,i64 8
%j4=bitcast i8*%j3 to i8**
%j5=load i8*,i8**%j4,align 8
store i8*%j5,i8**%h,align 8
%j6=load i8*,i8**%k,align 8
%j7=getelementptr inbounds i8,i8*%j6,i64 40
%j8=bitcast i8*%j7 to i8**
%j9=load i8*,i8**%j8,align 8
%ka=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kb=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%j9,i8*inreg%ka)
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%g,align 8
%ke=getelementptr inbounds i8,i8*%kb,i64 8
%kf=bitcast i8*%ke to i8**
%kg=load i8*,i8**%kf,align 8
store i8*%kg,i8**%i,align 8
%kh=load i8*,i8**%k,align 8
%ki=getelementptr inbounds i8,i8*%kh,i64 16
%kj=bitcast i8*%ki to i8**
%kk=load i8*,i8**%kj,align 8
store i8*%kk,i8**%k,align 8
%kl=call i8*@sml_alloc(i32 inreg 20)#0
%km=getelementptr inbounds i8,i8*%kl,i64 -4
%kn=bitcast i8*%km to i32*
store i32 1342177296,i32*%kn,align 4
store i8*%kl,i8**%l,align 8
%ko=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kp=bitcast i8*%kl to i8**
store i8*%ko,i8**%kp,align 8
%kq=getelementptr inbounds i8,i8*%kl,i64 8
%kr=bitcast i8*%kq to i8**
store i8*null,i8**%kr,align 8
%ks=getelementptr inbounds i8,i8*%kl,i64 16
%kt=bitcast i8*%ks to i32*
store i32 3,i32*%kt,align 4
%ku=call i8*@sml_alloc(i32 inreg 20)#0
%kv=getelementptr inbounds i8,i8*%ku,i64 -4
%kw=bitcast i8*%kv to i32*
store i32 1342177296,i32*%kw,align 4
store i8*%ku,i8**%g,align 8
%kx=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ky=bitcast i8*%ku to i8**
store i8*%kx,i8**%ky,align 8
%kz=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%kA=getelementptr inbounds i8,i8*%ku,i64 8
%kB=bitcast i8*%kA to i8**
store i8*%kz,i8**%kB,align 8
%kC=getelementptr inbounds i8,i8*%ku,i64 16
%kD=bitcast i8*%kC to i32*
store i32 3,i32*%kD,align 4
%kE=call i8*@sml_alloc(i32 inreg 20)#0
%kF=getelementptr inbounds i8,i8*%kE,i64 -4
%kG=bitcast i8*%kF to i32*
store i32 1342177296,i32*%kG,align 4
store i8*%kE,i8**%f,align 8
%kH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kI=bitcast i8*%kE to i8**
store i8*%kH,i8**%kI,align 8
%kJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kK=getelementptr inbounds i8,i8*%kE,i64 8
%kL=bitcast i8*%kK to i8**
store i8*%kJ,i8**%kL,align 8
%kM=getelementptr inbounds i8,i8*%kE,i64 16
%kN=bitcast i8*%kM to i32*
store i32 3,i32*%kN,align 4
%kO=call i8*@sml_alloc(i32 inreg 20)#0
%kP=getelementptr inbounds i8,i8*%kO,i64 -4
%kQ=bitcast i8*%kP to i32*
store i32 1342177296,i32*%kQ,align 4
%kR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kS=bitcast i8*%kO to i8**
store i8*%kR,i8**%kS,align 8
%kT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kU=getelementptr inbounds i8,i8*%kO,i64 8
%kV=bitcast i8*%kU to i8**
store i8*%kT,i8**%kV,align 8
%kW=getelementptr inbounds i8,i8*%kO,i64 16
%kX=bitcast i8*%kW to i32*
store i32 3,i32*%kX,align 4
%kY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kZ=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%kY,i8*inreg%kO)
store i8*%kZ,i8**%d,align 8
%k0=call i8*@sml_alloc(i32 inreg 36)#0
%k1=getelementptr inbounds i8,i8*%k0,i64 -4
%k2=bitcast i8*%k1 to i32*
store i32 1342177312,i32*%k2,align 4
store i8*%k0,i8**%e,align 8
%k3=getelementptr inbounds i8,i8*%k0,i64 4
%k4=bitcast i8*%k3 to i32*
store i32 0,i32*%k4,align 1
%k5=bitcast i8*%k0 to i32*
store i32%h5,i32*%k5,align 4
%k6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%k7=getelementptr inbounds i8,i8*%k0,i64 8
%k8=bitcast i8*%k7 to i8**
store i8*%k6,i8**%k8,align 8
%k9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%la=getelementptr inbounds i8,i8*%k0,i64 16
%lb=bitcast i8*%la to i8**
store i8*%k9,i8**%lb,align 8
%lc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ld=getelementptr inbounds i8,i8*%k0,i64 24
%le=bitcast i8*%ld to i8**
store i8*%lc,i8**%le,align 8
%lf=getelementptr inbounds i8,i8*%k0,i64 32
%lg=bitcast i8*%lf to i32*
store i32 14,i32*%lg,align 4
%lh=call i8*@sml_alloc(i32 inreg 20)#0
%li=getelementptr inbounds i8,i8*%lh,i64 -4
%lj=bitcast i8*%li to i32*
store i32 1342177296,i32*%lj,align 4
store i8*%lh,i8**%f,align 8
%lk=getelementptr inbounds i8,i8*%lh,i64 4
%ll=bitcast i8*%lk to i32*
store i32 0,i32*%ll,align 1
%lm=bitcast i8*%lh to i32*
store i32 20,i32*%lm,align 4
%ln=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lo=getelementptr inbounds i8,i8*%lh,i64 8
%lp=bitcast i8*%lo to i8**
store i8*%ln,i8**%lp,align 8
%lq=getelementptr inbounds i8,i8*%lh,i64 16
%lr=bitcast i8*%lq to i32*
store i32 2,i32*%lr,align 4
%ls=call i8*@sml_alloc(i32 inreg 20)#0
%lt=getelementptr inbounds i8,i8*%ls,i64 -4
%lu=bitcast i8*%lt to i32*
store i32 1342177296,i32*%lu,align 4
store i8*%ls,i8**%e,align 8
%lv=getelementptr inbounds i8,i8*%ls,i64 4
%lw=bitcast i8*%lv to i32*
store i32 0,i32*%lw,align 1
%lx=bitcast i8*%ls to i32*
store i32 1,i32*%lx,align 4
%ly=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lz=getelementptr inbounds i8,i8*%ls,i64 8
%lA=bitcast i8*%lz to i8**
store i8*%ly,i8**%lA,align 8
%lB=getelementptr inbounds i8,i8*%ls,i64 16
%lC=bitcast i8*%lB to i32*
store i32 2,i32*%lC,align 4
%lD=call i8*@sml_alloc(i32 inreg 20)#0
%lE=getelementptr inbounds i8,i8*%lD,i64 -4
%lF=bitcast i8*%lE to i32*
store i32 1342177296,i32*%lF,align 4
%lG=load i8*,i8**%d,align 8
%lH=bitcast i8*%lD to i8**
store i8*%lG,i8**%lH,align 8
%lI=load i8*,i8**%e,align 8
%lJ=getelementptr inbounds i8,i8*%lD,i64 8
%lK=bitcast i8*%lJ to i8**
store i8*%lI,i8**%lK,align 8
%lL=getelementptr inbounds i8,i8*%lD,i64 16
%lM=bitcast i8*%lL to i32*
store i32 3,i32*%lM,align 4
ret i8*%lD
lN:
%lO=getelementptr inbounds i8,i8*%u,i64 8
%lP=bitcast i8*%lO to i8**
%lQ=load i8*,i8**%lP,align 8
%lR=bitcast i8*%lQ to i32*
%lS=load i32,i32*%lR,align 4
%lT=getelementptr inbounds i8,i8*%lQ,i64 16
%lU=bitcast i8*%lT to i8**
%lV=load i8*,i8**%lU,align 8
store i8*%lV,i8**%e,align 8
%lW=getelementptr inbounds i8,i8*%lQ,i64 8
%lX=bitcast i8*%lW to i8**
%lY=load i8*,i8**%lX,align 8
%lZ=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%k,align 8
%l0=call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%lZ,i8*inreg%s,i8*inreg%lY)
%l1=bitcast i8*%l0 to i8**
%l2=load i8*,i8**%l1,align 8
store i8*%l2,i8**%d,align 8
%l3=getelementptr inbounds i8,i8*%l0,i64 8
%l4=bitcast i8*%l3 to i8**
%l5=load i8*,i8**%l4,align 8
%l6=bitcast i8*%l5 to i32*
%l7=load i32,i32*%l6,align 4
switch i32%l7,label%l8[
i32 1,label%nc
i32 0,label%mq
]
l8:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%l9=load i8*,i8**@_SMLZ5Match,align 8
store i8*%l9,i8**%d,align 8
%ma=call i8*@sml_alloc(i32 inreg 20)#0
%mb=getelementptr inbounds i8,i8*%ma,i64 -4
%mc=bitcast i8*%mb to i32*
store i32 1342177296,i32*%mc,align 4
store i8*%ma,i8**%e,align 8
%md=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%me=bitcast i8*%ma to i8**
store i8*%md,i8**%me,align 8
%mf=getelementptr inbounds i8,i8*%ma,i64 8
%mg=bitcast i8*%mf to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i1,i64 0,i32 2,i64 0),i8**%mg,align 8
%mh=getelementptr inbounds i8,i8*%ma,i64 16
%mi=bitcast i8*%mh to i32*
store i32 3,i32*%mi,align 4
%mj=call i8*@sml_alloc(i32 inreg 60)#0
%mk=getelementptr inbounds i8,i8*%mj,i64 -4
%ml=bitcast i8*%mk to i32*
store i32 1342177336,i32*%ml,align 4
%mm=getelementptr inbounds i8,i8*%mj,i64 56
%mn=bitcast i8*%mm to i32*
store i32 1,i32*%mn,align 4
%mo=load i8*,i8**%e,align 8
%mp=bitcast i8*%mj to i8**
store i8*%mo,i8**%mp,align 8
call void@sml_raise(i8*inreg%mj)#1
unreachable
mq:
%mr=getelementptr inbounds i8,i8*%l5,i64 8
%ms=bitcast i8*%mr to i8**
%mt=load i8*,i8**%ms,align 8
store i8*%mt,i8**%f,align 8
%mu=call i8*@sml_alloc(i32 inreg 28)#0
%mv=getelementptr inbounds i8,i8*%mu,i64 -4
%mw=bitcast i8*%mv to i32*
store i32 1342177304,i32*%mw,align 4
store i8*%mu,i8**%g,align 8
%mx=getelementptr inbounds i8,i8*%mu,i64 4
%my=bitcast i8*%mx to i32*
store i32 0,i32*%my,align 1
%mz=bitcast i8*%mu to i32*
store i32%lS,i32*%mz,align 4
%mA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mB=getelementptr inbounds i8,i8*%mu,i64 8
%mC=bitcast i8*%mB to i8**
store i8*%mA,i8**%mC,align 8
%mD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mE=getelementptr inbounds i8,i8*%mu,i64 16
%mF=bitcast i8*%mE to i8**
store i8*%mD,i8**%mF,align 8
%mG=getelementptr inbounds i8,i8*%mu,i64 24
%mH=bitcast i8*%mG to i32*
store i32 6,i32*%mH,align 4
%mI=call i8*@sml_alloc(i32 inreg 20)#0
%mJ=getelementptr inbounds i8,i8*%mI,i64 -4
%mK=bitcast i8*%mJ to i32*
store i32 1342177296,i32*%mK,align 4
store i8*%mI,i8**%e,align 8
%mL=getelementptr inbounds i8,i8*%mI,i64 4
%mM=bitcast i8*%mL to i32*
store i32 0,i32*%mM,align 1
%mN=bitcast i8*%mI to i32*
store i32 19,i32*%mN,align 4
%mO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mP=getelementptr inbounds i8,i8*%mI,i64 8
%mQ=bitcast i8*%mP to i8**
store i8*%mO,i8**%mQ,align 8
%mR=getelementptr inbounds i8,i8*%mI,i64 16
%mS=bitcast i8*%mR to i32*
store i32 2,i32*%mS,align 4
%mT=call i8*@sml_alloc(i32 inreg 20)#0
%mU=getelementptr inbounds i8,i8*%mT,i64 -4
%mV=bitcast i8*%mU to i32*
store i32 1342177296,i32*%mV,align 4
store i8*%mT,i8**%f,align 8
%mW=bitcast i8*%mT to i64*
store i64 0,i64*%mW,align 4
%mX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mY=getelementptr inbounds i8,i8*%mT,i64 8
%mZ=bitcast i8*%mY to i8**
store i8*%mX,i8**%mZ,align 8
%m0=getelementptr inbounds i8,i8*%mT,i64 16
%m1=bitcast i8*%m0 to i32*
store i32 2,i32*%m1,align 4
%m2=call i8*@sml_alloc(i32 inreg 20)#0
%m3=getelementptr inbounds i8,i8*%m2,i64 -4
%m4=bitcast i8*%m3 to i32*
store i32 1342177296,i32*%m4,align 4
%m5=load i8*,i8**%d,align 8
%m6=bitcast i8*%m2 to i8**
store i8*%m5,i8**%m6,align 8
%m7=load i8*,i8**%f,align 8
%m8=getelementptr inbounds i8,i8*%m2,i64 8
%m9=bitcast i8*%m8 to i8**
store i8*%m7,i8**%m9,align 8
%na=getelementptr inbounds i8,i8*%m2,i64 16
%nb=bitcast i8*%na to i32*
store i32 3,i32*%nb,align 4
ret i8*%m2
nc:
%nd=getelementptr inbounds i8,i8*%l5,i64 8
%ne=bitcast i8*%nd to i8**
%nf=load i8*,i8**%ne,align 8
store i8*%nf,i8**%f,align 8
%ng=call i8*@sml_alloc(i32 inreg 28)#0
%nh=getelementptr inbounds i8,i8*%ng,i64 -4
%ni=bitcast i8*%nh to i32*
store i32 1342177304,i32*%ni,align 4
store i8*%ng,i8**%g,align 8
%nj=getelementptr inbounds i8,i8*%ng,i64 4
%nk=bitcast i8*%nj to i32*
store i32 0,i32*%nk,align 1
%nl=bitcast i8*%ng to i32*
store i32%lS,i32*%nl,align 4
%nm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nn=getelementptr inbounds i8,i8*%ng,i64 8
%no=bitcast i8*%nn to i8**
store i8*%nm,i8**%no,align 8
%np=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nq=getelementptr inbounds i8,i8*%ng,i64 16
%nr=bitcast i8*%nq to i8**
store i8*%np,i8**%nr,align 8
%ns=getelementptr inbounds i8,i8*%ng,i64 24
%nt=bitcast i8*%ns to i32*
store i32 6,i32*%nt,align 4
%nu=call i8*@sml_alloc(i32 inreg 20)#0
%nv=getelementptr inbounds i8,i8*%nu,i64 -4
%nw=bitcast i8*%nv to i32*
store i32 1342177296,i32*%nw,align 4
store i8*%nu,i8**%e,align 8
%nx=getelementptr inbounds i8,i8*%nu,i64 4
%ny=bitcast i8*%nx to i32*
store i32 0,i32*%ny,align 1
%nz=bitcast i8*%nu to i32*
store i32 19,i32*%nz,align 4
%nA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%nB=getelementptr inbounds i8,i8*%nu,i64 8
%nC=bitcast i8*%nB to i8**
store i8*%nA,i8**%nC,align 8
%nD=getelementptr inbounds i8,i8*%nu,i64 16
%nE=bitcast i8*%nD to i32*
store i32 2,i32*%nE,align 4
%nF=call i8*@sml_alloc(i32 inreg 20)#0
%nG=getelementptr inbounds i8,i8*%nF,i64 -4
%nH=bitcast i8*%nG to i32*
store i32 1342177296,i32*%nH,align 4
store i8*%nF,i8**%f,align 8
%nI=getelementptr inbounds i8,i8*%nF,i64 4
%nJ=bitcast i8*%nI to i32*
store i32 0,i32*%nJ,align 1
%nK=bitcast i8*%nF to i32*
store i32 1,i32*%nK,align 4
%nL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nM=getelementptr inbounds i8,i8*%nF,i64 8
%nN=bitcast i8*%nM to i8**
store i8*%nL,i8**%nN,align 8
%nO=getelementptr inbounds i8,i8*%nF,i64 16
%nP=bitcast i8*%nO to i32*
store i32 2,i32*%nP,align 4
%nQ=call i8*@sml_alloc(i32 inreg 20)#0
%nR=getelementptr inbounds i8,i8*%nQ,i64 -4
%nS=bitcast i8*%nR to i32*
store i32 1342177296,i32*%nS,align 4
%nT=load i8*,i8**%d,align 8
%nU=bitcast i8*%nQ to i8**
store i8*%nT,i8**%nU,align 8
%nV=load i8*,i8**%f,align 8
%nW=getelementptr inbounds i8,i8*%nQ,i64 8
%nX=bitcast i8*%nW to i8**
store i8*%nV,i8**%nX,align 8
%nY=getelementptr inbounds i8,i8*%nQ,i64 16
%nZ=bitcast i8*%nY to i32*
store i32 3,i32*%nZ,align 4
ret i8*%nQ
n0:
%n1=getelementptr inbounds i8,i8*%u,i64 8
%n2=bitcast i8*%n1 to i8**
%n3=load i8*,i8**%n2,align 8
%n4=getelementptr inbounds i8,i8*%n3,i64 8
%n5=bitcast i8*%n4 to i8**
%n6=load i8*,i8**%n5,align 8
store i8*%n6,i8**%g,align 8
%n7=bitcast i8*%n3 to i8**
%n8=load i8*,i8**%n7,align 8
%n9=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%k,align 8
%oa=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%n9,i8*inreg%s,i8*inreg%n8)
%ob=bitcast i8*%oa to i8**
%oc=load i8*,i8**%ob,align 8
store i8*%oc,i8**%d,align 8
%od=getelementptr inbounds i8,i8*%oa,i64 8
%oe=bitcast i8*%od to i8**
%of=load i8*,i8**%oe,align 8
store i8*%of,i8**%e,align 8
%og=call i8*@sml_alloc(i32 inreg 20)#0
%oh=getelementptr inbounds i8,i8*%og,i64 -4
%oi=bitcast i8*%oh to i32*
store i32 1342177296,i32*%oi,align 4
store i8*%og,i8**%f,align 8
%oj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ok=bitcast i8*%og to i8**
store i8*%oj,i8**%ok,align 8
%ol=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%om=getelementptr inbounds i8,i8*%og,i64 8
%on=bitcast i8*%om to i8**
store i8*%ol,i8**%on,align 8
%oo=getelementptr inbounds i8,i8*%og,i64 16
%op=bitcast i8*%oo to i32*
store i32 3,i32*%op,align 4
%oq=call i8*@sml_alloc(i32 inreg 20)#0
%or=getelementptr inbounds i8,i8*%oq,i64 -4
%os=bitcast i8*%or to i32*
store i32 1342177296,i32*%os,align 4
store i8*%oq,i8**%e,align 8
%ot=getelementptr inbounds i8,i8*%oq,i64 4
%ou=bitcast i8*%ot to i32*
store i32 0,i32*%ou,align 1
%ov=bitcast i8*%oq to i32*
store i32 10,i32*%ov,align 4
%ow=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ox=getelementptr inbounds i8,i8*%oq,i64 8
%oy=bitcast i8*%ox to i8**
store i8*%ow,i8**%oy,align 8
%oz=getelementptr inbounds i8,i8*%oq,i64 16
%oA=bitcast i8*%oz to i32*
store i32 2,i32*%oA,align 4
%oB=call i8*@sml_alloc(i32 inreg 20)#0
%oC=getelementptr inbounds i8,i8*%oB,i64 -4
%oD=bitcast i8*%oC to i32*
store i32 1342177296,i32*%oD,align 4
store i8*%oB,i8**%f,align 8
%oE=getelementptr inbounds i8,i8*%oB,i64 4
%oF=bitcast i8*%oE to i32*
store i32 0,i32*%oF,align 1
%oG=bitcast i8*%oB to i32*
store i32 1,i32*%oG,align 4
%oH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oI=getelementptr inbounds i8,i8*%oB,i64 8
%oJ=bitcast i8*%oI to i8**
store i8*%oH,i8**%oJ,align 8
%oK=getelementptr inbounds i8,i8*%oB,i64 16
%oL=bitcast i8*%oK to i32*
store i32 2,i32*%oL,align 4
%oM=call i8*@sml_alloc(i32 inreg 20)#0
%oN=getelementptr inbounds i8,i8*%oM,i64 -4
%oO=bitcast i8*%oN to i32*
store i32 1342177296,i32*%oO,align 4
%oP=load i8*,i8**%d,align 8
%oQ=bitcast i8*%oM to i8**
store i8*%oP,i8**%oQ,align 8
%oR=load i8*,i8**%f,align 8
%oS=getelementptr inbounds i8,i8*%oM,i64 8
%oT=bitcast i8*%oS to i8**
store i8*%oR,i8**%oT,align 8
%oU=getelementptr inbounds i8,i8*%oM,i64 16
%oV=bitcast i8*%oU to i32*
store i32 3,i32*%oV,align 4
ret i8*%oM
oW:
%oX=getelementptr inbounds i8,i8*%u,i64 8
%oY=bitcast i8*%oX to i8**
%oZ=load i8*,i8**%oY,align 8
%o0=getelementptr inbounds i8,i8*%oZ,i64 8
%o1=bitcast i8*%o0 to i8**
%o2=load i8*,i8**%o1,align 8
store i8*%o2,i8**%g,align 8
%o3=bitcast i8*%oZ to i8**
%o4=load i8*,i8**%o3,align 8
%o5=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%k,align 8
%o6=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%o5,i8*inreg%s,i8*inreg%o4)
%o7=bitcast i8*%o6 to i8**
%o8=load i8*,i8**%o7,align 8
store i8*%o8,i8**%d,align 8
%o9=getelementptr inbounds i8,i8*%o6,i64 8
%pa=bitcast i8*%o9 to i8**
%pb=load i8*,i8**%pa,align 8
store i8*%pb,i8**%e,align 8
%pc=call i8*@sml_alloc(i32 inreg 20)#0
%pd=getelementptr inbounds i8,i8*%pc,i64 -4
%pe=bitcast i8*%pd to i32*
store i32 1342177296,i32*%pe,align 4
store i8*%pc,i8**%f,align 8
%pf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pg=bitcast i8*%pc to i8**
store i8*%pf,i8**%pg,align 8
%ph=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pi=getelementptr inbounds i8,i8*%pc,i64 8
%pj=bitcast i8*%pi to i8**
store i8*%ph,i8**%pj,align 8
%pk=getelementptr inbounds i8,i8*%pc,i64 16
%pl=bitcast i8*%pk to i32*
store i32 3,i32*%pl,align 4
%pm=call i8*@sml_alloc(i32 inreg 20)#0
%pn=getelementptr inbounds i8,i8*%pm,i64 -4
%po=bitcast i8*%pn to i32*
store i32 1342177296,i32*%po,align 4
store i8*%pm,i8**%e,align 8
%pp=getelementptr inbounds i8,i8*%pm,i64 4
%pq=bitcast i8*%pp to i32*
store i32 0,i32*%pq,align 1
%pr=bitcast i8*%pm to i32*
store i32 9,i32*%pr,align 4
%ps=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%pt=getelementptr inbounds i8,i8*%pm,i64 8
%pu=bitcast i8*%pt to i8**
store i8*%ps,i8**%pu,align 8
%pv=getelementptr inbounds i8,i8*%pm,i64 16
%pw=bitcast i8*%pv to i32*
store i32 2,i32*%pw,align 4
%px=call i8*@sml_alloc(i32 inreg 20)#0
%py=getelementptr inbounds i8,i8*%px,i64 -4
%pz=bitcast i8*%py to i32*
store i32 1342177296,i32*%pz,align 4
store i8*%px,i8**%f,align 8
%pA=getelementptr inbounds i8,i8*%px,i64 4
%pB=bitcast i8*%pA to i32*
store i32 0,i32*%pB,align 1
%pC=bitcast i8*%px to i32*
store i32 1,i32*%pC,align 4
%pD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pE=getelementptr inbounds i8,i8*%px,i64 8
%pF=bitcast i8*%pE to i8**
store i8*%pD,i8**%pF,align 8
%pG=getelementptr inbounds i8,i8*%px,i64 16
%pH=bitcast i8*%pG to i32*
store i32 2,i32*%pH,align 4
%pI=call i8*@sml_alloc(i32 inreg 20)#0
%pJ=getelementptr inbounds i8,i8*%pI,i64 -4
%pK=bitcast i8*%pJ to i32*
store i32 1342177296,i32*%pK,align 4
%pL=load i8*,i8**%d,align 8
%pM=bitcast i8*%pI to i8**
store i8*%pL,i8**%pM,align 8
%pN=load i8*,i8**%f,align 8
%pO=getelementptr inbounds i8,i8*%pI,i64 8
%pP=bitcast i8*%pO to i8**
store i8*%pN,i8**%pP,align 8
%pQ=getelementptr inbounds i8,i8*%pI,i64 16
%pR=bitcast i8*%pQ to i32*
store i32 3,i32*%pR,align 4
ret i8*%pI
pS:
store i8*null,i8**%k,align 8
%pT=getelementptr inbounds i8,i8*%u,i64 8
%pU=bitcast i8*%pT to i8**
%pV=load i8*,i8**%pU,align 8
%pW=bitcast i8*%pV to i8**
%pX=load i8*,i8**%pW,align 8
store i8*%pX,i8**%f,align 8
%pY=getelementptr inbounds i8,i8*%pV,i64 8
%pZ=bitcast i8*%pY to i8**
%p0=load i8*,i8**%pZ,align 8
store i8*%p0,i8**%g,align 8
%p1=call fastcc i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg 1,i32 inreg 8)
%p2=getelementptr inbounds i8,i8*%p1,i64 16
%p3=bitcast i8*%p2 to i8*(i8*,i8*)**
%p4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p3,align 8
%p5=bitcast i8*%p1 to i8**
%p6=load i8*,i8**%p5,align 8
store i8*%p6,i8**%h,align 8
%p7=load i8*,i8**%f,align 8
%p8=getelementptr inbounds i8,i8*%p7,i64 8
%p9=bitcast i8*%p8 to i8**
%qa=load i8*,i8**%p9,align 8
%qb=call fastcc i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg%qa)
store i8*%qb,i8**%d,align 8
%qc=bitcast i8**%f to i8***
%qd=load i8**,i8***%qc,align 8
%qe=load i8*,i8**%qd,align 8
store i8*%qe,i8**%e,align 8
%qf=call i8*@sml_alloc(i32 inreg 20)#0
%qg=getelementptr inbounds i8,i8*%qf,i64 -4
%qh=bitcast i8*%qg to i32*
store i32 1342177296,i32*%qh,align 4
%qi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%qj=bitcast i8*%qf to i8**
store i8*%qi,i8**%qj,align 8
%qk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ql=getelementptr inbounds i8,i8*%qf,i64 8
%qm=bitcast i8*%ql to i8**
store i8*%qk,i8**%qm,align 8
%qn=getelementptr inbounds i8,i8*%qf,i64 16
%qo=bitcast i8*%qn to i32*
store i32 3,i32*%qo,align 4
%qp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qq=call fastcc i8*%p4(i8*inreg%qp,i8*inreg%qf)
store i8*%qq,i8**%d,align 8
%qr=call i8*@sml_alloc(i32 inreg 20)#0
%qs=getelementptr inbounds i8,i8*%qr,i64 -4
%qt=bitcast i8*%qs to i32*
store i32 1342177296,i32*%qt,align 4
store i8*%qr,i8**%e,align 8
%qu=bitcast i8*%qr to i8**
store i8*null,i8**%qu,align 8
%qv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qw=getelementptr inbounds i8,i8*%qr,i64 8
%qx=bitcast i8*%qw to i8**
store i8*%qv,i8**%qx,align 8
%qy=getelementptr inbounds i8,i8*%qr,i64 16
%qz=bitcast i8*%qy to i32*
store i32 3,i32*%qz,align 4
%qA=call i8*@sml_alloc(i32 inreg 20)#0
%qB=getelementptr inbounds i8,i8*%qA,i64 -4
%qC=bitcast i8*%qB to i32*
store i32 1342177296,i32*%qC,align 4
store i8*%qA,i8**%d,align 8
%qD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%qE=bitcast i8*%qA to i8**
store i8*%qD,i8**%qE,align 8
%qF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qG=getelementptr inbounds i8,i8*%qA,i64 8
%qH=bitcast i8*%qG to i8**
store i8*%qF,i8**%qH,align 8
%qI=getelementptr inbounds i8,i8*%qA,i64 16
%qJ=bitcast i8*%qI to i32*
store i32 3,i32*%qJ,align 4
%qK=call i8*@sml_alloc(i32 inreg 20)#0
%qL=getelementptr inbounds i8,i8*%qK,i64 -4
%qM=bitcast i8*%qL to i32*
store i32 1342177296,i32*%qM,align 4
store i8*%qK,i8**%f,align 8
%qN=getelementptr inbounds i8,i8*%qK,i64 4
%qO=bitcast i8*%qN to i32*
store i32 0,i32*%qO,align 1
%qP=bitcast i8*%qK to i32*
store i32 4,i32*%qP,align 4
%qQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qR=getelementptr inbounds i8,i8*%qK,i64 8
%qS=bitcast i8*%qR to i8**
store i8*%qQ,i8**%qS,align 8
%qT=getelementptr inbounds i8,i8*%qK,i64 16
%qU=bitcast i8*%qT to i32*
store i32 2,i32*%qU,align 4
%qV=call i8*@sml_alloc(i32 inreg 20)#0
%qW=getelementptr inbounds i8,i8*%qV,i64 -4
%qX=bitcast i8*%qW to i32*
store i32 1342177296,i32*%qX,align 4
store i8*%qV,i8**%g,align 8
%qY=getelementptr inbounds i8,i8*%qV,i64 4
%qZ=bitcast i8*%qY to i32*
store i32 0,i32*%qZ,align 1
%q0=bitcast i8*%qV to i32*
store i32 1,i32*%q0,align 4
%q1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%q2=getelementptr inbounds i8,i8*%qV,i64 8
%q3=bitcast i8*%q2 to i8**
store i8*%q1,i8**%q3,align 8
%q4=getelementptr inbounds i8,i8*%qV,i64 16
%q5=bitcast i8*%q4 to i32*
store i32 2,i32*%q5,align 4
%q6=call i8*@sml_alloc(i32 inreg 20)#0
%q7=getelementptr inbounds i8,i8*%q6,i64 -4
%q8=bitcast i8*%q7 to i32*
store i32 1342177296,i32*%q8,align 4
store i8*%q6,i8**%d,align 8
%q9=load i8*,i8**%e,align 8
%ra=bitcast i8*%q6 to i8**
store i8*%q9,i8**%ra,align 8
%rb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rc=getelementptr inbounds i8,i8*%q6,i64 8
%rd=bitcast i8*%rc to i8**
store i8*%rb,i8**%rd,align 8
%re=getelementptr inbounds i8,i8*%q6,i64 16
%rf=bitcast i8*%re to i32*
store i32 3,i32*%rf,align 4
%rg=bitcast i8*%q9 to i8**
%rh=load i8*,i8**%rg,align 8
store i8*%rh,i8**%e,align 8
%ri=getelementptr inbounds i8,i8*%q9,i64 8
%rj=bitcast i8*%ri to i8**
%rk=load i8*,i8**%rj,align 8
store i8*%rk,i8**%f,align 8
%rl=call i8*@sml_alloc(i32 inreg 20)#0
%rm=getelementptr inbounds i8,i8*%rl,i64 -4
%rn=bitcast i8*%rm to i32*
store i32 1342177296,i32*%rn,align 4
store i8*%rl,i8**%g,align 8
%ro=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rp=bitcast i8*%rl to i8**
store i8*%ro,i8**%rp,align 8
%rq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%rr=getelementptr inbounds i8,i8*%rl,i64 8
%rs=bitcast i8*%rr to i8**
store i8*%rq,i8**%rs,align 8
%rt=getelementptr inbounds i8,i8*%rl,i64 16
%ru=bitcast i8*%rt to i32*
store i32 3,i32*%ru,align 4
%rv=load i8*,i8**%d,align 8
%rw=getelementptr inbounds i8,i8*%rv,i64 8
%rx=bitcast i8*%rw to i8**
%ry=load i8*,i8**%rx,align 8
store i8*%ry,i8**%d,align 8
%rz=call i8*@sml_alloc(i32 inreg 20)#0
%rA=getelementptr inbounds i8,i8*%rz,i64 -4
%rB=bitcast i8*%rA to i32*
store i32 1342177296,i32*%rB,align 4
%rC=load i8*,i8**%g,align 8
%rD=bitcast i8*%rz to i8**
store i8*%rC,i8**%rD,align 8
%rE=load i8*,i8**%d,align 8
%rF=getelementptr inbounds i8,i8*%rz,i64 8
%rG=bitcast i8*%rF to i8**
store i8*%rE,i8**%rG,align 8
%rH=getelementptr inbounds i8,i8*%rz,i64 16
%rI=bitcast i8*%rH to i32*
store i32 3,i32*%rI,align 4
ret i8*%rz
rJ:
%rK=getelementptr inbounds i8,i8*%u,i64 8
%rL=bitcast i8*%rK to i8**
%rM=load i8*,i8**%rL,align 8
%rN=bitcast i8*%rM to i8**
%rO=load i8*,i8**%rN,align 8
store i8*%rO,i8**%d,align 8
%rP=getelementptr inbounds i8,i8*%rM,i64 8
%rQ=bitcast i8*%rP to i8**
%rR=load i8*,i8**%rQ,align 8
store i8*%rR,i8**%e,align 8
%rS=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%rT=getelementptr inbounds i8,i8*%rS,i64 8
%rU=bitcast i8*%rT to i8**
%rV=load i8*,i8**%rU,align 8
store i8*%rV,i8**%f,align 8
%rW=call i8*@sml_alloc(i32 inreg 20)#0
%rX=getelementptr inbounds i8,i8*%rW,i64 -4
%rY=bitcast i8*%rX to i32*
store i32 1342177296,i32*%rY,align 4
store i8*%rW,i8**%g,align 8
%rZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r0=bitcast i8*%rW to i8**
store i8*%rZ,i8**%r0,align 8
%r1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r2=getelementptr inbounds i8,i8*%rW,i64 8
%r3=bitcast i8*%r2 to i8**
store i8*%r1,i8**%r3,align 8
%r4=getelementptr inbounds i8,i8*%rW,i64 16
%r5=bitcast i8*%r4 to i32*
store i32 3,i32*%r5,align 4
%r6=call i8*@sml_alloc(i32 inreg 20)#0
%r7=getelementptr inbounds i8,i8*%r6,i64 -4
%r8=bitcast i8*%r7 to i32*
store i32 1342177296,i32*%r8,align 4
store i8*%r6,i8**%d,align 8
%r9=getelementptr inbounds i8,i8*%r6,i64 4
%sa=bitcast i8*%r9 to i32*
store i32 0,i32*%sa,align 1
%sb=bitcast i8*%r6 to i32*
store i32 3,i32*%sb,align 4
%sc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sd=getelementptr inbounds i8,i8*%r6,i64 8
%se=bitcast i8*%sd to i8**
store i8*%sc,i8**%se,align 8
%sf=getelementptr inbounds i8,i8*%r6,i64 16
%sg=bitcast i8*%sf to i32*
store i32 2,i32*%sg,align 4
%sh=call i8*@sml_alloc(i32 inreg 20)#0
%si=getelementptr inbounds i8,i8*%sh,i64 -4
%sj=bitcast i8*%si to i32*
store i32 1342177296,i32*%sj,align 4
store i8*%sh,i8**%e,align 8
%sk=getelementptr inbounds i8,i8*%sh,i64 4
%sl=bitcast i8*%sk to i32*
store i32 0,i32*%sl,align 1
%sm=bitcast i8*%sh to i32*
store i32 1,i32*%sm,align 4
%sn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%so=getelementptr inbounds i8,i8*%sh,i64 8
%sp=bitcast i8*%so to i8**
store i8*%sn,i8**%sp,align 8
%sq=getelementptr inbounds i8,i8*%sh,i64 16
%sr=bitcast i8*%sq to i32*
store i32 2,i32*%sr,align 4
%ss=call i8*@sml_alloc(i32 inreg 20)#0
%st=getelementptr inbounds i8,i8*%ss,i64 -4
%su=bitcast i8*%st to i32*
store i32 1342177296,i32*%su,align 4
%sv=load i8*,i8**%f,align 8
%sw=bitcast i8*%ss to i8**
store i8*%sv,i8**%sw,align 8
%sx=load i8*,i8**%e,align 8
%sy=getelementptr inbounds i8,i8*%ss,i64 8
%sz=bitcast i8*%sy to i8**
store i8*%sx,i8**%sz,align 8
%sA=getelementptr inbounds i8,i8*%ss,i64 16
%sB=bitcast i8*%sA to i32*
store i32 3,i32*%sB,align 4
ret i8*%ss
sC:
store i8*null,i8**%f,align 8
%sD=getelementptr inbounds i8,i8*%u,i64 8
%sE=bitcast i8*%sD to i8**
%sF=load i8*,i8**%sE,align 8
store i8*%sF,i8**%d,align 8
%sG=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%sH=getelementptr inbounds i8,i8*%sG,i64 8
%sI=bitcast i8*%sH to i8**
%sJ=load i8*,i8**%sI,align 8
store i8*%sJ,i8**%e,align 8
%sK=call i8*@sml_alloc(i32 inreg 20)#0
%sL=getelementptr inbounds i8,i8*%sK,i64 -4
%sM=bitcast i8*%sL to i32*
store i32 1342177296,i32*%sM,align 4
store i8*%sK,i8**%f,align 8
%sN=bitcast i8*%sK to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@i0,i64 0,i32 2)to i8*),i8**%sN,align 8
%sO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sP=getelementptr inbounds i8,i8*%sK,i64 8
%sQ=bitcast i8*%sP to i8**
store i8*%sO,i8**%sQ,align 8
%sR=getelementptr inbounds i8,i8*%sK,i64 16
%sS=bitcast i8*%sR to i32*
store i32 3,i32*%sS,align 4
%sT=call i8*@sml_alloc(i32 inreg 20)#0
%sU=getelementptr inbounds i8,i8*%sT,i64 -4
%sV=bitcast i8*%sU to i32*
store i32 1342177296,i32*%sV,align 4
store i8*%sT,i8**%d,align 8
%sW=getelementptr inbounds i8,i8*%sT,i64 4
%sX=bitcast i8*%sW to i32*
store i32 0,i32*%sX,align 1
%sY=bitcast i8*%sT to i32*
store i32 6,i32*%sY,align 4
%sZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%s0=getelementptr inbounds i8,i8*%sT,i64 8
%s1=bitcast i8*%s0 to i8**
store i8*%sZ,i8**%s1,align 8
%s2=getelementptr inbounds i8,i8*%sT,i64 16
%s3=bitcast i8*%s2 to i32*
store i32 2,i32*%s3,align 4
%s4=call i8*@sml_alloc(i32 inreg 20)#0
%s5=getelementptr inbounds i8,i8*%s4,i64 -4
%s6=bitcast i8*%s5 to i32*
store i32 1342177296,i32*%s6,align 4
store i8*%s4,i8**%f,align 8
%s7=bitcast i8*%s4 to i64*
store i64 0,i64*%s7,align 4
%s8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%s9=getelementptr inbounds i8,i8*%s4,i64 8
%ta=bitcast i8*%s9 to i8**
store i8*%s8,i8**%ta,align 8
%tb=getelementptr inbounds i8,i8*%s4,i64 16
%tc=bitcast i8*%tb to i32*
store i32 2,i32*%tc,align 4
%td=call i8*@sml_alloc(i32 inreg 20)#0
%te=getelementptr inbounds i8,i8*%td,i64 -4
%tf=bitcast i8*%te to i32*
store i32 1342177296,i32*%tf,align 4
%tg=load i8*,i8**%e,align 8
%th=bitcast i8*%td to i8**
store i8*%tg,i8**%th,align 8
%ti=load i8*,i8**%f,align 8
%tj=getelementptr inbounds i8,i8*%td,i64 8
%tk=bitcast i8*%tj to i8**
store i8*%ti,i8**%tk,align 8
%tl=getelementptr inbounds i8,i8*%td,i64 16
%tm=bitcast i8*%tl to i32*
store i32 3,i32*%tm,align 4
ret i8*%td
tn:
store i8*null,i8**%f,align 8
%to=getelementptr inbounds i8,i8*%u,i64 8
%tp=bitcast i8*%to to i8**
%tq=load i8*,i8**%tp,align 8
store i8*%tq,i8**%d,align 8
%tr=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ts=getelementptr inbounds i8,i8*%tr,i64 8
%tt=bitcast i8*%ts to i8**
%tu=load i8*,i8**%tt,align 8
store i8*%tu,i8**%e,align 8
%tv=call i8*@sml_alloc(i32 inreg 20)#0
%tw=getelementptr inbounds i8,i8*%tv,i64 -4
%tx=bitcast i8*%tw to i32*
store i32 1342177296,i32*%tx,align 4
store i8*%tv,i8**%f,align 8
%ty=bitcast i8*%tv to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@iZ,i64 0,i32 2)to i8*),i8**%ty,align 8
%tz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tA=getelementptr inbounds i8,i8*%tv,i64 8
%tB=bitcast i8*%tA to i8**
store i8*%tz,i8**%tB,align 8
%tC=getelementptr inbounds i8,i8*%tv,i64 16
%tD=bitcast i8*%tC to i32*
store i32 3,i32*%tD,align 4
%tE=call i8*@sml_alloc(i32 inreg 20)#0
%tF=getelementptr inbounds i8,i8*%tE,i64 -4
%tG=bitcast i8*%tF to i32*
store i32 1342177296,i32*%tG,align 4
store i8*%tE,i8**%d,align 8
%tH=getelementptr inbounds i8,i8*%tE,i64 4
%tI=bitcast i8*%tH to i32*
store i32 0,i32*%tI,align 1
%tJ=bitcast i8*%tE to i32*
store i32 6,i32*%tJ,align 4
%tK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%tL=getelementptr inbounds i8,i8*%tE,i64 8
%tM=bitcast i8*%tL to i8**
store i8*%tK,i8**%tM,align 8
%tN=getelementptr inbounds i8,i8*%tE,i64 16
%tO=bitcast i8*%tN to i32*
store i32 2,i32*%tO,align 4
%tP=call i8*@sml_alloc(i32 inreg 20)#0
%tQ=getelementptr inbounds i8,i8*%tP,i64 -4
%tR=bitcast i8*%tQ to i32*
store i32 1342177296,i32*%tR,align 4
store i8*%tP,i8**%f,align 8
%tS=bitcast i8*%tP to i64*
store i64 0,i64*%tS,align 4
%tT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tU=getelementptr inbounds i8,i8*%tP,i64 8
%tV=bitcast i8*%tU to i8**
store i8*%tT,i8**%tV,align 8
%tW=getelementptr inbounds i8,i8*%tP,i64 16
%tX=bitcast i8*%tW to i32*
store i32 2,i32*%tX,align 4
%tY=call i8*@sml_alloc(i32 inreg 20)#0
%tZ=getelementptr inbounds i8,i8*%tY,i64 -4
%t0=bitcast i8*%tZ to i32*
store i32 1342177296,i32*%t0,align 4
%t1=load i8*,i8**%e,align 8
%t2=bitcast i8*%tY to i8**
store i8*%t1,i8**%t2,align 8
%t3=load i8*,i8**%f,align 8
%t4=getelementptr inbounds i8,i8*%tY,i64 8
%t5=bitcast i8*%t4 to i8**
store i8*%t3,i8**%t5,align 8
%t6=getelementptr inbounds i8,i8*%tY,i64 16
%t7=bitcast i8*%t6 to i32*
store i32 3,i32*%t7,align 4
ret i8*%tY
t8:
store i8*null,i8**%f,align 8
%t9=getelementptr inbounds i8,i8*%u,i64 8
%ua=bitcast i8*%t9 to i8**
%ub=load i8*,i8**%ua,align 8
store i8*%ub,i8**%d,align 8
%uc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ud=getelementptr inbounds i8,i8*%uc,i64 8
%ue=bitcast i8*%ud to i8**
%uf=load i8*,i8**%ue,align 8
store i8*%uf,i8**%e,align 8
%ug=call i8*@sml_alloc(i32 inreg 20)#0
%uh=getelementptr inbounds i8,i8*%ug,i64 -4
%ui=bitcast i8*%uh to i32*
store i32 1342177296,i32*%ui,align 4
store i8*%ug,i8**%f,align 8
%uj=getelementptr inbounds i8,i8*%ug,i64 4
%uk=bitcast i8*%uj to i32*
store i32 0,i32*%uk,align 1
%ul=bitcast i8*%ug to i32*
store i32 17,i32*%ul,align 4
%um=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%un=getelementptr inbounds i8,i8*%ug,i64 8
%uo=bitcast i8*%un to i8**
store i8*%um,i8**%uo,align 8
%up=getelementptr inbounds i8,i8*%ug,i64 16
%uq=bitcast i8*%up to i32*
store i32 2,i32*%uq,align 4
%ur=call i8*@sml_alloc(i32 inreg 20)#0
%us=getelementptr inbounds i8,i8*%ur,i64 -4
%ut=bitcast i8*%us to i32*
store i32 1342177296,i32*%ut,align 4
store i8*%ur,i8**%d,align 8
%uu=getelementptr inbounds i8,i8*%ur,i64 4
%uv=bitcast i8*%uu to i32*
store i32 0,i32*%uv,align 1
%uw=bitcast i8*%ur to i32*
store i32 1,i32*%uw,align 4
%ux=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%uy=getelementptr inbounds i8,i8*%ur,i64 8
%uz=bitcast i8*%uy to i8**
store i8*%ux,i8**%uz,align 8
%uA=getelementptr inbounds i8,i8*%ur,i64 16
%uB=bitcast i8*%uA to i32*
store i32 2,i32*%uB,align 4
%uC=call i8*@sml_alloc(i32 inreg 20)#0
%uD=getelementptr inbounds i8,i8*%uC,i64 -4
%uE=bitcast i8*%uD to i32*
store i32 1342177296,i32*%uE,align 4
%uF=load i8*,i8**%e,align 8
%uG=bitcast i8*%uC to i8**
store i8*%uF,i8**%uG,align 8
%uH=load i8*,i8**%d,align 8
%uI=getelementptr inbounds i8,i8*%uC,i64 8
%uJ=bitcast i8*%uI to i8**
store i8*%uH,i8**%uJ,align 8
%uK=getelementptr inbounds i8,i8*%uC,i64 16
%uL=bitcast i8*%uK to i32*
store i32 3,i32*%uL,align 4
ret i8*%uC
uM:
%uN=getelementptr inbounds i8,i8*%u,i64 8
%uO=bitcast i8*%uN to i8**
%uP=load i8*,i8**%uO,align 8
%uQ=bitcast i8*%uP to i8**
%uR=load i8*,i8**%uQ,align 8
%uS=icmp eq i8*%uR,null
br i1%uS,label%ve,label%uT
uT:
%uU=bitcast i8*%uR to i32*
%uV=load i32,i32*%uU,align 4
switch i32%uV,label%uW[
i32 1,label%Bp
i32 5,label%Ap
i32 3,label%zp
i32 2,label%yp
i32 0,label%xt
i32 4,label%ve
]
uW:
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%uX=load i8*,i8**@_SMLZ5Match,align 8
store i8*%uX,i8**%d,align 8
%uY=call i8*@sml_alloc(i32 inreg 20)#0
%uZ=getelementptr inbounds i8,i8*%uY,i64 -4
%u0=bitcast i8*%uZ to i32*
store i32 1342177296,i32*%u0,align 4
store i8*%uY,i8**%e,align 8
%u1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u2=bitcast i8*%uY to i8**
store i8*%u1,i8**%u2,align 8
%u3=getelementptr inbounds i8,i8*%uY,i64 8
%u4=bitcast i8*%u3 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jg,i64 0,i32 2,i64 0),i8**%u4,align 8
%u5=getelementptr inbounds i8,i8*%uY,i64 16
%u6=bitcast i8*%u5 to i32*
store i32 3,i32*%u6,align 4
%u7=call i8*@sml_alloc(i32 inreg 60)#0
%u8=getelementptr inbounds i8,i8*%u7,i64 -4
%u9=bitcast i8*%u8 to i32*
store i32 1342177336,i32*%u9,align 4
%va=getelementptr inbounds i8,i8*%u7,i64 56
%vb=bitcast i8*%va to i32*
store i32 1,i32*%vb,align 4
%vc=load i8*,i8**%e,align 8
%vd=bitcast i8*%u7 to i8**
store i8*%vc,i8**%vd,align 8
call void@sml_raise(i8*inreg%u7)#1
unreachable
ve:
%vf=getelementptr inbounds i8,i8*%uP,i64 8
%vg=bitcast i8*%vf to i8**
%vh=load i8*,i8**%vg,align 8
store i8*%vh,i8**%g,align 8
%vi=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%vi,i8**%d,align 8
%vj=call i8*@sml_alloc(i32 inreg 20)#0
%vk=getelementptr inbounds i8,i8*%vj,i64 -4
%vl=bitcast i8*%vk to i32*
store i32 1342177296,i32*%vl,align 4
store i8*%vj,i8**%e,align 8
%vm=load i8*,i8**%d,align 8
%vn=bitcast i8*%vj to i8**
store i8*%vm,i8**%vn,align 8
%vo=getelementptr inbounds i8,i8*%vj,i64 8
%vp=bitcast i8*%vo to i8**
store i8*null,i8**%vp,align 8
%vq=getelementptr inbounds i8,i8*%vj,i64 16
%vr=bitcast i8*%vq to i32*
store i32 3,i32*%vr,align 4
%vs=call i8*@sml_alloc(i32 inreg 20)#0
%vt=getelementptr inbounds i8,i8*%vs,i64 -4
%vu=bitcast i8*%vt to i32*
store i32 1342177296,i32*%vu,align 4
store i8*%vs,i8**%f,align 8
%vv=getelementptr inbounds i8,i8*%vs,i64 4
%vw=bitcast i8*%vv to i32*
store i32 0,i32*%vw,align 1
%vx=bitcast i8*%vs to i32*
store i32 2,i32*%vx,align 4
%vy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vz=getelementptr inbounds i8,i8*%vs,i64 8
%vA=bitcast i8*%vz to i8**
store i8*%vy,i8**%vA,align 8
%vB=getelementptr inbounds i8,i8*%vs,i64 16
%vC=bitcast i8*%vB to i32*
store i32 2,i32*%vC,align 4
%vD=call i8*@sml_alloc(i32 inreg 20)#0
%vE=getelementptr inbounds i8,i8*%vD,i64 -4
%vF=bitcast i8*%vE to i32*
store i32 1342177296,i32*%vF,align 4
store i8*%vD,i8**%e,align 8
%vG=bitcast i8*%vD to i8**
store i8*null,i8**%vG,align 8
%vH=load i8*,i8**%g,align 8
%vI=getelementptr inbounds i8,i8*%vD,i64 8
%vJ=bitcast i8*%vI to i8**
store i8*%vH,i8**%vJ,align 8
%vK=getelementptr inbounds i8,i8*%vD,i64 16
%vL=bitcast i8*%vK to i32*
store i32 3,i32*%vL,align 4
%vM=call i8*@sml_alloc(i32 inreg 20)#0
%vN=getelementptr inbounds i8,i8*%vM,i64 -4
%vO=bitcast i8*%vN to i32*
store i32 1342177296,i32*%vO,align 4
store i8*%vM,i8**%h,align 8
%vP=getelementptr inbounds i8,i8*%vM,i64 4
%vQ=bitcast i8*%vP to i32*
store i32 0,i32*%vQ,align 1
%vR=bitcast i8*%vM to i32*
store i32 2,i32*%vR,align 4
%vS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vT=getelementptr inbounds i8,i8*%vM,i64 8
%vU=bitcast i8*%vT to i8**
store i8*%vS,i8**%vU,align 8
%vV=getelementptr inbounds i8,i8*%vM,i64 16
%vW=bitcast i8*%vV to i32*
store i32 2,i32*%vW,align 4
%vX=call i8*@sml_alloc(i32 inreg 28)#0
%vY=getelementptr inbounds i8,i8*%vX,i64 -4
%vZ=bitcast i8*%vY to i32*
store i32 1342177304,i32*%vZ,align 4
store i8*%vX,i8**%e,align 8
%v0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%v1=bitcast i8*%vX to i8**
store i8*%v0,i8**%v1,align 8
%v2=load i8*,i8**%g,align 8
%v3=getelementptr inbounds i8,i8*%vX,i64 8
%v4=bitcast i8*%v3 to i8**
store i8*%v2,i8**%v4,align 8
%v5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%v6=getelementptr inbounds i8,i8*%vX,i64 16
%v7=bitcast i8*%v6 to i8**
store i8*%v5,i8**%v7,align 8
%v8=getelementptr inbounds i8,i8*%vX,i64 24
%v9=bitcast i8*%v8 to i32*
store i32 7,i32*%v9,align 4
%wa=call i8*@sml_alloc(i32 inreg 20)#0
%wb=getelementptr inbounds i8,i8*%wa,i64 -4
%wc=bitcast i8*%wb to i32*
store i32 1342177296,i32*%wc,align 4
%wd=load i8*,i8**%e,align 8
%we=bitcast i8*%wa to i8**
store i8*%wd,i8**%we,align 8
%wf=getelementptr inbounds i8,i8*%wa,i64 8
%wg=bitcast i8*%wf to i8**
store i8*null,i8**%wg,align 8
%wh=getelementptr inbounds i8,i8*%wa,i64 16
%wi=bitcast i8*%wh to i32*
store i32 3,i32*%wi,align 4
store i8*null,i8**%f,align 8
%wj=call i8*@sml_alloc(i32 inreg 20)#0
%wk=getelementptr inbounds i8,i8*%wj,i64 -4
%wl=bitcast i8*%wk to i32*
store i32 1342177296,i32*%wl,align 4
store i8*%wj,i8**%h,align 8
%wm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wn=bitcast i8*%wj to i8**
store i8*%wm,i8**%wn,align 8
%wo=load i8*,i8**%f,align 8
%wp=getelementptr inbounds i8,i8*%wj,i64 8
%wq=bitcast i8*%wp to i8**
store i8*%wo,i8**%wq,align 8
%wr=getelementptr inbounds i8,i8*%wj,i64 16
%ws=bitcast i8*%wr to i32*
store i32 3,i32*%ws,align 4
%wt=bitcast i8**%k to i8***
%wu=load i8**,i8***%wt,align 8
store i8*null,i8**%k,align 8
%wv=load i8*,i8**%wu,align 8
store i8*%wv,i8**%f,align 8
%ww=call i8*@sml_alloc(i32 inreg 20)#0
%wx=getelementptr inbounds i8,i8*%ww,i64 -4
%wy=bitcast i8*%wx to i32*
store i32 1342177296,i32*%wy,align 4
store i8*%ww,i8**%e,align 8
%wz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%wA=bitcast i8*%ww to i8**
store i8*%wz,i8**%wA,align 8
%wB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wC=getelementptr inbounds i8,i8*%ww,i64 8
%wD=bitcast i8*%wC to i8**
store i8*%wB,i8**%wD,align 8
%wE=getelementptr inbounds i8,i8*%ww,i64 16
%wF=bitcast i8*%wE to i32*
store i32 3,i32*%wF,align 4
%wG=call i8*@sml_alloc(i32 inreg 20)#0
%wH=getelementptr inbounds i8,i8*%wG,i64 -4
%wI=bitcast i8*%wH to i32*
store i32 1342177296,i32*%wI,align 4
store i8*%wG,i8**%f,align 8
%wJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wK=bitcast i8*%wG to i8**
store i8*%wJ,i8**%wK,align 8
%wL=getelementptr inbounds i8,i8*%wG,i64 8
%wM=bitcast i8*%wL to i8**
store i8*null,i8**%wM,align 8
%wN=getelementptr inbounds i8,i8*%wG,i64 16
%wO=bitcast i8*%wN to i32*
store i32 3,i32*%wO,align 4
%wP=call i8*@sml_alloc(i32 inreg 20)#0
%wQ=getelementptr inbounds i8,i8*%wP,i64 -4
%wR=bitcast i8*%wQ to i32*
store i32 1342177296,i32*%wR,align 4
store i8*%wP,i8**%d,align 8
%wS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wT=bitcast i8*%wP to i8**
store i8*%wS,i8**%wT,align 8
%wU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wV=getelementptr inbounds i8,i8*%wP,i64 8
%wW=bitcast i8*%wV to i8**
store i8*%wU,i8**%wW,align 8
%wX=getelementptr inbounds i8,i8*%wP,i64 16
%wY=bitcast i8*%wX to i32*
store i32 3,i32*%wY,align 4
%wZ=call i8*@sml_alloc(i32 inreg 20)#0
%w0=getelementptr inbounds i8,i8*%wZ,i64 -4
%w1=bitcast i8*%w0 to i32*
store i32 1342177296,i32*%w1,align 4
store i8*%wZ,i8**%f,align 8
%w2=getelementptr inbounds i8,i8*%wZ,i64 4
%w3=bitcast i8*%w2 to i32*
store i32 0,i32*%w3,align 1
%w4=bitcast i8*%wZ to i32*
store i32 16,i32*%w4,align 4
%w5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w6=getelementptr inbounds i8,i8*%wZ,i64 8
%w7=bitcast i8*%w6 to i8**
store i8*%w5,i8**%w7,align 8
%w8=getelementptr inbounds i8,i8*%wZ,i64 16
%w9=bitcast i8*%w8 to i32*
store i32 2,i32*%w9,align 4
%xa=call i8*@sml_alloc(i32 inreg 20)#0
%xb=getelementptr inbounds i8,i8*%xa,i64 -4
%xc=bitcast i8*%xb to i32*
store i32 1342177296,i32*%xc,align 4
store i8*%xa,i8**%d,align 8
%xd=bitcast i8*%xa to i64*
store i64 0,i64*%xd,align 4
%xe=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xf=getelementptr inbounds i8,i8*%xa,i64 8
%xg=bitcast i8*%xf to i8**
store i8*%xe,i8**%xg,align 8
%xh=getelementptr inbounds i8,i8*%xa,i64 16
%xi=bitcast i8*%xh to i32*
store i32 2,i32*%xi,align 4
%xj=call i8*@sml_alloc(i32 inreg 20)#0
%xk=getelementptr inbounds i8,i8*%xj,i64 -4
%xl=bitcast i8*%xk to i32*
store i32 1342177296,i32*%xl,align 4
%xm=load i8*,i8**%e,align 8
%xn=bitcast i8*%xj to i8**
store i8*%xm,i8**%xn,align 8
%xo=load i8*,i8**%d,align 8
%xp=getelementptr inbounds i8,i8*%xj,i64 8
%xq=bitcast i8*%xp to i8**
store i8*%xo,i8**%xq,align 8
%xr=getelementptr inbounds i8,i8*%xj,i64 16
%xs=bitcast i8*%xr to i32*
store i32 3,i32*%xs,align 4
ret i8*%xj
xt:
%xu=getelementptr inbounds i8,i8*%uR,i64 4
%xv=load i8,i8*%xu,align 1
%xw=getelementptr inbounds i8,i8*%uP,i64 8
%xx=bitcast i8*%xw to i8**
%xy=load i8*,i8**%xx,align 8
store i8*%xy,i8**%d,align 8
%xz=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%xA=getelementptr inbounds i8,i8*%xz,i64 8
%xB=bitcast i8*%xA to i8**
%xC=load i8*,i8**%xB,align 8
store i8*%xC,i8**%e,align 8
%xD=call i8*@sml_alloc(i32 inreg 12)#0
%xE=getelementptr inbounds i8,i8*%xD,i64 -4
%xF=bitcast i8*%xE to i32*
store i32 1342177288,i32*%xF,align 4
store i8*%xD,i8**%g,align 8
%xG=getelementptr inbounds i8,i8*%xD,i64 5
call void@llvm.memset.p0i8.i32(i8*%xG,i8 0,i32 3,i1 false)
%xH=bitcast i8*%xD to i32*
store i32 1,i32*%xH,align 4
%xI=getelementptr inbounds i8,i8*%xD,i64 4
store i8%xv,i8*%xI,align 1
%xJ=getelementptr inbounds i8,i8*%xD,i64 8
%xK=bitcast i8*%xJ to i32*
store i32 0,i32*%xK,align 4
%xL=call i8*@sml_alloc(i32 inreg 20)#0
%xM=getelementptr inbounds i8,i8*%xL,i64 -4
%xN=bitcast i8*%xM to i32*
store i32 1342177296,i32*%xN,align 4
store i8*%xL,i8**%f,align 8
%xO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xP=bitcast i8*%xL to i8**
store i8*%xO,i8**%xP,align 8
%xQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xR=getelementptr inbounds i8,i8*%xL,i64 8
%xS=bitcast i8*%xR to i8**
store i8*%xQ,i8**%xS,align 8
%xT=getelementptr inbounds i8,i8*%xL,i64 16
%xU=bitcast i8*%xT to i32*
store i32 3,i32*%xU,align 4
%xV=call i8*@sml_alloc(i32 inreg 20)#0
%xW=getelementptr inbounds i8,i8*%xV,i64 -4
%xX=bitcast i8*%xW to i32*
store i32 1342177296,i32*%xX,align 4
store i8*%xV,i8**%d,align 8
%xY=getelementptr inbounds i8,i8*%xV,i64 4
%xZ=bitcast i8*%xY to i32*
store i32 0,i32*%xZ,align 1
%x0=bitcast i8*%xV to i32*
store i32 6,i32*%x0,align 4
%x1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%x2=getelementptr inbounds i8,i8*%xV,i64 8
%x3=bitcast i8*%x2 to i8**
store i8*%x1,i8**%x3,align 8
%x4=getelementptr inbounds i8,i8*%xV,i64 16
%x5=bitcast i8*%x4 to i32*
store i32 2,i32*%x5,align 4
%x6=call i8*@sml_alloc(i32 inreg 20)#0
%x7=getelementptr inbounds i8,i8*%x6,i64 -4
%x8=bitcast i8*%x7 to i32*
store i32 1342177296,i32*%x8,align 4
store i8*%x6,i8**%f,align 8
%x9=bitcast i8*%x6 to i64*
store i64 0,i64*%x9,align 4
%ya=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yb=getelementptr inbounds i8,i8*%x6,i64 8
%yc=bitcast i8*%yb to i8**
store i8*%ya,i8**%yc,align 8
%yd=getelementptr inbounds i8,i8*%x6,i64 16
%ye=bitcast i8*%yd to i32*
store i32 2,i32*%ye,align 4
%yf=call i8*@sml_alloc(i32 inreg 20)#0
%yg=getelementptr inbounds i8,i8*%yf,i64 -4
%yh=bitcast i8*%yg to i32*
store i32 1342177296,i32*%yh,align 4
%yi=load i8*,i8**%e,align 8
%yj=bitcast i8*%yf to i8**
store i8*%yi,i8**%yj,align 8
%yk=load i8*,i8**%f,align 8
%yl=getelementptr inbounds i8,i8*%yf,i64 8
%ym=bitcast i8*%yl to i8**
store i8*%yk,i8**%ym,align 8
%yn=getelementptr inbounds i8,i8*%yf,i64 16
%yo=bitcast i8*%yn to i32*
store i32 3,i32*%yo,align 4
ret i8*%yf
yp:
%yq=getelementptr inbounds i8,i8*%uR,i64 8
%yr=bitcast i8*%yq to i8**
%ys=load i8*,i8**%yr,align 8
store i8*%ys,i8**%d,align 8
%yt=getelementptr inbounds i8,i8*%uP,i64 8
%yu=bitcast i8*%yt to i8**
%yv=load i8*,i8**%yu,align 8
store i8*%yv,i8**%e,align 8
%yw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%yx=getelementptr inbounds i8,i8*%yw,i64 8
%yy=bitcast i8*%yx to i8**
%yz=load i8*,i8**%yy,align 8
store i8*%yz,i8**%f,align 8
%yA=call i8*@sml_alloc(i32 inreg 20)#0
%yB=getelementptr inbounds i8,i8*%yA,i64 -4
%yC=bitcast i8*%yB to i32*
store i32 1342177296,i32*%yC,align 4
store i8*%yA,i8**%g,align 8
%yD=getelementptr inbounds i8,i8*%yA,i64 4
%yE=bitcast i8*%yD to i32*
store i32 0,i32*%yE,align 1
%yF=bitcast i8*%yA to i32*
store i32 3,i32*%yF,align 4
%yG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yH=getelementptr inbounds i8,i8*%yA,i64 8
%yI=bitcast i8*%yH to i8**
store i8*%yG,i8**%yI,align 8
%yJ=getelementptr inbounds i8,i8*%yA,i64 16
%yK=bitcast i8*%yJ to i32*
store i32 2,i32*%yK,align 4
%yL=call i8*@sml_alloc(i32 inreg 20)#0
%yM=getelementptr inbounds i8,i8*%yL,i64 -4
%yN=bitcast i8*%yM to i32*
store i32 1342177296,i32*%yN,align 4
store i8*%yL,i8**%d,align 8
%yO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%yP=bitcast i8*%yL to i8**
store i8*%yO,i8**%yP,align 8
%yQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%yR=getelementptr inbounds i8,i8*%yL,i64 8
%yS=bitcast i8*%yR to i8**
store i8*%yQ,i8**%yS,align 8
%yT=getelementptr inbounds i8,i8*%yL,i64 16
%yU=bitcast i8*%yT to i32*
store i32 3,i32*%yU,align 4
%yV=call i8*@sml_alloc(i32 inreg 20)#0
%yW=getelementptr inbounds i8,i8*%yV,i64 -4
%yX=bitcast i8*%yW to i32*
store i32 1342177296,i32*%yX,align 4
store i8*%yV,i8**%e,align 8
%yY=getelementptr inbounds i8,i8*%yV,i64 4
%yZ=bitcast i8*%yY to i32*
store i32 0,i32*%yZ,align 1
%y0=bitcast i8*%yV to i32*
store i32 6,i32*%y0,align 4
%y1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y2=getelementptr inbounds i8,i8*%yV,i64 8
%y3=bitcast i8*%y2 to i8**
store i8*%y1,i8**%y3,align 8
%y4=getelementptr inbounds i8,i8*%yV,i64 16
%y5=bitcast i8*%y4 to i32*
store i32 2,i32*%y5,align 4
%y6=call i8*@sml_alloc(i32 inreg 20)#0
%y7=getelementptr inbounds i8,i8*%y6,i64 -4
%y8=bitcast i8*%y7 to i32*
store i32 1342177296,i32*%y8,align 4
store i8*%y6,i8**%d,align 8
%y9=bitcast i8*%y6 to i64*
store i64 0,i64*%y9,align 4
%za=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zb=getelementptr inbounds i8,i8*%y6,i64 8
%zc=bitcast i8*%zb to i8**
store i8*%za,i8**%zc,align 8
%zd=getelementptr inbounds i8,i8*%y6,i64 16
%ze=bitcast i8*%zd to i32*
store i32 2,i32*%ze,align 4
%zf=call i8*@sml_alloc(i32 inreg 20)#0
%zg=getelementptr inbounds i8,i8*%zf,i64 -4
%zh=bitcast i8*%zg to i32*
store i32 1342177296,i32*%zh,align 4
%zi=load i8*,i8**%f,align 8
%zj=bitcast i8*%zf to i8**
store i8*%zi,i8**%zj,align 8
%zk=load i8*,i8**%d,align 8
%zl=getelementptr inbounds i8,i8*%zf,i64 8
%zm=bitcast i8*%zl to i8**
store i8*%zk,i8**%zm,align 8
%zn=getelementptr inbounds i8,i8*%zf,i64 16
%zo=bitcast i8*%zn to i32*
store i32 3,i32*%zo,align 4
ret i8*%zf
zp:
%zq=getelementptr inbounds i8,i8*%uR,i64 8
%zr=bitcast i8*%zq to i8**
%zs=load i8*,i8**%zr,align 8
store i8*%zs,i8**%d,align 8
%zt=getelementptr inbounds i8,i8*%uP,i64 8
%zu=bitcast i8*%zt to i8**
%zv=load i8*,i8**%zu,align 8
store i8*%zv,i8**%e,align 8
%zw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%zx=getelementptr inbounds i8,i8*%zw,i64 8
%zy=bitcast i8*%zx to i8**
%zz=load i8*,i8**%zy,align 8
store i8*%zz,i8**%f,align 8
%zA=call i8*@sml_alloc(i32 inreg 20)#0
%zB=getelementptr inbounds i8,i8*%zA,i64 -4
%zC=bitcast i8*%zB to i32*
store i32 1342177296,i32*%zC,align 4
store i8*%zA,i8**%g,align 8
%zD=getelementptr inbounds i8,i8*%zA,i64 4
%zE=bitcast i8*%zD to i32*
store i32 0,i32*%zE,align 1
%zF=bitcast i8*%zA to i32*
store i32 4,i32*%zF,align 4
%zG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zH=getelementptr inbounds i8,i8*%zA,i64 8
%zI=bitcast i8*%zH to i8**
store i8*%zG,i8**%zI,align 8
%zJ=getelementptr inbounds i8,i8*%zA,i64 16
%zK=bitcast i8*%zJ to i32*
store i32 2,i32*%zK,align 4
%zL=call i8*@sml_alloc(i32 inreg 20)#0
%zM=getelementptr inbounds i8,i8*%zL,i64 -4
%zN=bitcast i8*%zM to i32*
store i32 1342177296,i32*%zN,align 4
store i8*%zL,i8**%d,align 8
%zO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%zP=bitcast i8*%zL to i8**
store i8*%zO,i8**%zP,align 8
%zQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zR=getelementptr inbounds i8,i8*%zL,i64 8
%zS=bitcast i8*%zR to i8**
store i8*%zQ,i8**%zS,align 8
%zT=getelementptr inbounds i8,i8*%zL,i64 16
%zU=bitcast i8*%zT to i32*
store i32 3,i32*%zU,align 4
%zV=call i8*@sml_alloc(i32 inreg 20)#0
%zW=getelementptr inbounds i8,i8*%zV,i64 -4
%zX=bitcast i8*%zW to i32*
store i32 1342177296,i32*%zX,align 4
store i8*%zV,i8**%e,align 8
%zY=getelementptr inbounds i8,i8*%zV,i64 4
%zZ=bitcast i8*%zY to i32*
store i32 0,i32*%zZ,align 1
%z0=bitcast i8*%zV to i32*
store i32 6,i32*%z0,align 4
%z1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z2=getelementptr inbounds i8,i8*%zV,i64 8
%z3=bitcast i8*%z2 to i8**
store i8*%z1,i8**%z3,align 8
%z4=getelementptr inbounds i8,i8*%zV,i64 16
%z5=bitcast i8*%z4 to i32*
store i32 2,i32*%z5,align 4
%z6=call i8*@sml_alloc(i32 inreg 20)#0
%z7=getelementptr inbounds i8,i8*%z6,i64 -4
%z8=bitcast i8*%z7 to i32*
store i32 1342177296,i32*%z8,align 4
store i8*%z6,i8**%d,align 8
%z9=bitcast i8*%z6 to i64*
store i64 0,i64*%z9,align 4
%Aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ab=getelementptr inbounds i8,i8*%z6,i64 8
%Ac=bitcast i8*%Ab to i8**
store i8*%Aa,i8**%Ac,align 8
%Ad=getelementptr inbounds i8,i8*%z6,i64 16
%Ae=bitcast i8*%Ad to i32*
store i32 2,i32*%Ae,align 4
%Af=call i8*@sml_alloc(i32 inreg 20)#0
%Ag=getelementptr inbounds i8,i8*%Af,i64 -4
%Ah=bitcast i8*%Ag to i32*
store i32 1342177296,i32*%Ah,align 4
%Ai=load i8*,i8**%f,align 8
%Aj=bitcast i8*%Af to i8**
store i8*%Ai,i8**%Aj,align 8
%Ak=load i8*,i8**%d,align 8
%Al=getelementptr inbounds i8,i8*%Af,i64 8
%Am=bitcast i8*%Al to i8**
store i8*%Ak,i8**%Am,align 8
%An=getelementptr inbounds i8,i8*%Af,i64 16
%Ao=bitcast i8*%An to i32*
store i32 3,i32*%Ao,align 4
ret i8*%Af
Ap:
%Aq=getelementptr inbounds i8,i8*%uR,i64 8
%Ar=bitcast i8*%Aq to i8**
%As=load i8*,i8**%Ar,align 8
store i8*%As,i8**%d,align 8
%At=getelementptr inbounds i8,i8*%uP,i64 8
%Au=bitcast i8*%At to i8**
%Av=load i8*,i8**%Au,align 8
store i8*%Av,i8**%e,align 8
%Aw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Ax=getelementptr inbounds i8,i8*%Aw,i64 8
%Ay=bitcast i8*%Ax to i8**
%Az=load i8*,i8**%Ay,align 8
store i8*%Az,i8**%f,align 8
%AA=call i8*@sml_alloc(i32 inreg 20)#0
%AB=getelementptr inbounds i8,i8*%AA,i64 -4
%AC=bitcast i8*%AB to i32*
store i32 1342177296,i32*%AC,align 4
store i8*%AA,i8**%g,align 8
%AD=getelementptr inbounds i8,i8*%AA,i64 4
%AE=bitcast i8*%AD to i32*
store i32 0,i32*%AE,align 1
%AF=bitcast i8*%AA to i32*
store i32 5,i32*%AF,align 4
%AG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AH=getelementptr inbounds i8,i8*%AA,i64 8
%AI=bitcast i8*%AH to i8**
store i8*%AG,i8**%AI,align 8
%AJ=getelementptr inbounds i8,i8*%AA,i64 16
%AK=bitcast i8*%AJ to i32*
store i32 2,i32*%AK,align 4
%AL=call i8*@sml_alloc(i32 inreg 20)#0
%AM=getelementptr inbounds i8,i8*%AL,i64 -4
%AN=bitcast i8*%AM to i32*
store i32 1342177296,i32*%AN,align 4
store i8*%AL,i8**%d,align 8
%AO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%AP=bitcast i8*%AL to i8**
store i8*%AO,i8**%AP,align 8
%AQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AR=getelementptr inbounds i8,i8*%AL,i64 8
%AS=bitcast i8*%AR to i8**
store i8*%AQ,i8**%AS,align 8
%AT=getelementptr inbounds i8,i8*%AL,i64 16
%AU=bitcast i8*%AT to i32*
store i32 3,i32*%AU,align 4
%AV=call i8*@sml_alloc(i32 inreg 20)#0
%AW=getelementptr inbounds i8,i8*%AV,i64 -4
%AX=bitcast i8*%AW to i32*
store i32 1342177296,i32*%AX,align 4
store i8*%AV,i8**%e,align 8
%AY=getelementptr inbounds i8,i8*%AV,i64 4
%AZ=bitcast i8*%AY to i32*
store i32 0,i32*%AZ,align 1
%A0=bitcast i8*%AV to i32*
store i32 6,i32*%A0,align 4
%A1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A2=getelementptr inbounds i8,i8*%AV,i64 8
%A3=bitcast i8*%A2 to i8**
store i8*%A1,i8**%A3,align 8
%A4=getelementptr inbounds i8,i8*%AV,i64 16
%A5=bitcast i8*%A4 to i32*
store i32 2,i32*%A5,align 4
%A6=call i8*@sml_alloc(i32 inreg 20)#0
%A7=getelementptr inbounds i8,i8*%A6,i64 -4
%A8=bitcast i8*%A7 to i32*
store i32 1342177296,i32*%A8,align 4
store i8*%A6,i8**%d,align 8
%A9=bitcast i8*%A6 to i64*
store i64 0,i64*%A9,align 4
%Ba=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Bb=getelementptr inbounds i8,i8*%A6,i64 8
%Bc=bitcast i8*%Bb to i8**
store i8*%Ba,i8**%Bc,align 8
%Bd=getelementptr inbounds i8,i8*%A6,i64 16
%Be=bitcast i8*%Bd to i32*
store i32 2,i32*%Be,align 4
%Bf=call i8*@sml_alloc(i32 inreg 20)#0
%Bg=getelementptr inbounds i8,i8*%Bf,i64 -4
%Bh=bitcast i8*%Bg to i32*
store i32 1342177296,i32*%Bh,align 4
%Bi=load i8*,i8**%f,align 8
%Bj=bitcast i8*%Bf to i8**
store i8*%Bi,i8**%Bj,align 8
%Bk=load i8*,i8**%d,align 8
%Bl=getelementptr inbounds i8,i8*%Bf,i64 8
%Bm=bitcast i8*%Bl to i8**
store i8*%Bk,i8**%Bm,align 8
%Bn=getelementptr inbounds i8,i8*%Bf,i64 16
%Bo=bitcast i8*%Bn to i32*
store i32 3,i32*%Bo,align 4
ret i8*%Bf
Bp:
%Bq=getelementptr inbounds i8,i8*%uR,i64 8
%Br=bitcast i8*%Bq to i8**
%Bs=load i8*,i8**%Br,align 8
store i8*%Bs,i8**%d,align 8
%Bt=getelementptr inbounds i8,i8*%uP,i64 8
%Bu=bitcast i8*%Bt to i8**
%Bv=load i8*,i8**%Bu,align 8
store i8*%Bv,i8**%e,align 8
%Bw=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%Bx=getelementptr inbounds i8,i8*%Bw,i64 8
%By=bitcast i8*%Bx to i8**
%Bz=load i8*,i8**%By,align 8
store i8*%Bz,i8**%f,align 8
%BA=call i8*@sml_alloc(i32 inreg 20)#0
%BB=getelementptr inbounds i8,i8*%BA,i64 -4
%BC=bitcast i8*%BB to i32*
store i32 1342177296,i32*%BC,align 4
store i8*%BA,i8**%g,align 8
%BD=getelementptr inbounds i8,i8*%BA,i64 4
%BE=bitcast i8*%BD to i32*
store i32 0,i32*%BE,align 1
%BF=bitcast i8*%BA to i32*
store i32 2,i32*%BF,align 4
%BG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%BH=getelementptr inbounds i8,i8*%BA,i64 8
%BI=bitcast i8*%BH to i8**
store i8*%BG,i8**%BI,align 8
%BJ=getelementptr inbounds i8,i8*%BA,i64 16
%BK=bitcast i8*%BJ to i32*
store i32 2,i32*%BK,align 4
%BL=call i8*@sml_alloc(i32 inreg 20)#0
%BM=getelementptr inbounds i8,i8*%BL,i64 -4
%BN=bitcast i8*%BM to i32*
store i32 1342177296,i32*%BN,align 4
store i8*%BL,i8**%d,align 8
%BO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%BP=bitcast i8*%BL to i8**
store i8*%BO,i8**%BP,align 8
%BQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%BR=getelementptr inbounds i8,i8*%BL,i64 8
%BS=bitcast i8*%BR to i8**
store i8*%BQ,i8**%BS,align 8
%BT=getelementptr inbounds i8,i8*%BL,i64 16
%BU=bitcast i8*%BT to i32*
store i32 3,i32*%BU,align 4
%BV=call i8*@sml_alloc(i32 inreg 20)#0
%BW=getelementptr inbounds i8,i8*%BV,i64 -4
%BX=bitcast i8*%BW to i32*
store i32 1342177296,i32*%BX,align 4
store i8*%BV,i8**%e,align 8
%BY=getelementptr inbounds i8,i8*%BV,i64 4
%BZ=bitcast i8*%BY to i32*
store i32 0,i32*%BZ,align 1
%B0=bitcast i8*%BV to i32*
store i32 6,i32*%B0,align 4
%B1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B2=getelementptr inbounds i8,i8*%BV,i64 8
%B3=bitcast i8*%B2 to i8**
store i8*%B1,i8**%B3,align 8
%B4=getelementptr inbounds i8,i8*%BV,i64 16
%B5=bitcast i8*%B4 to i32*
store i32 2,i32*%B5,align 4
%B6=call i8*@sml_alloc(i32 inreg 20)#0
%B7=getelementptr inbounds i8,i8*%B6,i64 -4
%B8=bitcast i8*%B7 to i32*
store i32 1342177296,i32*%B8,align 4
store i8*%B6,i8**%d,align 8
%B9=bitcast i8*%B6 to i64*
store i64 0,i64*%B9,align 4
%Ca=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Cb=getelementptr inbounds i8,i8*%B6,i64 8
%Cc=bitcast i8*%Cb to i8**
store i8*%Ca,i8**%Cc,align 8
%Cd=getelementptr inbounds i8,i8*%B6,i64 16
%Ce=bitcast i8*%Cd to i32*
store i32 2,i32*%Ce,align 4
%Cf=call i8*@sml_alloc(i32 inreg 20)#0
%Cg=getelementptr inbounds i8,i8*%Cf,i64 -4
%Ch=bitcast i8*%Cg to i32*
store i32 1342177296,i32*%Ch,align 4
%Ci=load i8*,i8**%f,align 8
%Cj=bitcast i8*%Cf to i8**
store i8*%Ci,i8**%Cj,align 8
%Ck=load i8*,i8**%d,align 8
%Cl=getelementptr inbounds i8,i8*%Cf,i64 8
%Cm=bitcast i8*%Cl to i8**
store i8*%Ck,i8**%Cm,align 8
%Cn=getelementptr inbounds i8,i8*%Cf,i64 16
%Co=bitcast i8*%Cn to i32*
store i32 3,i32*%Co,align 4
ret i8*%Cf
Cp:
%Cq=getelementptr inbounds i8,i8*%u,i64 8
%Cr=bitcast i8*%Cq to i8**
%Cs=load i8*,i8**%Cr,align 8
%Ct=load i8*,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%k,align 8
%Cu=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%Ct,i8*inreg%s,i32 inreg 2,i8*inreg%Cs)
%Cv=bitcast i8*%Cu to i8**
%Cw=load i8*,i8**%Cv,align 8
store i8*%Cw,i8**%d,align 8
%Cx=getelementptr inbounds i8,i8*%Cu,i64 8
%Cy=bitcast i8*%Cx to i8**
%Cz=load i8*,i8**%Cy,align 8
store i8*%Cz,i8**%e,align 8
%CA=call i8*@sml_alloc(i32 inreg 20)#0
%CB=getelementptr inbounds i8,i8*%CA,i64 -4
%CC=bitcast i8*%CB to i32*
store i32 1342177296,i32*%CC,align 4
store i8*%CA,i8**%f,align 8
%CD=getelementptr inbounds i8,i8*%CA,i64 4
%CE=bitcast i8*%CD to i32*
store i32 0,i32*%CE,align 1
%CF=bitcast i8*%CA to i32*
store i32 1,i32*%CF,align 4
%CG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%CH=getelementptr inbounds i8,i8*%CA,i64 8
%CI=bitcast i8*%CH to i8**
store i8*%CG,i8**%CI,align 8
%CJ=getelementptr inbounds i8,i8*%CA,i64 16
%CK=bitcast i8*%CJ to i32*
store i32 2,i32*%CK,align 4
%CL=call i8*@sml_alloc(i32 inreg 20)#0
%CM=getelementptr inbounds i8,i8*%CL,i64 -4
%CN=bitcast i8*%CM to i32*
store i32 1342177296,i32*%CN,align 4
%CO=load i8*,i8**%d,align 8
%CP=bitcast i8*%CL to i8**
store i8*%CO,i8**%CP,align 8
%CQ=load i8*,i8**%f,align 8
%CR=getelementptr inbounds i8,i8*%CL,i64 8
%CS=bitcast i8*%CR to i8**
store i8*%CQ,i8**%CS,align 8
%CT=getelementptr inbounds i8,i8*%CL,i64 16
%CU=bitcast i8*%CT to i32*
store i32 3,i32*%CU,align 4
ret i8*%CL
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
u:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%l,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%s,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%e,align 8
%r=load i8*,i8**%d,align 8
br label%s
s:
%t=phi i8*[%r,%p],[%b,%u]
%v=phi i8*[%q,%p],[%c,%u]
store i8*null,i8**%e,align 8
store i8*%t,i8**%f,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 0,label%fg
i32 1,label%X
i32 2,label%Q
]
y:
store i8*null,i8**%f,align 8
store i8*null,i8**%l,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%d,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%e,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jj,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
%R=getelementptr inbounds i8,i8*%v,i64 8
%S=bitcast i8*%R to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%l,align 8
%W=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2514(i8*inreg%V,i8*inreg%t,i8*inreg%U)
ret i8*%W
X:
%Y=getelementptr inbounds i8,i8*%v,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%g,align 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=bitcast i8*%ac to i32*
%ae=load i32,i32*%ad,align 4
%af=icmp eq i32%ae,2
br i1%af,label%ag,label%fl
ag:
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8***
%aj=load i8**,i8***%ai,align 8
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8*%ak to i32*
%am=load i32,i32*%al,align 4
%an=icmp eq i32%am,8
br i1%an,label%ao,label%fl
ao:
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%j,align 8
%as=getelementptr inbounds i8,i8*%aa,i64 16
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%k,align 8
%av=getelementptr inbounds i8,i8*%aa,i64 8
%aw=bitcast i8*%av to i8***
%ax=load i8**,i8***%aw,align 8
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**%l,align 8
%aA=call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%az,i8*inreg%t,i8*inreg%ay)
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%aA,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%e,align 8
%aG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aH=getelementptr inbounds i8,i8*%aG,i64 8
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 8
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
%aN=load i8*,i8**%f,align 8
%aO=load i8*,i8**%l,align 8
store i8*null,i8**%f,align 8
%aP=call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%aO,i8*inreg%aN,i8*inreg%aM)
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aP,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%g,align 8
%aV=load i8*,i8**%e,align 8
%aW=bitcast i8*%aV to i32*
%aX=load i32,i32*%aW,align 4
%aY=icmp eq i32%aX,0
br i1%aY,label%aZ,label%dp
aZ:
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
store i8*%a2,i8**%h,align 8
%a3=bitcast i8*%aU to i32*
%a4=load i32,i32*%a3,align 4
%a5=icmp eq i32%a4,0
br i1%a5,label%a7,label%a6
a6:
store i8*null,i8**%h,align 8
br label%dp
a7:
%a8=getelementptr inbounds i8,i8*%aU,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%g,align 8
%bb=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%e,align 8
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
store i8*%bf,i8**%i,align 8
%bi=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to i8**
store i8*null,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to i32*
store i32 3,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 20)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177296,i32*%bq,align 4
%br=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bo,i64 16
%bx=bitcast i8*%bw to i32*
store i32 3,i32*%bx,align 4
%by=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bz=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%by,i8*inreg%bo)
store i8*%bz,i8**%e,align 8
%bA=load i8*,i8**%j,align 8
%bB=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%bA)
store i8*%bB,i8**%d,align 8
%bC=call i8*@sml_alloc(i32 inreg 20)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177296,i32*%bE,align 4
store i8*%bC,i8**%i,align 8
%bF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to i8**
store i8*null,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 16
%bK=bitcast i8*%bJ to i32*
store i32 3,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
store i8*%bL,i8**%f,align 8
%bO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bL,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%i,align 8
%bY=getelementptr inbounds i8,i8*%bV,i64 4
%bZ=bitcast i8*%bY to i32*
store i32 0,i32*%bZ,align 1
%b0=bitcast i8*%bV to i32*
store i32 16,i32*%b0,align 4
%b1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 2,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 20)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177296,i32*%b8,align 4
store i8*%b6,i8**%d,align 8
%b9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to i8**
store i8*null,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to i32*
store i32 3,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 20)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177296,i32*%ch,align 4
store i8*%cf,i8**%f,align 8
%ci=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cf,i64 16
%co=bitcast i8*%cn to i32*
store i32 3,i32*%co,align 4
%cp=call i8*@sml_alloc(i32 inreg 20)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177296,i32*%cr,align 4
store i8*%cp,i8**%d,align 8
%cs=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ct=bitcast i8*%cp to i8**
store i8*%cs,i8**%ct,align 8
%cu=load i8*,i8**%k,align 8
%cv=getelementptr inbounds i8,i8*%cp,i64 8
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cp,i64 16
%cy=bitcast i8*%cx to i32*
store i32 3,i32*%cy,align 4
%cz=call i8*@sml_alloc(i32 inreg 20)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177296,i32*%cB,align 4
store i8*%cz,i8**%f,align 8
%cC=getelementptr inbounds i8,i8*%cz,i64 4
%cD=bitcast i8*%cC to i32*
store i32 0,i32*%cD,align 1
%cE=bitcast i8*%cz to i32*
store i32 28,i32*%cE,align 4
%cF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cG=getelementptr inbounds i8,i8*%cz,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 2,i32*%cJ,align 4
%cK=call i8*@sml_alloc(i32 inreg 28)#0
%cL=getelementptr inbounds i8,i8*%cK,i64 -4
%cM=bitcast i8*%cL to i32*
store i32 1342177304,i32*%cM,align 4
store i8*%cK,i8**%d,align 8
%cN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cO=bitcast i8*%cK to i8**
store i8*%cN,i8**%cO,align 8
%cP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cQ=getelementptr inbounds i8,i8*%cK,i64 8
%cR=bitcast i8*%cQ to i8**
store i8*%cP,i8**%cR,align 8
%cS=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cT=getelementptr inbounds i8,i8*%cK,i64 16
%cU=bitcast i8*%cT to i8**
store i8*%cS,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cK,i64 24
%cW=bitcast i8*%cV to i32*
store i32 7,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 20)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177296,i32*%cZ,align 4
store i8*%cX,i8**%f,align 8
%c0=bitcast i8*%cX to i64*
store i64 0,i64*%c0,align 4
%c1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c2=getelementptr inbounds i8,i8*%cX,i64 8
%c3=bitcast i8*%c2 to i8**
store i8*%c1,i8**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cX,i64 16
%c5=bitcast i8*%c4 to i32*
store i32 2,i32*%c5,align 4
%c6=call i8*@sml_alloc(i32 inreg 20)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177296,i32*%c8,align 4
store i8*%c6,i8**%d,align 8
%c9=bitcast i8*%c6 to i64*
store i64 0,i64*%c9,align 4
%da=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%db=getelementptr inbounds i8,i8*%c6,i64 8
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c6,i64 16
%de=bitcast i8*%dd to i32*
store i32 2,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 20)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
%di=load i8*,i8**%e,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=load i8*,i8**%d,align 8
%dl=getelementptr inbounds i8,i8*%df,i64 8
%dm=bitcast i8*%dl to i8**
store i8*%dk,i8**%dm,align 8
%dn=getelementptr inbounds i8,i8*%df,i64 16
%do=bitcast i8*%dn to i32*
store i32 3,i32*%do,align 4
ret i8*%df
dp:
%dq=load i8*,i8**%l,align 8
%dr=getelementptr inbounds i8,i8*%dq,i64 40
%ds=bitcast i8*%dr to i8**
%dt=load i8*,i8**%ds,align 8
store i8*null,i8**%e,align 8
%du=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%dt,i8*inreg%aV)
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%e,align 8
%dx=getelementptr inbounds i8,i8*%du,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%h,align 8
%dA=load i8*,i8**%l,align 8
%dB=getelementptr inbounds i8,i8*%dA,i64 40
%dC=bitcast i8*%dB to i8**
%dD=load i8*,i8**%dC,align 8
%dE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dF=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%dD,i8*inreg%dE)
%dG=bitcast i8*%dF to i8**
%dH=load i8*,i8**%dG,align 8
store i8*%dH,i8**%g,align 8
%dI=getelementptr inbounds i8,i8*%dF,i64 8
%dJ=bitcast i8*%dI to i8**
%dK=load i8*,i8**%dJ,align 8
store i8*%dK,i8**%i,align 8
%dL=load i8*,i8**%l,align 8
%dM=getelementptr inbounds i8,i8*%dL,i64 16
%dN=bitcast i8*%dM to i8**
%dO=load i8*,i8**%dN,align 8
store i8*%dO,i8**%l,align 8
%dP=call i8*@sml_alloc(i32 inreg 20)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177296,i32*%dR,align 4
store i8*%dP,i8**%m,align 8
%dS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dT=bitcast i8*%dP to i8**
store i8*%dS,i8**%dT,align 8
%dU=getelementptr inbounds i8,i8*%dP,i64 8
%dV=bitcast i8*%dU to i8**
store i8*null,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dP,i64 16
%dX=bitcast i8*%dW to i32*
store i32 3,i32*%dX,align 4
%dY=call i8*@sml_alloc(i32 inreg 20)#0
%dZ=getelementptr inbounds i8,i8*%dY,i64 -4
%d0=bitcast i8*%dZ to i32*
store i32 1342177296,i32*%d0,align 4
store i8*%dY,i8**%g,align 8
%d1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%d2=bitcast i8*%dY to i8**
store i8*%d1,i8**%d2,align 8
%d3=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%d4=getelementptr inbounds i8,i8*%dY,i64 8
%d5=bitcast i8*%d4 to i8**
store i8*%d3,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dY,i64 16
%d7=bitcast i8*%d6 to i32*
store i32 3,i32*%d7,align 4
%d8=call i8*@sml_alloc(i32 inreg 20)#0
%d9=getelementptr inbounds i8,i8*%d8,i64 -4
%ea=bitcast i8*%d9 to i32*
store i32 1342177296,i32*%ea,align 4
store i8*%d8,i8**%f,align 8
%eb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ec=bitcast i8*%d8 to i8**
store i8*%eb,i8**%ec,align 8
%ed=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ee=getelementptr inbounds i8,i8*%d8,i64 8
%ef=bitcast i8*%ee to i8**
store i8*%ed,i8**%ef,align 8
%eg=getelementptr inbounds i8,i8*%d8,i64 16
%eh=bitcast i8*%eg to i32*
store i32 3,i32*%eh,align 4
%ei=call i8*@sml_alloc(i32 inreg 20)#0
%ej=getelementptr inbounds i8,i8*%ei,i64 -4
%ek=bitcast i8*%ej to i32*
store i32 1342177296,i32*%ek,align 4
%el=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%em=bitcast i8*%ei to i8**
store i8*%el,i8**%em,align 8
%en=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eo=getelementptr inbounds i8,i8*%ei,i64 8
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=getelementptr inbounds i8,i8*%ei,i64 16
%er=bitcast i8*%eq to i32*
store i32 3,i32*%er,align 4
%es=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%et=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%es,i8*inreg%ei)
store i8*%et,i8**%d,align 8
%eu=call i8*@sml_alloc(i32 inreg 36)#0
%ev=getelementptr inbounds i8,i8*%eu,i64 -4
%ew=bitcast i8*%ev to i32*
store i32 1342177312,i32*%ew,align 4
store i8*%eu,i8**%e,align 8
%ex=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ey=bitcast i8*%eu to i8**
store i8*%ex,i8**%ey,align 8
%ez=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eA=getelementptr inbounds i8,i8*%eu,i64 8
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eD=getelementptr inbounds i8,i8*%eu,i64 16
%eE=bitcast i8*%eD to i8**
store i8*%eC,i8**%eE,align 8
%eF=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%eG=getelementptr inbounds i8,i8*%eu,i64 24
%eH=bitcast i8*%eG to i8**
store i8*%eF,i8**%eH,align 8
%eI=getelementptr inbounds i8,i8*%eu,i64 32
%eJ=bitcast i8*%eI to i32*
store i32 15,i32*%eJ,align 4
%eK=call i8*@sml_alloc(i32 inreg 20)#0
%eL=getelementptr inbounds i8,i8*%eK,i64 -4
%eM=bitcast i8*%eL to i32*
store i32 1342177296,i32*%eM,align 4
store i8*%eK,i8**%f,align 8
%eN=getelementptr inbounds i8,i8*%eK,i64 4
%eO=bitcast i8*%eN to i32*
store i32 0,i32*%eO,align 1
%eP=bitcast i8*%eK to i32*
store i32 1,i32*%eP,align 4
%eQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eR=getelementptr inbounds i8,i8*%eK,i64 8
%eS=bitcast i8*%eR to i8**
store i8*%eQ,i8**%eS,align 8
%eT=getelementptr inbounds i8,i8*%eK,i64 16
%eU=bitcast i8*%eT to i32*
store i32 2,i32*%eU,align 4
%eV=call i8*@sml_alloc(i32 inreg 20)#0
%eW=getelementptr inbounds i8,i8*%eV,i64 -4
%eX=bitcast i8*%eW to i32*
store i32 1342177296,i32*%eX,align 4
store i8*%eV,i8**%e,align 8
%eY=getelementptr inbounds i8,i8*%eV,i64 4
%eZ=bitcast i8*%eY to i32*
store i32 0,i32*%eZ,align 1
%e0=bitcast i8*%eV to i32*
store i32 1,i32*%e0,align 4
%e1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%e2=getelementptr inbounds i8,i8*%eV,i64 8
%e3=bitcast i8*%e2 to i8**
store i8*%e1,i8**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eV,i64 16
%e5=bitcast i8*%e4 to i32*
store i32 2,i32*%e5,align 4
%e6=call i8*@sml_alloc(i32 inreg 20)#0
%e7=getelementptr inbounds i8,i8*%e6,i64 -4
%e8=bitcast i8*%e7 to i32*
store i32 1342177296,i32*%e8,align 4
%e9=load i8*,i8**%d,align 8
%fa=bitcast i8*%e6 to i8**
store i8*%e9,i8**%fa,align 8
%fb=load i8*,i8**%e,align 8
%fc=getelementptr inbounds i8,i8*%e6,i64 8
%fd=bitcast i8*%fc to i8**
store i8*%fb,i8**%fd,align 8
%fe=getelementptr inbounds i8,i8*%e6,i64 16
%ff=bitcast i8*%fe to i32*
store i32 3,i32*%ff,align 4
ret i8*%e6
fg:
%fh=call fastcc i8*@_SMLLN12ElaborateSQL8getSpineE_2503(i8*inreg%v)
%fi=load i8*,i8**%f,align 8
%fj=load i8*,i8**%l,align 8
%fk=tail call fastcc i8*@_SMLLN12ElaborateSQL9elabSpineE_2516(i8*inreg%fj,i8*inreg%fi,i8*inreg%fh)
ret i8*%fk
fl:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%l,align 8
%fm=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%fm,i8**%d,align 8
%fn=call i8*@sml_alloc(i32 inreg 28)#0
%fo=getelementptr inbounds i8,i8*%fn,i64 -4
%fp=bitcast i8*%fo to i32*
store i32 1342177304,i32*%fp,align 4
store i8*%fn,i8**%e,align 8
%fq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fr=bitcast i8*%fn to i8**
store i8*%fq,i8**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fn,i64 8
%ft=bitcast i8*%fs to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jh,i64 0,i32 2,i64 0),i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fn,i64 16
%fv=bitcast i8*%fu to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@ji,i64 0,i32 2,i64 0),i8**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fn,i64 24
%fx=bitcast i8*%fw to i32*
store i32 7,i32*%fx,align 4
%fy=call i8*@sml_alloc(i32 inreg 60)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177336,i32*%fA,align 4
%fB=getelementptr inbounds i8,i8*%fy,i64 56
%fC=bitcast i8*%fB to i32*
store i32 1,i32*%fC,align 4
%fD=load i8*,i8**%e,align 8
%fE=bitcast i8*%fy to i8**
store i8*%fD,i8**%fE,align 8
call void@sml_raise(i8*inreg%fy)#1
unreachable
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabSpineE_2516(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%j,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%e,align 8
%p=load i8*,i8**%d,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%b,%s]
%t=phi i8*[%o,%n],[%c,%s]
store i8*%r,i8**%f,align 8
%u=icmp eq i8*%t,null
br i1%u,label%v,label%P
v:
store i8*null,i8**%f,align 8
store i8*null,i8**%j,align 8
%w=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jl,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@jm,i64 0,i32 2,i64 0),i8**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 7,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 60)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177336,i32*%K,align 4
%L=getelementptr inbounds i8,i8*%I,i64 56
%M=bitcast i8*%L to i32*
store i32 1,i32*%M,align 4
%N=load i8*,i8**%e,align 8
%O=bitcast i8*%I to i8**
store i8*%N,i8**%O,align 8
call void@sml_raise(i8*inreg%I)#1
unreachable
P:
%Q=bitcast i8*%t to i8**
%R=load i8*,i8**%Q,align 8
%S=bitcast i8*%R to i32*
%T=load i32,i32*%S,align 4
%U=icmp eq i32%T,2
br i1%U,label%V,label%gK
V:
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=bitcast i8*%aa to i32*
%ac=load i32,i32*%ab,align 4
switch i32%ac,label%gK[
i32 8,label%b2
i32 13,label%ad
]
ad:
%ae=getelementptr inbounds i8,i8*%aa,i64 8
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%h,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%i,align 8
%ak=getelementptr inbounds i8,i8*%t,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=load i8*,i8**%j,align 8
store i8*null,i8**%f,align 8
%ao=call fastcc i8*@_SMLLN12ElaborateSQL9elabSpineE_2516(i8*inreg%an,i8*inreg%r,i8*inreg%am)
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=load i8*,i8**%j,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 40
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%au,i8*inreg%ax)
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%e,align 8
%aB=getelementptr inbounds i8,i8*%ay,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%f,align 8
%aE=call fastcc i8*@_SMLLN12ElaborateSQL6getLocE_1476(i8*inreg%aD)
store i8*%aE,i8**%g,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=getelementptr inbounds i8,i8*%aF,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 16
%aO=bitcast i8*%aN to i32*
store i32 3,i32*%aO,align 4
%aP=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%aF)
store i8*%aP,i8**%g,align 8
%aQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%i,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%j,align 8
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*null,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a3,i64 16
%bc=bitcast i8*%bb to i32*
store i32 3,i32*%bc,align 4
%bd=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%be=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%bd,i8*inreg%a3)
store i8*%be,i8**%d,align 8
%bf=call i8*@sml_alloc(i32 inreg 36)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177312,i32*%bh,align 4
store i8*%bf,i8**%e,align 8
%bi=getelementptr inbounds i8,i8*%bf,i64 4
%bj=bitcast i8*%bi to i32*
store i32 0,i32*%bj,align 1
%bk=bitcast i8*%bf to i32*
store i32 1,i32*%bk,align 4
%bl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bp=getelementptr inbounds i8,i8*%bf,i64 16
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bs=getelementptr inbounds i8,i8*%bf,i64 24
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bf,i64 32
%bv=bitcast i8*%bu to i32*
store i32 14,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
store i8*%bw,i8**%f,align 8
%bz=getelementptr inbounds i8,i8*%bw,i64 4
%bA=bitcast i8*%bz to i32*
store i32 0,i32*%bA,align 1
%bB=bitcast i8*%bw to i32*
store i32 27,i32*%bB,align 4
%bC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bD=getelementptr inbounds i8,i8*%bw,i64 8
%bE=bitcast i8*%bD to i8**
store i8*%bC,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bw,i64 16
%bG=bitcast i8*%bF to i32*
store i32 2,i32*%bG,align 4
%bH=call i8*@sml_alloc(i32 inreg 20)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177296,i32*%bJ,align 4
store i8*%bH,i8**%e,align 8
%bK=getelementptr inbounds i8,i8*%bH,i64 4
%bL=bitcast i8*%bK to i32*
store i32 0,i32*%bL,align 1
%bM=bitcast i8*%bH to i32*
store i32 1,i32*%bM,align 4
%bN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 8
%bP=bitcast i8*%bO to i8**
store i8*%bN,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bH,i64 16
%bR=bitcast i8*%bQ to i32*
store i32 2,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
%bV=load i8*,i8**%d,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=load i8*,i8**%e,align 8
%bY=getelementptr inbounds i8,i8*%bS,i64 8
%bZ=bitcast i8*%bY to i8**
store i8*%bX,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bS,i64 16
%b1=bitcast i8*%b0 to i32*
store i32 3,i32*%b1,align 4
ret i8*%bS
b2:
%b3=getelementptr inbounds i8,i8*%aa,i64 8
%b4=bitcast i8*%b3 to i8**
%b5=load i8*,i8**%b4,align 8
store i8*%b5,i8**%g,align 8
%b6=getelementptr inbounds i8,i8*%Y,i64 8
%b7=bitcast i8*%b6 to i8**
%b8=load i8*,i8**%b7,align 8
store i8*%b8,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%t,i64 8
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
%cc=icmp eq i8*%cb,null
br i1%cc,label%cd,label%c5
cd:
store i8*null,i8**%f,align 8
%ce=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
store i8*%ch,i8**%d,align 8
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%h,align 8
%cl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%ci,i64 8
%co=bitcast i8*%cn to i8**
store i8*null,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ci,i64 16
%cq=bitcast i8*%cp to i32*
store i32 3,i32*%cq,align 4
%cr=call i8*@sml_alloc(i32 inreg 20)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177296,i32*%ct,align 4
store i8*%cr,i8**%f,align 8
%cu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cr,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
store i8*%cB,i8**%e,align 8
%cE=getelementptr inbounds i8,i8*%cB,i64 4
%cF=bitcast i8*%cE to i32*
store i32 0,i32*%cF,align 1
%cG=bitcast i8*%cB to i32*
store i32 16,i32*%cG,align 4
%cH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cI=getelementptr inbounds i8,i8*%cB,i64 8
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i32*
store i32 2,i32*%cL,align 4
%cM=call i8*@sml_alloc(i32 inreg 20)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177296,i32*%cO,align 4
store i8*%cM,i8**%f,align 8
%cP=bitcast i8*%cM to i64*
store i64 0,i64*%cP,align 4
%cQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cM,i64 16
%cU=bitcast i8*%cT to i32*
store i32 2,i32*%cU,align 4
%cV=call i8*@sml_alloc(i32 inreg 20)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177296,i32*%cX,align 4
%cY=load i8*,i8**%d,align 8
%cZ=bitcast i8*%cV to i8**
store i8*%cY,i8**%cZ,align 8
%c0=load i8*,i8**%f,align 8
%c1=getelementptr inbounds i8,i8*%cV,i64 8
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cV,i64 16
%c4=bitcast i8*%c3 to i32*
store i32 3,i32*%c4,align 4
ret i8*%cV
c5:
store i8*%cb,i8**%k,align 8
%c6=bitcast i8*%cb to i8**
%c7=load i8*,i8**%c6,align 8
%c8=bitcast i8*%c7 to i32*
%c9=load i32,i32*%c8,align 4
switch i32%c9,label%da[
i32 0,label%dG
i32 1,label%dz
i32 2,label%ds
]
da:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%db=load i8*,i8**@_SMLZ5Match,align 8
store i8*%db,i8**%d,align 8
%dc=call i8*@sml_alloc(i32 inreg 20)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177296,i32*%de,align 4
store i8*%dc,i8**%e,align 8
%df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jo,i64 0,i32 2,i64 0),i8**%di,align 8
%dj=getelementptr inbounds i8,i8*%dc,i64 16
%dk=bitcast i8*%dj to i32*
store i32 3,i32*%dk,align 4
%dl=call i8*@sml_alloc(i32 inreg 60)#0
%dm=getelementptr inbounds i8,i8*%dl,i64 -4
%dn=bitcast i8*%dm to i32*
store i32 1342177336,i32*%dn,align 4
%do=getelementptr inbounds i8,i8*%dl,i64 56
%dp=bitcast i8*%do to i32*
store i32 1,i32*%dp,align 4
%dq=load i8*,i8**%e,align 8
%dr=bitcast i8*%dl to i8**
store i8*%dq,i8**%dr,align 8
call void@sml_raise(i8*inreg%dl)#1
unreachable
ds:
%dt=getelementptr inbounds i8,i8*%c7,i64 8
%du=bitcast i8*%dt to i8**
%dv=load i8*,i8**%du,align 8
%dw=getelementptr inbounds i8,i8*%dv,i64 8
%dx=bitcast i8*%dw to i8**
%dy=load i8*,i8**%dx,align 8
store i8*%dy,i8**%d,align 8
br label%dN
dz:
%dA=getelementptr inbounds i8,i8*%c7,i64 8
%dB=bitcast i8*%dA to i8**
%dC=load i8*,i8**%dB,align 8
%dD=getelementptr inbounds i8,i8*%dC,i64 16
%dE=bitcast i8*%dD to i8**
%dF=load i8*,i8**%dE,align 8
store i8*%dF,i8**%d,align 8
br label%dN
dG:
%dH=getelementptr inbounds i8,i8*%c7,i64 8
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=getelementptr inbounds i8,i8*%dJ,i64 16
%dL=bitcast i8*%dK to i8**
%dM=load i8*,i8**%dL,align 8
store i8*%dM,i8**%d,align 8
br label%dN
dN:
%dO=call i8*@sml_alloc(i32 inreg 20)#0
%dP=getelementptr inbounds i8,i8*%dO,i64 -4
%dQ=bitcast i8*%dP to i32*
store i32 1342177296,i32*%dQ,align 4
%dR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dS=bitcast i8*%dO to i8**
store i8*%dR,i8**%dS,align 8
%dT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dU=getelementptr inbounds i8,i8*%dO,i64 8
%dV=bitcast i8*%dU to i8**
store i8*%dT,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dO,i64 16
%dX=bitcast i8*%dW to i32*
store i32 3,i32*%dX,align 4
%dY=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%dO)
store i8*%dY,i8**%d,align 8
%dZ=bitcast i8**%k to i8***
%d0=load i8**,i8***%dZ,align 8
%d1=load i8*,i8**%d0,align 8
%d2=load i8*,i8**%f,align 8
%d3=load i8*,i8**%j,align 8
%d4=call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%d3,i8*inreg%d2,i8*inreg%d1)
%d5=bitcast i8*%d4 to i8**
%d6=load i8*,i8**%d5,align 8
store i8*%d6,i8**%e,align 8
%d7=getelementptr inbounds i8,i8*%d4,i64 8
%d8=bitcast i8*%d7 to i8**
%d9=load i8*,i8**%d8,align 8
%ea=bitcast i8*%d9 to i32*
%eb=load i32,i32*%ea,align 4
switch i32%eb,label%ec[
i32 1,label%fO
i32 0,label%eu
]
ec:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%ed=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ed,i8**%d,align 8
%ee=call i8*@sml_alloc(i32 inreg 20)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177296,i32*%eg,align 4
store i8*%ee,i8**%e,align 8
%eh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ei=bitcast i8*%ee to i8**
store i8*%eh,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%ee,i64 8
%ek=bitcast i8*%ej to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jk,i64 0,i32 2,i64 0),i8**%ek,align 8
%el=getelementptr inbounds i8,i8*%ee,i64 16
%em=bitcast i8*%el to i32*
store i32 3,i32*%em,align 4
%en=call i8*@sml_alloc(i32 inreg 60)#0
%eo=getelementptr inbounds i8,i8*%en,i64 -4
%ep=bitcast i8*%eo to i32*
store i32 1342177336,i32*%ep,align 4
%eq=getelementptr inbounds i8,i8*%en,i64 56
%er=bitcast i8*%eq to i32*
store i32 1,i32*%er,align 4
%es=load i8*,i8**%e,align 8
%et=bitcast i8*%en to i8**
store i8*%es,i8**%et,align 8
call void@sml_raise(i8*inreg%en)#1
unreachable
eu:
%ev=getelementptr inbounds i8,i8*%d9,i64 8
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
store i8*%ex,i8**%h,align 8
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=getelementptr inbounds i8,i8*%ey,i64 -4
%eA=bitcast i8*%ez to i32*
store i32 1342177296,i32*%eA,align 4
store i8*%ey,i8**%i,align 8
%eB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eC=bitcast i8*%ey to i8**
store i8*%eB,i8**%eC,align 8
%eD=getelementptr inbounds i8,i8*%ey,i64 8
%eE=bitcast i8*%eD to i8**
store i8*null,i8**%eE,align 8
%eF=getelementptr inbounds i8,i8*%ey,i64 16
%eG=bitcast i8*%eF to i32*
store i32 3,i32*%eG,align 4
%eH=call i8*@sml_alloc(i32 inreg 20)#0
%eI=getelementptr inbounds i8,i8*%eH,i64 -4
%eJ=bitcast i8*%eI to i32*
store i32 1342177296,i32*%eJ,align 4
store i8*%eH,i8**%g,align 8
%eK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eL=bitcast i8*%eH to i8**
store i8*%eK,i8**%eL,align 8
%eM=load i8*,i8**%d,align 8
%eN=getelementptr inbounds i8,i8*%eH,i64 8
%eO=bitcast i8*%eN to i8**
store i8*%eM,i8**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eH,i64 16
%eQ=bitcast i8*%eP to i32*
store i32 3,i32*%eQ,align 4
%eR=call i8*@sml_alloc(i32 inreg 20)#0
%eS=getelementptr inbounds i8,i8*%eR,i64 -4
%eT=bitcast i8*%eS to i32*
store i32 1342177296,i32*%eT,align 4
store i8*%eR,i8**%i,align 8
%eU=getelementptr inbounds i8,i8*%eR,i64 4
%eV=bitcast i8*%eU to i32*
store i32 0,i32*%eV,align 1
%eW=bitcast i8*%eR to i32*
store i32 16,i32*%eW,align 4
%eX=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eY=getelementptr inbounds i8,i8*%eR,i64 8
%eZ=bitcast i8*%eY to i8**
store i8*%eX,i8**%eZ,align 8
%e0=getelementptr inbounds i8,i8*%eR,i64 16
%e1=bitcast i8*%e0 to i32*
store i32 2,i32*%e1,align 4
%e2=call i8*@sml_alloc(i32 inreg 28)#0
%e3=getelementptr inbounds i8,i8*%e2,i64 -4
%e4=bitcast i8*%e3 to i32*
store i32 1342177304,i32*%e4,align 4
store i8*%e2,i8**%g,align 8
%e5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%e6=bitcast i8*%e2 to i8**
store i8*%e5,i8**%e6,align 8
%e7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e8=getelementptr inbounds i8,i8*%e2,i64 8
%e9=bitcast i8*%e8 to i8**
store i8*%e7,i8**%e9,align 8
%fa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fb=getelementptr inbounds i8,i8*%e2,i64 16
%fc=bitcast i8*%fb to i8**
store i8*%fa,i8**%fc,align 8
%fd=getelementptr inbounds i8,i8*%e2,i64 24
%fe=bitcast i8*%fd to i32*
store i32 7,i32*%fe,align 4
%ff=call i8*@sml_alloc(i32 inreg 20)#0
%fg=getelementptr inbounds i8,i8*%ff,i64 -4
%fh=bitcast i8*%fg to i32*
store i32 1342177296,i32*%fh,align 4
store i8*%ff,i8**%d,align 8
%fi=bitcast i8*%ff to i64*
store i64 0,i64*%fi,align 4
%fj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fk=getelementptr inbounds i8,i8*%ff,i64 8
%fl=bitcast i8*%fk to i8**
store i8*%fj,i8**%fl,align 8
%fm=getelementptr inbounds i8,i8*%ff,i64 16
%fn=bitcast i8*%fm to i32*
store i32 2,i32*%fn,align 4
%fo=call i8*@sml_alloc(i32 inreg 20)#0
%fp=getelementptr inbounds i8,i8*%fo,i64 -4
%fq=bitcast i8*%fp to i32*
store i32 1342177296,i32*%fq,align 4
store i8*%fo,i8**%g,align 8
%fr=bitcast i8*%fo to i64*
store i64 0,i64*%fr,align 4
%fs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ft=getelementptr inbounds i8,i8*%fo,i64 8
%fu=bitcast i8*%ft to i8**
store i8*%fs,i8**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fo,i64 16
%fw=bitcast i8*%fv to i32*
store i32 2,i32*%fw,align 4
%fx=call i8*@sml_alloc(i32 inreg 20)#0
%fy=getelementptr inbounds i8,i8*%fx,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177296,i32*%fz,align 4
%fA=load i8*,i8**%e,align 8
%fB=bitcast i8*%fx to i8**
store i8*%fA,i8**%fB,align 8
%fC=load i8*,i8**%g,align 8
%fD=getelementptr inbounds i8,i8*%fx,i64 8
%fE=bitcast i8*%fD to i8**
store i8*%fC,i8**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fx,i64 16
%fG=bitcast i8*%fF to i32*
store i32 3,i32*%fG,align 4
%fH=load i8*,i8**%k,align 8
%fI=getelementptr inbounds i8,i8*%fH,i64 8
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
%fL=load i8*,i8**%f,align 8
%fM=load i8*,i8**%j,align 8
%fN=call fastcc i8*@_SMLLN12ElaborateSQL7elabAppE_2517(i8*inreg%fM,i8*inreg%fL,i8*inreg%fx,i8*inreg%fK)
ret i8*%fN
fO:
%fP=getelementptr inbounds i8,i8*%d9,i64 8
%fQ=bitcast i8*%fP to i8**
%fR=load i8*,i8**%fQ,align 8
store i8*%fR,i8**%h,align 8
%fS=call i8*@sml_alloc(i32 inreg 36)#0
%fT=getelementptr inbounds i8,i8*%fS,i64 -4
%fU=bitcast i8*%fT to i32*
store i32 1342177312,i32*%fU,align 4
store i8*%fS,i8**%i,align 8
%fV=bitcast i8*%fS to i64*
store i64 0,i64*%fV,align 4
%fW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fX=getelementptr inbounds i8,i8*%fS,i64 8
%fY=bitcast i8*%fX to i8**
store i8*%fW,i8**%fY,align 8
%fZ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%f0=getelementptr inbounds i8,i8*%fS,i64 16
%f1=bitcast i8*%f0 to i8**
store i8*%fZ,i8**%f1,align 8
%f2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%f3=getelementptr inbounds i8,i8*%fS,i64 24
%f4=bitcast i8*%f3 to i8**
store i8*%f2,i8**%f4,align 8
%f5=getelementptr inbounds i8,i8*%fS,i64 32
%f6=bitcast i8*%f5 to i32*
store i32 14,i32*%f6,align 4
%f7=call i8*@sml_alloc(i32 inreg 20)#0
%f8=getelementptr inbounds i8,i8*%f7,i64 -4
%f9=bitcast i8*%f8 to i32*
store i32 1342177296,i32*%f9,align 4
store i8*%f7,i8**%d,align 8
%ga=getelementptr inbounds i8,i8*%f7,i64 4
%gb=bitcast i8*%ga to i32*
store i32 0,i32*%gb,align 1
%gc=bitcast i8*%f7 to i32*
store i32 27,i32*%gc,align 4
%gd=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ge=getelementptr inbounds i8,i8*%f7,i64 8
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=getelementptr inbounds i8,i8*%f7,i64 16
%gh=bitcast i8*%gg to i32*
store i32 2,i32*%gh,align 4
%gi=call i8*@sml_alloc(i32 inreg 20)#0
%gj=getelementptr inbounds i8,i8*%gi,i64 -4
%gk=bitcast i8*%gj to i32*
store i32 1342177296,i32*%gk,align 4
store i8*%gi,i8**%g,align 8
%gl=getelementptr inbounds i8,i8*%gi,i64 4
%gm=bitcast i8*%gl to i32*
store i32 0,i32*%gm,align 1
%gn=bitcast i8*%gi to i32*
store i32 1,i32*%gn,align 4
%go=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gp=getelementptr inbounds i8,i8*%gi,i64 8
%gq=bitcast i8*%gp to i8**
store i8*%go,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gi,i64 16
%gs=bitcast i8*%gr to i32*
store i32 2,i32*%gs,align 4
%gt=call i8*@sml_alloc(i32 inreg 20)#0
%gu=getelementptr inbounds i8,i8*%gt,i64 -4
%gv=bitcast i8*%gu to i32*
store i32 1342177296,i32*%gv,align 4
%gw=load i8*,i8**%e,align 8
%gx=bitcast i8*%gt to i8**
store i8*%gw,i8**%gx,align 8
%gy=load i8*,i8**%g,align 8
%gz=getelementptr inbounds i8,i8*%gt,i64 8
%gA=bitcast i8*%gz to i8**
store i8*%gy,i8**%gA,align 8
%gB=getelementptr inbounds i8,i8*%gt,i64 16
%gC=bitcast i8*%gB to i32*
store i32 3,i32*%gC,align 4
%gD=load i8*,i8**%k,align 8
%gE=getelementptr inbounds i8,i8*%gD,i64 8
%gF=bitcast i8*%gE to i8**
%gG=load i8*,i8**%gF,align 8
%gH=load i8*,i8**%f,align 8
%gI=load i8*,i8**%j,align 8
%gJ=call fastcc i8*@_SMLLN12ElaborateSQL7elabAppE_2517(i8*inreg%gI,i8*inreg%gH,i8*inreg%gt,i8*inreg%gG)
ret i8*%gJ
gK:
%gL=getelementptr inbounds i8,i8*%t,i64 8
%gM=bitcast i8*%gL to i8**
%gN=load i8*,i8**%gM,align 8
store i8*null,i8**%f,align 8
store i8*%gN,i8**%e,align 8
%gO=load i8*,i8**%j,align 8
%gP=call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%gO,i8*inreg%r,i8*inreg%R)
%gQ=load i8*,i8**%d,align 8
%gR=load i8*,i8**%e,align 8
%gS=load i8*,i8**%j,align 8
%gT=call fastcc i8*@_SMLLN12ElaborateSQL7elabAppE_2517(i8*inreg%gS,i8*inreg%gQ,i8*inreg%gP,i8*inreg%gR)
ret i8*%gT
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabAppE_2517(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
t:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
store i8*%a,i8**%n,align 8
%q=bitcast i8**%k to i8***
br label%r
r:
%s=phi i8*[%ey,%en],[%b,%t]
%u=phi i8*[%eo,%en],[%c,%t]
%v=phi i8*[%ex,%en],[%d,%t]
store i8*%s,i8**%e,align 8
store i8*%u,i8**%f,align 8
store i8*%v,i8**%g,align 8
%w=load atomic i32,i32*@sml_check_flag unordered,align 4
%x=icmp eq i32%w,0
br i1%x,label%C,label%y
y:
call void@sml_check(i32 inreg%w)
%z=load i8*,i8**%g,align 8
%A=load i8*,i8**%f,align 8
%B=load i8*,i8**%e,align 8
br label%C
C:
%D=phi i8*[%B,%y],[%s,%r]
%E=phi i8*[%A,%y],[%u,%r]
%F=phi i8*[%z,%y],[%v,%r]
store i8*null,i8**%g,align 8
store i8*%F,i8**%k,align 8
store i8*null,i8**%f,align 8
store i8*%D,i8**%l,align 8
%G=bitcast i8*%E to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%m,align 8
%I=getelementptr inbounds i8,i8*%E,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%h,align 8
%L=icmp eq i8*%F,null
br i1%L,label%M,label%N
M:
ret i8*%E
N:
%O=bitcast i8*%K to i32*
%P=load i32,i32*%O,align 4
%Q=icmp ult i32%P,2
br i1%Q,label%aj,label%R
R:
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%n,align 8
call void@sml_matchcomp_bug()
%S=load i8*,i8**@_SMLZ5Match,align 8
store i8*%S,i8**%e,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%f,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jn,i64 0,i32 2,i64 0),i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 60)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177336,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ac,i64 56
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=load i8*,i8**%f,align 8
%ai=bitcast i8*%ac to i8**
store i8*%ah,i8**%ai,align 8
call void@sml_raise(i8*inreg%ac)#1
unreachable
aj:
%ak=getelementptr inbounds i8,i8*%K,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=call fastcc i8*@_SMLLN12ElaborateSQL6getLocE_1476(i8*inreg%am)
store i8*%an,i8**%e,align 8
%ao=load i8**,i8***%q,align 8
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8*%ap to i32*
%ar=load i32,i32*%aq,align 4
switch i32%ar,label%as[
i32 0,label%aY
i32 1,label%aR
i32 2,label%aK
]
as:
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%n,align 8
call void@sml_matchcomp_bug()
%at=load i8*,i8**@_SMLZ5Match,align 8
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%f,align 8
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jo,i64 0,i32 2,i64 0),i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 60)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177336,i32*%aF,align 4
%aG=getelementptr inbounds i8,i8*%aD,i64 56
%aH=bitcast i8*%aG to i32*
store i32 1,i32*%aH,align 4
%aI=load i8*,i8**%f,align 8
%aJ=bitcast i8*%aD to i8**
store i8*%aI,i8**%aJ,align 8
call void@sml_raise(i8*inreg%aD)#1
unreachable
aK:
%aL=getelementptr inbounds i8,i8*%ap,i64 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 8
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%f,align 8
br label%a5
aR:
%aS=getelementptr inbounds i8,i8*%ap,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%f,align 8
br label%a5
aY:
%aZ=getelementptr inbounds i8,i8*%ap,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 16
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%f,align 8
br label%a5
a5:
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%a6)
store i8*%bg,i8**%e,align 8
%bh=load i8**,i8***%q,align 8
%bi=load i8*,i8**%bh,align 8
%bj=load i8*,i8**%l,align 8
%bk=load i8*,i8**%n,align 8
%bl=call fastcc i8*@_SMLLN12ElaborateSQL12elabInfixExpE_2515(i8*inreg%bk,i8*inreg%bj,i8*inreg%bi)
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%f,align 8
%bo=getelementptr inbounds i8,i8*%bl,i64 8
%bp=bitcast i8*%bo to i8**
%bq=load i8*,i8**%bp,align 8
store i8*%bq,i8**%g,align 8
%br=load i8*,i8**%h,align 8
%bs=bitcast i8*%br to i32*
%bt=load i32,i32*%bs,align 4
%bu=icmp eq i32%bt,0
br i1%bu,label%bv,label%cG
bv:
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%i,align 8
%bz=bitcast i8*%bq to i32*
%bA=load i32,i32*%bz,align 4
%bB=icmp eq i32%bA,0
br i1%bB,label%bD,label%bC
bC:
store i8*null,i8**%i,align 8
br label%cG
bD:
%bE=getelementptr inbounds i8,i8*%bq,i64 8
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%g,align 8
%bH=load i8*,i8**%n,align 8
%bI=getelementptr inbounds i8,i8*%bH,i64 16
%bJ=bitcast i8*%bI to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%h,align 8
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
store i8*%bL,i8**%j,align 8
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bL,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*null,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bL,i64 16
%bT=bitcast i8*%bS to i32*
store i32 3,i32*%bT,align 4
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
%bX=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b0=getelementptr inbounds i8,i8*%bU,i64 8
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bU,i64 16
%b3=bitcast i8*%b2 to i32*
store i32 3,i32*%b3,align 4
%b4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b5=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%b4,i8*inreg%bU)
store i8*%b5,i8**%f,align 8
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
store i8*%b6,i8**%h,align 8
%b9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cc=getelementptr inbounds i8,i8*%b6,i64 8
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 16
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b6,i64 24
%ci=bitcast i8*%ch to i32*
store i32 7,i32*%ci,align 4
%cj=call i8*@sml_alloc(i32 inreg 20)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177296,i32*%cl,align 4
store i8*%cj,i8**%e,align 8
%cm=bitcast i8*%cj to i64*
store i64 0,i64*%cm,align 4
%cn=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%co=getelementptr inbounds i8,i8*%cj,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cj,i64 16
%cr=bitcast i8*%cq to i32*
store i32 2,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
store i8*%cs,i8**%g,align 8
%cv=bitcast i8*%cs to i64*
store i64 0,i64*%cv,align 4
%cw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to i32*
store i32 2,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
%cE=load i8*,i8**%f,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
br label%en
cG:
%cH=load i8*,i8**%n,align 8
%cI=getelementptr inbounds i8,i8*%cH,i64 40
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
store i8*null,i8**%h,align 8
%cL=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%cK,i8*inreg%br)
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
store i8*%cN,i8**%h,align 8
%cO=getelementptr inbounds i8,i8*%cL,i64 8
%cP=bitcast i8*%cO to i8**
%cQ=load i8*,i8**%cP,align 8
store i8*%cQ,i8**%i,align 8
%cR=load i8*,i8**%n,align 8
%cS=getelementptr inbounds i8,i8*%cR,i64 40
%cT=bitcast i8*%cS to i8**
%cU=load i8*,i8**%cT,align 8
%cV=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cW=call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2502(i8*inreg%cU,i8*inreg%cV)
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%g,align 8
%cZ=getelementptr inbounds i8,i8*%cW,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%j,align 8
%c2=load i8*,i8**%n,align 8
%c3=getelementptr inbounds i8,i8*%c2,i64 16
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
store i8*%c5,i8**%o,align 8
%c6=call i8*@sml_alloc(i32 inreg 20)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177296,i32*%c8,align 4
store i8*%c6,i8**%p,align 8
%c9=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c6,i64 8
%dc=bitcast i8*%db to i8**
store i8*null,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c6,i64 16
%de=bitcast i8*%dd to i32*
store i32 3,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 20)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
store i8*%df,i8**%g,align 8
%di=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dl=getelementptr inbounds i8,i8*%df,i64 8
%dm=bitcast i8*%dl to i8**
store i8*%dk,i8**%dm,align 8
%dn=getelementptr inbounds i8,i8*%df,i64 16
%do=bitcast i8*%dn to i32*
store i32 3,i32*%do,align 4
%dp=call i8*@sml_alloc(i32 inreg 20)#0
%dq=getelementptr inbounds i8,i8*%dp,i64 -4
%dr=bitcast i8*%dq to i32*
store i32 1342177296,i32*%dr,align 4
store i8*%dp,i8**%f,align 8
%ds=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dt=bitcast i8*%dp to i8**
store i8*%ds,i8**%dt,align 8
%du=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dv=getelementptr inbounds i8,i8*%dp,i64 8
%dw=bitcast i8*%dv to i8**
store i8*%du,i8**%dw,align 8
%dx=getelementptr inbounds i8,i8*%dp,i64 16
%dy=bitcast i8*%dx to i32*
store i32 3,i32*%dy,align 4
%dz=call i8*@sml_alloc(i32 inreg 20)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177296,i32*%dB,align 4
%dC=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%dD=bitcast i8*%dz to i8**
store i8*%dC,i8**%dD,align 8
%dE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dF=getelementptr inbounds i8,i8*%dz,i64 8
%dG=bitcast i8*%dF to i8**
store i8*%dE,i8**%dG,align 8
%dH=getelementptr inbounds i8,i8*%dz,i64 16
%dI=bitcast i8*%dH to i32*
store i32 3,i32*%dI,align 4
%dJ=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%dK=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%dJ,i8*inreg%dz)
store i8*%dK,i8**%f,align 8
%dL=call i8*@sml_alloc(i32 inreg 28)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177304,i32*%dN,align 4
store i8*%dL,i8**%g,align 8
%dO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dR=getelementptr inbounds i8,i8*%dL,i64 8
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dU=getelementptr inbounds i8,i8*%dL,i64 16
%dV=bitcast i8*%dU to i8**
store i8*%dT,i8**%dV,align 8
%dW=getelementptr inbounds i8,i8*%dL,i64 24
%dX=bitcast i8*%dW to i32*
store i32 7,i32*%dX,align 4
%dY=call i8*@sml_alloc(i32 inreg 20)#0
%dZ=getelementptr inbounds i8,i8*%dY,i64 -4
%d0=bitcast i8*%dZ to i32*
store i32 1342177296,i32*%d0,align 4
store i8*%dY,i8**%e,align 8
%d1=bitcast i8*%dY to i64*
store i64 0,i64*%d1,align 4
%d2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d3=getelementptr inbounds i8,i8*%dY,i64 8
%d4=bitcast i8*%d3 to i8**
store i8*%d2,i8**%d4,align 8
%d5=getelementptr inbounds i8,i8*%dY,i64 16
%d6=bitcast i8*%d5 to i32*
store i32 2,i32*%d6,align 4
%d7=call i8*@sml_alloc(i32 inreg 20)#0
%d8=getelementptr inbounds i8,i8*%d7,i64 -4
%d9=bitcast i8*%d8 to i32*
store i32 1342177296,i32*%d9,align 4
store i8*%d7,i8**%g,align 8
%ea=getelementptr inbounds i8,i8*%d7,i64 4
%eb=bitcast i8*%ea to i32*
store i32 0,i32*%eb,align 1
%ec=bitcast i8*%d7 to i32*
store i32 1,i32*%ec,align 4
%ed=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ee=getelementptr inbounds i8,i8*%d7,i64 8
%ef=bitcast i8*%ee to i8**
store i8*%ed,i8**%ef,align 8
%eg=getelementptr inbounds i8,i8*%d7,i64 16
%eh=bitcast i8*%eg to i32*
store i32 2,i32*%eh,align 4
%ei=call i8*@sml_alloc(i32 inreg 20)#0
%ej=getelementptr inbounds i8,i8*%ei,i64 -4
%ek=bitcast i8*%ej to i32*
store i32 1342177296,i32*%ek,align 4
%el=load i8*,i8**%f,align 8
%em=bitcast i8*%ei to i8**
store i8*%el,i8**%em,align 8
br label%en
en:
%eo=phi i8*[%ei,%cG],[%cB,%bD]
%ep=load i8*,i8**%g,align 8
%eq=getelementptr inbounds i8,i8*%eo,i64 8
%er=bitcast i8*%eq to i8**
store i8*%ep,i8**%er,align 8
%es=getelementptr inbounds i8,i8*%eo,i64 16
%et=bitcast i8*%es to i32*
store i32 3,i32*%et,align 4
%eu=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ev=getelementptr inbounds i8,i8*%eu,i64 8
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
%ey=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
br label%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
K:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
%y=alloca i8*,align 8
%z=alloca i8*,align 8
%A=alloca i8*,align 8
%B=alloca i8*,align 8
%C=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
call void@llvm.gcroot(i8**%y,i8*null)#0
call void@llvm.gcroot(i8**%z,i8*null)#0
call void@llvm.gcroot(i8**%A,i8*null)#0
call void@llvm.gcroot(i8**%B,i8*null)#0
call void@llvm.gcroot(i8**%C,i8*null)#0
store i8*%b,i8**%i,align 8
store i8*%c,i8**%j,align 8
store i8*%a,i8**%B,align 8
%D=load atomic i32,i32*@sml_check_flag unordered,align 4
%E=icmp eq i32%D,0
br i1%E,label%I,label%F
F:
call void@sml_check(i32 inreg%D)
%G=load i8*,i8**%j,align 8
%H=load i8*,i8**%i,align 8
br label%I
I:
%J=phi i8*[%H,%F],[%b,%K]
%L=phi i8*[%G,%F],[%c,%K]
store i8*null,i8**%j,align 8
store i8*%J,i8**%p,align 8
%M=bitcast i8*%L to i32*
%N=load i32,i32*%M,align 4
switch i32%N,label%O[
i32 0,label%am
i32 1,label%ag
]
O:
store i8*null,i8**%p,align 8
store i8*null,i8**%B,align 8
call void@sml_matchcomp_bug()
%P=load i8*,i8**@_SMLZ5Match,align 8
store i8*%P,i8**%i,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%j,align 8
%T=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 60)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177336,i32*%ab,align 4
%ac=getelementptr inbounds i8,i8*%Z,i64 56
%ad=bitcast i8*%ac to i32*
store i32 1,i32*%ad,align 4
%ae=load i8*,i8**%j,align 8
%af=bitcast i8*%Z to i8**
store i8*%ae,i8**%af,align 8
call void@sml_raise(i8*inreg%Z)#1
unreachable
ag:
%ah=getelementptr inbounds i8,i8*%L,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%B,align 8
%al=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%ak,i8*inreg%J,i32 inreg 7,i8*inreg%aj)
ret i8*%al
am:
%an=getelementptr inbounds i8,i8*%L,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%v,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 48
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%y,align 8
%at=getelementptr inbounds i8,i8*%ap,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%B,align 8
%ax=call fastcc i8*@_SMLLN12ElaborateSQL14elabFromClauseE_2521(i8*inreg%aw,i8*inreg%J,i8*inreg%av)
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%i,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 8
%aB=bitcast i8*%aA to i8***
%aC=load i8**,i8***%aB,align 8
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%j,align 8
%aE=getelementptr inbounds i8*,i8**%aC,i64 1
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%k,align 8
%aG=icmp eq i8*%az,null
br i1%aG,label%aH,label%aW
aH:
%aI=load i8*,i8**%p,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%l,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%i,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%l,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
br label%b3
aW:
%aX=bitcast i8*%az to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%l,align 8
%aZ=load i8*,i8**%p,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 16
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
%a3=icmp eq i8*%a2,null
br i1%a3,label%a4,label%bf
a4:
store i8*null,i8**%l,align 8
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
%a8=load i8*,i8**%i,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%l,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
br label%b3
bf:
%bg=bitcast i8*%a2 to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%m,align 8
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
%bl=load i8*,i8**%l,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%m,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call fastcc i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg%bi)
store i8*%bs,i8**%n,align 8
%bt=call i8*@sml_alloc(i32 inreg 12)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177288,i32*%bv,align 4
store i8*%bt,i8**%o,align 8
%bw=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bt,i64 8
%bz=bitcast i8*%by to i32*
store i32 1,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bA,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 3,i32*%bJ,align 4
%bK=call fastcc i8*@_SMLFN11RecordLabel3Set10differenceE(i8*inreg%bA)
store i8*%bK,i8**%l,align 8
%bL=call i8*@sml_alloc(i32 inreg 12)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177288,i32*%bN,align 4
store i8*%bL,i8**%m,align 8
%bO=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bL,i64 8
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
%bV=load i8*,i8**%o,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=load i8*,i8**%m,align 8
%bY=getelementptr inbounds i8,i8*%bS,i64 8
%bZ=bitcast i8*%bY to i8**
store i8*%bX,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bS,i64 16
%b1=bitcast i8*%b0 to i32*
store i32 3,i32*%b1,align 4
%b2=load i8*,i8**%i,align 8
br label%b3
b3:
%b4=phi i8**[%aQ,%aH],[%a9,%a4],[%bW,%bf]
%b5=phi i8*[%aP,%aH],[%a8,%a4],[%b2,%bf]
%b6=phi i8*[%aR,%aH],[%ba,%a4],[%bX,%bf]
%b7=phi i8*[%aM,%aH],[%a5,%a4],[%bS,%bf]
store i8*%b7,i8**%n,align 8
store i8*%b6,i8**%l,align 8
%b8=icmp eq i8*%b5,null
%b9=icmp eq i8*%b6,null
%ca=or i1%b9,%b8
br i1%ca,label%cC,label%cb
cb:
%cc=bitcast i8*%b5 to i8**
%cd=load i8*,i8**%cc,align 8
%ce=bitcast i8*%b6 to i8**
%cf=load i8*,i8**%ce,align 8
store i8*%cf,i8**%o,align 8
%cg=call fastcc i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg%cd)
store i8*%cg,i8**%m,align 8
%ch=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ci=call fastcc i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg%ch)
store i8*%ci,i8**%o,align 8
%cj=call i8*@sml_alloc(i32 inreg 20)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177296,i32*%cl,align 4
store i8*%cj,i8**%q,align 8
%cm=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cp=getelementptr inbounds i8,i8*%cj,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cj,i64 16
%cs=bitcast i8*%cr to i32*
store i32 3,i32*%cs,align 4
%ct=call i8*@sml_alloc(i32 inreg 12)#0
%cu=getelementptr inbounds i8,i8*%ct,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177288,i32*%cv,align 4
%cw=load i8*,i8**%q,align 8
%cx=bitcast i8*%ct to i8**
store i8*%cw,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%ct,i64 8
%cz=bitcast i8*%cy to i32*
store i32 1,i32*%cz,align 4
%cA=bitcast i8**%n to i8***
%cB=load i8**,i8***%cA,align 8
br label%cC
cC:
%cD=phi i8**[%cB,%cb],[%b4,%b3]
%cE=phi i8*[%ct,%cb],[null,%b3]
store i8*%cE,i8**%m,align 8
%cF=bitcast i8**%p to i8***
%cG=load i8**,i8***%cF,align 8
%cH=load i8*,i8**%cG,align 8
store i8*%cH,i8**%o,align 8
%cI=getelementptr inbounds i8*,i8**%cG,i64 1
%cJ=load i8*,i8**%cI,align 8
store i8*%cJ,i8**%p,align 8
store i8*null,i8**%n,align 8
%cK=load i8*,i8**%cD,align 8
store i8*%cK,i8**%q,align 8
%cL=call i8*@sml_alloc(i32 inreg 28)#0
%cM=getelementptr inbounds i8,i8*%cL,i64 -4
%cN=bitcast i8*%cM to i32*
store i32 1342177304,i32*%cN,align 4
store i8*%cL,i8**%n,align 8
%cO=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cP=bitcast i8*%cL to i8**
store i8*%cO,i8**%cP,align 8
%cQ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%cR=getelementptr inbounds i8,i8*%cL,i64 8
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%cU=getelementptr inbounds i8,i8*%cL,i64 16
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cL,i64 24
%cX=bitcast i8*%cW to i32*
store i32 7,i32*%cX,align 4
%cY=bitcast i8**%v to i8***
%cZ=load i8**,i8***%cY,align 8
%c0=load i8*,i8**%cZ,align 8
%c1=load i8*,i8**%B,align 8
%c2=call fastcc i8*@_SMLLN12ElaborateSQL16elabSelectClauseE_2532(i8*inreg%c1,i8*inreg%cL,i8*inreg%c0)
%c3=bitcast i8*%c2 to i8**
%c4=load i8*,i8**%c3,align 8
store i8*%c4,i8**%o,align 8
%c5=getelementptr inbounds i8,i8*%c2,i64 8
%c6=bitcast i8*%c5 to i8**
%c7=load i8*,i8**%c6,align 8
store i8*%c7,i8**%p,align 8
%c8=load i8*,i8**%B,align 8
%c9=getelementptr inbounds i8,i8*%c8,i64 24
%da=bitcast i8*%c9 to i8**
%db=load i8*,i8**%da,align 8
store i8*%db,i8**%q,align 8
%dc=call i8*@sml_alloc(i32 inreg 20)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177296,i32*%de,align 4
store i8*%dc,i8**%r,align 8
%df=load i8*,i8**%n,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=load i8*,i8**%B,align 8
%di=getelementptr inbounds i8,i8*%dc,i64 8
%dj=bitcast i8*%di to i8**
store i8*%dh,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%dc,i64 16
%dl=bitcast i8*%dk to i32*
store i32 3,i32*%dl,align 4
%dm=call i8*@sml_alloc(i32 inreg 28)#0
%dn=getelementptr inbounds i8,i8*%dm,i64 -4
%do=bitcast i8*%dn to i32*
store i32 1342177304,i32*%do,align 4
%dp=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%dq=bitcast i8*%dm to i8**
store i8*%dp,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dm,i64 8
%ds=bitcast i8*%dr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2595 to void(...)*),void(...)**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dm,i64 16
%du=bitcast i8*%dt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2595 to void(...)*),void(...)**%du,align 8
%dv=getelementptr inbounds i8,i8*%dm,i64 24
%dw=bitcast i8*%dv to i32*
store i32 -2147483647,i32*%dw,align 4
%dx=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dy=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%dx,i8*inreg%dm)
%dz=getelementptr inbounds i8,i8*%dy,i64 16
%dA=bitcast i8*%dz to i8*(i8*,i8*)**
%dB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dA,align 8
%dC=bitcast i8*%dy to i8**
%dD=load i8*,i8**%dC,align 8
%dE=load i8*,i8**%v,align 8
%dF=getelementptr inbounds i8,i8*%dE,i64 16
%dG=bitcast i8*%dF to i8**
%dH=load i8*,i8**%dG,align 8
%dI=call fastcc i8*%dB(i8*inreg%dD,i8*inreg%dH)
%dJ=bitcast i8*%dI to i8**
%dK=load i8*,i8**%dJ,align 8
store i8*%dK,i8**%q,align 8
%dL=getelementptr inbounds i8,i8*%dI,i64 8
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
store i8*%dN,i8**%r,align 8
%dO=load i8*,i8**%B,align 8
%dP=getelementptr inbounds i8,i8*%dO,i64 24
%dQ=bitcast i8*%dP to i8**
%dR=load i8*,i8**%dQ,align 8
store i8*%dR,i8**%s,align 8
%dS=call i8*@sml_alloc(i32 inreg 20)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
store i8*%dS,i8**%t,align 8
%dV=load i8*,i8**%n,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=load i8*,i8**%B,align 8
%dY=getelementptr inbounds i8,i8*%dS,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dS,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 3,i32*%d1,align 4
%d2=call i8*@sml_alloc(i32 inreg 28)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177304,i32*%d4,align 4
%d5=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%d6=bitcast i8*%d2 to i8**
store i8*%d5,i8**%d6,align 8
%d7=getelementptr inbounds i8,i8*%d2,i64 8
%d8=bitcast i8*%d7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2596 to void(...)*),void(...)**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d2,i64 16
%ea=bitcast i8*%d9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2596 to void(...)*),void(...)**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d2,i64 24
%ec=bitcast i8*%eb to i32*
store i32 -2147483647,i32*%ec,align 4
%ed=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%ee=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%ed,i8*inreg%d2)
%ef=getelementptr inbounds i8,i8*%ee,i64 16
%eg=bitcast i8*%ef to i8*(i8*,i8*)**
%eh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eg,align 8
%ei=bitcast i8*%ee to i8**
%ej=load i8*,i8**%ei,align 8
%ek=load i8*,i8**%v,align 8
%el=getelementptr inbounds i8,i8*%ek,i64 24
%em=bitcast i8*%el to i8**
%en=load i8*,i8**%em,align 8
%eo=call fastcc i8*%eh(i8*inreg%ej,i8*inreg%en)
store i8*%eo,i8**%w,align 8
%ep=bitcast i8*%eo to i8**
%eq=load i8*,i8**%ep,align 8
store i8*%eq,i8**%s,align 8
%er=load i8*,i8**%B,align 8
%es=getelementptr inbounds i8,i8*%er,i64 24
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%t,align 8
%ev=call i8*@sml_alloc(i32 inreg 20)#0
%ew=getelementptr inbounds i8,i8*%ev,i64 -4
%ex=bitcast i8*%ew to i32*
store i32 1342177296,i32*%ex,align 4
store i8*%ev,i8**%u,align 8
%ey=load i8*,i8**%n,align 8
%ez=bitcast i8*%ev to i8**
store i8*%ey,i8**%ez,align 8
%eA=load i8*,i8**%B,align 8
%eB=getelementptr inbounds i8,i8*%ev,i64 8
%eC=bitcast i8*%eB to i8**
store i8*%eA,i8**%eC,align 8
%eD=getelementptr inbounds i8,i8*%ev,i64 16
%eE=bitcast i8*%eD to i32*
store i32 3,i32*%eE,align 4
%eF=call i8*@sml_alloc(i32 inreg 28)#0
%eG=getelementptr inbounds i8,i8*%eF,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 1342177304,i32*%eH,align 4
%eI=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%eJ=bitcast i8*%eF to i8**
store i8*%eI,i8**%eJ,align 8
%eK=getelementptr inbounds i8,i8*%eF,i64 8
%eL=bitcast i8*%eK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2597 to void(...)*),void(...)**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eF,i64 16
%eN=bitcast i8*%eM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2597 to void(...)*),void(...)**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eF,i64 24
%eP=bitcast i8*%eO to i32*
store i32 -2147483647,i32*%eP,align 4
%eQ=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%eR=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%eQ,i8*inreg%eF)
%eS=getelementptr inbounds i8,i8*%eR,i64 16
%eT=bitcast i8*%eS to i8*(i8*,i8*)**
%eU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eT,align 8
%eV=bitcast i8*%eR to i8**
%eW=load i8*,i8**%eV,align 8
%eX=load i8*,i8**%v,align 8
%eY=getelementptr inbounds i8,i8*%eX,i64 32
%eZ=bitcast i8*%eY to i8**
%e0=load i8*,i8**%eZ,align 8
%e1=call fastcc i8*%eU(i8*inreg%eW,i8*inreg%e0)
%e2=bitcast i8*%e1 to i8**
%e3=load i8*,i8**%e2,align 8
store i8*%e3,i8**%t,align 8
%e4=getelementptr inbounds i8,i8*%e1,i64 8
%e5=bitcast i8*%e4 to i8**
%e6=load i8*,i8**%e5,align 8
store i8*%e6,i8**%u,align 8
%e7=load i8*,i8**%B,align 8
%e8=getelementptr inbounds i8,i8*%e7,i64 24
%e9=bitcast i8*%e8 to i8**
%fa=load i8*,i8**%e9,align 8
store i8*%fa,i8**%x,align 8
%fb=call i8*@sml_alloc(i32 inreg 20)#0
%fc=getelementptr inbounds i8,i8*%fb,i64 -4
%fd=bitcast i8*%fc to i32*
store i32 1342177296,i32*%fd,align 4
store i8*%fb,i8**%z,align 8
%fe=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%ff=bitcast i8*%fb to i8**
store i8*%fe,i8**%ff,align 8
%fg=load i8*,i8**%B,align 8
%fh=getelementptr inbounds i8,i8*%fb,i64 8
%fi=bitcast i8*%fh to i8**
store i8*%fg,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fb,i64 16
%fk=bitcast i8*%fj to i32*
store i32 3,i32*%fk,align 4
%fl=call i8*@sml_alloc(i32 inreg 28)#0
%fm=getelementptr inbounds i8,i8*%fl,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 1342177304,i32*%fn,align 4
%fo=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%fp=bitcast i8*%fl to i8**
store i8*%fo,i8**%fp,align 8
%fq=getelementptr inbounds i8,i8*%fl,i64 8
%fr=bitcast i8*%fq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2598 to void(...)*),void(...)**%fr,align 8
%fs=getelementptr inbounds i8,i8*%fl,i64 16
%ft=bitcast i8*%fs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabQueryE_2598 to void(...)*),void(...)**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fl,i64 24
%fv=bitcast i8*%fu to i32*
store i32 -2147483647,i32*%fv,align 4
%fw=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%fx=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%fw,i8*inreg%fl)
%fy=getelementptr inbounds i8,i8*%fx,i64 16
%fz=bitcast i8*%fy to i8*(i8*,i8*)**
%fA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fz,align 8
%fB=bitcast i8*%fx to i8**
%fC=load i8*,i8**%fB,align 8
%fD=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%fE=getelementptr inbounds i8,i8*%fD,i64 40
%fF=bitcast i8*%fE to i8**
%fG=load i8*,i8**%fF,align 8
%fH=call fastcc i8*%fA(i8*inreg%fC,i8*inreg%fG)
%fI=bitcast i8*%fH to i8**
%fJ=load i8*,i8**%fI,align 8
store i8*%fJ,i8**%n,align 8
%fK=getelementptr inbounds i8,i8*%fH,i64 8
%fL=bitcast i8*%fK to i8**
%fM=load i8*,i8**%fL,align 8
store i8*%fM,i8**%v,align 8
%fN=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fO=getelementptr inbounds i8,i8*%fN,i64 16
%fP=bitcast i8*%fO to i8*(i8*,i8*)**
%fQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fP,align 8
%fR=bitcast i8*%fN to i8**
%fS=load i8*,i8**%fR,align 8
store i8*%fS,i8**%A,align 8
%fT=load i8*,i8**%B,align 8
%fU=getelementptr inbounds i8,i8*%fT,i64 56
%fV=bitcast i8*%fU to i8**
%fW=load i8*,i8**%fV,align 8
store i8*%fW,i8**%C,align 8
%fX=load i8*,i8**%o,align 8
%fY=getelementptr inbounds i8,i8*%fX,i64 8
%fZ=bitcast i8*%fY to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%x,align 8
%f1=load i8*,i8**%j,align 8
%f2=getelementptr inbounds i8,i8*%f1,i64 8
%f3=bitcast i8*%f2 to i8**
%f4=load i8*,i8**%f3,align 8
store i8*%f4,i8**%z,align 8
%f5=call i8*@sml_alloc(i32 inreg 20)#0
%f6=getelementptr inbounds i8,i8*%f5,i64 -4
%f7=bitcast i8*%f6 to i32*
store i32 1342177296,i32*%f7,align 4
%f8=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%f9=bitcast i8*%f5 to i8**
store i8*%f8,i8**%f9,align 8
%ga=load i8*,i8**%z,align 8
store i8*null,i8**%z,align 8
%gb=getelementptr inbounds i8,i8*%f5,i64 8
%gc=bitcast i8*%gb to i8**
store i8*%ga,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f5,i64 16
%ge=bitcast i8*%gd to i32*
store i32 3,i32*%ge,align 4
%gf=call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%f5)
store i8*%gf,i8**%x,align 8
%gg=call i8*@sml_alloc(i32 inreg 20)#0
%gh=getelementptr inbounds i8,i8*%gg,i64 -4
%gi=bitcast i8*%gh to i32*
store i32 1342177296,i32*%gi,align 4
%gj=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%gk=bitcast i8*%gg to i8**
store i8*%gj,i8**%gk,align 8
%gl=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%gm=getelementptr inbounds i8,i8*%gg,i64 8
%gn=bitcast i8*%gm to i8**
store i8*%gl,i8**%gn,align 8
%go=getelementptr inbounds i8,i8*%gg,i64 16
%gp=bitcast i8*%go to i32*
store i32 3,i32*%gp,align 4
%gq=load i8*,i8**%C,align 8
store i8*null,i8**%C,align 8
%gr=call fastcc i8*@_SMLLN12ElaborateSQL12setupGroupByE_2510(i8*inreg%gq,i8*inreg%gg)
%gs=load i8*,i8**%A,align 8
store i8*null,i8**%A,align 8
%gt=call fastcc i8*%fQ(i8*inreg%gs,i8*inreg%gr)
%gu=getelementptr inbounds i8,i8*%gt,i64 16
%gv=bitcast i8*%gu to i8*(i8*,i8*)**
%gw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gv,align 8
%gx=bitcast i8*%gt to i8**
%gy=load i8*,i8**%gx,align 8
%gz=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%gA=getelementptr inbounds i8,i8*%gz,i64 8
%gB=bitcast i8*%gA to i8**
%gC=load i8*,i8**%gB,align 8
%gD=call fastcc i8*%gw(i8*inreg%gy,i8*inreg%gC)
store i8*%gD,i8**%l,align 8
%gE=load i8*,i8**%B,align 8
store i8*null,i8**%B,align 8
%gF=getelementptr inbounds i8,i8*%gE,i64 16
%gG=bitcast i8*%gF to i8**
%gH=load i8*,i8**%gG,align 8
store i8*%gH,i8**%w,align 8
%gI=call i8*@sml_alloc(i32 inreg 20)#0
%gJ=getelementptr inbounds i8,i8*%gI,i64 -4
%gK=bitcast i8*%gJ to i32*
store i32 1342177296,i32*%gK,align 4
store i8*%gI,i8**%x,align 8
%gL=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%gM=bitcast i8*%gI to i8**
store i8*%gL,i8**%gM,align 8
%gN=getelementptr inbounds i8,i8*%gI,i64 8
%gO=bitcast i8*%gN to i8**
store i8*null,i8**%gO,align 8
%gP=getelementptr inbounds i8,i8*%gI,i64 16
%gQ=bitcast i8*%gP to i32*
store i32 3,i32*%gQ,align 4
%gR=call i8*@sml_alloc(i32 inreg 20)#0
%gS=getelementptr inbounds i8,i8*%gR,i64 -4
%gT=bitcast i8*%gS to i32*
store i32 1342177296,i32*%gT,align 4
store i8*%gR,i8**%n,align 8
%gU=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%gV=bitcast i8*%gR to i8**
store i8*%gU,i8**%gV,align 8
%gW=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%gX=getelementptr inbounds i8,i8*%gR,i64 8
%gY=bitcast i8*%gX to i8**
store i8*%gW,i8**%gY,align 8
%gZ=getelementptr inbounds i8,i8*%gR,i64 16
%g0=bitcast i8*%gZ to i32*
store i32 3,i32*%g0,align 4
%g1=call i8*@sml_alloc(i32 inreg 20)#0
%g2=getelementptr inbounds i8,i8*%g1,i64 -4
%g3=bitcast i8*%g2 to i32*
store i32 1342177296,i32*%g3,align 4
store i8*%g1,i8**%t,align 8
%g4=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%g5=bitcast i8*%g1 to i8**
store i8*%g4,i8**%g5,align 8
%g6=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%g7=getelementptr inbounds i8,i8*%g1,i64 8
%g8=bitcast i8*%g7 to i8**
store i8*%g6,i8**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g1,i64 16
%ha=bitcast i8*%g9 to i32*
store i32 3,i32*%ha,align 4
%hb=call i8*@sml_alloc(i32 inreg 20)#0
%hc=getelementptr inbounds i8,i8*%hb,i64 -4
%hd=bitcast i8*%hc to i32*
store i32 1342177296,i32*%hd,align 4
store i8*%hb,i8**%n,align 8
%he=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%hf=bitcast i8*%hb to i8**
store i8*%he,i8**%hf,align 8
%hg=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%hh=getelementptr inbounds i8,i8*%hb,i64 8
%hi=bitcast i8*%hh to i8**
store i8*%hg,i8**%hi,align 8
%hj=getelementptr inbounds i8,i8*%hb,i64 16
%hk=bitcast i8*%hj to i32*
store i32 3,i32*%hk,align 4
%hl=call i8*@sml_alloc(i32 inreg 20)#0
%hm=getelementptr inbounds i8,i8*%hl,i64 -4
%hn=bitcast i8*%hm to i32*
store i32 1342177296,i32*%hn,align 4
store i8*%hl,i8**%q,align 8
%ho=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hp=bitcast i8*%hl to i8**
store i8*%ho,i8**%hp,align 8
%hq=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%hr=getelementptr inbounds i8,i8*%hl,i64 8
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hl,i64 16
%hu=bitcast i8*%ht to i32*
store i32 3,i32*%hu,align 4
%hv=call i8*@sml_alloc(i32 inreg 20)#0
%hw=getelementptr inbounds i8,i8*%hv,i64 -4
%hx=bitcast i8*%hw to i32*
store i32 1342177296,i32*%hx,align 4
%hy=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%hz=bitcast i8*%hv to i8**
store i8*%hy,i8**%hz,align 8
%hA=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%hB=getelementptr inbounds i8,i8*%hv,i64 8
%hC=bitcast i8*%hB to i8**
store i8*%hA,i8**%hC,align 8
%hD=getelementptr inbounds i8,i8*%hv,i64 16
%hE=bitcast i8*%hD to i32*
store i32 3,i32*%hE,align 4
%hF=load i8*,i8**%w,align 8
store i8*null,i8**%w,align 8
%hG=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%hF,i8*inreg%hv)
store i8*%hG,i8**%j,align 8
%hH=call i8*@sml_alloc(i32 inreg 20)#0
%hI=getelementptr inbounds i8,i8*%hH,i64 -4
%hJ=bitcast i8*%hI to i32*
store i32 1342177296,i32*%hJ,align 4
%hK=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%hL=bitcast i8*%hH to i8**
store i8*%hK,i8**%hL,align 8
%hM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hN=getelementptr inbounds i8,i8*%hH,i64 8
%hO=bitcast i8*%hN to i8**
store i8*%hM,i8**%hO,align 8
%hP=getelementptr inbounds i8,i8*%hH,i64 16
%hQ=bitcast i8*%hP to i32*
store i32 3,i32*%hQ,align 4
%hR=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hR)
%hS=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hS)
%hT=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hT)
%hU=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hU)
%hV=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hV)
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%hH,i8**%d,align 8
%hW=load atomic i32,i32*@sml_check_flag unordered,align 4
%hX=icmp eq i32%hW,0
br i1%hX,label%hY,label%h1
hY:
%hZ=bitcast i8*%hK to i8**
%h0=bitcast i8*%hH to i8***
br label%h5
h1:
call void@sml_check(i32 inreg%hW)
%h2=bitcast i8**%d to i8****
%h3=load i8***,i8****%h2,align 8
%h4=load i8**,i8***%h3,align 8
br label%h5
h5:
%h6=phi i8**[%h4,%h1],[%hZ,%hY]
%h7=phi i8***[%h3,%h1],[%h0,%hY]
%h8=load i8*,i8**%h6,align 8
store i8*%h8,i8**%e,align 8
%h9=getelementptr inbounds i8**,i8***%h7,i64 1
%ia=bitcast i8***%h9 to i8**
%ib=load i8*,i8**%ia,align 8
%ic=icmp eq i8*%ib,null
br i1%ic,label%id,label%ig
id:
%ie=bitcast i8***%h7 to i8**
%if=load i8*,i8**%ie,align 8
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
br label%i5
ig:
%ih=bitcast i8*%ib to i8**
%ii=load i8*,i8**%ih,align 8
store i8*%ii,i8**%f,align 8
%ij=call fastcc i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg 1,i32 inreg 8)
%ik=getelementptr inbounds i8,i8*%ij,i64 16
%il=bitcast i8*%ik to i8*(i8*,i8*)**
%im=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%il,align 8
%in=bitcast i8*%ij to i8**
%io=load i8*,i8**%in,align 8
store i8*%io,i8**%g,align 8
%ip=call i8*@sml_alloc(i32 inreg 12)#0
%iq=getelementptr inbounds i8,i8*%ip,i64 -4
%ir=bitcast i8*%iq to i32*
store i32 1342177288,i32*%ir,align 4
store i8*%ip,i8**%h,align 8
%is=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%it=bitcast i8*%ip to i8**
store i8*%is,i8**%it,align 8
%iu=getelementptr inbounds i8,i8*%ip,i64 8
%iv=bitcast i8*%iu to i32*
store i32 1,i32*%iv,align 4
%iw=call i8*@sml_alloc(i32 inreg 28)#0
%ix=getelementptr inbounds i8,i8*%iw,i64 -4
%iy=bitcast i8*%ix to i32*
store i32 1342177304,i32*%iy,align 4
%iz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iA=bitcast i8*%iw to i8**
store i8*%iz,i8**%iA,align 8
%iB=getelementptr inbounds i8,i8*%iw,i64 8
%iC=bitcast i8*%iB to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLN12ElaborateSQL12removeLabelsE_2484 to void(...)*),void(...)**%iC,align 8
%iD=getelementptr inbounds i8,i8*%iw,i64 16
%iE=bitcast i8*%iD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12removeLabelsE_2960 to void(...)*),void(...)**%iE,align 8
%iF=getelementptr inbounds i8,i8*%iw,i64 24
%iG=bitcast i8*%iF to i32*
store i32 -2147483647,i32*%iG,align 4
%iH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iI=call fastcc i8*%im(i8*inreg%iH,i8*inreg%iw)
%iJ=getelementptr inbounds i8,i8*%iI,i64 16
%iK=bitcast i8*%iJ to i8*(i8*,i8*)**
%iL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iK,align 8
%iM=bitcast i8*%iI to i8**
%iN=load i8*,i8**%iM,align 8
%iO=bitcast i8**%d to i8***
%iP=load i8**,i8***%iO,align 8
store i8*null,i8**%d,align 8
%iQ=load i8*,i8**%iP,align 8
%iR=getelementptr inbounds i8,i8*%iQ,i64 8
%iS=bitcast i8*%iR to i8**
%iT=load i8*,i8**%iS,align 8
%iU=call fastcc i8*%iL(i8*inreg%iN,i8*inreg%iT)
store i8*%iU,i8**%d,align 8
%iV=call i8*@sml_alloc(i32 inreg 20)#0
%iW=getelementptr inbounds i8,i8*%iV,i64 -4
%iX=bitcast i8*%iW to i32*
store i32 1342177296,i32*%iX,align 4
%iY=load i8*,i8**%e,align 8
%iZ=bitcast i8*%iV to i8**
store i8*%iY,i8**%iZ,align 8
%i0=load i8*,i8**%d,align 8
%i1=getelementptr inbounds i8,i8*%iV,i64 8
%i2=bitcast i8*%i1 to i8**
store i8*%i0,i8**%i2,align 8
%i3=getelementptr inbounds i8,i8*%iV,i64 16
%i4=bitcast i8*%i3 to i32*
store i32 3,i32*%i4,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hR)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hS)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hT)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hU)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hV)
br label%i5
i5:
%i6=phi i8*[%if,%id],[%iV,%ig]
store i8*%i6,i8**%i,align 8
%i7=call i8*@sml_alloc(i32 inreg 68)#0
%i8=getelementptr inbounds i8,i8*%i7,i64 -4
%i9=bitcast i8*%i8 to i32*
store i32 1342177344,i32*%i9,align 4
store i8*%i7,i8**%j,align 8
%ja=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%jb=bitcast i8*%i7 to i8**
store i8*%ja,i8**%jb,align 8
%jc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%jd=getelementptr inbounds i8,i8*%i7,i64 8
%je=bitcast i8*%jd to i8**
store i8*%jc,i8**%je,align 8
%jf=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%jg=getelementptr inbounds i8,i8*%i7,i64 16
%jh=bitcast i8*%jg to i8**
store i8*%jf,i8**%jh,align 8
%ji=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%jj=getelementptr inbounds i8,i8*%i7,i64 24
%jk=bitcast i8*%jj to i8**
store i8*%ji,i8**%jk,align 8
%jl=load i8*,i8**%y,align 8
store i8*null,i8**%y,align 8
%jm=getelementptr inbounds i8,i8*%i7,i64 32
%jn=bitcast i8*%jm to i8**
store i8*%jl,i8**%jn,align 8
%jo=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%jp=getelementptr inbounds i8,i8*%i7,i64 40
%jq=bitcast i8*%jp to i8**
store i8*%jo,i8**%jq,align 8
%jr=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%js=getelementptr inbounds i8,i8*%i7,i64 48
%jt=bitcast i8*%js to i8**
store i8*%jr,i8**%jt,align 8
%ju=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%jv=getelementptr inbounds i8,i8*%i7,i64 56
%jw=bitcast i8*%jv to i8**
store i8*%ju,i8**%jw,align 8
%jx=getelementptr inbounds i8,i8*%i7,i64 64
%jy=bitcast i8*%jx to i32*
store i32 255,i32*%jy,align 4
%jz=call i8*@sml_alloc(i32 inreg 20)#0
%jA=getelementptr inbounds i8,i8*%jz,i64 -4
%jB=bitcast i8*%jA to i32*
store i32 1342177296,i32*%jB,align 4
store i8*%jz,i8**%k,align 8
%jC=getelementptr inbounds i8,i8*%jz,i64 4
%jD=bitcast i8*%jC to i32*
store i32 0,i32*%jD,align 1
%jE=bitcast i8*%jz to i32*
store i32 22,i32*%jE,align 4
%jF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jG=getelementptr inbounds i8,i8*%jz,i64 8
%jH=bitcast i8*%jG to i8**
store i8*%jF,i8**%jH,align 8
%jI=getelementptr inbounds i8,i8*%jz,i64 16
%jJ=bitcast i8*%jI to i32*
store i32 2,i32*%jJ,align 4
%jK=call i8*@sml_alloc(i32 inreg 20)#0
%jL=getelementptr inbounds i8,i8*%jK,i64 -4
%jM=bitcast i8*%jL to i32*
store i32 1342177296,i32*%jM,align 4
%jN=load i8*,i8**%i,align 8
%jO=bitcast i8*%jK to i8**
store i8*%jN,i8**%jO,align 8
%jP=load i8*,i8**%k,align 8
%jQ=getelementptr inbounds i8,i8*%jK,i64 8
%jR=bitcast i8*%jQ to i8**
store i8*%jP,i8**%jR,align 8
%jS=getelementptr inbounds i8,i8*%jK,i64 16
%jT=bitcast i8*%jS to i32*
store i32 3,i32*%jT,align 4
ret i8*%jK
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15elabWhereClauseE_2519(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%b,%n]
%o=phi i8*[%j,%i],[%c,%n]
store i8*null,i8**%e,align 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%P
i32 0,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%o,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%f,align 8
%O=tail call fastcc i8*@_SMLLN12ElaborateSQL9elabWhereE_2520(i8*inreg%N,i8*inreg%m,i8*inreg%M)
ret i8*%O
P:
%Q=getelementptr inbounds i8,i8*%o,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%f,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%T,i8*inreg%m,i32 inreg 9,i8*inreg%S)
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabWhereE_2520(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
p:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%n,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
%m=load i8*,i8**%g,align 8
br label%n
n:
%o=phi i8*[%m,%j],[%a,%p]
%q=phi i8*[%l,%j],[%b,%p]
%r=phi i8*[%k,%j],[%c,%p]
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*null,i8**%g,align 8
%x=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%o,i8*inreg%q,i8*inreg%w)
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%x,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%g,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%e,align 8
%Q=getelementptr inbounds i8,i8*%N,i64 4
%R=bitcast i8*%Q to i32*
store i32 0,i32*%R,align 1
%S=bitcast i8*%N to i32*
store i32 30,i32*%S,align 4
%T=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%U=getelementptr inbounds i8,i8*%N,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 16
%X=bitcast i8*%W to i32*
store i32 2,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14elabFromClauseE_2521(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%b,%n]
%o=phi i8*[%j,%i],[%c,%n]
store i8*null,i8**%e,align 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%P
i32 0,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%o,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%f,align 8
%O=tail call fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2522(i8*inreg%N,i8*inreg%m,i8*inreg%M)
ret i8*%O
P:
%Q=getelementptr inbounds i8,i8*%o,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%T,i8*inreg%m,i32 inreg 3,i8*inreg%S)
store i8*%U,i8**%d,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=bitcast i8*%V to i8**
store i8*null,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
store i8*null,i8**%d,align 8
store i8*%Z,i8**%e,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
ret i8*%ae
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2522(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%o,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%e,align 8
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%f,align 8
br label%o
o:
%p=phi i8*[%n,%k],[%a,%q]
%r=phi i8*[%m,%k],[%b,%q]
%s=phi i8*[%l,%k],[%c,%q]
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%g,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*null,i8**%f,align 8
%y=call fastcc i8*@_SMLLN12ElaborateSQL13elabTableListE_2523(i8*inreg%p,i8*inreg%r,i8*inreg%x)
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%y,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%e,align 8
%E=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%f,align 8
%K=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%N(i8*inreg%P,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jp,i64 0,i32 2)to i8*))
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%e,align 8
%X=call fastcc i8*%T(i8*inreg%V,i8*inreg%W)
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=call fastcc i8*%H(i8*inreg%Y,i8*inreg%X)
store i8*%Z,i8**%f,align 8
%aa=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
%ag=call fastcc i8*%ad(i8*inreg%af,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jq,i64 0,i32 2)to i8*))
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=load i8*,i8**%f,align 8
%an=call fastcc i8*%aj(i8*inreg%al,i8*inreg%am)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=load i8*,i8**%g,align 8
%au=call fastcc i8*%aq(i8*inreg%as,i8*inreg%at)
%av=getelementptr inbounds i8,i8*%au,i64 16
%aw=bitcast i8*%av to i8*(i8*,i8*)**
%ax=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aw,align 8
%ay=bitcast i8*%au to i8**
%az=load i8*,i8**%ay,align 8
%aA=call fastcc i8*%ax(i8*inreg%az,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@js,i64 0,i32 2)to i8*))
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=call fastcc i8*@_SMLFN11RecordLabel3Set8fromListE(i8*inreg%aB)
store i8*%aC,i8**%f,align 8
%aD=call i8*@sml_alloc(i32 inreg 12)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177288,i32*%aF,align 4
store i8*%aD,i8**%h,align 8
%aG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i32*
store i32 1,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%f,align 8
%aN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%g,align 8
%aX=getelementptr inbounds i8,i8*%aU,i64 4
%aY=bitcast i8*%aX to i32*
store i32 0,i32*%aY,align 1
%aZ=bitcast i8*%aU to i32*
store i32 11,i32*%aZ,align 4
%a0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 2,i32*%a4,align 4
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
store i8*%a5,i8**%e,align 8
%a8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
%bi=load i8*,i8**%h,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=load i8*,i8**%e,align 8
%bl=getelementptr inbounds i8,i8*%bf,i64 8
%bm=bitcast i8*%bl to i8**
store i8*%bk,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bf,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
ret i8*%bf
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabTableListE_2523(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
o:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
store i8*%a,i8**%f,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%f,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 32
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%g,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%h,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%h,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2609 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2609 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 12)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177288,i32*%P,align 4
store i8*%N,i8**%e,align 8
%Q=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i32*
store i32 1,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2612 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabTableListE_2612 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%af,i8*inreg%U)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=load i8*,i8**%d,align 8
%an=tail call fastcc i8*%aj(i8*inreg%al,i8*inreg%am)
ret i8*%an
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabTableE_2524(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
u:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%m,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%s,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%e,align 8
%r=load i8*,i8**%d,align 8
br label%s
s:
%t=phi i8*[%r,%p],[%b,%u]
%v=phi i8*[%q,%p],[%c,%u]
store i8*null,i8**%e,align 8
store i8*%t,i8**%h,align 8
%w=bitcast i8*%v to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%y[
i32 0,label%go
i32 1,label%dy
i32 2,label%aU
i32 3,label%Q
]
y:
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%z=load i8*,i8**@_SMLZ5Match,align 8
store i8*%z,i8**%d,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%e,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jv,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 60)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177336,i32*%L,align 4
%M=getelementptr inbounds i8,i8*%J,i64 56
%N=bitcast i8*%M to i32*
store i32 1,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%J to i8**
store i8*%O,i8**%P,align 8
call void@sml_raise(i8*inreg%J)#1
unreachable
Q:
%R=getelementptr inbounds i8,i8*%v,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%f,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=load i8*,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
%aa=call fastcc i8*@_SMLLN12ElaborateSQL9elabQueryE_2518(i8*inreg%Z,i8*inreg%t,i8*inreg%Y)
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%d,align 8
%ad=getelementptr inbounds i8,i8*%aa,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%e,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%g,align 8
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%aq,i64 4
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
%av=bitcast i8*%aq to i32*
store i32 3,i32*%av,align 4
%aw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=bitcast i8*%aL to i64*
store i64 0,i64*%aO,align 4
%aP=load i8*,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to i32*
store i32 2,i32*%aT,align 4
ret i8*%aL
aU:
%aV=getelementptr inbounds i8,i8*%v,i64 8
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%i,align 8
%aY=getelementptr inbounds i8,i8*%aX,i64 24
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%l,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
%a3=load i8*,i8**%m,align 8
%a4=call fastcc i8*@_SMLLN12ElaborateSQL9elabTableE_2524(i8*inreg%a3,i8*inreg%t,i8*inreg%a2)
store i8*%a4,i8**%j,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 8
%a6=bitcast i8*%a5 to i8***
%a7=load i8**,i8***%a6,align 8
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%d,align 8
%a9=getelementptr inbounds i8*,i8**%a7,i64 1
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%e,align 8
%bb=load i8*,i8**%i,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
%bf=load i8*,i8**%h,align 8
%bg=load i8*,i8**%m,align 8
%bh=call fastcc i8*@_SMLLN12ElaborateSQL9elabTableE_2524(i8*inreg%bg,i8*inreg%bf,i8*inreg%be)
store i8*%bh,i8**%k,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 8
%bj=bitcast i8*%bi to i8***
%bk=load i8**,i8***%bj,align 8
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%f,align 8
%bm=getelementptr inbounds i8*,i8**%bk,i64 1
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%g,align 8
%bo=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bp=getelementptr inbounds i8,i8*%bo,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%h,align 8
%bt=load i8*,i8**%m,align 8
store i8*null,i8**%h,align 8
%bu=call fastcc i8*@_SMLLN12ElaborateSQL8elabJoinE_2525(i8*inreg%bt,i8*inreg%bs,i8*inreg%br)
%bv=bitcast i8*%bu to i8**
%bw=load i8*,i8**%bv,align 8
store i8*%bw,i8**%h,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
store i8*%bz,i8**%i,align 8
%bA=bitcast i8*%bz to i32*
%bB=load i32,i32*%bA,align 4
%bC=icmp eq i32%bB,2
%bD=zext i1%bC to i32
br i1%bC,label%bE,label%bP
bE:
%bF=bitcast i8**%j to i32**
%bG=load i32*,i32**%bF,align 8
%bH=load i32,i32*%bG,align 4
%bI=icmp eq i32%bH,0
br i1%bI,label%bK,label%bJ
bJ:
store i8*null,i8**%k,align 8
br label%bQ
bK:
%bL=bitcast i8**%k to i32**
%bM=load i32*,i32**%bL,align 8
store i8*null,i8**%k,align 8
%bN=load i32,i32*%bM,align 4
%bO=icmp eq i32%bN,0
br i1%bO,label%cb,label%bQ
bP:
store i8*null,i8**%k,align 8
br label%cb
bQ:
%bR=load i8*,i8**@_SMLZN17ElaborateErrorSQL20UnnaturalNaturalJoinE,align 8
store i8*%bR,i8**%j,align 8
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
store i8*%bS,i8**%k,align 8
%bV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ju,i64 0,i32 2,i64 0),i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=load i8*,i8**%l,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%b1)
br label%cb
cb:
%cc=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%bD)
%cd=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%ce=getelementptr inbounds i8,i8*%cd,i64 16
%cf=bitcast i8*%ce to i8**
%cg=load i8*,i8**%cf,align 8
store i8*%cg,i8**%j,align 8
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
store i8*%ch,i8**%k,align 8
%ck=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*null,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 16
%cp=bitcast i8*%co to i32*
store i32 3,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 20)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177296,i32*%cs,align 4
store i8*%cq,i8**%h,align 8
%ct=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cu=bitcast i8*%cq to i8**
store i8*%ct,i8**%cu,align 8
%cv=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cw=getelementptr inbounds i8,i8*%cq,i64 8
%cx=bitcast i8*%cw to i8**
store i8*%cv,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%cq,i64 16
%cz=bitcast i8*%cy to i32*
store i32 3,i32*%cz,align 4
%cA=call i8*@sml_alloc(i32 inreg 20)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
%cD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cG=getelementptr inbounds i8,i8*%cA,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cA,i64 16
%cJ=bitcast i8*%cI to i32*
store i32 3,i32*%cJ,align 4
%cK=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cL=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%cK,i8*inreg%cA)
store i8*%cL,i8**%d,align 8
%cM=call i8*@sml_alloc(i32 inreg 36)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177312,i32*%cO,align 4
store i8*%cM,i8**%f,align 8
%cP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cS=getelementptr inbounds i8,i8*%cM,i64 8
%cT=bitcast i8*%cS to i8**
store i8*%cR,i8**%cT,align 8
%cU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 16
%cW=bitcast i8*%cV to i8**
store i8*%cU,i8**%cW,align 8
%cX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cY=getelementptr inbounds i8,i8*%cM,i64 24
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cM,i64 32
%c1=bitcast i8*%c0 to i32*
store i32 15,i32*%c1,align 4
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
store i8*%c2,i8**%g,align 8
%c5=getelementptr inbounds i8,i8*%c2,i64 4
%c6=bitcast i8*%c5 to i32*
store i32 0,i32*%c6,align 1
%c7=bitcast i8*%c2 to i32*
store i32 2,i32*%c7,align 4
%c8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c9=getelementptr inbounds i8,i8*%c2,i64 8
%da=bitcast i8*%c9 to i8**
store i8*%c8,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c2,i64 16
%dc=bitcast i8*%db to i32*
store i32 2,i32*%dc,align 4
%dd=call i8*@sml_alloc(i32 inreg 20)#0
%de=getelementptr inbounds i8,i8*%dd,i64 -4
%df=bitcast i8*%de to i32*
store i32 1342177296,i32*%df,align 4
store i8*%dd,i8**%e,align 8
%dg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dh=bitcast i8*%dd to i8**
store i8*%dg,i8**%dh,align 8
%di=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dj=getelementptr inbounds i8,i8*%dd,i64 8
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%dd,i64 16
%dm=bitcast i8*%dl to i32*
store i32 3,i32*%dm,align 4
%dn=call i8*@sml_alloc(i32 inreg 20)#0
%do=bitcast i8*%dn to i32*
%dp=getelementptr inbounds i8,i8*%dn,i64 -4
%dq=bitcast i8*%dp to i32*
store i32 1342177296,i32*%dq,align 4
%dr=getelementptr inbounds i8,i8*%dn,i64 4
%ds=bitcast i8*%dr to i32*
store i32 0,i32*%ds,align 1
store i32%cc,i32*%do,align 4
%dt=load i8*,i8**%e,align 8
%du=getelementptr inbounds i8,i8*%dn,i64 8
%dv=bitcast i8*%du to i8**
store i8*%dt,i8**%dv,align 8
%dw=getelementptr inbounds i8,i8*%dn,i64 16
%dx=bitcast i8*%dw to i32*
store i32 2,i32*%dx,align 4
ret i8*%dn
dy:
%dz=getelementptr inbounds i8,i8*%v,i64 8
%dA=bitcast i8*%dz to i8**
%dB=load i8*,i8**%dA,align 8
%dC=bitcast i8*%dB to i8**
%dD=load i8*,i8**%dC,align 8
%dE=bitcast i8*%dD to i32*
%dF=load i32,i32*%dE,align 4
%dG=icmp eq i32%dF,0
br i1%dG,label%e8,label%dH
dH:
%dI=getelementptr inbounds i8,i8*%dB,i64 8
%dJ=bitcast i8*%dI to i8**
%dK=load i8*,i8**%dJ,align 8
store i8*%dK,i8**%f,align 8
%dL=getelementptr inbounds i8,i8*%dB,i64 16
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
store i8*%dN,i8**%g,align 8
%dO=load i8*,i8**%dC,align 8
%dP=load i8*,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
%dQ=call fastcc i8*@_SMLLN12ElaborateSQL9elabTableE_2524(i8*inreg%dP,i8*inreg%t,i8*inreg%dO)
%dR=bitcast i8*%dQ to i32*
%dS=load i32,i32*%dR,align 4
%dT=getelementptr inbounds i8,i8*%dQ,i64 8
%dU=bitcast i8*%dT to i8***
%dV=load i8**,i8***%dU,align 8
%dW=load i8*,i8**%dV,align 8
store i8*%dW,i8**%d,align 8
%dX=getelementptr inbounds i8*,i8**%dV,i64 1
%dY=load i8*,i8**%dX,align 8
store i8*%dY,i8**%e,align 8
%dZ=icmp eq i32%dS,0
br i1%dZ,label%eo,label%d0
d0:
%d1=load i8*,i8**@_SMLZN17ElaborateErrorSQL13CrossJoinNameE,align 8
store i8*%d1,i8**%h,align 8
%d2=call i8*@sml_alloc(i32 inreg 28)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177304,i32*%d4,align 4
store i8*%d2,i8**%i,align 8
%d5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d6=bitcast i8*%d2 to i8**
store i8*%d5,i8**%d6,align 8
%d7=getelementptr inbounds i8,i8*%d2,i64 8
%d8=bitcast i8*%d7 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jt,i64 0,i32 2,i64 0),i8**%d8,align 8
%d9=load i8*,i8**%f,align 8
%ea=getelementptr inbounds i8,i8*%d2,i64 16
%eb=bitcast i8*%ea to i8**
store i8*%d9,i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d2,i64 24
%ed=bitcast i8*%ec to i32*
store i32 7,i32*%ed,align 4
%ee=call i8*@sml_alloc(i32 inreg 20)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177296,i32*%eg,align 4
%eh=load i8*,i8**%g,align 8
%ei=bitcast i8*%ee to i8**
store i8*%eh,i8**%ei,align 8
%ej=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ek=getelementptr inbounds i8,i8*%ee,i64 8
%el=bitcast i8*%ek to i8**
store i8*%ej,i8**%el,align 8
%em=getelementptr inbounds i8,i8*%ee,i64 16
%en=bitcast i8*%em to i32*
store i32 3,i32*%en,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%ee)
br label%eo
eo:
%ep=call i8*@sml_alloc(i32 inreg 28)#0
%eq=getelementptr inbounds i8,i8*%ep,i64 -4
%er=bitcast i8*%eq to i32*
store i32 1342177304,i32*%er,align 4
store i8*%ep,i8**%h,align 8
%es=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%et=bitcast i8*%ep to i8**
store i8*%es,i8**%et,align 8
%eu=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ev=getelementptr inbounds i8,i8*%ep,i64 8
%ew=bitcast i8*%ev to i8**
store i8*%eu,i8**%ew,align 8
%ex=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ey=getelementptr inbounds i8,i8*%ep,i64 16
%ez=bitcast i8*%ey to i8**
store i8*%ex,i8**%ez,align 8
%eA=getelementptr inbounds i8,i8*%ep,i64 24
%eB=bitcast i8*%eA to i32*
store i32 7,i32*%eB,align 4
%eC=call i8*@sml_alloc(i32 inreg 20)#0
%eD=getelementptr inbounds i8,i8*%eC,i64 -4
%eE=bitcast i8*%eD to i32*
store i32 1342177296,i32*%eE,align 4
store i8*%eC,i8**%f,align 8
%eF=getelementptr inbounds i8,i8*%eC,i64 4
%eG=bitcast i8*%eF to i32*
store i32 0,i32*%eG,align 1
%eH=bitcast i8*%eC to i32*
store i32 1,i32*%eH,align 4
%eI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eJ=getelementptr inbounds i8,i8*%eC,i64 8
%eK=bitcast i8*%eJ to i8**
store i8*%eI,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eC,i64 16
%eM=bitcast i8*%eL to i32*
store i32 2,i32*%eM,align 4
%eN=call i8*@sml_alloc(i32 inreg 20)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177296,i32*%eP,align 4
store i8*%eN,i8**%e,align 8
%eQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eR=bitcast i8*%eN to i8**
store i8*%eQ,i8**%eR,align 8
%eS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eT=getelementptr inbounds i8,i8*%eN,i64 8
%eU=bitcast i8*%eT to i8**
store i8*%eS,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eN,i64 16
%eW=bitcast i8*%eV to i32*
store i32 3,i32*%eW,align 4
%eX=call i8*@sml_alloc(i32 inreg 20)#0
%eY=bitcast i8*%eX to i32*
%eZ=getelementptr inbounds i8,i8*%eX,i64 -4
%e0=bitcast i8*%eZ to i32*
store i32 1342177296,i32*%e0,align 4
%e1=getelementptr inbounds i8,i8*%eX,i64 4
%e2=bitcast i8*%e1 to i32*
store i32 0,i32*%e2,align 1
store i32%dS,i32*%eY,align 4
%e3=load i8*,i8**%e,align 8
%e4=getelementptr inbounds i8,i8*%eX,i64 8
%e5=bitcast i8*%e4 to i8**
store i8*%e3,i8**%e5,align 8
%e6=getelementptr inbounds i8,i8*%eX,i64 16
%e7=bitcast i8*%e6 to i32*
store i32 2,i32*%e7,align 4
ret i8*%eX
e8:
%e9=getelementptr inbounds i8,i8*%dD,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
%fc=getelementptr inbounds i8,i8*%dB,i64 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%f,align 8
%ff=getelementptr inbounds i8,i8*%dB,i64 16
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
store i8*%fh,i8**%g,align 8
%fi=load i8*,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
%fj=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%fi,i8*inreg%t,i8*inreg%fb)
%fk=bitcast i8*%fj to i8**
%fl=load i8*,i8**%fk,align 8
store i8*%fl,i8**%d,align 8
%fm=getelementptr inbounds i8,i8*%fj,i64 8
%fn=bitcast i8*%fm to i8**
%fo=load i8*,i8**%fn,align 8
store i8*%fo,i8**%e,align 8
%fp=call i8*@sml_alloc(i32 inreg 20)#0
%fq=getelementptr inbounds i8,i8*%fp,i64 -4
%fr=bitcast i8*%fq to i32*
store i32 1342177296,i32*%fr,align 4
store i8*%fp,i8**%h,align 8
%fs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ft=bitcast i8*%fp to i8**
store i8*%fs,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fp,i64 8
%fv=bitcast i8*%fu to i8**
store i8*null,i8**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fp,i64 16
%fx=bitcast i8*%fw to i32*
store i32 3,i32*%fx,align 4
%fy=call i8*@sml_alloc(i32 inreg 20)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177296,i32*%fA,align 4
store i8*%fy,i8**%i,align 8
%fB=bitcast i8*%fy to i64*
store i64 0,i64*%fB,align 4
%fC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fD=getelementptr inbounds i8,i8*%fy,i64 8
%fE=bitcast i8*%fD to i8**
store i8*%fC,i8**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fy,i64 16
%fG=bitcast i8*%fF to i32*
store i32 2,i32*%fG,align 4
%fH=call i8*@sml_alloc(i32 inreg 28)#0
%fI=getelementptr inbounds i8,i8*%fH,i64 -4
%fJ=bitcast i8*%fI to i32*
store i32 1342177304,i32*%fJ,align 4
store i8*%fH,i8**%e,align 8
%fK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fL=bitcast i8*%fH to i8**
store i8*%fK,i8**%fL,align 8
%fM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fN=getelementptr inbounds i8,i8*%fH,i64 8
%fO=bitcast i8*%fN to i8**
store i8*%fM,i8**%fO,align 8
%fP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fQ=getelementptr inbounds i8,i8*%fH,i64 16
%fR=bitcast i8*%fQ to i8**
store i8*%fP,i8**%fR,align 8
%fS=getelementptr inbounds i8,i8*%fH,i64 24
%fT=bitcast i8*%fS to i32*
store i32 7,i32*%fT,align 4
%fU=call i8*@sml_alloc(i32 inreg 20)#0
%fV=getelementptr inbounds i8,i8*%fU,i64 -4
%fW=bitcast i8*%fV to i32*
store i32 1342177296,i32*%fW,align 4
store i8*%fU,i8**%f,align 8
%fX=getelementptr inbounds i8,i8*%fU,i64 4
%fY=bitcast i8*%fX to i32*
store i32 0,i32*%fY,align 1
%fZ=bitcast i8*%fU to i32*
store i32 1,i32*%fZ,align 4
%f0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%f1=getelementptr inbounds i8,i8*%fU,i64 8
%f2=bitcast i8*%f1 to i8**
store i8*%f0,i8**%f2,align 8
%f3=getelementptr inbounds i8,i8*%fU,i64 16
%f4=bitcast i8*%f3 to i32*
store i32 2,i32*%f4,align 4
%f5=call i8*@sml_alloc(i32 inreg 20)#0
%f6=getelementptr inbounds i8,i8*%f5,i64 -4
%f7=bitcast i8*%f6 to i32*
store i32 1342177296,i32*%f7,align 4
store i8*%f5,i8**%e,align 8
%f8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%f9=bitcast i8*%f5 to i8**
store i8*%f8,i8**%f9,align 8
%ga=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gb=getelementptr inbounds i8,i8*%f5,i64 8
%gc=bitcast i8*%gb to i8**
store i8*%ga,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f5,i64 16
%ge=bitcast i8*%gd to i32*
store i32 3,i32*%ge,align 4
%gf=call i8*@sml_alloc(i32 inreg 20)#0
%gg=getelementptr inbounds i8,i8*%gf,i64 -4
%gh=bitcast i8*%gg to i32*
store i32 1342177296,i32*%gh,align 4
%gi=bitcast i8*%gf to i64*
store i64 0,i64*%gi,align 4
%gj=load i8*,i8**%e,align 8
%gk=getelementptr inbounds i8,i8*%gf,i64 8
%gl=bitcast i8*%gk to i8**
store i8*%gj,i8**%gl,align 8
%gm=getelementptr inbounds i8,i8*%gf,i64 16
%gn=bitcast i8*%gm to i32*
store i32 2,i32*%gn,align 4
ret i8*%gf
go:
%gp=getelementptr inbounds i8,i8*%v,i64 8
%gq=bitcast i8*%gp to i8**
%gr=load i8*,i8**%gq,align 8
store i8*%gr,i8**%f,align 8
%gs=load i8*,i8**%m,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
%gt=call fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%gs,i8*inreg%t,i8*inreg%gr)
%gu=bitcast i8*%gt to i8**
%gv=load i8*,i8**%gu,align 8
store i8*%gv,i8**%d,align 8
%gw=getelementptr inbounds i8,i8*%gt,i64 8
%gx=bitcast i8*%gw to i8**
%gy=load i8*,i8**%gx,align 8
store i8*%gy,i8**%e,align 8
%gz=load i8*,i8**%f,align 8
%gA=getelementptr inbounds i8,i8*%gz,i64 8
%gB=bitcast i8*%gA to i8**
%gC=load i8*,i8**%gB,align 8
store i8*%gC,i8**%f,align 8
%gD=call i8*@sml_alloc(i32 inreg 12)#0
%gE=getelementptr inbounds i8,i8*%gD,i64 -4
%gF=bitcast i8*%gE to i32*
store i32 1342177288,i32*%gF,align 4
store i8*%gD,i8**%g,align 8
%gG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gH=bitcast i8*%gD to i8**
store i8*%gG,i8**%gH,align 8
%gI=getelementptr inbounds i8,i8*%gD,i64 8
%gJ=bitcast i8*%gI to i32*
store i32 1,i32*%gJ,align 4
%gK=call i8*@sml_alloc(i32 inreg 20)#0
%gL=getelementptr inbounds i8,i8*%gK,i64 -4
%gM=bitcast i8*%gL to i32*
store i32 1342177296,i32*%gM,align 4
store i8*%gK,i8**%f,align 8
%gN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gO=bitcast i8*%gK to i8**
store i8*%gN,i8**%gO,align 8
%gP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gQ=getelementptr inbounds i8,i8*%gK,i64 8
%gR=bitcast i8*%gQ to i8**
store i8*%gP,i8**%gR,align 8
%gS=getelementptr inbounds i8,i8*%gK,i64 16
%gT=bitcast i8*%gS to i32*
store i32 3,i32*%gT,align 4
%gU=call i8*@sml_alloc(i32 inreg 20)#0
%gV=getelementptr inbounds i8,i8*%gU,i64 -4
%gW=bitcast i8*%gV to i32*
store i32 1342177296,i32*%gW,align 4
store i8*%gU,i8**%g,align 8
%gX=bitcast i8*%gU to i64*
store i64 0,i64*%gX,align 4
%gY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gZ=getelementptr inbounds i8,i8*%gU,i64 8
%g0=bitcast i8*%gZ to i8**
store i8*%gY,i8**%g0,align 8
%g1=getelementptr inbounds i8,i8*%gU,i64 16
%g2=bitcast i8*%g1 to i32*
store i32 2,i32*%g2,align 4
%g3=call i8*@sml_alloc(i32 inreg 20)#0
%g4=getelementptr inbounds i8,i8*%g3,i64 -4
%g5=bitcast i8*%g4 to i32*
store i32 1342177296,i32*%g5,align 4
store i8*%g3,i8**%e,align 8
%g6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g7=bitcast i8*%g3 to i8**
store i8*%g6,i8**%g7,align 8
%g8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%g9=getelementptr inbounds i8,i8*%g3,i64 8
%ha=bitcast i8*%g9 to i8**
store i8*%g8,i8**%ha,align 8
%hb=getelementptr inbounds i8,i8*%g3,i64 16
%hc=bitcast i8*%hb to i32*
store i32 3,i32*%hc,align 4
%hd=call i8*@sml_alloc(i32 inreg 20)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177296,i32*%hf,align 4
%hg=bitcast i8*%hd to i64*
store i64 0,i64*%hg,align 4
%hh=load i8*,i8**%e,align 8
%hi=getelementptr inbounds i8,i8*%hd,i64 8
%hj=bitcast i8*%hi to i8**
store i8*%hh,i8**%hj,align 8
%hk=getelementptr inbounds i8,i8*%hd,i64 16
%hl=bitcast i8*%hk to i32*
store i32 2,i32*%hl,align 4
ret i8*%hd
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabJoinE_2525(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%c,%n]
store i8*null,i8**%e,align 8
%o=bitcast i8*%m to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 1,label%ak
i32 0,label%W
i32 2,label%I
]
q:
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%r=load i8*,i8**@_SMLZ5Match,align 8
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%e,align 8
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jy,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 60)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177336,i32*%D,align 4
%E=getelementptr inbounds i8,i8*%B,i64 56
%F=bitcast i8*%E to i32*
store i32 1,i32*%F,align 4
%G=load i8*,i8**%e,align 8
%H=bitcast i8*%B to i8**
store i8*%G,i8**%H,align 8
call void@sml_raise(i8*inreg%B)#1
unreachable
I:
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%d,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@jx,i64 0,i32 2)to i8*),i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
ret i8*%N
W:
%X=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
%ae=load i8*,i8**%d,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@jw,i64 0,i32 2)to i8*),i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to i32*
store i32 3,i32*%aj,align 4
ret i8*%ab
ak:
%al=load i8*,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%m,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%f,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%au,i8*inreg%al,i8*inreg%at)
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%av,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%e,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%g,align 8
%aE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%e,align 8
%aO=getelementptr inbounds i8,i8*%aL,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
%aQ=bitcast i8*%aL to i32*
store i32 1,i32*%aQ,align 4
%aR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 16
%aV=bitcast i8*%aU to i32*
store i32 2,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177296,i32*%aY,align 4
%aZ=load i8*,i8**%d,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=load i8*,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aW,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 3,i32*%a5,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11elabTableIdE_2526(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
%o=load i8*,i8**%d,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%b,%r]
%s=phi i8*[%n,%m],[%c,%r]
store i8*null,i8**%d,align 8
store i8*%q,i8**%e,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%s,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%h,align 8
%B=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%u)
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%j,align 8
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to i8**
store i8*null,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=getelementptr inbounds i8,i8*%L,i64 4
%P=bitcast i8*%O to i32*
store i32 0,i32*%P,align 1
%Q=bitcast i8*%L to i32*
store i32 15,i32*%Q,align 4
%R=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%S=getelementptr inbounds i8,i8*%L,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i32*
store i32 2,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=load i8*,i8**%i,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
%ai=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%ah,i8*inreg%ag,i32 inreg 1,i8*inreg%W)
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%ai,i64 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%e,align 8
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
store i8*%ao,i8**%f,align 8
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 16
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ao,i64 24
%aA=bitcast i8*%az to i32*
store i32 7,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%f,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
ret i8*%aB
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17elabOrderByClauseE_2527(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%b,%n]
%o=phi i8*[%j,%i],[%c,%n]
store i8*null,i8**%e,align 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%P
i32 0,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%o,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%f,align 8
%O=tail call fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2528(i8*inreg%N,i8*inreg%m,i8*inreg%M)
ret i8*%O
P:
%Q=getelementptr inbounds i8,i8*%o,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%f,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%T,i8*inreg%m,i32 inreg 6,i8*inreg%S)
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2528(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%d,align 8
%o=load i8*,i8**%i,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%a,%r]
%s=phi i8*[%n,%m],[%c,%r]
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%q,i64 32
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jz,i64 0,i32 2)to i8*))
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%g,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%j,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2622 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL11elabOrderByE_2622 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=call fastcc i8*%I(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=bitcast i8**%d to i8***
%ao=load i8**,i8***%an,align 8
store i8*null,i8**%d,align 8
%ap=load i8*,i8**%ao,align 8
%aq=call fastcc i8*%ak(i8*inreg%am,i8*inreg%ap)
%ar=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%as=call fastcc i8*%C(i8*inreg%ar,i8*inreg%aq)
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%as,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%e,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%g,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=getelementptr inbounds i8,i8*%aI,i64 4
%aM=bitcast i8*%aL to i32*
store i32 0,i32*%aM,align 1
%aN=bitcast i8*%aI to i32*
store i32 21,i32*%aN,align 4
%aO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 16
%aS=bitcast i8*%aR to i32*
store i32 2,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
%aW=load i8*,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
ret i8*%aT
}
define internal fastcc i8*@_SMLLN12ElaborateSQL23elabLimitOrOffsetClauseE_2529(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%b,%n]
%o=phi i8*[%j,%i],[%c,%n]
store i8*null,i8**%e,align 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 0,label%at
i32 1,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%o,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
switch i32%O,label%P[
i32 1,label%an
i32 0,label%ah
]
P:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%Q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%e,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call i8*@sml_alloc(i32 inreg 60)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177336,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%aa,i64 56
%ae=bitcast i8*%ad to i32*
store i32 1,i32*%ae,align 4
%af=load i8*,i8**%e,align 8
%ag=bitcast i8*%aa to i8**
store i8*%af,i8**%ag,align 8
call void@sml_raise(i8*inreg%aa)#1
unreachable
ah:
%ai=getelementptr inbounds i8,i8*%M,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=load i8*,i8**%f,align 8
%am=tail call fastcc i8*@_SMLLN12ElaborateSQL10elabOffsetE_2530(i8*inreg%al,i8*inreg%m,i8*inreg%ak)
ret i8*%am
an:
%ao=getelementptr inbounds i8,i8*%M,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%f,align 8
%as=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%ar,i8*inreg%m,i32 inreg 5,i8*inreg%aq)
ret i8*%as
at:
%au=getelementptr inbounds i8,i8*%o,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
%ax=bitcast i8*%aw to i32*
%ay=load i32,i32*%ax,align 4
switch i32%ay,label%az[
i32 1,label%aX
i32 0,label%aR
]
az:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%aA=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aA,i8**%d,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 60)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177336,i32*%aM,align 4
%aN=getelementptr inbounds i8,i8*%aK,i64 56
%aO=bitcast i8*%aN to i32*
store i32 1,i32*%aO,align 4
%aP=load i8*,i8**%e,align 8
%aQ=bitcast i8*%aK to i8**
store i8*%aP,i8**%aQ,align 8
call void@sml_raise(i8*inreg%aK)#1
unreachable
aR:
%aS=getelementptr inbounds i8,i8*%aw,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=load i8*,i8**%f,align 8
%aW=tail call fastcc i8*@_SMLLN12ElaborateSQL9elabLimitE_2531(i8*inreg%aV,i8*inreg%m,i8*inreg%aU)
ret i8*%aW
aX:
%aY=getelementptr inbounds i8,i8*%aw,i64 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=load i8*,i8**%f,align 8
%a2=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%a1,i8*inreg%m,i32 inreg 4,i8*inreg%a0)
ret i8*%a2
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabOffsetE_2530(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
w:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%l,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%u,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%e,align 8
%s=load i8*,i8**%d,align 8
%t=load i8*,i8**%l,align 8
br label%u
u:
%v=phi i8*[%t,%q],[%a,%w]
%x=phi i8*[%s,%q],[%b,%w]
%y=phi i8*[%r,%q],[%c,%w]
store i8*null,i8**%e,align 8
store i8*%y,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*%x,i8**%g,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%h,align 8
%C=getelementptr inbounds i8,i8*%y,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%i,align 8
%I=getelementptr inbounds i8,i8*%E,i64 16
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%j,align 8
%L=bitcast i8*%E to i8**
%M=load i8*,i8**%L,align 8
%N=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%v,i8*inreg%x,i8*inreg%M)
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=getelementptr inbounds i8,i8*%N,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%e,align 8
%T=load i8*,i8**%l,align 8
%U=getelementptr inbounds i8,i8*%T,i64 24
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%m,align 8
store i8*%W,i8**%k,align 8
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i8*%X,i8**%n,align 8
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%l,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%X,i64 24
%aj=bitcast i8*%ai to i32*
store i32 7,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2627 to void(...)*),void(...)**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabOffsetE_2627 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 24
%au=bitcast i8*%at to i32*
store i32 -2147483647,i32*%au,align 4
%av=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aw=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%av,i8*inreg%ak)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=bitcast i8**%f to i8***
%aD=load i8**,i8***%aC,align 8
store i8*null,i8**%f,align 8
%aE=load i8*,i8**%aD,align 8
%aF=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aE)
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%f,align 8
%aI=getelementptr inbounds i8,i8*%aF,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%g,align 8
%aL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%k,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%l,align 8
%aS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%a9=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%a8,i8*inreg%aY)
store i8*%a9,i8**%d,align 8
%ba=call i8*@sml_alloc(i32 inreg 28)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177304,i32*%bc,align 4
store i8*%ba,i8**%f,align 8
%bd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bg=getelementptr inbounds i8,i8*%ba,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 16
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%ba,i64 24
%bm=bitcast i8*%bl to i32*
store i32 7,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=getelementptr inbounds i8,i8*%bA,i64 4
%bE=bitcast i8*%bD to i32*
store i32 0,i32*%bE,align 1
%bF=bitcast i8*%bA to i32*
store i32 18,i32*%bF,align 4
%bG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i32*
store i32 2,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
%bO=load i8*,i8**%d,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%f,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bL,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
ret i8*%bL
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabLimitE_2531(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
u:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%j,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%s,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
%q=load i8*,i8**%d,align 8
%r=load i8*,i8**%j,align 8
br label%s
s:
%t=phi i8*[%r,%o],[%a,%u]
%v=phi i8*[%q,%o],[%b,%u]
%w=phi i8*[%p,%o],[%c,%u]
store i8*null,i8**%e,align 8
store i8*%w,i8**%f,align 8
store i8*%v,i8**%g,align 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%h,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%i,align 8
%F=getelementptr inbounds i8,i8*%t,i64 24
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%e,align 8
%L=load i8*,i8**%g,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%j,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%I,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2628 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2628 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
%ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%ad,i8*inreg%S)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=bitcast i8**%f to i8****
%al=load i8***,i8****%ak,align 8
%am=load i8**,i8***%al,align 8
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%an)
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%ao,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%e,align 8
%au=load i8*,i8**%j,align 8
%av=getelementptr inbounds i8,i8*%au,i64 24
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%k,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%l,align 8
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%j,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i32*
store i32 3,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 28)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177304,i32*%aK,align 4
%aL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2629 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL9elabLimitE_2629 to void(...)*),void(...)**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 24
%aS=bitcast i8*%aR to i32*
store i32 -2147483647,i32*%aS,align 4
%aT=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aU=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%aT,i8*inreg%aI)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a3)
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%f,align 8
%a7=getelementptr inbounds i8,i8*%a4,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%g,align 8
%ba=load i8*,i8**%j,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 16
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%j,align 8
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%k,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 20)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bn,i64 16
%bw=bitcast i8*%bv to i32*
store i32 3,i32*%bw,align 4
%bx=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%by=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%bx,i8*inreg%bn)
store i8*%by,i8**%d,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
store i8*%bz,i8**%f,align 8
%bC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
store i8*%bJ,i8**%e,align 8
%bM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bJ,i64 24
%bV=bitcast i8*%bU to i32*
store i32 7,i32*%bV,align 4
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%f,align 8
%bZ=getelementptr inbounds i8,i8*%bW,i64 4
%b0=bitcast i8*%bZ to i32*
store i32 0,i32*%b0,align 1
%b1=bitcast i8*%bW to i32*
store i32 15,i32*%b1,align 4
%b2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b3=getelementptr inbounds i8,i8*%bW,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 2,i32*%b6,align 4
%b7=call i8*@sml_alloc(i32 inreg 20)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177296,i32*%b9,align 4
%ca=load i8*,i8**%d,align 8
%cb=bitcast i8*%b7 to i8**
store i8*%ca,i8**%cb,align 8
%cc=load i8*,i8**%f,align 8
%cd=getelementptr inbounds i8,i8*%b7,i64 8
%ce=bitcast i8*%cd to i8**
store i8*%cc,i8**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b7,i64 16
%cg=bitcast i8*%cf to i32*
store i32 3,i32*%cg,align 4
ret i8*%b7
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabSelectClauseE_2532(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%f,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%e,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%b,%n]
%o=phi i8*[%j,%i],[%c,%n]
store i8*null,i8**%e,align 8
%p=bitcast i8*%o to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%P
i32 0,label%J
]
r:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%e,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%e,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%o,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%f,align 8
%O=tail call fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2533(i8*inreg%N,i8*inreg%m,i8*inreg%M)
ret i8*%O
P:
%Q=getelementptr inbounds i8,i8*%o,i64 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=load i8*,i8**%f,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%T,i8*inreg%m,i32 inreg 8,i8*inreg%S)
ret i8*%U
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2533(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
store i8*%a,i8**%k,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%o,label%q
o:
%p=bitcast i8*%c to i8**
br label%v
q:
call void@sml_check(i32 inreg%m)
%r=bitcast i8**%d to i8***
%s=load i8**,i8***%r,align 8
%t=bitcast i8**%s to i8*
%u=load i8*,i8**%k,align 8
br label%v
v:
%w=phi i8*[%u,%q],[%a,%o]
%x=phi i8*[%t,%q],[%c,%o]
%y=phi i8**[%s,%q],[%p,%o]
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%f,align 8
%A=getelementptr inbounds i8*,i8**%y,i64 1
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%g,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%w,i64 32
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%K,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jA,i64 0,i32 2)to i8*))
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%j,align 8
%R=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%i,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%l,align 8
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2633 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSelectE_2633 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
%as=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%at=call fastcc i8*%U(i8*inreg%as,i8*inreg%ah)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%e,align 8
%az=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=getelementptr inbounds i8,i8*%aF,i64 8
%aH=bitcast i8*%aG to i8***
%aI=load i8**,i8***%aH,align 8
%aJ=load i8*,i8**%aI,align 8
%aK=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aJ)
%aL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aM=call fastcc i8*%aw(i8*inreg%aL,i8*inreg%aK)
%aN=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aO=call fastcc i8*%O(i8*inreg%aN,i8*inreg%aM)
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aO,i64 8
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
store i8*%aT,i8**%e,align 8
%aU=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jB,i64 0,i32 2)to i8*))
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%e,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
%a8=getelementptr inbounds i8,i8*%a7,i64 16
%a9=bitcast i8*%a8 to i8*(i8*,i8*)**
%ba=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a9,align 8
%bb=bitcast i8*%a7 to i8**
%bc=load i8*,i8**%bb,align 8
%bd=load i8*,i8**%g,align 8
%be=call fastcc i8*%ba(i8*inreg%bc,i8*inreg%bd)
%bf=getelementptr inbounds i8,i8*%be,i64 16
%bg=bitcast i8*%bf to i8*(i8*,i8*)**
%bh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bg,align 8
%bi=bitcast i8*%be to i8**
%bj=load i8*,i8**%bi,align 8
%bk=call fastcc i8*%bh(i8*inreg%bj,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jD,i64 0,i32 2)to i8*))
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%i,align 8
%bo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bl,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
%bv=call i8*@sml_alloc(i32 inreg 28)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177304,i32*%bx,align 4
store i8*%bv,i8**%e,align 8
%by=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bz=bitcast i8*%bv to i8**
store i8*%by,i8**%bz,align 8
%bA=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bB=getelementptr inbounds i8,i8*%bv,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bE=getelementptr inbounds i8,i8*%bv,i64 16
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bv,i64 24
%bH=bitcast i8*%bG to i32*
store i32 7,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 20)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177296,i32*%bK,align 4
store i8*%bI,i8**%f,align 8
%bL=getelementptr inbounds i8,i8*%bI,i64 4
%bM=bitcast i8*%bL to i32*
store i32 0,i32*%bM,align 1
%bN=bitcast i8*%bI to i32*
store i32 25,i32*%bN,align 4
%bO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bI,i64 16
%bS=bitcast i8*%bR to i32*
store i32 2,i32*%bS,align 4
%bT=call i8*@sml_alloc(i32 inreg 20)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177296,i32*%bV,align 4
%bW=load i8*,i8**%d,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=load i8*,i8**%f,align 8
%bZ=getelementptr inbounds i8,i8*%bT,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bT,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
ret i8*%bT
}
define internal fastcc i8*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2534(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%i,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%e,align 8
%p=load i8*,i8**%d,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%b,%s]
%t=phi i8*[%o,%n],[%c,%s]
store i8*null,i8**%e,align 8
store i8*%t,i8**%f,align 8
store i8*%r,i8**%g,align 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=getelementptr inbounds i8,i8*%v,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=bitcast i8**%f to i8****
%A=bitcast i8*%t to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
%D=icmp eq i8*%C,null
br i1%D,label%an,label%E
E:
%F=bitcast i8*%C to i8**
%G=load i8*,i8**%F,align 8
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=icmp eq i32%I,3
br i1%J,label%K,label%an
K:
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to i8***
%N=load i8**,i8***%M,align 8
%O=load i8*,i8**%N,align 8
%P=icmp eq i8*%O,null
br i1%P,label%U,label%Q
Q:
%R=bitcast i8*%O to i32*
%S=load i32,i32*%R,align 4
%T=icmp eq i32%S,4
br i1%T,label%U,label%an
U:
%V=getelementptr inbounds i8,i8*%C,i64 8
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=icmp eq i8*%X,null
br i1%Y,label%Z,label%an
Z:
%aa=load i8*,i8**%i,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=load i8*,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
store i8*null,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
br label%a3
an:
%ao=load i8*,i8**%i,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 32
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%e,align 8
%av=load i8*,i8**%g,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%i,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2639 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2639 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 24
%aM=bitcast i8*%aL to i32*
store i32 -2147483647,i32*%aM,align 4
%aN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aO=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%aN,i8*inreg%aC)
%aP=getelementptr inbounds i8,i8*%aO,i64 16
%aQ=bitcast i8*%aP to i8*(i8*,i8*)**
%aR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aQ,align 8
%aS=bitcast i8*%aO to i8**
%aT=load i8*,i8**%aS,align 8
%aU=load i8***,i8****%z,align 8
%aV=load i8**,i8***%aU,align 8
%aW=load i8*,i8**%aV,align 8
%aX=call fastcc i8*%aR(i8*inreg%aT,i8*inreg%aW)
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
br label%a3
a3:
%a4=phi i8*[null,%Z],[%a2,%an]
%a5=phi i8*[%ah,%Z],[%aZ,%an]
store i8*%a5,i8**%d,align 8
store i8*%a4,i8**%e,align 8
%a6=load i8*,i8**%i,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 24
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%j,align 8
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%k,align 8
%bd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=load i8*,i8**%i,align 8
%bg=getelementptr inbounds i8,i8*%ba,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%ba,i64 16
%bj=bitcast i8*%bi to i32*
store i32 3,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 28)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177304,i32*%bm,align 4
%bn=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bk,i64 8
%bq=bitcast i8*%bp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2640 to void(...)*),void(...)**%bq,align 8
%br=getelementptr inbounds i8,i8*%bk,i64 16
%bs=bitcast i8*%br to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL17elabGroupByClauseE_2640 to void(...)*),void(...)**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bk,i64 24
%bu=bitcast i8*%bt to i32*
store i32 -2147483647,i32*%bu,align 4
%bv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bw=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%bv,i8*inreg%bk)
%bx=getelementptr inbounds i8,i8*%bw,i64 16
%by=bitcast i8*%bx to i8*(i8*,i8*)**
%bz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%by,align 8
%bA=bitcast i8*%bw to i8**
%bB=load i8*,i8**%bA,align 8
%bC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bD=getelementptr inbounds i8,i8*%bC,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
%bG=call fastcc i8*%bz(i8*inreg%bB,i8*inreg%bF)
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%f,align 8
%bJ=getelementptr inbounds i8,i8*%bG,i64 8
%bK=bitcast i8*%bJ to i8**
%bL=load i8*,i8**%bK,align 8
store i8*%bL,i8**%g,align 8
%bM=load i8*,i8**%i,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
store i8*%bP,i8**%i,align 8
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
store i8*%bQ,i8**%j,align 8
%bT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bQ,i64 8
%bW=bitcast i8*%bV to i8**
store i8*null,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bQ,i64 16
%bY=bitcast i8*%bX to i32*
store i32 3,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
%b2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b5=getelementptr inbounds i8,i8*%bZ,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bZ,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 3,i32*%b8,align 4
%b9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ca=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%b9,i8*inreg%bZ)
store i8*%ca,i8**%d,align 8
%cb=call i8*@sml_alloc(i32 inreg 20)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177296,i32*%cd,align 4
store i8*%cb,i8**%f,align 8
%ce=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cb,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=call i8*@sml_alloc(i32 inreg 20)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177296,i32*%cn,align 4
store i8*%cl,i8**%e,align 8
%co=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cp=bitcast i8*%cl to i8**
store i8*%co,i8**%cp,align 8
%cq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cr=getelementptr inbounds i8,i8*%cl,i64 8
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%cl,i64 16
%cu=bitcast i8*%ct to i32*
store i32 3,i32*%cu,align 4
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=load i8*,i8**%d,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%e,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
ret i8*%cv
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabHavingClauseE_2535(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
p:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%n,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
%l=load i8*,i8**%d,align 8
%m=load i8*,i8**%g,align 8
br label%n
n:
%o=phi i8*[%m,%j],[%a,%p]
%q=phi i8*[%l,%j],[%b,%p]
%r=phi i8*[%k,%j],[%c,%p]
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*null,i8**%g,align 8
%x=call fastcc i8*@_SMLLN12ElaborateSQL14elabExpToQueryE_2513(i8*inreg%o,i8*inreg%q,i8*inreg%w)
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%x,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%g,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
ret i8*%N
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2536(i8*inreg%a,i8*inreg%b,i32 inreg%c,i8*inreg%d)#2 gc"smlsharp"{
q:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%f,align 8
store i8*%d,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%i,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%a,%q]
%r=getelementptr inbounds i8,i8*%p,i64 32
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%t,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jE,i64 0,i32 2)to i8*))
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%h,align 8
%A=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%j,align 8
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32%c,i32*%P,align 4
%Q=getelementptr inbounds i8,i8*%G,i64 24
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2643 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL16elabInsertValuesE_2643 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=call fastcc i8*%D(i8*inreg%ad,i8*inreg%S)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%ak)
%am=load i8*,i8**%h,align 8
%an=call fastcc i8*%x(i8*inreg%am,i8*inreg%al)
ret i8*%an
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabInsertRowE_2537(i8*inreg%a,i8*inreg%b,i32 inreg%c,i8*inreg%d)#2 gc"smlsharp"{
q:
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%f,align 8
store i8*%d,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%d,%q]
%r=getelementptr inbounds i8,i8*%p,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=bitcast i8**%e to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%x(i8*inreg%z,i8*inreg%C)
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=icmp eq i32%F,%c
br i1%G,label%ac,label%H
H:
%I=load i8*,i8**@_SMLZN17ElaborateErrorSQL22NumberOfSQLInsertLabelE,align 8
store i8*%I,i8**%h,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%j,align 8
%M=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jF,i64 0,i32 2,i64 0),i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%g,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%S)
br label%ac
ac:
%ad=load i8*,i8**%i,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 32
%af=bitcast i8*%ae to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%h,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
store i8*%ah,i8**%j,align 8
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ah,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
%au=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabInsertRowE_2645 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL13elabInsertRowE_2645 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
%aC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aD=call fastcc i8*@_SMLLN12ElaborateSQL8elabListE_2498(i8*inreg%aC,i8*inreg%ar)
%aE=getelementptr inbounds i8,i8*%aD,i64 16
%aF=bitcast i8*%aE to i8*(i8*,i8*)**
%aG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aF,align 8
%aH=bitcast i8*%aD to i8**
%aI=load i8*,i8**%aH,align 8
%aJ=load i8**,i8***%A,align 8
store i8*null,i8**%e,align 8
%aK=load i8*,i8**%aJ,align 8
%aL=call fastcc i8*%aG(i8*inreg%aI,i8*inreg%aK)
store i8*%aL,i8**%e,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%e,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%g,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
ret i8*%aM
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15elabInsertValueE_2538(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%b,i8**%e,align 8
store i8*%c,i8**%d,align 8
store i8*%a,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%a,%q]
%r=phi i8*[%m,%l],[%c,%q]
%s=getelementptr inbounds i8,i8*%r,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=getelementptr inbounds i8,i8*%p,i64 24
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%h,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%i,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL15elabInsertValueE_2646 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL15elabInsertValueE_2646 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=call fastcc i8*@_SMLLN12ElaborateSQL7elabOptE_2496(i8*inreg%T,i8*inreg%I)
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=bitcast i8**%d to i8***
%ab=load i8**,i8***%aa,align 8
store i8*null,i8**%d,align 8
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%X(i8*inreg%Z,i8*inreg%ac)
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%g,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
%aw=load i8*,i8**%d,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%g,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%at,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
ret i8*%at
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSeqE_2539(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
%o=load i8*,i8**%d,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%b,%r]
%s=phi i8*[%n,%m],[%c,%r]
store i8*null,i8**%e,align 8
store i8*%s,i8**%f,align 8
store i8*%q,i8**%g,align 8
%t=icmp eq i8*%s,null
br i1%t,label%u,label%O
u:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
%v=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 28)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177304,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jH,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@jI,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 24
%G=bitcast i8*%F to i32*
store i32 7,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%e,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=bitcast i8*%s to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i32*
%S=load i32,i32*%R,align 4
switch i32%S,label%T[
i32 1,label%cL
i32 0,label%al
]
T:
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%i,align 8
call void@sml_matchcomp_bug()
%U=load i8*,i8**@_SMLZ5Match,align 8
store i8*%U,i8**%d,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%e,align 8
%Y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jG,i64 0,i32 2,i64 0),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 60)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177336,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 56
%ai=bitcast i8*%ah to i32*
store i32 1,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
%ak=bitcast i8*%ae to i8**
store i8*%aj,i8**%ak,align 8
call void@sml_raise(i8*inreg%ae)#1
unreachable
al:
%am=getelementptr inbounds i8,i8*%Q,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%h,align 8
%ap=getelementptr inbounds i8,i8*%s,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
%as=icmp eq i8*%ar,null
br i1%as,label%at,label%a9
at:
store i8*null,i8**%f,align 8
%au=load i8*,i8**%i,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
%av=call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%au,i8*inreg%q,i8*inreg%ao)
%aw=bitcast i8*%av to i32*
%ax=load i32,i32*%aw,align 4
%ay=icmp eq i32%ax,7
%az=getelementptr inbounds i8,i8*%av,i64 8
%aA=bitcast i8*%az to i8***
%aB=load i8**,i8***%aA,align 8
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%d,align 8
%aD=getelementptr inbounds i8*,i8**%aB,i64 1
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%e,align 8
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
br i1%ay,label%aQ,label%aI
aI:
%aJ=load i8*,i8**%d,align 8
%aK=bitcast i8*%aF to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%e,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aF,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
ret i8*%aF
aQ:
store i8*%aF,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aF,i64 4
%aS=bitcast i8*%aR to i32*
store i32 0,i32*%aS,align 1
%aT=bitcast i8*%aF to i32*
store i32 23,i32*%aT,align 4
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=getelementptr inbounds i8,i8*%aF,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aF,i64 16
%aY=bitcast i8*%aX to i32*
store i32 2,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%d,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
ret i8*%aZ
a9:
%ba=load i8*,i8**%i,align 8
%bb=call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%ba,i8*inreg%q,i8*inreg%ao)
%bc=getelementptr inbounds i8,i8*%bb,i64 8
%bd=bitcast i8*%bc to i8***
%be=load i8**,i8***%bd,align 8
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%d,align 8
%bg=bitcast i8*%bb to i32*
%bh=load i32,i32*%bg,align 4
%bi=icmp eq i32%bh,7
%bj=getelementptr inbounds i8*,i8**%be,i64 1
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%e,align 8
br i1%bi,label%bl,label%bx
bl:
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=bitcast i8*%bm to i32*
%bo=getelementptr inbounds i8,i8*%bm,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177296,i32*%bp,align 4
%bq=getelementptr inbounds i8,i8*%bm,i64 4
%br=bitcast i8*%bq to i32*
store i32 0,i32*%br,align 1
store i32 23,i32*%bn,align 4
%bs=load i8*,i8**%e,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i32*
store i32 2,i32*%bw,align 4
store i8*%bm,i8**%e,align 8
br label%bx
bx:
%by=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bz=getelementptr inbounds i8,i8*%by,i64 8
%bA=bitcast i8*%bz to i8**
%bB=load i8*,i8**%bA,align 8
%bC=load i8*,i8**%g,align 8
%bD=load i8*,i8**%i,align 8
store i8*null,i8**%g,align 8
%bE=call fastcc i8*@_SMLLN12ElaborateSQL7elabSeqE_2539(i8*inreg%bD,i8*inreg%bC,i8*inreg%bB)
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%f,align 8
%bH=getelementptr inbounds i8,i8*%bE,i64 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%g,align 8
%bK=load i8*,i8**%i,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 16
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%i,align 8
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
store i8*%bO,i8**%j,align 8
%bR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to i8**
store i8*null,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 16
%bW=bitcast i8*%bV to i32*
store i32 3,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
%b0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b3=getelementptr inbounds i8,i8*%bX,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bX,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 3,i32*%b6,align 4
%b7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b8=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%b7,i8*inreg%bX)
store i8*%b8,i8**%d,align 8
%b9=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ca=getelementptr inbounds i8,i8*%b9,i64 8
%cb=bitcast i8*%ca to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%f,align 8
%cd=call i8*@sml_alloc(i32 inreg 28)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177304,i32*%cf,align 4
store i8*%cd,i8**%h,align 8
%cg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cj=getelementptr inbounds i8,i8*%cd,i64 8
%ck=bitcast i8*%cj to i8**
store i8*%ci,i8**%ck,align 8
%cl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cm=getelementptr inbounds i8,i8*%cd,i64 16
%cn=bitcast i8*%cm to i8**
store i8*%cl,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%cd,i64 24
%cp=bitcast i8*%co to i32*
store i32 7,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 20)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177296,i32*%cs,align 4
store i8*%cq,i8**%e,align 8
%ct=getelementptr inbounds i8,i8*%cq,i64 4
%cu=bitcast i8*%ct to i32*
store i32 0,i32*%cu,align 1
%cv=bitcast i8*%cq to i32*
store i32 26,i32*%cv,align 4
%cw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cx=getelementptr inbounds i8,i8*%cq,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cq,i64 16
%cA=bitcast i8*%cz to i32*
store i32 2,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177296,i32*%cD,align 4
%cE=load i8*,i8**%d,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%e,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cB,i64 16
%cK=bitcast i8*%cJ to i32*
store i32 3,i32*%cK,align 4
ret i8*%cB
cL:
%cM=getelementptr inbounds i8,i8*%Q,i64 8
%cN=bitcast i8*%cM to i8**
%cO=load i8*,i8**%cN,align 8
store i8*%cO,i8**%h,align 8
%cP=getelementptr inbounds i8,i8*%s,i64 8
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=icmp eq i8*%cR,null
%cT=load i8*,i8**%i,align 8
%cU=call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%cT,i8*inreg%q,i32 inreg 0,i8*inreg%cO)
br i1%cS,label%cV,label%cW
cV:
ret i8*%cU
cW:
%cX=bitcast i8*%cU to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%d,align 8
%cZ=getelementptr inbounds i8,i8*%cU,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%e,align 8
%c2=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c3=getelementptr inbounds i8,i8*%c2,i64 8
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=load i8*,i8**%g,align 8
%c7=load i8*,i8**%i,align 8
store i8*null,i8**%g,align 8
%c8=call fastcc i8*@_SMLLN12ElaborateSQL7elabSeqE_2539(i8*inreg%c7,i8*inreg%c6,i8*inreg%c5)
%c9=bitcast i8*%c8 to i8**
%da=load i8*,i8**%c9,align 8
store i8*%da,i8**%f,align 8
%db=getelementptr inbounds i8,i8*%c8,i64 8
%dc=bitcast i8*%db to i8**
%dd=load i8*,i8**%dc,align 8
store i8*%dd,i8**%g,align 8
%de=load i8*,i8**%i,align 8
%df=getelementptr inbounds i8,i8*%de,i64 16
%dg=bitcast i8*%df to i8**
%dh=load i8*,i8**%dg,align 8
store i8*%dh,i8**%i,align 8
%di=call i8*@sml_alloc(i32 inreg 20)#0
%dj=getelementptr inbounds i8,i8*%di,i64 -4
%dk=bitcast i8*%dj to i32*
store i32 1342177296,i32*%dk,align 4
store i8*%di,i8**%j,align 8
%dl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dm=bitcast i8*%di to i8**
store i8*%dl,i8**%dm,align 8
%dn=getelementptr inbounds i8,i8*%di,i64 8
%do=bitcast i8*%dn to i8**
store i8*null,i8**%do,align 8
%dp=getelementptr inbounds i8,i8*%di,i64 16
%dq=bitcast i8*%dp to i32*
store i32 3,i32*%dq,align 4
%dr=call i8*@sml_alloc(i32 inreg 20)#0
%ds=getelementptr inbounds i8,i8*%dr,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177296,i32*%dt,align 4
%du=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dv=bitcast i8*%dr to i8**
store i8*%du,i8**%dv,align 8
%dw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dx=getelementptr inbounds i8,i8*%dr,i64 8
%dy=bitcast i8*%dx to i8**
store i8*%dw,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dr,i64 16
%dA=bitcast i8*%dz to i32*
store i32 3,i32*%dA,align 4
%dB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dC=call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2483(i8*inreg%dB,i8*inreg%dr)
store i8*%dC,i8**%d,align 8
%dD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dE=getelementptr inbounds i8,i8*%dD,i64 8
%dF=bitcast i8*%dE to i8**
%dG=load i8*,i8**%dF,align 8
store i8*%dG,i8**%f,align 8
%dH=call i8*@sml_alloc(i32 inreg 28)#0
%dI=getelementptr inbounds i8,i8*%dH,i64 -4
%dJ=bitcast i8*%dI to i32*
store i32 1342177304,i32*%dJ,align 4
store i8*%dH,i8**%h,align 8
%dK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dL=bitcast i8*%dH to i8**
store i8*%dK,i8**%dL,align 8
%dM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dN=getelementptr inbounds i8,i8*%dH,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dQ=getelementptr inbounds i8,i8*%dH,i64 16
%dR=bitcast i8*%dQ to i8**
store i8*%dP,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dH,i64 24
%dT=bitcast i8*%dS to i32*
store i32 7,i32*%dT,align 4
%dU=call i8*@sml_alloc(i32 inreg 20)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177296,i32*%dW,align 4
store i8*%dU,i8**%e,align 8
%dX=getelementptr inbounds i8,i8*%dU,i64 4
%dY=bitcast i8*%dX to i32*
store i32 0,i32*%dY,align 1
%dZ=bitcast i8*%dU to i32*
store i32 26,i32*%dZ,align 4
%d0=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%d1=getelementptr inbounds i8,i8*%dU,i64 8
%d2=bitcast i8*%d1 to i8**
store i8*%d0,i8**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dU,i64 16
%d4=bitcast i8*%d3 to i32*
store i32 2,i32*%d4,align 4
%d5=call i8*@sml_alloc(i32 inreg 20)#0
%d6=getelementptr inbounds i8,i8*%d5,i64 -4
%d7=bitcast i8*%d6 to i32*
store i32 1342177296,i32*%d7,align 4
%d8=load i8*,i8**%d,align 8
%d9=bitcast i8*%d5 to i8**
store i8*%d8,i8**%d9,align 8
%ea=load i8*,i8**%e,align 8
%eb=getelementptr inbounds i8,i8*%d5,i64 8
%ec=bitcast i8*%eb to i8**
store i8*%ea,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d5,i64 16
%ee=bitcast i8*%ed to i32*
store i32 3,i32*%ee,align 4
ret i8*%d5
}
define internal fastcc i8*@_SMLL5patTy_2650(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 3,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLL5expTy_2651(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 3,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2652(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2653(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8***
%d=load i8**,i8***%c,align 8
%e=load i8*,i8**%d,align 8
ret i8*%e
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2654(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bQ,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2656(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2657(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%a,i8**%l,align 8
store i8*%b,i8**%i,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%r,label%t
r:
%s=bitcast i8*%a to i8**
br label%w
t:
call void@sml_check(i32 inreg%p)
%u=bitcast i8**%l to i8***
%v=load i8**,i8***%u,align 8
br label%w
w:
%x=phi i8**[%v,%t],[%s,%r]
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%j,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%I)
%J=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%J)
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%z,i8**%g,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%h,align 8
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%h,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1190 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL3LetE_1190 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%I)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%J)
store i8*%U,i8**%n,align 8
%ac=load i8*,i8**%l,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%j,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
store i8*%ag,i8**%k,align 8
%aj=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
store i8*%an,i8**%o,align 8
%aq=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2652 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2652 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 24
%ax=bitcast i8*%aw to i32*
store i32 -2147483647,i32*%ax,align 4
%ay=load i8*,i8**%l,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 32
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%j,align 8
%aC=call i8*@sml_alloc(i32 inreg 12)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177288,i32*%aE,align 4
store i8*%aC,i8**%k,align 8
%aF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to i32*
store i32 1,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 28)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177304,i32*%aL,align 4
store i8*%aJ,i8**%m,align 8
%aM=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2653 to void(...)*),void(...)**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 16
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2653 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 24
%aT=bitcast i8*%aS to i32*
store i32 -2147483647,i32*%aT,align 4
%aU=load i8*,i8**%l,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
store i8*%aX,i8**%j,align 8
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
%a1=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aY,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%a8)
%a9=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%a9)
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%aY,i8**%e,align 8
%ba=call i8*@sml_alloc(i32 inreg 12)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177288,i32*%bc,align 4
store i8*%ba,i8**%f,align 8
%bd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to i32*
store i32 1,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
%bk=load i8*,i8**%f,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8PatTypedE_1170 to void(...)*),void(...)**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 16
%bp=bitcast i8*%bo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL8PatTypedE_1170 to void(...)*),void(...)**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 24
%br=bitcast i8*%bq to i32*
store i32 -2147483647,i32*%br,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%a8)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%a9)
store i8*%bh,i8**%j,align 8
%bs=load i8*,i8**%l,align 8
%bt=getelementptr inbounds i8,i8*%bs,i64 40
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%k,align 8
%bw=getelementptr inbounds i8,i8*%bs,i64 24
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%m,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
%bC=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bJ)
%bK=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bK)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%bz,i8**%c,align 8
%bL=call i8*@sml_alloc(i32 inreg 12)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177288,i32*%bN,align 4
store i8*%bL,i8**%d,align 8
%bO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bL,i64 8
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 28)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177304,i32*%bU,align 4
%bV=load i8*,i8**%d,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TypedE_1218 to void(...)*),void(...)**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5TypedE_1218 to void(...)*),void(...)**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bS,i64 24
%b2=bitcast i8*%b1 to i32*
store i32 -2147483647,i32*%b2,align 4
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bK)
store i8*%bS,i8**%k,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
%b6=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b3,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=call fastcc i8*@_SMLLN12ElaborateSQL2FnE_1181(i8*inreg%b3)
store i8*%cd,i8**%j,align 8
%ce=call i8*@sml_alloc(i32 inreg 20)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177296,i32*%cg,align 4
%ch=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ck=getelementptr inbounds i8,i8*%ce,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ce,i64 16
%cn=bitcast i8*%cm to i32*
store i32 3,i32*%cn,align 4
%co=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cp=call fastcc i8*@_SMLLN12ElaborateSQL3LetE_1190(i8*inreg%co,i8*inreg%ce)
%cq=getelementptr inbounds i8,i8*%cp,i64 16
%cr=bitcast i8*%cq to i8*(i8*,i8*)**
%cs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cr,align 8
%ct=bitcast i8*%cp to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%m,align 8
%cv=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jJ,i64 0,i32 2)to i8*))
%cw=getelementptr inbounds i8,i8*%cv,i64 16
%cx=bitcast i8*%cw to i8*(i8*,i8*)**
%cy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cx,align 8
%cz=bitcast i8*%cv to i8**
%cA=load i8*,i8**%cz,align 8
store i8*%cA,i8**%k,align 8
%cB=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cC=getelementptr inbounds i8,i8*%cB,i64 8
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
store i8*%cE,i8**%j,align 8
%cF=call i8*@sml_alloc(i32 inreg 12)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177288,i32*%cH,align 4
store i8*%cF,i8**%l,align 8
%cI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cJ=bitcast i8*%cF to i8**
store i8*%cI,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cF,i64 8
%cL=bitcast i8*%cK to i32*
store i32 1,i32*%cL,align 4
%cM=call i8*@sml_alloc(i32 inreg 28)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177304,i32*%cO,align 4
%cP=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2656 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cM,i64 16
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2656 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 24
%cW=bitcast i8*%cV to i32*
store i32 -2147483647,i32*%cW,align 4
%cX=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cY=call fastcc i8*%cy(i8*inreg%cX,i8*inreg%cM)
%cZ=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg%cY)
%c0=getelementptr inbounds i8,i8*%cZ,i64 16
%c1=bitcast i8*%c0 to i8*(i8*,i8*)**
%c2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c1,align 8
%c3=bitcast i8*%cZ to i8**
%c4=load i8*,i8**%c3,align 8
%c5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%c6=call fastcc i8*%c2(i8*inreg%c4,i8*inreg%c5)
%c7=load i8*,i8**%m,align 8
%c8=tail call fastcc i8*%cs(i8*inreg%c7,i8*inreg%c6)
ret i8*%c8
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2660(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2663(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@jL,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2665(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
E:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
store i8*%a,i8**%v,align 8
store i8*%b,i8**%t,align 8
%y=load atomic i32,i32*@sml_check_flag unordered,align 4
%z=icmp eq i32%y,0
br i1%z,label%C,label%A
A:
call void@sml_check(i32 inreg%y)
%B=load i8*,i8**%t,align 8
br label%C
C:
%D=phi i8*[%B,%A],[%b,%E]
%F=getelementptr inbounds i8,i8*%D,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%w,align 8
%I=bitcast i8*%D to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%J to i32*
%L=load i32,i32*%K,align 4
switch i32%L,label%M[
i32 2,label%fO
i32 0,label%eX
i32 1,label%ae
]
M:
store i8*null,i8**%w,align 8
store i8*null,i8**%v,align 8
call void@sml_matchcomp_bug()
%N=load i8*,i8**@_SMLZ5Match,align 8
store i8*%N,i8**%t,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%u,align 8
%R=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jN,i64 0,i32 2,i64 0),i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 60)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177336,i32*%Z,align 4
%aa=getelementptr inbounds i8,i8*%X,i64 56
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=load i8*,i8**%u,align 8
%ad=bitcast i8*%X to i8**
store i8*%ac,i8**%ad,align 8
call void@sml_raise(i8*inreg%X)#1
unreachable
ae:
%af=getelementptr inbounds i8,i8*%J,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%u,align 8
%al=bitcast i8**%v to i8****
%am=load i8***,i8****%al,align 8
%an=load i8**,i8***%am,align 8
%ao=load i8*,i8**%an,align 8
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8*(i8*,i8*)**
%ar=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aq,align 8
%as=bitcast i8*%ao to i8**
%at=load i8*,i8**%as,align 8
%au=bitcast i8*%ah to i8**
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*%ar(i8*inreg%at,i8*inreg%av)
store i8*%aw,i8**%t,align 8
%ax=load i8*,i8**%v,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%x,align 8
%aB=bitcast i8*%ax to i8**
%aC=load i8*,i8**%aB,align 8
%aD=getelementptr inbounds i8,i8*%aC,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%v,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
%aJ=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%w,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=load i8*,i8**%x,align 8
%aR=load i8*,i8**%v,align 8
store i8*null,i8**%x,align 8
store i8*null,i8**%v,align 8
%aS=call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%aQ,i8*inreg%aR,i8*inreg%aG)
store i8*%aS,i8**%v,align 8
%aT=bitcast i8*%aS to i32*
%aU=load i32,i32*%aT,align 4
%aV=icmp eq i32%aU,7
%aW=getelementptr inbounds i8,i8*%aS,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=getelementptr inbounds i8,i8*%aY,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
br i1%aV,label%a2,label%be
a2:
store i8*%a1,i8**%u,align 8
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=bitcast i8*%a3 to i32*
%a5=getelementptr inbounds i8,i8*%a3,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=getelementptr inbounds i8,i8*%a3,i64 4
%a8=bitcast i8*%a7 to i32*
store i32 0,i32*%a8,align 1
store i32 23,i32*%a4,align 4
%a9=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
br label%be
be:
%bf=phi i8*[%a3,%a2],[%a1,%ae]
%bg=call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2477(i8*inreg%bf)
store i8*%bg,i8**%u,align 8
%bh=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 8
%bj=bitcast i8*%bi to i8***
%bk=load i8**,i8***%bj,align 8
%bl=load i8*,i8**%bk,align 8
%bm=call fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2493(i8*inreg%bl)
%bn=getelementptr inbounds i8,i8*%bm,i64 16
%bo=bitcast i8*%bn to i8*(i8*,i8*)**
%bp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
%bs=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%bt=call fastcc i8*%bp(i8*inreg%br,i8*inreg%bs)
store i8*%bt,i8**%u,align 8
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
%bx=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%bA=getelementptr inbounds i8,i8*%bu,i64 8
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 16
%bD=bitcast i8*%bC to i32*
store i32 3,i32*%bD,align 4
%bE=bitcast i8**%m to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bE)
%bF=bitcast i8**%n to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bF)
%bG=bitcast i8**%o to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bG)
%bH=bitcast i8**%p to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bH)
%bI=bitcast i8**%q to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bI)
%bJ=bitcast i8**%r to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bJ)
%bK=bitcast i8**%s to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%bK)
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
store i8*%bu,i8**%m,align 8
%bL=load atomic i32,i32*@sml_check_flag unordered,align 4
%bM=icmp eq i32%bL,0
br i1%bM,label%bS,label%bN
bN:
call void@sml_check(i32 inreg%bL)
%bO=load i8*,i8**%m,align 8
%bP=getelementptr inbounds i8,i8*%bO,i64 8
%bQ=bitcast i8*%bP to i8**
%bR=load i8*,i8**%bQ,align 8
br label%bS
bS:
%bT=phi i8*[%bR,%bN],[%bz,%be]
%bU=phi i8*[%bO,%bN],[%bu,%be]
store i8*null,i8**%m,align 8
store i8*%bU,i8**%q,align 8
store i8*%bT,i8**%r,align 8
%bV=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%bV,i8**%n,align 8
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%m,align 8
%bZ=bitcast i8*%bW to i64*
store i64 0,i64*%bZ,align 4
%b0=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%b1=getelementptr inbounds i8,i8*%bW,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bW,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 2,i32*%b4,align 4
%b5=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%b5,i8**%n,align 8
%b6=call i8*@sml_alloc(i32 inreg 12)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177288,i32*%b8,align 4
store i8*%b6,i8**%o,align 8
%b9=load i8*,i8**%m,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to i32*
store i32 1,i32*%cc,align 4
%cd=call i8*@sml_alloc(i32 inreg 28)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177304,i32*%cf,align 4
store i8*%cd,i8**%p,align 8
%cg=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%cd,i64 8
%cj=bitcast i8*%ci to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5patTy_2650 to void(...)*),void(...)**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cd,i64 16
%cl=bitcast i8*%ck to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5patTy_2650 to void(...)*),void(...)**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cd,i64 24
%cn=bitcast i8*%cm to i32*
store i32 -2147483647,i32*%cn,align 4
%co=call i8*@sml_alloc(i32 inreg 20)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177296,i32*%cq,align 4
%cr=bitcast i8*%co to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),i8**%cr,align 8
%cs=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%ct=getelementptr inbounds i8,i8*%co,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%co,i64 16
%cw=bitcast i8*%cv to i32*
store i32 3,i32*%cw,align 4
%cx=bitcast i8**%j to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cx)
%cy=bitcast i8**%k to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cy)
%cz=bitcast i8**%l to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%cz)
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%co,i8**%j,align 8
%cA=load atomic i32,i32*@sml_check_flag unordered,align 4
%cB=icmp eq i32%cA,0
br i1%cB,label%cJ,label%cC
cC:
call void@sml_check(i32 inreg%cA)
%cD=load i8*,i8**%j,align 8
%cE=bitcast i8*%cD to i8**
%cF=load i8*,i8**%cE,align 8
%cG=getelementptr inbounds i8,i8*%cD,i64 8
%cH=bitcast i8*%cG to i8**
%cI=load i8*,i8**%cH,align 8
br label%cJ
cJ:
%cK=phi i8*[%cI,%cC],[%cs,%bS]
%cL=phi i8*[%cF,%cC],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),%bS]
store i8*%cL,i8**%j,align 8
store i8*%cK,i8**%k,align 8
%cM=call i8*@sml_alloc(i32 inreg 20)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177296,i32*%cO,align 4
store i8*%cM,i8**%l,align 8
%cP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to i8**
store i8*null,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cM,i64 16
%cU=bitcast i8*%cT to i32*
store i32 3,i32*%cU,align 4
%cV=call i8*@sml_alloc(i32 inreg 20)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177296,i32*%cX,align 4
%cY=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cZ=bitcast i8*%cV to i8**
store i8*%cY,i8**%cZ,align 8
%c0=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%c1=getelementptr inbounds i8,i8*%cV,i64 8
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cV,i64 16
%c4=bitcast i8*%c3 to i32*
store i32 3,i32*%c4,align 4
%c5=call fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1142(i8*inreg%cV)
%c6=getelementptr inbounds i8,i8*%c5,i64 16
%c7=bitcast i8*%c6 to i8*(i8*,i8*)**
%c8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c7,align 8
%c9=bitcast i8*%c5 to i8**
%da=load i8*,i8**%c9,align 8
%db=call fastcc i8*%c8(i8*inreg%da,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@N,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cx)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cy)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%cz)
store i8*%db,i8**%o,align 8
%dc=call i8*@sml_alloc(i32 inreg 12)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177288,i32*%de,align 4
store i8*%dc,i8**%p,align 8
%df=load i8*,i8**%m,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to i32*
store i32 1,i32*%di,align 4
%dj=call i8*@sml_alloc(i32 inreg 28)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177304,i32*%dl,align 4
store i8*%dj,i8**%s,align 8
%dm=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dj,i64 8
%dp=bitcast i8*%do to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5expTy_2651 to void(...)*),void(...)**%dp,align 8
%dq=getelementptr inbounds i8,i8*%dj,i64 16
%dr=bitcast i8*%dq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLL5expTy_2651 to void(...)*),void(...)**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dj,i64 24
%dt=bitcast i8*%ds to i32*
store i32 -2147483647,i32*%dt,align 4
%du=call i8*@sml_alloc(i32 inreg 20)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177296,i32*%dw,align 4
%dx=bitcast i8*%du to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),i8**%dx,align 8
%dy=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%dz=getelementptr inbounds i8,i8*%du,i64 8
%dA=bitcast i8*%dz to i8**
store i8*%dy,i8**%dA,align 8
%dB=getelementptr inbounds i8,i8*%du,i64 16
%dC=bitcast i8*%dB to i32*
store i32 3,i32*%dC,align 4
%dD=bitcast i8**%g to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dD)
%dE=bitcast i8**%h to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dE)
%dF=bitcast i8**%i to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%dF)
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%du,i8**%g,align 8
%dG=load atomic i32,i32*@sml_check_flag unordered,align 4
%dH=icmp eq i32%dG,0
br i1%dH,label%dP,label%dI
dI:
call void@sml_check(i32 inreg%dG)
%dJ=load i8*,i8**%g,align 8
%dK=bitcast i8*%dJ to i8**
%dL=load i8*,i8**%dK,align 8
%dM=getelementptr inbounds i8,i8*%dJ,i64 8
%dN=bitcast i8*%dM to i8**
%dO=load i8*,i8**%dN,align 8
br label%dP
dP:
%dQ=phi i8*[%dO,%dI],[%dy,%cJ]
%dR=phi i8*[%dL,%dI],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),%cJ]
store i8*%dR,i8**%g,align 8
store i8*%dQ,i8**%h,align 8
%dS=call i8*@sml_alloc(i32 inreg 20)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
store i8*%dS,i8**%i,align 8
%dV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=getelementptr inbounds i8,i8*%dS,i64 8
%dY=bitcast i8*%dX to i8**
store i8*null,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dS,i64 16
%d0=bitcast i8*%dZ to i32*
store i32 3,i32*%d0,align 4
%d1=call i8*@sml_alloc(i32 inreg 20)#0
%d2=getelementptr inbounds i8,i8*%d1,i64 -4
%d3=bitcast i8*%d2 to i32*
store i32 1342177296,i32*%d3,align 4
%d4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%d5=bitcast i8*%d1 to i8**
store i8*%d4,i8**%d5,align 8
%d6=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%d7=getelementptr inbounds i8,i8*%d1,i64 8
%d8=bitcast i8*%d7 to i8**
store i8*%d6,i8**%d8,align 8
%d9=getelementptr inbounds i8,i8*%d1,i64 16
%ea=bitcast i8*%d9 to i32*
store i32 3,i32*%ea,align 4
%eb=call fastcc i8*@_SMLLN12ElaborateSQL5TyConE_1142(i8*inreg%d1)
%ec=getelementptr inbounds i8,i8*%eb,i64 16
%ed=bitcast i8*%ec to i8*(i8*,i8*)**
%ee=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ed,align 8
%ef=bitcast i8*%eb to i8**
%eg=load i8*,i8**%ef,align 8
%eh=call fastcc i8*%ee(i8*inreg%eg,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Q,i64 0,i32 2)to i8*))
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dD)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%dF)
store i8*%eh,i8**%p,align 8
%ei=call i8*@sml_alloc(i32 inreg 52)#0
%ej=getelementptr inbounds i8,i8*%ei,i64 -4
%ek=bitcast i8*%ej to i32*
store i32 1342177328,i32*%ek,align 4
store i8*%ei,i8**%s,align 8
%el=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%em=bitcast i8*%ei to i8**
store i8*%el,i8**%em,align 8
%en=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%eo=getelementptr inbounds i8,i8*%ei,i64 8
%ep=bitcast i8*%eo to i8**
store i8*%en,i8**%ep,align 8
%eq=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%er=getelementptr inbounds i8,i8*%ei,i64 16
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%eu=getelementptr inbounds i8,i8*%ei,i64 24
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%ex=getelementptr inbounds i8,i8*%ei,i64 32
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%eA=getelementptr inbounds i8,i8*%ei,i64 40
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=getelementptr inbounds i8,i8*%ei,i64 48
%eD=bitcast i8*%eC to i32*
store i32 63,i32*%eD,align 4
%eE=call i8*@sml_alloc(i32 inreg 28)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177304,i32*%eG,align 4
%eH=load i8*,i8**%s,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%eE,i64 8
%eK=bitcast i8*%eJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2657 to void(...)*),void(...)**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eE,i64 16
%eM=bitcast i8*%eL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL5sqlFnE_2657 to void(...)*),void(...)**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eE,i64 24
%eO=bitcast i8*%eN to i32*
store i32 -2147483647,i32*%eO,align 4
%eP=call fastcc i8*@_SMLLN12ElaborateSQL3Fn1E_1185(i8*inreg%eE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bE)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bF)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bG)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bH)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%bK)
%eQ=getelementptr inbounds i8,i8*%eP,i64 16
%eR=bitcast i8*%eQ to i8*(i8*,i8*)**
%eS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eR,align 8
%eT=bitcast i8*%eP to i8**
%eU=load i8*,i8**%eT,align 8
%eV=load i8*,i8**%w,align 8
%eW=tail call fastcc i8*%eS(i8*inreg%eU,i8*inreg%eV)
ret i8*%eW
eX:
%eY=getelementptr inbounds i8,i8*%J,i64 8
%eZ=bitcast i8*%eY to i8**
%e0=load i8*,i8**%eZ,align 8
store i8*%e0,i8**%t,align 8
%e1=load i8*,i8**%v,align 8
%e2=getelementptr inbounds i8,i8*%e1,i64 8
%e3=bitcast i8*%e2 to i8**
%e4=load i8*,i8**%e3,align 8
store i8*%e4,i8**%u,align 8
%e5=bitcast i8*%e1 to i8**
%e6=load i8*,i8**%e5,align 8
%e7=getelementptr inbounds i8,i8*%e6,i64 8
%e8=bitcast i8*%e7 to i8**
%e9=load i8*,i8**%e8,align 8
store i8*%e9,i8**%v,align 8
%fa=call i8*@sml_alloc(i32 inreg 20)#0
%fb=getelementptr inbounds i8,i8*%fa,i64 -4
%fc=bitcast i8*%fb to i32*
store i32 1342177296,i32*%fc,align 4
%fd=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%fe=bitcast i8*%fa to i8**
store i8*%fd,i8**%fe,align 8
%ff=load i8*,i8**%w,align 8
%fg=getelementptr inbounds i8,i8*%fa,i64 8
%fh=bitcast i8*%fg to i8**
store i8*%ff,i8**%fh,align 8
%fi=getelementptr inbounds i8,i8*%fa,i64 16
%fj=bitcast i8*%fi to i32*
store i32 3,i32*%fj,align 4
%fk=load i8*,i8**%u,align 8
%fl=load i8*,i8**%v,align 8
store i8*null,i8**%u,align 8
store i8*null,i8**%v,align 8
%fm=call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2512(i8*inreg%fk,i8*inreg%fl,i8*inreg%fa)
store i8*%fm,i8**%t,align 8
%fn=getelementptr inbounds i8,i8*%fm,i64 8
%fo=bitcast i8*%fn to i8***
%fp=load i8**,i8***%fo,align 8
%fq=load i8*,i8**%fp,align 8
%fr=call fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2493(i8*inreg%fq)
%fs=getelementptr inbounds i8,i8*%fr,i64 16
%ft=bitcast i8*%fs to i8*(i8*,i8*)**
%fu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ft,align 8
%fv=bitcast i8*%fr to i8**
%fw=load i8*,i8**%fv,align 8
store i8*%fw,i8**%u,align 8
%fx=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%fy=getelementptr inbounds i8,i8*%fx,i64 8
%fz=bitcast i8*%fy to i8**
%fA=load i8*,i8**%fz,align 8
%fB=getelementptr inbounds i8,i8*%fA,i64 8
%fC=bitcast i8*%fB to i8**
%fD=load i8*,i8**%fC,align 8
%fE=call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2477(i8*inreg%fD)
%fF=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%fG=call fastcc i8*%fu(i8*inreg%fF,i8*inreg%fE)
%fH=getelementptr inbounds i8,i8*%fG,i64 16
%fI=bitcast i8*%fH to i8*(i8*,i8*)**
%fJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fI,align 8
%fK=bitcast i8*%fG to i8**
%fL=load i8*,i8**%fK,align 8
%fM=load i8*,i8**%w,align 8
%fN=tail call fastcc i8*%fJ(i8*inreg%fL,i8*inreg%fM)
ret i8*%fN
fO:
%fP=getelementptr inbounds i8,i8*%J,i64 8
%fQ=bitcast i8*%fP to i8**
%fR=load i8*,i8**%fQ,align 8
%fS=getelementptr inbounds i8,i8*%fR,i64 8
%fT=bitcast i8*%fS to i8**
%fU=load i8*,i8**%fT,align 8
store i8*%fU,i8**%u,align 8
%fV=bitcast i8*%fR to i8**
%fW=load i8*,i8**%fV,align 8
%fX=icmp eq i8*%fW,null
br i1%fX,label%fY,label%fZ
fY:
store i8*null,i8**%v,align 8
br label%gx
fZ:
%f0=bitcast i8*%fW to i8**
%f1=load i8*,i8**%f0,align 8
%f2=bitcast i8**%v to i8***
%f3=load i8**,i8***%f2,align 8
store i8*null,i8**%v,align 8
%f4=load i8*,i8**%f3,align 8
%f5=getelementptr inbounds i8,i8*%f4,i64 8
%f6=bitcast i8*%f5 to i8***
%f7=load i8**,i8***%f6,align 8
%f8=load i8*,i8**%f7,align 8
%f9=getelementptr inbounds i8,i8*%f8,i64 16
%ga=bitcast i8*%f9 to i8*(i8*,i8*)**
%gb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ga,align 8
%gc=bitcast i8*%f8 to i8**
%gd=load i8*,i8**%gc,align 8
%ge=call fastcc i8*%gb(i8*inreg%gd,i8*inreg%f1)
store i8*%ge,i8**%t,align 8
%gf=call i8*@sml_alloc(i32 inreg 12)#0
%gg=getelementptr inbounds i8,i8*%gf,i64 -4
%gh=bitcast i8*%gg to i32*
store i32 1342177288,i32*%gh,align 4
store i8*%gf,i8**%v,align 8
%gi=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%gj=bitcast i8*%gf to i8**
store i8*%gi,i8**%gj,align 8
%gk=getelementptr inbounds i8,i8*%gf,i64 8
%gl=bitcast i8*%gk to i32*
store i32 1,i32*%gl,align 4
%gm=call i8*@sml_alloc(i32 inreg 28)#0
%gn=getelementptr inbounds i8,i8*%gm,i64 -4
%go=bitcast i8*%gn to i32*
store i32 1342177304,i32*%go,align 4
%gp=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%gq=bitcast i8*%gm to i8**
store i8*%gp,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gm,i64 8
%gs=bitcast i8*%gr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2660 to void(...)*),void(...)**%gs,align 8
%gt=getelementptr inbounds i8,i8*%gm,i64 16
%gu=bitcast i8*%gt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2660 to void(...)*),void(...)**%gu,align 8
%gv=getelementptr inbounds i8,i8*%gm,i64 24
%gw=bitcast i8*%gv to i32*
store i32 -2147483647,i32*%gw,align 4
br label%gx
gx:
%gy=phi i8*[%gm,%fZ],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jM,i64 0,i32 2)to i8*),%fY]
store i8*%gy,i8**%t,align 8
%gz=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bW,i64 0,i32 2)to i8*))
%gA=getelementptr inbounds i8,i8*%gz,i64 16
%gB=bitcast i8*%gA to i8*(i8*,i8*)**
%gC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gB,align 8
%gD=bitcast i8*%gz to i8**
%gE=load i8*,i8**%gD,align 8
%gF=load i8*,i8**%w,align 8
%gG=call fastcc i8*%gC(i8*inreg%gE,i8*inreg%gF)
store i8*%gG,i8**%v,align 8
%gH=call i8*@sml_alloc(i32 inreg 20)#0
%gI=getelementptr inbounds i8,i8*%gH,i64 -4
%gJ=bitcast i8*%gI to i32*
store i32 1342177296,i32*%gJ,align 4
store i8*%gH,i8**%x,align 8
%gK=getelementptr inbounds i8,i8*%gH,i64 4
%gL=bitcast i8*%gK to i32*
store i32 0,i32*%gL,align 1
%gM=bitcast i8*%gH to i32*
store i32 25,i32*%gM,align 4
%gN=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%gO=getelementptr inbounds i8,i8*%gH,i64 8
%gP=bitcast i8*%gO to i8**
store i8*%gN,i8**%gP,align 8
%gQ=getelementptr inbounds i8,i8*%gH,i64 16
%gR=bitcast i8*%gQ to i32*
store i32 2,i32*%gR,align 4
%gS=call i8*@sml_alloc(i32 inreg 28)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177304,i32*%gU,align 4
store i8*%gS,i8**%v,align 8
%gV=load i8*,i8**%w,align 8
%gW=bitcast i8*%gS to i8**
store i8*%gV,i8**%gW,align 8
%gX=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%gY=getelementptr inbounds i8,i8*%gS,i64 8
%gZ=bitcast i8*%gY to i8**
store i8*%gX,i8**%gZ,align 8
%g0=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%g1=getelementptr inbounds i8,i8*%gS,i64 16
%g2=bitcast i8*%g1 to i8**
store i8*%g0,i8**%g2,align 8
%g3=getelementptr inbounds i8,i8*%gS,i64 24
%g4=bitcast i8*%g3 to i32*
store i32 7,i32*%g4,align 4
%g5=call i8*@sml_alloc(i32 inreg 20)#0
%g6=getelementptr inbounds i8,i8*%g5,i64 -4
%g7=bitcast i8*%g6 to i32*
store i32 1342177296,i32*%g7,align 4
store i8*%g5,i8**%u,align 8
%g8=getelementptr inbounds i8,i8*%g5,i64 4
%g9=bitcast i8*%g8 to i32*
store i32 0,i32*%g9,align 1
%ha=bitcast i8*%g5 to i32*
store i32 23,i32*%ha,align 4
%hb=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%hc=getelementptr inbounds i8,i8*%g5,i64 8
%hd=bitcast i8*%hc to i8**
store i8*%hb,i8**%hd,align 8
%he=getelementptr inbounds i8,i8*%g5,i64 16
%hf=bitcast i8*%he to i32*
store i32 2,i32*%hf,align 4
%hg=call i8*@sml_alloc(i32 inreg 12)#0
%hh=getelementptr inbounds i8,i8*%hg,i64 -4
%hi=bitcast i8*%hh to i32*
store i32 1342177288,i32*%hi,align 4
store i8*%hg,i8**%v,align 8
%hj=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%hk=bitcast i8*%hg to i8**
store i8*%hj,i8**%hk,align 8
%hl=getelementptr inbounds i8,i8*%hg,i64 8
%hm=bitcast i8*%hl to i32*
store i32 1,i32*%hm,align 4
%hn=call i8*@sml_alloc(i32 inreg 28)#0
%ho=getelementptr inbounds i8,i8*%hn,i64 -4
%hp=bitcast i8*%ho to i32*
store i32 1342177304,i32*%hp,align 4
store i8*%hn,i8**%u,align 8
%hq=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%hr=bitcast i8*%hn to i8**
store i8*%hq,i8**%hr,align 8
%hs=getelementptr inbounds i8,i8*%hn,i64 8
%ht=bitcast i8*%hs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2665 to void(...)*),void(...)**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hn,i64 16
%hv=bitcast i8*%hu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2665 to void(...)*),void(...)**%hv,align 8
%hw=getelementptr inbounds i8,i8*%hn,i64 24
%hx=bitcast i8*%hw to i32*
store i32 -2147483647,i32*%hx,align 4
%hy=call i8*@sml_alloc(i32 inreg 20)#0
%hz=getelementptr inbounds i8,i8*%hy,i64 -4
%hA=bitcast i8*%hz to i32*
store i32 1342177296,i32*%hA,align 4
%hB=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%hC=bitcast i8*%hy to i8**
store i8*%hB,i8**%hC,align 8
%hD=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%hE=getelementptr inbounds i8,i8*%hy,i64 8
%hF=bitcast i8*%hE to i8**
store i8*%hD,i8**%hF,align 8
%hG=getelementptr inbounds i8,i8*%hy,i64 16
%hH=bitcast i8*%hG to i32*
store i32 3,i32*%hH,align 4
%hI=bitcast i8**%c to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hI)
%hJ=bitcast i8**%d to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hJ)
%hK=bitcast i8**%e to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hK)
%hL=bitcast i8**%f to i8*
call void@llvm.lifetime.start.p0i8(i64 8,i8*%hL)
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%hy,i8**%c,align 8
%hM=load atomic i32,i32*@sml_check_flag unordered,align 4
%hN=icmp eq i32%hM,0
br i1%hN,label%hV,label%hO
hO:
call void@sml_check(i32 inreg%hM)
%hP=load i8*,i8**%c,align 8
%hQ=bitcast i8*%hP to i8**
%hR=load i8*,i8**%hQ,align 8
%hS=getelementptr inbounds i8,i8*%hP,i64 8
%hT=bitcast i8*%hS to i8**
%hU=load i8*,i8**%hT,align 8
br label%hV
hV:
%hW=phi i8*[%hU,%hO],[%hD,%gx]
%hX=phi i8*[%hR,%hO],[%hB,%gx]
store i8*%hX,i8**%c,align 8
store i8*%hW,i8**%d,align 8
%hY=call fastcc i8*@_SMLLN12ElaborateSQL3AppE_1195(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gj,i64 0,i32 2)to i8*))
%hZ=getelementptr inbounds i8,i8*%hY,i64 16
%h0=bitcast i8*%hZ to i8*(i8*,i8*)**
%h1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h0,align 8
%h2=bitcast i8*%hY to i8**
%h3=load i8*,i8**%h2,align 8
store i8*%h3,i8**%e,align 8
%h4=call i8*@sml_alloc(i32 inreg 20)#0
%h5=getelementptr inbounds i8,i8*%h4,i64 -4
%h6=bitcast i8*%h5 to i32*
store i32 1342177296,i32*%h6,align 4
store i8*%h4,i8**%f,align 8
%h7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%h8=bitcast i8*%h4 to i8**
store i8*%h7,i8**%h8,align 8
%h9=getelementptr inbounds i8,i8*%h4,i64 8
%ia=bitcast i8*%h9 to i8**
store i8*null,i8**%ia,align 8
%ib=getelementptr inbounds i8,i8*%h4,i64 16
%ic=bitcast i8*%ib to i32*
store i32 3,i32*%ic,align 4
%id=call i8*@sml_alloc(i32 inreg 20)#0
%ie=getelementptr inbounds i8,i8*%id,i64 -4
%if=bitcast i8*%ie to i32*
store i32 1342177296,i32*%if,align 4
store i8*%id,i8**%d,align 8
%ig=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ih=bitcast i8*%id to i8**
store i8*%ig,i8**%ih,align 8
%ii=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ij=getelementptr inbounds i8,i8*%id,i64 8
%ik=bitcast i8*%ij to i8**
store i8*%ii,i8**%ik,align 8
%il=getelementptr inbounds i8,i8*%id,i64 16
%im=bitcast i8*%il to i32*
store i32 3,i32*%im,align 4
%in=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%io=getelementptr inbounds i8,i8*%in,i64 16
%ip=bitcast i8*%io to i8*(i8*,i8*)**
%iq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ip,align 8
%ir=bitcast i8*%in to i8**
%is=load i8*,i8**%ir,align 8
%it=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iu=call fastcc i8*%iq(i8*inreg%is,i8*inreg%it)
%iv=call fastcc i8*@_SMLLN12ElaborateSQL6RecordE_1199(i8*inreg%iu)
%iw=load i8*,i8**%e,align 8
%ix=call fastcc i8*%h1(i8*inreg%iw,i8*inreg%iv)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hI)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hJ)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hK)
call void@llvm.lifetime.end.p0i8(i64 8,i8*%hL)
%iy=getelementptr inbounds i8,i8*%ix,i64 16
%iz=bitcast i8*%iy to i8*(i8*,i8*)**
%iA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iz,align 8
%iB=bitcast i8*%ix to i8**
%iC=load i8*,i8**%iB,align 8
%iD=load i8*,i8**%w,align 8
%iE=tail call fastcc i8*%iA(i8*inreg%iC,i8*inreg%iD)
ret i8*%iE
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2668(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2667 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL10elabSqlexpE_2667 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12elaborateExpE_2676(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%o,label%q
o:
%p=bitcast i8*%a to i8***
br label%u
q:
call void@sml_check(i32 inreg%m)
%r=load i8*,i8**%c,align 8
%s=bitcast i8**%i to i8****
%t=load i8***,i8****%s,align 8
br label%u
u:
%v=phi i8***[%t,%q],[%p,%o]
%w=phi i8*[%r,%q],[%b,%o]
store i8*null,i8**%c,align 8
%x=load i8**,i8***%v,align 8
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=bitcast i8***%v to i8**
%A=load i8*,i8**%z,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=bitcast i8*%w to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=getelementptr inbounds i8,i8*%w,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%h,align 8
%J=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%l,align 8
%P=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@jO,i64 0,i32 2,i64 0))
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
store i8*%W,i8**%c,align 8
%X=load i8*,i8**%i,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
store i8*%aa,i8**%d,align 8
%ab=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%ab,i8**%j,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%k,align 8
%af=bitcast i8*%ac to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jQ,i64 0,i32 2)to i8*),i8**%af,align 8
%ag=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%al,i64 24
%ax=bitcast i8*%aw to i32*
store i32 7,i32*%ax,align 4
%ay=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%az=call fastcc i8*%M(i8*inreg%ay,i8*inreg%al)
store i8*%az,i8**%c,align 8
%aA=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%l,align 8
%aG=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@jP,i64 0,i32 2,i64 0))
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
%aM=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%aN=call fastcc i8*%aJ(i8*inreg%aL,i8*inreg%aM)
store i8*%aN,i8**%d,align 8
%aO=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%aO,i8**%j,align 8
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%k,align 8
%aS=bitcast i8*%aP to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jQ,i64 0,i32 2)to i8*),i8**%aS,align 8
%aT=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 28)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177304,i32*%a0,align 4
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%a7=getelementptr inbounds i8,i8*%aY,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aY,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 7,i32*%ba,align 4
%bb=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bc=call fastcc i8*%aD(i8*inreg%bb,i8*inreg%aY)
store i8*%bc,i8**%c,align 8
%bd=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%be=getelementptr inbounds i8,i8*%bd,i64 16
%bf=bitcast i8*%be to i8*(i8*,i8*)**
%bg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bf,align 8
%bh=bitcast i8*%bd to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%l,align 8
%bj=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@jR,i64 0,i32 2,i64 0))
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
%bp=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%bq=call fastcc i8*%bm(i8*inreg%bo,i8*inreg%bp)
store i8*%bq,i8**%d,align 8
%br=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%br,i8**%j,align 8
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
store i8*%bs,i8**%k,align 8
%bv=bitcast i8*%bs to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jS,i64 0,i32 2)to i8*),i8**%bv,align 8
%bw=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to i32*
store i32 3,i32*%bA,align 4
%bB=call i8*@sml_alloc(i32 inreg 28)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177304,i32*%bD,align 4
%bE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bF=bitcast i8*%bB to i8**
store i8*%bE,i8**%bF,align 8
%bG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bH=getelementptr inbounds i8,i8*%bB,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bK=getelementptr inbounds i8,i8*%bB,i64 16
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bB,i64 24
%bN=bitcast i8*%bM to i32*
store i32 7,i32*%bN,align 4
%bO=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bP=call fastcc i8*%bg(i8*inreg%bO,i8*inreg%bB)
store i8*%bP,i8**%c,align 8
%bQ=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%bR=getelementptr inbounds i8,i8*%bQ,i64 16
%bS=bitcast i8*%bR to i8*(i8*,i8*)**
%bT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bS,align 8
%bU=bitcast i8*%bQ to i8**
%bV=load i8*,i8**%bU,align 8
store i8*%bV,i8**%l,align 8
%bW=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@jT,i64 0,i32 2,i64 0))
%bX=getelementptr inbounds i8,i8*%bW,i64 16
%bY=bitcast i8*%bX to i8*(i8*,i8*)**
%bZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bY,align 8
%b0=bitcast i8*%bW to i8**
%b1=load i8*,i8**%b0,align 8
%b2=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%b3=call fastcc i8*%bZ(i8*inreg%b1,i8*inreg%b2)
store i8*%b3,i8**%d,align 8
%b4=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%b4,i8**%j,align 8
%b5=call i8*@sml_alloc(i32 inreg 20)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177296,i32*%b7,align 4
store i8*%b5,i8**%k,align 8
%b8=bitcast i8*%b5 to i8**
store i8*null,i8**%b8,align 8
%b9=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%ca=getelementptr inbounds i8,i8*%b5,i64 8
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b5,i64 16
%cd=bitcast i8*%cc to i32*
store i32 3,i32*%cd,align 4
%ce=call i8*@sml_alloc(i32 inreg 28)#0
%cf=getelementptr inbounds i8,i8*%ce,i64 -4
%cg=bitcast i8*%cf to i32*
store i32 1342177304,i32*%cg,align 4
%ch=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ci=bitcast i8*%ce to i8**
store i8*%ch,i8**%ci,align 8
%cj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ck=getelementptr inbounds i8,i8*%ce,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cn=getelementptr inbounds i8,i8*%ce,i64 16
%co=bitcast i8*%cn to i8**
store i8*%cm,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ce,i64 24
%cq=bitcast i8*%cp to i32*
store i32 7,i32*%cq,align 4
%cr=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cs=call fastcc i8*%bT(i8*inreg%cr,i8*inreg%ce)
store i8*%cs,i8**%c,align 8
%ct=load i8*,i8**%i,align 8
%cu=getelementptr inbounds i8,i8*%ct,i64 16
%cv=bitcast i8*%cu to i8**
%cw=load i8*,i8**%cv,align 8
store i8*%cw,i8**%i,align 8
%cx=call i8*@sml_alloc(i32 inreg 28)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177304,i32*%cz,align 4
store i8*%cx,i8**%d,align 8
%cA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cD=getelementptr inbounds i8,i8*%cx,i64 8
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cx,i64 16
%cG=bitcast i8*%cF to i8**
store i8*null,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cx,i64 24
%cI=bitcast i8*%cH to i32*
store i32 7,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
%cM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cP=getelementptr inbounds i8,i8*%cJ,i64 8
%cQ=bitcast i8*%cP to i8**
store i8*%cO,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cJ,i64 16
%cS=bitcast i8*%cR to i32*
store i32 3,i32*%cS,align 4
%cT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cU=call fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2668(i8*inreg%cT,i8*inreg%cJ)
%cV=getelementptr inbounds i8,i8*%cU,i64 16
%cW=bitcast i8*%cV to i8*(i8*,i8*)**
%cX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cW,align 8
%cY=bitcast i8*%cU to i8**
%cZ=load i8*,i8**%cY,align 8
store i8*%cZ,i8**%c,align 8
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
%c3=load i8*,i8**%g,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%h,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=load i8*,i8**%c,align 8
%db=tail call fastcc i8*%cX(i8*inreg%da,i8*inreg%c0)
ret i8*%db
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12elaborateExpE_2677(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2676 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2676 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12elaborateExpE_2678(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 28)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177304,i32*%t,align 4
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2677 to void(...)*),void(...)**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLN12ElaborateSQL12elaborateExpE_2677 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 24
%B=bitcast i8*%A to i32*
store i32 -2147483647,i32*%B,align 4
ret i8*%r
}
define fastcc i8*@_SMLFN12ElaborateSQL12elaborateExpE(i8*inreg%a)local_unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8**,i8***bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar93050c497abea278_ElaborateSQL,i64 0,i32 2,i64 0)to i8***),align 8
%k=load i8*,i8**%j,align 8
%l=tail call fastcc i8*@_SMLLN12ElaborateSQL12elaborateExpE_2678(i8*inreg%k,i8*inreg%h)
ret i8*%l
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6TyWildE_2682(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL6TyWildE_1137(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7PatWildE_2685(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7PatWildE_1147(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4PairE_2700(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL4PairE_1201(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4ConsE_2709(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL4ConsE_1236(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL4ListE_2710(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL4ListE_1238(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL6OptionE_2712(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL6OptionE_1242(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__and3E_2716(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__and3E_1250(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__or3E_2718(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7Fun__or3E_1254(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2720(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1258(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_2721(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Fun__isSomeE_1260(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_2723(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7Fun__mapE_1264(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_2725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1269(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_2726(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Fun__filterE_1271(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_2728(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Fun__appendE_1277(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_2730(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__takeE_1281(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_2732(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__dropE_1285(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_2734(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__prodE_1289(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Fun__joinE_2736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Fun__joinE_1293(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7Fun__nubE_2738(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7Fun__nubE_1298(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_2740(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Fun__sortByE_1303(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_2742(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11Fun__groupByE_1309(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__compareE_2744(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11Fun__compareE_1315(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15Fun__comparePairE_2746(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL15Fun__comparePairE_1319(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16Fun__reverseOrderE_2748(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16Fun__reverseOrderE_1323(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11Fun__fromSQLE_2750(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11Fun__fromSQLE_1327(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_2752(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL15Fun__dummyCursorE_1332(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13Fun__sqlserverE_2754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13Fun__sqlserverE_1336(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16Var__closeCommandE_2756(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16Var__closeCommandE_1340(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8Con__JOINE_2773(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8Con__JOINE_1391(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13Con__INNERJOINE_2774(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13Con__INNERJOINE_1393(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__OFFSETE_2779(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Con__OFFSETE_1408(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__SELECTE_2783(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Con__SELECTE_1419(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_2786(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Con__INSERTE_1426(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10Con__UPDATEE_2788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10Con__UPDATEE_1432(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5unionE_2801(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1458(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5unionE_2802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL5unionE_1460(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9listToSetE_2803(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL9listToSetE_1462(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12filterLabelsE_2807(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN12ElaborateSQL12filterLabelsE_1471(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToPatE_2815(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14tableListToPatE_1498(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12flattenTableE_2817(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12flattenTableE_1502(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_2819(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_1507(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_2820(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16flattenTableListE_1509(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL4pats_2822(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL4pats_1514(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL4pats_2823(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL4pats_1516(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_2824(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_1518(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13correlateJoinE_2825(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9transposeE_2828(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL9transposeE_1536(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_2830(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1544(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_2831(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10nestedPairE_1546(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_2833(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1550(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_2834(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13nestedCompareE_1552(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_2836(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1556(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_2837(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1558(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_2838(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12ascdescToToyE_1560(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_2840(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLL7compare_2841(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL7compare_1571(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL7compare_2842(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gT,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13distinctToToyE_2843(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_2845(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12tableIdToToyE_1865(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2846(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1872(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2847(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1901(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2848(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1907(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2849(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1909(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2850(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1913(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2851(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1915(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2852(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1917(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2853(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1921(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2854(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1923(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2855(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1927(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2856(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1929(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2857(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1931(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2858(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_1935(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2859(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_1937(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2860(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1941(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2861(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1943(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2862(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1945(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2863(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1949(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1e_2864(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1e_1969(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2865(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1971(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2866(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1975(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2868(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1987(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2869(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1991(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2870(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_1995(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2871(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2872(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2001(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2873(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2006(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2874(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2875(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2012(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2876(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2877(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2032(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL7default_2878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL7default_2035(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL7default_2879(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL7default_2039(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3pat_2880(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3pat_2041(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3exp_2881(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3exp_2043(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2882(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2046(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2883(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToToyE_2050(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL7default_2884(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL7default_2053(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3pat_2885(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3pat_2055(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3exp_2886(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3exp_2057(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2887(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2081(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2888(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14tableListToToyE_2083(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2889(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2085(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2890(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2088(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2891(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2090(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2892(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10tableToToyE_2096(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13queryToToyOptE_2893(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16insertValueToToyE_2894(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16insertValueToToyE_2107(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2895(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2113(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2896(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hL,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12groupByToToyE_2897(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11havingToToyE_2898(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2910(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2125(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2911(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2128(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2912(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13ascdescToTermE_2131(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2914(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2135(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2915(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2138(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2916(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL14distinctToTermE_2141(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2918(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_2292(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2919(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_2303(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2920(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_2307(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2921(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2312(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2922(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2339(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2923(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2342(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2924(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2344(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2925(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2348(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2926(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2351(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2927(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2358(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2928(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2363(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2929(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2366(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2930(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2372(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2931(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2378(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2932(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2384(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2933(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2386(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2934(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2388(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2935(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11queryToTermE_2390(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3arg_2936(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3arg_2393(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3arg_2937(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3arg_2395(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL3pat_2938(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL3pat_2399(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL1x_2939(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL1x_2401(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL11fieldToTerm_2940(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL11fieldToTerm_2403(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2941(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11whereToTermE_2423(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2942(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL12recordToTermE_2425(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2943(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2429(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2944(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL13groupByToTermE_2431(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2955(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2464(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2956(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10queryToExpE_2473(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2958(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2959(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL5mergeE_2481(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL12removeLabelsE_2960(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN12ElaborateSQL12removeLabelsE_2484(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2962(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8makeBindE_2490(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2964(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL5toSQLE_2499(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL15representatives_2966(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL15representatives_2507(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2967(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2968(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2543(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2969(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2970(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2549(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2971(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabSQLE_2551(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL5error_2972(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLL5error_2569(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2973(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLN12ElaborateSQL7elabExpE_2574(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2974(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2975(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL7elabExpE_2583(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLL6labels_2976(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLL6labels_2602(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2977(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2978(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL8elabFromE_2607(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2980(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL11elabOrderByE_2620(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2981(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2631(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2982(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2983(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10elabSelectE_2637(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2984(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2641(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2985(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=bitcast i8*%c to i32*
%f=load i32,i32*%e,align 4
%g=tail call fastcc i8*@_SMLLN12ElaborateSQL9elabEmbedE_2511(i8*inreg%a,i8*inreg%b,i32 inreg%f,i8*inreg%d)
ret i8*%g
}
define internal fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2986(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=bitcast i8*%c to i32*
%f=load i32,i32*%e,align 4
%g=tail call fastcc i8*@_SMLLN12ElaborateSQL16elabInsertValuesE_2536(i8*inreg%a,i8*inreg%b,i32 inreg%f,i8*inreg%d)
ret i8*%g
}
define internal fastcc i8*@_SMLLN12ElaborateSQL13elabInsertRowE_2987(i8*inreg%a,i8*inreg%b,i8*inreg%c,i8*inreg%d)#2 gc"smlsharp"{
%e=bitcast i8*%c to i32*
%f=load i32,i32*%e,align 4
%g=tail call fastcc i8*@_SMLLN12ElaborateSQL13elabInsertRowE_2537(i8*inreg%a,i8*inreg%b,i32 inreg%f,i8*inreg%d)
ret i8*%g
}
define internal fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2988(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL5sqlFnE_2654(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2990(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLN12ElaborateSQL10elabSqlexpE_2663(i8*inreg%b)
ret i8*%c
}
declare void@llvm.memset.p0i8.i32(i8*,i8,i32,i1)#0
declare void@llvm.lifetime.start.p0i8(i64,i8*)#0
declare void@llvm.lifetime.end.p0i8(i64,i8*)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
