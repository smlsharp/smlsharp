@sml_check_flag=external local_unnamed_addr global i32
@_SMLZN14ElaborateError14EndWithInfixIDE=external local_unnamed_addr global i8*
@_SMLZN14ElaborateError16BeginWithInfixIDE=external local_unnamed_addr global i8*
@_SMLZN14ElaborateError23InvalidFixityPrecedenceE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL11NegNotUnaryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL13AppInSQLQueryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL13CrossJoinNameE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL15TupleInSQLQueryE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL20DuplicateSQLSetLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL20UnnaturalNaturalJoinE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL21DuplicateSQLFromLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL22NumberOfSQLInsertLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL23DuplicateSQLInsertLabelE=external local_unnamed_addr global i8*
@_SMLZN17ElaborateErrorSQL23DuplicateSQLSelectLabelE=external local_unnamed_addr global i8*
@_SMLZN3Bug3BugE=external local_unnamed_addr global i8*
@_SMLZN3Loc5nolocE=external local_unnamed_addr global i8*
@_SMLZ5Match=external unnamed_addr constant i8*
@a=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"Op\00"}>,align 8
@b=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@a,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"::\00"}>,align 8
@e=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@d,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@f=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"nil\00"}>,align 8
@g=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@f,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@h=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"SOME\00"}>,align 8
@i=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@h,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@j=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@Q,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@i,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@k=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@j,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@l=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"NONE\00"}>,align 8
@m=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@l,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@n=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@Q,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@m,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@o=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@n,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@p=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"true\00"}>,align 8
@q=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@p,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@r=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@t,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@q,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@s=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@r,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@t=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"Bool\00"}>,align 8
@u=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"false\00"}>,align 8
@v=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@u,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@w=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@t,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@v,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@x=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@w,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@y=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"True\00"}>,align 8
@z=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@y,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@A=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@z,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@B=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@A,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@C=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"False\00"}>,align 8
@D=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@C,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@E=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@D,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@F=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@E,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@G=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"Unknown\00"}>,align 8
@H=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@G,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@I=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@H,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@J=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@I,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@K=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"db\00"}>,align 8
@L=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@K,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@M=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@L,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@N=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"command\00"}>,align 8
@O=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@N,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@P=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@O,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Q=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"Option\00"}>,align 8
@R=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"isSome\00"}>,align 8
@S=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@R,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@T=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@Q,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@S,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@U=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@T,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@V=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"not3\00"}>,align 8
@W=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@V,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@X=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@W,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Y=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@X,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@Z=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"and3\00"}>,align 8
@aa=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@Z,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ab=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aa,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ac=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ab,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ad=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"or3\00"}>,align 8
@ae=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@ad,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@af=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ae,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ag=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@af,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ah=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"fromBool\00"}>,align 8
@ai=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@ah,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ai,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ak=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@al=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"isTrue\00"}>,align 8
@am=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@al,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@an=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@am,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ao=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@an,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ap=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"Bool3\00"}>,align 8
@aq=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"is\00"}>,align 8
@ar=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@aq,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@as=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ap,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ar,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@at=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@as,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@au=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"map\00"}>,align 8
@av=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@au,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@av,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ax=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ay=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"filter\00"}>,align 8
@az=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@ay,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@az,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aC=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"@\00"}>,align 8
@aD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@aC,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aG=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"hd\00"}>,align 8
@aH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@aG,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aH,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aK=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"take\00"}>,align 8
@aL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aK,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aO=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"List\00"}>,align 8
@aP=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"drop\00"}>,align 8
@aQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aP,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@aO,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aT=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"onlyOne\00"}>,align 8
@aU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@aT,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@aX=private unnamed_addr constant<{[4x i8],i32,[11x i8]}><{[4x i8]zeroinitializer,i32 -2147483637,[11x i8]c"isNotEmpty\00"}>,align 8
@aY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[11x i8]}>,<{[4x i8],i32,[11x i8]}>*@aX,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@aZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a1=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"prod\00"}>,align 8
@a2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@a1,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@a3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a5=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"join\00"}>,align 8
@a6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@a5,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@a7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@a9=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"nub\00"}>,align 8
@ba=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@a9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ba,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bd=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"sortBy\00"}>,align 8
@be=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@bd,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@be,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bf,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bh=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"List2\00"}>,align 8
@bi=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"groupBy\00"}>,align 8
@bj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bi,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bm=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"compare\00"}>,align 8
@bn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bm,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bp=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"comparePair\00"}>,align 8
@bq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@bp,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@br=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@bt,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bs=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@br,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bt=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"General2\00"}>,align 8
@bu=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"reverseOrder\00"}>,align 8
@bv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bu,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@bt,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bv,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@by=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"fromSQL\00"}>,align 8
@bz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@by,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bB=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"toSQL\00"}>,align 8
@bC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bB,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bC,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bE=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"dummyCursor\00"}>,align 8
@bF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@bE,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bH=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"newCursor\00"}>,align 8
@bI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@bH,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bK=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"sqlserver\00"}>,align 8
@bL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@bK,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bN=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"sqleval\00"}>,align 8
@bO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@bN,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bO,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bQ=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"closeCommand\00"}>,align 8
@bR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@bQ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bT=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"ty\00"}>,align 8
@bU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@bT,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bW=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"CONST\00"}>,align 8
@bX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@bW,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@bY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bX,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@bZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b0=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"INT\00"}>,align 8
@b1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@b0,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@b2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b1,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b4=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"WORD\00"}>,align 8
@b5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@b4,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@b6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b5,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@b8=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"REAL\00"}>,align 8
@b9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@b8,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ca=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b9,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ca,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cc=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"STRING\00"}>,align 8
@cd=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cc,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ce=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cd,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cf=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ce,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cg=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"CHAR\00"}>,align 8
@ch=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@cg,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ci=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ch,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ci,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ck=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"BOOL\00"}>,align 8
@cl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@ck,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cl,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cm,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@co=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@g5,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cp=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@co,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cp,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cr=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"COLUMN1\00"}>,align 8
@cs=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@cr,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ct=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cs,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ct,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cv=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"COLUMN2\00"}>,align 8
@cw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@cv,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cy=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cx,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cz=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"EXISTS\00"}>,align 8
@cA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cz,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cD=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"IS\00"}>,align 8
@cE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@cD,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cH=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"IS_NOT\00"}>,align 8
@cI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@cH,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cL=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"NOT\00"}>,align 8
@cM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@cL,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cP=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"AND\00"}>,align 8
@cQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@cP,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cT=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"OR\00"}>,align 8
@cU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@cT,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@cX=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"EXP_SUBQUERY\00"}>,align 8
@cY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@cX,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@cZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c1=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"FUNCALL\00"}>,align 8
@c2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@c1,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c5=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"OP2\00"}>,align 8
@c6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@c5,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@c7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@c9=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"UNARYOP\00"}>,align 8
@da=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@c9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@db=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@da,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@db,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dd=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"WHERE\00"}>,align 8
@de=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@dd,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@df=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@de,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@df,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dh=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"TABLEID\00"}>,align 8
@di=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@dh,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@di,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dl=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"TABLE\00"}>,align 8
@dm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@dl,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dm,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@do=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dp=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"TABLE_SUBQUERY\00"}>,align 8
@dq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@dp,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ds=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dr,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dt=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"TABLE_AS\00"}>,align 8
@du=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@dt,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dv=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@du,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dv,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dx=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"JOIN\00"}>,align 8
@dy=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dx,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dy,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dB=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"INNERJOIN\00"}>,align 8
@dC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dB,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dC,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dD,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dF=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"CROSSJOIN\00"}>,align 8
@dG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@dF,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dH=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dG,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dH,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dJ=private unnamed_addr constant<{[4x i8],i32,[12x i8]}><{[4x i8]zeroinitializer,i32 -2147483636,[12x i8]c"NATURALJOIN\00"}>,align 8
@dK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[12x i8]}>,<{[4x i8],i32,[12x i8]}>*@dJ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dK,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dN=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"FROM\00"}>,align 8
@dO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dN,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dO,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dR=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"ASC\00"}>,align 8
@dS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@dR,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dT=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dS,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dT,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dV=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"DESC\00"}>,align 8
@dW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@dV,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@dX=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dW,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dX,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@dZ=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"ORDERBY\00"}>,align 8
@d0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@dZ,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d0,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d1,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d3=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"OFFSET\00"}>,align 8
@d4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@d3,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d5=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d4,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d5,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@d7=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"LIMIT\00"}>,align 8
@d8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@d7,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@d9=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d8,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ea=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d9,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eb=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"GROUPBY\00"}>,align 8
@ec=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@eb,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ed=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ec,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ee=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ed,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ef=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"HAVING\00"}>,align 8
@eg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@ef,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eh=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eg,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ei=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eh,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ej=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"ALL\00"}>,align 8
@ek=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@ej,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@el=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ek,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@em=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@el,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@en=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"DISTINCT\00"}>,align 8
@eo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@en,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ep=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eo,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ep,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@er=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"SELECT\00"}>,align 8
@es=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@er,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@et=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@es,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@et,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ev=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"QUERY\00"}>,align 8
@ew=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@ev,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ex=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ew,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ey=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ex,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@ez=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"QUERY_COMMAND\00"}>,align 8
@eA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@ez,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eB=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eA,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eB,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eD=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"DEFAULT\00"}>,align 8
@eE=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@eD,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eE,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eH=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"VALUE\00"}>,align 8
@eI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@eH,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eK=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eJ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eL=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"INSERT\00"}>,align 8
@eM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@eL,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eN=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eM,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eO=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eN,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eP=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"INSERT_VALUES\00"}>,align 8
@eQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@eP,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eR=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eQ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eS=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eR,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eT=private unnamed_addr constant<{[4x i8],i32,[14x i8]}><{[4x i8]zeroinitializer,i32 -2147483634,[14x i8]c"INSERT_SELECT\00"}>,align 8
@eU=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[14x i8]}>,<{[4x i8],i32,[14x i8]}>*@eT,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eV=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eU,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eW=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eV,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@eX=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"UPDATE\00"}>,align 8
@eY=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@eX,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@eZ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eY,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eZ,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e1=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"DELETE\00"}>,align 8
@e2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@e1,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@e3=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e2,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e3,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e5=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"BEGIN\00"}>,align 8
@e6=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@e5,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@e7=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e6,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e7,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@e9=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"COMMIT\00"}>,align 8
@fa=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@e9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fb=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fa,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fc=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fb,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fd=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"ROLLBACK\00"}>,align 8
@fe=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fd,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@ff=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fe,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ff,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fh=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"Ast\00"}>,align 8
@fi=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"SEQ\00"}>,align 8
@fj=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fi,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@fh,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fj,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fl=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fk,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fm=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"EXPty\00"}>,align 8
@fn=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@fm,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fo=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fn,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fp=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"WHRty\00"}>,align 8
@fq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@fp,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fr=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fq,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fs=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"FROMty\00"}>,align 8
@ft=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@fs,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fu=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ft,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fv=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"ORDERBYty\00"}>,align 8
@fw=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@fv,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fx=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fw,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fy=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"OFFSETty\00"}>,align 8
@fz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fy,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fz,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fB=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"LIMITty\00"}>,align 8
@fC=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@fB,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fD=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fC,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fE=private unnamed_addr constant<{[4x i8],i32,[9x i8]}><{[4x i8]zeroinitializer,i32 -2147483639,[9x i8]c"SELECTty\00"}>,align 8
@fF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[9x i8]}>,<{[4x i8],i32,[9x i8]}>*@fE,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fF,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fH=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"QUERYty\00"}>,align 8
@fI=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@fH,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fJ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fI,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fK=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"COMMANDty\00"}>,align 8
@fL=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@fK,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fM=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fL,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fN=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"SMLSharp_SQL_Prim\00"}>,align 8
@fO=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"DBty\00"}>,align 8
@fP=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@fO,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@fQ=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@fN,i32 0,i32 0,i32 0),i32 8),i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fP,i32 0,i32 0,i32 0),i32 8),i32 3}>,align 8
@fR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL6TyWildE_1194 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL6TyWildE_2641 to void(...)*),i32 -2147483647}>,align 8
@fS=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7PatWildE_1196 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7PatWildE_2642 to void(...)*),i32 -2147483647}>,align 8
@fT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL4UnitE_1198 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4UnitE_2643 to void(...)*),i32 -2147483647}>,align 8
@fU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11LabelStringE_1201 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11LabelStringE_2644 to void(...)*),i32 -2147483647}>,align 8
@fV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9UnitTupleE_1204 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9UnitTupleE_2645 to void(...)*),i32 -2147483647}>,align 8
@fW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL4PairE_1208 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4PairE_2646 to void(...)*),i32 -2147483647}>,align 8
@fX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL4ConsE_1216 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4ConsE_2648 to void(...)*),i32 -2147483647}>,align 8
@fY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL3NilE_1218 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3NilE_2649 to void(...)*),i32 -2147483647}>,align 8
@fZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL4NoneE_1220 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4NoneE_2650 to void(...)*),i32 -2147483647}>,align 8
@f0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL4TrueE_1222 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4TrueE_2651 to void(...)*),i32 -2147483647}>,align 8
@f1=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL5FalseE_1224 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL5FalseE_2652 to void(...)*),i32 -2147483647}>,align 8
@f2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11Var__compareE_1250 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11Var__compareE_2659 to void(...)*),i32 -2147483647}>,align 8
@f3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL16Var__closeCommandE_1252 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL16Var__closeCommandE_2660 to void(...)*),i32 -2147483647}>,align 8
@f4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8Con__NULLE_1254 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Con__NULLE_2661 to void(...)*),i32 -2147483647}>,align 8
@f5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8Con__JOINE_1256 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Con__JOINE_2662 to void(...)*),i32 -2147483647}>,align 8
@f6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL13Con__INNERJOINE_1258 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13Con__INNERJOINE_2663 to void(...)*),i32 -2147483647}>,align 8
@f7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7Con__ASCE_1260 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Con__ASCE_2664 to void(...)*),i32 -2147483647}>,align 8
@f8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8Con__DESCE_1262 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Con__DESCE_2665 to void(...)*),i32 -2147483647}>,align 8
@f9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7Con__ALLE_1264 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Con__ALLE_2666 to void(...)*),i32 -2147483647}>,align 8
@ga=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12Con__DISTINCTE_1266 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12Con__DISTINCTE_2667 to void(...)*),i32 -2147483647}>,align 8
@gb=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9singletonE_1271 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9singletonE_2669 to void(...)*),i32 -2147483647}>,align 8
@gc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL5unionE_1273 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL5unionE_2670 to void(...)*),i32 -2147483647}>,align 8
@gd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL5unionE_1275 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL5unionE_2671 to void(...)*),i32 -2147483647}>,align 8
@ge=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:684.6(19094)\00"}>,align 8
@gf=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:794.2(22889)\00"}>,align 8
@gg=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10tableNamesE_1283 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableNamesE_2674 to void(...)*),i32 -2147483647}>,align 8
@gh=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:827.6(24105)\00"}>,align 8
@gi=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*null,i8*null,i32 3}>,align 8
@gj=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:848.6(24794)\00"}>,align 8
@gk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1307 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_2677 to void(...)*),i32 -2147483647}>,align 8
@gl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1309 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_2678 to void(...)*),i32 -2147483647}>,align 8
@gm=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_1315 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_2680 to void(...)*),i32 -2147483647}>,align 8
@gn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1678 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2682 to void(...)*),i32 -2147483647}>,align 8
@go=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1681 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2683 to void(...)*),i32 -2147483647}>,align 8
@gp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1686 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2684 to void(...)*),i32 -2147483647}>,align 8
@gq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL3cmp_1691 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3cmp_2685 to void(...)*),i32 -2147483647}>,align 8
@gr=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1700 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2686 to void(...)*),i32 -2147483647}>,align 8
@gs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1704 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2687 to void(...)*),i32 -2147483647}>,align 8
@gt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1710 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2688 to void(...)*),i32 -2147483647}>,align 8
@gu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1714 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2689 to void(...)*),i32 -2147483647}>,align 8
@gv=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1717 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2690 to void(...)*),i32 -2147483647}>,align 8
@gw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL7compare_1721 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_2691 to void(...)*),i32 -2147483647}>,align 8
@gx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1734 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2692 to void(...)*),i32 -2147483647}>,align 8
@gy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1742 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2693 to void(...)*),i32 -2147483647}>,align 8
@gz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1744 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2694 to void(...)*),i32 -2147483647}>,align 8
@gA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1748 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2695 to void(...)*),i32 -2147483647}>,align 8
@gB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL3cmp_1761 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3cmp_2696 to void(...)*),i32 -2147483647}>,align 8
@gC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1768 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2697 to void(...)*),i32 -2147483647}>,align 8
@gD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1770 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2698 to void(...)*),i32 -2147483647}>,align 8
@gE=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1773 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2699 to void(...)*),i32 -2147483647}>,align 8
@gF=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1778 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2700 to void(...)*),i32 -2147483647}>,align 8
@gG=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1783 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2701 to void(...)*),i32 -2147483647}>,align 8
@gH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1791 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2702 to void(...)*),i32 -2147483647}>,align 8
@gI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1805 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2703 to void(...)*),i32 -2147483647}>,align 8
@gJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1808 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2704 to void(...)*),i32 -2147483647}>,align 8
@gK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1821 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2705 to void(...)*),i32 -2147483647}>,align 8
@gL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1824 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2706 to void(...)*),i32 -2147483647}>,align 8
@gM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1837 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2707 to void(...)*),i32 -2147483647}>,align 8
@gN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1845 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_2708 to void(...)*),i32 -2147483647}>,align 8
@gO=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1006.6(30552)\00"}>,align 8
@gP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1864 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_2709 to void(...)*),i32 -2147483647}>,align 8
@gQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1870 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_2710 to void(...)*),i32 -2147483647}>,align 8
@gR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1874 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_2711 to void(...)*),i32 -2147483647}>,align 8
@gS=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"2\00"}>,align 8
@gT=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:943.6(28099)\00"}>,align 8
@gU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_1888 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2733 to void(...)*),i32 -2147483647}>,align 8
@gV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_1889 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2734 to void(...)*),i32 -2147483647}>,align 8
@gW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_1890 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_2735 to void(...)*),i32 -2147483647}>,align 8
@gX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12havingToTermE_1891 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12havingToTermE_2736 to void(...)*),i32 -2147483647}>,align 8
@gY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL13groupByToTermE_1892 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13groupByToTermE_2737 to void(...)*),i32 -2147483647}>,align 8
@gZ=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"1\00"}>,align 8
@g0=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f1,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g1=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f0,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g2=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f4,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2117 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2714 to void(...)*),i32 -2147483647}>,align 8
@g4=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g3,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g5=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"NULL\00"}>,align 8
@g6=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@g5,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@g7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2123 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2715 to void(...)*),i32 -2147483647}>,align 8
@g8=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g7,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@g9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2129 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2716 to void(...)*),i32 -2147483647}>,align 8
@ha=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@g9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hb=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"TRUE\00"}>,align 8
@hc=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@hb,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2135 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2717 to void(...)*),i32 -2147483647}>,align 8
@he=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hd,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2141 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2718 to void(...)*),i32 -2147483647}>,align 8
@hg=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hf,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hh=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"FALSE\00"}>,align 8
@hi=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@hh,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hj=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2147 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2719 to void(...)*),i32 -2147483647}>,align 8
@hk=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hj,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2153 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2720 to void(...)*),i32 -2147483647}>,align 8
@hm=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hl,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hn=private unnamed_addr constant<{[4x i8],i32,[8x i8]}><{[4x i8]zeroinitializer,i32 -2147483640,[8x i8]c"UNKNOWN\00"}>,align 8
@ho=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[8x i8]}>,<{[4x i8],i32,[8x i8]}>*@hn,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2159 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2721 to void(...)*),i32 -2147483647}>,align 8
@hq=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hp,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hr=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1277.43(41996)\00"}>,align 8
@hs=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLLLN12ElaborateSQL11queryToTermE_2169 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2722 to void(...)*),i32 -2147483647}>,align 8
@ht=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1281.53(42228)\00"}>,align 8
@hu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8)*@_SMLLLN12ElaborateSQL11queryToTermE_2175 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2723 to void(...)*),i32 -2147483647}>,align 8
@hv=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"-\00"}>,align 8
@hw=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@hv,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@hx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2181 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2724 to void(...)*),i32 -2147483647}>,align 8
@hy=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1290.43(42722)\00"}>,align 8
@hz=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f7,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hA=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f8,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4keys_2193 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4keys_2725 to void(...)*),i32 -2147483647}>,align 8
@hC=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"fetch\00"}>,align 8
@hD=private unnamed_addr constant<{[4x i8],i32,[6x i8]}><{[4x i8]zeroinitializer,i32 -2147483642,[6x i8]c"limit\00"}>,align 8
@hE=private unnamed_addr constant<{[4x i8],i32,[7x i8]}><{[4x i8]zeroinitializer,i32 -2147483641,[7x i8]c"offset\00"}>,align 8
@hF=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f9,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hG=private unnamed_addr constant<{[4x i8],i32,i8*,i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ga,i32 0,i32 0,i32 0),i32 8),i8*null,i32 3}>,align 8
@hH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2221 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2726 to void(...)*),i32 -2147483647}>,align 8
@hI=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2226 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2727 to void(...)*),i32 -2147483647}>,align 8
@hJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2232 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2728 to void(...)*),i32 -2147483647}>,align 8
@hK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2239 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2729 to void(...)*),i32 -2147483647}>,align 8
@hL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL11fieldToTerm_2242 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11fieldToTerm_2730 to void(...)*),i32 -2147483647}>,align 8
@hM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2253 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2731 to void(...)*),i32 -2147483647}>,align 8
@hN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2258 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2732 to void(...)*),i32 -2147483647}>,align 8
@hO=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1225.6(39766)\00"}>,align 8
@hP=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1192.6(38404)\00"}>,align 8
@hQ=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1390.19(46442)\00"}>,align 8
@hR=private unnamed_addr constant<{[4x i8],i32,[11x i8]}><{[4x i8]zeroinitializer,i32 -2147483637,[11x i8]c"readResult\00"}>,align 8
@hS=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"3\00"}>,align 8
@hT=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1400.8(46663)\00"}>,align 8
@hU=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2376 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2741 to void(...)*),i32 -2147483647}>,align 8
@hV=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8elabListE_2381 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabListE_2743 to void(...)*),i32 -2147483647}>,align 8
@hW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8elabListE_2383 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabListE_2744 to void(...)*),i32 -2147483647}>,align 8
@hX=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1495.2(50355)\00"}>,align 8
@hY=private unnamed_addr constant<{[4x i8],i32,[72x i8]}><{[4x i8]zeroinitializer,i32 -2147483576,[72x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:638.6(17718)\00"}>,align 8
@hZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2406 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2746 to void(...)*),i32 -2147483647}>,align 8
@h0=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2408 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2747 to void(...)*),i32 -2147483647}>,align 8
@h1=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1788.49(60135)\00"}>,align 8
@h2=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,[4x i8]zeroinitializer,i32 0}>,align 8
@h3=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 2,[4x i8]zeroinitializer,i32 0}>,align 8
@h4=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1745.6(58863)\00"}>,align 8
@h5=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1800.49(60687)\00"}>,align 8
@h6=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2417 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2749 to void(...)*),i32 -2147483647}>,align 8
@h7=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2419 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2750 to void(...)*),i32 -2147483647}>,align 8
@h8=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1764.6(59410)\00"}>,align 8
@h9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2423 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2751 to void(...)*),i32 -2147483647}>,align 8
@ia=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1818.18(61237)\00"}>,align 8
@ib=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2426 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2752 to void(...)*),i32 -2147483647}>,align 8
@ic=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2432 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2753 to void(...)*),i32 -2147483647}>,align 8
@id=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2434 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2754 to void(...)*),i32 -2147483647}>,align 8
@ie=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL1l_2442 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1l_2755 to void(...)*),i32 -2147483647}>,align 8
@if=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2446 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2757 to void(...)*),i32 -2147483647}>,align 8
@ig=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2448 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2758 to void(...)*),i32 -2147483647}>,align 8
@ih=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 1,i32 0}>,align 8
@ii=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 0,i32 0}>,align 8
@ij=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1651.10(55701)\00"}>,align 8
@ik=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2456 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2760 to void(...)*),i32 -2147483647}>,align 8
@il=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2458 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2761 to void(...)*),i32 -2147483647}>,align 8
@im=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2460 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2762 to void(...)*),i32 -2147483647}>,align 8
@in=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2462 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2763 to void(...)*),i32 -2147483647}>,align 8
@io=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1676.22(56577)\00"}>,align 8
@ip=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1679.22(56724)\00"}>,align 8
@iq=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1682.22(56882)\00"}>,align 8
@ir=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1673.38(56432)\00"}>,align 8
@is=private unnamed_addr constant<{[4x i8],i32,[23x i8]}><{[4x i8]zeroinitializer,i32 -2147483625,[23x i8]c"elabExp: getLongsymbol\00"}>,align 8
@it=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1674.10(56475)\00"}>,align 8
@iu=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(void(i8*)*@_SMLLL5error_2472 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5error_2764 to void(...)*),i32 -2147483647}>,align 8
@iv=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1697.23(57455)\00"}>,align 8
@iw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i32(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2477 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2765 to void(...)*),i32 -2147483647}>,align 8
@ix=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4exps_2480 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2766 to void(...)*),i32 -2147483647}>,align 8
@iy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4exps_2482 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2767 to void(...)*),i32 -2147483647}>,align 8
@iz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2485 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2768 to void(...)*),i32 -2147483647}>,align 8
@iA=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2487 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2769 to void(...)*),i32 -2147483647}>,align 8
@iB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2489 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2770 to void(...)*),i32 -2147483647}>,align 8
@iC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2491 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2771 to void(...)*),i32 -2147483647}>,align 8
@iD=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2493 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2772 to void(...)*),i32 -2147483647}>,align 8
@iE=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1701.52(57652)\00"}>,align 8
@iF=private unnamed_addr constant<{[4x i8],i32,[15x i8]}><{[4x i8]zeroinitializer,i32 -2147483633,[15x i8]c"elabExp: TUPLE\00"}>,align 8
@iG=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1700.29(57582)\00"}>,align 8
@iH=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2498 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2773 to void(...)*),i32 -2147483647}>,align 8
@iI=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1615.6(54214)\00"}>,align 8
@iJ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2501 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2774 to void(...)*),i32 -2147483647}>,align 8
@iK=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2503 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2775 to void(...)*),i32 -2147483647}>,align 8
@iL=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2505 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2776 to void(...)*),i32 -2147483647}>,align 8
@iM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2508 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2777 to void(...)*),i32 -2147483647}>,align 8
@iN=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2510 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2778 to void(...)*),i32 -2147483647}>,align 8
@iO=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2512 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2779 to void(...)*),i32 -2147483647}>,align 8
@iP=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2514 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2780 to void(...)*),i32 -2147483647}>,align 8
@iQ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2516 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2781 to void(...)*),i32 -2147483647}>,align 8
@iR=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2519 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2782 to void(...)*),i32 -2147483647}>,align 8
@iS=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1894.18(63934)\00"}>,align 8
@iT=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2522 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2783 to void(...)*),i32 -2147483647}>,align 8
@iU=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1610.30(54099)\00"}>,align 8
@iV=private unnamed_addr constant<{[4x i8],i32,[18x i8]}><{[4x i8]zeroinitializer,i32 -2147483630,[18x i8]c"elabInfixExp: OP2\00"}>,align 8
@iW=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2526 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2784 to void(...)*),i32 -2147483647}>,align 8
@iX=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2528 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2785 to void(...)*),i32 -2147483647}>,align 8
@iY=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2530 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2786 to void(...)*),i32 -2147483647}>,align 8
@iZ=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2532 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2787 to void(...)*),i32 -2147483647}>,align 8
@i0=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1589.6(53369)\00"}>,align 8
@i1=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1545.27(51871)\00"}>,align 8
@i2=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4left_2537 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4left_2788 to void(...)*),i32 -2147483647}>,align 8
@i3=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4left_2539 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4left_2789 to void(...)*),i32 -2147483647}>,align 8
@i4=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4left_2541 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4left_2790 to void(...)*),i32 -2147483647}>,align 8
@i5=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLL4left_2543 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4left_2791 to void(...)*),i32 -2147483647}>,align 8
@i6=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1509.2(50742)\00"}>,align 8
@i7=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1576.8(52898)\00"}>,align 8
@i8=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2547 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2792 to void(...)*),i32 -2147483647}>,align 8
@i9=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2549 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2793 to void(...)*),i32 -2147483647}>,align 8
@ja=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1586.32(53313)\00"}>,align 8
@jb=private unnamed_addr constant<{[4x i8],i32,[10x i8]}><{[4x i8]zeroinitializer,i32 -2147483638,[10x i8]c"elabSpine\00"}>,align 8
@jc=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2553 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2794 to void(...)*),i32 -2147483647}>,align 8
@jd=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2555 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2795 to void(...)*),i32 -2147483647}>,align 8
@je=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2557 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2796 to void(...)*),i32 -2147483647}>,align 8
@jf=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2559 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2797 to void(...)*),i32 -2147483647}>,align 8
@jg=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2085.30(70944)\00"}>,align 8
@jh=private unnamed_addr constant<{[4x i8],i32,[13x i8]}><{[4x i8]zeroinitializer,i32 -2147483635,[13x i8]c"elabSeq: nil\00"}>,align 8
@ji=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2564 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2798 to void(...)*),i32 -2147483647}>,align 8
@jj=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2015.20(68379)\00"}>,align 8
@jk=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2567 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2799 to void(...)*),i32 -2147483647}>,align 8
@jl=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2569 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2800 to void(...)*),i32 -2147483647}>,align 8
@jm=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1991.46(67431)\00"}>,align 8
@jn=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2574 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2801 to void(...)*),i32 -2147483647}>,align 8
@jo=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2576 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2802 to void(...)*),i32 -2147483647}>,align 8
@jp=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2578 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2803 to void(...)*),i32 -2147483647}>,align 8
@jq=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2580 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2804 to void(...)*),i32 -2147483647}>,align 8
@jr=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2017.10(68426)\00"}>,align 8
@js=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2583 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2805 to void(...)*),i32 -2147483647}>,align 8
@jt=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2585 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2806 to void(...)*),i32 -2147483647}>,align 8
@ju=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2587 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2807 to void(...)*),i32 -2147483647}>,align 8
@jv=private unnamed_addr constant<{[4x i8],i32,[74x i8]}><{[4x i8]zeroinitializer,i32 -2147483574,[74x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2058.20(69876)\00"}>,align 8
@jw=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2590 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2808 to void(...)*),i32 -2147483647}>,align 8
@jx=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2592 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2809 to void(...)*),i32 -2147483647}>,align 8
@jy=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2596 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2810 to void(...)*),i32 -2147483647}>,align 8
@jz=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2598 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2811 to void(...)*),i32 -2147483647}>,align 8
@jA=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:1526.2(51233)\00"}>,align 8
@jB=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2601 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2812 to void(...)*),i32 -2147483647}>,align 8
@jC=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2603 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2813 to void(...)*),i32 -2147483647}>,align 8
@jD=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2000.6(67695)\00"}>,align 8
@jE=private unnamed_addr constant<{[4x i8],i32,[5x i8]}><{[4x i8]zeroinitializer,i32 -2147483643,[5x i8]c"like\00"}>,align 8
@jF=private unnamed_addr constant<{[4x i8],i32,[3x i8]}><{[4x i8]zeroinitializer,i32 -2147483645,[3x i8]c"||\00"}>,align 8
@jG=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 5,i32 0}>,align 8
@jH=private unnamed_addr constant<{[4x i8],i32,[2x i8]}><{[4x i8]zeroinitializer,i32 -2147483646,[2x i8]c"%\00"}>,align 8
@jI=private unnamed_addr constant<{[4x i8],i32,i32,i32,i32}><{[4x i8]zeroinitializer,i32 -805306360,i32 0,i32 7,i32 0}>,align 8
@jJ=private unnamed_addr constant<{[4x i8],i32,[4x i8]}><{[4x i8]zeroinitializer,i32 -2147483644,[4x i8]c"mod\00"}>,align 8
@jK=private unnamed_addr constant<{[4x i8],i32,[1x i8]}><{[4x i8]zeroinitializer,i32 -2147483647,[1x i8]zeroinitializer}>,align 8
@jL=private unnamed_addr constant<{[4x i8],i32,i32,[4x i8],i8*,i32}><{[4x i8]zeroinitializer,i32 -805306352,i32 3,[4x i8]zeroinitializer,i8*getelementptr inbounds(i8,i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i32 0,i32 0,i32 0),i32 8),i32 2}>,align 8
@jM=private unnamed_addr constant<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}><{[4x i8]zeroinitializer,i32 -805306344,i8*null,void(...)*bitcast(i8*(i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2616 to void(...)*),void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2814 to void(...)*),i32 -2147483647}>,align 8
@jN=private unnamed_addr constant<{[4x i8],i32,[73x i8]}><{[4x i8]zeroinitializer,i32 -2147483575,[73x i8]c"src/compiler/compilePhases/elaborate/main/ElaborateSQL.sml:2125.6(72291)\00"}>,align 8
@_SML_gvar836bb75000f35849_ElaborateSQL=private global<{[4x i8],i32,[1x i8*]}><{[4x i8]zeroinitializer,i32 -1342177272,[1x i8*]zeroinitializer}>,align 8
@jO=private unnamed_addr global[2x i64][i64 1,i64 sub(i64 ptrtoint(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar836bb75000f35849_ElaborateSQL,i32 0,i32 2,i32 0)to i64),i64 ptrtoint([2x i64]*@jO to i64))]
@_SML_ftab836bb75000f35849_ElaborateSQL=external global i8
@jP=private unnamed_addr global i8 0
@_SMLZN12ElaborateSQL12elaborateExpE=alias i8*,getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar836bb75000f35849_ElaborateSQL,i32 0,i32 2,i32 0)
declare void@llvm.gcroot(i8**,i8*)#0
declare i8*@sml_alloc(i32 inreg)local_unnamed_addr#0
declare void@sml_check(i32 inreg)local_unnamed_addr
declare void@sml_end()local_unnamed_addr#0
declare void@sml_gcroot(i8*,void()*,i8*,i8*)local_unnamed_addr#0
declare void@sml_matchcomp_bug()local_unnamed_addr
declare i32@sml_personality(...)#0
declare void@sml_raise(i8*inreg)local_unnamed_addr#1
declare void@sml_save_exn(i8*inreg)local_unnamed_addr#0
declare void@sml_start(i8*inreg)local_unnamed_addr#0
declare void@sml_write(i8*inreg,i8**inreg,i8*inreg)local_unnamed_addr#0
declare i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map6foldriE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set10differenceE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set5foldrE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set8fromListE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel8toStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN3Loc9mergeLocsE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i32@_SMLFN4Bool3notE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8@_SMLFN4Char7toUpperE(i8 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List10mapPartialE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List1_VE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3allE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldlE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List5foldrE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6concatE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN4List6lengthE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Fixity5parseE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6IntInf7fromIntE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Option6getOptE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String3strE(i8 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6String9translateE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol8generateE(i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair3mapE(i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN8ListPair5unzipE(i32 inreg,i32 inreg,i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SymbolEnv4findE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare i8*@_SMLFN9SymbolEnv6insertE(i32 inreg,i32 inreg)local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main5d4c3ea7bd6f9540_IntInf()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindaa180c1799f3810_Bool()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maince7036f3433e1102_Char()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main03d87556ec7f64b2_List()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main7aa263535439ee1c_ListPair()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main3a60343781315c1e_Option()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main1ef93e13728790b1_String()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main67a5b28ff146c353_Loc()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main89b8631430c545af_Symbol()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maina142c315f12317c0_RecordLabel()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maineaa0aca8fbe4101a_Bug()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_mainc86a8a57f9dc856e_UserErrorUtils()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maind0c024bd2a6395e7_ElaborateError_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_maindb294f1d9e8d1d62_ElaborateErrorSQL_ppg()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_main66e345b3e3a504aa_Fixity()local_unnamed_addr#2 gc"smlsharp"
declare void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*)local_unnamed_addr
declare void@_SML_loaddaa180c1799f3810_Bool(i8*)local_unnamed_addr
declare void@_SML_loadce7036f3433e1102_Char(i8*)local_unnamed_addr
declare void@_SML_load03d87556ec7f64b2_List(i8*)local_unnamed_addr
declare void@_SML_load7aa263535439ee1c_ListPair(i8*)local_unnamed_addr
declare void@_SML_load3a60343781315c1e_Option(i8*)local_unnamed_addr
declare void@_SML_load1ef93e13728790b1_String(i8*)local_unnamed_addr
declare void@_SML_load67a5b28ff146c353_Loc(i8*)local_unnamed_addr
declare void@_SML_load89b8631430c545af_Symbol(i8*)local_unnamed_addr
declare void@_SML_loada142c315f12317c0_RecordLabel(i8*)local_unnamed_addr
declare void@_SML_loadeaa0aca8fbe4101a_Bug(i8*)local_unnamed_addr
declare void@_SML_loadc86a8a57f9dc856e_UserErrorUtils(i8*)local_unnamed_addr
declare void@_SML_loadd0c024bd2a6395e7_ElaborateError_ppg(i8*)local_unnamed_addr
declare void@_SML_loaddb294f1d9e8d1d62_ElaborateErrorSQL_ppg(i8*)local_unnamed_addr
declare void@_SML_load66e345b3e3a504aa_Fixity(i8*)local_unnamed_addr
define private void@_SML_tabb836bb75000f35849_ElaborateSQL()#3{
unreachable
}
define void@_SML_load836bb75000f35849_ElaborateSQL(i8*%a)local_unnamed_addr#0{
%b=load i8,i8*@jP,align 1
%c=icmp eq i8%b,0
br i1%c,label%e,label%d
d:
ret void
e:
store i8 1,i8*@jP,align 1
tail call void@_SML_load5d4c3ea7bd6f9540_IntInf(i8*%a)#0
tail call void@_SML_loaddaa180c1799f3810_Bool(i8*%a)#0
tail call void@_SML_loadce7036f3433e1102_Char(i8*%a)#0
tail call void@_SML_load03d87556ec7f64b2_List(i8*%a)#0
tail call void@_SML_load7aa263535439ee1c_ListPair(i8*%a)#0
tail call void@_SML_load3a60343781315c1e_Option(i8*%a)#0
tail call void@_SML_load1ef93e13728790b1_String(i8*%a)#0
tail call void@_SML_load67a5b28ff146c353_Loc(i8*%a)#0
tail call void@_SML_load89b8631430c545af_Symbol(i8*%a)#0
tail call void@_SML_loada142c315f12317c0_RecordLabel(i8*%a)#0
tail call void@_SML_loadeaa0aca8fbe4101a_Bug(i8*%a)#0
tail call void@_SML_loadc86a8a57f9dc856e_UserErrorUtils(i8*%a)#0
tail call void@_SML_loadd0c024bd2a6395e7_ElaborateError_ppg(i8*%a)#0
tail call void@_SML_loaddb294f1d9e8d1d62_ElaborateErrorSQL_ppg(i8*%a)#0
tail call void@_SML_load66e345b3e3a504aa_Fixity(i8*%a)#0
tail call void@sml_gcroot(i8*%a,void()*@_SML_tabb836bb75000f35849_ElaborateSQL,i8*@_SML_ftab836bb75000f35849_ElaborateSQL,i8*bitcast([2x i64]*@jO to i8*))#0
ret void
}
define void@_SML_main836bb75000f35849_ElaborateSQL()local_unnamed_addr#2 gc"smlsharp"personality i32(...)*@sml_personality{
%a=alloca[3x i8*],align 8
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=load i8,i8*@jP,align 1
%h=and i8%g,2
%i=icmp eq i8%h,0
br i1%i,label%k,label%j
j:
ret void
k:
store i8 3,i8*@jP,align 1
tail call void@_SML_main5d4c3ea7bd6f9540_IntInf()#2
tail call void@_SML_maindaa180c1799f3810_Bool()#2
tail call void@_SML_maince7036f3433e1102_Char()#2
tail call void@_SML_main03d87556ec7f64b2_List()#2
tail call void@_SML_main7aa263535439ee1c_ListPair()#2
tail call void@_SML_main3a60343781315c1e_Option()#2
tail call void@_SML_main1ef93e13728790b1_String()#2
tail call void@_SML_main67a5b28ff146c353_Loc()#2
tail call void@_SML_main89b8631430c545af_Symbol()#2
tail call void@_SML_maina142c315f12317c0_RecordLabel()#2
tail call void@_SML_maineaa0aca8fbe4101a_Bug()#2
tail call void@_SML_mainc86a8a57f9dc856e_UserErrorUtils()#2
tail call void@_SML_maind0c024bd2a6395e7_ElaborateError_ppg()#2
tail call void@_SML_maindb294f1d9e8d1d62_ElaborateErrorSQL_ppg()#2
tail call void@_SML_main66e345b3e3a504aa_Fixity()#2
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%l=bitcast[3x i8*]*%a to i8*
call void@sml_start(i8*inreg%l)#0
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%p,label%o
o:
invoke void@sml_check(i32 inreg%m)
to label%p unwind label%dq
p:
%q=invoke fastcc i8*@_SMLFN11RecordLabel3Map5emptyE(i32 inreg 1,i32 inreg 8)
to label%r unwind label%dq
r:
store i8*%q,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=bitcast i8*%s to i8**
store i8*null,i8**%v,align 8
%w=load i8*,i8**%b,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 12)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177288,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%d,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL8elabListE_2385 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL8elabListE_2385 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%b,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL5toSQLE_2387 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL5toSQLE_2387 to void(...)*),void(...)**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 24
%an=bitcast i8*%am to i32*
store i32 -2147483647,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 36)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177312,i32*%aq,align 4
store i8*%ao,i8**%f,align 8
%ar=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 16
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%ao,i64 24
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ao,i64 32
%aD=bitcast i8*%aC to i32*
store i32 15,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2390 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2390 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 24
%aO=bitcast i8*%aN to i32*
store i32 -2147483647,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
%aS=load i8*,i8**%f,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2391 to void(...)*),void(...)**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabTableE_2391 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 -2147483647,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
%a3=load i8*,i8**%f,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2392 to void(...)*),void(...)**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 16
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2392 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 -2147483647,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
%be=load i8*,i8**%f,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2393 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2393 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 24
%bl=bitcast i8*%bk to i32*
store i32 -2147483647,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 28)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177304,i32*%bo,align 4
%bp=load i8*,i8**%f,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bm,i64 8
%bs=bitcast i8*%br to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2394 to void(...)*),void(...)**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 16
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabExpE_2394 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 24
%bw=bitcast i8*%bv to i32*
store i32 -2147483647,i32*%bw,align 4
%bx=call i8*@sml_alloc(i32 inreg 28)#0
%by=getelementptr inbounds i8,i8*%bx,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177304,i32*%bz,align 4
%bA=load i8*,i8**%f,align 8
%bB=bitcast i8*%bx to i8**
store i8*%bA,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bx,i64 8
%bD=bitcast i8*%bC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395 to void(...)*),void(...)**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bx,i64 16
%bF=bitcast i8*%bE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395 to void(...)*),void(...)**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bx,i64 24
%bH=bitcast i8*%bG to i32*
store i32 -2147483647,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 28)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177304,i32*%bK,align 4
%bL=load i8*,i8**%f,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bI,i64 8
%bO=bitcast i8*%bN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2396 to void(...)*),void(...)**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bI,i64 16
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2396 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bI,i64 24
%bS=bitcast i8*%bR to i32*
store i32 -2147483647,i32*%bS,align 4
%bT=call i8*@sml_alloc(i32 inreg 28)#0
%bU=getelementptr inbounds i8,i8*%bT,i64 -4
%bV=bitcast i8*%bU to i32*
store i32 1342177304,i32*%bV,align 4
%bW=load i8*,i8**%f,align 8
%bX=bitcast i8*%bT to i8**
store i8*%bW,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bT,i64 8
%bZ=bitcast i8*%bY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2397 to void(...)*),void(...)**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bT,i64 16
%b1=bitcast i8*%b0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL10elabOffsetE_2397 to void(...)*),void(...)**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bT,i64 24
%b3=bitcast i8*%b2 to i32*
store i32 -2147483647,i32*%b3,align 4
%b4=call i8*@sml_alloc(i32 inreg 28)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177304,i32*%b6,align 4
%b7=load i8*,i8**%f,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2398 to void(...)*),void(...)**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabLimitE_2398 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b4,i64 24
%ce=bitcast i8*%cd to i32*
store i32 -2147483647,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 28)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177304,i32*%ch,align 4
%ci=load i8*,i8**%f,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cf,i64 8
%cl=bitcast i8*%ck to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2399 to void(...)*),void(...)**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cf,i64 16
%cn=bitcast i8*%cm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2399 to void(...)*),void(...)**%cn,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 24
%cp=bitcast i8*%co to i32*
store i32 -2147483647,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 28)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177304,i32*%cs,align 4
%ct=load i8*,i8**%f,align 8
%cu=bitcast i8*%cq to i8**
store i8*%ct,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cq,i64 8
%cw=bitcast i8*%cv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400 to void(...)*),void(...)**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cq,i64 16
%cy=bitcast i8*%cx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400 to void(...)*),void(...)**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cq,i64 24
%cA=bitcast i8*%cz to i32*
store i32 -2147483647,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 28)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177304,i32*%cD,align 4
%cE=load i8*,i8**%f,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cB,i64 8
%cH=bitcast i8*%cG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2401 to void(...)*),void(...)**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cB,i64 16
%cJ=bitcast i8*%cI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL9elabSpineE_2401 to void(...)*),void(...)**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 24
%cL=bitcast i8*%cK to i32*
store i32 -2147483647,i32*%cL,align 4
%cM=call i8*@sml_alloc(i32 inreg 28)#0
%cN=getelementptr inbounds i8,i8*%cM,i64 -4
%cO=bitcast i8*%cN to i32*
store i32 1342177304,i32*%cO,align 4
%cP=load i8*,i8**%f,align 8
%cQ=bitcast i8*%cM to i8**
store i8*%cP,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cM,i64 8
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2402 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cM,i64 16
%cU=bitcast i8*%cT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSeqE_2402 to void(...)*),void(...)**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cM,i64 24
%cW=bitcast i8*%cV to i32*
store i32 -2147483647,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 28)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177304,i32*%cZ,align 4
%c0=load i8*,i8**%f,align 8
%c1=bitcast i8*%cX to i8**
store i8*%c0,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cX,i64 8
%c3=bitcast i8*%c2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2403 to void(...)*),void(...)**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cX,i64 16
%c5=bitcast i8*%c4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2403 to void(...)*),void(...)**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cX,i64 24
%c7=bitcast i8*%c6 to i32*
store i32 -2147483647,i32*%c7,align 4
%c8=call i8*@sml_alloc(i32 inreg 12)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177288,i32*%da,align 4
store i8*%c8,i8**%b,align 8
%db=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i32*
store i32 1,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 28)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177304,i32*%dh,align 4
%di=load i8*,i8**%b,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2639 to void(...)*),void(...)**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2639 to void(...)*),void(...)**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 24
%dp=bitcast i8*%do to i32*
store i32 -2147483647,i32*%dp,align 4
call void@sml_write(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar836bb75000f35849_ElaborateSQL,i64 0,i32 2,i64 0)to i8*),i8**inreg getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar836bb75000f35849_ElaborateSQL,i64 0,i32 2,i64 0),i8*inreg%df)#0
call void@sml_end()#0
ret void
dq:
%dr=landingpad{i8*,i8*}
cleanup
%ds=extractvalue{i8*,i8*}%dr,1
call void@sml_save_exn(i8*inreg%ds)#0
call void@sml_end()#0
resume{i8*,i8*}%dr
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL6TyWildE_1194(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 7,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7PatWildE_1196(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=call i8*@sml_alloc(i32 inreg 20)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
%g=getelementptr inbounds i8,i8*%c,i64 4
%h=bitcast i8*%g to i32*
store i32 0,i32*%h,align 1
store i32 6,i32*%d,align 4
%i=load i8*,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%c,i64 8
%k=bitcast i8*%j to i8**
store i8*%i,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%c,i64 16
%m=bitcast i8*%l to i32*
store i32 2,i32*%m,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4UnitE_1198(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*null,i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11LabelStringE_1200(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11LabelStringE_1201(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%i)
store i8*%k,i8**%b,align 8
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177288,i32*%n,align 4
store i8*%l,i8**%c,align 8
%o=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to i32*
store i32 1,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11LabelStringE_1200 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11LabelStringE_1200 to void(...)*),void(...)**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 -2147483647,i32*%C,align 4
ret i8*%s
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9UnitTupleE_1203(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9UnitTupleE_1204(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%k=getelementptr inbounds i8,i8*%j,i64 16
%l=bitcast i8*%k to i8*(i8*,i8*)**
%m=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l,align 8
%n=bitcast i8*%j to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*%m(i8*inreg%o,i8*inreg null)
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9UnitTupleE_1203 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9UnitTupleE_1203 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=call fastcc i8*%t(i8*inreg%O,i8*inreg%D)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=call fastcc i8*%S(i8*inreg%U,i8*inreg%V)
store i8*%W,i8**%c,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%d,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=bitcast i8*%ah to i32*
%aj=getelementptr inbounds i8,i8*%ah,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%ah,i64 4
%am=bitcast i8*%al to i32*
store i32 0,i32*%am,align 1
store i32 15,i32*%ai,align 4
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i32*
store i32 2,i32*%ar,align 4
ret i8*%ah
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4PairE_1206(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4PairE_1207(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4PairE_1206 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4PairE_1206 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4PairE_1208(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4PairE_1207 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4PairE_1207 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1210(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1211(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%c,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 25,i32*%E,align 4
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%e,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1210 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1210 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 24
%ah=bitcast i8*%ag to i32*
store i32 -2147483647,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=call fastcc i8*%N(i8*inreg%ai,i8*inreg%X)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%am(i8*inreg%ao,i8*inreg%as)
store i8*%at,i8**%d,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%e,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%c,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 4
%aI=bitcast i8*%aH to i32*
store i32 0,i32*%aI,align 1
%aJ=bitcast i8*%aE to i32*
store i32 15,i32*%aJ,align 4
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i32*
store i32 2,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%e,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 28)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177304,i32*%a0,align 4
store i8*%aY,i8**%d,align 8
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a4=getelementptr inbounds i8,i8*%aY,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=getelementptr inbounds i8,i8*%aY,i64 16
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%aY,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 7,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
%be=bitcast i8*%bb to i64*
store i64 0,i64*%be,align 4
%bf=load i8*,i8**%d,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to i8**
store i8*%bf,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to i32*
store i32 2,i32*%bj,align 4
ret i8*%bb
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1212(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%e,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%y,i64 4
%C=bitcast i8*%B to i32*
store i32 0,i32*%C,align 1
%D=bitcast i8*%y to i32*
store i32 25,i32*%D,align 4
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%y,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 16
%I=bitcast i8*%H to i32*
store i32 2,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
store i8*%T,i8**%d,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%e,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 28)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177304,i32*%af,align 4
store i8*%ad,i8**%d,align 8
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ad,i64 24
%ap=bitcast i8*%ao to i32*
store i32 7,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=bitcast i8*%aq to i64*
store i64 0,i64*%at,align 4
%au=load i8*,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 2,i32*%ay,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1213(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=bitcast i8*%w to i32*
%y=getelementptr inbounds i8,i8*%w,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%w,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
store i32 25,i32*%x,align 4
%C=load i8*,i8**%c,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
%m=icmp eq i8*%k,null
br i1%m,label%n,label%G
n:
store i8*null,i8**%d,align 8
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
store i8*%o,i8**%d,align 8
%r=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i32*
store i32 1,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 28)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177304,i32*%x,align 4
%y=load i8*,i8**%d,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1213 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1213 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 24
%F=bitcast i8*%E to i32*
store i32 -2147483647,i32*%F,align 4
ret i8*%v
G:
%H=bitcast i8*%k to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%k,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=icmp eq i8*%L,null
br i1%M,label%N,label%aj
N:
store i8*null,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%d,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%O,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1212 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1212 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
aj:
store i8*null,i8**%e,align 8
%ak=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=call fastcc i8*%an(i8*inreg%ap,i8*inreg%aq)
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%e,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%e,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1211 to void(...)*),void(...)**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL3ConE_1211 to void(...)*),void(...)**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 24
%aM=bitcast i8*%aL to i32*
store i32 -2147483647,i32*%aM,align 4
ret i8*%aC
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4ConsE_1216(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e,i64 0,i32 2)to i8*),i8*inreg%z)
ret i8*%J
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3NilE_1218(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4NoneE_1220(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@o,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4TrueE_1222(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@s,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5FalseE_1224(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@x,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1226(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1227(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ax,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%c,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%g,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%e,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%f,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 2,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%h,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%c,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%e,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%f,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ax,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%h,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*null,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%e,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
%a8=bitcast i8*%a3 to i32*
store i32 10,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%h,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%c,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=bitcast i8*%bA to i64*
store i64 0,i64*%bD,align 4
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
%bJ=bitcast i8**%d to i8***
%bK=load i8**,i8***%bJ,align 8
%bL=load i8*,i8**%bK,align 8
%bM=getelementptr inbounds i8,i8*%bL,i64 16
%bN=bitcast i8*%bM to i8*(i8*,i8*)**
%bO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bN,align 8
store i8*null,i8**%d,align 8
%bP=bitcast i8**%bK to i8***
%bQ=load i8**,i8***%bP,align 8
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%c,align 8
%bT=call fastcc i8*%bO(i8*inreg%bR,i8*inreg%bS)
store i8*%bT,i8**%d,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%e,align 8
%bX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*null,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 28)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177304,i32*%b5,align 4
store i8*%b3,i8**%d,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b3,i64 24
%cf=bitcast i8*%ce to i32*
store i32 7,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
%cj=bitcast i8*%cg to i64*
store i64 0,i64*%cj,align 4
%ck=load i8*,i8**%d,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 2,i32*%co,align 4
ret i8*%cg
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%k,i8**%e,align 8
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Fun__mapE_1226 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Fun__mapE_1226 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%L,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%f,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Fun__mapE_1227 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7Fun__mapE_1227 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLL1e_1230(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Fun__filterE_1231(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
%n=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aB,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=load i8*,i8**%c,align 8
%u=call fastcc i8*%q(i8*inreg%s,i8*inreg%t)
store i8*%u,i8**%e,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 2,i32*%Y,align 4
%Z=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%g,align 8
%ah=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
store i8*null,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ao,i64 0,i32 2)to i8*))
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=load i8*,i8**%c,align 8
%au=call fastcc i8*%aq(i8*inreg%as,i8*inreg%at)
store i8*%au,i8**%e,align 8
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177296,i32*%ax,align 4
store i8*%av,i8**%h,align 8
%ay=getelementptr inbounds i8,i8*%av,i64 4
%az=bitcast i8*%ay to i32*
store i32 0,i32*%az,align 1
%aA=bitcast i8*%av to i32*
store i32 25,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 16
%aF=bitcast i8*%aE to i32*
store i32 2,i32*%aF,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=load i8*,i8**%c,align 8
%aQ=call fastcc i8*%aM(i8*inreg%aO,i8*inreg%aP)
store i8*%aQ,i8**%e,align 8
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
store i8*%aR,i8**%i,align 8
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to i8**
store i8*null,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
store i8*%a0,i8**%e,align 8
%a3=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=load i8*,i8**%c,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a0,i64 24
%bc=bitcast i8*%bb to i32*
store i32 7,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177296,i32*%bf,align 4
store i8*%bd,i8**%h,align 8
%bg=bitcast i8*%bd to i64*
store i64 0,i64*%bg,align 4
%bh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to i32*
store i32 2,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 28)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177304,i32*%bo,align 4
store i8*%bm,i8**%e,align 8
%bp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=load i8*,i8**%c,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bm,i64 24
%by=bitcast i8*%bx to i32*
store i32 7,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
store i8*%bz,i8**%g,align 8
%bC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bz,i64 8
%bF=bitcast i8*%bE to i8**
store i8*null,i8**%bF,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 16
%bH=bitcast i8*%bG to i32*
store i32 3,i32*%bH,align 4
%bI=call i8*@sml_alloc(i32 inreg 20)#0
%bJ=getelementptr inbounds i8,i8*%bI,i64 -4
%bK=bitcast i8*%bJ to i32*
store i32 1342177296,i32*%bK,align 4
store i8*%bI,i8**%e,align 8
%bL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bM=bitcast i8*%bI to i8**
store i8*%bL,i8**%bM,align 8
%bN=load i8*,i8**%c,align 8
%bO=getelementptr inbounds i8,i8*%bI,i64 8
%bP=bitcast i8*%bO to i8**
store i8*%bN,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bI,i64 16
%bR=bitcast i8*%bQ to i32*
store i32 3,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
store i8*%bS,i8**%g,align 8
%bV=getelementptr inbounds i8,i8*%bS,i64 4
%bW=bitcast i8*%bV to i32*
store i32 0,i32*%bW,align 1
%bX=bitcast i8*%bS to i32*
store i32 10,i32*%bX,align 4
%bY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bS,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 2,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
store i8*%b3,i8**%h,align 8
%b6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*null,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 28)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177304,i32*%ce,align 4
store i8*%cc,i8**%e,align 8
%cf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ci=getelementptr inbounds i8,i8*%cc,i64 8
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=load i8*,i8**%c,align 8
%cl=getelementptr inbounds i8,i8*%cc,i64 16
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cc,i64 24
%co=bitcast i8*%cn to i32*
store i32 7,i32*%co,align 4
%cp=call i8*@sml_alloc(i32 inreg 20)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177296,i32*%cr,align 4
store i8*%cp,i8**%f,align 8
%cs=bitcast i8*%cp to i64*
store i64 0,i64*%cs,align 4
%ct=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cu=getelementptr inbounds i8,i8*%cp,i64 8
%cv=bitcast i8*%cu to i8**
store i8*%ct,i8**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cp,i64 16
%cx=bitcast i8*%cw to i32*
store i32 2,i32*%cx,align 4
%cy=bitcast i8**%d to i8***
%cz=load i8**,i8***%cy,align 8
%cA=load i8*,i8**%cz,align 8
%cB=getelementptr inbounds i8,i8*%cA,i64 16
%cC=bitcast i8*%cB to i8*(i8*,i8*)**
%cD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cC,align 8
store i8*null,i8**%d,align 8
%cE=bitcast i8**%cz to i8***
%cF=load i8**,i8***%cE,align 8
%cG=load i8*,i8**%cF,align 8
%cH=load i8*,i8**%c,align 8
%cI=call fastcc i8*%cD(i8*inreg%cG,i8*inreg%cH)
store i8*%cI,i8**%d,align 8
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
store i8*%cJ,i8**%e,align 8
%cM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cJ,i64 8
%cP=bitcast i8*%cO to i8**
store i8*null,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cJ,i64 16
%cR=bitcast i8*%cQ to i32*
store i32 3,i32*%cR,align 4
%cS=call i8*@sml_alloc(i32 inreg 28)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177304,i32*%cU,align 4
store i8*%cS,i8**%d,align 8
%cV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cY=getelementptr inbounds i8,i8*%cS,i64 8
%cZ=bitcast i8*%cY to i8**
store i8*%cX,i8**%cZ,align 8
%c0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c1=getelementptr inbounds i8,i8*%cS,i64 16
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cS,i64 24
%c4=bitcast i8*%c3 to i32*
store i32 7,i32*%c4,align 4
%c5=call i8*@sml_alloc(i32 inreg 20)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177296,i32*%c7,align 4
%c8=bitcast i8*%c5 to i64*
store i64 0,i64*%c8,align 4
%c9=load i8*,i8**%d,align 8
%da=getelementptr inbounds i8,i8*%c5,i64 8
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=getelementptr inbounds i8,i8*%c5,i64 16
%dd=bitcast i8*%dc to i32*
store i32 2,i32*%dd,align 4
ret i8*%c5
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Fun__filterE_1232(i8*inreg%a,i8*inreg%b)unnamed_addr#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%k,i8**%e,align 8
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1e_1230 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1e_1230 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=call fastcc i8*%o(i8*inreg%J,i8*inreg%y)
store i8*%K,i8**%c,align 8
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%L,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%f,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__filterE_1231 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__filterE_1231 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1234(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1235(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aF,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__appendE_1234 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__appendE_1234 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1236(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__appendE_1235 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Fun__appendE_1235 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1238(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1239(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aN,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__takeE_1238 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__takeE_1238 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1240(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%c,align 8
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__takeE_1239 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__takeE_1239 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__dropE_1242(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__dropE_1243(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aS,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__dropE_1242 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__dropE_1242 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__dropE_1244(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%c,align 8
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__dropE_1243 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__dropE_1243 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1246(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1247(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a4,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__prodE_1246 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__prodE_1246 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1248(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__prodE_1247 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8Fun__prodE_1247 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11Var__compareE_1250(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bo,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL16Var__closeCommandE_1252(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bS,i64 0,i32 2)to i8*))
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%n=call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=bitcast i8*%o to i32*
%q=getelementptr inbounds i8,i8*%o,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
%s=getelementptr inbounds i8,i8*%o,i64 4
%t=bitcast i8*%s to i32*
store i32 0,i32*%t,align 1
store i32 25,i32*%p,align 4
%u=load i8*,i8**%b,align 8
%v=getelementptr inbounds i8,i8*%o,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 16
%y=bitcast i8*%x to i32*
store i32 2,i32*%y,align 4
ret i8*%o
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__NULLE_1254(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cq,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__JOINE_1256(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%d,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dA,i64 0,i32 2)to i8*),i8*inreg%N)
ret i8*%X
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13Con__INNERJOINE_1258(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%b,align 8
%o=getelementptr inbounds i8,i8*%k,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%k,i64 16
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%d,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%D,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%D,i64 16
%M=bitcast i8*%L to i32*
store i32 3,i32*%M,align 4
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
%Q=load i8*,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=load i8*,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%N,i64 8
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%N,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dE,i64 0,i32 2)to i8*),i8*inreg%N)
ret i8*%X
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Con__ASCE_1260(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dU,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__DESCE_1262(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dY,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Con__ALLE_1264(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@em,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12Con__DISTINCTE_1266(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%f,label%e
e:
call void@sml_check(i32 inreg%c)
br label%f
f:
%g=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eq,i64 0,i32 2)to i8*),i8*inreg null)
%h=getelementptr inbounds i8,i8*%g,i64 16
%i=bitcast i8*%h to i8*(i8*,i8*)**
%j=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i,align 8
%k=bitcast i8*%g to i8**
%l=load i8*,i8**%k,align 8
%m=load i8*,i8**%b,align 8
%n=tail call fastcc i8*%j(i8*inreg%l,i8*inreg%m)
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Con__INSERTE_1268(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
store i8*null,i8**%d,align 8
%p=load i8*,i8**%n,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8**%n to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%s(i8*inreg%v,i8*inreg%o)
store i8*%w,i8**%c,align 8
%x=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%G(i8*inreg%I,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%c,align 8
%Q=tail call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10Con__INSERTE_1269(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%b,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
store i8*%w,i8**%e,align 8
%x=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fU,i64 0,i32 2)to i8*))
store i8*%D,i8**%f,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Con__INSERTE_1268 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10Con__INSERTE_1268 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=icmp eq i8*%ak,null
br i1%al,label%az,label%am
am:
%an=bitcast i8*%ak to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%c,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*null,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%ap)
br label%az
az:
%aA=phi i8*[%ay,%am],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%l]
store i8*%aA,i8**%c,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i8**
store i8*null,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%d,align 8
%aN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%b,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eO,i64 0,i32 2)to i8*),i8*inreg%aU)
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9singletonE_1271(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%b,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=load i8*,i8**%d,align 8
%J=tail call fastcc i8*%t(i8*inreg%I,i8*inreg%y)
ret i8*%J
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1273(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=icmp eq i8*%l,null
br i1%m,label%n,label%D
n:
%o=getelementptr inbounds i8,i8*%i,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp eq i8*%q,null
br i1%r,label%s,label%t
s:
ret i8*null
t:
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 12)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177288,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
ret i8*%w
D:
%E=bitcast i8*%l to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%b,align 8
%G=getelementptr inbounds i8,i8*%i,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=icmp eq i8*%I,null
br i1%J,label%K,label%S
K:
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
%O=load i8*,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
ret i8*%L
S:
%T=bitcast i8*%I to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%c,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=call fastcc i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg%V)
store i8*%af,i8**%b,align 8
%ag=call i8*@sml_alloc(i32 inreg 12)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177288,i32*%ai,align 4
%aj=load i8*,i8**%b,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i32*
store i32 1,i32*%am,align 4
ret i8*%ag
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel3Map9mergeWithE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gc,i64 0,i32 2)to i8*))
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%d,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%b,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%d,align 8
%N=tail call fastcc i8*%z(i8*inreg%M,i8*inreg%C)
ret i8*%N
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL6expLocE_1278(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i32*
%l=load i32,i32*%k,align 4
switch i32%l,label%m[
i32 5,label%bi
i32 3,label%bb
i32 9,label%a7
i32 14,label%a3
i32 7,label%aZ
i32 1,label%aS
i32 2,label%aL
i32 4,label%aE
i32 6,label%ax
i32 10,label%aq
i32 11,label%aj
i32 8,label%ae
i32 12,label%X
i32 13,label%S
i32 0,label%L
i32 15,label%E
]
m:
call void@sml_matchcomp_bug()
%n=load i8*,i8**@_SMLZ5Match,align 8
store i8*%n,i8**%b,align 8
%o=call i8*@sml_alloc(i32 inreg 20)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177296,i32*%q,align 4
store i8*%o,i8**%c,align 8
%r=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@ge,i64 0,i32 2,i64 0),i8**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to i32*
store i32 3,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 60)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177336,i32*%z,align 4
%A=getelementptr inbounds i8,i8*%x,i64 56
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%x to i8**
store i8*%C,i8**%D,align 8
call void@sml_raise(i8*inreg%x)#1
unreachable
E:
%F=getelementptr inbounds i8,i8*%i,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
ret i8*%K
L:
%M=getelementptr inbounds i8,i8*%i,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
ret i8*%R
S:
%T=getelementptr inbounds i8,i8*%i,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=tail call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%V)
ret i8*%W
X:
%Y=getelementptr inbounds i8,i8*%i,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
ret i8*%ad
ae:
%af=getelementptr inbounds i8,i8*%i,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=tail call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%ah)
ret i8*%ai
aj:
%ak=getelementptr inbounds i8,i8*%i,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
ret i8*%ap
aq:
%ar=getelementptr inbounds i8,i8*%i,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
ret i8*%aw
ax:
%ay=getelementptr inbounds i8,i8*%i,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
ret i8*%aD
aE:
%aF=getelementptr inbounds i8,i8*%i,i64 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
%aI=getelementptr inbounds i8,i8*%aH,i64 8
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
ret i8*%aK
aL:
%aM=getelementptr inbounds i8,i8*%i,i64 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
ret i8*%aR
aS:
%aT=getelementptr inbounds i8,i8*%i,i64 8
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=getelementptr inbounds i8,i8*%aV,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
ret i8*%aY
aZ:
%a0=getelementptr inbounds i8,i8*%i,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
ret i8*%a2
a3:
%a4=getelementptr inbounds i8,i8*%i,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
ret i8*%a6
a7:
%a8=getelementptr inbounds i8,i8*%i,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
ret i8*%ba
bb:
%bc=getelementptr inbounds i8,i8*%i,i64 8
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
%bf=getelementptr inbounds i8,i8*%be,i64 8
%bg=bitcast i8*%bf to i8**
%bh=load i8*,i8**%bg,align 8
ret i8*%bh
bi:
%bj=getelementptr inbounds i8,i8*%i,i64 8
%bk=bitcast i8*%bj to i8**
%bl=load i8*,i8**%bk,align 8
%bm=getelementptr inbounds i8,i8*%bl,i64 8
%bn=bitcast i8*%bm to i8**
%bo=load i8*,i8**%bn,align 8
ret i8*%bo
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL6getLocE_1281(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
f:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
br label%d
d:
%e=phi i8*[%aH,%aE],[%a,%f]
store i8*%e,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%e,%d]
%m=bitcast i8*%l to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 16,label%cV
i32 8,label%cO
i32 6,label%cH
i32 17,label%cD
i32 3,label%cw
i32 4,label%cp
i32 19,label%ci
i32 20,label%cb
i32 0,label%b4
i32 27,label%bX
i32 1,label%bQ
i32 28,label%bJ
i32 9,label%bC
i32 10,label%bv
i32 30,label%bo
i32 11,label%bh
i32 21,label%ba
i32 18,label%a3
i32 15,label%aW
i32 25,label%aP
i32 22,label%aI
i32 23,label%aE
i32 13,label%ax
i32 12,label%aq
i32 14,label%aj
i32 29,label%ae
i32 7,label%Z
i32 2,label%V
i32 5,label%R
i32 24,label%N
i32 26,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gf,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%l,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
ret i8*%M
N:
%O=getelementptr inbounds i8,i8*%l,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
ret i8*%Q
R:
%S=getelementptr inbounds i8,i8*%l,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
ret i8*%U
V:
%W=getelementptr inbounds i8,i8*%l,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
ret i8*%Y
Z:
%aa=getelementptr inbounds i8,i8*%l,i64 8
%ab=bitcast i8*%aa to i8***
%ac=load i8**,i8***%ab,align 8
%ad=load i8*,i8**%ac,align 8
ret i8*%ad
ae:
%af=getelementptr inbounds i8,i8*%l,i64 8
%ag=bitcast i8*%af to i8***
%ah=load i8**,i8***%ag,align 8
%ai=load i8*,i8**%ah,align 8
ret i8*%ai
aj:
%ak=getelementptr inbounds i8,i8*%l,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=getelementptr inbounds i8,i8*%am,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
ret i8*%ap
aq:
%ar=getelementptr inbounds i8,i8*%l,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=getelementptr inbounds i8,i8*%at,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
ret i8*%aw
ax:
%ay=getelementptr inbounds i8,i8*%l,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
ret i8*%aD
aE:
store i8*null,i8**%b,align 8
%aF=getelementptr inbounds i8,i8*%l,i64 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
br label%d
aI:
%aJ=getelementptr inbounds i8,i8*%l,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=getelementptr inbounds i8,i8*%aL,i64 32
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
ret i8*%aO
aP:
%aQ=getelementptr inbounds i8,i8*%l,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
%aT=getelementptr inbounds i8,i8*%aS,i64 16
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
ret i8*%aV
aW:
%aX=getelementptr inbounds i8,i8*%l,i64 8
%aY=bitcast i8*%aX to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=getelementptr inbounds i8,i8*%aZ,i64 8
%a1=bitcast i8*%a0 to i8**
%a2=load i8*,i8**%a1,align 8
ret i8*%a2
a3:
%a4=getelementptr inbounds i8,i8*%l,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
ret i8*%a9
ba:
%bb=getelementptr inbounds i8,i8*%l,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=getelementptr inbounds i8,i8*%bd,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
ret i8*%bg
bh:
%bi=getelementptr inbounds i8,i8*%l,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
%bl=getelementptr inbounds i8,i8*%bk,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
ret i8*%bn
bo:
%bp=getelementptr inbounds i8,i8*%l,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
ret i8*%bu
bv:
%bw=getelementptr inbounds i8,i8*%l,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
%bz=getelementptr inbounds i8,i8*%by,i64 8
%bA=bitcast i8*%bz to i8**
%bB=load i8*,i8**%bA,align 8
ret i8*%bB
bC:
%bD=getelementptr inbounds i8,i8*%l,i64 8
%bE=bitcast i8*%bD to i8**
%bF=load i8*,i8**%bE,align 8
%bG=getelementptr inbounds i8,i8*%bF,i64 8
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
ret i8*%bI
bJ:
%bK=getelementptr inbounds i8,i8*%l,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 8
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
ret i8*%bP
bQ:
%bR=getelementptr inbounds i8,i8*%l,i64 8
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
%bU=getelementptr inbounds i8,i8*%bT,i64 24
%bV=bitcast i8*%bU to i8**
%bW=load i8*,i8**%bV,align 8
ret i8*%bW
bX:
%bY=getelementptr inbounds i8,i8*%l,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
%b1=getelementptr inbounds i8,i8*%b0,i64 24
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
ret i8*%b3
b4:
%b5=getelementptr inbounds i8,i8*%l,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
%b8=getelementptr inbounds i8,i8*%b7,i64 16
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
ret i8*%ca
cb:
%cc=getelementptr inbounds i8,i8*%l,i64 8
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
%cf=getelementptr inbounds i8,i8*%ce,i64 24
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
ret i8*%ch
ci:
%cj=getelementptr inbounds i8,i8*%l,i64 8
%ck=bitcast i8*%cj to i8**
%cl=load i8*,i8**%ck,align 8
%cm=getelementptr inbounds i8,i8*%cl,i64 16
%cn=bitcast i8*%cm to i8**
%co=load i8*,i8**%cn,align 8
ret i8*%co
cp:
%cq=getelementptr inbounds i8,i8*%l,i64 8
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
%ct=getelementptr inbounds i8,i8*%cs,i64 8
%cu=bitcast i8*%ct to i8**
%cv=load i8*,i8**%cu,align 8
ret i8*%cv
cw:
%cx=getelementptr inbounds i8,i8*%l,i64 8
%cy=bitcast i8*%cx to i8**
%cz=load i8*,i8**%cy,align 8
%cA=getelementptr inbounds i8,i8*%cz,i64 8
%cB=bitcast i8*%cA to i8**
%cC=load i8*,i8**%cB,align 8
ret i8*%cC
cD:
%cE=getelementptr inbounds i8,i8*%l,i64 8
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
ret i8*%cG
cH:
%cI=getelementptr inbounds i8,i8*%l,i64 8
%cJ=bitcast i8*%cI to i8**
%cK=load i8*,i8**%cJ,align 8
%cL=getelementptr inbounds i8,i8*%cK,i64 8
%cM=bitcast i8*%cL to i8**
%cN=load i8*,i8**%cM,align 8
ret i8*%cN
cO:
%cP=getelementptr inbounds i8,i8*%l,i64 8
%cQ=bitcast i8*%cP to i8**
%cR=load i8*,i8**%cQ,align 8
%cS=getelementptr inbounds i8,i8*%cR,i64 16
%cT=bitcast i8*%cS to i8**
%cU=load i8*,i8**%cT,align 8
ret i8*%cU
cV:
%cW=getelementptr inbounds i8,i8*%l,i64 8
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
%cZ=getelementptr inbounds i8,i8*%cY,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
ret i8*%c1
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 0,label%aY
i32 1,label%am
i32 3,label%al
i32 2,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gh,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%k,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%b,align 8
%M=getelementptr inbounds i8,i8*%J,i64 16
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%c,align 8
%P=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%Q=getelementptr inbounds i8,i8*%P,i64 16
%R=bitcast i8*%Q to i8*(i8*,i8*)**
%S=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%R,align 8
%T=bitcast i8*%P to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%d,align 8
%V=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%W=call fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%V)
store i8*%W,i8**%b,align 8
%X=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Y=call fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%X)
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=tail call fastcc i8*%S(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
al:
ret i8*null
am:
%an=getelementptr inbounds i8,i8*%k,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%b,align 8
%as=getelementptr inbounds i8,i8*%ap,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%c,align 8
%av=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%d,align 8
%aB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aC=call fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%aB)
store i8*%aC,i8**%b,align 8
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*null,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aD,i64 16
%aL=bitcast i8*%aK to i32*
store i32 3,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
%aP=load i8*,i8**%b,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=load i8*,i8**%e,align 8
%aS=getelementptr inbounds i8,i8*%aM,i64 8
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aM,i64 16
%aV=bitcast i8*%aU to i32*
store i32 3,i32*%aV,align 4
%aW=load i8*,i8**%d,align 8
%aX=tail call fastcc i8*%ay(i8*inreg%aW,i8*inreg%aM)
ret i8*%aX
aY:
%aZ=getelementptr inbounds i8,i8*%k,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
%a2=getelementptr inbounds i8,i8*%a1,i64 8
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
%a5=icmp eq i8*%a4,null
br i1%a5,label%al,label%a6
a6:
%a7=bitcast i8*%a4 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%b,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
%bc=load i8*,i8**%b,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i8**
store i8*null,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
ret i8*%a9
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1287(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1288(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4pairE_1287 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4pairE_1287 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=bitcast i8*%T to i64*
store i64 0,i64*%W,align 4
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 24
%ae=bitcast i8*%ad to i32*
store i32 6,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
store i32 4,i32*%ag,align 4
%al=load i8*,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
store i8*null,i8**%b,align 8
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=icmp eq i8*%q,null
%s=and i1%n,%r
br i1%s,label%t,label%u
t:
ret i8*null
u:
store i8*%m,i8**%b,align 8
store i8*%q,i8**%c,align 8
%v=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=call fastcc i8*%y(i8*inreg%K,i8*inreg%B)
store i8*%L,i8**%b,align 8
%M=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ac=call fastcc i8*%P(i8*inreg%ab,i8*inreg%S)
store i8*%ac,i8**%c,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%d,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
store i8*%am,i8**%c,align 8
%ap=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aC)
store i8*%aD,i8**%b,align 8
%aE=call i8*@sml_alloc(i32 inreg 12)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177288,i32*%aG,align 4
store i8*%aE,i8**%c,align 8
%aH=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to i32*
store i32 1,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
store i8*%aL,i8**%b,align 8
%aO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4pairE_1288 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL4pairE_1288 to void(...)*),void(...)**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 24
%aV=bitcast i8*%aU to i32*
store i32 -2147483647,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 12)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177288,i32*%aY,align 4
%aZ=load i8*,i8**%b,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to i32*
store i32 1,i32*%a2,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1299(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1301(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%p)
%r=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%q)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%c,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
store i8*%y,i8**%e,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
store i8*null,i8**%d,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%d,align 8
%K=call i8*@sml_alloc(i32 inreg 36)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177312,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%K,i64 24
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%K,i64 32
%Y=bitcast i8*%X to i32*
store i32 15,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=bitcast i8*%Z to i32*
%ab=getelementptr inbounds i8,i8*%Z,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
%ad=getelementptr inbounds i8,i8*%Z,i64 4
%ae=bitcast i8*%ad to i32*
store i32 0,i32*%ae,align 1
store i32 3,i32*%aa,align 4
%af=load i8*,i8**%f,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i32*
store i32 2,i32*%aj,align 4
ret i8*%Z
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1302(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 0,label%bK
i32 1,label%ar
i32 3,label%aq
i32 2,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gj,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%k,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%J,i64 16
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%b,align 8
%P=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%L)
store i8*%P,i8**%c,align 8
%Q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%R=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%Q)
store i8*%R,i8**%b,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%S)
store i8*%T,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%U)
store i8*%V,i8**%b,align 8
%W=call i8*@sml_alloc(i32 inreg 20)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177296,i32*%Y,align 4
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%W,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%W)
store i8*%ag,i8**%b,align 8
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177296,i32*%aj,align 4
%ak=load i8*,i8**%b,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i8**
store i8*null,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
ret i8*%ah
aq:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@gi,i64 0,i32 2)to i8*)
ar:
%as=getelementptr inbounds i8,i8*%k,i64 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
%ax=getelementptr inbounds i8,i8*%au,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%b,align 8
%aA=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%aw)
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%c,align 8
%aD=getelementptr inbounds i8,i8*%aA,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=icmp eq i8*%aF,null
br i1%aG,label%aH,label%a3
aH:
%aI=call i8*@sml_alloc(i32 inreg 12)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177288,i32*%aK,align 4
store i8*%aI,i8**%d,align 8
%aL=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i32*
store i32 1,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
store i8*%aP,i8**%b,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1302 to void(...)*),void(...)**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1302 to void(...)*),void(...)**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 -2147483647,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 12)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177288,i32*%a2,align 4
br label%bu
a3:
%a4=bitcast i8*%aF to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%d,align 8
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%e,align 8
%a9=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bc=getelementptr inbounds i8,i8*%a6,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a6,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
store i8*%bg,i8**%b,align 8
%bj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1301 to void(...)*),void(...)**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1301 to void(...)*),void(...)**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 24
%bq=bitcast i8*%bp to i32*
store i32 -2147483647,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 12)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177288,i32*%bt,align 4
br label%bu
bu:
%bv=phi i8*[%br,%a3],[%a0,%aH]
%bw=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bx=bitcast i8*%bv to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bv,i64 8
%bz=bitcast i8*%by to i32*
store i32 1,i32*%bz,align 4
store i8*%bv,i8**%b,align 8
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=load i8*,i8**%c,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%b,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bA,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 3,i32*%bJ,align 4
ret i8*%bA
bK:
%bL=getelementptr inbounds i8,i8*%k,i64 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 8
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
%bR=icmp eq i8*%bQ,null
br i1%bR,label%aq,label%bS
bS:
%bT=bitcast i8*%bQ to i8**
%bU=load i8*,i8**%bT,align 8
store i8*%bU,i8**%b,align 8
%bV=call i8*@sml_alloc(i32 inreg 12)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177288,i32*%bX,align 4
store i8*%bV,i8**%c,align 8
%bY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bV,i64 8
%b1=bitcast i8*%b0 to i32*
store i32 1,i32*%b1,align 4
%b2=call i8*@sml_alloc(i32 inreg 28)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177304,i32*%b4,align 4
store i8*%b2,i8**%b,align 8
%b5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b2,i64 8
%b8=bitcast i8*%b7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1299 to void(...)*),void(...)**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b2,i64 16
%ca=bitcast i8*%b9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL14tableToPatPairE_1299 to void(...)*),void(...)**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b2,i64 24
%cc=bitcast i8*%cb to i32*
store i32 -2147483647,i32*%cc,align 4
%cd=call i8*@sml_alloc(i32 inreg 12)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177288,i32*%cf,align 4
store i8*%cd,i8**%c,align 8
%cg=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=getelementptr inbounds i8,i8*%cd,i64 8
%cj=bitcast i8*%ci to i32*
store i32 1,i32*%cj,align 4
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
%cn=bitcast i8*%ck to i8**
store i8*null,i8**%cn,align 8
%co=load i8*,i8**%c,align 8
%cp=getelementptr inbounds i8,i8*%ck,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%ck,i64 16
%cs=bitcast i8*%cr to i32*
store i32 3,i32*%cs,align 4
ret i8*%ck
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1305(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1306(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1305 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1305 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1307(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1306 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10nestedPairE_1306 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1309(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg 0)
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%j,i64 4
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 1
%o=bitcast i8*%j to i32*
store i32 1,i32*%o,align 4
%p=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%c,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
store i32 2,i32*%F,align 4
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1311(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gl,i64 0,i32 2)to i8*)
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gk,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
%M=tail call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
ret i8*%M
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1313(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1314(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bs,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_1313 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_1313 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1315(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%b,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%b,align 8
%C=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Q=call fastcc i8*%M(i8*inreg%O,i8*inreg%P)
store i8*%Q,i8**%b,align 8
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%c,align 8
%U=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_1314 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13nestedCompareE_1314 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1317(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=icmp eq i8*%i,null
br i1%k,label%l,label%m
l:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
m:
%n=bitcast i8*%i to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%i,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gm,i64 0,i32 2)to i8*))
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
%L=load i8*,i8**%c,align 8
%M=tail call fastcc i8*%I(i8*inreg%K,i8*inreg%L)
ret i8*%M
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1605(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 1
store i32 25,i32*%g,align 4
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%f,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%f,i64 16
%p=bitcast i8*%o to i32*
store i32 2,i32*%p,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1606(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1605 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1605 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1608(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1609(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%e,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=bitcast i8*%n to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%f,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%g,align 8
%G=getelementptr inbounds i8,i8*%D,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
%I=bitcast i8*%D to i32*
store i32 25,i32*%I,align 4
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=getelementptr inbounds i8,i8*%D,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i32*
store i32 2,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%O,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%d,align 8
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%S,i64 24
%ae=bitcast i8*%ad to i32*
store i32 7,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
store i8*%af,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
%ak=bitcast i8*%af to i32*
store i32 20,i32*%ak,align 4
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
%aq=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=call fastcc i8*%at(i8*inreg%av,i8*inreg null)
store i8*%aw,i8**%d,align 8
%ax=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ay=getelementptr inbounds i8,i8*%ax,i64 16
%az=bitcast i8*%ay to i8*(i8*,i8*)**
%aA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%az,align 8
%aB=bitcast i8*%ax to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%g,align 8
%aD=load i8*,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%aD,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%f,align 8
%aH=call i8*@sml_alloc(i32 inreg 12)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177288,i32*%aJ,align 4
store i8*%aH,i8**%h,align 8
%aK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aH,i64 8
%aN=bitcast i8*%aM to i32*
store i32 1,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 28)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177304,i32*%aQ,align 4
%aR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1608 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1608 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 24
%aY=bitcast i8*%aX to i32*
store i32 -2147483647,i32*%aY,align 4
%aZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a0=call fastcc i8*%aA(i8*inreg%aZ,i8*inreg%aO)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
store i8*%a7,i8**%d,align 8
%a8=load i8*,i8**%e,align 8
%a9=getelementptr inbounds i8,i8*%a8,i64 8
%ba=bitcast i8*%a9 to i8**
%bb=load i8*,i8**%ba,align 8
store i8*%bb,i8**%f,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%g,align 8
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=getelementptr inbounds i8,i8*%bc,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bc,i64 16
%bl=bitcast i8*%bk to i32*
store i32 3,i32*%bl,align 4
%bm=call i8*@sml_alloc(i32 inreg 20)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177296,i32*%bo,align 4
store i8*%bm,i8**%d,align 8
%bp=getelementptr inbounds i8,i8*%bm,i64 4
%bq=bitcast i8*%bp to i32*
store i32 0,i32*%bq,align 1
%br=bitcast i8*%bm to i32*
store i32 15,i32*%br,align 4
%bs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bt=getelementptr inbounds i8,i8*%bm,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i32*
store i32 2,i32*%bw,align 4
%bx=call i8*@sml_alloc(i32 inreg 20)#0
%by=getelementptr inbounds i8,i8*%bx,i64 -4
%bz=bitcast i8*%by to i32*
store i32 1342177296,i32*%bz,align 4
store i8*%bx,i8**%f,align 8
%bA=load i8*,i8**%d,align 8
%bB=bitcast i8*%bx to i8**
store i8*%bA,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bx,i64 8
%bD=bitcast i8*%bC to i8**
store i8*null,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bx,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bH=getelementptr inbounds i8,i8*%bG,i64 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%d,align 8
%bK=call i8*@sml_alloc(i32 inreg 28)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177304,i32*%bM,align 4
store i8*%bK,i8**%e,align 8
%bN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bQ=getelementptr inbounds i8,i8*%bK,i64 8
%bR=bitcast i8*%bQ to i8**
store i8*%bP,i8**%bR,align 8
%bS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 16
%bU=bitcast i8*%bT to i8**
store i8*%bS,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bK,i64 24
%bW=bitcast i8*%bV to i32*
store i32 7,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
%b0=bitcast i8*%bX to i64*
store i64 0,i64*%b0,align 4
%b1=load i8*,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bX,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bX,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 2,i32*%b5,align 4
ret i8*%bX
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1610(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
store i8*null,i8**%c,align 8
%k=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@gS,i64 0,i32 2,i64 0))
store i8*%k,i8**%c,align 8
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%e,align 8
%o=getelementptr inbounds i8*,i8**%m,i64 1
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%q,i64 24
%C=bitcast i8*%B to i32*
store i32 7,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 28)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177304,i32*%F,align 4
%G=load i8*,i8**%f,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1609 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1609 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 24
%N=bitcast i8*%M to i32*
store i32 -2147483647,i32*%N,align 4
ret i8*%D
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1612(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 24
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*null,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
store i8*%C,i8**%g,align 8
%F=getelementptr inbounds i8,i8*%C,i64 4
%G=bitcast i8*%F to i32*
store i32 0,i32*%G,align 1
%H=bitcast i8*%C to i32*
store i32 25,i32*%H,align 4
%I=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
%N=load i8*,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
store i8*%R,i8**%f,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%R,i64 24
%ad=bitcast i8*%ac to i32*
store i32 7,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=getelementptr inbounds i8,i8*%ae,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
%aj=bitcast i8*%ae to i32*
store i32 20,i32*%aj,align 4
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i32*
store i32 2,i32*%ao,align 4
%ap=load i8*,i8**%c,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=call fastcc i8*%av(i8*inreg%ax,i8*inreg%aA)
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%f,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to i8**
store i8*null,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=load i8*,i8**%c,align 8
%aM=getelementptr inbounds i8,i8*%aL,i64 8
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%c,align 8
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
store i8*%aP,i8**%d,align 8
%aS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 16
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aP,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 7,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
%a5=bitcast i8*%a2 to i64*
store i64 0,i64*%a5,align 4
%a6=load i8*,i8**%d,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 2,i32*%ba,align 4
ret i8*%a2
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1613(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@gS,i64 0,i32 2,i64 0))
store i8*%l,i8**%d,align 8
%m=bitcast i8**%e to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=getelementptr inbounds i8*,i8**%n,i64 1
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 36)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177312,i32*%t,align 4
store i8*%r,i8**%g,align 8
%u=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%r,i64 24
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%r,i64 32
%G=bitcast i8*%F to i32*
store i32 15,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%g,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1612 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1612 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1614(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1615(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 1,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%G,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
%L=bitcast i8*%G to i32*
store i32 2,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1614 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1614 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1616(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1617(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 5,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%G,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
%L=bitcast i8*%G to i32*
store i32 2,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1616 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1616 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1618(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1619(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%G,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
%L=bitcast i8*%G to i32*
store i32 2,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1618 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1618 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1620(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1621(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 2,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%d,align 8
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%c,align 8
%J=getelementptr inbounds i8,i8*%G,i64 4
%K=bitcast i8*%J to i32*
store i32 0,i32*%K,align 1
%L=bitcast i8*%G to i32*
store i32 2,i32*%L,align 4
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 12)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177288,i32*%T,align 4
store i8*%R,i8**%d,align 8
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i32*
store i32 1,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1620 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1620 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1622(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1623(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%c,align 8
%f=getelementptr inbounds i8,i8*%a,i64 8
%g=load i8,i8*%f,align 1
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%h to i64*
store i64 0,i64*%l,align 4
store i8%g,i8*%k,align 1
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 4
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%B,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
%G=bitcast i8*%B to i32*
store i32 2,i32*%G,align 4
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 2,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 12)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177288,i32*%O,align 4
store i8*%M,i8**%d,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i32*
store i32 1,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1622 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1622 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1624(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@x,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1625(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1624 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1624 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@s,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1627(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1626 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1626 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1629(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@o,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1630(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1629 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1629 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1631(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1632(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1631 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1631 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1633(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=bitcast i8*%n to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%n,i64 24
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%n,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%z(i8*inreg%B,i8*inreg%E)
store i8*%F,i8**%f,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%g,align 8
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
store i8*%K,i8**%h,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%K,i64 24
%W=bitcast i8*%V to i32*
store i32 7,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=getelementptr inbounds i8,i8*%X,i64 4
%ab=bitcast i8*%aa to i32*
store i32 0,i32*%ab,align 1
%ac=bitcast i8*%X to i32*
store i32 20,i32*%ac,align 4
%ad=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
%ai=load i8*,i8**%c,align 8
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
store i8*%al,i8**%c,align 8
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
store i8*%am,i8**%e,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=getelementptr inbounds i8,i8*%am,i64 16
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%am,i64 24
%ay=bitcast i8*%ax to i32*
store i32 7,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=bitcast i8*%az to i32*
%aB=getelementptr inbounds i8,i8*%az,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
%aD=getelementptr inbounds i8,i8*%az,i64 4
%aE=bitcast i8*%aD to i32*
store i32 0,i32*%aE,align 1
store i32 20,i32*%aA,align 4
%aF=load i8*,i8**%e,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%az,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 2,i32*%aJ,align 4
ret i8*%az
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1634(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1633 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1633 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1635(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
store i8*null,i8**%d,align 8
%n=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*))
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8**%c to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%q(i8*inreg%s,i8*inreg%v)
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%f,align 8
%A=getelementptr inbounds i8,i8*%x,i64 4
%B=bitcast i8*%A to i32*
store i32 0,i32*%B,align 1
%C=bitcast i8*%x to i32*
store i32 25,i32*%C,align 4
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=getelementptr inbounds i8,i8*%x,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i32*
store i32 2,i32*%H,align 4
%I=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ak,i64 0,i32 2)to i8*))
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=load i8**,i8***%t,align 8
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%L(i8*inreg%N,i8*inreg%P)
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%g,align 8
%U=getelementptr inbounds i8,i8*%R,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
%W=bitcast i8*%R to i32*
store i32 25,i32*%W,align 4
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
%ac=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@U,i64 0,i32 2)to i8*))
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8**,i8***%t,align 8
%aj=load i8*,i8**%ai,align 8
%ak=call fastcc i8*%af(i8*inreg%ah,i8*inreg%aj)
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
store i8*%al,i8**%h,align 8
%ao=getelementptr inbounds i8,i8*%al,i64 4
%ap=bitcast i8*%ao to i32*
store i32 0,i32*%ap,align 1
%aq=bitcast i8*%al to i32*
store i32 25,i32*%aq,align 4
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%al,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i32*
store i32 2,i32*%av,align 4
%aw=load i8*,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=bitcast i8*%aw to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%i,align 8
%aL=load i8*,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=load i8**,i8***%t,align 8
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%d,align 8
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
store i8*%aT,i8**%e,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 16
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aT,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 7,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%d,align 8
%a9=bitcast i8*%a6 to i64*
store i64 0,i64*%a9,align 4
%ba=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 16
%be=bitcast i8*%bd to i32*
store i32 2,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
store i8*%bf,i8**%h,align 8
%bi=load i8*,i8**%d,align 8
%bj=bitcast i8*%bf to i8**
store i8*%bi,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to i8**
store i8*null,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to i32*
store i32 3,i32*%bn,align 4
%bo=load i8**,i8***%t,align 8
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%d,align 8
%bq=call i8*@sml_alloc(i32 inreg 28)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177304,i32*%bs,align 4
store i8*%bq,i8**%e,align 8
%bt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bw=getelementptr inbounds i8,i8*%bq,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 16
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bq,i64 24
%bC=bitcast i8*%bB to i32*
store i32 7,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%d,align 8
%bG=bitcast i8*%bD to i64*
store i64 0,i64*%bG,align 4
%bH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to i8**
store i8*%bH,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bD,i64 16
%bL=bitcast i8*%bK to i32*
store i32 2,i32*%bL,align 4
%bM=call i8*@sml_alloc(i32 inreg 20)#0
%bN=getelementptr inbounds i8,i8*%bM,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
store i8*%bM,i8**%e,align 8
%bP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bQ=bitcast i8*%bM to i8**
store i8*%bP,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bM,i64 8
%bS=bitcast i8*%bR to i8**
store i8*null,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bM,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
%bV=load i8**,i8***%t,align 8
%bW=load i8*,i8**%bV,align 8
store i8*%bW,i8**%c,align 8
%bX=call i8*@sml_alloc(i32 inreg 28)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177304,i32*%bZ,align 4
store i8*%bX,i8**%d,align 8
%b0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b3=getelementptr inbounds i8,i8*%bX,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b6=getelementptr inbounds i8,i8*%bX,i64 16
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%bX,i64 24
%b9=bitcast i8*%b8 to i32*
store i32 7,i32*%b9,align 4
%ca=call i8*@sml_alloc(i32 inreg 20)#0
%cb=getelementptr inbounds i8,i8*%ca,i64 -4
%cc=bitcast i8*%cb to i32*
store i32 1342177296,i32*%cc,align 4
%cd=bitcast i8*%ca to i64*
store i64 0,i64*%cd,align 4
%ce=load i8*,i8**%d,align 8
%cf=getelementptr inbounds i8,i8*%ca,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%ca,i64 16
%ci=bitcast i8*%ch to i32*
store i32 2,i32*%ci,align 4
ret i8*%ca
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1636(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1635 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1635 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1637(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ak,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@U,i64 0,i32 2)to i8*))
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8**,i8***%s,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%K(i8*inreg%M,i8*inreg%O)
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 25,i32*%V,align 4
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=bitcast i8*%ab to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%h,align 8
%aq=load i8*,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*null,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=load i8**,i8***%s,align 8
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 16
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%ay,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 7,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%d,align 8
%aO=bitcast i8*%aL to i64*
store i64 0,i64*%aO,align 4
%aP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to i32*
store i32 2,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%e,align 8
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*null,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=load i8**,i8***%s,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%c,align 8
%a5=call i8*@sml_alloc(i32 inreg 28)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177304,i32*%a7,align 4
store i8*%a5,i8**%d,align 8
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%be=getelementptr inbounds i8,i8*%a5,i64 16
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a5,i64 24
%bh=bitcast i8*%bg to i32*
store i32 7,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
%bl=bitcast i8*%bi to i64*
store i64 0,i64*%bl,align 4
%bm=load i8*,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%bi,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bi,i64 16
%bq=bitcast i8*%bp to i32*
store i32 2,i32*%bq,align 4
ret i8*%bi
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1638(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1637 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1637 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1639(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
store i8*%u,i8**%d,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@B,i64 0,i32 2)to i8*),i8*inreg null)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8**,i8***%r,align 8
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*%J(i8*inreg%L,i8*inreg%N)
store i8*%O,i8**%d,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
store i8*%P,i8**%g,align 8
%S=load i8*,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*null,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=load i8**,i8***%r,align 8
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
store i8*%aa,i8**%e,align 8
%ad=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%aa,i64 24
%am=bitcast i8*%al to i32*
store i32 7,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%f,align 8
%aq=bitcast i8*%an to i64*
store i64 0,i64*%aq,align 4
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 2,i32*%av,align 4
%aw=load i8*,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=bitcast i8*%aw to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=load i8**,i8***%r,align 8
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%c,align 8
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
store i8*%aT,i8**%d,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 16
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aT,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 7,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=bitcast i8*%a6 to i64*
store i64 0,i64*%a9,align 4
%ba=load i8*,i8**%d,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 16
%be=bitcast i8*%bd to i32*
store i32 2,i32*%be,align 4
ret i8*%a6
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1640(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1639 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1639 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1641(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8**,i8***%s,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%K(i8*inreg%M,i8*inreg%O)
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 25,i32*%V,align 4
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@B,i64 0,i32 2)to i8*),i8*inreg null)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=load i8**,i8***%s,align 8
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ae(i8*inreg%ag,i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
store i8*%ak,i8**%h,align 8
%an=load i8*,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*null,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=load i8**,i8***%s,align 8
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
store i8*%av,i8**%e,align 8
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=getelementptr inbounds i8,i8*%av,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 16
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%av,i64 24
%aH=bitcast i8*%aG to i32*
store i32 7,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%g,align 8
%aL=bitcast i8*%aI to i64*
store i64 0,i64*%aL,align 4
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 2,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=bitcast i8*%aR to i8**
%a1=load i8*,i8**%a0,align 8
%a2=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a1)
store i8*%a2,i8**%d,align 8
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%h,align 8
%a6=load i8*,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*null,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=load i8**,i8***%s,align 8
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%d,align 8
%be=call i8*@sml_alloc(i32 inreg 28)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177304,i32*%bg,align 4
store i8*%be,i8**%e,align 8
%bh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bk=getelementptr inbounds i8,i8*%be,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%be,i64 16
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%be,i64 24
%bq=bitcast i8*%bp to i32*
store i32 7,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%d,align 8
%bu=bitcast i8*%br to i64*
store i64 0,i64*%bu,align 4
%bv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 2,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%e,align 8
%bD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*null,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=load i8**,i8***%s,align 8
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%c,align 8
%bL=call i8*@sml_alloc(i32 inreg 28)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177304,i32*%bN,align 4
store i8*%bL,i8**%d,align 8
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bL,i64 24
%bX=bitcast i8*%bW to i32*
store i32 7,i32*%bX,align 4
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
%b1=bitcast i8*%bY to i64*
store i64 0,i64*%b1,align 4
%b2=load i8*,i8**%d,align 8
%b3=getelementptr inbounds i8,i8*%bY,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bY,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 2,i32*%b6,align 4
ret i8*%bY
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1642(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1641 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1641 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1643(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
store i8*%u,i8**%d,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@F,i64 0,i32 2)to i8*),i8*inreg null)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8**,i8***%r,align 8
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*%J(i8*inreg%L,i8*inreg%N)
store i8*%O,i8**%d,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
store i8*%P,i8**%g,align 8
%S=load i8*,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*null,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=load i8**,i8***%r,align 8
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=call i8*@sml_alloc(i32 inreg 28)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177304,i32*%ac,align 4
store i8*%aa,i8**%e,align 8
%ad=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 8
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=getelementptr inbounds i8,i8*%aa,i64 16
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%aa,i64 24
%am=bitcast i8*%al to i32*
store i32 7,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%f,align 8
%aq=bitcast i8*%an to i64*
store i64 0,i64*%aq,align 4
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 2,i32*%av,align 4
%aw=load i8*,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=bitcast i8*%aw to i8**
%aG=load i8*,i8**%aF,align 8
%aH=call fastcc i8*%aC(i8*inreg%aE,i8*inreg%aG)
store i8*%aH,i8**%d,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=load i8**,i8***%r,align 8
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%c,align 8
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
store i8*%aT,i8**%d,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 16
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aT,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 7,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
%a9=bitcast i8*%a6 to i64*
store i64 0,i64*%a9,align 4
%ba=load i8*,i8**%d,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 16
%be=bitcast i8*%bd to i32*
store i32 2,i32*%be,align 4
ret i8*%a6
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1644(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1643 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1643 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1645(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8**,i8***%s,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%K(i8*inreg%M,i8*inreg%O)
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 25,i32*%V,align 4
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@F,i64 0,i32 2)to i8*),i8*inreg null)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=load i8**,i8***%s,align 8
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ae(i8*inreg%ag,i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
store i8*%ak,i8**%h,align 8
%an=load i8*,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*null,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=load i8**,i8***%s,align 8
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
store i8*%av,i8**%e,align 8
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=getelementptr inbounds i8,i8*%av,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 16
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%av,i64 24
%aH=bitcast i8*%aG to i32*
store i32 7,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%g,align 8
%aL=bitcast i8*%aI to i64*
store i64 0,i64*%aL,align 4
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 2,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=bitcast i8*%aR to i8**
%a1=load i8*,i8**%a0,align 8
%a2=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a1)
store i8*%a2,i8**%d,align 8
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%h,align 8
%a6=load i8*,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*null,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=load i8**,i8***%s,align 8
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%d,align 8
%be=call i8*@sml_alloc(i32 inreg 28)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177304,i32*%bg,align 4
store i8*%be,i8**%e,align 8
%bh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bk=getelementptr inbounds i8,i8*%be,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%be,i64 16
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%be,i64 24
%bq=bitcast i8*%bp to i32*
store i32 7,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%d,align 8
%bu=bitcast i8*%br to i64*
store i64 0,i64*%bu,align 4
%bv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 2,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%e,align 8
%bD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*null,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=load i8**,i8***%s,align 8
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%c,align 8
%bL=call i8*@sml_alloc(i32 inreg 28)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177304,i32*%bN,align 4
store i8*%bL,i8**%d,align 8
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bL,i64 24
%bX=bitcast i8*%bW to i32*
store i32 7,i32*%bX,align 4
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
%b1=bitcast i8*%bY to i64*
store i64 0,i64*%b1,align 4
%b2=load i8*,i8**%d,align 8
%b3=getelementptr inbounds i8,i8*%bY,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bY,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 2,i32*%b6,align 4
ret i8*%bY
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1646(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1645 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1645 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1647(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@J,i64 0,i32 2)to i8*),i8*inreg null)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=load i8*,i8**%c,align 8
%L=call fastcc i8*%H(i8*inreg%J,i8*inreg%K)
store i8*%L,i8**%e,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
store i8*%M,i8**%g,align 8
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i8**
store i8*null,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
store i8*%V,i8**%e,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=load i8*,i8**%c,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 16
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%V,i64 24
%ah=bitcast i8*%ag to i32*
store i32 7,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%f,align 8
%al=bitcast i8*%ai to i64*
store i64 0,i64*%al,align 4
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to i32*
store i32 2,i32*%aq,align 4
%ar=bitcast i8**%d to i8***
%as=load i8**,i8***%ar,align 8
%at=load i8*,i8**%as,align 8
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
store i8*null,i8**%d,align 8
%ax=bitcast i8**%as to i8***
%ay=load i8**,i8***%ax,align 8
%az=load i8*,i8**%ay,align 8
%aA=load i8*,i8**%c,align 8
%aB=call fastcc i8*%aw(i8*inreg%az,i8*inreg%aA)
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%e,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to i8**
store i8*null,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
store i8*%aL,i8**%d,align 8
%aO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 16
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aL,i64 24
%aX=bitcast i8*%aW to i32*
store i32 7,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 20)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177296,i32*%a0,align 4
%a1=bitcast i8*%aY to i64*
store i64 0,i64*%a1,align 4
%a2=load i8*,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%aY,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aY,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 2,i32*%a6,align 4
ret i8*%aY
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1648(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1649(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 12)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%c,align 8
%H=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1647 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1647 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*null,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%P)
store i8*%Y,i8**%c,align 8
%Z=load i8*,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%e,align 8
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aj=getelementptr inbounds i8,i8*%ad,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ad,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=call i8*@sml_alloc(i32 inreg 28)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177304,i32*%ap,align 4
%aq=load i8*,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1648 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1648 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%an,i64 24
%ax=bitcast i8*%aw to i32*
store i32 -2147483647,i32*%ax,align 4
ret i8*%an
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1650(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@at,i64 0,i32 2)to i8*))
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8**,i8***%s,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%K(i8*inreg%M,i8*inreg%O)
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 25,i32*%V,align 4
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@J,i64 0,i32 2)to i8*),i8*inreg null)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=load i8**,i8***%s,align 8
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ae(i8*inreg%ag,i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 20)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
store i8*%ak,i8**%h,align 8
%an=load i8*,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*null,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=load i8**,i8***%s,align 8
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=call i8*@sml_alloc(i32 inreg 28)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177304,i32*%ax,align 4
store i8*%av,i8**%e,align 8
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=bitcast i8*%av to i8**
store i8*%ay,i8**%az,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=getelementptr inbounds i8,i8*%av,i64 8
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%av,i64 16
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%av,i64 24
%aH=bitcast i8*%aG to i32*
store i32 7,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%g,align 8
%aL=bitcast i8*%aI to i64*
store i64 0,i64*%aL,align 4
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 2,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aR,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=getelementptr inbounds i8,i8*%aU,i64 16
%aW=bitcast i8*%aV to i8*(i8*,i8*)**
%aX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aW,align 8
%aY=bitcast i8*%aU to i8**
%aZ=load i8*,i8**%aY,align 8
%a0=bitcast i8*%aR to i8**
%a1=load i8*,i8**%a0,align 8
%a2=call fastcc i8*%aX(i8*inreg%aZ,i8*inreg%a1)
store i8*%a2,i8**%d,align 8
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%h,align 8
%a6=load i8*,i8**%d,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*null,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=load i8**,i8***%s,align 8
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%d,align 8
%be=call i8*@sml_alloc(i32 inreg 28)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177304,i32*%bg,align 4
store i8*%be,i8**%e,align 8
%bh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bk=getelementptr inbounds i8,i8*%be,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%be,i64 16
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%be,i64 24
%bq=bitcast i8*%bp to i32*
store i32 7,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%d,align 8
%bu=bitcast i8*%br to i64*
store i64 0,i64*%bu,align 4
%bv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 2,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%e,align 8
%bD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*null,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=load i8**,i8***%s,align 8
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%c,align 8
%bL=call i8*@sml_alloc(i32 inreg 28)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177304,i32*%bN,align 4
store i8*%bL,i8**%d,align 8
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bL,i64 24
%bX=bitcast i8*%bW to i32*
store i32 7,i32*%bX,align 4
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
%b1=bitcast i8*%bY to i64*
store i64 0,i64*%b1,align 4
%b2=load i8*,i8**%d,align 8
%b3=getelementptr inbounds i8,i8*%bY,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bY,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 2,i32*%b6,align 4
ret i8*%bY
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1651(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1650 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1650 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1652(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
store i8*null,i8**%d,align 8
%k=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@Y,i64 0,i32 2)to i8*))
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%n(i8*inreg%p,i8*inreg%s)
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%F,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8*%F to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%L(i8*inreg%N,i8*inreg%P)
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%f,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*null,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=load i8**,i8***%q,align 8
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
store i8*%ac,i8**%d,align 8
%af=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 16
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ac,i64 24
%ao=bitcast i8*%an to i32*
store i32 7,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=bitcast i8*%ap to i64*
store i64 0,i64*%as,align 4
%at=load i8*,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i32*
store i32 2,i32*%ax,align 4
ret i8*%ap
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1653(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1652 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1652 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1655(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1656(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ac,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
store i8*%u,i8**%d,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%e,align 8
%M=load i8**,i8***%r,align 8
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1655 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1655 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=call fastcc i8*%J(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=load i8*,i8**%c,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=call fastcc i8*%ak(i8*inreg%am,i8*inreg%aq)
store i8*%ar,i8**%d,align 8
%as=load i8**,i8***%r,align 8
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%f,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 4
%aI=bitcast i8*%aH to i32*
store i32 0,i32*%aI,align 1
%aJ=bitcast i8*%aE to i32*
store i32 15,i32*%aJ,align 4
%aK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i32*
store i32 2,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%e,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=load i8**,i8***%r,align 8
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%c,align 8
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
store i8*%a0,i8**%d,align 8
%a3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a0,i64 24
%bc=bitcast i8*%bb to i32*
store i32 7,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177296,i32*%bf,align 4
%bg=bitcast i8*%bd to i64*
store i64 0,i64*%bg,align 4
%bh=load i8*,i8**%d,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to i32*
store i32 2,i32*%bl,align 4
ret i8*%bd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1657(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%e,align 8
%y=load i8*,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%c,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
store i8*%ak,i8**%c,align 8
%al=load i8*,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
store i8*%ap,i8**%e,align 8
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ap,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 28)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177304,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1656 to void(...)*),void(...)**%aF,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1656 to void(...)*),void(...)**%aH,align 8
%aI=getelementptr inbounds i8,i8*%az,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 -2147483647,i32*%aJ,align 4
ret i8*%az
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1658(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1659(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ag,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
store i8*%u,i8**%d,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%e,align 8
%M=load i8**,i8***%r,align 8
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1658 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1658 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=call fastcc i8*%J(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=load i8*,i8**%c,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=call fastcc i8*%ak(i8*inreg%am,i8*inreg%aq)
store i8*%ar,i8**%d,align 8
%as=load i8**,i8***%r,align 8
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%f,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%au,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i32*
store i32 3,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 4
%aI=bitcast i8*%aH to i32*
store i32 0,i32*%aI,align 1
%aJ=bitcast i8*%aE to i32*
store i32 15,i32*%aJ,align 4
%aK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i32*
store i32 2,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 20)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177296,i32*%aR,align 4
store i8*%aP,i8**%e,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aP,i64 8
%aV=bitcast i8*%aU to i8**
store i8*null,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aP,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=load i8**,i8***%r,align 8
%aZ=load i8*,i8**%aY,align 8
store i8*%aZ,i8**%c,align 8
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
store i8*%a0,i8**%d,align 8
%a3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a0,i64 24
%bc=bitcast i8*%bb to i32*
store i32 7,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 20)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177296,i32*%bf,align 4
%bg=bitcast i8*%bd to i64*
store i64 0,i64*%bg,align 4
%bh=load i8*,i8**%d,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i8**
store i8*%bh,i8**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to i32*
store i32 2,i32*%bl,align 4
ret i8*%bd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1660(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%e,align 8
%y=load i8*,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%c,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
store i8*%ak,i8**%c,align 8
%al=load i8*,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
store i8*%ap,i8**%e,align 8
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=getelementptr inbounds i8,i8*%ap,i64 8
%aw=bitcast i8*%av to i8**
store i8*%au,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ap,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call i8*@sml_alloc(i32 inreg 28)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177304,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1659 to void(...)*),void(...)**%aF,align 8
%aG=getelementptr inbounds i8,i8*%az,i64 16
%aH=bitcast i8*%aG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1659 to void(...)*),void(...)**%aH,align 8
%aI=getelementptr inbounds i8,i8*%az,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 -2147483647,i32*%aJ,align 4
ret i8*%az
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1661(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=bitcast i8*%y to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%E(i8*inreg%G,i8*inreg%I)
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=bitcast i8**%c to i8***
%U=load i8**,i8***%T,align 8
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%c,align 8
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
store i8*%W,i8**%e,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ac=getelementptr inbounds i8,i8*%W,i64 8
%ad=bitcast i8*%ac to i8**
store i8*%ab,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%W,i64 16
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%W,i64 24
%ai=bitcast i8*%ah to i32*
store i32 7,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
%am=bitcast i8*%aj to i64*
store i64 0,i64*%am,align 4
%an=load i8*,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 16
%ar=bitcast i8*%aq to i32*
store i32 2,i32*%ar,align 4
ret i8*%aj
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%e to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=load i8*,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%O,i64 24
%aa=bitcast i8*%Z to i32*
store i32 7,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1661 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1661 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1663(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%q,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
%v=bitcast i8*%q to i32*
store i32 25,i32*%v,align 4
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%B to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*%H(i8*inreg%J,i8*inreg%L)
store i8*%M,i8**%d,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%f,align 8
%Q=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*null,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=bitcast i8**%c to i8***
%X=load i8**,i8***%W,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
store i8*%Z,i8**%d,align 8
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%Z,i64 24
%al=bitcast i8*%ak to i32*
store i32 7,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=bitcast i8*%am to i64*
store i64 0,i64*%ap,align 4
%aq=load i8*,i8**%d,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to i32*
store i32 2,i32*%au,align 4
ret i8*%am
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1664(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=load i8*,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%y,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%F,i8**%f,align 8
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%F,i64 24
%R=bitcast i8*%Q to i32*
store i32 7,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%f,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1663 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1663 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
ret i8*%S
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1665(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1666(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%g,align 8
%u=getelementptr inbounds i8,i8*%r,i64 4
%v=bitcast i8*%u to i32*
store i32 0,i32*%v,align 1
%w=bitcast i8*%r to i32*
store i32 25,i32*%w,align 4
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
%C=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%e,align 8
%I=bitcast i8**%c to i8***
%J=load i8**,i8***%I,align 8
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 12)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177288,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i32*
store i32 1,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 28)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177304,i32*%U,align 4
%V=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1665 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1665 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 24
%ac=bitcast i8*%ab to i32*
store i32 -2147483647,i32*%ac,align 4
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=call fastcc i8*%F(i8*inreg%ad,i8*inreg%S)
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=load i8*,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%an)
store i8*%ao,i8**%d,align 8
%ap=load i8**,i8***%I,align 8
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%e,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%d,align 8
%aE=getelementptr inbounds i8,i8*%aB,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
%aG=bitcast i8*%aB to i32*
store i32 15,i32*%aG,align 4
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 16
%aL=bitcast i8*%aK to i32*
store i32 2,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
store i8*%aM,i8**%e,align 8
%aP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aM,i64 8
%aS=bitcast i8*%aR to i8**
store i8*null,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
%aV=load i8**,i8***%I,align 8
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%c,align 8
%aX=call i8*@sml_alloc(i32 inreg 28)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177304,i32*%aZ,align 4
store i8*%aX,i8**%d,align 8
%a0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a3=getelementptr inbounds i8,i8*%aX,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%aX,i64 16
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aX,i64 24
%a9=bitcast i8*%a8 to i32*
store i32 7,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
%bd=bitcast i8*%ba to i64*
store i64 0,i64*%bd,align 4
%be=load i8*,i8**%d,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 16
%bi=bitcast i8*%bh to i32*
store i32 2,i32*%bi,align 4
ret i8*%ba
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%e,align 8
%y=load i8*,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%c,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
store i8*%ak,i8**%c,align 8
%al=load i8*,i8**%d,align 8
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%e,align 8
%ap=getelementptr inbounds i8,i8*%al,i64 24
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%d,align 8
%as=call i8*@sml_alloc(i32 inreg 28)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177304,i32*%au,align 4
store i8*%as,i8**%f,align 8
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 16
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%as,i64 24
%aE=bitcast i8*%aD to i32*
store i32 7,i32*%aE,align 4
%aF=call i8*@sml_alloc(i32 inreg 28)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177304,i32*%aH,align 4
%aI=load i8*,i8**%f,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 8
%aL=bitcast i8*%aK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1666 to void(...)*),void(...)**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 16
%aN=bitcast i8*%aM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1666 to void(...)*),void(...)**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aF,i64 24
%aP=bitcast i8*%aO to i32*
store i32 -2147483647,i32*%aP,align 4
ret i8*%aF
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1668(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%j)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=tail call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1669(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1670(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
store i8*null,i8**%d,align 8
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1669 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1669 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%P(i8*inreg%R,i8*inreg%V)
store i8*%W,i8**%d,align 8
%X=load i8**,i8***%q,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%e,align 8
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=bitcast i8*%aj to i32*
%al=getelementptr inbounds i8,i8*%aj,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=getelementptr inbounds i8,i8*%aj,i64 4
%ao=bitcast i8*%an to i32*
store i32 0,i32*%ao,align 1
store i32 15,i32*%ak,align 4
%ap=load i8*,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i32*
store i32 2,i32*%at,align 4
ret i8*%aj
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1671(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1668 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1668 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%c,align 8
%T=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=call fastcc i8*%W(i8*inreg%Y,i8*inreg%Z)
store i8*%aa,i8**%c,align 8
%ab=load i8*,i8**%d,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%d,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
store i8*%af,i8**%e,align 8
%ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 28)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177304,i32*%ar,align 4
%as=load i8*,i8**%e,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1670 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1670 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i32*
store i32 -2147483647,i32*%az,align 4
ret i8*%ap
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1672(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
store i8*null,i8**%d,align 8
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ak,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=bitcast i8**%c to i8***
%t=load i8**,i8***%s,align 8
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%p(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a0,i64 0,i32 2)to i8*))
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8**,i8***%s,align 8
%O=load i8*,i8**%N,align 8
%P=call fastcc i8*%K(i8*inreg%M,i8*inreg%O)
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 4
%U=bitcast i8*%T to i32*
store i32 0,i32*%U,align 1
%V=bitcast i8*%Q to i32*
store i32 25,i32*%V,align 4
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 16
%aa=bitcast i8*%Z to i32*
store i32 2,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=bitcast i8*%ab to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ah(i8*inreg%aj,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%h,align 8
%aq=load i8*,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%an,i64 8
%at=bitcast i8*%as to i8**
store i8*null,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%an,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=load i8**,i8***%s,align 8
%ax=load i8*,i8**%aw,align 8
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%ay,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 16
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%ay,i64 24
%aK=bitcast i8*%aJ to i32*
store i32 7,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%d,align 8
%aO=bitcast i8*%aL to i64*
store i64 0,i64*%aO,align 4
%aP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to i32*
store i32 2,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%e,align 8
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*null,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=load i8**,i8***%s,align 8
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%c,align 8
%a5=call i8*@sml_alloc(i32 inreg 28)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177304,i32*%a7,align 4
store i8*%a5,i8**%d,align 8
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%be=getelementptr inbounds i8,i8*%a5,i64 16
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a5,i64 24
%bh=bitcast i8*%bg to i32*
store i32 7,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
%bl=bitcast i8*%bi to i64*
store i64 0,i64*%bl,align 4
%bm=load i8*,i8**%d,align 8
%bn=getelementptr inbounds i8,i8*%bi,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bi,i64 16
%bq=bitcast i8*%bp to i32*
store i32 2,i32*%bq,align 4
ret i8*%bi
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1673(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1672 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1672 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1674(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
store i8*null,i8**%d,align 8
%k=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aW,i64 0,i32 2)to i8*))
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%n(i8*inreg%p,i8*inreg%s)
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%F,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=bitcast i8*%F to i8**
%P=load i8*,i8**%O,align 8
%Q=call fastcc i8*%L(i8*inreg%N,i8*inreg%P)
store i8*%Q,i8**%d,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%f,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*null,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=load i8**,i8***%q,align 8
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
store i8*%ac,i8**%d,align 8
%af=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 16
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ac,i64 24
%ao=bitcast i8*%an to i32*
store i32 7,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=bitcast i8*%ap to i64*
store i64 0,i64*%as,align 4
%at=load i8*,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i32*
store i32 2,i32*%ax,align 4
ret i8*%ap
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1675(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%x,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1674 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1674 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1676(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1677(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__filterE_1232(i8*inreg%p,i8*inreg%q)
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%e,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1676 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1676 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1678(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%l)
store i8*%p,i8**%c,align 8
%q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%q)
store i8*%r,i8**%b,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%s)
store i8*%t,i8**%c,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
%x=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%u)
store i8*%E,i8**%b,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=load i8*,i8**%b,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i8**
store i8*null,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1680(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 25,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1681(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1680 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1680 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1683(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1684(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=load i8*,i8**%r,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%s)
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%f,align 8
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*null,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%g,align 8
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 12)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177288,i32*%al,align 4
store i8*%aj,i8**%h,align 8
%am=load i8*,i8**%c,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i32*
store i32 1,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 28)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177304,i32*%as,align 4
%at=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1683 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1683 to void(...)*),void(...)**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 24
%aA=bitcast i8*%az to i32*
store i32 -2147483647,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=call fastcc i8*%ag(i8*inreg%aB,i8*inreg%aq)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=call fastcc i8*%aF(i8*inreg%aH,i8*inreg%aL)
store i8*%aM,i8**%d,align 8
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%e,align 8
%aQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 20)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
store i8*%aX,i8**%h,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32 15,i32*%a2,align 4
%a3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aX,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 2,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
store i8*%a8,i8**%d,align 8
%bb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=load i8*,i8**%c,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 16
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%a8,i64 24
%bk=bitcast i8*%bj to i32*
store i32 7,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%e,align 8
%bo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i8**
store i8*null,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 36)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177312,i32*%bw,align 4
store i8*%bu,i8**%d,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 20
%by=bitcast i8*%bx to i32*
store i32 0,i32*%by,align 1
%bz=bitcast i8*%bu to i8**
%bA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
store i8*%bA,i8**%bz,align 8
%bB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bu,i64 16
%bF=bitcast i8*%bE to i32*
store i32 2,i32*%bF,align 4
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=getelementptr inbounds i8,i8*%bu,i64 24
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bu,i64 32
%bK=bitcast i8*%bJ to i32*
store i32 11,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=bitcast i8*%bL to i32*
%bN=getelementptr inbounds i8,i8*%bL,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
%bP=getelementptr inbounds i8,i8*%bL,i64 4
%bQ=bitcast i8*%bP to i32*
store i32 0,i32*%bQ,align 1
store i32 1,i32*%bM,align 4
%bR=load i8*,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bL,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i32*
store i32 2,i32*%bV,align 4
ret i8*%bL
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1685(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%n
k:
%l=bitcast i8*%a to i8**
%m=bitcast i8**%f to i8***
br label%q
n:
call void@sml_check(i32 inreg%i)
%o=bitcast i8**%f to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8***[%m,%k],[%o,%n]
%s=phi i8**[%l,%k],[%p,%n]
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%ar,label%v
v:
%w=bitcast i8*%t to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%s,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%h,align 8
%I=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
%O=call fastcc i8*%L(i8*inreg%N,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gn,i64 0,i32 2)to i8*))
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%g,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%U)
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=call fastcc i8*%R(i8*inreg%W,i8*inreg%V)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
%af=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%ae)
store i8*%af,i8**%d,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 8
%am=bitcast i8*%al to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ag,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aq=call fastcc i8*%F(i8*inreg%ap,i8*inreg%ag)
br label%ar
ar:
%as=phi i8*[%aq,%v],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),%q]
store i8*%as,i8**%d,align 8
%at=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=call fastcc i8*%aw(i8*inreg%ay,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@go,i64 0,i32 2)to i8*))
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%e,align 8
%aL=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aM=getelementptr inbounds i8,i8*%aL,i64 16
%aN=bitcast i8*%aM to i8*(i8*,i8*)**
%aO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aN,align 8
%aP=bitcast i8*%aL to i8**
%aQ=load i8*,i8**%aP,align 8
%aR=call fastcc i8*%aO(i8*inreg%aQ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gg,i64 0,i32 2)to i8*))
%aS=getelementptr inbounds i8,i8*%aR,i64 16
%aT=bitcast i8*%aS to i8*(i8*,i8*)**
%aU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aT,align 8
%aV=bitcast i8*%aR to i8**
%aW=load i8*,i8**%aV,align 8
%aX=load i8**,i8***%r,align 8
store i8*null,i8**%f,align 8
%aY=load i8*,i8**%aX,align 8
%aZ=call fastcc i8*%aU(i8*inreg%aW,i8*inreg%aY)
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=call fastcc i8*%aI(i8*inreg%a0,i8*inreg%aZ)
%a2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a3=call fastcc i8*%aC(i8*inreg%a2,i8*inreg%a1)
store i8*%a3,i8**%e,align 8
%a4=call i8*@sml_alloc(i32 inreg 28)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177304,i32*%a6,align 4
store i8*%a4,i8**%f,align 8
%a7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 16
%be=bitcast i8*%bd to i8**
store i8*%bc,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%a4,i64 24
%bg=bitcast i8*%bf to i32*
store i32 7,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
%bk=load i8*,i8**%f,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1684 to void(...)*),void(...)**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 16
%bp=bitcast i8*%bo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1684 to void(...)*),void(...)**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 24
%br=bitcast i8*%bq to i32*
store i32 -2147483647,i32*%br,align 4
ret i8*%bh
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1686(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%l)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=tail call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1248(i8*inreg%q)
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1688(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1689(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%m
j:
%k=bitcast i8*%a to i8**
%l=bitcast i8**%e to i8***
br label%p
m:
call void@sml_check(i32 inreg%h)
%n=bitcast i8**%e to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8***[%l,%j],[%n,%m]
%r=phi i8**[%k,%j],[%o,%m]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
store i8*%A,i8**%g,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1685 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1685 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8**,i8***%q,align 8
%M=load i8*,i8**%L,align 8
%N=icmp eq i8*%M,null
br i1%N,label%at,label%O
O:
%P=bitcast i8*%M to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=load i8*,i8**%L,align 8
%S=getelementptr inbounds i8,i8*%R,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%d,align 8
%V=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*%Y(i8*inreg%aa,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gp,i64 0,i32 2)to i8*))
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%f,align 8
%ah=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ai=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%ah)
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=call fastcc i8*%ae(i8*inreg%aj,i8*inreg%ai)
%al=getelementptr inbounds i8,i8*%ak,i64 16
%am=bitcast i8*%al to i8*(i8*,i8*)**
%an=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%am,align 8
%ao=bitcast i8*%ak to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=call fastcc i8*%an(i8*inreg%ap,i8*inreg%aq)
%as=load i8*,i8**%g,align 8
br label%at
at:
%au=phi i8*[%as,%O],[%A,%p]
%av=phi i8*[%ar,%O],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*),%p]
store i8*null,i8**%g,align 8
%aw=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%c,align 8
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%d,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
store i8*%aB,i8**%e,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
%aO=load i8*,i8**%e,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1688 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1688 to void(...)*),void(...)**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 24
%aV=bitcast i8*%aU to i32*
store i32 -2147483647,i32*%aV,align 4
ret i8*%aL
}
define internal fastcc i8*@_SMLLL3cmp_1690(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%n
k:
%l=bitcast i8*%a to i8**
%m=bitcast i8**%d to i8***
br label%q
n:
call void@sml_check(i32 inreg%i)
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8***[%m,%k],[%o,%n]
%s=phi i8**[%l,%k],[%p,%n]
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%f,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*null,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%D,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
%I=bitcast i8*%D to i32*
store i32 2,i32*%I,align 4
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=getelementptr inbounds i8,i8*%D,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i32*
store i32 2,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
store i8*null,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%O,i64 16
%W=bitcast i8*%V to i32*
store i32 3,i32*%W,align 4
%X=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bx,i64 0,i32 2)to i8*))
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=load i8*,i8**%c,align 8
%ae=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ad)
store i8*%ae,i8**%e,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
store i8*%af,i8**%g,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
%ak=bitcast i8*%af to i32*
store i32 25,i32*%ak,align 4
%al=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
%aq=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bo,i64 0,i32 2)to i8*))
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%c,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
store i8*%ax,i8**%e,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%h,align 8
%aB=getelementptr inbounds i8,i8*%ay,i64 4
%aC=bitcast i8*%aB to i32*
store i32 0,i32*%aC,align 1
%aD=bitcast i8*%ay to i32*
store i32 25,i32*%aD,align 4
%aE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 8
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 16
%aI=bitcast i8*%aH to i32*
store i32 2,i32*%aI,align 4
%aJ=load i8**,i8***%r,align 8
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%d,align 8
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%e,align 8
%aO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aL,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*null,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aL,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%d,align 8
%aX=getelementptr inbounds i8,i8*%aU,i64 4
%aY=bitcast i8*%aX to i32*
store i32 0,i32*%aY,align 1
%aZ=bitcast i8*%aU to i32*
store i32 25,i32*%aZ,align 4
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 2,i32*%a4,align 4
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
store i8*%a5,i8**%e,align 8
%a8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a5,i64 8
%bb=bitcast i8*%ba to i8**
store i8*null,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a5,i64 16
%bd=bitcast i8*%bc to i32*
store i32 3,i32*%bd,align 4
%be=call i8*@sml_alloc(i32 inreg 28)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177304,i32*%bg,align 4
store i8*%be,i8**%d,align 8
%bh=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bk=getelementptr inbounds i8,i8*%be,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=load i8*,i8**%c,align 8
%bn=getelementptr inbounds i8,i8*%be,i64 16
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%be,i64 24
%bq=bitcast i8*%bp to i32*
store i32 7,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%e,align 8
%bu=bitcast i8*%br to i64*
store i64 0,i64*%bu,align 4
%bv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 2,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%h,align 8
%bD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*null,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=call i8*@sml_alloc(i32 inreg 28)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177304,i32*%bL,align 4
store i8*%bJ,i8**%d,align 8
%bM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=load i8*,i8**%c,align 8
%bS=getelementptr inbounds i8,i8*%bJ,i64 16
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bJ,i64 24
%bV=bitcast i8*%bU to i32*
store i32 7,i32*%bV,align 4
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%e,align 8
%bZ=bitcast i8*%bW to i64*
store i64 0,i64*%bZ,align 4
%b0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b1=getelementptr inbounds i8,i8*%bW,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bW,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 2,i32*%b4,align 4
%b5=call i8*@sml_alloc(i32 inreg 28)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177304,i32*%b7,align 4
store i8*%b5,i8**%d,align 8
%b8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b9=bitcast i8*%b5 to i8**
store i8*%b8,i8**%b9,align 8
%ca=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cb=getelementptr inbounds i8,i8*%b5,i64 8
%cc=bitcast i8*%cb to i8**
store i8*%ca,i8**%cc,align 8
%cd=load i8*,i8**%c,align 8
%ce=getelementptr inbounds i8,i8*%b5,i64 16
%cf=bitcast i8*%ce to i8**
store i8*%cd,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b5,i64 24
%ch=bitcast i8*%cg to i32*
store i32 7,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%e,align 8
%cl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%ci,i64 8
%co=bitcast i8*%cn to i8**
store i8*null,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%ci,i64 16
%cq=bitcast i8*%cp to i32*
store i32 3,i32*%cq,align 4
%cr=call i8*@sml_alloc(i32 inreg 20)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177296,i32*%ct,align 4
store i8*%cr,i8**%d,align 8
%cu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cr,i64 16
%cA=bitcast i8*%cz to i32*
store i32 3,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 20)#0
%cC=bitcast i8*%cB to i32*
%cD=getelementptr inbounds i8,i8*%cB,i64 -4
%cE=bitcast i8*%cD to i32*
store i32 1342177296,i32*%cE,align 4
%cF=getelementptr inbounds i8,i8*%cB,i64 4
%cG=bitcast i8*%cF to i32*
store i32 0,i32*%cG,align 1
store i32 10,i32*%cC,align 4
%cH=load i8*,i8**%d,align 8
%cI=getelementptr inbounds i8,i8*%cB,i64 8
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i32*
store i32 2,i32*%cL,align 4
ret i8*%cB
}
define internal fastcc i8*@_SMLLL3cmp_1691(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
store i8*null,i8**%b,align 8
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%o,label%p
o:
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
p:
%q=bitcast i8*%m to i32*
%r=load i32,i32*%q,align 4
%s=icmp eq i32%r,0
br i1%s,label%o,label%t
t:
%u=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%u,i8**%b,align 8
%v=call i8*@sml_alloc(i32 inreg 12)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177288,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i32*
store i32 1,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 28)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177304,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%C,i64 8
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3cmp_1690 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%C,i64 16
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3cmp_1690 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 24
%M=bitcast i8*%L to i32*
store i32 -2147483647,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1693(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1694(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%b to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%n)
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8**%c to i8***
%v=load i8**,i8***%u,align 8
%w=load i8*,i8**%v,align 8
%x=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%w)
ret i8*%x
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1695(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bg,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%c,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%g,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%e,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%f,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 2,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%h,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=getelementptr inbounds i8,i8*%am,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%c,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%e,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%f,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ax,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%h,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*null,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%e,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
%a8=bitcast i8*%a3 to i32*
store i32 10,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%h,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%c,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=bitcast i8*%bA to i64*
store i64 0,i64*%bD,align 4
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
%bJ=load i8*,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bM to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%c,align 8
%bT=call fastcc i8*%bP(i8*inreg%bR,i8*inreg%bS)
store i8*%bT,i8**%e,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%g,align 8
%bX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*null,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 28)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177304,i32*%b5,align 4
store i8*%b3,i8**%e,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%c,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b3,i64 24
%cf=bitcast i8*%ce to i32*
store i32 7,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
store i8*%cg,i8**%f,align 8
%cj=bitcast i8*%cg to i64*
store i64 0,i64*%cj,align 4
%ck=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 2,i32*%co,align 4
%cp=bitcast i8**%d to i8***
%cq=load i8**,i8***%cp,align 8
%cr=load i8*,i8**%cq,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8*(i8*,i8*)**
%cu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ct,align 8
store i8*null,i8**%d,align 8
%cv=bitcast i8**%cq to i8***
%cw=load i8**,i8***%cv,align 8
%cx=load i8*,i8**%cw,align 8
%cy=load i8*,i8**%c,align 8
%cz=call fastcc i8*%cu(i8*inreg%cx,i8*inreg%cy)
store i8*%cz,i8**%d,align 8
%cA=call i8*@sml_alloc(i32 inreg 20)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
store i8*%cA,i8**%e,align 8
%cD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cA,i64 8
%cG=bitcast i8*%cF to i8**
store i8*null,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cA,i64 16
%cI=bitcast i8*%cH to i32*
store i32 3,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 28)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177304,i32*%cL,align 4
store i8*%cJ,i8**%d,align 8
%cM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cP=getelementptr inbounds i8,i8*%cJ,i64 8
%cQ=bitcast i8*%cP to i8**
store i8*%cO,i8**%cQ,align 8
%cR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cS=getelementptr inbounds i8,i8*%cJ,i64 16
%cT=bitcast i8*%cS to i8**
store i8*%cR,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cJ,i64 24
%cV=bitcast i8*%cU to i32*
store i32 7,i32*%cV,align 4
%cW=call i8*@sml_alloc(i32 inreg 20)#0
%cX=getelementptr inbounds i8,i8*%cW,i64 -4
%cY=bitcast i8*%cX to i32*
store i32 1342177296,i32*%cY,align 4
%cZ=bitcast i8*%cW to i64*
store i64 0,i64*%cZ,align 4
%c0=load i8*,i8**%d,align 8
%c1=getelementptr inbounds i8,i8*%cW,i64 8
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cW,i64 16
%c4=bitcast i8*%c3 to i32*
store i32 2,i32*%c4,align 4
ret i8*%cW
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1696(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8*%j to i8**
%p=load i8*,i8**%o,align 8
%q=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1695(i8*inreg%n,i8*inreg%p)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1697(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
%n=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*%q(i8*inreg%s,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gq,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=bitcast i8**%g to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%w(i8*inreg%y,i8*inreg%B)
%D=call fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1317(i8*inreg%C)
store i8*%D,i8**%d,align 8
%E=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%E,i8**%e,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%f,align 8
%I=load i8*,i8**%e,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%h,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1693 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1693 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%f,align 8
%ad=call i8*@sml_alloc(i32 inreg 12)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177288,i32*%af,align 4
store i8*%ad,i8**%i,align 8
%ag=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i32*
store i32 1,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1694 to void(...)*),void(...)**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1694 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 24
%au=bitcast i8*%at to i32*
store i32 -2147483647,i32*%au,align 4
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=call fastcc i8*%aa(i8*inreg%av,i8*inreg%ak)
%ax=getelementptr inbounds i8,i8*%aw,i64 16
%ay=bitcast i8*%ax to i8*(i8*,i8*)**
%az=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ay,align 8
%aA=bitcast i8*%aw to i8**
%aB=load i8*,i8**%aA,align 8
%aC=load i8**,i8***%z,align 8
%aD=load i8*,i8**%aC,align 8
%aE=call fastcc i8*%az(i8*inreg%aB,i8*inreg%aD)
%aF=call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1311(i8*inreg%aE)
store i8*%aF,i8**%f,align 8
%aG=call i8*@sml_alloc(i32 inreg 36)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177312,i32*%aI,align 4
store i8*%aG,i8**%h,align 8
%aJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 16
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aG,i64 24
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aG,i64 32
%aV=bitcast i8*%aU to i32*
store i32 15,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 28)#0
%aX=getelementptr inbounds i8,i8*%aW,i64 -4
%aY=bitcast i8*%aX to i32*
store i32 1342177304,i32*%aY,align 4
%aZ=load i8*,i8**%h,align 8
%a0=bitcast i8*%aW to i8**
store i8*%aZ,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aW,i64 8
%a2=bitcast i8*%a1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1695 to void(...)*),void(...)**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 16
%a4=bitcast i8*%a3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1695 to void(...)*),void(...)**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 24
%a6=bitcast i8*%a5 to i32*
store i32 -2147483647,i32*%a6,align 4
%a7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a8=getelementptr inbounds i8,i8*%a7,i64 8
%a9=bitcast i8*%a8 to i8**
%ba=load i8*,i8**%a9,align 8
store i8*%ba,i8**%c,align 8
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%d,align 8
%be=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 28)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177304,i32*%bn,align 4
%bo=load i8*,i8**%d,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1696 to void(...)*),void(...)**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1696 to void(...)*),void(...)**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 24
%bv=bitcast i8*%bu to i32*
store i32 -2147483647,i32*%bv,align 4
ret i8*%bl
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1698(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1699(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1240(i8*inreg%w)
store i8*%G,i8**%c,align 8
%H=load i8*,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%e,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1698 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1698 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1700(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg 1)
store i8*%i,i8**%c,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%j,i64 4
%n=bitcast i8*%m to i32*
store i32 0,i32*%n,align 1
%o=bitcast i8*%j to i32*
store i32 1,i32*%o,align 4
%p=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%j,i64 8
%r=bitcast i8*%q to i8**
store i8*%p,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%j,i64 16
%t=bitcast i8*%s to i32*
store i32 2,i32*%t,align 4
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%c,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=getelementptr inbounds i8,i8*%u,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%u,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=bitcast i8*%E to i32*
%G=getelementptr inbounds i8,i8*%E,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%E,i64 4
%J=bitcast i8*%I to i32*
store i32 0,i32*%J,align 1
store i32 2,i32*%F,align 4
%K=load i8*,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
ret i8*%E
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1702(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1703(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gr,i64 0,i32 2)to i8*),i8**%p,align 8
%q=getelementptr inbounds i8,i8*%j,i64 16
%r=bitcast i8*%q to i32*
store i32 3,i32*%r,align 4
%s=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1240(i8*inreg%j)
store i8*%s,i8**%c,align 8
%t=bitcast i8**%d to i8***
%u=load i8**,i8***%t,align 8
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%e,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1702 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1702 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1704(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1706(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1707(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=call fastcc i8*%t(i8*inreg%v,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%w,i8**%e,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__dropE_1244(i8*inreg%x)
store i8*%H,i8**%c,align 8
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%I,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%d,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%f,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
%ah=load i8*,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1706 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1706 to void(...)*),void(...)**%am,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 24
%ao=bitcast i8*%an to i32*
store i32 -2147483647,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
%aq=tail call fastcc i8*%O(i8*inreg%ap,i8*inreg%ae)
ret i8*%aq
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1708(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1709(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__takeE_1240(i8*inreg%w)
store i8*%G,i8**%c,align 8
%H=bitcast i8**%d to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%d,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%K,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call i8*@sml_alloc(i32 inreg 28)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177304,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1708 to void(...)*),void(...)**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1708 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%U,i64 24
%ae=bitcast i8*%ad to i32*
store i32 -2147483647,i32*%ae,align 4
ret i8*%U
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1710(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1712(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1713(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*%s(i8*inreg%u,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__dropE_1244(i8*inreg%w)
store i8*%G,i8**%c,align 8
%H=load i8*,i8**%d,align 8
%I=getelementptr inbounds i8,i8*%H,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%d,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%e,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1712 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1712 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1714(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1716(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%n
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%l to i8*
br label%n
n:
%o=phi i8*[%m,%i],[%a,%g]
%p=phi i8**[%l,%i],[%h,%g]
%q=phi i8*[%j,%i],[%b,%g]
%r=load i8*,i8**%p,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%o,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
store i8*null,i8**%c,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg%q)
%G=load i8*,i8**%d,align 8
%H=tail call fastcc i8*%u(i8*inreg%G,i8*inreg%F)
ret i8*%H
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1717(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLL7compare_1719(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLL7compare_1720(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLL7compare_1721(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLL7compare_1723(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*null,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%G,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32 20,i32*%U,align 4
%Z=load i8*,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLL7compare_1724(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%b to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%e,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i8**
store i8*%o,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%j,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 28)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177304,i32*%v,align 4
%w=load i8*,i8**%e,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1723 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1723 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 24
%D=bitcast i8*%C to i32*
store i32 -2147483647,i32*%D,align 4
ret i8*%t
}
define internal fastcc i8*@_SMLLL7compare_1725(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*null,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%G,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=bitcast i8*%T to i32*
%V=getelementptr inbounds i8,i8*%T,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=getelementptr inbounds i8,i8*%T,i64 4
%Y=bitcast i8*%X to i32*
store i32 0,i32*%Y,align 1
store i32 20,i32*%U,align 4
%Z=load i8*,i8**%e,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLL7compare_1726(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%b to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=call i8*@sml_alloc(i32 inreg 20)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177296,i32*%l,align 4
store i8*%j,i8**%e,align 8
%m=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i8**
store i8*%o,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%j,i64 16
%s=bitcast i8*%r to i32*
store i32 3,i32*%s,align 4
%t=call i8*@sml_alloc(i32 inreg 28)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177304,i32*%v,align 4
%w=load i8*,i8**%e,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1725 to void(...)*),void(...)**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1725 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 24
%D=bitcast i8*%C to i32*
store i32 -2147483647,i32*%D,align 4
ret i8*%t
}
define internal fastcc i8*@_SMLLL7compare_1727(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLL7compare_1728(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLL7compare_1729(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%a to i8**
br label%r
n:
call void@sml_check(i32 inreg%j)
%o=load i8*,i8**%c,align 8
%p=bitcast i8**%d to i8***
%q=load i8**,i8***%p,align 8
br label%r
r:
%s=phi i8**[%q,%n],[%m,%l]
%t=phi i8*[%o,%n],[%b,%l]
%u=load i8*,i8**%s,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg%t)
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*null,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8*(i8*,i8*)**
%N=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%M,align 8
%O=bitcast i8*%K to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%e,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
store i8*%Q,i8**%f,align 8
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
%aa=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1727 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1727 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 24
%ah=bitcast i8*%ag to i32*
store i32 -2147483647,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=call fastcc i8*%N(i8*inreg%ai,i8*inreg%X)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%d,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 8
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%am(i8*inreg%ao,i8*inreg%as)
store i8*%at,i8**%e,align 8
%au=call i8*@sml_alloc(i32 inreg 28)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177304,i32*%aw,align 4
store i8*%au,i8**%f,align 8
%ax=bitcast i8*%au to i64*
store i64 0,i64*%ax,align 4
%ay=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=load i8*,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%au,i64 16
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%au,i64 24
%aF=bitcast i8*%aE to i32*
store i32 6,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
store i8*%aG,i8**%e,align 8
%aJ=getelementptr inbounds i8,i8*%aG,i64 4
%aK=bitcast i8*%aJ to i32*
store i32 0,i32*%aK,align 1
%aL=bitcast i8*%aG to i32*
store i32 4,i32*%aL,align 4
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 2,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
store i8*%aR,i8**%h,align 8
%aU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aR,i64 8
%aX=bitcast i8*%aW to i8**
store i8*null,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
%a0=load i8*,i8**%d,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8**
%a3=load i8*,i8**%a2,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 16
%a5=bitcast i8*%a4 to i8*(i8*,i8*)**
%a6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a5,align 8
%a7=bitcast i8*%a3 to i8**
%a8=load i8*,i8**%a7,align 8
%a9=load i8*,i8**%c,align 8
%ba=call fastcc i8*%a6(i8*inreg%a8,i8*inreg%a9)
store i8*%ba,i8**%e,align 8
%bb=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8*(i8*,i8*)**
%be=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bd,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%f,align 8
%bh=call i8*@sml_alloc(i32 inreg 12)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177288,i32*%bj,align 4
store i8*%bh,i8**%i,align 8
%bk=load i8*,i8**%c,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to i32*
store i32 1,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 28)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177304,i32*%bq,align 4
%br=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bo,i64 8
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1728 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bo,i64 16
%bw=bitcast i8*%bv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1728 to void(...)*),void(...)**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bo,i64 24
%by=bitcast i8*%bx to i32*
store i32 -2147483647,i32*%by,align 4
%bz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bA=call fastcc i8*%be(i8*inreg%bz,i8*inreg%bo)
%bB=getelementptr inbounds i8,i8*%bA,i64 16
%bC=bitcast i8*%bB to i8*(i8*,i8*)**
%bD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bC,align 8
%bE=bitcast i8*%bA to i8**
%bF=load i8*,i8**%bE,align 8
%bG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bH=getelementptr inbounds i8,i8*%bG,i64 24
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
%bK=call fastcc i8*%bD(i8*inreg%bF,i8*inreg%bJ)
store i8*%bK,i8**%d,align 8
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177296,i32*%bN,align 4
store i8*%bL,i8**%f,align 8
%bO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=load i8*,i8**%c,align 8
%bR=getelementptr inbounds i8,i8*%bL,i64 8
%bS=bitcast i8*%bR to i8**
store i8*%bQ,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bL,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%d,align 8
%bY=getelementptr inbounds i8,i8*%bV,i64 4
%bZ=bitcast i8*%bY to i32*
store i32 0,i32*%bZ,align 1
%b0=bitcast i8*%bV to i32*
store i32 15,i32*%b0,align 4
%b1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 2,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 20)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177296,i32*%b8,align 4
store i8*%b6,i8**%f,align 8
%b9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to i8**
store i8*null,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to i32*
store i32 3,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 28)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177304,i32*%ch,align 4
store i8*%cf,i8**%d,align 8
%ci=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=load i8*,i8**%c,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 16
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cf,i64 24
%cr=bitcast i8*%cq to i32*
store i32 7,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177296,i32*%cu,align 4
store i8*%cs,i8**%e,align 8
%cv=bitcast i8*%cs to i64*
store i64 0,i64*%cv,align 4
%cw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to i32*
store i32 2,i32*%cA,align 4
%cB=call i8*@sml_alloc(i32 inreg 28)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177304,i32*%cD,align 4
store i8*%cB,i8**%d,align 8
%cE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=load i8*,i8**%c,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cB,i64 24
%cN=bitcast i8*%cM to i32*
store i32 7,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
store i8*%cO,i8**%e,align 8
%cR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cO,i64 8
%cU=bitcast i8*%cT to i8**
store i8*null,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cO,i64 16
%cW=bitcast i8*%cV to i32*
store i32 3,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 36)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177312,i32*%cZ,align 4
store i8*%cX,i8**%d,align 8
%c0=getelementptr inbounds i8,i8*%cX,i64 20
%c1=bitcast i8*%c0 to i32*
store i32 0,i32*%c1,align 1
%c2=bitcast i8*%cX to i8**
%c3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
store i8*%c3,i8**%c2,align 8
%c4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c5=getelementptr inbounds i8,i8*%cX,i64 8
%c6=bitcast i8*%c5 to i8**
store i8*%c4,i8**%c6,align 8
%c7=getelementptr inbounds i8,i8*%cX,i64 16
%c8=bitcast i8*%c7 to i32*
store i32 2,i32*%c8,align 4
%c9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%da=getelementptr inbounds i8,i8*%cX,i64 24
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=getelementptr inbounds i8,i8*%cX,i64 32
%dd=bitcast i8*%dc to i32*
store i32 11,i32*%dd,align 4
%de=call i8*@sml_alloc(i32 inreg 20)#0
%df=bitcast i8*%de to i32*
%dg=getelementptr inbounds i8,i8*%de,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
%di=getelementptr inbounds i8,i8*%de,i64 4
%dj=bitcast i8*%di to i32*
store i32 0,i32*%dj,align 1
store i32 1,i32*%df,align 4
%dk=load i8*,i8**%d,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 8
%dm=bitcast i8*%dl to i8**
store i8*%dk,i8**%dm,align 8
%dn=getelementptr inbounds i8,i8*%de,i64 16
%do=bitcast i8*%dn to i32*
store i32 2,i32*%do,align 4
ret i8*%de
}
define internal fastcc i8*@_SMLLL7compare_1730(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%f,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%a,%q]
%r=getelementptr inbounds i8,i8*%p,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 12)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177288,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i32*
store i32 1,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1719 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1719 to void(...)*),void(...)**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 24
%L=bitcast i8*%K to i32*
store i32 -2147483647,i32*%L,align 4
%M=load i8*,i8**%f,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 12)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177288,i32*%S,align 4
store i8*%Q,i8**%e,align 8
%T=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i8*%X,i8**%d,align 8
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1720 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1720 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 24
%ah=bitcast i8*%ag to i32*
store i32 -2147483647,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 20)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
store i8*%ai,i8**%e,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i8**
store i8*null,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ai,i64 16
%aq=bitcast i8*%ap to i32*
store i32 3,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%d,align 8
%au=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
%aH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aI=call fastcc i8*%aE(i8*inreg%aG,i8*inreg%aH)
store i8*%aI,i8**%d,align 8
%aJ=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=call fastcc i8*%aM(i8*inreg%aO,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gw,i64 0,i32 2)to i8*))
%aQ=getelementptr inbounds i8,i8*%aP,i64 16
%aR=bitcast i8*%aQ to i8*(i8*,i8*)**
%aS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aR,align 8
%aT=bitcast i8*%aP to i8**
%aU=load i8*,i8**%aT,align 8
%aV=bitcast i8**%f to i8***
%aW=load i8**,i8***%aV,align 8
%aX=load i8*,i8**%aW,align 8
%aY=call fastcc i8*%aS(i8*inreg%aU,i8*inreg%aX)
%aZ=call fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1317(i8*inreg%aY)
store i8*%aZ,i8**%e,align 8
%a0=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%h,align 8
%a6=load i8*,i8**%f,align 8
%a7=getelementptr inbounds i8,i8*%a6,i64 8
%a8=bitcast i8*%a7 to i8**
%a9=load i8*,i8**%a8,align 8
store i8*%a9,i8**%g,align 8
%ba=call i8*@sml_alloc(i32 inreg 12)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177288,i32*%bc,align 4
store i8*%ba,i8**%i,align 8
%bd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%be=bitcast i8*%ba to i8**
store i8*%bd,i8**%be,align 8
%bf=getelementptr inbounds i8,i8*%ba,i64 8
%bg=bitcast i8*%bf to i32*
store i32 1,i32*%bg,align 4
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
%bk=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1724 to void(...)*),void(...)**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 16
%bp=bitcast i8*%bo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1724 to void(...)*),void(...)**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 24
%br=bitcast i8*%bq to i32*
store i32 -2147483647,i32*%br,align 4
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=call fastcc i8*%a3(i8*inreg%bs,i8*inreg%bh)
%bu=getelementptr inbounds i8,i8*%bt,i64 16
%bv=bitcast i8*%bu to i8*(i8*,i8*)**
%bw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bv,align 8
%bx=bitcast i8*%bt to i8**
%by=load i8*,i8**%bx,align 8
%bz=load i8**,i8***%aV,align 8
%bA=load i8*,i8**%bz,align 8
%bB=call fastcc i8*%bw(i8*inreg%by,i8*inreg%bA)
%bC=call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1311(i8*inreg%bB)
store i8*%bC,i8**%g,align 8
%bD=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bE=getelementptr inbounds i8,i8*%bD,i64 16
%bF=bitcast i8*%bE to i8*(i8*,i8*)**
%bG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bF,align 8
%bH=bitcast i8*%bD to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%i,align 8
%bJ=load i8*,i8**%f,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%h,align 8
%bN=call i8*@sml_alloc(i32 inreg 12)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177288,i32*%bP,align 4
store i8*%bN,i8**%j,align 8
%bQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to i32*
store i32 1,i32*%bT,align 4
%bU=call i8*@sml_alloc(i32 inreg 28)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177304,i32*%bW,align 4
%bX=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1726 to void(...)*),void(...)**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 16
%b2=bitcast i8*%b1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1726 to void(...)*),void(...)**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bU,i64 24
%b4=bitcast i8*%b3 to i32*
store i32 -2147483647,i32*%b4,align 4
%b5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b6=call fastcc i8*%bG(i8*inreg%b5,i8*inreg%bU)
%b7=getelementptr inbounds i8,i8*%b6,i64 16
%b8=bitcast i8*%b7 to i8*(i8*,i8*)**
%b9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b8,align 8
%ca=bitcast i8*%b6 to i8**
%cb=load i8*,i8**%ca,align 8
%cc=load i8**,i8***%aV,align 8
store i8*null,i8**%f,align 8
%cd=load i8*,i8**%cc,align 8
%ce=call fastcc i8*%b9(i8*inreg%cb,i8*inreg%cd)
%cf=call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1311(i8*inreg%ce)
store i8*%cf,i8**%f,align 8
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
store i8*%cg,i8**%h,align 8
%cj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ck=bitcast i8*%cg to i8**
store i8*%cj,i8**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*null,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 3,i32*%co,align 4
%cp=call i8*@sml_alloc(i32 inreg 20)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177296,i32*%cr,align 4
store i8*%cp,i8**%f,align 8
%cs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ct=bitcast i8*%cp to i8**
store i8*%cs,i8**%ct,align 8
%cu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cv=getelementptr inbounds i8,i8*%cp,i64 8
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cp,i64 16
%cy=bitcast i8*%cx to i32*
store i32 3,i32*%cy,align 4
%cz=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%cA=getelementptr inbounds i8,i8*%cz,i64 16
%cB=bitcast i8*%cA to i8*(i8*,i8*)**
%cC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cB,align 8
%cD=bitcast i8*%cz to i8**
%cE=load i8*,i8**%cD,align 8
%cF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cG=call fastcc i8*%cC(i8*inreg%cE,i8*inreg%cF)
store i8*%cG,i8**%f,align 8
%cH=call i8*@sml_alloc(i32 inreg 36)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177312,i32*%cJ,align 4
store i8*%cH,i8**%g,align 8
%cK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cN=getelementptr inbounds i8,i8*%cH,i64 8
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cQ=getelementptr inbounds i8,i8*%cH,i64 16
%cR=bitcast i8*%cQ to i8**
store i8*%cP,i8**%cR,align 8
%cS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cT=getelementptr inbounds i8,i8*%cH,i64 24
%cU=bitcast i8*%cT to i8**
store i8*%cS,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cH,i64 32
%cW=bitcast i8*%cV to i32*
store i32 15,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 28)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177304,i32*%cZ,align 4
%c0=load i8*,i8**%g,align 8
%c1=bitcast i8*%cX to i8**
store i8*%c0,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cX,i64 8
%c3=bitcast i8*%c2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1729 to void(...)*),void(...)**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cX,i64 16
%c5=bitcast i8*%c4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1729 to void(...)*),void(...)**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cX,i64 24
%c7=bitcast i8*%c6 to i32*
store i32 -2147483647,i32*%c7,align 4
ret i8*%cX
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1731(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1732(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bc,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%c,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%g,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%e,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%f,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 2,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%h,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%c,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%e,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%f,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ax,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%h,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*null,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%e,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
%a8=bitcast i8*%a3 to i32*
store i32 10,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%h,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%c,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=bitcast i8*%bA to i64*
store i64 0,i64*%bD,align 4
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
%bJ=bitcast i8**%d to i8***
%bK=load i8**,i8***%bJ,align 8
%bL=load i8*,i8**%bK,align 8
%bM=getelementptr inbounds i8,i8*%bL,i64 16
%bN=bitcast i8*%bM to i8*(i8*,i8*)**
%bO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bN,align 8
store i8*null,i8**%d,align 8
%bP=bitcast i8**%bK to i8***
%bQ=load i8**,i8***%bP,align 8
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%c,align 8
%bT=call fastcc i8*%bO(i8*inreg%bR,i8*inreg%bS)
store i8*%bT,i8**%d,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%e,align 8
%bX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*null,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 28)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177304,i32*%b5,align 4
store i8*%b3,i8**%d,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b3,i64 24
%cf=bitcast i8*%ce to i32*
store i32 7,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
%cj=bitcast i8*%cg to i64*
store i64 0,i64*%cj,align 4
%ck=load i8*,i8**%d,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 2,i32*%co,align 4
ret i8*%cg
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1733(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%k,i8**%d,align 8
%l=bitcast i8**%e to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%e,align 8
%o=call i8*@sml_alloc(i32 inreg 12)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177288,i32*%q,align 4
store i8*%o,i8**%f,align 8
%r=load i8*,i8**%d,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to i32*
store i32 1,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 28)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177304,i32*%x,align 4
%y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1731 to void(...)*),void(...)**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1731 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 24
%F=bitcast i8*%E to i32*
store i32 -2147483647,i32*%F,align 4
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=call fastcc i8*@_SMLLL7compare_1730(i8*inreg%G,i8*inreg%v)
store i8*%H,i8**%e,align 8
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%I,i64 24
%U=bitcast i8*%T to i32*
store i32 7,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1732 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1732 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1734(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8**%c to i8***
%x=load i8**,i8***%w,align 8
store i8*null,i8**%c,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%t(i8*inreg%v,i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1737(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1738(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
store i8*null,i8**%d,align 8
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=bitcast i8**%c to i8***
%r=load i8**,i8***%q,align 8
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1737 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1737 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%n(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%S,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%P(i8*inreg%R,i8*inreg%V)
store i8*%W,i8**%d,align 8
%X=load i8**,i8***%q,align 8
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%e,align 8
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=bitcast i8*%aj to i32*
%al=getelementptr inbounds i8,i8*%aj,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177296,i32*%am,align 4
%an=getelementptr inbounds i8,i8*%aj,i64 4
%ao=bitcast i8*%an to i32*
store i32 0,i32*%ao,align 1
store i32 15,i32*%ak,align 4
%ap=load i8*,i8**%e,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i32*
store i32 2,i32*%at,align 4
ret i8*%aj
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1739(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1736 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1736 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%c,align 8
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%d,align 8
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%e,align 8
%aa=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%X,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 28)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177304,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1738 to void(...)*),void(...)**%an,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 16
%ap=bitcast i8*%ao to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1738 to void(...)*),void(...)**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i32*
store i32 -2147483647,i32*%ar,align 4
ret i8*%ah
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1740(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1741(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%f to i8***
%o=load i8**,i8***%n,align 8
%p=bitcast i8**%o to i8*
br label%q
q:
%r=phi i8*[%p,%m],[%a,%k]
%s=phi i8**[%o,%m],[%l,%k]
%t=load i8*,i8**%s,align 8
%u=icmp eq i8*%t,null
br i1%u,label%ax,label%v
v:
%w=bitcast i8*%t to i32*
%x=load i32,i32*%w,align 4
%y=icmp eq i32%x,0
br i1%y,label%ax,label%z
z:
%A=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%A,i8**%d,align 8
%B=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%B,i8**%e,align 8
%C=load i8*,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%C,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%h,align 8
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%G,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%h,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1730 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7compare_1730 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 12)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177288,i32*%ag,align 4
store i8*%ae,i8**%d,align 8
%ah=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i32*
store i32 1,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1733 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1733 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
%aw=load i8*,i8**%f,align 8
br label%ax
ax:
%ay=phi i8*[%r,%q],[%aw,%z],[%r,%v]
%az=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gx,i64 0,i32 2)to i8*),%q],[%al,%z],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gv,i64 0,i32 2)to i8*),%v]
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%g,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 8
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
store i8*%aH,i8**%d,align 8
%aI=getelementptr inbounds i8,i8*%ay,i64 16
%aJ=bitcast i8*%aI to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%e,align 8
%aL=call i8*@sml_alloc(i32 inreg 20)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
store i8*%aL,i8**%h,align 8
%aO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aL,i64 16
%aU=bitcast i8*%aT to i32*
store i32 3,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
%aY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1739 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1739 to void(...)*),void(...)**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 -2147483647,i32*%a5,align 4
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%aV,i8*inreg%a6)
%a8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a9=call fastcc i8*%aC(i8*inreg%a8,i8*inreg%a7)
store i8*%a9,i8**%c,align 8
%ba=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bb=getelementptr inbounds i8,i8*%ba,i64 24
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
store i8*%bd,i8**%d,align 8
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%e,align 8
%bh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bk=getelementptr inbounds i8,i8*%be,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%be,i64 16
%bn=bitcast i8*%bm to i32*
store i32 3,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 28)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177304,i32*%bq,align 4
%br=load i8*,i8**%e,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bo,i64 8
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1740 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bo,i64 16
%bw=bitcast i8*%bv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1740 to void(...)*),void(...)**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bo,i64 24
%by=bitcast i8*%bx to i32*
store i32 -2147483647,i32*%by,align 4
ret i8*%bo
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1742(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1744(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1746(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1747(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i8**
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%j],[%i,%h]
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%o)
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__filterE_1232(i8*inreg%p,i8*inreg%q)
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%e,align 8
%z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
%J=load i8*,i8**%e,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%G,i64 8
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1746 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%G,i64 16
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1746 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 24
%Q=bitcast i8*%P to i32*
store i32 -2147483647,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1748(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLL1f_1750(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%d,align 8
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%b,%o]
%p=phi i8*[%k,%j],[%a,%o]
%q=getelementptr inbounds i8,i8*%p,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=getelementptr inbounds i8,i8*%p,i64 16
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg%n)
store i8*%D,i8**%d,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%g,align 8
%H=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%f,align 8
%U=getelementptr inbounds i8,i8*%R,i64 4
%V=bitcast i8*%U to i32*
store i32 0,i32*%V,align 1
%W=bitcast i8*%R to i32*
store i32 20,i32*%W,align 4
%X=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
store i8*%ac,i8**%d,align 8
%af=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 16
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ac,i64 24
%ao=bitcast i8*%an to i32*
store i32 7,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=bitcast i8*%ap to i32*
%ar=getelementptr inbounds i8,i8*%ap,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
%at=getelementptr inbounds i8,i8*%ap,i64 4
%au=bitcast i8*%at to i32*
store i32 0,i32*%au,align 1
store i32 20,i32*%aq,align 4
%av=load i8*,i8**%d,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 16
%az=bitcast i8*%ay to i32*
store i32 2,i32*%az,align 4
ret i8*%ap
}
define internal fastcc i8*@_SMLLL1f_1751(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1750 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1750 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLL1f_1752(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%f,align 8
%v=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i64 0,i32 2)to i8*))
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%c,align 8
%C=call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
store i8*%C,i8**%g,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%h,align 8
%G=getelementptr inbounds i8,i8*%D,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
%I=bitcast i8*%D to i32*
store i32 25,i32*%I,align 4
%J=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%K=getelementptr inbounds i8,i8*%D,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%D,i64 16
%N=bitcast i8*%M to i32*
store i32 2,i32*%N,align 4
%O=bitcast i8**%d to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
store i8*null,i8**%d,align 8
%U=bitcast i8**%P to i8***
%V=load i8**,i8***%U,align 8
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%c,align 8
%Y=call fastcc i8*%T(i8*inreg%W,i8*inreg%X)
store i8*%Y,i8**%d,align 8
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%g,align 8
%ac=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to i8**
store i8*null,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
%ai=call i8*@sml_alloc(i32 inreg 28)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177304,i32*%ak,align 4
store i8*%ai,i8**%d,align 8
%al=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ai,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=load i8*,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%ai,i64 16
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ai,i64 24
%au=bitcast i8*%at to i32*
store i32 7,i32*%au,align 4
%av=call i8*@sml_alloc(i32 inreg 20)#0
%aw=getelementptr inbounds i8,i8*%av,i64 -4
%ax=bitcast i8*%aw to i32*
store i32 1342177296,i32*%ax,align 4
store i8*%av,i8**%g,align 8
%ay=bitcast i8*%av to i64*
store i64 0,i64*%ay,align 4
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%av,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%av,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 28)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177304,i32*%aG,align 4
store i8*%aE,i8**%d,align 8
%aH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=load i8*,i8**%c,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aE,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 7,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177296,i32*%aT,align 4
store i8*%aR,i8**%f,align 8
%aU=getelementptr inbounds i8,i8*%aR,i64 4
%aV=bitcast i8*%aU to i32*
store i32 0,i32*%aV,align 1
%aW=bitcast i8*%aR to i32*
store i32 20,i32*%aW,align 4
%aX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 2,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
store i8*%a2,i8**%d,align 8
%a5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a8=getelementptr inbounds i8,i8*%a2,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 16
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a2,i64 24
%be=bitcast i8*%bd to i32*
store i32 7,i32*%be,align 4
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=bitcast i8*%bf to i32*
%bh=getelementptr inbounds i8,i8*%bf,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=getelementptr inbounds i8,i8*%bf,i64 4
%bk=bitcast i8*%bj to i32*
store i32 0,i32*%bk,align 1
store i32 20,i32*%bg,align 4
%bl=load i8*,i8**%d,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 8
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bf,i64 16
%bp=bitcast i8*%bo to i32*
store i32 2,i32*%bp,align 4
ret i8*%bf
}
define internal fastcc i8*@_SMLLL1f_1753(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN11RecordLabel3Map4findE(i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%g,align 8
%z=bitcast i8**%e to i8***
%A=load i8**,i8***%z,align 8
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177296,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=bitcast i8*%C to i8**
store i8*%F,i8**%G,align 8
%H=load i8*,i8**%c,align 8
%I=getelementptr inbounds i8,i8*%C,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%C,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%N=call fastcc i8*%w(i8*inreg%M,i8*inreg%C)
%O=icmp eq i8*%N,null
br i1%O,label%aH,label%P
P:
%Q=bitcast i8*%N to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%f,align 8
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%S)
%ad=icmp eq i32%ac,0
br i1%ad,label%aH,label%ae
ae:
%af=load i8*,i8**%e,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 8
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 28)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
store i8*%aj,i8**%f,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%aj,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
%az=load i8*,i8**%f,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1752 to void(...)*),void(...)**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 16
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1752 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 24
%aG=bitcast i8*%aF to i32*
store i32 -2147483647,i32*%aG,align 4
ret i8*%aw
aH:
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%f,align 8
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 28)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177304,i32*%aU,align 4
%aV=load i8*,i8**%f,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1751 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aS,i64 16
%a0=bitcast i8*%aZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1751 to void(...)*),void(...)**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aS,i64 24
%a2=bitcast i8*%a1 to i32*
store i32 -2147483647,i32*%a2,align 4
%a3=load i8*,i8**%e,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
%a7=tail call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%aS,i8*inreg%a6)
ret i8*%a7
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%m,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=bitcast i8*%m to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%c,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K=call fastcc i8*@_SMLLL1f_1753(i8*inreg%J,i8*inreg%z)
store i8*%K,i8**%e,align 8
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%L,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
ret i8*%V
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1755(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1756(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1755 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1755 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1757(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=call fastcc i8*@_SMLFN11RecordLabel3Set5foldrE(i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%g,align 8
%D=bitcast i8**%f to i8***
%E=load i8**,i8***%D,align 8
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%f,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%h,align 8
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1754 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1754 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
%ab=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ac=call fastcc i8*%A(i8*inreg%ab,i8*inreg%Q)
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*%af(i8*inreg%ah,i8*inreg null)
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8*(i8*,i8*)**
%al=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak,align 8
%am=bitcast i8*%ai to i8**
%an=load i8*,i8**%am,align 8
%ao=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ap=call fastcc i8*%al(i8*inreg%an,i8*inreg%ao)
store i8*%ap,i8**%d,align 8
%aq=call i8*@sml_alloc(i32 inreg 12)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177288,i32*%as,align 4
store i8*%aq,i8**%f,align 8
%at=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i32*
store i32 1,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%g,align 8
%aA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1756 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 16
%aF=bitcast i8*%aE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1756 to void(...)*),void(...)**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 24
%aH=bitcast i8*%aG to i32*
store i32 -2147483647,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%d,align 8
%aL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=load i8*,i8**%d,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%e,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aS,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
ret i8*%aS
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1758(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1759(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1758 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1758 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1760(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%d,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1753 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_1753 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=bitcast i8**%d to i8***
%M=load i8**,i8***%L,align 8
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%c,align 8
%O=getelementptr inbounds i8*,i8**%M,i64 1
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%d,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 8
%X=bitcast i8*%W to i8**
store i8*%V,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%Q,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%Q)
store i8*%aa,i8**%c,align 8
%ab=call fastcc i8*@_SMLFN11RecordLabel3Map6foldriE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
store i8*%ag,i8**%d,align 8
%ah=call i8*@sml_alloc(i32 inreg 12)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177288,i32*%aj,align 4
store i8*%ah,i8**%e,align 8
%ak=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%al=bitcast i8*%ah to i8**
store i8*%ak,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ah,i64 8
%an=bitcast i8*%am to i32*
store i32 1,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 28)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177304,i32*%aq,align 4
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1757 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 16
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1757 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%ao,i64 24
%ay=bitcast i8*%ax to i32*
store i32 -2147483647,i32*%ay,align 4
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=call fastcc i8*%ae(i8*inreg%az,i8*inreg%ao)
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8*(i8*,i8*)**
%aD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aC,align 8
%aE=bitcast i8*%aA to i8**
%aF=load i8*,i8**%aE,align 8
%aG=call fastcc i8*%aD(i8*inreg%aF,i8*inreg null)
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
%aM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aN=call fastcc i8*%aJ(i8*inreg%aL,i8*inreg%aM)
store i8*%aN,i8**%c,align 8
%aO=call i8*@sml_alloc(i32 inreg 12)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177288,i32*%aQ,align 4
store i8*%aO,i8**%d,align 8
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to i32*
store i32 1,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 28)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177304,i32*%aX,align 4
%aY=load i8*,i8**%d,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1759 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1759 to void(...)*),void(...)**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 24
%a5=bitcast i8*%a4 to i32*
store i32 -2147483647,i32*%a5,align 4
ret i8*%aV
}
define internal fastcc i8*@_SMLLL3cmp_1761(i8*inreg%a)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1763(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1764(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
store i8*null,i8**%d,align 8
%l=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%j)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8**%c to i8***
%s=load i8**,i8***%r,align 8
%t=load i8*,i8**%s,align 8
%u=tail call fastcc i8*%o(i8*inreg%q,i8*inreg%t)
ret i8*%u
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1765(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bl,i64 0,i32 2)to i8*))
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=load i8*,i8**%c,align 8
%t=call fastcc i8*%p(i8*inreg%r,i8*inreg%s)
store i8*%t,i8**%e,align 8
%u=call i8*@sml_alloc(i32 inreg 20)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177296,i32*%w,align 4
store i8*%u,i8**%g,align 8
%x=getelementptr inbounds i8,i8*%u,i64 4
%y=bitcast i8*%x to i32*
store i32 0,i32*%y,align 1
%z=bitcast i8*%u to i32*
store i32 25,i32*%z,align 4
%A=load i8*,i8**%e,align 8
%B=getelementptr inbounds i8,i8*%u,i64 8
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 16
%E=bitcast i8*%D to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%d,align 8
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%e,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%f,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=getelementptr inbounds i8,i8*%S,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
%X=bitcast i8*%S to i32*
store i32 2,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%S,i64 16
%ac=bitcast i8*%ab to i32*
store i32 2,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%h,align 8
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=load i8*,i8**%d,align 8
%an=getelementptr inbounds i8,i8*%am,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%c,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
store i8*%aw,i8**%e,align 8
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
store i8*%ax,i8**%f,align 8
%aA=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ax,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%h,align 8
%aN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*null,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%e,align 8
%aW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%c,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%a3,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
%a8=bitcast i8*%a3 to i32*
store i32 10,i32*%a8,align 4
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i32*
store i32 2,i32*%bd,align 4
%be=call i8*@sml_alloc(i32 inreg 20)#0
%bf=getelementptr inbounds i8,i8*%be,i64 -4
%bg=bitcast i8*%bf to i32*
store i32 1342177296,i32*%bg,align 4
store i8*%be,i8**%h,align 8
%bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bi=bitcast i8*%be to i8**
store i8*%bh,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%be,i64 8
%bk=bitcast i8*%bj to i8**
store i8*null,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%be,i64 16
%bm=bitcast i8*%bl to i32*
store i32 3,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
store i8*%bn,i8**%e,align 8
%bq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%c,align 8
%bw=getelementptr inbounds i8,i8*%bn,i64 16
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bn,i64 24
%bz=bitcast i8*%by to i32*
store i32 7,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
store i8*%bA,i8**%f,align 8
%bD=bitcast i8*%bA to i64*
store i64 0,i64*%bD,align 4
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bA,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bA,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
%bJ=load i8*,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
%bN=getelementptr inbounds i8,i8*%bM,i64 16
%bO=bitcast i8*%bN to i8*(i8*,i8*)**
%bP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bO,align 8
%bQ=bitcast i8*%bM to i8**
%bR=load i8*,i8**%bQ,align 8
%bS=load i8*,i8**%c,align 8
%bT=call fastcc i8*%bP(i8*inreg%bR,i8*inreg%bS)
store i8*%bT,i8**%e,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%g,align 8
%bX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bY=bitcast i8*%bU to i8**
store i8*%bX,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bU,i64 8
%b0=bitcast i8*%bZ to i8**
store i8*null,i8**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 16
%b2=bitcast i8*%b1 to i32*
store i32 3,i32*%b2,align 4
%b3=call i8*@sml_alloc(i32 inreg 28)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177304,i32*%b5,align 4
store i8*%b3,i8**%e,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%c,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b3,i64 24
%cf=bitcast i8*%ce to i32*
store i32 7,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
store i8*%cg,i8**%f,align 8
%cj=bitcast i8*%cg to i64*
store i64 0,i64*%cj,align 4
%ck=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cl=getelementptr inbounds i8,i8*%cg,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 16
%co=bitcast i8*%cn to i32*
store i32 2,i32*%co,align 4
%cp=bitcast i8**%d to i8***
%cq=load i8**,i8***%cp,align 8
%cr=load i8*,i8**%cq,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8*(i8*,i8*)**
%cu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ct,align 8
store i8*null,i8**%d,align 8
%cv=bitcast i8**%cq to i8***
%cw=load i8**,i8***%cv,align 8
%cx=load i8*,i8**%cw,align 8
%cy=load i8*,i8**%c,align 8
%cz=call fastcc i8*%cu(i8*inreg%cx,i8*inreg%cy)
store i8*%cz,i8**%d,align 8
%cA=call i8*@sml_alloc(i32 inreg 20)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
store i8*%cA,i8**%e,align 8
%cD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cA,i64 8
%cG=bitcast i8*%cF to i8**
store i8*null,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cA,i64 16
%cI=bitcast i8*%cH to i32*
store i32 3,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 28)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177304,i32*%cL,align 4
store i8*%cJ,i8**%d,align 8
%cM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cP=getelementptr inbounds i8,i8*%cJ,i64 8
%cQ=bitcast i8*%cP to i8**
store i8*%cO,i8**%cQ,align 8
%cR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cS=getelementptr inbounds i8,i8*%cJ,i64 16
%cT=bitcast i8*%cS to i8**
store i8*%cR,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cJ,i64 24
%cV=bitcast i8*%cU to i32*
store i32 7,i32*%cV,align 4
%cW=call i8*@sml_alloc(i32 inreg 20)#0
%cX=getelementptr inbounds i8,i8*%cW,i64 -4
%cY=bitcast i8*%cX to i32*
store i32 1342177296,i32*%cY,align 4
%cZ=bitcast i8*%cW to i64*
store i64 0,i64*%cZ,align 4
%c0=load i8*,i8**%d,align 8
%c1=getelementptr inbounds i8,i8*%cW,i64 8
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cW,i64 16
%c4=bitcast i8*%c3 to i32*
store i32 2,i32*%c4,align 4
ret i8*%cW
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1766(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1767(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%h,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%h,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%a,%r]
%s=getelementptr inbounds i8,i8*%q,i64 24
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=icmp eq i8*%u,null
br i1%v,label%w,label%y
w:
%x=bitcast i8*%q to i8**
br label%ad
y:
%z=bitcast i8*%u to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 8
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%f,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%f,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1747 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1747 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
%ab=bitcast i8**%h to i8***
%ac=load i8**,i8***%ab,align 8
br label%ad
ad:
%ae=phi i8**[%ac,%y],[%x,%w]
%af=phi i8*[%Q,%y],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gA,i64 0,i32 2)to i8*),%w]
store i8*%af,i8**%d,align 8
%ag=load i8*,i8**%ae,align 8
store i8*%ag,i8**%e,align 8
%ah=getelementptr inbounds i8*,i8**%ae,i64 4
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%f,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%g,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 28)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177304,i32*%av,align 4
store i8*%at,i8**%i,align 8
%aw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1760 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 16
%aB=bitcast i8*%aA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1760 to void(...)*),void(...)**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 24
%aD=bitcast i8*%aC to i32*
store i32 -2147483647,i32*%aD,align 4
%aE=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gB,i64 0,i32 2)to i8*))
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8*(i8*,i8*)**
%aN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aM,align 8
%aO=bitcast i8*%aK to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=load i8*,i8**%h,align 8
%aR=getelementptr inbounds i8,i8*%aQ,i64 8
%aS=bitcast i8*%aR to i8**
%aT=load i8*,i8**%aS,align 8
%aU=call fastcc i8*%aN(i8*inreg%aP,i8*inreg%aT)
%aV=call fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1317(i8*inreg%aU)
store i8*%aV,i8**%e,align 8
%aW=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%aW,i8**%f,align 8
%aX=call i8*@sml_alloc(i32 inreg 12)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177288,i32*%aZ,align 4
store i8*%aX,i8**%g,align 8
%a0=load i8*,i8**%f,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 28)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177304,i32*%a6,align 4
store i8*%a4,i8**%j,align 8
%a7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1763 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1763 to void(...)*),void(...)**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 24
%be=bitcast i8*%bd to i32*
store i32 -2147483647,i32*%be,align 4
%bf=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bg=getelementptr inbounds i8,i8*%bf,i64 16
%bh=bitcast i8*%bg to i8*(i8*,i8*)**
%bi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bh,align 8
%bj=bitcast i8*%bf to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%g,align 8
%bl=call i8*@sml_alloc(i32 inreg 12)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177288,i32*%bn,align 4
store i8*%bl,i8**%k,align 8
%bo=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i32*
store i32 1,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 28)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177304,i32*%bu,align 4
%bv=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bs,i64 8
%by=bitcast i8*%bx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1764 to void(...)*),void(...)**%by,align 8
%bz=getelementptr inbounds i8,i8*%bs,i64 16
%bA=bitcast i8*%bz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1764 to void(...)*),void(...)**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bs,i64 24
%bC=bitcast i8*%bB to i32*
store i32 -2147483647,i32*%bC,align 4
%bD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bE=call fastcc i8*%bi(i8*inreg%bD,i8*inreg%bs)
%bF=getelementptr inbounds i8,i8*%bE,i64 16
%bG=bitcast i8*%bF to i8*(i8*,i8*)**
%bH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bG,align 8
%bI=bitcast i8*%bE to i8**
%bJ=load i8*,i8**%bI,align 8
%bK=load i8*,i8**%h,align 8
%bL=getelementptr inbounds i8,i8*%bK,i64 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
%bO=call fastcc i8*%bH(i8*inreg%bJ,i8*inreg%bN)
%bP=call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1311(i8*inreg%bO)
store i8*%bP,i8**%g,align 8
%bQ=load i8*,i8**%d,align 8
%bR=getelementptr inbounds i8,i8*%bQ,i64 16
%bS=bitcast i8*%bR to i8*(i8*,i8*)**
%bT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bS,align 8
%bU=bitcast i8*%bQ to i8**
%bV=load i8*,i8**%bU,align 8
store i8*%bV,i8**%d,align 8
%bW=call i8*@sml_alloc(i32 inreg 36)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177312,i32*%bY,align 4
store i8*%bW,i8**%j,align 8
%bZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b8=getelementptr inbounds i8,i8*%bW,i64 24
%b9=bitcast i8*%b8 to i8**
store i8*%b7,i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%bW,i64 32
%cb=bitcast i8*%ca to i32*
store i32 15,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 28)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177304,i32*%ce,align 4
%cf=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%cc,i64 8
%ci=bitcast i8*%ch to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1765 to void(...)*),void(...)**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cc,i64 16
%ck=bitcast i8*%cj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1765 to void(...)*),void(...)**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cc,i64 24
%cm=bitcast i8*%cl to i32*
store i32 -2147483647,i32*%cm,align 4
%cn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%co=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%cn,i8*inreg%cc)
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=call fastcc i8*%bT(i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%c,align 8
%cr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%d,align 8
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
store i8*%cv,i8**%e,align 8
%cy=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
%cF=call i8*@sml_alloc(i32 inreg 28)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177304,i32*%cH,align 4
%cI=load i8*,i8**%e,align 8
%cJ=bitcast i8*%cF to i8**
store i8*%cI,i8**%cJ,align 8
%cK=getelementptr inbounds i8,i8*%cF,i64 8
%cL=bitcast i8*%cK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1766 to void(...)*),void(...)**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cF,i64 16
%cN=bitcast i8*%cM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1766 to void(...)*),void(...)**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cF,i64 24
%cP=bitcast i8*%cO to i32*
store i32 -2147483647,i32*%cP,align 4
ret i8*%cF
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1768(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1770(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1772(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1773(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1772 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1772 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1775(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1776(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1775 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1775 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 1,i32*%Y,align 4
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 16
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%T,i64 24
%ag=bitcast i8*%af to i32*
store i32 6,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 20)#0
%ai=bitcast i8*%ah to i32*
%aj=getelementptr inbounds i8,i8*%ah,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177296,i32*%ak,align 4
%al=getelementptr inbounds i8,i8*%ah,i64 4
%am=bitcast i8*%al to i32*
store i32 0,i32*%am,align 1
store i32 4,i32*%ai,align 4
%an=load i8*,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%ah,i64 8
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 16
%ar=bitcast i8*%aq to i32*
store i32 2,i32*%ar,align 4
ret i8*%ah
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1777(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1778(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1777 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1777 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1780(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1781(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1780 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1780 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=bitcast i8*%T to i64*
store i64 0,i64*%W,align 4
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%T,i64 24
%ae=bitcast i8*%ad to i32*
store i32 6,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=bitcast i8*%af to i32*
%ah=getelementptr inbounds i8,i8*%af,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
%aj=getelementptr inbounds i8,i8*%af,i64 4
%ak=bitcast i8*%aj to i32*
store i32 0,i32*%ak,align 1
store i32 4,i32*%ag,align 4
%al=load i8*,i8**%e,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
ret i8*%af
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1782(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 25,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1783(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1782 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1782 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1785(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1786(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1787(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1788(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%l,label%k
k:
call void@sml_check(i32 inreg%i)
br label%l
l:
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1785 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1785 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=call fastcc i8*%p(i8*inreg%K,i8*inreg%z)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8**%d to i8***
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%O(i8*inreg%Q,i8*inreg%T)
store i8*%U,i8**%e,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%c,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
store i8*%af,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%af,i64 4
%aj=bitcast i8*%ai to i32*
store i32 0,i32*%aj,align 1
%ak=bitcast i8*%af to i32*
store i32 15,i32*%ak,align 4
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%af,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i32*
store i32 2,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%g,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i8**
store i8*null,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to i32*
store i32 3,i32*%ay,align 4
%az=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%e,align 8
%aF=call i8*@sml_alloc(i32 inreg 12)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177288,i32*%aH,align 4
store i8*%aF,i8**%f,align 8
%aI=load i8*,i8**%c,align 8
%aJ=bitcast i8*%aF to i8**
store i8*%aI,i8**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 8
%aL=bitcast i8*%aK to i32*
store i32 1,i32*%aL,align 4
%aM=call i8*@sml_alloc(i32 inreg 28)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177304,i32*%aO,align 4
%aP=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aQ=bitcast i8*%aM to i8**
store i8*%aP,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aM,i64 8
%aS=bitcast i8*%aR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1786 to void(...)*),void(...)**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 16
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1786 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 24
%aW=bitcast i8*%aV to i32*
store i32 -2147483647,i32*%aW,align 4
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=call fastcc i8*%aC(i8*inreg%aX,i8*inreg%aM)
%aZ=getelementptr inbounds i8,i8*%aY,i64 16
%a0=bitcast i8*%aZ to i8*(i8*,i8*)**
%a1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a0,align 8
%a2=bitcast i8*%aY to i8**
%a3=load i8*,i8**%a2,align 8
%a4=load i8*,i8**%d,align 8
%a5=getelementptr inbounds i8,i8*%a4,i64 8
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
%a8=call fastcc i8*%a1(i8*inreg%a3,i8*inreg%a7)
store i8*%a8,i8**%e,align 8
%a9=call i8*@sml_alloc(i32 inreg 28)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177304,i32*%bb,align 4
store i8*%a9,i8**%f,align 8
%bc=bitcast i8*%a9 to i64*
store i64 0,i64*%bc,align 4
%bd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=load i8*,i8**%c,align 8
%bh=getelementptr inbounds i8,i8*%a9,i64 16
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%a9,i64 24
%bk=bitcast i8*%bj to i32*
store i32 6,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%e,align 8
%bo=getelementptr inbounds i8,i8*%bl,i64 4
%bp=bitcast i8*%bo to i32*
store i32 0,i32*%bp,align 1
%bq=bitcast i8*%bl to i32*
store i32 4,i32*%bq,align 4
%br=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 16
%bv=bitcast i8*%bu to i32*
store i32 2,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
store i8*%bw,i8**%f,align 8
%bz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i8**
store i8*null,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bw,i64 16
%bE=bitcast i8*%bD to i32*
store i32 3,i32*%bE,align 4
%bF=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bG=getelementptr inbounds i8,i8*%bF,i64 16
%bH=bitcast i8*%bG to i8*(i8*,i8*)**
%bI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bH,align 8
%bJ=bitcast i8*%bF to i8**
%bK=load i8*,i8**%bJ,align 8
store i8*%bK,i8**%e,align 8
%bL=call i8*@sml_alloc(i32 inreg 12)#0
%bM=getelementptr inbounds i8,i8*%bL,i64 -4
%bN=bitcast i8*%bM to i32*
store i32 1342177288,i32*%bN,align 4
store i8*%bL,i8**%h,align 8
%bO=load i8*,i8**%c,align 8
%bP=bitcast i8*%bL to i8**
store i8*%bO,i8**%bP,align 8
%bQ=getelementptr inbounds i8,i8*%bL,i64 8
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=call i8*@sml_alloc(i32 inreg 28)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177304,i32*%bU,align 4
%bV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bW=bitcast i8*%bS to i8**
store i8*%bV,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1787 to void(...)*),void(...)**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1787 to void(...)*),void(...)**%b0,align 8
%b1=getelementptr inbounds i8,i8*%bS,i64 24
%b2=bitcast i8*%b1 to i32*
store i32 -2147483647,i32*%b2,align 4
%b3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b4=call fastcc i8*%bI(i8*inreg%b3,i8*inreg%bS)
%b5=getelementptr inbounds i8,i8*%b4,i64 16
%b6=bitcast i8*%b5 to i8*(i8*,i8*)**
%b7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b6,align 8
%b8=bitcast i8*%b4 to i8**
%b9=load i8*,i8**%b8,align 8
%ca=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cb=getelementptr inbounds i8,i8*%ca,i64 16
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
%ce=call fastcc i8*%b7(i8*inreg%b9,i8*inreg%cd)
store i8*%ce,i8**%d,align 8
%cf=call i8*@sml_alloc(i32 inreg 20)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177296,i32*%ch,align 4
store i8*%cf,i8**%e,align 8
%ci=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%c,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%cf,i64 16
%co=bitcast i8*%cn to i32*
store i32 3,i32*%co,align 4
%cp=call i8*@sml_alloc(i32 inreg 20)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177296,i32*%cr,align 4
store i8*%cp,i8**%h,align 8
%cs=getelementptr inbounds i8,i8*%cp,i64 4
%ct=bitcast i8*%cs to i32*
store i32 0,i32*%ct,align 1
%cu=bitcast i8*%cp to i32*
store i32 15,i32*%cu,align 4
%cv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cw=getelementptr inbounds i8,i8*%cp,i64 8
%cx=bitcast i8*%cw to i8**
store i8*%cv,i8**%cx,align 8
%cy=getelementptr inbounds i8,i8*%cp,i64 16
%cz=bitcast i8*%cy to i32*
store i32 2,i32*%cz,align 4
%cA=call i8*@sml_alloc(i32 inreg 28)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177304,i32*%cC,align 4
store i8*%cA,i8**%d,align 8
%cD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cG=getelementptr inbounds i8,i8*%cA,i64 8
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=load i8*,i8**%c,align 8
%cJ=getelementptr inbounds i8,i8*%cA,i64 16
%cK=bitcast i8*%cJ to i8**
store i8*%cI,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cA,i64 24
%cM=bitcast i8*%cL to i32*
store i32 7,i32*%cM,align 4
%cN=call i8*@sml_alloc(i32 inreg 20)#0
%cO=getelementptr inbounds i8,i8*%cN,i64 -4
%cP=bitcast i8*%cO to i32*
store i32 1342177296,i32*%cP,align 4
store i8*%cN,i8**%e,align 8
%cQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cR=bitcast i8*%cN to i8**
store i8*%cQ,i8**%cR,align 8
%cS=getelementptr inbounds i8,i8*%cN,i64 8
%cT=bitcast i8*%cS to i8**
store i8*null,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cN,i64 16
%cV=bitcast i8*%cU to i32*
store i32 3,i32*%cV,align 4
%cW=call i8*@sml_alloc(i32 inreg 36)#0
%cX=getelementptr inbounds i8,i8*%cW,i64 -4
%cY=bitcast i8*%cX to i32*
store i32 1342177312,i32*%cY,align 4
store i8*%cW,i8**%d,align 8
%cZ=getelementptr inbounds i8,i8*%cW,i64 20
%c0=bitcast i8*%cZ to i32*
store i32 0,i32*%c0,align 1
%c1=bitcast i8*%cW to i8**
%c2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
store i8*%c2,i8**%c1,align 8
%c3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c4=getelementptr inbounds i8,i8*%cW,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cW,i64 16
%c7=bitcast i8*%c6 to i32*
store i32 2,i32*%c7,align 4
%c8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c9=getelementptr inbounds i8,i8*%cW,i64 24
%da=bitcast i8*%c9 to i8**
store i8*%c8,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%cW,i64 32
%dc=bitcast i8*%db to i32*
store i32 11,i32*%dc,align 4
%dd=call i8*@sml_alloc(i32 inreg 20)#0
%de=bitcast i8*%dd to i32*
%df=getelementptr inbounds i8,i8*%dd,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177296,i32*%dg,align 4
%dh=getelementptr inbounds i8,i8*%dd,i64 4
%di=bitcast i8*%dh to i32*
store i32 0,i32*%di,align 1
store i32 1,i32*%de,align 4
%dj=load i8*,i8**%d,align 8
%dk=getelementptr inbounds i8,i8*%dd,i64 8
%dl=bitcast i8*%dk to i8**
store i8*%dj,i8**%dl,align 8
%dm=getelementptr inbounds i8,i8*%dd,i64 16
%dn=bitcast i8*%dm to i32*
store i32 2,i32*%dn,align 4
ret i8*%dd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1789(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%e to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*null,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%c,align 8
%E=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%S=call fastcc i8*%O(i8*inreg%Q,i8*inreg%R)
store i8*%S,i8**%c,align 8
%T=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=call fastcc i8*%W(i8*inreg%Y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gE,i64 0,i32 2)to i8*))
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
%af=load i8*,i8**%e,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ac(i8*inreg%ae,i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 12)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177288,i32*%am,align 4
store i8*%ak,i8**%f,align 8
%an=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
store i8*%ar,i8**%g,align 8
%au=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1776 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1776 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
%aC=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=call fastcc i8*%aF(i8*inreg%aH,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gF,i64 0,i32 2)to i8*))
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8*(i8*,i8*)**
%aL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aK,align 8
%aM=bitcast i8*%aI to i8**
%aN=load i8*,i8**%aM,align 8
%aO=load i8*,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aO,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=call fastcc i8*%aL(i8*inreg%aN,i8*inreg%aR)
store i8*%aS,i8**%d,align 8
%aT=call i8*@sml_alloc(i32 inreg 12)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177288,i32*%aV,align 4
store i8*%aT,i8**%f,align 8
%aW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to i32*
store i32 1,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 28)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177304,i32*%a2,align 4
store i8*%a0,i8**%d,align 8
%a3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1781 to void(...)*),void(...)**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 16
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1781 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 24
%ba=bitcast i8*%a9 to i32*
store i32 -2147483647,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%f,align 8
%be=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to i8**
store i8*null,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to i32*
store i32 3,i32*%bj,align 4
%bk=call i8*@sml_alloc(i32 inreg 20)#0
%bl=getelementptr inbounds i8,i8*%bk,i64 -4
%bm=bitcast i8*%bl to i32*
store i32 1342177296,i32*%bm,align 4
store i8*%bk,i8**%d,align 8
%bn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bo=bitcast i8*%bk to i8**
store i8*%bn,i8**%bo,align 8
%bp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bq=getelementptr inbounds i8,i8*%bk,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bk,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%bv=getelementptr inbounds i8,i8*%bu,i64 16
%bw=bitcast i8*%bv to i8*(i8*,i8*)**
%bx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bw,align 8
%by=bitcast i8*%bu to i8**
%bz=load i8*,i8**%by,align 8
%bA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bB=call fastcc i8*%bx(i8*inreg%bz,i8*inreg%bA)
store i8*%bB,i8**%d,align 8
%bC=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bD=getelementptr inbounds i8,i8*%bC,i64 16
%bE=bitcast i8*%bD to i8*(i8*,i8*)**
%bF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bE,align 8
%bG=bitcast i8*%bC to i8**
%bH=load i8*,i8**%bG,align 8
%bI=call fastcc i8*%bF(i8*inreg%bH,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gG,i64 0,i32 2)to i8*))
%bJ=getelementptr inbounds i8,i8*%bI,i64 16
%bK=bitcast i8*%bJ to i8*(i8*,i8*)**
%bL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bK,align 8
%bM=bitcast i8*%bI to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%h,align 8
%bO=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%bP=getelementptr inbounds i8,i8*%bO,i64 16
%bQ=bitcast i8*%bP to i8*(i8*,i8*)**
%bR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bQ,align 8
%bS=bitcast i8*%bO to i8**
%bT=load i8*,i8**%bS,align 8
store i8*%bT,i8**%g,align 8
%bU=load i8*,i8**%e,align 8
%bV=getelementptr inbounds i8,i8*%bU,i64 16
%bW=bitcast i8*%bV to i8**
%bX=load i8*,i8**%bW,align 8
store i8*%bX,i8**%f,align 8
%bY=getelementptr inbounds i8,i8*%bU,i64 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%e,align 8
%b1=call i8*@sml_alloc(i32 inreg 20)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177296,i32*%b3,align 4
%b4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b1,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cc=call fastcc i8*%bR(i8*inreg%cb,i8*inreg%b1)
%cd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ce=call fastcc i8*%bL(i8*inreg%cd,i8*inreg%cc)
store i8*%ce,i8**%e,align 8
%cf=call i8*@sml_alloc(i32 inreg 28)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177304,i32*%ch,align 4
store i8*%cf,i8**%f,align 8
%ci=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cl=getelementptr inbounds i8,i8*%cf,i64 8
%cm=bitcast i8*%cl to i8**
store i8*%ck,i8**%cm,align 8
%cn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%co=getelementptr inbounds i8,i8*%cf,i64 16
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cf,i64 24
%cr=bitcast i8*%cq to i32*
store i32 7,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 28)#0
%ct=getelementptr inbounds i8,i8*%cs,i64 -4
%cu=bitcast i8*%ct to i32*
store i32 1342177304,i32*%cu,align 4
%cv=load i8*,i8**%f,align 8
%cw=bitcast i8*%cs to i8**
store i8*%cv,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cs,i64 8
%cy=bitcast i8*%cx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1788 to void(...)*),void(...)**%cy,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 16
%cA=bitcast i8*%cz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1788 to void(...)*),void(...)**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cs,i64 24
%cC=bitcast i8*%cB to i32*
store i32 -2147483647,i32*%cC,align 4
ret i8*%cs
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1790(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=load i8*,i8**%n,align 8
%q=tail call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%p,i8*inreg%o)
ret i8*%q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1791(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1793(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1794(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
t:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%r,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%i,align 8
br label%r
r:
%s=phi i8*[%q,%p],[%a,%t]
%u=getelementptr inbounds i8,i8*%s,i64 24
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=icmp eq i8*%w,null
br i1%x,label%D,label%y
y:
%z=bitcast i8*%w to i8**
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%A)
%C=load i8*,i8**%i,align 8
br label%D
D:
%E=phi i8*[%C,%y],[%s,%r]
%F=phi i8*[%B,%y],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gy,i64 0,i32 2)to i8*),%r]
%G=getelementptr inbounds i8,i8*%F,i64 16
%H=bitcast i8*%G to i8*(i8*,i8*)**
%I=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%H,align 8
%J=bitcast i8*%F to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%l,align 8
%L=getelementptr inbounds i8,i8*%E,i64 40
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=icmp eq i8*%N,null
br i1%O,label%U,label%P
P:
%Q=bitcast i8*%N to i8**
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%R)
%T=load i8*,i8**%i,align 8
br label%U
U:
%V=phi i8*[%T,%P],[%E,%D]
%W=phi i8*[%S,%P],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gz,i64 0,i32 2)to i8*),%D]
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%k,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 48
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%ae)
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%j,align 8
%al=load i8*,i8**%i,align 8
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
%ap=icmp eq i8*%ao,null
br i1%ap,label%be,label%aq
aq:
%ar=bitcast i8*%ao to i8**
%as=load i8*,i8**%ar,align 8
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%as,i64 8
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%e,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%as,i64 16
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%g,align 8
%aG=getelementptr inbounds i8,i8*%as,i64 24
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%h,align 8
%aJ=call i8*@sml_alloc(i32 inreg 44)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177320,i32*%aL,align 4
store i8*%aJ,i8**%m,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 16
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aV=getelementptr inbounds i8,i8*%aJ,i64 24
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aY=getelementptr inbounds i8,i8*%aJ,i64 32
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aJ,i64 40
%a1=bitcast i8*%a0 to i32*
store i32 31,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
%a5=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1767 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1767 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 24
%bc=bitcast i8*%bb to i32*
store i32 -2147483647,i32*%bc,align 4
%bd=load i8*,i8**%i,align 8
br label%be
be:
%bf=phi i8*[%bd,%aq],[%al,%U]
%bg=phi i8*[%a5,%aq],[null,%U]
%bh=phi i8*[%a2,%aq],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gC,i64 0,i32 2)to i8*),%U]
%bi=getelementptr inbounds i8,i8*%bh,i64 16
%bj=bitcast i8*%bi to i8*(i8*,i8*)**
%bk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bj,align 8
store i8*%bg,i8**%g,align 8
%bl=getelementptr inbounds i8,i8*%bf,i64 56
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
%bo=icmp eq i8*%bn,null
br i1%bo,label%bp,label%br
bp:
%bq=bitcast i8*%bf to i8**
br label%by
br:
%bs=bitcast i8*%bn to i8**
%bt=load i8*,i8**%bs,align 8
%bu=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%bt)
%bv=bitcast i8**%i to i8***
%bw=load i8**,i8***%bv,align 8
%bx=bitcast i8**%bw to i8*
br label%by
by:
%bz=phi i8*[%bx,%br],[%bf,%bp]
%bA=phi i8**[%bw,%br],[%bq,%bp]
%bB=phi i8*[%bu,%br],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gD,i64 0,i32 2)to i8*),%bp]
%bC=getelementptr inbounds i8,i8*%bB,i64 16
%bD=bitcast i8*%bC to i8*(i8*,i8*)**
%bE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bD,align 8
%bF=bitcast i8*%bB to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%f,align 8
%bH=load i8*,i8**%bA,align 8
%bI=icmp eq i8*%bH,null
br i1%bI,label%cy,label%bJ
bJ:
%bK=bitcast i8*%bH to i8**
%bL=load i8*,i8**%bK,align 8
%bM=bitcast i8*%bL to i8**
%bN=load i8*,i8**%bM,align 8
store i8*%bN,i8**%d,align 8
%bO=getelementptr inbounds i8,i8*%bL,i64 8
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%e,align 8
%bR=call i8*@sml_alloc(i32 inreg 28)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177304,i32*%bT,align 4
store i8*%bR,i8**%h,align 8
%bU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bV=bitcast i8*%bR to i8**
store i8*%bU,i8**%bV,align 8
%bW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bX=getelementptr inbounds i8,i8*%bR,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b0=getelementptr inbounds i8,i8*%bR,i64 16
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bR,i64 24
%b3=bitcast i8*%b2 to i32*
store i32 7,i32*%b3,align 4
%b4=call i8*@sml_alloc(i32 inreg 28)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177304,i32*%b6,align 4
store i8*%b4,i8**%c,align 8
%b7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1789 to void(...)*),void(...)**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1789 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b4,i64 24
%ce=bitcast i8*%cd to i32*
store i32 -2147483647,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 12)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177288,i32*%ch,align 4
store i8*%cf,i8**%d,align 8
%ci=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cj=bitcast i8*%cf to i8**
store i8*%ci,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cf,i64 8
%cl=bitcast i8*%ck to i32*
store i32 1,i32*%cl,align 4
%cm=call i8*@sml_alloc(i32 inreg 28)#0
%cn=getelementptr inbounds i8,i8*%cm,i64 -4
%co=bitcast i8*%cn to i32*
store i32 1342177304,i32*%co,align 4
%cp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cq=bitcast i8*%cm to i8**
store i8*%cp,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cm,i64 8
%cs=bitcast i8*%cr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1790 to void(...)*),void(...)**%cs,align 8
%ct=getelementptr inbounds i8,i8*%cm,i64 16
%cu=bitcast i8*%ct to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1790 to void(...)*),void(...)**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cm,i64 24
%cw=bitcast i8*%cv to i32*
store i32 -2147483647,i32*%cw,align 4
%cx=load i8*,i8**%i,align 8
br label%cy
cy:
%cz=phi i8*[%cx,%bJ],[%bz,%by]
%cA=phi i8*[%cp,%bJ],[null,%by]
%cB=phi i8*[%cm,%bJ],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gH,i64 0,i32 2)to i8*),%by]
%cC=getelementptr inbounds i8,i8*%cB,i64 16
%cD=bitcast i8*%cC to i8*(i8*,i8*)**
%cE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cD,align 8
store i8*%cA,i8**%c,align 8
%cF=getelementptr inbounds i8,i8*%cz,i64 8
%cG=bitcast i8*%cF to i8**
%cH=load i8*,i8**%cG,align 8
%cI=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%cH)
%cJ=getelementptr inbounds i8,i8*%cI,i64 16
%cK=bitcast i8*%cJ to i8*(i8*,i8*)**
%cL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cK,align 8
%cM=bitcast i8*%cI to i8**
%cN=load i8*,i8**%cM,align 8
%cO=call fastcc i8*%cL(i8*inreg%cN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
%cP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cQ=call fastcc i8*%cE(i8*inreg%cP,i8*inreg%cO)
%cR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cS=call fastcc i8*%bE(i8*inreg%cR,i8*inreg%cQ)
%cT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cU=call fastcc i8*%bk(i8*inreg%cT,i8*inreg%cS)
%cV=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cW=call fastcc i8*%ai(i8*inreg%cV,i8*inreg%cU)
%cX=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cY=call fastcc i8*%Z(i8*inreg%cX,i8*inreg%cW)
%cZ=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%c0=call fastcc i8*%I(i8*inreg%cZ,i8*inreg%cY)
store i8*%c0,i8**%c,align 8
%c1=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%c2=getelementptr inbounds i8,i8*%c1,i64 32
%c3=bitcast i8*%c2 to i8**
%c4=load i8*,i8**%c3,align 8
store i8*%c4,i8**%d,align 8
%c5=call i8*@sml_alloc(i32 inreg 20)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177296,i32*%c7,align 4
store i8*%c5,i8**%e,align 8
%c8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c9=bitcast i8*%c5 to i8**
store i8*%c8,i8**%c9,align 8
%da=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%db=getelementptr inbounds i8,i8*%c5,i64 8
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c5,i64 16
%de=bitcast i8*%dd to i32*
store i32 3,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 28)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177304,i32*%dh,align 4
%di=load i8*,i8**%e,align 8
%dj=bitcast i8*%df to i8**
store i8*%di,i8**%dj,align 8
%dk=getelementptr inbounds i8,i8*%df,i64 8
%dl=bitcast i8*%dk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1793 to void(...)*),void(...)**%dl,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 16
%dn=bitcast i8*%dm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1793 to void(...)*),void(...)**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 24
%dp=bitcast i8*%do to i32*
store i32 -2147483647,i32*%dp,align 4
ret i8*%df
}
define internal fastcc i8*@_SMLLL5table_1795(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1796(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1797(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=getelementptr inbounds i8,i8*%o,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%d,align 8
%t=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i64 0,i32 2)to i8*))
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%c,align 8
%A=getelementptr inbounds i8,i8*%z,i64 32
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%w(i8*inreg%y,i8*inreg%C)
store i8*%D,i8**%e,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
store i8*%E,i8**%i,align 8
%H=getelementptr inbounds i8,i8*%E,i64 4
%I=bitcast i8*%H to i32*
store i32 0,i32*%I,align 1
%J=bitcast i8*%E to i32*
store i32 25,i32*%J,align 4
%K=load i8*,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%E,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i32*
store i32 2,i32*%O,align 4
%P=bitcast i8**%c to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=getelementptr inbounds i8*,i8**%Q,i64 2
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=getelementptr inbounds i8*,i8**%Q,i64 1
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*%W(i8*inreg%Y,i8*inreg%aa)
store i8*%ab,i8**%f,align 8
%ac=load i8*,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%g,align 8
%ag=call i8*@sml_alloc(i32 inreg 28)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177304,i32*%ai,align 4
store i8*%ag,i8**%h,align 8
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ap=getelementptr inbounds i8,i8*%ag,i64 16
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ag,i64 24
%as=bitcast i8*%ar to i32*
store i32 7,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
store i8*%at,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
%ay=bitcast i8*%at to i32*
store i32 20,i32*%ay,align 4
%az=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%g,align 8
%aH=load i8*,i8**%e,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*null,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=load i8*,i8**%c,align 8
%aO=getelementptr inbounds i8,i8*%aN,i64 32
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%e,align 8
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%f,align 8
%aU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
store i8*%a4,i8**%g,align 8
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
%bd=load i8*,i8**%c,align 8
%be=getelementptr inbounds i8,i8*%bd,i64 32
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%c,align 8
%bh=call i8*@sml_alloc(i32 inreg 28)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177304,i32*%bj,align 4
store i8*%bh,i8**%e,align 8
%bk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bn=getelementptr inbounds i8,i8*%bh,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=getelementptr inbounds i8,i8*%bh,i64 16
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bh,i64 24
%bt=bitcast i8*%bs to i32*
store i32 7,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=bitcast i8*%bu to i32*
%bw=getelementptr inbounds i8,i8*%bu,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
%by=getelementptr inbounds i8,i8*%bu,i64 4
%bz=bitcast i8*%by to i32*
store i32 0,i32*%bz,align 1
store i32 20,i32*%bv,align 4
%bA=load i8*,i8**%e,align 8
%bB=getelementptr inbounds i8,i8*%bu,i64 8
%bC=bitcast i8*%bB to i8**
store i8*%bA,i8**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bu,i64 16
%bE=bitcast i8*%bD to i32*
store i32 2,i32*%bE,align 4
ret i8*%bu
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1798(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%c,align 8
%r=getelementptr inbounds i8,i8*%n,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
%w=icmp eq i8*%v,null
br i1%w,label%x,label%aw
x:
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%d,align 8
%B=bitcast i8**%e to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%f,align 8
%E=getelementptr inbounds i8*,i8**%C,i64 1
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=getelementptr inbounds i8*,i8**%C,i64 2
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%e,align 8
%I=call i8*@sml_alloc(i32 inreg 44)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177320,i32*%K,align 4
store i8*%I,i8**%h,align 8
%L=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=getelementptr inbounds i8,i8*%I,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%c,align 8
%U=getelementptr inbounds i8,i8*%I,i64 24
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%I,i64 32
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%I,i64 40
%aa=bitcast i8*%Z to i32*
store i32 31,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
store i8*%ab,i8**%d,align 8
%ae=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1797 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1797 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
%ap=load i8*,i8**%c,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
ret i8*%am
aw:
store i8*null,i8**%e,align 8
%ax=bitcast i8*%v to i8**
%ay=load i8*,i8**%ax,align 8
%az=getelementptr inbounds i8,i8*%t,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%d,align 8
%aC=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%ay)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=call fastcc i8*%aF(i8*inreg%aH,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%aI,i8**%e,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%f,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
%aT=call i8*@sml_alloc(i32 inreg 28)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177304,i32*%aV,align 4
store i8*%aT,i8**%d,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1796 to void(...)*),void(...)**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1796 to void(...)*),void(...)**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aT,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 -2147483647,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=load i8*,i8**%c,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=load i8*,i8**%d,align 8
%ba=getelementptr inbounds i8,i8*%a4,i64 8
%bb=bitcast i8*%ba to i8**
store i8*%a9,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a4,i64 16
%bd=bitcast i8*%bc to i32*
store i32 3,i32*%bd,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1799(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1800(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1799 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1799 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1801(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%l,label%n
l:
%m=bitcast i8*%b to i8**
br label%q
n:
call void@sml_check(i32 inreg%j)
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%n],[%m,%l]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=call fastcc i8*@_SMLFN8ListPair3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%h,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%z,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%z,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 24
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%g,align 8
%J=call i8*@sml_alloc(i32 inreg 28)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177304,i32*%L,align 4
store i8*%J,i8**%i,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%P=getelementptr inbounds i8,i8*%J,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%S=getelementptr inbounds i8,i8*%J,i64 16
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%J,i64 24
%V=bitcast i8*%U to i32*
store i32 7,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 28)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177304,i32*%Y,align 4
%Z=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aa=bitcast i8*%W to i8**
store i8*%Z,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%W,i64 8
%ac=bitcast i8*%ab to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1798 to void(...)*),void(...)**%ac,align 8
%ad=getelementptr inbounds i8,i8*%W,i64 16
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1798 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%W,i64 24
%ag=bitcast i8*%af to i32*
store i32 -2147483647,i32*%ag,align 4
%ah=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ai=call fastcc i8*%w(i8*inreg%ah,i8*inreg%W)
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8*(i8*,i8*)**
%al=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak,align 8
%am=bitcast i8*%ai to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%e,align 8
%ao=bitcast i8**%d to i8***
%ap=load i8**,i8***%ao,align 8
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=call fastcc i8*%al(i8*inreg%aB,i8*inreg%ar)
store i8*%aC,i8**%c,align 8
%aD=call i8*@sml_alloc(i32 inreg 12)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177288,i32*%aF,align 4
store i8*%aD,i8**%d,align 8
%aG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aD,i64 8
%aJ=bitcast i8*%aI to i32*
store i32 1,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 28)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177304,i32*%aM,align 4
%aN=load i8*,i8**%d,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1800 to void(...)*),void(...)**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1800 to void(...)*),void(...)**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 24
%aU=bitcast i8*%aT to i32*
store i32 -2147483647,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%c to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 4
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=bitcast i8*%K to i32*
store i32 2,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 2,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8**,i8***%y,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1803(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%k,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1236(i8*inreg%s)
store i8*%C,i8**%c,align 8
%D=bitcast i8**%d to i8***
%E=load i8**,i8***%D,align 8
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%e,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1802 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1802 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1804(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1805(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1804 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1804 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1807(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 25,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1808(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1807 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1807 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1810(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1811(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1812(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
s:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
%p=load i8*,i8**%d,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%a,%s]
%t=phi i8*[%o,%n],[%b,%s]
%u=getelementptr inbounds i8,i8*%r,i64 40
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%z(i8*inreg%B,i8*inreg%t)
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%i,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*null,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=load i8*,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1810 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1810 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=call fastcc i8*%P(i8*inreg%ak,i8*inreg%Z)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 24
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%ao(i8*inreg%aq,i8*inreg%au)
store i8*%av,i8**%e,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%aw,i64 4
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
%aB=bitcast i8*%aw to i32*
store i32 1,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aw,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aw,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 6,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aK,i64 4
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 1
%aP=bitcast i8*%aK to i32*
store i32 4,i32*%aP,align 4
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
store i8*%aV,i8**%j,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*null,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i64 0,i32 2)to i8*))
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=load i8*,i8**%c,align 8
%bb=call fastcc i8*%a7(i8*inreg%a9,i8*inreg%ba)
store i8*%bb,i8**%e,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%k,align 8
%bf=getelementptr inbounds i8,i8*%bc,i64 4
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
%bh=bitcast i8*%bc to i32*
store i32 25,i32*%bh,align 4
%bi=load i8*,i8**%e,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 16
%bm=bitcast i8*%bl to i32*
store i32 2,i32*%bm,align 4
%bn=bitcast i8**%d to i8***
%bo=load i8**,i8***%bn,align 8
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%e,align 8
%bq=getelementptr inbounds i8*,i8**%bo,i64 2
%br=load i8*,i8**%bq,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 16
%bt=bitcast i8*%bs to i8*(i8*,i8*)**
%bu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bt,align 8
%bv=bitcast i8*%br to i8**
%bw=load i8*,i8**%bv,align 8
%bx=getelementptr inbounds i8*,i8**%bo,i64 1
%by=load i8*,i8**%bx,align 8
%bz=call fastcc i8*%bu(i8*inreg%bw,i8*inreg%by)
store i8*%bz,i8**%f,align 8
%bA=load i8*,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%bA,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%g,align 8
%bE=call i8*@sml_alloc(i32 inreg 28)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177304,i32*%bG,align 4
store i8*%bE,i8**%h,align 8
%bH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bN=getelementptr inbounds i8,i8*%bE,i64 16
%bO=bitcast i8*%bN to i8**
store i8*%bM,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bE,i64 24
%bQ=bitcast i8*%bP to i32*
store i32 7,i32*%bQ,align 4
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
store i8*%bR,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bR,i64 4
%bV=bitcast i8*%bU to i32*
store i32 0,i32*%bV,align 1
%bW=bitcast i8*%bR to i32*
store i32 20,i32*%bW,align 4
%bX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bY=getelementptr inbounds i8,i8*%bR,i64 8
%bZ=bitcast i8*%bY to i8**
store i8*%bX,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bR,i64 16
%b1=bitcast i8*%b0 to i32*
store i32 2,i32*%b1,align 4
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
store i8*%b2,i8**%f,align 8
%b5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b2,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*null,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b2,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call i8*@sml_alloc(i32 inreg 28)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177304,i32*%cd,align 4
store i8*%cb,i8**%e,align 8
%ce=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=load i8*,i8**%c,align 8
%ck=getelementptr inbounds i8,i8*%cb,i64 16
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cb,i64 24
%cn=bitcast i8*%cm to i32*
store i32 7,i32*%cn,align 4
%co=call i8*@sml_alloc(i32 inreg 20)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177296,i32*%cq,align 4
store i8*%co,i8**%f,align 8
%cr=bitcast i8*%co to i64*
store i64 0,i64*%cr,align 4
%cs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ct=getelementptr inbounds i8,i8*%co,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%co,i64 16
%cw=bitcast i8*%cv to i32*
store i32 2,i32*%cw,align 4
%cx=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cy=getelementptr inbounds i8,i8*%cx,i64 16
%cz=bitcast i8*%cy to i8*(i8*,i8*)**
%cA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cz,align 8
%cB=bitcast i8*%cx to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%e,align 8
%cD=call i8*@sml_alloc(i32 inreg 12)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177288,i32*%cF,align 4
store i8*%cD,i8**%g,align 8
%cG=load i8*,i8**%c,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cD,i64 8
%cJ=bitcast i8*%cI to i32*
store i32 1,i32*%cJ,align 4
%cK=call i8*@sml_alloc(i32 inreg 28)#0
%cL=getelementptr inbounds i8,i8*%cK,i64 -4
%cM=bitcast i8*%cL to i32*
store i32 1342177304,i32*%cM,align 4
%cN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cO=bitcast i8*%cK to i8**
store i8*%cN,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cK,i64 8
%cQ=bitcast i8*%cP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1811 to void(...)*),void(...)**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cK,i64 16
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1811 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cK,i64 24
%cU=bitcast i8*%cT to i32*
store i32 -2147483647,i32*%cU,align 4
%cV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cW=call fastcc i8*%cA(i8*inreg%cV,i8*inreg%cK)
%cX=getelementptr inbounds i8,i8*%cW,i64 16
%cY=bitcast i8*%cX to i8*(i8*,i8*)**
%cZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cY,align 8
%c0=bitcast i8*%cW to i8**
%c1=load i8*,i8**%c0,align 8
%c2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c3=getelementptr inbounds i8,i8*%c2,i64 32
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=call fastcc i8*%cZ(i8*inreg%c1,i8*inreg%c5)
store i8*%c6,i8**%d,align 8
%c7=call i8*@sml_alloc(i32 inreg 28)#0
%c8=getelementptr inbounds i8,i8*%c7,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 1342177304,i32*%c9,align 4
store i8*%c7,i8**%e,align 8
%da=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%db=bitcast i8*%c7 to i8**
store i8*%da,i8**%db,align 8
%dc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dd=getelementptr inbounds i8,i8*%c7,i64 8
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=load i8*,i8**%c,align 8
%dg=getelementptr inbounds i8,i8*%c7,i64 16
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%c7,i64 24
%dj=bitcast i8*%di to i32*
store i32 7,i32*%dj,align 4
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
store i8*%dk,i8**%f,align 8
%dn=getelementptr inbounds i8,i8*%dk,i64 4
%do=bitcast i8*%dn to i32*
store i32 0,i32*%do,align 1
%dp=bitcast i8*%dk to i32*
store i32 17,i32*%dp,align 4
%dq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dr=getelementptr inbounds i8,i8*%dk,i64 8
%ds=bitcast i8*%dr to i8**
store i8*%dq,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dk,i64 16
%du=bitcast i8*%dt to i32*
store i32 2,i32*%du,align 4
%dv=call i8*@sml_alloc(i32 inreg 28)#0
%dw=getelementptr inbounds i8,i8*%dv,i64 -4
%dx=bitcast i8*%dw to i32*
store i32 1342177304,i32*%dx,align 4
store i8*%dv,i8**%d,align 8
%dy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dz=bitcast i8*%dv to i8**
store i8*%dy,i8**%dz,align 8
%dA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dB=getelementptr inbounds i8,i8*%dv,i64 8
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%c,align 8
%dE=getelementptr inbounds i8,i8*%dv,i64 16
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dv,i64 24
%dH=bitcast i8*%dG to i32*
store i32 7,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 20)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177296,i32*%dK,align 4
store i8*%dI,i8**%e,align 8
%dL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=getelementptr inbounds i8,i8*%dI,i64 8
%dO=bitcast i8*%dN to i8**
store i8*null,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dI,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 3,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 36)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177312,i32*%dT,align 4
store i8*%dR,i8**%d,align 8
%dU=getelementptr inbounds i8,i8*%dR,i64 20
%dV=bitcast i8*%dU to i32*
store i32 0,i32*%dV,align 1
%dW=bitcast i8*%dR to i8**
%dX=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
store i8*%dX,i8**%dW,align 8
%dY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dZ=getelementptr inbounds i8,i8*%dR,i64 8
%d0=bitcast i8*%dZ to i8**
store i8*%dY,i8**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dR,i64 16
%d2=bitcast i8*%d1 to i32*
store i32 2,i32*%d2,align 4
%d3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%d4=getelementptr inbounds i8,i8*%dR,i64 24
%d5=bitcast i8*%d4 to i8**
store i8*%d3,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dR,i64 32
%d7=bitcast i8*%d6 to i32*
store i32 11,i32*%d7,align 4
%d8=call i8*@sml_alloc(i32 inreg 20)#0
%d9=bitcast i8*%d8 to i32*
%ea=getelementptr inbounds i8,i8*%d8,i64 -4
%eb=bitcast i8*%ea to i32*
store i32 1342177296,i32*%eb,align 4
%ec=getelementptr inbounds i8,i8*%d8,i64 4
%ed=bitcast i8*%ec to i32*
store i32 0,i32*%ed,align 1
store i32 1,i32*%d9,align 4
%ee=load i8*,i8**%d,align 8
%ef=getelementptr inbounds i8,i8*%d8,i64 8
%eg=bitcast i8*%ef to i8**
store i8*%ee,i8**%eg,align 8
%eh=getelementptr inbounds i8,i8*%d8,i64 16
%ei=bitcast i8*%eh to i32*
store i32 2,i32*%ei,align 4
ret i8*%d8
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1813(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%b,i8**%c,align 8
%j=bitcast i8*%a to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%a,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%a,i64 16
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=getelementptr inbounds i8,i8*%a,i64 24
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=getelementptr inbounds i8,i8*%a,i64 32
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%h,align 8
%x=call i8*@sml_alloc(i32 inreg 52)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177328,i32*%z,align 4
store i8*%x,i8**%i,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=getelementptr inbounds i8,i8*%x,i64 24
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%M=getelementptr inbounds i8,i8*%x,i64 32
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%x,i64 40
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%x,i64 48
%S=bitcast i8*%R to i32*
store i32 63,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%i,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1812 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1812 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1814(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%c to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 4
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=bitcast i8*%K to i32*
store i32 2,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 2,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8**,i8***%y,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1815(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%d,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
%q=getelementptr inbounds i8,i8*%o,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%o,i64 24
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%o,i64 32
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%f,align 8
%z=getelementptr inbounds i8,i8*%o,i64 40
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=getelementptr inbounds i8,i8*%o,i64 48
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%h,align 8
%F=call i8*@sml_alloc(i32 inreg 44)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177320,i32*%H,align 4
store i8*%F,i8**%i,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%F,i64 8
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%O=getelementptr inbounds i8,i8*%F,i64 16
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%R=getelementptr inbounds i8,i8*%F,i64 24
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=getelementptr inbounds i8,i8*%F,i64 32
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%F,i64 40
%X=bitcast i8*%W to i32*
store i32 31,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
store i8*%Y,i8**%c,align 8
%ab=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1813 to void(...)*),void(...)**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1813 to void(...)*),void(...)**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 24
%ai=bitcast i8*%ah to i32*
store i32 -2147483647,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%aj,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%am)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%aq(i8*inreg%as,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
%au=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%av=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%au,i8*inreg%at)
store i8*%av,i8**%c,align 8
%aw=bitcast i8**%d to i8***
%ax=load i8**,i8***%aw,align 8
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%d,align 8
%az=call i8*@sml_alloc(i32 inreg 20)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177296,i32*%aB,align 4
store i8*%az,i8**%e,align 8
%aC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aF=getelementptr inbounds i8,i8*%az,i64 8
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%az,i64 16
%aI=bitcast i8*%aH to i32*
store i32 3,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 28)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177304,i32*%aL,align 4
%aM=load i8*,i8**%e,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1814 to void(...)*),void(...)**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 16
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1814 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 24
%aT=bitcast i8*%aS to i32*
store i32 -2147483647,i32*%aT,align 4
ret i8*%aJ
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1816(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1817(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%o
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%k],[%b,%i]
%q=phi i8**[%m,%k],[%j,%i]
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8**%q to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%u(i8*inreg%x,i8*inreg%p)
store i8*%y,i8**%d,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=bitcast i8*%z to i8**
store i8*null,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 20)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177296,i32*%K,align 4
store i8*%I,i8**%f,align 8
%L=getelementptr inbounds i8,i8*%I,i64 4
%M=bitcast i8*%L to i32*
store i32 0,i32*%M,align 1
%N=bitcast i8*%I to i32*
store i32 2,i32*%N,align 4
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%I,i64 8
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 16
%S=bitcast i8*%R to i32*
store i32 2,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*null,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%f,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 20)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177296,i32*%ao,align 4
store i8*%am,i8**%d,align 8
%ap=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%am,i64 8
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%am,i64 16
%av=bitcast i8*%au to i32*
store i32 3,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=bitcast i8*%aw to i32*
%ay=getelementptr inbounds i8,i8*%aw,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=getelementptr inbounds i8,i8*%aw,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
store i32 21,i32*%ax,align 4
%aC=load i8*,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i32*
store i32 2,i32*%aG,align 4
ret i8*%aw
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1818(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%q,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 16
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
store i8*%y,i8**%d,align 8
%z=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%s)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
%F=call fastcc i8*%C(i8*inreg%E,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%F,i8**%e,align 8
%G=call i8*@sml_alloc(i32 inreg 28)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177304,i32*%I,align 4
store i8*%G,i8**%g,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%G,i64 24
%S=bitcast i8*%R to i32*
store i32 7,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%d,align 8
%W=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1816 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1816 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
%ae=bitcast i8**%f to i8***
%af=load i8**,i8***%ae,align 8
store i8*null,i8**%f,align 8
%ag=load i8*,i8**%af,align 8
%ah=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%ag)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=call fastcc i8*%ak(i8*inreg%am,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
store i8*%an,i8**%c,align 8
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%as=bitcast i8*%ao to i8**
store i8*%ar,i8**%as,align 8
%at=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%au=getelementptr inbounds i8,i8*%ao,i64 8
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ao,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
%ay=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1236(i8*inreg%ao)
store i8*%ay,i8**%c,align 8
%az=call i8*@sml_alloc(i32 inreg 12)#0
%aA=getelementptr inbounds i8,i8*%az,i64 -4
%aB=bitcast i8*%aA to i32*
store i32 1342177288,i32*%aB,align 4
store i8*%az,i8**%d,align 8
%aC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aD=bitcast i8*%az to i8**
store i8*%aC,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%az,i64 8
%aF=bitcast i8*%aE to i32*
store i32 1,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%d,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1817 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1817 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
ret i8*%aG
}
define internal fastcc i8*@_SMLLL5table_1819(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1820(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1821(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1820 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1820 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1823(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 25,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1824(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1823 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1823 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLL6values_1826(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLL6values_1827(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLL6values_1828(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
s:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%q,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
%p=load i8*,i8**%d,align 8
br label%q
q:
%r=phi i8*[%p,%n],[%a,%s]
%t=phi i8*[%o,%n],[%b,%s]
%u=getelementptr inbounds i8,i8*%r,i64 40
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*%z(i8*inreg%B,i8*inreg%t)
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
store i8*%D,i8**%i,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*null,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=load i8*,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
%ac=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%Z,i64 8
%af=bitcast i8*%ae to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1826 to void(...)*),void(...)**%af,align 8
%ag=getelementptr inbounds i8,i8*%Z,i64 16
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1826 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 24
%aj=bitcast i8*%ai to i32*
store i32 -2147483647,i32*%aj,align 4
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=call fastcc i8*%P(i8*inreg%ak,i8*inreg%Z)
%am=getelementptr inbounds i8,i8*%al,i64 16
%an=bitcast i8*%am to i8*(i8*,i8*)**
%ao=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%an,align 8
%ap=bitcast i8*%al to i8**
%aq=load i8*,i8**%ap,align 8
%ar=load i8*,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ar,i64 24
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%ao(i8*inreg%aq,i8*inreg%au)
store i8*%av,i8**%e,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%aw,i64 4
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
%aB=bitcast i8*%aw to i32*
store i32 1,i32*%aB,align 4
%aC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aw,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aw,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 6,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aK,i64 4
%aO=bitcast i8*%aN to i32*
store i32 0,i32*%aO,align 1
%aP=bitcast i8*%aK to i32*
store i32 4,i32*%aP,align 4
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
store i8*%aV,i8**%j,align 8
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*null,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
%a4=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@aJ,i64 0,i32 2)to i8*))
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=load i8*,i8**%c,align 8
%bb=call fastcc i8*%a7(i8*inreg%a9,i8*inreg%ba)
store i8*%bb,i8**%e,align 8
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%k,align 8
%bf=getelementptr inbounds i8,i8*%bc,i64 4
%bg=bitcast i8*%bf to i32*
store i32 0,i32*%bg,align 1
%bh=bitcast i8*%bc to i32*
store i32 25,i32*%bh,align 4
%bi=load i8*,i8**%e,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 16
%bm=bitcast i8*%bl to i32*
store i32 2,i32*%bm,align 4
%bn=bitcast i8**%d to i8***
%bo=load i8**,i8***%bn,align 8
%bp=load i8*,i8**%bo,align 8
store i8*%bp,i8**%e,align 8
%bq=getelementptr inbounds i8*,i8**%bo,i64 2
%br=load i8*,i8**%bq,align 8
%bs=getelementptr inbounds i8,i8*%br,i64 16
%bt=bitcast i8*%bs to i8*(i8*,i8*)**
%bu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bt,align 8
%bv=bitcast i8*%br to i8**
%bw=load i8*,i8**%bv,align 8
%bx=getelementptr inbounds i8*,i8**%bo,i64 1
%by=load i8*,i8**%bx,align 8
%bz=call fastcc i8*%bu(i8*inreg%bw,i8*inreg%by)
store i8*%bz,i8**%f,align 8
%bA=load i8*,i8**%d,align 8
%bB=getelementptr inbounds i8,i8*%bA,i64 8
%bC=bitcast i8*%bB to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%g,align 8
%bE=call i8*@sml_alloc(i32 inreg 28)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177304,i32*%bG,align 4
store i8*%bE,i8**%h,align 8
%bH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bN=getelementptr inbounds i8,i8*%bE,i64 16
%bO=bitcast i8*%bN to i8**
store i8*%bM,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bE,i64 24
%bQ=bitcast i8*%bP to i32*
store i32 7,i32*%bQ,align 4
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
store i8*%bR,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bR,i64 4
%bV=bitcast i8*%bU to i32*
store i32 0,i32*%bV,align 1
%bW=bitcast i8*%bR to i32*
store i32 20,i32*%bW,align 4
%bX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bY=getelementptr inbounds i8,i8*%bR,i64 8
%bZ=bitcast i8*%bY to i8**
store i8*%bX,i8**%bZ,align 8
%b0=getelementptr inbounds i8,i8*%bR,i64 16
%b1=bitcast i8*%b0 to i32*
store i32 2,i32*%b1,align 4
%b2=call i8*@sml_alloc(i32 inreg 20)#0
%b3=getelementptr inbounds i8,i8*%b2,i64 -4
%b4=bitcast i8*%b3 to i32*
store i32 1342177296,i32*%b4,align 4
store i8*%b2,i8**%f,align 8
%b5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b6=bitcast i8*%b2 to i8**
store i8*%b5,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%b2,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*null,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b2,i64 16
%ca=bitcast i8*%b9 to i32*
store i32 3,i32*%ca,align 4
%cb=call i8*@sml_alloc(i32 inreg 28)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177304,i32*%cd,align 4
store i8*%cb,i8**%e,align 8
%ce=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=load i8*,i8**%c,align 8
%ck=getelementptr inbounds i8,i8*%cb,i64 16
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cb,i64 24
%cn=bitcast i8*%cm to i32*
store i32 7,i32*%cn,align 4
%co=call i8*@sml_alloc(i32 inreg 20)#0
%cp=getelementptr inbounds i8,i8*%co,i64 -4
%cq=bitcast i8*%cp to i32*
store i32 1342177296,i32*%cq,align 4
store i8*%co,i8**%f,align 8
%cr=bitcast i8*%co to i64*
store i64 0,i64*%cr,align 4
%cs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ct=getelementptr inbounds i8,i8*%co,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%co,i64 16
%cw=bitcast i8*%cv to i32*
store i32 2,i32*%cw,align 4
%cx=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cy=getelementptr inbounds i8,i8*%cx,i64 16
%cz=bitcast i8*%cy to i8*(i8*,i8*)**
%cA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cz,align 8
%cB=bitcast i8*%cx to i8**
%cC=load i8*,i8**%cB,align 8
store i8*%cC,i8**%e,align 8
%cD=call i8*@sml_alloc(i32 inreg 12)#0
%cE=getelementptr inbounds i8,i8*%cD,i64 -4
%cF=bitcast i8*%cE to i32*
store i32 1342177288,i32*%cF,align 4
store i8*%cD,i8**%g,align 8
%cG=load i8*,i8**%c,align 8
%cH=bitcast i8*%cD to i8**
store i8*%cG,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cD,i64 8
%cJ=bitcast i8*%cI to i32*
store i32 1,i32*%cJ,align 4
%cK=call i8*@sml_alloc(i32 inreg 28)#0
%cL=getelementptr inbounds i8,i8*%cK,i64 -4
%cM=bitcast i8*%cL to i32*
store i32 1342177304,i32*%cM,align 4
%cN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cO=bitcast i8*%cK to i8**
store i8*%cN,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cK,i64 8
%cQ=bitcast i8*%cP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1827 to void(...)*),void(...)**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cK,i64 16
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1827 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cK,i64 24
%cU=bitcast i8*%cT to i32*
store i32 -2147483647,i32*%cU,align 4
%cV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cW=call fastcc i8*%cA(i8*inreg%cV,i8*inreg%cK)
%cX=getelementptr inbounds i8,i8*%cW,i64 16
%cY=bitcast i8*%cX to i8*(i8*,i8*)**
%cZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cY,align 8
%c0=bitcast i8*%cW to i8**
%c1=load i8*,i8**%c0,align 8
%c2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c3=getelementptr inbounds i8,i8*%c2,i64 32
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=call fastcc i8*%cZ(i8*inreg%c1,i8*inreg%c5)
store i8*%c6,i8**%d,align 8
%c7=call i8*@sml_alloc(i32 inreg 28)#0
%c8=getelementptr inbounds i8,i8*%c7,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 1342177304,i32*%c9,align 4
store i8*%c7,i8**%e,align 8
%da=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%db=bitcast i8*%c7 to i8**
store i8*%da,i8**%db,align 8
%dc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dd=getelementptr inbounds i8,i8*%c7,i64 8
%de=bitcast i8*%dd to i8**
store i8*%dc,i8**%de,align 8
%df=load i8*,i8**%c,align 8
%dg=getelementptr inbounds i8,i8*%c7,i64 16
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%c7,i64 24
%dj=bitcast i8*%di to i32*
store i32 7,i32*%dj,align 4
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
store i8*%dk,i8**%f,align 8
%dn=getelementptr inbounds i8,i8*%dk,i64 4
%do=bitcast i8*%dn to i32*
store i32 0,i32*%do,align 1
%dp=bitcast i8*%dk to i32*
store i32 17,i32*%dp,align 4
%dq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dr=getelementptr inbounds i8,i8*%dk,i64 8
%ds=bitcast i8*%dr to i8**
store i8*%dq,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dk,i64 16
%du=bitcast i8*%dt to i32*
store i32 2,i32*%du,align 4
%dv=call i8*@sml_alloc(i32 inreg 28)#0
%dw=getelementptr inbounds i8,i8*%dv,i64 -4
%dx=bitcast i8*%dw to i32*
store i32 1342177304,i32*%dx,align 4
store i8*%dv,i8**%d,align 8
%dy=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dz=bitcast i8*%dv to i8**
store i8*%dy,i8**%dz,align 8
%dA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dB=getelementptr inbounds i8,i8*%dv,i64 8
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%c,align 8
%dE=getelementptr inbounds i8,i8*%dv,i64 16
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dv,i64 24
%dH=bitcast i8*%dG to i32*
store i32 7,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 20)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177296,i32*%dK,align 4
store i8*%dI,i8**%e,align 8
%dL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=getelementptr inbounds i8,i8*%dI,i64 8
%dO=bitcast i8*%dN to i8**
store i8*null,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dI,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 3,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 36)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177312,i32*%dT,align 4
store i8*%dR,i8**%d,align 8
%dU=getelementptr inbounds i8,i8*%dR,i64 20
%dV=bitcast i8*%dU to i32*
store i32 0,i32*%dV,align 1
%dW=bitcast i8*%dR to i8**
%dX=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
store i8*%dX,i8**%dW,align 8
%dY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dZ=getelementptr inbounds i8,i8*%dR,i64 8
%d0=bitcast i8*%dZ to i8**
store i8*%dY,i8**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dR,i64 16
%d2=bitcast i8*%d1 to i32*
store i32 2,i32*%d2,align 4
%d3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%d4=getelementptr inbounds i8,i8*%dR,i64 24
%d5=bitcast i8*%d4 to i8**
store i8*%d3,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%dR,i64 32
%d7=bitcast i8*%d6 to i32*
store i32 11,i32*%d7,align 4
%d8=call i8*@sml_alloc(i32 inreg 20)#0
%d9=bitcast i8*%d8 to i32*
%ea=getelementptr inbounds i8,i8*%d8,i64 -4
%eb=bitcast i8*%ea to i32*
store i32 1342177296,i32*%eb,align 4
%ec=getelementptr inbounds i8,i8*%d8,i64 4
%ed=bitcast i8*%ec to i32*
store i32 0,i32*%ed,align 1
store i32 1,i32*%d9,align 4
%ee=load i8*,i8**%d,align 8
%ef=getelementptr inbounds i8,i8*%d8,i64 8
%eg=bitcast i8*%ef to i8**
store i8*%ee,i8**%eg,align 8
%eh=getelementptr inbounds i8,i8*%d8,i64 16
%ei=bitcast i8*%eh to i32*
store i32 2,i32*%ei,align 4
ret i8*%d8
}
define internal fastcc i8*@_SMLLL6values_1829(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%b,i8**%c,align 8
%j=bitcast i8*%a to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%d,align 8
%l=getelementptr inbounds i8,i8*%a,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
store i8*%n,i8**%e,align 8
%o=getelementptr inbounds i8,i8*%a,i64 16
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%f,align 8
%r=getelementptr inbounds i8,i8*%a,i64 24
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%g,align 8
%u=getelementptr inbounds i8,i8*%a,i64 32
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%h,align 8
%x=call i8*@sml_alloc(i32 inreg 52)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177328,i32*%z,align 4
store i8*%x,i8**%i,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%x,i64 16
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=getelementptr inbounds i8,i8*%x,i64 24
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%M=getelementptr inbounds i8,i8*%x,i64 32
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%x,i64 40
%Q=bitcast i8*%P to i8**
store i8*%O,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%x,i64 48
%S=bitcast i8*%R to i32*
store i32 63,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
%W=load i8*,i8**%i,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1828 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1828 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 -2147483647,i32*%ad,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLL6values_1830(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 1
store i32 25,i32*%g,align 4
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%f,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%f,i64 16
%p=bitcast i8*%o to i32*
store i32 2,i32*%p,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1831(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%c to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 4
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=bitcast i8*%K to i32*
store i32 2,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 2,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8**,i8***%y,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1832(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%c,align 8
%p=getelementptr inbounds i8,i8*%k,i64 16
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__appendE_1236(i8*inreg%s)
store i8*%C,i8**%c,align 8
%D=bitcast i8**%d to i8***
%E=load i8**,i8***%D,align 8
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%d,align 8
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177296,i32*%I,align 4
store i8*%G,i8**%e,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=bitcast i8*%G to i8**
store i8*%J,i8**%K,align 8
%L=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%M=getelementptr inbounds i8,i8*%G,i64 8
%N=bitcast i8*%M to i8**
store i8*%L,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%G,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%e,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1831 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1831 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1833(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=bitcast i8**%c to i8***
%x=load i8**,i8***%w,align 8
store i8*null,i8**%c,align 8
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%t(i8*inreg%v,i8*inreg%y)
store i8*%z,i8**%c,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%c,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1834(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1835(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%l],[%b,%j]
%r=phi i8**[%n,%l],[%k,%j]
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8*,i8**%r,i64 1
%u=load i8*,i8**%t,align 8
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
%A=call fastcc i8*%x(i8*inreg%z,i8*inreg%q)
store i8*%A,i8**%f,align 8
%B=call i8*@sml_alloc(i32 inreg 28)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177304,i32*%D,align 4
store i8*%B,i8**%g,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=load i8*,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%B,i64 24
%N=bitcast i8*%M to i32*
store i32 7,i32*%N,align 4
%O=call i8*@sml_alloc(i32 inreg 20)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177296,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%O,i64 4
%S=bitcast i8*%R to i32*
store i32 0,i32*%S,align 1
%T=bitcast i8*%O to i32*
store i32 20,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=getelementptr inbounds i8,i8*%O,i64 8
%W=bitcast i8*%V to i8**
store i8*%U,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i32*
store i32 2,i32*%Y,align 4
%Z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%e,align 8
%af=call i8*@sml_alloc(i32 inreg 12)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177288,i32*%ah,align 4
store i8*%af,i8**%g,align 8
%ai=load i8*,i8**%c,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%af,i64 8
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1834 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1834 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=call fastcc i8*%ac(i8*inreg%ax,i8*inreg%am)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8**
%aH=load i8*,i8**%aG,align 8
%aI=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aH)
store i8*%aI,i8**%d,align 8
%aJ=call i8*@sml_alloc(i32 inreg 28)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177304,i32*%aL,align 4
store i8*%aJ,i8**%e,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 16
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aJ,i64 24
%aV=bitcast i8*%aU to i32*
store i32 7,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=bitcast i8*%aW to i32*
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aW,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
store i32 17,i32*%aX,align 4
%a2=load i8*,i8**%e,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 2,i32*%a6,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1836(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1833 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1833 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%e to i8***
%Q=load i8**,i8***%P,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=load i8*,i8**%e,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%e,align 8
%X=call i8*@sml_alloc(i32 inreg 28)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177304,i32*%Z,align 4
store i8*%X,i8**%f,align 8
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%X,i64 8
%ae=bitcast i8*%ad to i8**
store i8*%ac,i8**%ae,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i8**
store i8*%af,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%X,i64 24
%aj=bitcast i8*%ai to i32*
store i32 7,i32*%aj,align 4
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=load i8*,i8**%f,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1835 to void(...)*),void(...)**%aq,align 8
%ar=getelementptr inbounds i8,i8*%ak,i64 16
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1835 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 24
%au=bitcast i8*%at to i32*
store i32 -2147483647,i32*%au,align 4
ret i8*%ak
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1837(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1839(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1840(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1839 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1839 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1841(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1840 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1840 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1842(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1843(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%c to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 4
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=bitcast i8*%K to i32*
store i32 2,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 2,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8**,i8***%y,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1844(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%a,%q]
%r=getelementptr inbounds i8,i8*%p,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%p,i64 24
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%x,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%x,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
store i8*%H,i8**%h,align 8
%K=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1836 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1836 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
%S=load i8*,i8**%g,align 8
%T=getelementptr inbounds i8,i8*%S,i64 32
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=icmp eq i8*%V,null
br i1%W,label%ac,label%X
X:
%Y=bitcast i8*%V to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%Z)
%ab=load i8*,i8**%g,align 8
br label%ac
ac:
%ad=phi i8*[%ab,%X],[%S,%o]
%ae=phi i8*[%aa,%X],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gM,i64 0,i32 2)to i8*),%o]
store i8*%ae,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%ad,i64 24
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%d,align 8
%ai=call i8*@sml_alloc(i32 inreg 12)#0
%aj=getelementptr inbounds i8,i8*%ai,i64 -4
%ak=bitcast i8*%aj to i32*
store i32 1342177288,i32*%ak,align 4
store i8*%ai,i8**%e,align 8
%al=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%am=bitcast i8*%ai to i8**
store i8*%al,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%ai,i64 8
%ao=bitcast i8*%an to i32*
store i32 1,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 28)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177304,i32*%ar,align 4
store i8*%ap,i8**%i,align 8
%as=load i8*,i8**%e,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1841 to void(...)*),void(...)**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1841 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 24
%az=bitcast i8*%ay to i32*
store i32 -2147483647,i32*%az,align 4
%aA=load i8*,i8**%g,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 16
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
%aG=getelementptr inbounds i8,i8*%aD,i64 8
%aH=bitcast i8*%aG to i8**
%aI=load i8*,i8**%aH,align 8
store i8*%aI,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%e,align 8
%aM=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%aF)
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8*(i8*,i8*)**
%aP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aO,align 8
%aQ=bitcast i8*%aM to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=call fastcc i8*%aP(i8*inreg%aR,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%aS,i8**%f,align 8
%aT=load i8*,i8**%c,align 8
%aU=getelementptr inbounds i8,i8*%aT,i64 16
%aV=bitcast i8*%aU to i8*(i8*,i8*)**
%aW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aV,align 8
%aX=bitcast i8*%aT to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%c,align 8
%aZ=call i8*@sml_alloc(i32 inreg 28)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177304,i32*%a1,align 4
store i8*%aZ,i8**%j,align 8
%a2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a8=getelementptr inbounds i8,i8*%aZ,i64 16
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%aZ,i64 24
%bb=bitcast i8*%ba to i32*
store i32 7,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
%bf=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1842 to void(...)*),void(...)**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 16
%bk=bitcast i8*%bj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1842 to void(...)*),void(...)**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 24
%bm=bitcast i8*%bl to i32*
store i32 -2147483647,i32*%bm,align 4
%bn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bo=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%bn,i8*inreg%bc)
%bp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bq=call fastcc i8*%aW(i8*inreg%bp,i8*inreg%bo)
%br=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bs=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%br,i8*inreg%bq)
store i8*%bs,i8**%c,align 8
%bt=bitcast i8**%g to i8***
%bu=load i8**,i8***%bt,align 8
store i8*null,i8**%g,align 8
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%d,align 8
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
store i8*%bw,i8**%e,align 8
%bz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 28)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177304,i32*%bI,align 4
%bJ=load i8*,i8**%e,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bG,i64 8
%bM=bitcast i8*%bL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1843 to void(...)*),void(...)**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bG,i64 16
%bO=bitcast i8*%bN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1843 to void(...)*),void(...)**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bG,i64 24
%bQ=bitcast i8*%bP to i32*
store i32 -2147483647,i32*%bQ,align 4
ret i8*%bG
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1845(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1847(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1848(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1847 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1847 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1849(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1848 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1848 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
ret i8*%H
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1850(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1851(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=bitcast i8**%c to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%f,align 8
%E=bitcast i8*%B to i8**
store i8*null,i8**%E,align 8
%F=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=getelementptr inbounds i8,i8*%K,i64 4
%O=bitcast i8*%N to i32*
store i32 0,i32*%O,align 1
%P=bitcast i8*%K to i32*
store i32 2,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%K,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i32*
store i32 2,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
store i8*%V,i8**%f,align 8
%Y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i8**
store i8*null,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ae,i64 16
%an=bitcast i8*%am to i32*
store i32 3,i32*%an,align 4
%ao=load i8**,i8***%y,align 8
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177296,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aw=getelementptr inbounds i8,i8*%aq,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%aq,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=bitcast i8*%aA to i32*
%aC=getelementptr inbounds i8,i8*%aA,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=getelementptr inbounds i8,i8*%aA,i64 4
%aF=bitcast i8*%aE to i32*
store i32 0,i32*%aF,align 1
store i32 21,i32*%aB,align 4
%aG=load i8*,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aA,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aA,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 2,i32*%aK,align 4
ret i8*%aA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1852(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%g,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%a,%p]
store i8*null,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%o,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=icmp eq i8*%s,null
br i1%t,label%z,label%u
u:
%v=bitcast i8*%s to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%w)
%y=load i8*,i8**%g,align 8
br label%z
z:
%A=phi i8*[%y,%u],[%o,%n]
%B=phi i8*[%x,%u],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gN,i64 0,i32 2)to i8*),%n]
store i8*%B,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%A,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%e,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%h,align 8
%P=load i8*,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1849 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1849 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%g,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
%ad=getelementptr inbounds i8,i8*%aa,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%aa,i64 16
%ah=bitcast i8*%ag to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%ac)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=call fastcc i8*%am(i8*inreg%ao,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%ap,i8**%f,align 8
%aq=load i8*,i8**%c,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%c,align 8
%aw=call i8*@sml_alloc(i32 inreg 28)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177304,i32*%ay,align 4
store i8*%aw,i8**%i,align 8
%az=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i8**
store i8*%aE,i8**%aG,align 8
%aH=getelementptr inbounds i8,i8*%aw,i64 24
%aI=bitcast i8*%aH to i32*
store i32 7,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 28)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177304,i32*%aL,align 4
%aM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1850 to void(...)*),void(...)**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 16
%aR=bitcast i8*%aQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1850 to void(...)*),void(...)**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aJ,i64 24
%aT=bitcast i8*%aS to i32*
store i32 -2147483647,i32*%aT,align 4
%aU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aV=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%aU,i8*inreg%aJ)
%aW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aX=call fastcc i8*%at(i8*inreg%aW,i8*inreg%aV)
store i8*%aX,i8**%c,align 8
%aY=bitcast i8**%g to i8***
%aZ=load i8**,i8***%aY,align 8
store i8*null,i8**%g,align 8
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%d,align 8
%a1=call i8*@sml_alloc(i32 inreg 20)#0
%a2=getelementptr inbounds i8,i8*%a1,i64 -4
%a3=bitcast i8*%a2 to i32*
store i32 1342177296,i32*%a3,align 4
store i8*%a1,i8**%e,align 8
%a4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a5=bitcast i8*%a1 to i8**
store i8*%a4,i8**%a5,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=getelementptr inbounds i8,i8*%a1,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a1,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 28)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177304,i32*%bd,align 4
%be=load i8*,i8**%e,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%bb,i64 8
%bh=bitcast i8*%bg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1851 to void(...)*),void(...)**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bb,i64 16
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1851 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bb,i64 24
%bl=bitcast i8*%bk to i32*
store i32 -2147483647,i32*%bl,align 4
ret i8*%bb
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1853(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1854(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1853 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1853 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1855(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1856(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1855 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1855 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1857(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=bitcast i8*%g to i8**
store i8*null,i8**%j,align 8
%k=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*%k,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1858(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 12)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177288,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i32*
store i32 1,i32*%m,align 4
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
%q=load i8*,i8**%d,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1857 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1857 to void(...)*),void(...)**%v,align 8
%w=getelementptr inbounds i8,i8*%n,i64 24
%x=bitcast i8*%w to i32*
store i32 -2147483647,i32*%x,align 4
ret i8*%n
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1859(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%l,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%l to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*%s(i8*inreg%u,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%c,align 8
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=bitcast i8*%y to i8**
%I=load i8*,i8**%H,align 8
%J=call fastcc i8*%E(i8*inreg%G,i8*inreg%I)
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=bitcast i8**%c to i8***
%ae=load i8**,i8***%ad,align 8
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%c,align 8
%ag=call i8*@sml_alloc(i32 inreg 20)#0
%ah=getelementptr inbounds i8,i8*%ag,i64 -4
%ai=bitcast i8*%ah to i32*
store i32 1342177296,i32*%ai,align 4
store i8*%ag,i8**%d,align 8
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=bitcast i8*%ag to i8**
store i8*%aj,i8**%ak,align 8
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=getelementptr inbounds i8,i8*%ag,i64 8
%an=bitcast i8*%am to i8**
store i8*%al,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%ag,i64 16
%ap=bitcast i8*%ao to i32*
store i32 3,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 20)#0
%ar=bitcast i8*%aq to i32*
%as=getelementptr inbounds i8,i8*%aq,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=getelementptr inbounds i8,i8*%aq,i64 4
%av=bitcast i8*%au to i32*
store i32 0,i32*%av,align 1
store i32 21,i32*%ar,align 4
%aw=load i8*,i8**%d,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 16
%aA=bitcast i8*%az to i32*
store i32 2,i32*%aA,align 4
ret i8*%aq
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1860(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%e to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
%r=getelementptr inbounds i8,i8*%q,i64 16
%s=bitcast i8*%r to i8*(i8*,i8*)**
%t=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%s,align 8
%u=bitcast i8*%q to i8**
%v=load i8*,i8**%u,align 8
%w=load i8*,i8**%c,align 8
%x=call fastcc i8*%t(i8*inreg%v,i8*inreg%w)
store i8*%x,i8**%d,align 8
%y=load i8*,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%y,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%B)
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8*(i8*,i8*)**
%F=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%E,align 8
%G=bitcast i8*%C to i8**
%H=load i8*,i8**%G,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=call fastcc i8*%F(i8*inreg%H,i8*inreg%I)
store i8*%J,i8**%c,align 8
%K=load i8*,i8**%e,align 8
%L=getelementptr inbounds i8,i8*%K,i64 16
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=call i8*@sml_alloc(i32 inreg 28)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177304,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%O,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X=getelementptr inbounds i8,i8*%O,i64 16
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%O,i64 24
%aa=bitcast i8*%Z to i32*
store i32 7,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1859 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1859 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1862(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1863(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1862 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1862 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1864(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call i8*@sml_alloc(i32 inreg 20)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
store i8*%i,i8**%d,align 8
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i8**
store i8*null,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%i,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%b,align 8
%J=call i8*@sml_alloc(i32 inreg 12)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177288,i32*%L,align 4
store i8*%J,i8**%c,align 8
%M=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1863 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1863 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1866(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%c to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8*,i8**%o,i64 2
%r=load i8*,i8**%q,align 8
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8*,i8**%o,i64 1
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%u(i8*inreg%w,i8*inreg%y)
store i8*%z,i8**%e,align 8
%A=load i8*,i8**%c,align 8
%B=getelementptr inbounds i8,i8*%A,i64 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%c,align 8
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
store i8*%E,i8**%f,align 8
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%N=getelementptr inbounds i8,i8*%E,i64 16
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%E,i64 24
%Q=bitcast i8*%P to i32*
store i32 7,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=bitcast i8*%R to i32*
%T=getelementptr inbounds i8,i8*%R,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%R,i64 4
%W=bitcast i8*%V to i32*
store i32 0,i32*%W,align 1
store i32 20,i32*%S,align 4
%X=load i8*,i8**%f,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 16
%ab=bitcast i8*%aa to i32*
store i32 2,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1867(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1868(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1869(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1868 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1868 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1870(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call i8*@sml_alloc(i32 inreg 20)#0
%j=getelementptr inbounds i8,i8*%i,i64 -4
%k=bitcast i8*%j to i32*
store i32 1342177296,i32*%k,align 4
store i8*%i,i8**%d,align 8
%l=load i8*,i8**%b,align 8
%m=bitcast i8*%i to i8**
store i8*%l,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%i,i64 8
%o=bitcast i8*%n to i8**
store i8*null,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%i,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%r,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%r,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
%H=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I=call fastcc i8*%E(i8*inreg%G,i8*inreg%H)
store i8*%I,i8**%b,align 8
%J=call i8*@sml_alloc(i32 inreg 12)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177288,i32*%L,align 4
store i8*%J,i8**%c,align 8
%M=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 28)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177304,i32*%S,align 4
%T=load i8*,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1869 to void(...)*),void(...)**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1869 to void(...)*),void(...)**%Y,align 8
%Z=getelementptr inbounds i8,i8*%Q,i64 24
%aa=bitcast i8*%Z to i32*
store i32 -2147483647,i32*%aa,align 4
ret i8*%Q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1872(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1873(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 25,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1874(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1873 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1873 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1876(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1877(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%q
m:
call void@sml_check(i32 inreg%i)
%n=load i8*,i8**%c,align 8
%o=bitcast i8**%d to i8***
%p=load i8**,i8***%o,align 8
br label%q
q:
%r=phi i8**[%p,%m],[%l,%k]
%s=phi i8*[%n,%m],[%b,%k]
%t=load i8*,i8**%r,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
%z=call fastcc i8*%w(i8*inreg%y,i8*inreg%s)
store i8*%z,i8**%e,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%f,align 8
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*null,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
%J=load i8*,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%J,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%c,align 8
%T=call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%g,align 8
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 12)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177288,i32*%al,align 4
store i8*%aj,i8**%h,align 8
%am=load i8*,i8**%c,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i32*
store i32 1,i32*%ap,align 4
%aq=call i8*@sml_alloc(i32 inreg 28)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177304,i32*%as,align 4
%at=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1876 to void(...)*),void(...)**%aw,align 8
%ax=getelementptr inbounds i8,i8*%aq,i64 16
%ay=bitcast i8*%ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1876 to void(...)*),void(...)**%ay,align 8
%az=getelementptr inbounds i8,i8*%aq,i64 24
%aA=bitcast i8*%az to i32*
store i32 -2147483647,i32*%aA,align 4
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=call fastcc i8*%ag(i8*inreg%aB,i8*inreg%aq)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 16
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
%aM=call fastcc i8*%aF(i8*inreg%aH,i8*inreg%aL)
store i8*%aM,i8**%d,align 8
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
store i8*%aN,i8**%e,align 8
%aQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%c,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 20)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
store i8*%aX,i8**%h,align 8
%a0=getelementptr inbounds i8,i8*%aX,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
%a2=bitcast i8*%aX to i32*
store i32 15,i32*%a2,align 4
%a3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a4=getelementptr inbounds i8,i8*%aX,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*%a3,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aX,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 2,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
store i8*%a8,i8**%d,align 8
%bb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=load i8*,i8**%c,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 16
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%a8,i64 24
%bk=bitcast i8*%bj to i32*
store i32 7,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%e,align 8
%bo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i8**
store i8*null,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 36)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177312,i32*%bw,align 4
store i8*%bu,i8**%d,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 20
%by=bitcast i8*%bx to i32*
store i32 0,i32*%by,align 1
%bz=bitcast i8*%bu to i8**
%bA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
store i8*%bA,i8**%bz,align 8
%bB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bu,i64 16
%bF=bitcast i8*%bE to i32*
store i32 2,i32*%bF,align 4
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=getelementptr inbounds i8,i8*%bu,i64 24
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bu,i64 32
%bK=bitcast i8*%bJ to i32*
store i32 11,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=bitcast i8*%bL to i32*
%bN=getelementptr inbounds i8,i8*%bL,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
%bP=getelementptr inbounds i8,i8*%bL,i64 4
%bQ=bitcast i8*%bP to i32*
store i32 0,i32*%bQ,align 1
store i32 1,i32*%bM,align 4
%bR=load i8*,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bL,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i32*
store i32 2,i32*%bV,align 4
ret i8*%bL
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1878(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%f,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%q)
store i8*%r,i8**%d,align 8
%s=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%g,align 8
%y=bitcast i8**%f to i8***
%z=load i8**,i8***%y,align 8
%A=load i8*,i8**%z,align 8
%B=call fastcc i8*@_SMLLLN12ElaborateSQL14tableToPatPairE_1291(i8*inreg%A)
%C=call fastcc i8*@_SMLLLN12ElaborateSQL4pairE_1289(i8*inreg%B)
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 20)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fS,i64 0,i32 2)to i8*),i8**%J,align 8
%K=getelementptr inbounds i8,i8*%D,i64 16
%L=bitcast i8*%K to i32*
store i32 3,i32*%L,align 4
%M=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%N=call fastcc i8*%v(i8*inreg%M,i8*inreg%D)
store i8*%N,i8**%e,align 8
%O=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%P=getelementptr inbounds i8,i8*%O,i64 16
%Q=bitcast i8*%P to i8*(i8*,i8*)**
%R=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Q,align 8
%S=bitcast i8*%O to i8**
%T=load i8*,i8**%S,align 8
%U=call fastcc i8*%R(i8*inreg%T,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gR,i64 0,i32 2)to i8*))
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%g,align 8
%aa=load i8**,i8***%y,align 8
store i8*null,i8**%f,align 8
%ab=load i8*,i8**%aa,align 8
%ac=call fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%ab)
%ad=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ae=call fastcc i8*%X(i8*inreg%ad,i8*inreg%ac)
store i8*%ae,i8**%f,align 8
%af=load i8*,i8**%d,align 8
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
store i8*%al,i8**%g,align 8
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%au=getelementptr inbounds i8,i8*%al,i64 16
%av=bitcast i8*%au to i8**
store i8*%at,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%al,i64 24
%ax=bitcast i8*%aw to i32*
store i32 7,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
%aB=load i8*,i8**%g,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1877 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1877 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 24
%aI=bitcast i8*%aH to i32*
store i32 -2147483647,i32*%aI,align 4
%aJ=load i8*,i8**%d,align 8
%aK=tail call fastcc i8*%ai(i8*inreg%aJ,i8*inreg%ay)
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1879(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1880(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1883(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%n,label%m
m:
call void@sml_check(i32 inreg%k)
br label%n
n:
%o=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@a8,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
store i8*%v,i8**%e,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%g,align 8
%z=getelementptr inbounds i8,i8*%w,i64 4
%A=bitcast i8*%z to i32*
store i32 0,i32*%A,align 1
%B=bitcast i8*%w to i32*
store i32 25,i32*%B,align 4
%C=load i8*,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%w,i64 8
%E=bitcast i8*%D to i8**
store i8*%C,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i32*
store i32 2,i32*%G,align 4
%H=bitcast i8**%d to i8***
%I=load i8**,i8***%H,align 8
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=getelementptr inbounds i8,i8*%T,i64 4
%X=bitcast i8*%W to i32*
store i32 0,i32*%X,align 1
%Y=bitcast i8*%T to i32*
store i32 2,i32*%Y,align 4
%Z=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 16
%ad=bitcast i8*%ac to i32*
store i32 2,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 20)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
store i8*%ae,i8**%h,align 8
%ah=load i8*,i8**%e,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
store i8*null,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ae,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%e,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%f,align 8
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
store i8*%at,i8**%i,align 8
%aw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%at,i64 8
%az=bitcast i8*%ay to i8**
store i8*null,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%j,align 8
%aF=getelementptr inbounds i8,i8*%aC,i64 4
%aG=bitcast i8*%aF to i32*
store i32 0,i32*%aG,align 1
%aH=bitcast i8*%aC to i32*
store i32 25,i32*%aH,align 4
%aI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i32*
store i32 2,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 28)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177304,i32*%aP,align 4
store i8*%aN,i8**%f,align 8
%aQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=load i8*,i8**%c,align 8
%aW=getelementptr inbounds i8,i8*%aN,i64 16
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aN,i64 24
%aZ=bitcast i8*%aY to i32*
store i32 7,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
store i8*%a0,i8**%i,align 8
%a3=getelementptr inbounds i8,i8*%a0,i64 4
%a4=bitcast i8*%a3 to i32*
store i32 0,i32*%a4,align 1
%a5=bitcast i8*%a0 to i32*
store i32 20,i32*%a5,align 4
%a6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a0,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 2,i32*%ba,align 4
%bb=load i8*,i8**%d,align 8
%bc=getelementptr inbounds i8,i8*%bb,i64 16
%bd=bitcast i8*%bc to i8**
%be=load i8*,i8**%bd,align 8
store i8*%be,i8**%e,align 8
%bf=bitcast i8*%bb to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%d,align 8
%bh=call i8*@sml_alloc(i32 inreg 20)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177296,i32*%bj,align 4
store i8*%bh,i8**%f,align 8
%bk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to i8**
store i8*null,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bh,i64 16
%bp=bitcast i8*%bo to i32*
store i32 3,i32*%bp,align 4
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177296,i32*%bs,align 4
store i8*%bq,i8**%j,align 8
%bt=getelementptr inbounds i8,i8*%bq,i64 4
%bu=bitcast i8*%bt to i32*
store i32 0,i32*%bu,align 1
%bv=bitcast i8*%bq to i32*
store i32 25,i32*%bv,align 4
%bw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 16
%bA=bitcast i8*%bz to i32*
store i32 2,i32*%bA,align 4
%bB=call i8*@sml_alloc(i32 inreg 28)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177304,i32*%bD,align 4
store i8*%bB,i8**%d,align 8
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=bitcast i8*%bB to i8**
store i8*%bE,i8**%bF,align 8
%bG=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bH=getelementptr inbounds i8,i8*%bB,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=load i8*,i8**%c,align 8
%bK=getelementptr inbounds i8,i8*%bB,i64 16
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bB,i64 24
%bN=bitcast i8*%bM to i32*
store i32 7,i32*%bN,align 4
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
store i8*%bO,i8**%e,align 8
%bR=getelementptr inbounds i8,i8*%bO,i64 4
%bS=bitcast i8*%bR to i32*
store i32 0,i32*%bS,align 1
%bT=bitcast i8*%bO to i32*
store i32 20,i32*%bT,align 4
%bU=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 8
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bO,i64 16
%bY=bitcast i8*%bX to i32*
store i32 2,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 36)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177312,i32*%b1,align 4
store i8*%bZ,i8**%d,align 8
%b2=getelementptr inbounds i8,i8*%bZ,i64 4
%b3=bitcast i8*%b2 to i32*
store i32 0,i32*%b3,align 1
%b4=bitcast i8*%bZ to i32*
store i32 1,i32*%b4,align 4
%b5=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b6=getelementptr inbounds i8,i8*%bZ,i64 8
%b7=bitcast i8*%b6 to i8**
store i8*%b5,i8**%b7,align 8
%b8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b9=getelementptr inbounds i8,i8*%bZ,i64 16
%ca=bitcast i8*%b9 to i8**
store i8*%b8,i8**%ca,align 8
%cb=load i8*,i8**%c,align 8
%cc=getelementptr inbounds i8,i8*%bZ,i64 24
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%bZ,i64 32
%cf=bitcast i8*%ce to i32*
store i32 14,i32*%cf,align 4
%cg=call i8*@sml_alloc(i32 inreg 20)#0
%ch=getelementptr inbounds i8,i8*%cg,i64 -4
%ci=bitcast i8*%ch to i32*
store i32 1342177296,i32*%ci,align 4
store i8*%cg,i8**%e,align 8
%cj=getelementptr inbounds i8,i8*%cg,i64 4
%ck=bitcast i8*%cj to i32*
store i32 0,i32*%ck,align 1
%cl=bitcast i8*%cg to i32*
store i32 12,i32*%cl,align 4
%cm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cn=getelementptr inbounds i8,i8*%cg,i64 8
%co=bitcast i8*%cn to i8**
store i8*%cm,i8**%co,align 8
%cp=getelementptr inbounds i8,i8*%cg,i64 16
%cq=bitcast i8*%cp to i32*
store i32 2,i32*%cq,align 4
%cr=call i8*@sml_alloc(i32 inreg 28)#0
%cs=getelementptr inbounds i8,i8*%cr,i64 -4
%ct=bitcast i8*%cs to i32*
store i32 1342177304,i32*%ct,align 4
store i8*%cr,i8**%d,align 8
%cu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cv=bitcast i8*%cr to i8**
store i8*%cu,i8**%cv,align 8
%cw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cx=getelementptr inbounds i8,i8*%cr,i64 8
%cy=bitcast i8*%cx to i8**
store i8*%cw,i8**%cy,align 8
%cz=load i8*,i8**%c,align 8
%cA=getelementptr inbounds i8,i8*%cr,i64 16
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cr,i64 24
%cD=bitcast i8*%cC to i32*
store i32 7,i32*%cD,align 4
%cE=call i8*@sml_alloc(i32 inreg 20)#0
%cF=getelementptr inbounds i8,i8*%cE,i64 -4
%cG=bitcast i8*%cF to i32*
store i32 1342177296,i32*%cG,align 4
store i8*%cE,i8**%e,align 8
%cH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cI=bitcast i8*%cE to i8**
store i8*%cH,i8**%cI,align 8
%cJ=getelementptr inbounds i8,i8*%cE,i64 8
%cK=bitcast i8*%cJ to i8**
store i8*null,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cE,i64 16
%cM=bitcast i8*%cL to i32*
store i32 3,i32*%cM,align 4
%cN=call i8*@sml_alloc(i32 inreg 20)#0
%cO=getelementptr inbounds i8,i8*%cN,i64 -4
%cP=bitcast i8*%cO to i32*
store i32 1342177296,i32*%cP,align 4
store i8*%cN,i8**%d,align 8
%cQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cR=bitcast i8*%cN to i8**
store i8*%cQ,i8**%cR,align 8
%cS=load i8*,i8**%c,align 8
%cT=getelementptr inbounds i8,i8*%cN,i64 8
%cU=bitcast i8*%cT to i8**
store i8*%cS,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cN,i64 16
%cW=bitcast i8*%cV to i32*
store i32 3,i32*%cW,align 4
%cX=call i8*@sml_alloc(i32 inreg 20)#0
%cY=getelementptr inbounds i8,i8*%cX,i64 -4
%cZ=bitcast i8*%cY to i32*
store i32 1342177296,i32*%cZ,align 4
store i8*%cX,i8**%e,align 8
%c0=getelementptr inbounds i8,i8*%cX,i64 4
%c1=bitcast i8*%c0 to i32*
store i32 0,i32*%c1,align 1
%c2=bitcast i8*%cX to i32*
store i32 10,i32*%c2,align 4
%c3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c4=getelementptr inbounds i8,i8*%cX,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=getelementptr inbounds i8,i8*%cX,i64 16
%c7=bitcast i8*%c6 to i32*
store i32 2,i32*%c7,align 4
%c8=call i8*@sml_alloc(i32 inreg 20)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177296,i32*%da,align 4
store i8*%c8,i8**%f,align 8
%db=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i8**
store i8*null,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%c8,i64 16
%dg=bitcast i8*%df to i32*
store i32 3,i32*%dg,align 4
%dh=call i8*@sml_alloc(i32 inreg 28)#0
%di=getelementptr inbounds i8,i8*%dh,i64 -4
%dj=bitcast i8*%di to i32*
store i32 1342177304,i32*%dj,align 4
store i8*%dh,i8**%d,align 8
%dk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dl=bitcast i8*%dh to i8**
store i8*%dk,i8**%dl,align 8
%dm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dn=getelementptr inbounds i8,i8*%dh,i64 8
%do=bitcast i8*%dn to i8**
store i8*%dm,i8**%do,align 8
%dp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dq=getelementptr inbounds i8,i8*%dh,i64 16
%dr=bitcast i8*%dq to i8**
store i8*%dp,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dh,i64 24
%dt=bitcast i8*%ds to i32*
store i32 7,i32*%dt,align 4
%du=call i8*@sml_alloc(i32 inreg 20)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177296,i32*%dw,align 4
%dx=bitcast i8*%du to i64*
store i64 0,i64*%dx,align 4
%dy=load i8*,i8**%d,align 8
%dz=getelementptr inbounds i8,i8*%du,i64 8
%dA=bitcast i8*%dz to i8**
store i8*%dy,i8**%dA,align 8
%dB=getelementptr inbounds i8,i8*%du,i64 16
%dC=bitcast i8*%dB to i32*
store i32 2,i32*%dC,align 4
ret i8*%du
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1884(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1885(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%m,i64 16
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
%t=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1883(i8*inreg%q,i8*inreg%s)
store i8*%t,i8**%d,align 8
%u=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v=getelementptr inbounds i8,i8*%u,i64 16
%w=bitcast i8*%v to i8*(i8*,i8*)**
%x=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%w,align 8
%y=bitcast i8*%u to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%f,align 8
%A=bitcast i8**%c to i8***
%B=load i8**,i8***%A,align 8
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=call i8*@sml_alloc(i32 inreg 12)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177288,i32*%F,align 4
store i8*%D,i8**%g,align 8
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=bitcast i8*%D to i8**
store i8*%G,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1884 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1884 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
%V=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%W=call fastcc i8*%x(i8*inreg%V,i8*inreg%K)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=getelementptr inbounds i8,i8*%ac,i64 8
%ae=bitcast i8*%ad to i8**
%af=load i8*,i8**%ae,align 8
%ag=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%af)
store i8*%ag,i8**%e,align 8
%ah=load i8**,i8***%A,align 8
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%f,align 8
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%g,align 8
%am=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%aj,i64 16
%as=bitcast i8*%ar to i32*
store i32 3,i32*%as,align 4
%at=call i8*@sml_alloc(i32 inreg 20)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177296,i32*%av,align 4
store i8*%at,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 4
%ax=bitcast i8*%aw to i32*
store i32 0,i32*%ax,align 1
%ay=bitcast i8*%at to i32*
store i32 15,i32*%ay,align 4
%az=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aA=getelementptr inbounds i8,i8*%at,i64 8
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i32*
store i32 2,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%f,align 8
%aH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aE,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*null,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=load i8**,i8***%A,align 8
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%c,align 8
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
store i8*%aP,i8**%e,align 8
%aS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 16
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aP,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 7,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
%a5=bitcast i8*%a2 to i64*
store i64 0,i64*%a5,align 4
%a6=load i8*,i8**%e,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*%a6,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 2,i32*%ba,align 4
ret i8*%a2
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
br label%k
k:
%l=phi i8*[%jV,%jS],[%a,%m]
store i8*%l,i8**%b,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%r,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%b,align 8
br label%r
r:
%s=phi i8*[%q,%p],[%l,%k]
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 16,label%Fa
i32 8,label%Ew
i32 6,label%Bn
i32 17,label%A1
i32 3,label%Ax
i32 4,label%zV
i32 19,label%vt
i32 20,label%uJ
i32 0,label%t9
i32 27,label%sX
i32 1,label%rG
i32 28,label%rc
i32 9,label%qI
i32 10,label%qe
i32 30,label%pK
i32 11,label%pg
i32 21,label%oM
i32 18,label%ng
i32 15,label%lI
i32 25,label%k0
i32 22,label%jW
i32 23,label%jS
i32 13,label%hC
i32 12,label%fA
i32 14,label%c3
i32 29,label%ch
i32 7,label%bB
i32 2,label%bf
i32 5,label%aT
i32 24,label%ax
i32 26,label%N
]
v:
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@gO,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%s,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%b,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%c,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 16
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%d,align 8
%Z=call i8*@sml_alloc(i32 inreg 28)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177304,i32*%ab,align 4
store i8*%Z,i8**%e,align 8
%ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai=getelementptr inbounds i8,i8*%Z,i64 16
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%Z,i64 24
%al=bitcast i8*%ak to i32*
store i32 7,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%e,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1860 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1860 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
ret i8*%am
ax:
%ay=getelementptr inbounds i8,i8*%s,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%b,align 8
%aB=call i8*@sml_alloc(i32 inreg 12)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177288,i32*%aD,align 4
store i8*%aB,i8**%c,align 8
%aE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to i32*
store i32 1,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 28)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177304,i32*%aK,align 4
%aL=load i8*,i8**%c,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1858 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1858 to void(...)*),void(...)**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 24
%aS=bitcast i8*%aR to i32*
store i32 -2147483647,i32*%aS,align 4
ret i8*%aI
aT:
%aU=getelementptr inbounds i8,i8*%s,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
store i8*%aW,i8**%b,align 8
%aX=call i8*@sml_alloc(i32 inreg 12)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177288,i32*%aZ,align 4
store i8*%aX,i8**%c,align 8
%a0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aX,i64 8
%a3=bitcast i8*%a2 to i32*
store i32 1,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 28)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177304,i32*%a6,align 4
%a7=load i8*,i8**%c,align 8
%a8=bitcast i8*%a4 to i8**
store i8*%a7,i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1856 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1856 to void(...)*),void(...)**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a4,i64 24
%be=bitcast i8*%bd to i32*
store i32 -2147483647,i32*%be,align 4
ret i8*%a4
bf:
%bg=getelementptr inbounds i8,i8*%s,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%b,align 8
%bj=call i8*@sml_alloc(i32 inreg 12)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177288,i32*%bl,align 4
store i8*%bj,i8**%c,align 8
%bm=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bj,i64 8
%bp=bitcast i8*%bo to i32*
store i32 1,i32*%bp,align 4
%bq=call i8*@sml_alloc(i32 inreg 28)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177304,i32*%bs,align 4
%bt=load i8*,i8**%c,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bq,i64 8
%bw=bitcast i8*%bv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1854 to void(...)*),void(...)**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 16
%by=bitcast i8*%bx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1854 to void(...)*),void(...)**%by,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 24
%bA=bitcast i8*%bz to i32*
store i32 -2147483647,i32*%bA,align 4
ret i8*%bq
bB:
%bC=getelementptr inbounds i8,i8*%s,i64 8
%bD=bitcast i8*%bC to i8**
%bE=load i8*,i8**%bD,align 8
%bF=bitcast i8*%bE to i8**
%bG=load i8*,i8**%bF,align 8
store i8*%bG,i8**%b,align 8
%bH=getelementptr inbounds i8,i8*%bE,i64 8
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%c,align 8
%bK=getelementptr inbounds i8,i8*%bJ,i64 8
%bL=bitcast i8*%bK to i8**
%bM=load i8*,i8**%bL,align 8
store i8*%bM,i8**%d,align 8
%bN=getelementptr inbounds i8,i8*%bE,i64 16
%bO=bitcast i8*%bN to i8**
%bP=load i8*,i8**%bO,align 8
store i8*%bP,i8**%e,align 8
%bQ=call i8*@sml_alloc(i32 inreg 36)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177312,i32*%bS,align 4
store i8*%bQ,i8**%f,align 8
%bT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bW=getelementptr inbounds i8,i8*%bQ,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bZ=getelementptr inbounds i8,i8*%bQ,i64 16
%b0=bitcast i8*%bZ to i8**
store i8*%bY,i8**%b0,align 8
%b1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bQ,i64 24
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bQ,i64 32
%b5=bitcast i8*%b4 to i32*
store i32 15,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
%b9=load i8*,i8**%f,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1852 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1852 to void(...)*),void(...)**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 24
%cg=bitcast i8*%cf to i32*
store i32 -2147483647,i32*%cg,align 4
ret i8*%b6
ch:
%ci=getelementptr inbounds i8,i8*%s,i64 8
%cj=bitcast i8*%ci to i8**
%ck=load i8*,i8**%cj,align 8
%cl=bitcast i8*%ck to i8**
%cm=load i8*,i8**%cl,align 8
store i8*%cm,i8**%b,align 8
%cn=getelementptr inbounds i8,i8*%ck,i64 8
%co=bitcast i8*%cn to i8**
%cp=load i8*,i8**%co,align 8
store i8*%cp,i8**%c,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 16
%cr=bitcast i8*%cq to i8**
%cs=load i8*,i8**%cr,align 8
store i8*%cs,i8**%d,align 8
%ct=getelementptr inbounds i8,i8*%cs,i64 8
%cu=bitcast i8*%ct to i8**
%cv=load i8*,i8**%cu,align 8
store i8*%cv,i8**%e,align 8
%cw=getelementptr inbounds i8,i8*%ck,i64 24
%cx=bitcast i8*%cw to i8**
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%f,align 8
%cz=call i8*@sml_alloc(i32 inreg 44)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177320,i32*%cB,align 4
store i8*%cz,i8**%g,align 8
%cC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cF=getelementptr inbounds i8,i8*%cz,i64 8
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cL=getelementptr inbounds i8,i8*%cz,i64 24
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cO=getelementptr inbounds i8,i8*%cz,i64 32
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cz,i64 40
%cR=bitcast i8*%cQ to i32*
store i32 31,i32*%cR,align 4
%cS=call i8*@sml_alloc(i32 inreg 28)#0
%cT=getelementptr inbounds i8,i8*%cS,i64 -4
%cU=bitcast i8*%cT to i32*
store i32 1342177304,i32*%cU,align 4
%cV=load i8*,i8**%g,align 8
%cW=bitcast i8*%cS to i8**
store i8*%cV,i8**%cW,align 8
%cX=getelementptr inbounds i8,i8*%cS,i64 8
%cY=bitcast i8*%cX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1844 to void(...)*),void(...)**%cY,align 8
%cZ=getelementptr inbounds i8,i8*%cS,i64 16
%c0=bitcast i8*%cZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1844 to void(...)*),void(...)**%c0,align 8
%c1=getelementptr inbounds i8,i8*%cS,i64 24
%c2=bitcast i8*%c1 to i32*
store i32 -2147483647,i32*%c2,align 4
ret i8*%cS
c3:
%c4=getelementptr inbounds i8,i8*%s,i64 8
%c5=bitcast i8*%c4 to i8**
%c6=load i8*,i8**%c5,align 8
%c7=bitcast i8*%c6 to i8**
%c8=load i8*,i8**%c7,align 8
store i8*%c8,i8**%b,align 8
%c9=getelementptr inbounds i8,i8*%c6,i64 8
%da=bitcast i8*%c9 to i8**
%db=load i8*,i8**%da,align 8
store i8*%db,i8**%c,align 8
%dc=getelementptr inbounds i8,i8*%c6,i64 16
%dd=bitcast i8*%dc to i8**
%de=load i8*,i8**%dd,align 8
%df=getelementptr inbounds i8,i8*%c6,i64 24
%dg=bitcast i8*%df to i8***
%dh=load i8**,i8***%dg,align 8
%di=load i8*,i8**%dh,align 8
store i8*%di,i8**%d,align 8
%dj=bitcast i8*%de to i8**
%dk=load i8*,i8**%dj,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 8
%dm=bitcast i8*%dl to i8**
%dn=load i8*,i8**%dm,align 8
store i8*%dn,i8**%e,align 8
%do=getelementptr inbounds i8,i8*%de,i64 16
%dp=bitcast i8*%do to i8**
%dq=load i8*,i8**%dp,align 8
store i8*%dq,i8**%f,align 8
%dr=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%dk)
%ds=getelementptr inbounds i8,i8*%dr,i64 16
%dt=bitcast i8*%ds to i8*(i8*,i8*)**
%du=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dt,align 8
%dv=bitcast i8*%dr to i8**
%dw=load i8*,i8**%dv,align 8
%dx=call fastcc i8*%du(i8*inreg%dw,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%dx,i8**%g,align 8
%dy=call i8*@sml_alloc(i32 inreg 28)#0
%dz=getelementptr inbounds i8,i8*%dy,i64 -4
%dA=bitcast i8*%dz to i32*
store i32 1342177304,i32*%dA,align 4
store i8*%dy,i8**%h,align 8
%dB=load i8*,i8**%e,align 8
%dC=bitcast i8*%dy to i8**
store i8*%dB,i8**%dC,align 8
%dD=load i8*,i8**%f,align 8
%dE=getelementptr inbounds i8,i8*%dy,i64 8
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=load i8*,i8**%g,align 8
%dH=getelementptr inbounds i8,i8*%dy,i64 16
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dy,i64 24
%dK=bitcast i8*%dJ to i32*
store i32 7,i32*%dK,align 4
%dL=call i8*@sml_alloc(i32 inreg 28)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177304,i32*%dN,align 4
store i8*%dL,i8**%i,align 8
%dO=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dL,i64 8
%dR=bitcast i8*%dQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_1819 to void(...)*),void(...)**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dL,i64 16
%dT=bitcast i8*%dS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_1819 to void(...)*),void(...)**%dT,align 8
%dU=getelementptr inbounds i8,i8*%dL,i64 24
%dV=bitcast i8*%dU to i32*
store i32 -2147483647,i32*%dV,align 4
%dW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dX=getelementptr inbounds i8,i8*%dW,i64 16
%dY=bitcast i8*%dX to i8*(i8*,i8*)**
%dZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dY,align 8
%d0=bitcast i8*%dW to i8**
%d1=load i8*,i8**%d0,align 8
%d2=call fastcc i8*%dZ(i8*inreg%d1,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gK,i64 0,i32 2)to i8*))
%d3=getelementptr inbounds i8,i8*%d2,i64 16
%d4=bitcast i8*%d3 to i8*(i8*,i8*)**
%d5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d4,align 8
%d6=bitcast i8*%d2 to i8**
%d7=load i8*,i8**%d6,align 8
%d8=load i8*,i8**%b,align 8
%d9=call fastcc i8*%d5(i8*inreg%d7,i8*inreg%d8)
store i8*%d9,i8**%h,align 8
%ea=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%eb=getelementptr inbounds i8,i8*%ea,i64 16
%ec=bitcast i8*%eb to i8*(i8*,i8*)**
%ed=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ec,align 8
%ee=bitcast i8*%ea to i8**
%ef=load i8*,i8**%ee,align 8
%eg=call fastcc i8*%ed(i8*inreg%ef,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gL,i64 0,i32 2)to i8*))
%eh=getelementptr inbounds i8,i8*%eg,i64 16
%ei=bitcast i8*%eh to i8*(i8*,i8*)**
%ej=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ei,align 8
%ek=bitcast i8*%eg to i8**
%el=load i8*,i8**%ek,align 8
%em=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%en=call fastcc i8*%ej(i8*inreg%el,i8*inreg%em)
store i8*%en,i8**%b,align 8
%eo=call i8*@sml_alloc(i32 inreg 44)#0
%ep=getelementptr inbounds i8,i8*%eo,i64 -4
%eq=bitcast i8*%ep to i32*
store i32 1342177320,i32*%eq,align 4
store i8*%eo,i8**%j,align 8
%er=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%es=bitcast i8*%eo to i8**
store i8*%er,i8**%es,align 8
%et=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eu=getelementptr inbounds i8,i8*%eo,i64 8
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ex=getelementptr inbounds i8,i8*%eo,i64 16
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eA=getelementptr inbounds i8,i8*%eo,i64 24
%eB=bitcast i8*%eA to i8**
store i8*%ez,i8**%eB,align 8
%eC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%eD=getelementptr inbounds i8,i8*%eo,i64 32
%eE=bitcast i8*%eD to i8**
store i8*%eC,i8**%eE,align 8
%eF=getelementptr inbounds i8,i8*%eo,i64 40
%eG=bitcast i8*%eF to i32*
store i32 31,i32*%eG,align 4
%eH=call i8*@sml_alloc(i32 inreg 28)#0
%eI=getelementptr inbounds i8,i8*%eH,i64 -4
%eJ=bitcast i8*%eI to i32*
store i32 1342177304,i32*%eJ,align 4
store i8*%eH,i8**%b,align 8
%eK=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%eL=bitcast i8*%eH to i8**
store i8*%eK,i8**%eL,align 8
%eM=getelementptr inbounds i8,i8*%eH,i64 8
%eN=bitcast i8*%eM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1829 to void(...)*),void(...)**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eH,i64 16
%eP=bitcast i8*%eO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1829 to void(...)*),void(...)**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eH,i64 24
%eR=bitcast i8*%eQ to i32*
store i32 -2147483647,i32*%eR,align 4
%eS=call i8*@sml_alloc(i32 inreg 12)#0
%eT=getelementptr inbounds i8,i8*%eS,i64 -4
%eU=bitcast i8*%eT to i32*
store i32 1342177288,i32*%eU,align 4
store i8*%eS,i8**%e,align 8
%eV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eW=bitcast i8*%eS to i8**
store i8*%eV,i8**%eW,align 8
%eX=getelementptr inbounds i8,i8*%eS,i64 8
%eY=bitcast i8*%eX to i32*
store i32 1,i32*%eY,align 4
%eZ=call i8*@sml_alloc(i32 inreg 28)#0
%e0=getelementptr inbounds i8,i8*%eZ,i64 -4
%e1=bitcast i8*%e0 to i32*
store i32 1342177304,i32*%e1,align 4
%e2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%e3=bitcast i8*%eZ to i8**
store i8*%e2,i8**%e3,align 8
%e4=getelementptr inbounds i8,i8*%eZ,i64 8
%e5=bitcast i8*%e4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1830 to void(...)*),void(...)**%e5,align 8
%e6=getelementptr inbounds i8,i8*%eZ,i64 16
%e7=bitcast i8*%e6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL6values_1830 to void(...)*),void(...)**%e7,align 8
%e8=getelementptr inbounds i8,i8*%eZ,i64 24
%e9=bitcast i8*%e8 to i32*
store i32 -2147483647,i32*%e9,align 4
%fa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fb=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%fa,i8*inreg%eZ)
store i8*%fb,i8**%b,align 8
%fc=call i8*@sml_alloc(i32 inreg 28)#0
%fd=getelementptr inbounds i8,i8*%fc,i64 -4
%fe=bitcast i8*%fd to i32*
store i32 1342177304,i32*%fe,align 4
store i8*%fc,i8**%d,align 8
%ff=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fg=bitcast i8*%fc to i8**
store i8*%ff,i8**%fg,align 8
%fh=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fi=getelementptr inbounds i8,i8*%fc,i64 8
%fj=bitcast i8*%fi to i8**
store i8*%fh,i8**%fj,align 8
%fk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fl=getelementptr inbounds i8,i8*%fc,i64 16
%fm=bitcast i8*%fl to i8**
store i8*%fk,i8**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fc,i64 24
%fo=bitcast i8*%fn to i32*
store i32 7,i32*%fo,align 4
%fp=call i8*@sml_alloc(i32 inreg 28)#0
%fq=getelementptr inbounds i8,i8*%fp,i64 -4
%fr=bitcast i8*%fq to i32*
store i32 1342177304,i32*%fr,align 4
%fs=load i8*,i8**%d,align 8
%ft=bitcast i8*%fp to i8**
store i8*%fs,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fp,i64 8
%fv=bitcast i8*%fu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1832 to void(...)*),void(...)**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fp,i64 16
%fx=bitcast i8*%fw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1832 to void(...)*),void(...)**%fx,align 8
%fy=getelementptr inbounds i8,i8*%fp,i64 24
%fz=bitcast i8*%fy to i32*
store i32 -2147483647,i32*%fz,align 4
ret i8*%fp
fA:
%fB=getelementptr inbounds i8,i8*%s,i64 8
%fC=bitcast i8*%fB to i8**
%fD=load i8*,i8**%fC,align 8
%fE=bitcast i8*%fD to i8**
%fF=load i8*,i8**%fE,align 8
%fG=icmp eq i8*%fF,null
br i1%fG,label%fH,label%f9
fH:
%fI=getelementptr inbounds i8,i8*%fD,i64 16
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
store i8*%fK,i8**%b,align 8
%fL=getelementptr inbounds i8,i8*%fD,i64 24
%fM=bitcast i8*%fL to i8**
%fN=load i8*,i8**%fM,align 8
store i8*%fN,i8**%c,align 8
%fO=call i8*@sml_alloc(i32 inreg 20)#0
%fP=getelementptr inbounds i8,i8*%fO,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177296,i32*%fQ,align 4
store i8*%fO,i8**%d,align 8
%fR=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fS=bitcast i8*%fO to i8**
store i8*%fR,i8**%fS,align 8
%fT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fU=getelementptr inbounds i8,i8*%fO,i64 8
%fV=bitcast i8*%fU to i8**
store i8*%fT,i8**%fV,align 8
%fW=getelementptr inbounds i8,i8*%fO,i64 16
%fX=bitcast i8*%fW to i32*
store i32 3,i32*%fX,align 4
%fY=call i8*@sml_alloc(i32 inreg 28)#0
%fZ=getelementptr inbounds i8,i8*%fY,i64 -4
%f0=bitcast i8*%fZ to i32*
store i32 1342177304,i32*%f0,align 4
%f1=load i8*,i8**%d,align 8
%f2=bitcast i8*%fY to i8**
store i8*%f1,i8**%f2,align 8
%f3=getelementptr inbounds i8,i8*%fY,i64 8
%f4=bitcast i8*%f3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1818 to void(...)*),void(...)**%f4,align 8
%f5=getelementptr inbounds i8,i8*%fY,i64 16
%f6=bitcast i8*%f5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1818 to void(...)*),void(...)**%f6,align 8
%f7=getelementptr inbounds i8,i8*%fY,i64 24
%f8=bitcast i8*%f7 to i32*
store i32 -2147483647,i32*%f8,align 4
ret i8*%fY
f9:
%ga=bitcast i8*%fF to i8**
%gb=load i8*,i8**%ga,align 8
store i8*%gb,i8**%b,align 8
%gc=getelementptr inbounds i8,i8*%fD,i64 8
%gd=bitcast i8*%gc to i8**
%ge=load i8*,i8**%gd,align 8
store i8*%ge,i8**%c,align 8
%gf=getelementptr inbounds i8,i8*%fD,i64 16
%gg=bitcast i8*%gf to i8**
%gh=load i8*,i8**%gg,align 8
store i8*%gh,i8**%d,align 8
%gi=getelementptr inbounds i8,i8*%fD,i64 24
%gj=bitcast i8*%gi to i8**
%gk=load i8*,i8**%gj,align 8
%gl=bitcast i8*%gk to i8**
%gm=load i8*,i8**%gl,align 8
%gn=getelementptr inbounds i8,i8*%gk,i64 8
%go=bitcast i8*%gn to i8**
%gp=load i8*,i8**%go,align 8
store i8*%gp,i8**%e,align 8
%gq=getelementptr inbounds i8,i8*%gk,i64 16
%gr=bitcast i8*%gq to i8**
%gs=load i8*,i8**%gr,align 8
store i8*%gs,i8**%f,align 8
%gt=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%gm)
%gu=getelementptr inbounds i8,i8*%gt,i64 16
%gv=bitcast i8*%gu to i8*(i8*,i8*)**
%gw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gv,align 8
%gx=bitcast i8*%gt to i8**
%gy=load i8*,i8**%gx,align 8
%gz=call fastcc i8*%gw(i8*inreg%gy,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%gz,i8**%g,align 8
%gA=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gB=getelementptr inbounds i8,i8*%gA,i64 16
%gC=bitcast i8*%gB to i8*(i8*,i8*)**
%gD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gC,align 8
%gE=bitcast i8*%gA to i8**
%gF=load i8*,i8**%gE,align 8
%gG=call fastcc i8*%gD(i8*inreg%gF,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gI,i64 0,i32 2)to i8*))
%gH=getelementptr inbounds i8,i8*%gG,i64 16
%gI=bitcast i8*%gH to i8*(i8*,i8*)**
%gJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gI,align 8
%gK=bitcast i8*%gG to i8**
%gL=load i8*,i8**%gK,align 8
%gM=load i8*,i8**%b,align 8
%gN=call fastcc i8*%gJ(i8*inreg%gL,i8*inreg%gM)
store i8*%gN,i8**%h,align 8
%gO=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gP=getelementptr inbounds i8,i8*%gO,i64 16
%gQ=bitcast i8*%gP to i8*(i8*,i8*)**
%gR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gQ,align 8
%gS=bitcast i8*%gO to i8**
%gT=load i8*,i8**%gS,align 8
%gU=call fastcc i8*%gR(i8*inreg%gT,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gJ,i64 0,i32 2)to i8*))
%gV=getelementptr inbounds i8,i8*%gU,i64 16
%gW=bitcast i8*%gV to i8*(i8*,i8*)**
%gX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gW,align 8
%gY=bitcast i8*%gU to i8**
%gZ=load i8*,i8**%gY,align 8
%g0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%g1=call fastcc i8*%gX(i8*inreg%gZ,i8*inreg%g0)
store i8*%g1,i8**%b,align 8
%g2=call i8*@sml_alloc(i32 inreg 60)#0
%g3=getelementptr inbounds i8,i8*%g2,i64 -4
%g4=bitcast i8*%g3 to i32*
store i32 1342177336,i32*%g4,align 4
store i8*%g2,i8**%i,align 8
%g5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%g6=bitcast i8*%g2 to i8**
store i8*%g5,i8**%g6,align 8
%g7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g8=getelementptr inbounds i8,i8*%g2,i64 8
%g9=bitcast i8*%g8 to i8**
store i8*%g7,i8**%g9,align 8
%ha=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hb=getelementptr inbounds i8,i8*%g2,i64 16
%hc=bitcast i8*%hb to i8**
store i8*%ha,i8**%hc,align 8
%hd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%he=getelementptr inbounds i8,i8*%g2,i64 24
%hf=bitcast i8*%he to i8**
store i8*%hd,i8**%hf,align 8
%hg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hh=getelementptr inbounds i8,i8*%g2,i64 32
%hi=bitcast i8*%hh to i8**
store i8*%hg,i8**%hi,align 8
%hj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hk=getelementptr inbounds i8,i8*%g2,i64 40
%hl=bitcast i8*%hk to i8**
store i8*%hj,i8**%hl,align 8
%hm=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hn=getelementptr inbounds i8,i8*%g2,i64 48
%ho=bitcast i8*%hn to i8**
store i8*%hm,i8**%ho,align 8
%hp=getelementptr inbounds i8,i8*%g2,i64 56
%hq=bitcast i8*%hp to i32*
store i32 127,i32*%hq,align 4
%hr=call i8*@sml_alloc(i32 inreg 28)#0
%hs=getelementptr inbounds i8,i8*%hr,i64 -4
%ht=bitcast i8*%hs to i32*
store i32 1342177304,i32*%ht,align 4
%hu=load i8*,i8**%i,align 8
%hv=bitcast i8*%hr to i8**
store i8*%hu,i8**%hv,align 8
%hw=getelementptr inbounds i8,i8*%hr,i64 8
%hx=bitcast i8*%hw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1815 to void(...)*),void(...)**%hx,align 8
%hy=getelementptr inbounds i8,i8*%hr,i64 16
%hz=bitcast i8*%hy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1815 to void(...)*),void(...)**%hz,align 8
%hA=getelementptr inbounds i8,i8*%hr,i64 24
%hB=bitcast i8*%hA to i32*
store i32 -2147483647,i32*%hB,align 4
ret i8*%hr
hC:
%hD=getelementptr inbounds i8,i8*%s,i64 8
%hE=bitcast i8*%hD to i8**
%hF=load i8*,i8**%hE,align 8
%hG=bitcast i8*%hF to i8**
%hH=load i8*,i8**%hG,align 8
store i8*%hH,i8**%b,align 8
%hI=getelementptr inbounds i8,i8*%hF,i64 8
%hJ=bitcast i8*%hI to i8**
%hK=load i8*,i8**%hJ,align 8
store i8*%hK,i8**%c,align 8
%hL=getelementptr inbounds i8,i8*%hF,i64 16
%hM=bitcast i8*%hL to i8**
%hN=load i8*,i8**%hM,align 8
%hO=getelementptr inbounds i8,i8*%hF,i64 24
%hP=bitcast i8*%hO to i8**
%hQ=load i8*,i8**%hP,align 8
store i8*%hQ,i8**%d,align 8
%hR=bitcast i8*%hN to i8**
%hS=load i8*,i8**%hR,align 8
%hT=getelementptr inbounds i8,i8*%hN,i64 8
%hU=bitcast i8*%hT to i8**
%hV=load i8*,i8**%hU,align 8
store i8*%hV,i8**%e,align 8
%hW=getelementptr inbounds i8,i8*%hN,i64 16
%hX=bitcast i8*%hW to i8**
%hY=load i8*,i8**%hX,align 8
store i8*%hY,i8**%f,align 8
%hZ=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%hS)
%h0=getelementptr inbounds i8,i8*%hZ,i64 16
%h1=bitcast i8*%h0 to i8*(i8*,i8*)**
%h2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h1,align 8
%h3=bitcast i8*%hZ to i8**
%h4=load i8*,i8**%h3,align 8
%h5=call fastcc i8*%h2(i8*inreg%h4,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%h5,i8**%g,align 8
%h6=call i8*@sml_alloc(i32 inreg 28)#0
%h7=getelementptr inbounds i8,i8*%h6,i64 -4
%h8=bitcast i8*%h7 to i32*
store i32 1342177304,i32*%h8,align 4
store i8*%h6,i8**%h,align 8
%h9=load i8*,i8**%e,align 8
%ia=bitcast i8*%h6 to i8**
store i8*%h9,i8**%ia,align 8
%ib=load i8*,i8**%f,align 8
%ic=getelementptr inbounds i8,i8*%h6,i64 8
%id=bitcast i8*%ic to i8**
store i8*%ib,i8**%id,align 8
%ie=load i8*,i8**%g,align 8
%if=getelementptr inbounds i8,i8*%h6,i64 16
%ig=bitcast i8*%if to i8**
store i8*%ie,i8**%ig,align 8
%ih=getelementptr inbounds i8,i8*%h6,i64 24
%ii=bitcast i8*%ih to i32*
store i32 7,i32*%ii,align 4
%ij=call i8*@sml_alloc(i32 inreg 28)#0
%ik=getelementptr inbounds i8,i8*%ij,i64 -4
%il=bitcast i8*%ik to i32*
store i32 1342177304,i32*%il,align 4
store i8*%ij,i8**%i,align 8
%im=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%in=bitcast i8*%ij to i8**
store i8*%im,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%ij,i64 8
%ip=bitcast i8*%io to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_1795 to void(...)*),void(...)**%ip,align 8
%iq=getelementptr inbounds i8,i8*%ij,i64 16
%ir=bitcast i8*%iq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_1795 to void(...)*),void(...)**%ir,align 8
%is=getelementptr inbounds i8,i8*%ij,i64 24
%it=bitcast i8*%is to i32*
store i32 -2147483647,i32*%it,align 4
%iu=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%iv=getelementptr inbounds i8,i8*%iu,i64 16
%iw=bitcast i8*%iv to i8*(i8*,i8*)**
%ix=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iw,align 8
%iy=bitcast i8*%iu to i8**
%iz=load i8*,i8**%iy,align 8
store i8*%iz,i8**%h,align 8
%iA=call i8*@sml_alloc(i32 inreg 36)#0
%iB=getelementptr inbounds i8,i8*%iA,i64 -4
%iC=bitcast i8*%iB to i32*
store i32 1342177312,i32*%iC,align 4
store i8*%iA,i8**%j,align 8
%iD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%iE=bitcast i8*%iA to i8**
store i8*%iD,i8**%iE,align 8
%iF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iG=getelementptr inbounds i8,i8*%iA,i64 8
%iH=bitcast i8*%iG to i8**
store i8*%iF,i8**%iH,align 8
%iI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%iJ=getelementptr inbounds i8,i8*%iA,i64 16
%iK=bitcast i8*%iJ to i8**
store i8*%iI,i8**%iK,align 8
%iL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iM=getelementptr inbounds i8,i8*%iA,i64 24
%iN=bitcast i8*%iM to i8**
store i8*%iL,i8**%iN,align 8
%iO=getelementptr inbounds i8,i8*%iA,i64 32
%iP=bitcast i8*%iO to i32*
store i32 15,i32*%iP,align 4
%iQ=call i8*@sml_alloc(i32 inreg 28)#0
%iR=getelementptr inbounds i8,i8*%iQ,i64 -4
%iS=bitcast i8*%iR to i32*
store i32 1342177304,i32*%iS,align 4
%iT=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iU=bitcast i8*%iQ to i8**
store i8*%iT,i8**%iU,align 8
%iV=getelementptr inbounds i8,i8*%iQ,i64 8
%iW=bitcast i8*%iV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1801 to void(...)*),void(...)**%iW,align 8
%iX=getelementptr inbounds i8,i8*%iQ,i64 16
%iY=bitcast i8*%iX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1801 to void(...)*),void(...)**%iY,align 8
%iZ=getelementptr inbounds i8,i8*%iQ,i64 24
%i0=bitcast i8*%iZ to i32*
store i32 -2147483647,i32*%i0,align 4
%i1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%i2=call fastcc i8*%ix(i8*inreg%i1,i8*inreg%iQ)
%i3=getelementptr inbounds i8,i8*%i2,i64 16
%i4=bitcast i8*%i3 to i8*(i8*,i8*)**
%i5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i4,align 8
%i6=bitcast i8*%i2 to i8**
%i7=load i8*,i8**%i6,align 8
%i8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%i9=call fastcc i8*%i5(i8*inreg%i7,i8*inreg%i8)
store i8*%i9,i8**%b,align 8
%ja=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jb=getelementptr inbounds i8,i8*%ja,i64 16
%jc=bitcast i8*%jb to i8*(i8*,i8*)**
%jd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jc,align 8
%je=bitcast i8*%ja to i8**
%jf=load i8*,i8**%je,align 8
%jg=call fastcc i8*%jd(i8*inreg%jf,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%jh=getelementptr inbounds i8,i8*%jg,i64 16
%ji=bitcast i8*%jh to i8*(i8*,i8*)**
%jj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ji,align 8
%jk=bitcast i8*%jg to i8**
%jl=load i8*,i8**%jk,align 8
%jm=call fastcc i8*%jj(i8*inreg%jl,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%jn=getelementptr inbounds i8,i8*%jm,i64 16
%jo=bitcast i8*%jn to i8*(i8*,i8*)**
%jp=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jo,align 8
%jq=bitcast i8*%jm to i8**
%jr=load i8*,i8**%jq,align 8
%js=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%jt=call fastcc i8*%jp(i8*inreg%jr,i8*inreg%js)
store i8*%jt,i8**%b,align 8
%ju=call i8*@sml_alloc(i32 inreg 28)#0
%jv=getelementptr inbounds i8,i8*%ju,i64 -4
%jw=bitcast i8*%jv to i32*
store i32 1342177304,i32*%jw,align 4
store i8*%ju,i8**%d,align 8
%jx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%jy=bitcast i8*%ju to i8**
store i8*%jx,i8**%jy,align 8
%jz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jA=getelementptr inbounds i8,i8*%ju,i64 8
%jB=bitcast i8*%jA to i8**
store i8*%jz,i8**%jB,align 8
%jC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%jD=getelementptr inbounds i8,i8*%ju,i64 16
%jE=bitcast i8*%jD to i8**
store i8*%jC,i8**%jE,align 8
%jF=getelementptr inbounds i8,i8*%ju,i64 24
%jG=bitcast i8*%jF to i32*
store i32 7,i32*%jG,align 4
%jH=call i8*@sml_alloc(i32 inreg 28)#0
%jI=getelementptr inbounds i8,i8*%jH,i64 -4
%jJ=bitcast i8*%jI to i32*
store i32 1342177304,i32*%jJ,align 4
%jK=load i8*,i8**%d,align 8
%jL=bitcast i8*%jH to i8**
store i8*%jK,i8**%jL,align 8
%jM=getelementptr inbounds i8,i8*%jH,i64 8
%jN=bitcast i8*%jM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1803 to void(...)*),void(...)**%jN,align 8
%jO=getelementptr inbounds i8,i8*%jH,i64 16
%jP=bitcast i8*%jO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1803 to void(...)*),void(...)**%jP,align 8
%jQ=getelementptr inbounds i8,i8*%jH,i64 24
%jR=bitcast i8*%jQ to i32*
store i32 -2147483647,i32*%jR,align 4
ret i8*%jH
jS:
store i8*null,i8**%b,align 8
%jT=getelementptr inbounds i8,i8*%s,i64 8
%jU=bitcast i8*%jT to i8**
%jV=load i8*,i8**%jU,align 8
br label%k
jW:
%jX=getelementptr inbounds i8,i8*%s,i64 8
%jY=bitcast i8*%jX to i8**
%jZ=load i8*,i8**%jY,align 8
%j0=bitcast i8*%jZ to i8**
%j1=load i8*,i8**%j0,align 8
store i8*%j1,i8**%b,align 8
%j2=getelementptr inbounds i8,i8*%jZ,i64 8
%j3=bitcast i8*%j2 to i8**
%j4=load i8*,i8**%j3,align 8
store i8*%j4,i8**%c,align 8
%j5=getelementptr inbounds i8,i8*%jZ,i64 16
%j6=bitcast i8*%j5 to i8**
%j7=load i8*,i8**%j6,align 8
store i8*%j7,i8**%d,align 8
%j8=getelementptr inbounds i8,i8*%jZ,i64 24
%j9=bitcast i8*%j8 to i8**
%ka=load i8*,i8**%j9,align 8
store i8*%ka,i8**%e,align 8
%kb=getelementptr inbounds i8,i8*%jZ,i64 32
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%f,align 8
%ke=getelementptr inbounds i8,i8*%jZ,i64 40
%kf=bitcast i8*%ke to i8**
%kg=load i8*,i8**%kf,align 8
store i8*%kg,i8**%g,align 8
%kh=getelementptr inbounds i8,i8*%jZ,i64 48
%ki=bitcast i8*%kh to i8**
%kj=load i8*,i8**%ki,align 8
store i8*%kj,i8**%h,align 8
%kk=getelementptr inbounds i8,i8*%jZ,i64 56
%kl=bitcast i8*%kk to i8**
%km=load i8*,i8**%kl,align 8
store i8*%km,i8**%i,align 8
%kn=call i8*@sml_alloc(i32 inreg 68)#0
%ko=getelementptr inbounds i8,i8*%kn,i64 -4
%kp=bitcast i8*%ko to i32*
store i32 1342177344,i32*%kp,align 4
store i8*%kn,i8**%j,align 8
%kq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kr=bitcast i8*%kn to i8**
store i8*%kq,i8**%kr,align 8
%ks=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kt=getelementptr inbounds i8,i8*%kn,i64 8
%ku=bitcast i8*%kt to i8**
store i8*%ks,i8**%ku,align 8
%kv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kw=getelementptr inbounds i8,i8*%kn,i64 16
%kx=bitcast i8*%kw to i8**
store i8*%kv,i8**%kx,align 8
%ky=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kz=getelementptr inbounds i8,i8*%kn,i64 24
%kA=bitcast i8*%kz to i8**
store i8*%ky,i8**%kA,align 8
%kB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kC=getelementptr inbounds i8,i8*%kn,i64 32
%kD=bitcast i8*%kC to i8**
store i8*%kB,i8**%kD,align 8
%kE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kF=getelementptr inbounds i8,i8*%kn,i64 40
%kG=bitcast i8*%kF to i8**
store i8*%kE,i8**%kG,align 8
%kH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kI=getelementptr inbounds i8,i8*%kn,i64 48
%kJ=bitcast i8*%kI to i8**
store i8*%kH,i8**%kJ,align 8
%kK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kL=getelementptr inbounds i8,i8*%kn,i64 56
%kM=bitcast i8*%kL to i8**
store i8*%kK,i8**%kM,align 8
%kN=getelementptr inbounds i8,i8*%kn,i64 64
%kO=bitcast i8*%kN to i32*
store i32 255,i32*%kO,align 4
%kP=call i8*@sml_alloc(i32 inreg 28)#0
%kQ=getelementptr inbounds i8,i8*%kP,i64 -4
%kR=bitcast i8*%kQ to i32*
store i32 1342177304,i32*%kR,align 4
%kS=load i8*,i8**%j,align 8
%kT=bitcast i8*%kP to i8**
store i8*%kS,i8**%kT,align 8
%kU=getelementptr inbounds i8,i8*%kP,i64 8
%kV=bitcast i8*%kU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1794 to void(...)*),void(...)**%kV,align 8
%kW=getelementptr inbounds i8,i8*%kP,i64 16
%kX=bitcast i8*%kW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1794 to void(...)*),void(...)**%kX,align 8
%kY=getelementptr inbounds i8,i8*%kP,i64 24
%kZ=bitcast i8*%kY to i32*
store i32 -2147483647,i32*%kZ,align 4
ret i8*%kP
k0:
%k1=getelementptr inbounds i8,i8*%s,i64 8
%k2=bitcast i8*%k1 to i8**
%k3=load i8*,i8**%k2,align 8
%k4=bitcast i8*%k3 to i8**
%k5=load i8*,i8**%k4,align 8
store i8*%k5,i8**%b,align 8
%k6=getelementptr inbounds i8,i8*%k3,i64 8
%k7=bitcast i8*%k6 to i8**
%k8=load i8*,i8**%k7,align 8
%k9=bitcast i8*%k8 to i8**
%la=load i8*,i8**%k9,align 8
store i8*%la,i8**%c,align 8
%lb=getelementptr inbounds i8,i8*%k8,i64 8
%lc=bitcast i8*%lb to i8**
%ld=load i8*,i8**%lc,align 8
store i8*%ld,i8**%d,align 8
%le=getelementptr inbounds i8,i8*%k3,i64 16
%lf=bitcast i8*%le to i8**
%lg=load i8*,i8**%lf,align 8
store i8*%lg,i8**%e,align 8
%lh=call i8*@sml_alloc(i32 inreg 36)#0
%li=getelementptr inbounds i8,i8*%lh,i64 -4
%lj=bitcast i8*%li to i32*
store i32 1342177312,i32*%lj,align 4
store i8*%lh,i8**%f,align 8
%lk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ll=bitcast i8*%lh to i8**
store i8*%lk,i8**%ll,align 8
%lm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ln=getelementptr inbounds i8,i8*%lh,i64 8
%lo=bitcast i8*%ln to i8**
store i8*%lm,i8**%lo,align 8
%lp=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lq=getelementptr inbounds i8,i8*%lh,i64 16
%lr=bitcast i8*%lq to i8**
store i8*%lp,i8**%lr,align 8
%ls=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lt=getelementptr inbounds i8,i8*%lh,i64 24
%lu=bitcast i8*%lt to i8**
store i8*%ls,i8**%lu,align 8
%lv=getelementptr inbounds i8,i8*%lh,i64 32
%lw=bitcast i8*%lv to i32*
store i32 15,i32*%lw,align 4
%lx=call i8*@sml_alloc(i32 inreg 28)#0
%ly=getelementptr inbounds i8,i8*%lx,i64 -4
%lz=bitcast i8*%ly to i32*
store i32 1342177304,i32*%lz,align 4
%lA=load i8*,i8**%f,align 8
%lB=bitcast i8*%lx to i8**
store i8*%lA,i8**%lB,align 8
%lC=getelementptr inbounds i8,i8*%lx,i64 8
%lD=bitcast i8*%lC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1741 to void(...)*),void(...)**%lD,align 8
%lE=getelementptr inbounds i8,i8*%lx,i64 16
%lF=bitcast i8*%lE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1741 to void(...)*),void(...)**%lF,align 8
%lG=getelementptr inbounds i8,i8*%lx,i64 24
%lH=bitcast i8*%lG to i32*
store i32 -2147483647,i32*%lH,align 4
ret i8*%lx
lI:
%lJ=getelementptr inbounds i8,i8*%s,i64 8
%lK=bitcast i8*%lJ to i8**
%lL=load i8*,i8**%lK,align 8
%lM=bitcast i8*%lL to i8**
%lN=load i8*,i8**%lM,align 8
%lO=bitcast i8*%lN to i8**
%lP=load i8*,i8**%lO,align 8
%lQ=getelementptr inbounds i8,i8*%lN,i64 8
%lR=bitcast i8*%lQ to i8**
%lS=load i8*,i8**%lR,align 8
store i8*%lS,i8**%b,align 8
%lT=getelementptr inbounds i8,i8*%lL,i64 16
%lU=bitcast i8*%lT to i8**
%lV=load i8*,i8**%lU,align 8
store i8*%lV,i8**%c,align 8
%lW=icmp eq i8*%lP,null
br i1%lW,label%mm,label%lX
lX:
%lY=bitcast i8*%lP to i8**
%lZ=load i8*,i8**%lY,align 8
store i8*%lZ,i8**%d,align 8
%l0=call i8*@sml_alloc(i32 inreg 20)#0
%l1=getelementptr inbounds i8,i8*%l0,i64 -4
%l2=bitcast i8*%l1 to i32*
store i32 1342177296,i32*%l2,align 4
store i8*%l0,i8**%e,align 8
%l3=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%l4=bitcast i8*%l0 to i8**
store i8*%l3,i8**%l4,align 8
%l5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l6=getelementptr inbounds i8,i8*%l0,i64 8
%l7=bitcast i8*%l6 to i8**
store i8*%l5,i8**%l7,align 8
%l8=getelementptr inbounds i8,i8*%l0,i64 16
%l9=bitcast i8*%l8 to i32*
store i32 3,i32*%l9,align 4
%ma=call i8*@sml_alloc(i32 inreg 28)#0
%mb=getelementptr inbounds i8,i8*%ma,i64 -4
%mc=bitcast i8*%mb to i32*
store i32 1342177304,i32*%mc,align 4
%md=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%me=bitcast i8*%ma to i8**
store i8*%md,i8**%me,align 8
%mf=getelementptr inbounds i8,i8*%ma,i64 8
%mg=bitcast i8*%mf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1709 to void(...)*),void(...)**%mg,align 8
%mh=getelementptr inbounds i8,i8*%ma,i64 16
%mi=bitcast i8*%mh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1709 to void(...)*),void(...)**%mi,align 8
%mj=getelementptr inbounds i8,i8*%ma,i64 24
%mk=bitcast i8*%mj to i32*
store i32 -2147483647,i32*%mk,align 4
%ml=load i8*,i8**%c,align 8
br label%mm
mm:
%mn=phi i8*[%lV,%lI],[%ml,%lX]
%mo=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gt,i64 0,i32 2)to i8*),%lI],[%ma,%lX]
store i8*%mo,i8**%b,align 8
%mp=icmp eq i8*%mn,null
br i1%mp,label%mT,label%mq
mq:
%mr=bitcast i8*%mn to i8**
%ms=load i8*,i8**%mr,align 8
%mt=bitcast i8*%ms to i8**
%mu=load i8*,i8**%mt,align 8
store i8*%mu,i8**%c,align 8
%mv=getelementptr inbounds i8,i8*%ms,i64 8
%mw=bitcast i8*%mv to i8**
%mx=load i8*,i8**%mw,align 8
store i8*%mx,i8**%d,align 8
%my=call i8*@sml_alloc(i32 inreg 20)#0
%mz=getelementptr inbounds i8,i8*%my,i64 -4
%mA=bitcast i8*%mz to i32*
store i32 1342177296,i32*%mA,align 4
store i8*%my,i8**%e,align 8
%mB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mC=bitcast i8*%my to i8**
store i8*%mB,i8**%mC,align 8
%mD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mE=getelementptr inbounds i8,i8*%my,i64 8
%mF=bitcast i8*%mE to i8**
store i8*%mD,i8**%mF,align 8
%mG=getelementptr inbounds i8,i8*%my,i64 16
%mH=bitcast i8*%mG to i32*
store i32 3,i32*%mH,align 4
%mI=call i8*@sml_alloc(i32 inreg 28)#0
%mJ=getelementptr inbounds i8,i8*%mI,i64 -4
%mK=bitcast i8*%mJ to i32*
store i32 1342177304,i32*%mK,align 4
%mL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mM=bitcast i8*%mI to i8**
store i8*%mL,i8**%mM,align 8
%mN=getelementptr inbounds i8,i8*%mI,i64 8
%mO=bitcast i8*%mN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1713 to void(...)*),void(...)**%mO,align 8
%mP=getelementptr inbounds i8,i8*%mI,i64 16
%mQ=bitcast i8*%mP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1713 to void(...)*),void(...)**%mQ,align 8
%mR=getelementptr inbounds i8,i8*%mI,i64 24
%mS=bitcast i8*%mR to i32*
store i32 -2147483647,i32*%mS,align 4
br label%mT
mT:
%mU=phi i8*[%mI,%mq],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gu,i64 0,i32 2)to i8*),%mm]
store i8*%mU,i8**%c,align 8
%mV=call i8*@sml_alloc(i32 inreg 20)#0
%mW=getelementptr inbounds i8,i8*%mV,i64 -4
%mX=bitcast i8*%mW to i32*
store i32 1342177296,i32*%mX,align 4
store i8*%mV,i8**%d,align 8
%mY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%mZ=bitcast i8*%mV to i8**
store i8*%mY,i8**%mZ,align 8
%m0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%m1=getelementptr inbounds i8,i8*%mV,i64 8
%m2=bitcast i8*%m1 to i8**
store i8*%m0,i8**%m2,align 8
%m3=getelementptr inbounds i8,i8*%mV,i64 16
%m4=bitcast i8*%m3 to i32*
store i32 3,i32*%m4,align 4
%m5=call i8*@sml_alloc(i32 inreg 28)#0
%m6=getelementptr inbounds i8,i8*%m5,i64 -4
%m7=bitcast i8*%m6 to i32*
store i32 1342177304,i32*%m7,align 4
%m8=load i8*,i8**%d,align 8
%m9=bitcast i8*%m5 to i8**
store i8*%m8,i8**%m9,align 8
%na=getelementptr inbounds i8,i8*%m5,i64 8
%nb=bitcast i8*%na to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1716 to void(...)*),void(...)**%nb,align 8
%nc=getelementptr inbounds i8,i8*%m5,i64 16
%nd=bitcast i8*%nc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1716 to void(...)*),void(...)**%nd,align 8
%ne=getelementptr inbounds i8,i8*%m5,i64 24
%nf=bitcast i8*%ne to i32*
store i32 -2147483647,i32*%nf,align 4
ret i8*%m5
ng:
%nh=getelementptr inbounds i8,i8*%s,i64 8
%ni=bitcast i8*%nh to i8**
%nj=load i8*,i8**%ni,align 8
%nk=bitcast i8*%nj to i8**
%nl=load i8*,i8**%nk,align 8
%nm=getelementptr inbounds i8,i8*%nj,i64 16
%nn=bitcast i8*%nm to i8**
%no=load i8*,i8**%nn,align 8
%np=bitcast i8*%no to i8**
%nq=load i8*,i8**%np,align 8
store i8*%nq,i8**%b,align 8
%nr=getelementptr inbounds i8,i8*%no,i64 16
%ns=bitcast i8*%nr to i8**
%nt=load i8*,i8**%ns,align 8
store i8*%nt,i8**%c,align 8
%nu=icmp eq i8*%nl,null
br i1%nu,label%om,label%nv
nv:
%nw=bitcast i8*%nl to i8**
%nx=load i8*,i8**%nw,align 8
%ny=getelementptr inbounds i8,i8*%nx,i64 8
%nz=bitcast i8*%ny to i8**
%nA=load i8*,i8**%nz,align 8
%nB=icmp eq i8*%nA,null
br i1%nB,label%nC,label%nR
nC:
%nD=getelementptr inbounds i8,i8*%nx,i64 24
%nE=bitcast i8*%nD to i8**
%nF=load i8*,i8**%nE,align 8
store i8*%nF,i8**%d,align 8
%nG=call i8*@sml_alloc(i32 inreg 12)#0
%nH=getelementptr inbounds i8,i8*%nG,i64 -4
%nI=bitcast i8*%nH to i32*
store i32 1342177288,i32*%nI,align 4
store i8*%nG,i8**%e,align 8
%nJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nK=bitcast i8*%nG to i8**
store i8*%nJ,i8**%nK,align 8
%nL=getelementptr inbounds i8,i8*%nG,i64 8
%nM=bitcast i8*%nL to i32*
store i32 1,i32*%nM,align 4
%nN=call i8*@sml_alloc(i32 inreg 28)#0
%nO=getelementptr inbounds i8,i8*%nN,i64 -4
%nP=bitcast i8*%nO to i32*
store i32 1342177304,i32*%nP,align 4
%nQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
br label%ob
nR:
%nS=bitcast i8*%nA to i8**
%nT=load i8*,i8**%nS,align 8
store i8*%nT,i8**%d,align 8
%nU=getelementptr inbounds i8,i8*%nx,i64 24
%nV=bitcast i8*%nU to i8**
%nW=load i8*,i8**%nV,align 8
store i8*%nW,i8**%e,align 8
%nX=call i8*@sml_alloc(i32 inreg 20)#0
%nY=getelementptr inbounds i8,i8*%nX,i64 -4
%nZ=bitcast i8*%nY to i32*
store i32 1342177296,i32*%nZ,align 4
store i8*%nX,i8**%f,align 8
%n0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n1=bitcast i8*%nX to i8**
store i8*%n0,i8**%n1,align 8
%n2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%n3=getelementptr inbounds i8,i8*%nX,i64 8
%n4=bitcast i8*%n3 to i8**
store i8*%n2,i8**%n4,align 8
%n5=getelementptr inbounds i8,i8*%nX,i64 16
%n6=bitcast i8*%n5 to i32*
store i32 3,i32*%n6,align 4
%n7=call i8*@sml_alloc(i32 inreg 28)#0
%n8=getelementptr inbounds i8,i8*%n7,i64 -4
%n9=bitcast i8*%n8 to i32*
store i32 1342177304,i32*%n9,align 4
%oa=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
br label%ob
ob:
%oc=phi i8*[%nN,%nC],[%n7,%nR]
%od=phi i8*[%nQ,%nC],[%oa,%nR]
%oe=phi void(...)*[bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1703 to void(...)*),%nC],[bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1699 to void(...)*),%nR]
%of=bitcast i8*%oc to i8**
store i8*%od,i8**%of,align 8
%og=getelementptr inbounds i8,i8*%oc,i64 8
%oh=bitcast i8*%og to void(...)**
store void(...)*%oe,void(...)**%oh,align 8
%oi=getelementptr inbounds i8,i8*%oc,i64 16
%oj=bitcast i8*%oi to void(...)**
store void(...)*%oe,void(...)**%oj,align 8
%ok=getelementptr inbounds i8,i8*%oc,i64 24
%ol=bitcast i8*%ok to i32*
store i32 -2147483647,i32*%ol,align 4
br label%om
om:
%on=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gs,i64 0,i32 2)to i8*),%ng],[%oc,%ob]
store i8*%on,i8**%d,align 8
%oo=call i8*@sml_alloc(i32 inreg 28)#0
%op=getelementptr inbounds i8,i8*%oo,i64 -4
%oq=bitcast i8*%op to i32*
store i32 1342177304,i32*%oq,align 4
store i8*%oo,i8**%e,align 8
%or=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%os=bitcast i8*%oo to i8**
store i8*%or,i8**%os,align 8
%ot=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ou=getelementptr inbounds i8,i8*%oo,i64 8
%ov=bitcast i8*%ou to i8**
store i8*%ot,i8**%ov,align 8
%ow=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ox=getelementptr inbounds i8,i8*%oo,i64 16
%oy=bitcast i8*%ox to i8**
store i8*%ow,i8**%oy,align 8
%oz=getelementptr inbounds i8,i8*%oo,i64 24
%oA=bitcast i8*%oz to i32*
store i32 7,i32*%oA,align 4
%oB=call i8*@sml_alloc(i32 inreg 28)#0
%oC=getelementptr inbounds i8,i8*%oB,i64 -4
%oD=bitcast i8*%oC to i32*
store i32 1342177304,i32*%oD,align 4
%oE=load i8*,i8**%e,align 8
%oF=bitcast i8*%oB to i8**
store i8*%oE,i8**%oF,align 8
%oG=getelementptr inbounds i8,i8*%oB,i64 8
%oH=bitcast i8*%oG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1707 to void(...)*),void(...)**%oH,align 8
%oI=getelementptr inbounds i8,i8*%oB,i64 16
%oJ=bitcast i8*%oI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1707 to void(...)*),void(...)**%oJ,align 8
%oK=getelementptr inbounds i8,i8*%oB,i64 24
%oL=bitcast i8*%oK to i32*
store i32 -2147483647,i32*%oL,align 4
ret i8*%oB
oM:
%oN=getelementptr inbounds i8,i8*%s,i64 8
%oO=bitcast i8*%oN to i8**
%oP=load i8*,i8**%oO,align 8
%oQ=bitcast i8*%oP to i8**
%oR=load i8*,i8**%oQ,align 8
store i8*%oR,i8**%b,align 8
%oS=getelementptr inbounds i8,i8*%oP,i64 8
%oT=bitcast i8*%oS to i8**
%oU=load i8*,i8**%oT,align 8
store i8*%oU,i8**%c,align 8
%oV=call i8*@sml_alloc(i32 inreg 20)#0
%oW=getelementptr inbounds i8,i8*%oV,i64 -4
%oX=bitcast i8*%oW to i32*
store i32 1342177296,i32*%oX,align 4
store i8*%oV,i8**%d,align 8
%oY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%oZ=bitcast i8*%oV to i8**
store i8*%oY,i8**%oZ,align 8
%o0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%o1=getelementptr inbounds i8,i8*%oV,i64 8
%o2=bitcast i8*%o1 to i8**
store i8*%o0,i8**%o2,align 8
%o3=getelementptr inbounds i8,i8*%oV,i64 16
%o4=bitcast i8*%o3 to i32*
store i32 3,i32*%o4,align 4
%o5=call i8*@sml_alloc(i32 inreg 28)#0
%o6=getelementptr inbounds i8,i8*%o5,i64 -4
%o7=bitcast i8*%o6 to i32*
store i32 1342177304,i32*%o7,align 4
%o8=load i8*,i8**%d,align 8
%o9=bitcast i8*%o5 to i8**
store i8*%o8,i8**%o9,align 8
%pa=getelementptr inbounds i8,i8*%o5,i64 8
%pb=bitcast i8*%pa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1697 to void(...)*),void(...)**%pb,align 8
%pc=getelementptr inbounds i8,i8*%o5,i64 16
%pd=bitcast i8*%pc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1697 to void(...)*),void(...)**%pd,align 8
%pe=getelementptr inbounds i8,i8*%o5,i64 24
%pf=bitcast i8*%pe to i32*
store i32 -2147483647,i32*%pf,align 4
ret i8*%o5
pg:
%ph=getelementptr inbounds i8,i8*%s,i64 8
%pi=bitcast i8*%ph to i8**
%pj=load i8*,i8**%pi,align 8
%pk=bitcast i8*%pj to i8**
%pl=load i8*,i8**%pk,align 8
store i8*%pl,i8**%b,align 8
%pm=getelementptr inbounds i8,i8*%pj,i64 8
%pn=bitcast i8*%pm to i8**
%po=load i8*,i8**%pn,align 8
store i8*%po,i8**%c,align 8
%pp=call i8*@sml_alloc(i32 inreg 20)#0
%pq=getelementptr inbounds i8,i8*%pp,i64 -4
%pr=bitcast i8*%pq to i32*
store i32 1342177296,i32*%pr,align 4
store i8*%pp,i8**%d,align 8
%ps=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%pt=bitcast i8*%pp to i8**
store i8*%ps,i8**%pt,align 8
%pu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pv=getelementptr inbounds i8,i8*%pp,i64 8
%pw=bitcast i8*%pv to i8**
store i8*%pu,i8**%pw,align 8
%px=getelementptr inbounds i8,i8*%pp,i64 16
%py=bitcast i8*%px to i32*
store i32 3,i32*%py,align 4
%pz=call i8*@sml_alloc(i32 inreg 28)#0
%pA=getelementptr inbounds i8,i8*%pz,i64 -4
%pB=bitcast i8*%pA to i32*
store i32 1342177304,i32*%pB,align 4
%pC=load i8*,i8**%d,align 8
%pD=bitcast i8*%pz to i8**
store i8*%pC,i8**%pD,align 8
%pE=getelementptr inbounds i8,i8*%pz,i64 8
%pF=bitcast i8*%pE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1689 to void(...)*),void(...)**%pF,align 8
%pG=getelementptr inbounds i8,i8*%pz,i64 16
%pH=bitcast i8*%pG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1689 to void(...)*),void(...)**%pH,align 8
%pI=getelementptr inbounds i8,i8*%pz,i64 24
%pJ=bitcast i8*%pI to i32*
store i32 -2147483647,i32*%pJ,align 4
ret i8*%pz
pK:
%pL=getelementptr inbounds i8,i8*%s,i64 8
%pM=bitcast i8*%pL to i8**
%pN=load i8*,i8**%pM,align 8
%pO=bitcast i8*%pN to i8**
%pP=load i8*,i8**%pO,align 8
store i8*%pP,i8**%b,align 8
%pQ=getelementptr inbounds i8,i8*%pN,i64 8
%pR=bitcast i8*%pQ to i8**
%pS=load i8*,i8**%pR,align 8
store i8*%pS,i8**%c,align 8
%pT=call i8*@sml_alloc(i32 inreg 20)#0
%pU=getelementptr inbounds i8,i8*%pT,i64 -4
%pV=bitcast i8*%pU to i32*
store i32 1342177296,i32*%pV,align 4
store i8*%pT,i8**%d,align 8
%pW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%pX=bitcast i8*%pT to i8**
store i8*%pW,i8**%pX,align 8
%pY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pZ=getelementptr inbounds i8,i8*%pT,i64 8
%p0=bitcast i8*%pZ to i8**
store i8*%pY,i8**%p0,align 8
%p1=getelementptr inbounds i8,i8*%pT,i64 16
%p2=bitcast i8*%p1 to i32*
store i32 3,i32*%p2,align 4
%p3=call i8*@sml_alloc(i32 inreg 28)#0
%p4=getelementptr inbounds i8,i8*%p3,i64 -4
%p5=bitcast i8*%p4 to i32*
store i32 1342177304,i32*%p5,align 4
%p6=load i8*,i8**%d,align 8
%p7=bitcast i8*%p3 to i8**
store i8*%p6,i8**%p7,align 8
%p8=getelementptr inbounds i8,i8*%p3,i64 8
%p9=bitcast i8*%p8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1677 to void(...)*),void(...)**%p9,align 8
%qa=getelementptr inbounds i8,i8*%p3,i64 16
%qb=bitcast i8*%qa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1677 to void(...)*),void(...)**%qb,align 8
%qc=getelementptr inbounds i8,i8*%p3,i64 24
%qd=bitcast i8*%qc to i32*
store i32 -2147483647,i32*%qd,align 4
ret i8*%p3
qe:
%qf=getelementptr inbounds i8,i8*%s,i64 8
%qg=bitcast i8*%qf to i8**
%qh=load i8*,i8**%qg,align 8
%qi=bitcast i8*%qh to i8**
%qj=load i8*,i8**%qi,align 8
store i8*%qj,i8**%b,align 8
%qk=getelementptr inbounds i8,i8*%qh,i64 8
%ql=bitcast i8*%qk to i8**
%qm=load i8*,i8**%ql,align 8
store i8*%qm,i8**%c,align 8
%qn=call i8*@sml_alloc(i32 inreg 20)#0
%qo=getelementptr inbounds i8,i8*%qn,i64 -4
%qp=bitcast i8*%qo to i32*
store i32 1342177296,i32*%qp,align 4
store i8*%qn,i8**%d,align 8
%qq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%qr=bitcast i8*%qn to i8**
store i8*%qq,i8**%qr,align 8
%qs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%qt=getelementptr inbounds i8,i8*%qn,i64 8
%qu=bitcast i8*%qt to i8**
store i8*%qs,i8**%qu,align 8
%qv=getelementptr inbounds i8,i8*%qn,i64 16
%qw=bitcast i8*%qv to i32*
store i32 3,i32*%qw,align 4
%qx=call i8*@sml_alloc(i32 inreg 28)#0
%qy=getelementptr inbounds i8,i8*%qx,i64 -4
%qz=bitcast i8*%qy to i32*
store i32 1342177304,i32*%qz,align 4
%qA=load i8*,i8**%d,align 8
%qB=bitcast i8*%qx to i8**
store i8*%qA,i8**%qB,align 8
%qC=getelementptr inbounds i8,i8*%qx,i64 8
%qD=bitcast i8*%qC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1675 to void(...)*),void(...)**%qD,align 8
%qE=getelementptr inbounds i8,i8*%qx,i64 16
%qF=bitcast i8*%qE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1675 to void(...)*),void(...)**%qF,align 8
%qG=getelementptr inbounds i8,i8*%qx,i64 24
%qH=bitcast i8*%qG to i32*
store i32 -2147483647,i32*%qH,align 4
ret i8*%qx
qI:
%qJ=getelementptr inbounds i8,i8*%s,i64 8
%qK=bitcast i8*%qJ to i8**
%qL=load i8*,i8**%qK,align 8
%qM=bitcast i8*%qL to i8**
%qN=load i8*,i8**%qM,align 8
store i8*%qN,i8**%b,align 8
%qO=getelementptr inbounds i8,i8*%qL,i64 8
%qP=bitcast i8*%qO to i8**
%qQ=load i8*,i8**%qP,align 8
store i8*%qQ,i8**%c,align 8
%qR=call i8*@sml_alloc(i32 inreg 20)#0
%qS=getelementptr inbounds i8,i8*%qR,i64 -4
%qT=bitcast i8*%qS to i32*
store i32 1342177296,i32*%qT,align 4
store i8*%qR,i8**%d,align 8
%qU=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%qV=bitcast i8*%qR to i8**
store i8*%qU,i8**%qV,align 8
%qW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%qX=getelementptr inbounds i8,i8*%qR,i64 8
%qY=bitcast i8*%qX to i8**
store i8*%qW,i8**%qY,align 8
%qZ=getelementptr inbounds i8,i8*%qR,i64 16
%q0=bitcast i8*%qZ to i32*
store i32 3,i32*%q0,align 4
%q1=call i8*@sml_alloc(i32 inreg 28)#0
%q2=getelementptr inbounds i8,i8*%q1,i64 -4
%q3=bitcast i8*%q2 to i32*
store i32 1342177304,i32*%q3,align 4
%q4=load i8*,i8**%d,align 8
%q5=bitcast i8*%q1 to i8**
store i8*%q4,i8**%q5,align 8
%q6=getelementptr inbounds i8,i8*%q1,i64 8
%q7=bitcast i8*%q6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1673 to void(...)*),void(...)**%q7,align 8
%q8=getelementptr inbounds i8,i8*%q1,i64 16
%q9=bitcast i8*%q8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1673 to void(...)*),void(...)**%q9,align 8
%ra=getelementptr inbounds i8,i8*%q1,i64 24
%rb=bitcast i8*%ra to i32*
store i32 -2147483647,i32*%rb,align 4
ret i8*%q1
rc:
%rd=getelementptr inbounds i8,i8*%s,i64 8
%re=bitcast i8*%rd to i8**
%rf=load i8*,i8**%re,align 8
%rg=bitcast i8*%rf to i8**
%rh=load i8*,i8**%rg,align 8
store i8*%rh,i8**%b,align 8
%ri=getelementptr inbounds i8,i8*%rf,i64 8
%rj=bitcast i8*%ri to i8**
%rk=load i8*,i8**%rj,align 8
store i8*%rk,i8**%c,align 8
%rl=call i8*@sml_alloc(i32 inreg 20)#0
%rm=getelementptr inbounds i8,i8*%rl,i64 -4
%rn=bitcast i8*%rm to i32*
store i32 1342177296,i32*%rn,align 4
store i8*%rl,i8**%d,align 8
%ro=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%rp=bitcast i8*%rl to i8**
store i8*%ro,i8**%rp,align 8
%rq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%rr=getelementptr inbounds i8,i8*%rl,i64 8
%rs=bitcast i8*%rr to i8**
store i8*%rq,i8**%rs,align 8
%rt=getelementptr inbounds i8,i8*%rl,i64 16
%ru=bitcast i8*%rt to i32*
store i32 3,i32*%ru,align 4
%rv=call i8*@sml_alloc(i32 inreg 28)#0
%rw=getelementptr inbounds i8,i8*%rv,i64 -4
%rx=bitcast i8*%rw to i32*
store i32 1342177304,i32*%rx,align 4
%ry=load i8*,i8**%d,align 8
%rz=bitcast i8*%rv to i8**
store i8*%ry,i8**%rz,align 8
%rA=getelementptr inbounds i8,i8*%rv,i64 8
%rB=bitcast i8*%rA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1671 to void(...)*),void(...)**%rB,align 8
%rC=getelementptr inbounds i8,i8*%rv,i64 16
%rD=bitcast i8*%rC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1671 to void(...)*),void(...)**%rD,align 8
%rE=getelementptr inbounds i8,i8*%rv,i64 24
%rF=bitcast i8*%rE to i32*
store i32 -2147483647,i32*%rF,align 4
ret i8*%rv
rG:
%rH=getelementptr inbounds i8,i8*%s,i64 8
%rI=bitcast i8*%rH to i8**
%rJ=load i8*,i8**%rI,align 8
%rK=bitcast i8*%rJ to i8**
%rL=load i8*,i8**%rK,align 8
store i8*%rL,i8**%b,align 8
%rM=getelementptr inbounds i8,i8*%rJ,i64 8
%rN=bitcast i8*%rM to i8**
%rO=load i8*,i8**%rN,align 8
store i8*%rO,i8**%c,align 8
%rP=getelementptr inbounds i8,i8*%rJ,i64 16
%rQ=bitcast i8*%rP to i8**
%rR=load i8*,i8**%rQ,align 8
store i8*%rR,i8**%d,align 8
%rS=getelementptr inbounds i8,i8*%rJ,i64 24
%rT=bitcast i8*%rS to i8**
%rU=load i8*,i8**%rT,align 8
store i8*%rU,i8**%e,align 8
%rV=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%rW=getelementptr inbounds i8,i8*%rV,i64 16
%rX=bitcast i8*%rW to i8*(i8*,i8*)**
%rY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rX,align 8
%rZ=bitcast i8*%rV to i8**
%r0=load i8*,i8**%rZ,align 8
store i8*%r0,i8**%g,align 8
%r1=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c,i64 0,i32 2)to i8*))
%r2=getelementptr inbounds i8,i8*%r1,i64 16
%r3=bitcast i8*%r2 to i8*(i8*,i8*)**
%r4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r3,align 8
%r5=bitcast i8*%r1 to i8**
%r6=load i8*,i8**%r5,align 8
store i8*%r6,i8**%f,align 8
%r7=load i8*,i8**%b,align 8
%r8=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%r7)
%r9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%sa=call fastcc i8*%r4(i8*inreg%r9,i8*inreg%r8)
store i8*%sa,i8**%f,align 8
%sb=call i8*@sml_alloc(i32 inreg 20)#0
%sc=getelementptr inbounds i8,i8*%sb,i64 -4
%sd=bitcast i8*%sc to i32*
store i32 1342177296,i32*%sd,align 4
store i8*%sb,i8**%h,align 8
%se=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%sf=bitcast i8*%sb to i8**
store i8*%se,i8**%sf,align 8
%sg=getelementptr inbounds i8,i8*%sb,i64 8
%sh=bitcast i8*%sg to i8**
store i8*null,i8**%sh,align 8
%si=getelementptr inbounds i8,i8*%sb,i64 16
%sj=bitcast i8*%si to i32*
store i32 3,i32*%sj,align 4
%sk=call i8*@sml_alloc(i32 inreg 20)#0
%sl=getelementptr inbounds i8,i8*%sk,i64 -4
%sm=bitcast i8*%sl to i32*
store i32 1342177296,i32*%sm,align 4
%sn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%so=bitcast i8*%sk to i8**
store i8*%sn,i8**%so,align 8
%sp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%sq=getelementptr inbounds i8,i8*%sk,i64 8
%sr=bitcast i8*%sq to i8**
store i8*%sp,i8**%sr,align 8
%ss=getelementptr inbounds i8,i8*%sk,i64 16
%st=bitcast i8*%ss to i32*
store i32 3,i32*%st,align 4
%su=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sv=call fastcc i8*%rY(i8*inreg%su,i8*inreg%sk)
store i8*%sv,i8**%b,align 8
%sw=call i8*@sml_alloc(i32 inreg 36)#0
%sx=getelementptr inbounds i8,i8*%sw,i64 -4
%sy=bitcast i8*%sx to i32*
store i32 1342177312,i32*%sy,align 4
store i8*%sw,i8**%f,align 8
%sz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%sA=bitcast i8*%sw to i8**
store i8*%sz,i8**%sA,align 8
%sB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sC=getelementptr inbounds i8,i8*%sw,i64 8
%sD=bitcast i8*%sC to i8**
store i8*%sB,i8**%sD,align 8
%sE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sF=getelementptr inbounds i8,i8*%sw,i64 16
%sG=bitcast i8*%sF to i8**
store i8*%sE,i8**%sG,align 8
%sH=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%sI=getelementptr inbounds i8,i8*%sw,i64 24
%sJ=bitcast i8*%sI to i8**
store i8*%sH,i8**%sJ,align 8
%sK=getelementptr inbounds i8,i8*%sw,i64 32
%sL=bitcast i8*%sK to i32*
store i32 15,i32*%sL,align 4
%sM=call i8*@sml_alloc(i32 inreg 28)#0
%sN=getelementptr inbounds i8,i8*%sM,i64 -4
%sO=bitcast i8*%sN to i32*
store i32 1342177304,i32*%sO,align 4
%sP=load i8*,i8**%f,align 8
%sQ=bitcast i8*%sM to i8**
store i8*%sP,i8**%sQ,align 8
%sR=getelementptr inbounds i8,i8*%sM,i64 8
%sS=bitcast i8*%sR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1667 to void(...)*),void(...)**%sS,align 8
%sT=getelementptr inbounds i8,i8*%sM,i64 16
%sU=bitcast i8*%sT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1667 to void(...)*),void(...)**%sU,align 8
%sV=getelementptr inbounds i8,i8*%sM,i64 24
%sW=bitcast i8*%sV to i32*
store i32 -2147483647,i32*%sW,align 4
ret i8*%sM
sX:
%sY=getelementptr inbounds i8,i8*%s,i64 8
%sZ=bitcast i8*%sY to i8**
%s0=load i8*,i8**%sZ,align 8
%s1=getelementptr inbounds i8,i8*%s0,i64 8
%s2=bitcast i8*%s1 to i8**
%s3=load i8*,i8**%s2,align 8
store i8*%s3,i8**%b,align 8
%s4=getelementptr inbounds i8,i8*%s0,i64 16
%s5=bitcast i8*%s4 to i8**
%s6=load i8*,i8**%s5,align 8
store i8*%s6,i8**%c,align 8
%s7=getelementptr inbounds i8,i8*%s0,i64 24
%s8=bitcast i8*%s7 to i8**
%s9=load i8*,i8**%s8,align 8
store i8*%s9,i8**%d,align 8
%ta=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%tb=getelementptr inbounds i8,i8*%ta,i64 16
%tc=bitcast i8*%tb to i8*(i8*,i8*)**
%td=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tc,align 8
%te=bitcast i8*%ta to i8**
%tf=load i8*,i8**%te,align 8
store i8*%tf,i8**%f,align 8
%tg=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c,i64 0,i32 2)to i8*))
%th=getelementptr inbounds i8,i8*%tg,i64 16
%ti=bitcast i8*%th to i8*(i8*,i8*)**
%tj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ti,align 8
%tk=bitcast i8*%tg to i8**
%tl=load i8*,i8**%tk,align 8
store i8*%tl,i8**%e,align 8
%tm=load i8*,i8**%b,align 8
%tn=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%tm)
%to=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tp=call fastcc i8*%tj(i8*inreg%to,i8*inreg%tn)
store i8*%tp,i8**%e,align 8
%tq=call i8*@sml_alloc(i32 inreg 20)#0
%tr=getelementptr inbounds i8,i8*%tq,i64 -4
%ts=bitcast i8*%tr to i32*
store i32 1342177296,i32*%ts,align 4
store i8*%tq,i8**%g,align 8
%tt=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%tu=bitcast i8*%tq to i8**
store i8*%tt,i8**%tu,align 8
%tv=getelementptr inbounds i8,i8*%tq,i64 8
%tw=bitcast i8*%tv to i8**
store i8*null,i8**%tw,align 8
%tx=getelementptr inbounds i8,i8*%tq,i64 16
%ty=bitcast i8*%tx to i32*
store i32 3,i32*%ty,align 4
%tz=call i8*@sml_alloc(i32 inreg 20)#0
%tA=getelementptr inbounds i8,i8*%tz,i64 -4
%tB=bitcast i8*%tA to i32*
store i32 1342177296,i32*%tB,align 4
%tC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tD=bitcast i8*%tz to i8**
store i8*%tC,i8**%tD,align 8
%tE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tF=getelementptr inbounds i8,i8*%tz,i64 8
%tG=bitcast i8*%tF to i8**
store i8*%tE,i8**%tG,align 8
%tH=getelementptr inbounds i8,i8*%tz,i64 16
%tI=bitcast i8*%tH to i32*
store i32 3,i32*%tI,align 4
%tJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%tK=call fastcc i8*%td(i8*inreg%tJ,i8*inreg%tz)
store i8*%tK,i8**%b,align 8
%tL=call i8*@sml_alloc(i32 inreg 28)#0
%tM=getelementptr inbounds i8,i8*%tL,i64 -4
%tN=bitcast i8*%tM to i32*
store i32 1342177304,i32*%tN,align 4
store i8*%tL,i8**%e,align 8
%tO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%tP=bitcast i8*%tL to i8**
store i8*%tO,i8**%tP,align 8
%tQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tR=getelementptr inbounds i8,i8*%tL,i64 8
%tS=bitcast i8*%tR to i8**
store i8*%tQ,i8**%tS,align 8
%tT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%tU=getelementptr inbounds i8,i8*%tL,i64 16
%tV=bitcast i8*%tU to i8**
store i8*%tT,i8**%tV,align 8
%tW=getelementptr inbounds i8,i8*%tL,i64 24
%tX=bitcast i8*%tW to i32*
store i32 7,i32*%tX,align 4
%tY=call i8*@sml_alloc(i32 inreg 28)#0
%tZ=getelementptr inbounds i8,i8*%tY,i64 -4
%t0=bitcast i8*%tZ to i32*
store i32 1342177304,i32*%t0,align 4
%t1=load i8*,i8**%e,align 8
%t2=bitcast i8*%tY to i8**
store i8*%t1,i8**%t2,align 8
%t3=getelementptr inbounds i8,i8*%tY,i64 8
%t4=bitcast i8*%t3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1664 to void(...)*),void(...)**%t4,align 8
%t5=getelementptr inbounds i8,i8*%tY,i64 16
%t6=bitcast i8*%t5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1664 to void(...)*),void(...)**%t6,align 8
%t7=getelementptr inbounds i8,i8*%tY,i64 24
%t8=bitcast i8*%t7 to i32*
store i32 -2147483647,i32*%t8,align 4
ret i8*%tY
t9:
%ua=getelementptr inbounds i8,i8*%s,i64 8
%ub=bitcast i8*%ua to i8**
%uc=load i8*,i8**%ub,align 8
%ud=bitcast i8*%uc to i8**
%ue=load i8*,i8**%ud,align 8
store i8*%ue,i8**%b,align 8
%uf=getelementptr inbounds i8,i8*%uc,i64 8
%ug=bitcast i8*%uf to i8**
%uh=load i8*,i8**%ug,align 8
store i8*%uh,i8**%c,align 8
%ui=getelementptr inbounds i8,i8*%uc,i64 16
%uj=bitcast i8*%ui to i8**
%uk=load i8*,i8**%uj,align 8
store i8*%uk,i8**%d,align 8
%ul=call i8*@sml_alloc(i32 inreg 28)#0
%um=getelementptr inbounds i8,i8*%ul,i64 -4
%un=bitcast i8*%um to i32*
store i32 1342177304,i32*%un,align 4
store i8*%ul,i8**%e,align 8
%uo=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%up=bitcast i8*%ul to i8**
store i8*%uo,i8**%up,align 8
%uq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ur=getelementptr inbounds i8,i8*%ul,i64 8
%us=bitcast i8*%ur to i8**
store i8*%uq,i8**%us,align 8
%ut=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uu=getelementptr inbounds i8,i8*%ul,i64 16
%uv=bitcast i8*%uu to i8**
store i8*%ut,i8**%uv,align 8
%uw=getelementptr inbounds i8,i8*%ul,i64 24
%ux=bitcast i8*%uw to i32*
store i32 7,i32*%ux,align 4
%uy=call i8*@sml_alloc(i32 inreg 28)#0
%uz=getelementptr inbounds i8,i8*%uy,i64 -4
%uA=bitcast i8*%uz to i32*
store i32 1342177304,i32*%uA,align 4
%uB=load i8*,i8**%e,align 8
%uC=bitcast i8*%uy to i8**
store i8*%uB,i8**%uC,align 8
%uD=getelementptr inbounds i8,i8*%uy,i64 8
%uE=bitcast i8*%uD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1662 to void(...)*),void(...)**%uE,align 8
%uF=getelementptr inbounds i8,i8*%uy,i64 16
%uG=bitcast i8*%uF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1662 to void(...)*),void(...)**%uG,align 8
%uH=getelementptr inbounds i8,i8*%uy,i64 24
%uI=bitcast i8*%uH to i32*
store i32 -2147483647,i32*%uI,align 4
ret i8*%uy
uJ:
%uK=getelementptr inbounds i8,i8*%s,i64 8
%uL=bitcast i8*%uK to i8**
%uM=load i8*,i8**%uL,align 8
%uN=bitcast i8*%uM to i32*
%uO=load i32,i32*%uN,align 4
%uP=icmp eq i32%uO,0
%uQ=getelementptr inbounds i8,i8*%uM,i64 8
%uR=bitcast i8*%uQ to i8**
%uS=load i8*,i8**%uR,align 8
store i8*%uS,i8**%b,align 8
%uT=getelementptr inbounds i8,i8*%uM,i64 16
%uU=bitcast i8*%uT to i8**
%uV=load i8*,i8**%uU,align 8
store i8*%uV,i8**%c,align 8
%uW=getelementptr inbounds i8,i8*%uM,i64 24
%uX=bitcast i8*%uW to i8**
%uY=load i8*,i8**%uX,align 8
store i8*%uY,i8**%d,align 8
%uZ=call i8*@sml_alloc(i32 inreg 28)#0
%u0=getelementptr inbounds i8,i8*%uZ,i64 -4
%u1=bitcast i8*%u0 to i32*
store i32 1342177304,i32*%u1,align 4
store i8*%uZ,i8**%e,align 8
%u2=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u3=bitcast i8*%uZ to i8**
store i8*%u2,i8**%u3,align 8
%u4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u5=getelementptr inbounds i8,i8*%uZ,i64 8
%u6=bitcast i8*%u5 to i8**
store i8*%u4,i8**%u6,align 8
%u7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u8=getelementptr inbounds i8,i8*%uZ,i64 16
%u9=bitcast i8*%u8 to i8**
store i8*%u7,i8**%u9,align 8
%va=getelementptr inbounds i8,i8*%uZ,i64 24
%vb=bitcast i8*%va to i32*
store i32 7,i32*%vb,align 4
%vc=call i8*@sml_alloc(i32 inreg 28)#0
%vd=getelementptr inbounds i8,i8*%vc,i64 -4
%ve=bitcast i8*%vd to i32*
store i32 1342177304,i32*%ve,align 4
%vf=load i8*,i8**%e,align 8
%vg=bitcast i8*%vc to i8**
store i8*%vf,i8**%vg,align 8
%vh=getelementptr inbounds i8,i8*%vc,i64 8
%vi=bitcast i8*%vh to void(...)**
br i1%uP,label%vo,label%vj
vj:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1660 to void(...)*),void(...)**%vi,align 8
%vk=getelementptr inbounds i8,i8*%vc,i64 16
%vl=bitcast i8*%vk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1660 to void(...)*),void(...)**%vl,align 8
%vm=getelementptr inbounds i8,i8*%vc,i64 24
%vn=bitcast i8*%vm to i32*
store i32 -2147483647,i32*%vn,align 4
ret i8*%vc
vo:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1657 to void(...)*),void(...)**%vi,align 8
%vp=getelementptr inbounds i8,i8*%vc,i64 16
%vq=bitcast i8*%vp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1657 to void(...)*),void(...)**%vq,align 8
%vr=getelementptr inbounds i8,i8*%vc,i64 24
%vs=bitcast i8*%vr to i32*
store i32 -2147483647,i32*%vs,align 4
ret i8*%vc
vt:
%vu=getelementptr inbounds i8,i8*%s,i64 8
%vv=bitcast i8*%vu to i8**
%vw=load i8*,i8**%vv,align 8
%vx=bitcast i8*%vw to i32*
%vy=load i32,i32*%vx,align 4
switch i32%vy,label%vz[
i32 5,label%zt
i32 2,label%y1
i32 6,label%yz
i32 3,label%x7
i32 0,label%xF
i32 1,label%xd
i32 7,label%wL
i32 4,label%wj
i32 8,label%vR
]
vz:
call void@sml_matchcomp_bug()
%vA=load i8*,i8**@_SMLZ5Match,align 8
store i8*%vA,i8**%b,align 8
%vB=call i8*@sml_alloc(i32 inreg 20)#0
%vC=getelementptr inbounds i8,i8*%vB,i64 -4
%vD=bitcast i8*%vC to i32*
store i32 1342177296,i32*%vD,align 4
store i8*%vB,i8**%c,align 8
%vE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%vF=bitcast i8*%vB to i8**
store i8*%vE,i8**%vF,align 8
%vG=getelementptr inbounds i8,i8*%vB,i64 8
%vH=bitcast i8*%vG to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@gO,i64 0,i32 2,i64 0),i8**%vH,align 8
%vI=getelementptr inbounds i8,i8*%vB,i64 16
%vJ=bitcast i8*%vI to i32*
store i32 3,i32*%vJ,align 4
%vK=call i8*@sml_alloc(i32 inreg 60)#0
%vL=getelementptr inbounds i8,i8*%vK,i64 -4
%vM=bitcast i8*%vL to i32*
store i32 1342177336,i32*%vM,align 4
%vN=getelementptr inbounds i8,i8*%vK,i64 56
%vO=bitcast i8*%vN to i32*
store i32 1,i32*%vO,align 4
%vP=load i8*,i8**%c,align 8
%vQ=bitcast i8*%vK to i8**
store i8*%vP,i8**%vQ,align 8
call void@sml_raise(i8*inreg%vK)#1
unreachable
vR:
%vS=getelementptr inbounds i8,i8*%vw,i64 8
%vT=bitcast i8*%vS to i8**
%vU=load i8*,i8**%vT,align 8
store i8*%vU,i8**%b,align 8
%vV=getelementptr inbounds i8,i8*%vw,i64 16
%vW=bitcast i8*%vV to i8**
%vX=load i8*,i8**%vW,align 8
store i8*%vX,i8**%c,align 8
%vY=call i8*@sml_alloc(i32 inreg 20)#0
%vZ=getelementptr inbounds i8,i8*%vY,i64 -4
%v0=bitcast i8*%vZ to i32*
store i32 1342177296,i32*%v0,align 4
store i8*%vY,i8**%d,align 8
%v1=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v2=bitcast i8*%vY to i8**
store i8*%v1,i8**%v2,align 8
%v3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v4=getelementptr inbounds i8,i8*%vY,i64 8
%v5=bitcast i8*%v4 to i8**
store i8*%v3,i8**%v5,align 8
%v6=getelementptr inbounds i8,i8*%vY,i64 16
%v7=bitcast i8*%v6 to i32*
store i32 3,i32*%v7,align 4
%v8=call i8*@sml_alloc(i32 inreg 28)#0
%v9=getelementptr inbounds i8,i8*%v8,i64 -4
%wa=bitcast i8*%v9 to i32*
store i32 1342177304,i32*%wa,align 4
%wb=load i8*,i8**%d,align 8
%wc=bitcast i8*%v8 to i8**
store i8*%wb,i8**%wc,align 8
%wd=getelementptr inbounds i8,i8*%v8,i64 8
%we=bitcast i8*%wd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1653 to void(...)*),void(...)**%we,align 8
%wf=getelementptr inbounds i8,i8*%v8,i64 16
%wg=bitcast i8*%wf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1653 to void(...)*),void(...)**%wg,align 8
%wh=getelementptr inbounds i8,i8*%v8,i64 24
%wi=bitcast i8*%wh to i32*
store i32 -2147483647,i32*%wi,align 4
ret i8*%v8
wj:
%wk=getelementptr inbounds i8,i8*%vw,i64 8
%wl=bitcast i8*%wk to i8**
%wm=load i8*,i8**%wl,align 8
store i8*%wm,i8**%b,align 8
%wn=getelementptr inbounds i8,i8*%vw,i64 16
%wo=bitcast i8*%wn to i8**
%wp=load i8*,i8**%wo,align 8
store i8*%wp,i8**%c,align 8
%wq=call i8*@sml_alloc(i32 inreg 20)#0
%wr=getelementptr inbounds i8,i8*%wq,i64 -4
%ws=bitcast i8*%wr to i32*
store i32 1342177296,i32*%ws,align 4
store i8*%wq,i8**%d,align 8
%wt=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%wu=bitcast i8*%wq to i8**
store i8*%wt,i8**%wu,align 8
%wv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ww=getelementptr inbounds i8,i8*%wq,i64 8
%wx=bitcast i8*%ww to i8**
store i8*%wv,i8**%wx,align 8
%wy=getelementptr inbounds i8,i8*%wq,i64 16
%wz=bitcast i8*%wy to i32*
store i32 3,i32*%wz,align 4
%wA=call i8*@sml_alloc(i32 inreg 28)#0
%wB=getelementptr inbounds i8,i8*%wA,i64 -4
%wC=bitcast i8*%wB to i32*
store i32 1342177304,i32*%wC,align 4
%wD=load i8*,i8**%d,align 8
%wE=bitcast i8*%wA to i8**
store i8*%wD,i8**%wE,align 8
%wF=getelementptr inbounds i8,i8*%wA,i64 8
%wG=bitcast i8*%wF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1651 to void(...)*),void(...)**%wG,align 8
%wH=getelementptr inbounds i8,i8*%wA,i64 16
%wI=bitcast i8*%wH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1651 to void(...)*),void(...)**%wI,align 8
%wJ=getelementptr inbounds i8,i8*%wA,i64 24
%wK=bitcast i8*%wJ to i32*
store i32 -2147483647,i32*%wK,align 4
ret i8*%wA
wL:
%wM=getelementptr inbounds i8,i8*%vw,i64 8
%wN=bitcast i8*%wM to i8**
%wO=load i8*,i8**%wN,align 8
store i8*%wO,i8**%b,align 8
%wP=getelementptr inbounds i8,i8*%vw,i64 16
%wQ=bitcast i8*%wP to i8**
%wR=load i8*,i8**%wQ,align 8
store i8*%wR,i8**%c,align 8
%wS=call i8*@sml_alloc(i32 inreg 20)#0
%wT=getelementptr inbounds i8,i8*%wS,i64 -4
%wU=bitcast i8*%wT to i32*
store i32 1342177296,i32*%wU,align 4
store i8*%wS,i8**%d,align 8
%wV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%wW=bitcast i8*%wS to i8**
store i8*%wV,i8**%wW,align 8
%wX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%wY=getelementptr inbounds i8,i8*%wS,i64 8
%wZ=bitcast i8*%wY to i8**
store i8*%wX,i8**%wZ,align 8
%w0=getelementptr inbounds i8,i8*%wS,i64 16
%w1=bitcast i8*%w0 to i32*
store i32 3,i32*%w1,align 4
%w2=call i8*@sml_alloc(i32 inreg 28)#0
%w3=getelementptr inbounds i8,i8*%w2,i64 -4
%w4=bitcast i8*%w3 to i32*
store i32 1342177304,i32*%w4,align 4
%w5=load i8*,i8**%d,align 8
%w6=bitcast i8*%w2 to i8**
store i8*%w5,i8**%w6,align 8
%w7=getelementptr inbounds i8,i8*%w2,i64 8
%w8=bitcast i8*%w7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1649 to void(...)*),void(...)**%w8,align 8
%w9=getelementptr inbounds i8,i8*%w2,i64 16
%xa=bitcast i8*%w9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1649 to void(...)*),void(...)**%xa,align 8
%xb=getelementptr inbounds i8,i8*%w2,i64 24
%xc=bitcast i8*%xb to i32*
store i32 -2147483647,i32*%xc,align 4
ret i8*%w2
xd:
%xe=getelementptr inbounds i8,i8*%vw,i64 8
%xf=bitcast i8*%xe to i8**
%xg=load i8*,i8**%xf,align 8
store i8*%xg,i8**%b,align 8
%xh=getelementptr inbounds i8,i8*%vw,i64 16
%xi=bitcast i8*%xh to i8**
%xj=load i8*,i8**%xi,align 8
store i8*%xj,i8**%c,align 8
%xk=call i8*@sml_alloc(i32 inreg 20)#0
%xl=getelementptr inbounds i8,i8*%xk,i64 -4
%xm=bitcast i8*%xl to i32*
store i32 1342177296,i32*%xm,align 4
store i8*%xk,i8**%d,align 8
%xn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%xo=bitcast i8*%xk to i8**
store i8*%xn,i8**%xo,align 8
%xp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%xq=getelementptr inbounds i8,i8*%xk,i64 8
%xr=bitcast i8*%xq to i8**
store i8*%xp,i8**%xr,align 8
%xs=getelementptr inbounds i8,i8*%xk,i64 16
%xt=bitcast i8*%xs to i32*
store i32 3,i32*%xt,align 4
%xu=call i8*@sml_alloc(i32 inreg 28)#0
%xv=getelementptr inbounds i8,i8*%xu,i64 -4
%xw=bitcast i8*%xv to i32*
store i32 1342177304,i32*%xw,align 4
%xx=load i8*,i8**%d,align 8
%xy=bitcast i8*%xu to i8**
store i8*%xx,i8**%xy,align 8
%xz=getelementptr inbounds i8,i8*%xu,i64 8
%xA=bitcast i8*%xz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1646 to void(...)*),void(...)**%xA,align 8
%xB=getelementptr inbounds i8,i8*%xu,i64 16
%xC=bitcast i8*%xB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1646 to void(...)*),void(...)**%xC,align 8
%xD=getelementptr inbounds i8,i8*%xu,i64 24
%xE=bitcast i8*%xD to i32*
store i32 -2147483647,i32*%xE,align 4
ret i8*%xu
xF:
%xG=getelementptr inbounds i8,i8*%vw,i64 8
%xH=bitcast i8*%xG to i8**
%xI=load i8*,i8**%xH,align 8
store i8*%xI,i8**%b,align 8
%xJ=getelementptr inbounds i8,i8*%vw,i64 16
%xK=bitcast i8*%xJ to i8**
%xL=load i8*,i8**%xK,align 8
store i8*%xL,i8**%c,align 8
%xM=call i8*@sml_alloc(i32 inreg 20)#0
%xN=getelementptr inbounds i8,i8*%xM,i64 -4
%xO=bitcast i8*%xN to i32*
store i32 1342177296,i32*%xO,align 4
store i8*%xM,i8**%d,align 8
%xP=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%xQ=bitcast i8*%xM to i8**
store i8*%xP,i8**%xQ,align 8
%xR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%xS=getelementptr inbounds i8,i8*%xM,i64 8
%xT=bitcast i8*%xS to i8**
store i8*%xR,i8**%xT,align 8
%xU=getelementptr inbounds i8,i8*%xM,i64 16
%xV=bitcast i8*%xU to i32*
store i32 3,i32*%xV,align 4
%xW=call i8*@sml_alloc(i32 inreg 28)#0
%xX=getelementptr inbounds i8,i8*%xW,i64 -4
%xY=bitcast i8*%xX to i32*
store i32 1342177304,i32*%xY,align 4
%xZ=load i8*,i8**%d,align 8
%x0=bitcast i8*%xW to i8**
store i8*%xZ,i8**%x0,align 8
%x1=getelementptr inbounds i8,i8*%xW,i64 8
%x2=bitcast i8*%x1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1644 to void(...)*),void(...)**%x2,align 8
%x3=getelementptr inbounds i8,i8*%xW,i64 16
%x4=bitcast i8*%x3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1644 to void(...)*),void(...)**%x4,align 8
%x5=getelementptr inbounds i8,i8*%xW,i64 24
%x6=bitcast i8*%x5 to i32*
store i32 -2147483647,i32*%x6,align 4
ret i8*%xW
x7:
%x8=getelementptr inbounds i8,i8*%vw,i64 8
%x9=bitcast i8*%x8 to i8**
%ya=load i8*,i8**%x9,align 8
store i8*%ya,i8**%b,align 8
%yb=getelementptr inbounds i8,i8*%vw,i64 16
%yc=bitcast i8*%yb to i8**
%yd=load i8*,i8**%yc,align 8
store i8*%yd,i8**%c,align 8
%ye=call i8*@sml_alloc(i32 inreg 20)#0
%yf=getelementptr inbounds i8,i8*%ye,i64 -4
%yg=bitcast i8*%yf to i32*
store i32 1342177296,i32*%yg,align 4
store i8*%ye,i8**%d,align 8
%yh=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%yi=bitcast i8*%ye to i8**
store i8*%yh,i8**%yi,align 8
%yj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yk=getelementptr inbounds i8,i8*%ye,i64 8
%yl=bitcast i8*%yk to i8**
store i8*%yj,i8**%yl,align 8
%ym=getelementptr inbounds i8,i8*%ye,i64 16
%yn=bitcast i8*%ym to i32*
store i32 3,i32*%yn,align 4
%yo=call i8*@sml_alloc(i32 inreg 28)#0
%yp=getelementptr inbounds i8,i8*%yo,i64 -4
%yq=bitcast i8*%yp to i32*
store i32 1342177304,i32*%yq,align 4
%yr=load i8*,i8**%d,align 8
%ys=bitcast i8*%yo to i8**
store i8*%yr,i8**%ys,align 8
%yt=getelementptr inbounds i8,i8*%yo,i64 8
%yu=bitcast i8*%yt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1642 to void(...)*),void(...)**%yu,align 8
%yv=getelementptr inbounds i8,i8*%yo,i64 16
%yw=bitcast i8*%yv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1642 to void(...)*),void(...)**%yw,align 8
%yx=getelementptr inbounds i8,i8*%yo,i64 24
%yy=bitcast i8*%yx to i32*
store i32 -2147483647,i32*%yy,align 4
ret i8*%yo
yz:
%yA=getelementptr inbounds i8,i8*%vw,i64 8
%yB=bitcast i8*%yA to i8**
%yC=load i8*,i8**%yB,align 8
store i8*%yC,i8**%b,align 8
%yD=getelementptr inbounds i8,i8*%vw,i64 16
%yE=bitcast i8*%yD to i8**
%yF=load i8*,i8**%yE,align 8
store i8*%yF,i8**%c,align 8
%yG=call i8*@sml_alloc(i32 inreg 20)#0
%yH=getelementptr inbounds i8,i8*%yG,i64 -4
%yI=bitcast i8*%yH to i32*
store i32 1342177296,i32*%yI,align 4
store i8*%yG,i8**%d,align 8
%yJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%yK=bitcast i8*%yG to i8**
store i8*%yJ,i8**%yK,align 8
%yL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yM=getelementptr inbounds i8,i8*%yG,i64 8
%yN=bitcast i8*%yM to i8**
store i8*%yL,i8**%yN,align 8
%yO=getelementptr inbounds i8,i8*%yG,i64 16
%yP=bitcast i8*%yO to i32*
store i32 3,i32*%yP,align 4
%yQ=call i8*@sml_alloc(i32 inreg 28)#0
%yR=getelementptr inbounds i8,i8*%yQ,i64 -4
%yS=bitcast i8*%yR to i32*
store i32 1342177304,i32*%yS,align 4
%yT=load i8*,i8**%d,align 8
%yU=bitcast i8*%yQ to i8**
store i8*%yT,i8**%yU,align 8
%yV=getelementptr inbounds i8,i8*%yQ,i64 8
%yW=bitcast i8*%yV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1640 to void(...)*),void(...)**%yW,align 8
%yX=getelementptr inbounds i8,i8*%yQ,i64 16
%yY=bitcast i8*%yX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1640 to void(...)*),void(...)**%yY,align 8
%yZ=getelementptr inbounds i8,i8*%yQ,i64 24
%y0=bitcast i8*%yZ to i32*
store i32 -2147483647,i32*%y0,align 4
ret i8*%yQ
y1:
%y2=getelementptr inbounds i8,i8*%vw,i64 8
%y3=bitcast i8*%y2 to i8**
%y4=load i8*,i8**%y3,align 8
store i8*%y4,i8**%b,align 8
%y5=getelementptr inbounds i8,i8*%vw,i64 16
%y6=bitcast i8*%y5 to i8**
%y7=load i8*,i8**%y6,align 8
store i8*%y7,i8**%c,align 8
%y8=call i8*@sml_alloc(i32 inreg 20)#0
%y9=getelementptr inbounds i8,i8*%y8,i64 -4
%za=bitcast i8*%y9 to i32*
store i32 1342177296,i32*%za,align 4
store i8*%y8,i8**%d,align 8
%zb=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%zc=bitcast i8*%y8 to i8**
store i8*%zb,i8**%zc,align 8
%zd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ze=getelementptr inbounds i8,i8*%y8,i64 8
%zf=bitcast i8*%ze to i8**
store i8*%zd,i8**%zf,align 8
%zg=getelementptr inbounds i8,i8*%y8,i64 16
%zh=bitcast i8*%zg to i32*
store i32 3,i32*%zh,align 4
%zi=call i8*@sml_alloc(i32 inreg 28)#0
%zj=getelementptr inbounds i8,i8*%zi,i64 -4
%zk=bitcast i8*%zj to i32*
store i32 1342177304,i32*%zk,align 4
%zl=load i8*,i8**%d,align 8
%zm=bitcast i8*%zi to i8**
store i8*%zl,i8**%zm,align 8
%zn=getelementptr inbounds i8,i8*%zi,i64 8
%zo=bitcast i8*%zn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1638 to void(...)*),void(...)**%zo,align 8
%zp=getelementptr inbounds i8,i8*%zi,i64 16
%zq=bitcast i8*%zp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1638 to void(...)*),void(...)**%zq,align 8
%zr=getelementptr inbounds i8,i8*%zi,i64 24
%zs=bitcast i8*%zr to i32*
store i32 -2147483647,i32*%zs,align 4
ret i8*%zi
zt:
%zu=getelementptr inbounds i8,i8*%vw,i64 8
%zv=bitcast i8*%zu to i8**
%zw=load i8*,i8**%zv,align 8
store i8*%zw,i8**%b,align 8
%zx=getelementptr inbounds i8,i8*%vw,i64 16
%zy=bitcast i8*%zx to i8**
%zz=load i8*,i8**%zy,align 8
store i8*%zz,i8**%c,align 8
%zA=call i8*@sml_alloc(i32 inreg 20)#0
%zB=getelementptr inbounds i8,i8*%zA,i64 -4
%zC=bitcast i8*%zB to i32*
store i32 1342177296,i32*%zC,align 4
store i8*%zA,i8**%d,align 8
%zD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%zE=bitcast i8*%zA to i8**
store i8*%zD,i8**%zE,align 8
%zF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%zG=getelementptr inbounds i8,i8*%zA,i64 8
%zH=bitcast i8*%zG to i8**
store i8*%zF,i8**%zH,align 8
%zI=getelementptr inbounds i8,i8*%zA,i64 16
%zJ=bitcast i8*%zI to i32*
store i32 3,i32*%zJ,align 4
%zK=call i8*@sml_alloc(i32 inreg 28)#0
%zL=getelementptr inbounds i8,i8*%zK,i64 -4
%zM=bitcast i8*%zL to i32*
store i32 1342177304,i32*%zM,align 4
%zN=load i8*,i8**%d,align 8
%zO=bitcast i8*%zK to i8**
store i8*%zN,i8**%zO,align 8
%zP=getelementptr inbounds i8,i8*%zK,i64 8
%zQ=bitcast i8*%zP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1636 to void(...)*),void(...)**%zQ,align 8
%zR=getelementptr inbounds i8,i8*%zK,i64 16
%zS=bitcast i8*%zR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1636 to void(...)*),void(...)**%zS,align 8
%zT=getelementptr inbounds i8,i8*%zK,i64 24
%zU=bitcast i8*%zT to i32*
store i32 -2147483647,i32*%zU,align 4
ret i8*%zK
zV:
%zW=getelementptr inbounds i8,i8*%s,i64 8
%zX=bitcast i8*%zW to i8**
%zY=load i8*,i8**%zX,align 8
%zZ=bitcast i8*%zY to i8**
%z0=load i8*,i8**%zZ,align 8
%z1=bitcast i8*%z0 to i8**
%z2=load i8*,i8**%z1,align 8
store i8*%z2,i8**%b,align 8
%z3=getelementptr inbounds i8,i8*%z0,i64 8
%z4=bitcast i8*%z3 to i8**
%z5=load i8*,i8**%z4,align 8
store i8*%z5,i8**%c,align 8
%z6=getelementptr inbounds i8,i8*%zY,i64 8
%z7=bitcast i8*%z6 to i8**
%z8=load i8*,i8**%z7,align 8
store i8*%z8,i8**%d,align 8
%z9=call i8*@sml_alloc(i32 inreg 28)#0
%Aa=getelementptr inbounds i8,i8*%z9,i64 -4
%Ab=bitcast i8*%Aa to i32*
store i32 1342177304,i32*%Ab,align 4
store i8*%z9,i8**%e,align 8
%Ac=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ad=bitcast i8*%z9 to i8**
store i8*%Ac,i8**%Ad,align 8
%Ae=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Af=getelementptr inbounds i8,i8*%z9,i64 8
%Ag=bitcast i8*%Af to i8**
store i8*%Ae,i8**%Ag,align 8
%Ah=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ai=getelementptr inbounds i8,i8*%z9,i64 16
%Aj=bitcast i8*%Ai to i8**
store i8*%Ah,i8**%Aj,align 8
%Ak=getelementptr inbounds i8,i8*%z9,i64 24
%Al=bitcast i8*%Ak to i32*
store i32 7,i32*%Al,align 4
%Am=call i8*@sml_alloc(i32 inreg 28)#0
%An=getelementptr inbounds i8,i8*%Am,i64 -4
%Ao=bitcast i8*%An to i32*
store i32 1342177304,i32*%Ao,align 4
%Ap=load i8*,i8**%e,align 8
%Aq=bitcast i8*%Am to i8**
store i8*%Ap,i8**%Aq,align 8
%Ar=getelementptr inbounds i8,i8*%Am,i64 8
%As=bitcast i8*%Ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1634 to void(...)*),void(...)**%As,align 8
%At=getelementptr inbounds i8,i8*%Am,i64 16
%Au=bitcast i8*%At to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1634 to void(...)*),void(...)**%Au,align 8
%Av=getelementptr inbounds i8,i8*%Am,i64 24
%Aw=bitcast i8*%Av to i32*
store i32 -2147483647,i32*%Aw,align 4
ret i8*%Am
Ax:
%Ay=getelementptr inbounds i8,i8*%s,i64 8
%Az=bitcast i8*%Ay to i8**
%AA=load i8*,i8**%Az,align 8
%AB=bitcast i8*%AA to i8**
%AC=load i8*,i8**%AB,align 8
store i8*%AC,i8**%b,align 8
%AD=getelementptr inbounds i8,i8*%AA,i64 8
%AE=bitcast i8*%AD to i8**
%AF=load i8*,i8**%AE,align 8
store i8*%AF,i8**%c,align 8
%AG=call i8*@sml_alloc(i32 inreg 20)#0
%AH=getelementptr inbounds i8,i8*%AG,i64 -4
%AI=bitcast i8*%AH to i32*
store i32 1342177296,i32*%AI,align 4
store i8*%AG,i8**%d,align 8
%AJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%AK=bitcast i8*%AG to i8**
store i8*%AJ,i8**%AK,align 8
%AL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%AM=getelementptr inbounds i8,i8*%AG,i64 8
%AN=bitcast i8*%AM to i8**
store i8*%AL,i8**%AN,align 8
%AO=getelementptr inbounds i8,i8*%AG,i64 16
%AP=bitcast i8*%AO to i32*
store i32 3,i32*%AP,align 4
%AQ=call i8*@sml_alloc(i32 inreg 28)#0
%AR=getelementptr inbounds i8,i8*%AQ,i64 -4
%AS=bitcast i8*%AR to i32*
store i32 1342177304,i32*%AS,align 4
%AT=load i8*,i8**%d,align 8
%AU=bitcast i8*%AQ to i8**
store i8*%AT,i8**%AU,align 8
%AV=getelementptr inbounds i8,i8*%AQ,i64 8
%AW=bitcast i8*%AV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1632 to void(...)*),void(...)**%AW,align 8
%AX=getelementptr inbounds i8,i8*%AQ,i64 16
%AY=bitcast i8*%AX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1632 to void(...)*),void(...)**%AY,align 8
%AZ=getelementptr inbounds i8,i8*%AQ,i64 24
%A0=bitcast i8*%AZ to i32*
store i32 -2147483647,i32*%A0,align 4
ret i8*%AQ
A1:
%A2=getelementptr inbounds i8,i8*%s,i64 8
%A3=bitcast i8*%A2 to i8**
%A4=load i8*,i8**%A3,align 8
store i8*%A4,i8**%b,align 8
%A5=call i8*@sml_alloc(i32 inreg 12)#0
%A6=getelementptr inbounds i8,i8*%A5,i64 -4
%A7=bitcast i8*%A6 to i32*
store i32 1342177288,i32*%A7,align 4
store i8*%A5,i8**%c,align 8
%A8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A9=bitcast i8*%A5 to i8**
store i8*%A8,i8**%A9,align 8
%Ba=getelementptr inbounds i8,i8*%A5,i64 8
%Bb=bitcast i8*%Ba to i32*
store i32 1,i32*%Bb,align 4
%Bc=call i8*@sml_alloc(i32 inreg 28)#0
%Bd=getelementptr inbounds i8,i8*%Bc,i64 -4
%Be=bitcast i8*%Bd to i32*
store i32 1342177304,i32*%Be,align 4
%Bf=load i8*,i8**%c,align 8
%Bg=bitcast i8*%Bc to i8**
store i8*%Bf,i8**%Bg,align 8
%Bh=getelementptr inbounds i8,i8*%Bc,i64 8
%Bi=bitcast i8*%Bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1630 to void(...)*),void(...)**%Bi,align 8
%Bj=getelementptr inbounds i8,i8*%Bc,i64 16
%Bk=bitcast i8*%Bj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1630 to void(...)*),void(...)**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%Bc,i64 24
%Bm=bitcast i8*%Bl to i32*
store i32 -2147483647,i32*%Bm,align 4
ret i8*%Bc
Bn:
%Bo=getelementptr inbounds i8,i8*%s,i64 8
%Bp=bitcast i8*%Bo to i8**
%Bq=load i8*,i8**%Bp,align 8
%Br=bitcast i8*%Bq to i8**
%Bs=load i8*,i8**%Br,align 8
%Bt=bitcast i8*%Bs to i32*
%Bu=load i32,i32*%Bt,align 4
switch i32%Bu,label%Bv[
i32 2,label%D4
i32 5,label%DC
i32 4,label%Da
i32 3,label%CI
i32 1,label%Cj
i32 0,label%BN
]
Bv:
call void@sml_matchcomp_bug()
%Bw=load i8*,i8**@_SMLZ5Match,align 8
store i8*%Bw,i8**%b,align 8
%Bx=call i8*@sml_alloc(i32 inreg 20)#0
%By=getelementptr inbounds i8,i8*%Bx,i64 -4
%Bz=bitcast i8*%By to i32*
store i32 1342177296,i32*%Bz,align 4
store i8*%Bx,i8**%c,align 8
%BA=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%BB=bitcast i8*%Bx to i8**
store i8*%BA,i8**%BB,align 8
%BC=getelementptr inbounds i8,i8*%Bx,i64 8
%BD=bitcast i8*%BC to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@gO,i64 0,i32 2,i64 0),i8**%BD,align 8
%BE=getelementptr inbounds i8,i8*%Bx,i64 16
%BF=bitcast i8*%BE to i32*
store i32 3,i32*%BF,align 4
%BG=call i8*@sml_alloc(i32 inreg 60)#0
%BH=getelementptr inbounds i8,i8*%BG,i64 -4
%BI=bitcast i8*%BH to i32*
store i32 1342177336,i32*%BI,align 4
%BJ=getelementptr inbounds i8,i8*%BG,i64 56
%BK=bitcast i8*%BJ to i32*
store i32 1,i32*%BK,align 4
%BL=load i8*,i8**%c,align 8
%BM=bitcast i8*%BG to i8**
store i8*%BL,i8**%BM,align 8
call void@sml_raise(i8*inreg%BG)#1
unreachable
BN:
%BO=getelementptr inbounds i8,i8*%Bs,i64 4
%BP=bitcast i8*%BO to i32*
%BQ=load i32,i32*%BP,align 4
%BR=icmp eq i32%BQ,0
%BS=getelementptr inbounds i8,i8*%Bq,i64 8
%BT=bitcast i8*%BS to i8**
%BU=load i8*,i8**%BT,align 8
store i8*%BU,i8**%b,align 8
%BV=call i8*@sml_alloc(i32 inreg 12)#0
%BW=getelementptr inbounds i8,i8*%BV,i64 -4
%BX=bitcast i8*%BW to i32*
store i32 1342177288,i32*%BX,align 4
store i8*%BV,i8**%c,align 8
%BY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%BZ=bitcast i8*%BV to i8**
store i8*%BY,i8**%BZ,align 8
%B0=getelementptr inbounds i8,i8*%BV,i64 8
%B1=bitcast i8*%B0 to i32*
store i32 1,i32*%B1,align 4
%B2=call i8*@sml_alloc(i32 inreg 28)#0
%B3=getelementptr inbounds i8,i8*%B2,i64 -4
%B4=bitcast i8*%B3 to i32*
store i32 1342177304,i32*%B4,align 4
%B5=load i8*,i8**%c,align 8
%B6=bitcast i8*%B2 to i8**
store i8*%B5,i8**%B6,align 8
%B7=getelementptr inbounds i8,i8*%B2,i64 8
%B8=bitcast i8*%B7 to void(...)**
br i1%BR,label%Ce,label%B9
B9:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1627 to void(...)*),void(...)**%B8,align 8
%Ca=getelementptr inbounds i8,i8*%B2,i64 16
%Cb=bitcast i8*%Ca to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1627 to void(...)*),void(...)**%Cb,align 8
%Cc=getelementptr inbounds i8,i8*%B2,i64 24
%Cd=bitcast i8*%Cc to i32*
store i32 -2147483647,i32*%Cd,align 4
ret i8*%B2
Ce:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1625 to void(...)*),void(...)**%B8,align 8
%Cf=getelementptr inbounds i8,i8*%B2,i64 16
%Cg=bitcast i8*%Cf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1625 to void(...)*),void(...)**%Cg,align 8
%Ch=getelementptr inbounds i8,i8*%B2,i64 24
%Ci=bitcast i8*%Ch to i32*
store i32 -2147483647,i32*%Ci,align 4
ret i8*%B2
Cj:
%Ck=getelementptr inbounds i8,i8*%Bs,i64 4
%Cl=load i8,i8*%Ck,align 1
%Cm=getelementptr inbounds i8,i8*%Bq,i64 8
%Cn=bitcast i8*%Cm to i8**
%Co=load i8*,i8**%Cn,align 8
store i8*%Co,i8**%b,align 8
%Cp=call i8*@sml_alloc(i32 inreg 20)#0
%Cq=getelementptr inbounds i8,i8*%Cp,i64 -4
%Cr=bitcast i8*%Cq to i32*
store i32 1342177296,i32*%Cr,align 4
store i8*%Cp,i8**%c,align 8
%Cs=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ct=bitcast i8*%Cp to i8**
store i8*%Cs,i8**%Ct,align 8
%Cu=getelementptr inbounds i8,i8*%Cp,i64 8
store i8%Cl,i8*%Cu,align 1
%Cv=getelementptr inbounds i8,i8*%Cp,i64 16
%Cw=bitcast i8*%Cv to i32*
store i32 1,i32*%Cw,align 4
%Cx=call i8*@sml_alloc(i32 inreg 28)#0
%Cy=getelementptr inbounds i8,i8*%Cx,i64 -4
%Cz=bitcast i8*%Cy to i32*
store i32 1342177304,i32*%Cz,align 4
%CA=load i8*,i8**%c,align 8
%CB=bitcast i8*%Cx to i8**
store i8*%CA,i8**%CB,align 8
%CC=getelementptr inbounds i8,i8*%Cx,i64 8
%CD=bitcast i8*%CC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1623 to void(...)*),void(...)**%CD,align 8
%CE=getelementptr inbounds i8,i8*%Cx,i64 16
%CF=bitcast i8*%CE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1623 to void(...)*),void(...)**%CF,align 8
%CG=getelementptr inbounds i8,i8*%Cx,i64 24
%CH=bitcast i8*%CG to i32*
store i32 -2147483647,i32*%CH,align 4
ret i8*%Cx
CI:
%CJ=getelementptr inbounds i8,i8*%Bs,i64 8
%CK=bitcast i8*%CJ to i8**
%CL=load i8*,i8**%CK,align 8
store i8*%CL,i8**%b,align 8
%CM=getelementptr inbounds i8,i8*%Bq,i64 8
%CN=bitcast i8*%CM to i8**
%CO=load i8*,i8**%CN,align 8
store i8*%CO,i8**%c,align 8
%CP=call i8*@sml_alloc(i32 inreg 20)#0
%CQ=getelementptr inbounds i8,i8*%CP,i64 -4
%CR=bitcast i8*%CQ to i32*
store i32 1342177296,i32*%CR,align 4
store i8*%CP,i8**%d,align 8
%CS=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%CT=bitcast i8*%CP to i8**
store i8*%CS,i8**%CT,align 8
%CU=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%CV=getelementptr inbounds i8,i8*%CP,i64 8
%CW=bitcast i8*%CV to i8**
store i8*%CU,i8**%CW,align 8
%CX=getelementptr inbounds i8,i8*%CP,i64 16
%CY=bitcast i8*%CX to i32*
store i32 3,i32*%CY,align 4
%CZ=call i8*@sml_alloc(i32 inreg 28)#0
%C0=getelementptr inbounds i8,i8*%CZ,i64 -4
%C1=bitcast i8*%C0 to i32*
store i32 1342177304,i32*%C1,align 4
%C2=load i8*,i8**%d,align 8
%C3=bitcast i8*%CZ to i8**
store i8*%C2,i8**%C3,align 8
%C4=getelementptr inbounds i8,i8*%CZ,i64 8
%C5=bitcast i8*%C4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1621 to void(...)*),void(...)**%C5,align 8
%C6=getelementptr inbounds i8,i8*%CZ,i64 16
%C7=bitcast i8*%C6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1621 to void(...)*),void(...)**%C7,align 8
%C8=getelementptr inbounds i8,i8*%CZ,i64 24
%C9=bitcast i8*%C8 to i32*
store i32 -2147483647,i32*%C9,align 4
ret i8*%CZ
Da:
%Db=getelementptr inbounds i8,i8*%Bs,i64 8
%Dc=bitcast i8*%Db to i8**
%Dd=load i8*,i8**%Dc,align 8
store i8*%Dd,i8**%b,align 8
%De=getelementptr inbounds i8,i8*%Bq,i64 8
%Df=bitcast i8*%De to i8**
%Dg=load i8*,i8**%Df,align 8
store i8*%Dg,i8**%c,align 8
%Dh=call i8*@sml_alloc(i32 inreg 20)#0
%Di=getelementptr inbounds i8,i8*%Dh,i64 -4
%Dj=bitcast i8*%Di to i32*
store i32 1342177296,i32*%Dj,align 4
store i8*%Dh,i8**%d,align 8
%Dk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Dl=bitcast i8*%Dh to i8**
store i8*%Dk,i8**%Dl,align 8
%Dm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Dn=getelementptr inbounds i8,i8*%Dh,i64 8
%Do=bitcast i8*%Dn to i8**
store i8*%Dm,i8**%Do,align 8
%Dp=getelementptr inbounds i8,i8*%Dh,i64 16
%Dq=bitcast i8*%Dp to i32*
store i32 3,i32*%Dq,align 4
%Dr=call i8*@sml_alloc(i32 inreg 28)#0
%Ds=getelementptr inbounds i8,i8*%Dr,i64 -4
%Dt=bitcast i8*%Ds to i32*
store i32 1342177304,i32*%Dt,align 4
%Du=load i8*,i8**%d,align 8
%Dv=bitcast i8*%Dr to i8**
store i8*%Du,i8**%Dv,align 8
%Dw=getelementptr inbounds i8,i8*%Dr,i64 8
%Dx=bitcast i8*%Dw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1619 to void(...)*),void(...)**%Dx,align 8
%Dy=getelementptr inbounds i8,i8*%Dr,i64 16
%Dz=bitcast i8*%Dy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1619 to void(...)*),void(...)**%Dz,align 8
%DA=getelementptr inbounds i8,i8*%Dr,i64 24
%DB=bitcast i8*%DA to i32*
store i32 -2147483647,i32*%DB,align 4
ret i8*%Dr
DC:
%DD=getelementptr inbounds i8,i8*%Bs,i64 8
%DE=bitcast i8*%DD to i8**
%DF=load i8*,i8**%DE,align 8
store i8*%DF,i8**%b,align 8
%DG=getelementptr inbounds i8,i8*%Bq,i64 8
%DH=bitcast i8*%DG to i8**
%DI=load i8*,i8**%DH,align 8
store i8*%DI,i8**%c,align 8
%DJ=call i8*@sml_alloc(i32 inreg 20)#0
%DK=getelementptr inbounds i8,i8*%DJ,i64 -4
%DL=bitcast i8*%DK to i32*
store i32 1342177296,i32*%DL,align 4
store i8*%DJ,i8**%d,align 8
%DM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%DN=bitcast i8*%DJ to i8**
store i8*%DM,i8**%DN,align 8
%DO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%DP=getelementptr inbounds i8,i8*%DJ,i64 8
%DQ=bitcast i8*%DP to i8**
store i8*%DO,i8**%DQ,align 8
%DR=getelementptr inbounds i8,i8*%DJ,i64 16
%DS=bitcast i8*%DR to i32*
store i32 3,i32*%DS,align 4
%DT=call i8*@sml_alloc(i32 inreg 28)#0
%DU=getelementptr inbounds i8,i8*%DT,i64 -4
%DV=bitcast i8*%DU to i32*
store i32 1342177304,i32*%DV,align 4
%DW=load i8*,i8**%d,align 8
%DX=bitcast i8*%DT to i8**
store i8*%DW,i8**%DX,align 8
%DY=getelementptr inbounds i8,i8*%DT,i64 8
%DZ=bitcast i8*%DY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1617 to void(...)*),void(...)**%DZ,align 8
%D0=getelementptr inbounds i8,i8*%DT,i64 16
%D1=bitcast i8*%D0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1617 to void(...)*),void(...)**%D1,align 8
%D2=getelementptr inbounds i8,i8*%DT,i64 24
%D3=bitcast i8*%D2 to i32*
store i32 -2147483647,i32*%D3,align 4
ret i8*%DT
D4:
%D5=getelementptr inbounds i8,i8*%Bs,i64 8
%D6=bitcast i8*%D5 to i8**
%D7=load i8*,i8**%D6,align 8
store i8*%D7,i8**%b,align 8
%D8=getelementptr inbounds i8,i8*%Bq,i64 8
%D9=bitcast i8*%D8 to i8**
%Ea=load i8*,i8**%D9,align 8
store i8*%Ea,i8**%c,align 8
%Eb=call i8*@sml_alloc(i32 inreg 20)#0
%Ec=getelementptr inbounds i8,i8*%Eb,i64 -4
%Ed=bitcast i8*%Ec to i32*
store i32 1342177296,i32*%Ed,align 4
store i8*%Eb,i8**%d,align 8
%Ee=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ef=bitcast i8*%Eb to i8**
store i8*%Ee,i8**%Ef,align 8
%Eg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Eh=getelementptr inbounds i8,i8*%Eb,i64 8
%Ei=bitcast i8*%Eh to i8**
store i8*%Eg,i8**%Ei,align 8
%Ej=getelementptr inbounds i8,i8*%Eb,i64 16
%Ek=bitcast i8*%Ej to i32*
store i32 3,i32*%Ek,align 4
%El=call i8*@sml_alloc(i32 inreg 28)#0
%Em=getelementptr inbounds i8,i8*%El,i64 -4
%En=bitcast i8*%Em to i32*
store i32 1342177304,i32*%En,align 4
%Eo=load i8*,i8**%d,align 8
%Ep=bitcast i8*%El to i8**
store i8*%Eo,i8**%Ep,align 8
%Eq=getelementptr inbounds i8,i8*%El,i64 8
%Er=bitcast i8*%Eq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1615 to void(...)*),void(...)**%Er,align 8
%Es=getelementptr inbounds i8,i8*%El,i64 16
%Et=bitcast i8*%Es to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1615 to void(...)*),void(...)**%Et,align 8
%Eu=getelementptr inbounds i8,i8*%El,i64 24
%Ev=bitcast i8*%Eu to i32*
store i32 -2147483647,i32*%Ev,align 4
ret i8*%El
Ew:
%Ex=getelementptr inbounds i8,i8*%s,i64 8
%Ey=bitcast i8*%Ex to i8**
%Ez=load i8*,i8**%Ey,align 8
%EA=bitcast i8*%Ez to i8**
%EB=load i8*,i8**%EA,align 8
store i8*%EB,i8**%b,align 8
%EC=getelementptr inbounds i8,i8*%Ez,i64 8
%ED=bitcast i8*%EC to i32*
%EE=load i32,i32*%ED,align 4
%EF=icmp eq i32%EE,7
%EG=getelementptr inbounds i8,i8*%Ez,i64 16
%EH=bitcast i8*%EG to i8**
%EI=load i8*,i8**%EH,align 8
store i8*%EI,i8**%c,align 8
%EJ=call i8*@sml_alloc(i32 inreg 20)#0
%EK=getelementptr inbounds i8,i8*%EJ,i64 -4
%EL=bitcast i8*%EK to i32*
store i32 1342177296,i32*%EL,align 4
store i8*%EJ,i8**%d,align 8
%EM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%EN=bitcast i8*%EJ to i8**
store i8*%EM,i8**%EN,align 8
%EO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%EP=getelementptr inbounds i8,i8*%EJ,i64 8
%EQ=bitcast i8*%EP to i8**
store i8*%EO,i8**%EQ,align 8
%ER=getelementptr inbounds i8,i8*%EJ,i64 16
%ES=bitcast i8*%ER to i32*
store i32 3,i32*%ES,align 4
%ET=call i8*@sml_alloc(i32 inreg 28)#0
%EU=getelementptr inbounds i8,i8*%ET,i64 -4
%EV=bitcast i8*%EU to i32*
store i32 1342177304,i32*%EV,align 4
%EW=load i8*,i8**%d,align 8
%EX=bitcast i8*%ET to i8**
store i8*%EW,i8**%EX,align 8
%EY=getelementptr inbounds i8,i8*%ET,i64 8
%EZ=bitcast i8*%EY to void(...)**
br i1%EF,label%E5,label%E0
E0:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1613 to void(...)*),void(...)**%EZ,align 8
%E1=getelementptr inbounds i8,i8*%ET,i64 16
%E2=bitcast i8*%E1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1613 to void(...)*),void(...)**%E2,align 8
%E3=getelementptr inbounds i8,i8*%ET,i64 24
%E4=bitcast i8*%E3 to i32*
store i32 -2147483647,i32*%E4,align 4
ret i8*%ET
E5:
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1610 to void(...)*),void(...)**%EZ,align 8
%E6=getelementptr inbounds i8,i8*%ET,i64 16
%E7=bitcast i8*%E6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1610 to void(...)*),void(...)**%E7,align 8
%E8=getelementptr inbounds i8,i8*%ET,i64 24
%E9=bitcast i8*%E8 to i32*
store i32 -2147483647,i32*%E9,align 4
ret i8*%ET
Fa:
%Fb=getelementptr inbounds i8,i8*%s,i64 8
%Fc=bitcast i8*%Fb to i8***
%Fd=load i8**,i8***%Fc,align 8
%Fe=load i8*,i8**%Fd,align 8
store i8*%Fe,i8**%b,align 8
%Ff=call i8*@sml_alloc(i32 inreg 12)#0
%Fg=getelementptr inbounds i8,i8*%Ff,i64 -4
%Fh=bitcast i8*%Fg to i32*
store i32 1342177288,i32*%Fh,align 4
store i8*%Ff,i8**%c,align 8
%Fi=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Fj=bitcast i8*%Ff to i8**
store i8*%Fi,i8**%Fj,align 8
%Fk=getelementptr inbounds i8,i8*%Ff,i64 8
%Fl=bitcast i8*%Fk to i32*
store i32 1,i32*%Fl,align 4
%Fm=call i8*@sml_alloc(i32 inreg 28)#0
%Fn=getelementptr inbounds i8,i8*%Fm,i64 -4
%Fo=bitcast i8*%Fn to i32*
store i32 1342177304,i32*%Fo,align 4
%Fp=load i8*,i8**%c,align 8
%Fq=bitcast i8*%Fm to i8**
store i8*%Fp,i8**%Fq,align 8
%Fr=getelementptr inbounds i8,i8*%Fm,i64 8
%Fs=bitcast i8*%Fr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1606 to void(...)*),void(...)**%Fs,align 8
%Ft=getelementptr inbounds i8,i8*%Fm,i64 16
%Fu=bitcast i8*%Ft to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToToyE_1606 to void(...)*),void(...)**%Fu,align 8
%Fv=getelementptr inbounds i8,i8*%Fm,i64 24
%Fw=bitcast i8*%Fv to i32*
store i32 -2147483647,i32*%Fw,align 4
ret i8*%Fm
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
br label%i
i:
%j=phi i8*[%ek,%eg],[%a,%k]
store i8*%j,i8**%b,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%b,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%j,%i]
%r=bitcast i8*%q to i32*
%s=load i32,i32*%r,align 4
switch i32%s,label%t[
i32 0,label%el
i32 1,label%eg
i32 3,label%dE
i32 2,label%L
]
t:
call void@sml_matchcomp_bug()
%u=load i8*,i8**@_SMLZ5Match,align 8
store i8*%u,i8**%b,align 8
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%c,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=bitcast i8*%v to i8**
store i8*%y,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%v,i64 8
%B=bitcast i8*%A to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gT,i64 0,i32 2,i64 0),i8**%B,align 8
%C=getelementptr inbounds i8,i8*%v,i64 16
%D=bitcast i8*%C to i32*
store i32 3,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 60)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177336,i32*%G,align 4
%H=getelementptr inbounds i8,i8*%E,i64 56
%I=bitcast i8*%H to i32*
store i32 1,i32*%I,align 4
%J=load i8*,i8**%c,align 8
%K=bitcast i8*%E to i8**
store i8*%J,i8**%K,align 8
call void@sml_raise(i8*inreg%E)#1
unreachable
L:
%M=getelementptr inbounds i8,i8*%q,i64 8
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%O,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=bitcast i8*%T to i32*
%V=load i32,i32*%U,align 4
switch i32%V,label%W[
i32 1,label%cu
i32 0,label%bO
i32 2,label%ao
]
W:
store i8*null,i8**%c,align 8
call void@sml_matchcomp_bug()
%X=load i8*,i8**@_SMLZ5Match,align 8
store i8*%X,i8**%b,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
store i8*%Y,i8**%c,align 8
%ab=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%Y,i64 8
%ae=bitcast i8*%ad to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@gT,i64 0,i32 2,i64 0),i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 16
%ag=bitcast i8*%af to i32*
store i32 3,i32*%ag,align 4
%ah=call i8*@sml_alloc(i32 inreg 60)#0
%ai=getelementptr inbounds i8,i8*%ah,i64 -4
%aj=bitcast i8*%ai to i32*
store i32 1342177336,i32*%aj,align 4
%ak=getelementptr inbounds i8,i8*%ah,i64 56
%al=bitcast i8*%ak to i32*
store i32 1,i32*%al,align 4
%am=load i8*,i8**%c,align 8
%an=bitcast i8*%ah to i8**
store i8*%am,i8**%an,align 8
call void@sml_raise(i8*inreg%ah)#1
unreachable
ao:
%ap=getelementptr inbounds i8,i8*%O,i64 16
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%b,align 8
%as=getelementptr inbounds i8,i8*%O,i64 24
%at=bitcast i8*%as to i8**
%au=load i8*,i8**%at,align 8
store i8*%au,i8**%d,align 8
store i8*null,i8**%c,align 8
%av=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%Q)
store i8*%av,i8**%c,align 8
%aw=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ax=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%aw)
store i8*%ax,i8**%b,align 8
%ay=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%ay,i8**%e,align 8
%az=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@gZ,i64 0,i32 2,i64 0))
store i8*%az,i8**%f,align 8
%aA=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@gS,i64 0,i32 2,i64 0))
store i8*%aA,i8**%g,align 8
%aB=call i8*@sml_alloc(i32 inreg 28)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177304,i32*%aD,align 4
store i8*%aB,i8**%h,align 8
%aE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 16
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aB,i64 24
%aN=bitcast i8*%aM to i32*
store i32 7,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 28)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177304,i32*%aQ,align 4
%aR=load i8*,i8**%h,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1883 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1883 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 24
%aY=bitcast i8*%aX to i32*
store i32 -2147483647,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%e,align 8
%a2=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aZ,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*null,i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 20)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177296,i32*%ba,align 4
store i8*%a8,i8**%b,align 8
%bb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a8,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
%bi=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8*(i8*,i8*)**
%bl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bk,align 8
%bm=bitcast i8*%bi to i8**
%bn=load i8*,i8**%bm,align 8
%bo=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bp=call fastcc i8*%bl(i8*inreg%bn,i8*inreg%bo)
store i8*%bp,i8**%b,align 8
%bq=call i8*@sml_alloc(i32 inreg 28)#0
%br=getelementptr inbounds i8,i8*%bq,i64 -4
%bs=bitcast i8*%br to i32*
store i32 1342177304,i32*%bs,align 4
store i8*%bq,i8**%c,align 8
%bt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bu=bitcast i8*%bq to i8**
store i8*%bt,i8**%bu,align 8
%bv=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bw=getelementptr inbounds i8,i8*%bq,i64 8
%bx=bitcast i8*%bw to i8**
store i8*%bv,i8**%bx,align 8
%by=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 16
%bA=bitcast i8*%bz to i8**
store i8*%by,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bq,i64 24
%bC=bitcast i8*%bB to i32*
store i32 7,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 28)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177304,i32*%bF,align 4
%bG=load i8*,i8**%c,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1885 to void(...)*),void(...)**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bD,i64 16
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1885 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bD,i64 24
%bN=bitcast i8*%bM to i32*
store i32 -2147483647,i32*%bN,align 4
ret i8*%bD
bO:
%bP=getelementptr inbounds i8,i8*%O,i64 16
%bQ=bitcast i8*%bP to i8**
%bR=load i8*,i8**%bQ,align 8
store i8*%bR,i8**%b,align 8
%bS=getelementptr inbounds i8,i8*%O,i64 24
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
store i8*%bU,i8**%d,align 8
store i8*null,i8**%c,align 8
%bV=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%Q)
store i8*%bV,i8**%c,align 8
%bW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bX=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%bW)
store i8*%bX,i8**%b,align 8
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
%b1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b2=bitcast i8*%bY to i8**
store i8*%b1,i8**%b2,align 8
%b3=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%b4=getelementptr inbounds i8,i8*%bY,i64 8
%b5=bitcast i8*%b4 to i8**
store i8*%b3,i8**%b5,align 8
%b6=getelementptr inbounds i8,i8*%bY,i64 16
%b7=bitcast i8*%b6 to i32*
store i32 3,i32*%b7,align 4
%b8=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1248(i8*inreg%bY)
store i8*%b8,i8**%b,align 8
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%c,align 8
%cc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cf=getelementptr inbounds i8,i8*%b9,i64 8
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b9,i64 16
%ci=bitcast i8*%ch to i32*
store i32 3,i32*%ci,align 4
%cj=call i8*@sml_alloc(i32 inreg 28)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177304,i32*%cl,align 4
%cm=load i8*,i8**%c,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%cj,i64 8
%cp=bitcast i8*%co to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1880 to void(...)*),void(...)**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cj,i64 16
%cr=bitcast i8*%cq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1880 to void(...)*),void(...)**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 24
%ct=bitcast i8*%cs to i32*
store i32 -2147483647,i32*%ct,align 4
ret i8*%cj
cu:
%cv=getelementptr inbounds i8,i8*%T,i64 8
%cw=bitcast i8*%cv to i8**
%cx=load i8*,i8**%cw,align 8
%cy=getelementptr inbounds i8,i8*%cx,i64 8
%cz=bitcast i8*%cy to i8**
%cA=load i8*,i8**%cz,align 8
store i8*%cA,i8**%d,align 8
%cB=getelementptr inbounds i8,i8*%O,i64 16
%cC=bitcast i8*%cB to i8**
%cD=load i8*,i8**%cC,align 8
store i8*%cD,i8**%e,align 8
%cE=getelementptr inbounds i8,i8*%O,i64 24
%cF=bitcast i8*%cE to i8**
%cG=load i8*,i8**%cF,align 8
store i8*%cG,i8**%f,align 8
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
store i8*%cH,i8**%g,align 8
%cK=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cN=getelementptr inbounds i8,i8*%cH,i64 8
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cH,i64 16
%cQ=bitcast i8*%cP to i32*
store i32 3,i32*%cQ,align 4
%cR=call i8*@sml_alloc(i32 inreg 28)#0
%cS=getelementptr inbounds i8,i8*%cR,i64 -4
%cT=bitcast i8*%cS to i32*
store i32 1342177304,i32*%cT,align 4
store i8*%cR,i8**%d,align 8
%cU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cV=bitcast i8*%cR to i8**
store i8*%cU,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cR,i64 8
%cX=bitcast i8*%cW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1878 to void(...)*),void(...)**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cR,i64 16
%cZ=bitcast i8*%cY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1878 to void(...)*),void(...)**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cR,i64 24
%c1=bitcast i8*%c0 to i32*
store i32 -2147483647,i32*%c1,align 4
%c2=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%c3=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%c2)
store i8*%c3,i8**%b,align 8
%c4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c5=call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1320(i8*inreg%c4)
store i8*%c5,i8**%c,align 8
%c6=call i8*@sml_alloc(i32 inreg 20)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177296,i32*%c8,align 4
%c9=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dc=getelementptr inbounds i8,i8*%c6,i64 8
%dd=bitcast i8*%dc to i8**
store i8*%db,i8**%dd,align 8
%de=getelementptr inbounds i8,i8*%c6,i64 16
%df=bitcast i8*%de to i32*
store i32 3,i32*%df,align 4
%dg=call fastcc i8*@_SMLLLN12ElaborateSQL8Fun__prodE_1248(i8*inreg%c6)
%dh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%di=call fastcc i8*@_SMLLLN12ElaborateSQL10Fun__filterE_1232(i8*inreg%dh,i8*inreg%dg)
store i8*%di,i8**%b,align 8
%dj=call i8*@sml_alloc(i32 inreg 20)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177296,i32*%dl,align 4
store i8*%dj,i8**%c,align 8
%dm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dp=getelementptr inbounds i8,i8*%dj,i64 8
%dq=bitcast i8*%dp to i8**
store i8*%do,i8**%dq,align 8
%dr=getelementptr inbounds i8,i8*%dj,i64 16
%ds=bitcast i8*%dr to i32*
store i32 3,i32*%ds,align 4
%dt=call i8*@sml_alloc(i32 inreg 28)#0
%du=getelementptr inbounds i8,i8*%dt,i64 -4
%dv=bitcast i8*%du to i32*
store i32 1342177304,i32*%dv,align 4
%dw=load i8*,i8**%c,align 8
%dx=bitcast i8*%dt to i8**
store i8*%dw,i8**%dx,align 8
%dy=getelementptr inbounds i8,i8*%dt,i64 8
%dz=bitcast i8*%dy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1879 to void(...)*),void(...)**%dz,align 8
%dA=getelementptr inbounds i8,i8*%dt,i64 16
%dB=bitcast i8*%dA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1879 to void(...)*),void(...)**%dB,align 8
%dC=getelementptr inbounds i8,i8*%dt,i64 24
%dD=bitcast i8*%dC to i32*
store i32 -2147483647,i32*%dD,align 4
ret i8*%dt
dE:
%dF=getelementptr inbounds i8,i8*%q,i64 8
%dG=bitcast i8*%dF to i8**
%dH=load i8*,i8**%dG,align 8
%dI=bitcast i8*%dH to i8**
%dJ=load i8*,i8**%dI,align 8
%dK=getelementptr inbounds i8,i8*%dH,i64 8
%dL=bitcast i8*%dK to i8**
%dM=load i8*,i8**%dL,align 8
store i8*%dM,i8**%b,align 8
%dN=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%dJ)
%dO=getelementptr inbounds i8,i8*%dN,i64 16
%dP=bitcast i8*%dO to i8*(i8*,i8*)**
%dQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dP,align 8
%dR=bitcast i8*%dN to i8**
%dS=load i8*,i8**%dR,align 8
%dT=call fastcc i8*%dQ(i8*inreg%dS,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
%dU=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gQ,i64 0,i32 2)to i8*),i8*inreg%dT)
store i8*%dU,i8**%c,align 8
%dV=call i8*@sml_alloc(i32 inreg 20)#0
%dW=getelementptr inbounds i8,i8*%dV,i64 -4
%dX=bitcast i8*%dW to i32*
store i32 1342177296,i32*%dX,align 4
store i8*%dV,i8**%d,align 8
%dY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dZ=bitcast i8*%dV to i8**
store i8*%dY,i8**%dZ,align 8
%d0=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%d1=getelementptr inbounds i8,i8*%dV,i64 8
%d2=bitcast i8*%d1 to i8**
store i8*%d0,i8**%d2,align 8
%d3=getelementptr inbounds i8,i8*%dV,i64 16
%d4=bitcast i8*%d3 to i32*
store i32 3,i32*%d4,align 4
%d5=call i8*@sml_alloc(i32 inreg 28)#0
%d6=getelementptr inbounds i8,i8*%d5,i64 -4
%d7=bitcast i8*%d6 to i32*
store i32 1342177304,i32*%d7,align 4
%d8=load i8*,i8**%d,align 8
%d9=bitcast i8*%d5 to i8**
store i8*%d8,i8**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d5,i64 8
%eb=bitcast i8*%ea to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1872 to void(...)*),void(...)**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d5,i64 16
%ed=bitcast i8*%ec to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1872 to void(...)*),void(...)**%ed,align 8
%ee=getelementptr inbounds i8,i8*%d5,i64 24
%ef=bitcast i8*%ee to i32*
store i32 -2147483647,i32*%ef,align 4
ret i8*%d5
eg:
store i8*null,i8**%b,align 8
%eh=getelementptr inbounds i8,i8*%q,i64 8
%ei=bitcast i8*%eh to i8***
%ej=load i8**,i8***%ei,align 8
%ek=load i8*,i8**%ej,align 8
br label%i
el:
%em=getelementptr inbounds i8,i8*%q,i64 8
%en=bitcast i8*%em to i8***
%eo=load i8**,i8***%en,align 8
%ep=load i8*,i8**%eo,align 8
%eq=getelementptr inbounds i8,i8*%ep,i64 16
%er=bitcast i8*%eq to i8**
%es=load i8*,i8**%er,align 8
store i8*%es,i8**%b,align 8
%et=bitcast i8*%ep to i8**
%eu=load i8*,i8**%et,align 8
%ev=getelementptr inbounds i8,i8*%ep,i64 8
%ew=bitcast i8*%ev to i8**
%ex=load i8*,i8**%ew,align 8
store i8*%ex,i8**%c,align 8
store i8*%es,i8**%d,align 8
%ey=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%eu)
%ez=getelementptr inbounds i8,i8*%ey,i64 16
%eA=bitcast i8*%ez to i8*(i8*,i8*)**
%eB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eA,align 8
%eC=bitcast i8*%ey to i8**
%eD=load i8*,i8**%eC,align 8
%eE=call fastcc i8*%eB(i8*inreg%eD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*))
store i8*%eE,i8**%e,align 8
%eF=call i8*@sml_alloc(i32 inreg 28)#0
%eG=getelementptr inbounds i8,i8*%eF,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 1342177304,i32*%eH,align 4
store i8*%eF,i8**%f,align 8
%eI=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eJ=bitcast i8*%eF to i8**
store i8*%eI,i8**%eJ,align 8
%eK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eL=getelementptr inbounds i8,i8*%eF,i64 8
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eO=getelementptr inbounds i8,i8*%eF,i64 16
%eP=bitcast i8*%eO to i8**
store i8*%eN,i8**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eF,i64 24
%eR=bitcast i8*%eQ to i32*
store i32 7,i32*%eR,align 4
%eS=call i8*@sml_alloc(i32 inreg 28)#0
%eT=getelementptr inbounds i8,i8*%eS,i64 -4
%eU=bitcast i8*%eT to i32*
store i32 1342177304,i32*%eU,align 4
%eV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eW=bitcast i8*%eS to i8**
store i8*%eV,i8**%eW,align 8
%eX=getelementptr inbounds i8,i8*%eS,i64 8
%eY=bitcast i8*%eX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1866 to void(...)*),void(...)**%eY,align 8
%eZ=getelementptr inbounds i8,i8*%eS,i64 16
%e0=bitcast i8*%eZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1866 to void(...)*),void(...)**%e0,align 8
%e1=getelementptr inbounds i8,i8*%eS,i64 24
%e2=bitcast i8*%e1 to i32*
store i32 -2147483647,i32*%e2,align 4
%e3=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gP,i64 0,i32 2)to i8*),i8*inreg%eS)
store i8*%e3,i8**%c,align 8
%e4=call i8*@sml_alloc(i32 inreg 20)#0
%e5=getelementptr inbounds i8,i8*%e4,i64 -4
%e6=bitcast i8*%e5 to i32*
store i32 1342177296,i32*%e6,align 4
store i8*%e4,i8**%d,align 8
%e7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%e8=bitcast i8*%e4 to i8**
store i8*%e7,i8**%e8,align 8
%e9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fa=getelementptr inbounds i8,i8*%e4,i64 8
%fb=bitcast i8*%fa to i8**
store i8*%e9,i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e4,i64 16
%fd=bitcast i8*%fc to i32*
store i32 3,i32*%fd,align 4
%fe=call i8*@sml_alloc(i32 inreg 28)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177304,i32*%fg,align 4
%fh=load i8*,i8**%d,align 8
%fi=bitcast i8*%fe to i8**
store i8*%fh,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fe,i64 8
%fk=bitcast i8*%fj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1867 to void(...)*),void(...)**%fk,align 8
%fl=getelementptr inbounds i8,i8*%fe,i64 16
%fm=bitcast i8*%fl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10tableToToyE_1867 to void(...)*),void(...)**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fe,i64 24
%fo=bitcast i8*%fn to i32*
store i32 -2147483647,i32*%fo,align 4
ret i8*%fe
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2089(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bD,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=bitcast i8**%d to i8***
%F=load i8**,i8***%E,align 8
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=getelementptr inbounds i8,i8*%H,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
%M=bitcast i8*%H to i32*
store i32 25,i32*%M,align 4
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=getelementptr inbounds i8,i8*%H,i64 8
%P=bitcast i8*%O to i8**
store i8*%N,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 16
%R=bitcast i8*%Q to i32*
store i32 2,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%g,align 8
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i8**
store i8*null,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%S,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
store i8*%ab,i8**%d,align 8
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 16
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ab,i64 24
%an=bitcast i8*%am to i32*
store i32 7,i32*%an,align 4
%ao=call i8*@sml_alloc(i32 inreg 20)#0
%ap=getelementptr inbounds i8,i8*%ao,i64 -4
%aq=bitcast i8*%ap to i32*
store i32 1342177296,i32*%aq,align 4
%ar=bitcast i8*%ao to i64*
store i64 0,i64*%ar,align 4
%as=load i8*,i8**%d,align 8
%at=getelementptr inbounds i8,i8*%ao,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ao,i64 16
%aw=bitcast i8*%av to i32*
store i32 2,i32*%aw,align 4
ret i8*%ao
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2090(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2092(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 16
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*null,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%K,i64 24
%W=bitcast i8*%V to i32*
store i32 7,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=bitcast i8*%X to i32*
%Z=getelementptr inbounds i8,i8*%X,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%X,i64 4
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
store i32 20,i32*%Y,align 4
%ad=load i8*,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2093(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%e,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2094(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2095(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%e,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2096(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2097(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%e,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2098(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2099(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%e,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2100(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2101(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%e,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%d,align 8
%k=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 2,i32*%s,align 4
%x=load i8*,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2102(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2104(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2106(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2109(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2110(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2111(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2112(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2113(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2114(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2117(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@g6,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2120(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2123(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@g6,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2126(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2129(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hc,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2132(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2135(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hc,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2138(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2141(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hi,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2144(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2147(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hi,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2150(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2153(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ho,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2156(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2159(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@ho,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2162(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2163(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2165(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2166(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2169(i8 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=icmp eq i8%a,39
br i1%f,label%j,label%g
g:
%h=tail call fastcc i8@_SMLFN4Char7toUpperE(i8 inreg%a)
%i=tail call fastcc i8*@_SMLFN6String3strE(i8 inreg%h)
ret i8*%i
j:
ret i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i64 0,i32 2,i64 0)
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2171(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2172(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2175(i8 inreg%a)#2 gc"smlsharp"{
%b=load atomic i32,i32*@sml_check_flag unordered,align 4
%c=icmp eq i32%b,0
br i1%c,label%e,label%d
d:
tail call void@sml_check(i32 inreg%b)
br label%e
e:
%f=icmp eq i8%a,39
br i1%f,label%j,label%g
g:
%h=tail call fastcc i8@_SMLFN4Char7toUpperE(i8 inreg%a)
%i=tail call fastcc i8*@_SMLFN6String3strE(i8 inreg%h)
ret i8*%i
j:
ret i8*getelementptr inbounds(<{[4x i8],i32,[1x i8]}>,<{[4x i8],i32,[1x i8]}>*@jK,i64 0,i32 2,i64 0)
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2177(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2178(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2181(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@hw,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2183(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2184(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2185(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2187(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2188(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2189(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2190(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLL4keys_2193(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%l)
store i8*%p,i8**%c,align 8
%q=load i8*,i8**%b,align 8
%r=icmp eq i8*%q,null
br i1%r,label%y,label%s
s:
store i8*null,i8**%b,align 8
%t=bitcast i8*%q to i32*
%u=load i32,i32*%t,align 4
%v=icmp eq i32%u,0
%w=select i1%v,i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hz,i64 0,i32 2)to i8*),i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hA,i64 0,i32 2)to i8*)
%x=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%w)
br label%y
y:
%z=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%h],[%x,%s]
store i8*%z,i8**%b,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
%D=load i8*,i8**%c,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%b,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2195(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2196(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2197(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2198(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%k)
store i8*%m,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2197 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2197 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2200(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2201(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2202(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2201 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2201 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2204(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2205(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2206(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2207(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2206 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2206 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2208(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2209(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2208 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2208 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2210(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2211(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2212(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%b,%l]
store i8*null,i8**%c,align 8
%m=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%k)
store i8*%m,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%e,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2211 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2211 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
ret i8*%A
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2213(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2216(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2217(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2216 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2216 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2218(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2221(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%o)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2223(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2224(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2225(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2224 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2224 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2226(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%m)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
store i8*%y,i8**%c,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2223 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2223 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%d,align 8
%M=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%b,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
store i8*%aj,i8**%b,align 8
%ak=call i8*@sml_alloc(i32 inreg 12)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177288,i32*%am,align 4
store i8*%ak,i8**%c,align 8
%an=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
%au=load i8*,i8**%c,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2225 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2225 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
ret i8*%ar
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2228(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2229(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2230(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2231(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2232(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%e,label%g
e:
%f=bitcast i8*%a to i8**
br label%j
g:
call void@sml_check(i32 inreg%c)
%h=bitcast i8**%b to i8***
%i=load i8**,i8***%h,align 8
br label%j
j:
%k=phi i8**[%i,%g],[%f,%e]
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%n=getelementptr inbounds i8,i8*%m,i64 16
%o=bitcast i8*%n to i8*(i8*,i8*)**
%p=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o,align 8
%q=bitcast i8*%m to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*%p(i8*inreg%r,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gW,i64 0,i32 2)to i8*))
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%z=call fastcc i8*%v(i8*inreg%x,i8*inreg%y)
store i8*%z,i8**%b,align 8
%A=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%B=getelementptr inbounds i8,i8*%A,i64 16
%C=bitcast i8*%B to i8*(i8*,i8*)**
%D=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%C,align 8
%E=bitcast i8*%A to i8**
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*%D(i8*inreg%F,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*%J(i8*inreg%L,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%b,align 8
%T=tail call fastcc i8*%P(i8*inreg%R,i8*inreg%S)
ret i8*%T
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2234(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2235(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2236(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2237(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2238(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%l
i:
call void@sml_check(i32 inreg%e)
%j=bitcast i8**%d to i8***
%k=load i8**,i8***%j,align 8
br label%l
l:
%m=phi i8**[%k,%i],[%h,%g]
store i8*null,i8**%d,align 8
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%n)
%p=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%o)
%q=getelementptr inbounds i8,i8*%p,i64 16
%r=bitcast i8*%q to i8*(i8*,i8*)**
%s=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%r,align 8
%t=bitcast i8*%p to i8**
%u=load i8*,i8**%t,align 8
%v=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%w=call fastcc i8*%s(i8*inreg%u,i8*inreg%v)
store i8*%w,i8**%c,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%d,align 8
%A=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*null,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 20)#0
%H=bitcast i8*%G to i32*
%I=getelementptr inbounds i8,i8*%G,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%G,i64 4
%L=bitcast i8*%K to i32*
store i32 0,i32*%L,align 1
store i32 2,i32*%H,align 4
%M=load i8*,i8**%d,align 8
%N=getelementptr inbounds i8,i8*%G,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%G,i64 16
%Q=bitcast i8*%P to i32*
store i32 2,i32*%Q,align 4
ret i8*%G
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2239(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=call i8*@sml_alloc(i32 inreg 12)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177288,i32*%g,align 4
store i8*%e,i8**%c,align 8
%h=load i8*,i8**%b,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i32*
store i32 1,i32*%k,align 4
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%d,align 8
%o=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2238 to void(...)*),void(...)**%r,align 8
%s=getelementptr inbounds i8,i8*%l,i64 16
%t=bitcast i8*%s to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2238 to void(...)*),void(...)**%t,align 8
%u=getelementptr inbounds i8,i8*%l,i64 24
%v=bitcast i8*%u to i32*
store i32 -2147483647,i32*%v,align 4
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLL11fieldToTerm_2241(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bD,i64 0,i32 2)to i8*))
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
%q=load i8*,i8**%c,align 8
%r=call fastcc i8*%n(i8*inreg%p,i8*inreg%q)
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=getelementptr inbounds i8,i8*%s,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
%x=bitcast i8*%s to i32*
store i32 25,i32*%x,align 4
%y=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%z=getelementptr inbounds i8,i8*%s,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 16
%C=bitcast i8*%B to i32*
store i32 2,i32*%C,align 4
%D=bitcast i8**%d to i8***
%E=load i8**,i8***%D,align 8
store i8*null,i8**%d,align 8
%F=load i8*,i8**%E,align 8
%G=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%F)
%H=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg%G)
%I=getelementptr inbounds i8,i8*%H,i64 16
%J=bitcast i8*%I to i8*(i8*,i8*)**
%K=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%J,align 8
%L=bitcast i8*%H to i8**
%M=load i8*,i8**%L,align 8
%N=load i8*,i8**%c,align 8
%O=call fastcc i8*%K(i8*inreg%M,i8*inreg%N)
store i8*%O,i8**%d,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
store i8*%P,i8**%e,align 8
%S=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%T=bitcast i8*%P to i8**
store i8*%S,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*null,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
store i8*%Y,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%Y,i64 4
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
%ad=bitcast i8*%Y to i32*
store i32 25,i32*%ad,align 4
%ae=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Y,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i32*
store i32 2,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%e,align 8
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i8**
store i8*null,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 16
%ar=bitcast i8*%aq to i32*
store i32 3,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 28)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177304,i32*%au,align 4
store i8*%as,i8**%d,align 8
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aB=getelementptr inbounds i8,i8*%as,i64 16
%aC=bitcast i8*%aB to i8**
store i8*%aA,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%as,i64 24
%aE=bitcast i8*%aD to i32*
store i32 7,i32*%aE,align 4
%aF=call i8*@sml_alloc(i32 inreg 20)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177296,i32*%aH,align 4
%aI=bitcast i8*%aF to i64*
store i64 0,i64*%aI,align 4
%aJ=load i8*,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aF,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aF,i64 16
%aN=bitcast i8*%aM to i32*
store i32 2,i32*%aN,align 4
ret i8*%aF
}
define internal fastcc i8*@_SMLLL11fieldToTerm_2242(i8*inreg%a)#2 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%g,label%f
f:
call void@sml_check(i32 inreg%d)
br label%g
g:
%h=call i8*@sml_alloc(i32 inreg 12)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177288,i32*%j,align 4
store i8*%h,i8**%c,align 8
%k=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i32*
store i32 1,i32*%n,align 4
%o=call i8*@sml_alloc(i32 inreg 28)#0
%p=getelementptr inbounds i8,i8*%o,i64 -4
%q=bitcast i8*%p to i32*
store i32 1342177304,i32*%q,align 4
store i8*%o,i8**%b,align 8
%r=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%s=bitcast i8*%o to i8**
store i8*%r,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%o,i64 8
%u=bitcast i8*%t to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11fieldToTerm_2241 to void(...)*),void(...)**%u,align 8
%v=getelementptr inbounds i8,i8*%o,i64 16
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL11fieldToTerm_2241 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%o,i64 24
%y=bitcast i8*%x to i32*
store i32 -2147483647,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%z)
store i8*%I,i8**%b,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
%M=load i8*,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eK,i64 0,i32 2)to i8*),i8*inreg%J)
ret i8*%S
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2244(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2245(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2246(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2247(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%m,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%j],[%a,%o]
%p=phi i8*[%k,%j],[%b,%o]
%q=getelementptr inbounds i8,i8*%n,i64 16
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%p)
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%g,align 8
%C=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to i8**
store i8*null,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
%I=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%e,align 8
%O=call i8*@sml_alloc(i32 inreg 12)#0
%P=getelementptr inbounds i8,i8*%O,i64 -4
%Q=bitcast i8*%P to i32*
store i32 1342177288,i32*%Q,align 4
store i8*%O,i8**%f,align 8
%R=load i8*,i8**%c,align 8
%S=bitcast i8*%O to i8**
store i8*%R,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 28)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177304,i32*%X,align 4
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2246 to void(...)*),void(...)**%ab,align 8
%ac=getelementptr inbounds i8,i8*%V,i64 16
%ad=bitcast i8*%ac to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2246 to void(...)*),void(...)**%ad,align 8
%ae=getelementptr inbounds i8,i8*%V,i64 24
%af=bitcast i8*%ae to i32*
store i32 -2147483647,i32*%af,align 4
%ag=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ah=call fastcc i8*%L(i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8*(i8*,i8*)**
%ak=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aj,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
%an=bitcast i8**%d to i8***
%ao=load i8**,i8***%an,align 8
%ap=load i8*,i8**%ao,align 8
%aq=call fastcc i8*%ak(i8*inreg%am,i8*inreg%ap)
store i8*%aq,i8**%e,align 8
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=bitcast i8*%ar to i64*
store i64 0,i64*%au,align 4
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=load i8*,i8**%c,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%ar,i64 24
%aC=bitcast i8*%aB to i32*
store i32 6,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
store i8*%aD,i8**%e,align 8
%aG=getelementptr inbounds i8,i8*%aD,i64 4
%aH=bitcast i8*%aG to i32*
store i32 0,i32*%aH,align 1
%aI=bitcast i8*%aD to i32*
store i32 4,i32*%aI,align 4
%aJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aK=getelementptr inbounds i8,i8*%aD,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i32*
store i32 2,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
store i8*%aO,i8**%f,align 8
%aR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to i8**
store i8*null,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=load i8*,i8**%d,align 8
%aY=getelementptr inbounds i8,i8*%aX,i64 8
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
store i8*null,i8**%d,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
%a6=load i8*,i8**%c,align 8
%a7=call fastcc i8*%a3(i8*inreg%a5,i8*inreg%a6)
store i8*%a7,i8**%d,align 8
%a8=call i8*@sml_alloc(i32 inreg 28)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177304,i32*%ba,align 4
store i8*%a8,i8**%e,align 8
%bb=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bc=bitcast i8*%a8 to i8**
store i8*%bb,i8**%bc,align 8
%bd=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%be=getelementptr inbounds i8,i8*%a8,i64 8
%bf=bitcast i8*%be to i8**
store i8*%bd,i8**%bf,align 8
%bg=load i8*,i8**%c,align 8
%bh=getelementptr inbounds i8,i8*%a8,i64 16
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%a8,i64 24
%bk=bitcast i8*%bj to i32*
store i32 7,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%f,align 8
%bo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i8**
store i8*null,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 36)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177312,i32*%bw,align 4
store i8*%bu,i8**%d,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 20
%by=bitcast i8*%bx to i32*
store i32 0,i32*%by,align 1
%bz=bitcast i8*%bu to i8**
%bA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
store i8*%bA,i8**%bz,align 8
%bB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bu,i64 16
%bF=bitcast i8*%bE to i32*
store i32 2,i32*%bF,align 4
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=getelementptr inbounds i8,i8*%bu,i64 24
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bu,i64 32
%bK=bitcast i8*%bJ to i32*
store i32 11,i32*%bK,align 4
%bL=call i8*@sml_alloc(i32 inreg 20)#0
%bM=bitcast i8*%bL to i32*
%bN=getelementptr inbounds i8,i8*%bL,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
%bP=getelementptr inbounds i8,i8*%bL,i64 4
%bQ=bitcast i8*%bP to i32*
store i32 0,i32*%bQ,align 1
store i32 1,i32*%bM,align 4
%bR=load i8*,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bL,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bL,i64 16
%bV=bitcast i8*%bU to i32*
store i32 2,i32*%bV,align 4
ret i8*%bL
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2248(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%b,i8**%c,align 8
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%d,align 8
%i=getelementptr inbounds i8,i8*%a,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%e,align 8
%l=call i8*@sml_alloc(i32 inreg 28)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177304,i32*%n,align 4
store i8*%l,i8**%f,align 8
%o=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%r=getelementptr inbounds i8,i8*%l,i64 8
%s=bitcast i8*%r to i8**
store i8*%q,i8**%s,align 8
%t=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%l,i64 16
%v=bitcast i8*%u to i8**
store i8*%t,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%l,i64 24
%x=bitcast i8*%w to i32*
store i32 7,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
%B=load i8*,i8**%f,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2247 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2247 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2249(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%c,align 8
%f=call i8*@sml_alloc(i32 inreg 20)#0
%g=bitcast i8*%f to i32*
%h=getelementptr inbounds i8,i8*%f,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
%j=getelementptr inbounds i8,i8*%f,i64 4
%k=bitcast i8*%j to i32*
store i32 0,i32*%k,align 1
store i32 25,i32*%g,align 4
%l=load i8*,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%f,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%f,i64 16
%p=bitcast i8*%o to i32*
store i32 2,i32*%p,align 4
ret i8*%f
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2250(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2251(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2252(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2253(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%o)
store i8*%p,i8**%c,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=load i8*,i8**%c,align 8
%w=getelementptr inbounds i8,i8*%q,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
ret i8*%q
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2255(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2256(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2257(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2256 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2256 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2258(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%m)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 12)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177288,i32*%t,align 4
store i8*%r,i8**%d,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i32*
store i32 1,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 28)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177304,i32*%A,align 4
store i8*%y,i8**%c,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2255 to void(...)*),void(...)**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2255 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%y,i64 24
%I=bitcast i8*%H to i32*
store i32 -2147483647,i32*%I,align 4
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%d,align 8
%M=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%b,align 8
%V=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
store i8*%aj,i8**%b,align 8
%ak=call i8*@sml_alloc(i32 inreg 12)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177288,i32*%am,align 4
store i8*%ak,i8**%c,align 8
%an=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
%au=load i8*,i8**%c,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2257 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2257 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
ret i8*%ar
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2260(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2261(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2262(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2263(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2264(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e8,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2265(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fc,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2266(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fg,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2267(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2269(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLL5table_2270(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2271(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2272(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=getelementptr inbounds i8,i8*%h,i64 4
%l=bitcast i8*%k to i32*
store i32 0,i32*%l,align 1
%m=bitcast i8*%h to i32*
store i32 3,i32*%m,align 4
%n=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o=getelementptr inbounds i8,i8*%h,i64 8
%p=bitcast i8*%o to i8**
store i8*%n,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%h,i64 16
%r=bitcast i8*%q to i32*
store i32 2,i32*%r,align 4
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%d,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32 2,i32*%D,align 4
%I=load i8*,i8**%d,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2273(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2274(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2275(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2276(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2277(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL17insertValueToTermE_2280(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL17insertValueToTermE_2281(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
store i8*null,i8**%d,align 8
%i=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eG,i64 0,i32 2)to i8*),i8*inreg null)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=bitcast i8**%c to i8***
%p=load i8**,i8***%o,align 8
%q=load i8*,i8**%p,align 8
%r=tail call fastcc i8*%l(i8*inreg%n,i8*inreg%q)
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12havingToTermE_2282(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13groupByToTermE_2283(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=getelementptr inbounds i8,i8*%j,i64 8
%m=bitcast i8*%l to i8**
%n=load i8*,i8**%m,align 8
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%j to i8**
%u=load i8*,i8**%t,align 8
%v=tail call fastcc i8*%q(i8*inreg%s,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
br label%k
k:
%l=phi i8*[%Mb,%L8],[%a,%m]
store i8*%l,i8**%b,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%r,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%b,align 8
br label%r
r:
%s=phi i8*[%q,%p],[%l,%k]
%t=bitcast i8*%s to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 16,label%akc
i32 8,label%ajE
i32 6,label%abU
i32 17,label%abu
i32 3,label%aax
i32 4,label%Y1
i32 19,label%SY
i32 20,label%RC
i32 0,label%Rb
i32 27,label%L1
i32 1,label%KA
i32 28,label%J9
i32 9,label%Ju
i32 10,label%IP
i32 30,label%Ia
i32 11,label%GY
i32 21,label%Fy
i32 18,label%zh
i32 15,label%vO
i32 25,label%t1
i32 22,label%qg
i32 23,label%p1
i32 13,label%ng
i32 12,label%k8
i32 14,label%hs
i32 29,label%ec
i32 7,label%bV
i32 2,label%bz
i32 5,label%bd
i32 24,label%aR
i32 26,label%N
]
v:
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%b,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%c,align 8
%A=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%c,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%s,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%b,align 8
%W=getelementptr inbounds i8,i8*%Q,i64 16
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%c,align 8
%Z=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%S)
store i8*%Z,i8**%d,align 8
%aa=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%aa)
store i8*%ab,i8**%b,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%e,align 8
%af=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*null,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 20)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177296,i32*%an,align 4
%ao=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%al,i64 8
%as=bitcast i8*%ar to i8**
store i8*%aq,i8**%as,align 8
%at=getelementptr inbounds i8,i8*%al,i64 16
%au=bitcast i8*%at to i32*
store i32 3,i32*%au,align 4
%av=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fl,i64 0,i32 2)to i8*),i8*inreg%al)
store i8*%av,i8**%b,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%d,align 8
%az=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%d,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2267 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2267 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
ret i8*%aG
aR:
%aS=getelementptr inbounds i8,i8*%s,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
store i8*%aU,i8**%b,align 8
%aV=call i8*@sml_alloc(i32 inreg 12)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177288,i32*%aX,align 4
store i8*%aV,i8**%c,align 8
%aY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aV,i64 8
%a1=bitcast i8*%a0 to i32*
store i32 1,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 28)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177304,i32*%a4,align 4
%a5=load i8*,i8**%c,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2266 to void(...)*),void(...)**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2266 to void(...)*),void(...)**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 24
%bc=bitcast i8*%bb to i32*
store i32 -2147483647,i32*%bc,align 4
ret i8*%a2
bd:
%be=getelementptr inbounds i8,i8*%s,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
store i8*%bg,i8**%b,align 8
%bh=call i8*@sml_alloc(i32 inreg 12)#0
%bi=getelementptr inbounds i8,i8*%bh,i64 -4
%bj=bitcast i8*%bi to i32*
store i32 1342177288,i32*%bj,align 4
store i8*%bh,i8**%c,align 8
%bk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bl=bitcast i8*%bh to i8**
store i8*%bk,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bh,i64 8
%bn=bitcast i8*%bm to i32*
store i32 1,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 28)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177304,i32*%bq,align 4
%br=load i8*,i8**%c,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bo,i64 8
%bu=bitcast i8*%bt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2265 to void(...)*),void(...)**%bu,align 8
%bv=getelementptr inbounds i8,i8*%bo,i64 16
%bw=bitcast i8*%bv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2265 to void(...)*),void(...)**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bo,i64 24
%by=bitcast i8*%bx to i32*
store i32 -2147483647,i32*%by,align 4
ret i8*%bo
bz:
%bA=getelementptr inbounds i8,i8*%s,i64 8
%bB=bitcast i8*%bA to i8**
%bC=load i8*,i8**%bB,align 8
store i8*%bC,i8**%b,align 8
%bD=call i8*@sml_alloc(i32 inreg 12)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177288,i32*%bF,align 4
store i8*%bD,i8**%c,align 8
%bG=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to i32*
store i32 1,i32*%bJ,align 4
%bK=call i8*@sml_alloc(i32 inreg 28)#0
%bL=getelementptr inbounds i8,i8*%bK,i64 -4
%bM=bitcast i8*%bL to i32*
store i32 1342177304,i32*%bM,align 4
%bN=load i8*,i8**%c,align 8
%bO=bitcast i8*%bK to i8**
store i8*%bN,i8**%bO,align 8
%bP=getelementptr inbounds i8,i8*%bK,i64 8
%bQ=bitcast i8*%bP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2264 to void(...)*),void(...)**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bK,i64 16
%bS=bitcast i8*%bR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2264 to void(...)*),void(...)**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bK,i64 24
%bU=bitcast i8*%bT to i32*
store i32 -2147483647,i32*%bU,align 4
ret i8*%bK
bV:
%bW=getelementptr inbounds i8,i8*%s,i64 8
%bX=bitcast i8*%bW to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=bitcast i8*%bY to i8**
%b0=load i8*,i8**%bZ,align 8
store i8*%b0,i8**%b,align 8
%b1=getelementptr inbounds i8,i8*%bY,i64 8
%b2=bitcast i8*%b1 to i8**
%b3=load i8*,i8**%b2,align 8
%b4=getelementptr inbounds i8,i8*%bY,i64 16
%b5=bitcast i8*%b4 to i8**
%b6=load i8*,i8**%b5,align 8
store i8*%b6,i8**%c,align 8
%b7=bitcast i8*%b3 to i8**
%b8=load i8*,i8**%b7,align 8
%b9=getelementptr inbounds i8,i8*%b3,i64 8
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
store i8*%cb,i8**%d,align 8
%cc=getelementptr inbounds i8,i8*%b3,i64 16
%cd=bitcast i8*%cc to i8**
%ce=load i8*,i8**%cd,align 8
store i8*%ce,i8**%e,align 8
%cf=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%b8)
store i8*%cf,i8**%f,align 8
%cg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ch=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%cg)
store i8*%ch,i8**%d,align 8
%ci=call i8*@sml_alloc(i32 inreg 12)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177288,i32*%ck,align 4
store i8*%ci,i8**%g,align 8
%cl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=getelementptr inbounds i8,i8*%ci,i64 8
%co=bitcast i8*%cn to i32*
store i32 1,i32*%co,align 4
%cp=call i8*@sml_alloc(i32 inreg 28)#0
%cq=getelementptr inbounds i8,i8*%cp,i64 -4
%cr=bitcast i8*%cq to i32*
store i32 1342177304,i32*%cr,align 4
store i8*%cp,i8**%d,align 8
%cs=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ct=bitcast i8*%cp to i8**
store i8*%cs,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cp,i64 8
%cv=bitcast i8*%cu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2261 to void(...)*),void(...)**%cv,align 8
%cw=getelementptr inbounds i8,i8*%cp,i64 16
%cx=bitcast i8*%cw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2261 to void(...)*),void(...)**%cx,align 8
%cy=getelementptr inbounds i8,i8*%cp,i64 24
%cz=bitcast i8*%cy to i32*
store i32 -2147483647,i32*%cz,align 4
%cA=call i8*@sml_alloc(i32 inreg 20)#0
%cB=getelementptr inbounds i8,i8*%cA,i64 -4
%cC=bitcast i8*%cB to i32*
store i32 1342177296,i32*%cC,align 4
store i8*%cA,i8**%g,align 8
%cD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cE=bitcast i8*%cA to i8**
store i8*%cD,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cA,i64 8
%cG=bitcast i8*%cF to i8**
store i8*null,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cA,i64 16
%cI=bitcast i8*%cH to i32*
store i32 3,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
%cM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cN=bitcast i8*%cJ to i8**
store i8*%cM,i8**%cN,align 8
%cO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cP=getelementptr inbounds i8,i8*%cJ,i64 8
%cQ=bitcast i8*%cP to i8**
store i8*%cO,i8**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cJ,i64 16
%cS=bitcast i8*%cR to i32*
store i32 3,i32*%cS,align 4
%cT=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%cJ)
store i8*%cT,i8**%d,align 8
%cU=call i8*@sml_alloc(i32 inreg 20)#0
%cV=getelementptr inbounds i8,i8*%cU,i64 -4
%cW=bitcast i8*%cV to i32*
store i32 1342177296,i32*%cW,align 4
store i8*%cU,i8**%f,align 8
%cX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cY=bitcast i8*%cU to i8**
store i8*%cX,i8**%cY,align 8
%cZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%c0=getelementptr inbounds i8,i8*%cU,i64 8
%c1=bitcast i8*%c0 to i8**
store i8*%cZ,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cU,i64 16
%c3=bitcast i8*%c2 to i32*
store i32 3,i32*%c3,align 4
%c4=call i8*@sml_alloc(i32 inreg 28)#0
%c5=getelementptr inbounds i8,i8*%c4,i64 -4
%c6=bitcast i8*%c5 to i32*
store i32 1342177304,i32*%c6,align 4
store i8*%c4,i8**%d,align 8
%c7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c8=bitcast i8*%c4 to i8**
store i8*%c7,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%c4,i64 8
%da=bitcast i8*%c9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2262 to void(...)*),void(...)**%da,align 8
%db=getelementptr inbounds i8,i8*%c4,i64 16
%dc=bitcast i8*%db to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2262 to void(...)*),void(...)**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c4,i64 24
%de=bitcast i8*%dd to i32*
store i32 -2147483647,i32*%de,align 4
%df=load i8*,i8**%c,align 8
%dg=icmp eq i8*%df,null
br i1%dg,label%dv,label%dh
dh:
store i8*null,i8**%c,align 8
%di=bitcast i8*%df to i8**
%dj=load i8*,i8**%di,align 8
%dk=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%dj)
store i8*%dk,i8**%c,align 8
%dl=call i8*@sml_alloc(i32 inreg 20)#0
%dm=getelementptr inbounds i8,i8*%dl,i64 -4
%dn=bitcast i8*%dm to i32*
store i32 1342177296,i32*%dn,align 4
%do=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dp=bitcast i8*%dl to i8**
store i8*%do,i8**%dp,align 8
%dq=getelementptr inbounds i8,i8*%dl,i64 8
%dr=bitcast i8*%dq to i8**
store i8*null,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dl,i64 16
%dt=bitcast i8*%ds to i32*
store i32 3,i32*%dt,align 4
%du=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%dl)
br label%dv
dv:
%dw=phi i8*[%du,%dh],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%bV]
store i8*%dw,i8**%c,align 8
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=getelementptr inbounds i8,i8*%dx,i64 -4
%dz=bitcast i8*%dy to i32*
store i32 1342177296,i32*%dz,align 4
store i8*%dx,i8**%e,align 8
%dA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dB=bitcast i8*%dx to i8**
store i8*%dA,i8**%dB,align 8
%dC=getelementptr inbounds i8,i8*%dx,i64 8
%dD=bitcast i8*%dC to i8**
store i8*null,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dx,i64 16
%dF=bitcast i8*%dE to i32*
store i32 3,i32*%dF,align 4
%dG=call i8*@sml_alloc(i32 inreg 20)#0
%dH=getelementptr inbounds i8,i8*%dG,i64 -4
%dI=bitcast i8*%dH to i32*
store i32 1342177296,i32*%dI,align 4
%dJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dK=bitcast i8*%dG to i8**
store i8*%dJ,i8**%dK,align 8
%dL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dM=getelementptr inbounds i8,i8*%dG,i64 8
%dN=bitcast i8*%dM to i8**
store i8*%dL,i8**%dN,align 8
%dO=getelementptr inbounds i8,i8*%dG,i64 16
%dP=bitcast i8*%dO to i32*
store i32 3,i32*%dP,align 4
%dQ=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e4,i64 0,i32 2)to i8*),i8*inreg%dG)
store i8*%dQ,i8**%c,align 8
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177296,i32*%dT,align 4
store i8*%dR,i8**%d,align 8
%dU=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dV=bitcast i8*%dR to i8**
store i8*%dU,i8**%dV,align 8
%dW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dX=getelementptr inbounds i8,i8*%dR,i64 8
%dY=bitcast i8*%dX to i8**
store i8*%dW,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dR,i64 16
%d0=bitcast i8*%dZ to i32*
store i32 3,i32*%d0,align 4
%d1=call i8*@sml_alloc(i32 inreg 28)#0
%d2=getelementptr inbounds i8,i8*%d1,i64 -4
%d3=bitcast i8*%d2 to i32*
store i32 1342177304,i32*%d3,align 4
%d4=load i8*,i8**%d,align 8
%d5=bitcast i8*%d1 to i8**
store i8*%d4,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%d1,i64 8
%d7=bitcast i8*%d6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2263 to void(...)*),void(...)**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d1,i64 16
%d9=bitcast i8*%d8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2263 to void(...)*),void(...)**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d1,i64 24
%eb=bitcast i8*%ea to i32*
store i32 -2147483647,i32*%eb,align 4
ret i8*%d1
ec:
%ed=getelementptr inbounds i8,i8*%s,i64 8
%ee=bitcast i8*%ed to i8**
%ef=load i8*,i8**%ee,align 8
%eg=bitcast i8*%ef to i8**
%eh=load i8*,i8**%eg,align 8
store i8*%eh,i8**%b,align 8
%ei=getelementptr inbounds i8,i8*%ef,i64 8
%ej=bitcast i8*%ei to i8**
%ek=load i8*,i8**%ej,align 8
store i8*%ek,i8**%c,align 8
%el=getelementptr inbounds i8,i8*%ef,i64 16
%em=bitcast i8*%el to i8**
%en=load i8*,i8**%em,align 8
%eo=getelementptr inbounds i8,i8*%ef,i64 24
%ep=bitcast i8*%eo to i8**
%eq=load i8*,i8**%ep,align 8
store i8*%eq,i8**%d,align 8
%er=bitcast i8*%en to i8**
%es=load i8*,i8**%er,align 8
%et=getelementptr inbounds i8,i8*%en,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
store i8*%ev,i8**%e,align 8
%ew=getelementptr inbounds i8,i8*%en,i64 16
%ex=bitcast i8*%ew to i8**
%ey=load i8*,i8**%ex,align 8
store i8*%ey,i8**%f,align 8
%ez=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%es)
store i8*%ez,i8**%g,align 8
%eA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eB=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%eA)
store i8*%eB,i8**%e,align 8
%eC=call i8*@sml_alloc(i32 inreg 12)#0
%eD=getelementptr inbounds i8,i8*%eC,i64 -4
%eE=bitcast i8*%eD to i32*
store i32 1342177288,i32*%eE,align 4
store i8*%eC,i8**%h,align 8
%eF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eG=bitcast i8*%eC to i8**
store i8*%eF,i8**%eG,align 8
%eH=getelementptr inbounds i8,i8*%eC,i64 8
%eI=bitcast i8*%eH to i32*
store i32 1,i32*%eI,align 4
%eJ=call i8*@sml_alloc(i32 inreg 28)#0
%eK=getelementptr inbounds i8,i8*%eJ,i64 -4
%eL=bitcast i8*%eK to i32*
store i32 1342177304,i32*%eL,align 4
store i8*%eJ,i8**%e,align 8
%eM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eN=bitcast i8*%eJ to i8**
store i8*%eM,i8**%eN,align 8
%eO=getelementptr inbounds i8,i8*%eJ,i64 8
%eP=bitcast i8*%eO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2251 to void(...)*),void(...)**%eP,align 8
%eQ=getelementptr inbounds i8,i8*%eJ,i64 16
%eR=bitcast i8*%eQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2251 to void(...)*),void(...)**%eR,align 8
%eS=getelementptr inbounds i8,i8*%eJ,i64 24
%eT=bitcast i8*%eS to i32*
store i32 -2147483647,i32*%eT,align 4
%eU=call i8*@sml_alloc(i32 inreg 20)#0
%eV=getelementptr inbounds i8,i8*%eU,i64 -4
%eW=bitcast i8*%eV to i32*
store i32 1342177296,i32*%eW,align 4
store i8*%eU,i8**%h,align 8
%eX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eY=bitcast i8*%eU to i8**
store i8*%eX,i8**%eY,align 8
%eZ=getelementptr inbounds i8,i8*%eU,i64 8
%e0=bitcast i8*%eZ to i8**
store i8*null,i8**%e0,align 8
%e1=getelementptr inbounds i8,i8*%eU,i64 16
%e2=bitcast i8*%e1 to i32*
store i32 3,i32*%e2,align 4
%e3=call i8*@sml_alloc(i32 inreg 20)#0
%e4=getelementptr inbounds i8,i8*%e3,i64 -4
%e5=bitcast i8*%e4 to i32*
store i32 1342177296,i32*%e5,align 4
%e6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e7=bitcast i8*%e3 to i8**
store i8*%e6,i8**%e7,align 8
%e8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e9=getelementptr inbounds i8,i8*%e3,i64 8
%fa=bitcast i8*%e9 to i8**
store i8*%e8,i8**%fa,align 8
%fb=getelementptr inbounds i8,i8*%e3,i64 16
%fc=bitcast i8*%fb to i32*
store i32 3,i32*%fc,align 4
%fd=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%e3)
store i8*%fd,i8**%e,align 8
%fe=call i8*@sml_alloc(i32 inreg 20)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177296,i32*%fg,align 4
store i8*%fe,i8**%g,align 8
%fh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fi=bitcast i8*%fe to i8**
store i8*%fh,i8**%fi,align 8
%fj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fk=getelementptr inbounds i8,i8*%fe,i64 8
%fl=bitcast i8*%fk to i8**
store i8*%fj,i8**%fl,align 8
%fm=getelementptr inbounds i8,i8*%fe,i64 16
%fn=bitcast i8*%fm to i32*
store i32 3,i32*%fn,align 4
%fo=call i8*@sml_alloc(i32 inreg 28)#0
%fp=getelementptr inbounds i8,i8*%fo,i64 -4
%fq=bitcast i8*%fp to i32*
store i32 1342177304,i32*%fq,align 4
store i8*%fo,i8**%e,align 8
%fr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fs=bitcast i8*%fo to i8**
store i8*%fr,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fo,i64 8
%fu=bitcast i8*%ft to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2252 to void(...)*),void(...)**%fu,align 8
%fv=getelementptr inbounds i8,i8*%fo,i64 16
%fw=bitcast i8*%fv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2252 to void(...)*),void(...)**%fw,align 8
%fx=getelementptr inbounds i8,i8*%fo,i64 24
%fy=bitcast i8*%fx to i32*
store i32 -2147483647,i32*%fy,align 4
%fz=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fA=getelementptr inbounds i8,i8*%fz,i64 16
%fB=bitcast i8*%fA to i8*(i8*,i8*)**
%fC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fB,align 8
%fD=bitcast i8*%fz to i8**
%fE=load i8*,i8**%fD,align 8
%fF=call fastcc i8*%fC(i8*inreg%fE,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hM,i64 0,i32 2)to i8*))
%fG=getelementptr inbounds i8,i8*%fF,i64 16
%fH=bitcast i8*%fG to i8*(i8*,i8*)**
%fI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fH,align 8
%fJ=bitcast i8*%fF to i8**
%fK=load i8*,i8**%fJ,align 8
%fL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fM=call fastcc i8*%fI(i8*inreg%fK,i8*inreg%fL)
store i8*%fM,i8**%c,align 8
%fN=load i8*,i8**%d,align 8
%fO=icmp eq i8*%fN,null
br i1%fO,label%f3,label%fP
fP:
store i8*null,i8**%d,align 8
%fQ=bitcast i8*%fN to i8**
%fR=load i8*,i8**%fQ,align 8
%fS=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%fR)
store i8*%fS,i8**%d,align 8
%fT=call i8*@sml_alloc(i32 inreg 20)#0
%fU=getelementptr inbounds i8,i8*%fT,i64 -4
%fV=bitcast i8*%fU to i32*
store i32 1342177296,i32*%fV,align 4
%fW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fX=bitcast i8*%fT to i8**
store i8*%fW,i8**%fX,align 8
%fY=getelementptr inbounds i8,i8*%fT,i64 8
%fZ=bitcast i8*%fY to i8**
store i8*null,i8**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fT,i64 16
%f1=bitcast i8*%f0 to i32*
store i32 3,i32*%f1,align 4
%f2=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%fT)
br label%f3
f3:
%f4=phi i8*[%f2,%fP],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%ec]
store i8*%f4,i8**%d,align 8
%f5=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%f6=getelementptr inbounds i8,i8*%f5,i64 16
%f7=bitcast i8*%f6 to i8*(i8*,i8*)**
%f8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f7,align 8
%f9=bitcast i8*%f5 to i8**
%ga=load i8*,i8**%f9,align 8
%gb=call fastcc i8*%f8(i8*inreg%ga,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hN,i64 0,i32 2)to i8*))
%gc=getelementptr inbounds i8,i8*%gb,i64 16
%gd=bitcast i8*%gc to i8*(i8*,i8*)**
%ge=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gd,align 8
%gf=bitcast i8*%gb to i8**
%gg=load i8*,i8**%gf,align 8
%gh=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gi=call fastcc i8*%ge(i8*inreg%gg,i8*inreg%gh)
store i8*%gi,i8**%c,align 8
%gj=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gk=getelementptr inbounds i8,i8*%gj,i64 16
%gl=bitcast i8*%gk to i8*(i8*,i8*)**
%gm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gl,align 8
%gn=bitcast i8*%gj to i8**
%go=load i8*,i8**%gn,align 8
%gp=call fastcc i8*%gm(i8*inreg%go,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%gq=getelementptr inbounds i8,i8*%gp,i64 16
%gr=bitcast i8*%gq to i8*(i8*,i8*)**
%gs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gr,align 8
%gt=bitcast i8*%gp to i8**
%gu=load i8*,i8**%gt,align 8
%gv=call fastcc i8*%gs(i8*inreg%gu,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%gw=getelementptr inbounds i8,i8*%gv,i64 16
%gx=bitcast i8*%gw to i8*(i8*,i8*)**
%gy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gx,align 8
%gz=bitcast i8*%gv to i8**
%gA=load i8*,i8**%gz,align 8
%gB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gC=call fastcc i8*%gy(i8*inreg%gA,i8*inreg%gB)
store i8*%gC,i8**%c,align 8
%gD=call i8*@sml_alloc(i32 inreg 20)#0
%gE=getelementptr inbounds i8,i8*%gD,i64 -4
%gF=bitcast i8*%gE to i32*
store i32 1342177296,i32*%gF,align 4
store i8*%gD,i8**%f,align 8
%gG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gH=bitcast i8*%gD to i8**
store i8*%gG,i8**%gH,align 8
%gI=getelementptr inbounds i8,i8*%gD,i64 8
%gJ=bitcast i8*%gI to i8**
store i8*null,i8**%gJ,align 8
%gK=getelementptr inbounds i8,i8*%gD,i64 16
%gL=bitcast i8*%gK to i32*
store i32 3,i32*%gL,align 4
%gM=call i8*@sml_alloc(i32 inreg 20)#0
%gN=getelementptr inbounds i8,i8*%gM,i64 -4
%gO=bitcast i8*%gN to i32*
store i32 1342177296,i32*%gO,align 4
store i8*%gM,i8**%d,align 8
%gP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gQ=bitcast i8*%gM to i8**
store i8*%gP,i8**%gQ,align 8
%gR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gS=getelementptr inbounds i8,i8*%gM,i64 8
%gT=bitcast i8*%gS to i8**
store i8*%gR,i8**%gT,align 8
%gU=getelementptr inbounds i8,i8*%gM,i64 16
%gV=bitcast i8*%gU to i32*
store i32 3,i32*%gV,align 4
%gW=call i8*@sml_alloc(i32 inreg 20)#0
%gX=getelementptr inbounds i8,i8*%gW,i64 -4
%gY=bitcast i8*%gX to i32*
store i32 1342177296,i32*%gY,align 4
%gZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g0=bitcast i8*%gW to i8**
store i8*%gZ,i8**%g0,align 8
%g1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g2=getelementptr inbounds i8,i8*%gW,i64 8
%g3=bitcast i8*%g2 to i8**
store i8*%g1,i8**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gW,i64 16
%g5=bitcast i8*%g4 to i32*
store i32 3,i32*%g5,align 4
%g6=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@e0,i64 0,i32 2)to i8*),i8*inreg%gW)
store i8*%g6,i8**%c,align 8
%g7=call i8*@sml_alloc(i32 inreg 20)#0
%g8=getelementptr inbounds i8,i8*%g7,i64 -4
%g9=bitcast i8*%g8 to i32*
store i32 1342177296,i32*%g9,align 4
store i8*%g7,i8**%d,align 8
%ha=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hb=bitcast i8*%g7 to i8**
store i8*%ha,i8**%hb,align 8
%hc=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%hd=getelementptr inbounds i8,i8*%g7,i64 8
%he=bitcast i8*%hd to i8**
store i8*%hc,i8**%he,align 8
%hf=getelementptr inbounds i8,i8*%g7,i64 16
%hg=bitcast i8*%hf to i32*
store i32 3,i32*%hg,align 4
%hh=call i8*@sml_alloc(i32 inreg 28)#0
%hi=getelementptr inbounds i8,i8*%hh,i64 -4
%hj=bitcast i8*%hi to i32*
store i32 1342177304,i32*%hj,align 4
%hk=load i8*,i8**%d,align 8
%hl=bitcast i8*%hh to i8**
store i8*%hk,i8**%hl,align 8
%hm=getelementptr inbounds i8,i8*%hh,i64 8
%hn=bitcast i8*%hm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2260 to void(...)*),void(...)**%hn,align 8
%ho=getelementptr inbounds i8,i8*%hh,i64 16
%hp=bitcast i8*%ho to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2260 to void(...)*),void(...)**%hp,align 8
%hq=getelementptr inbounds i8,i8*%hh,i64 24
%hr=bitcast i8*%hq to i32*
store i32 -2147483647,i32*%hr,align 4
ret i8*%hh
hs:
%ht=getelementptr inbounds i8,i8*%s,i64 8
%hu=bitcast i8*%ht to i8**
%hv=load i8*,i8**%hu,align 8
%hw=bitcast i8*%hv to i8**
%hx=load i8*,i8**%hw,align 8
store i8*%hx,i8**%b,align 8
%hy=getelementptr inbounds i8,i8*%hv,i64 8
%hz=bitcast i8*%hy to i8**
%hA=load i8*,i8**%hz,align 8
store i8*%hA,i8**%c,align 8
%hB=getelementptr inbounds i8,i8*%hv,i64 16
%hC=bitcast i8*%hB to i8**
%hD=load i8*,i8**%hC,align 8
store i8*%hD,i8**%d,align 8
%hE=getelementptr inbounds i8,i8*%hv,i64 24
%hF=bitcast i8*%hE to i8***
%hG=load i8**,i8***%hF,align 8
%hH=load i8*,i8**%hG,align 8
store i8*%hH,i8**%e,align 8
%hI=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hJ=getelementptr inbounds i8,i8*%hI,i64 16
%hK=bitcast i8*%hJ to i8*(i8*,i8*)**
%hL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hK,align 8
%hM=bitcast i8*%hI to i8**
%hN=load i8*,i8**%hM,align 8
%hO=call fastcc i8*%hL(i8*inreg%hN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hK,i64 0,i32 2)to i8*))
%hP=getelementptr inbounds i8,i8*%hO,i64 16
%hQ=bitcast i8*%hP to i8*(i8*,i8*)**
%hR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hQ,align 8
%hS=bitcast i8*%hO to i8**
%hT=load i8*,i8**%hS,align 8
%hU=load i8*,i8**%b,align 8
%hV=call fastcc i8*%hR(i8*inreg%hT,i8*inreg%hU)
store i8*%hV,i8**%f,align 8
%hW=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hX=getelementptr inbounds i8,i8*%hW,i64 16
%hY=bitcast i8*%hX to i8*(i8*,i8*)**
%hZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hY,align 8
%h0=bitcast i8*%hW to i8**
%h1=load i8*,i8**%h0,align 8
%h2=call fastcc i8*%hZ(i8*inreg%h1,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hL,i64 0,i32 2)to i8*))
%h3=getelementptr inbounds i8,i8*%h2,i64 16
%h4=bitcast i8*%h3 to i8*(i8*,i8*)**
%h5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%h4,align 8
%h6=bitcast i8*%h2 to i8**
%h7=load i8*,i8**%h6,align 8
%h8=load i8*,i8**%b,align 8
%h9=call fastcc i8*%h5(i8*inreg%h7,i8*inreg%h8)
store i8*%h9,i8**%g,align 8
%ia=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ib=getelementptr inbounds i8,i8*%ia,i64 16
%ic=bitcast i8*%ib to i8*(i8*,i8*)**
%id=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ic,align 8
%ie=bitcast i8*%ia to i8**
%if=load i8*,i8**%ie,align 8
%ig=call fastcc i8*%id(i8*inreg%if,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%ih=getelementptr inbounds i8,i8*%ig,i64 16
%ii=bitcast i8*%ih to i8*(i8*,i8*)**
%ij=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ii,align 8
%ik=bitcast i8*%ig to i8**
%il=load i8*,i8**%ik,align 8
%im=call fastcc i8*%ij(i8*inreg%il,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%in=getelementptr inbounds i8,i8*%im,i64 16
%io=bitcast i8*%in to i8*(i8*,i8*)**
%ip=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%io,align 8
%iq=bitcast i8*%im to i8**
%ir=load i8*,i8**%iq,align 8
%is=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%it=call fastcc i8*%ip(i8*inreg%ir,i8*inreg%is)
store i8*%it,i8**%g,align 8
%iu=load i8*,i8**%d,align 8
%iv=bitcast i8*%iu to i8**
%iw=load i8*,i8**%iv,align 8
%ix=getelementptr inbounds i8,i8*%iu,i64 8
%iy=bitcast i8*%ix to i8**
%iz=load i8*,i8**%iy,align 8
store i8*%iz,i8**%h,align 8
%iA=getelementptr inbounds i8,i8*%iu,i64 16
%iB=bitcast i8*%iA to i8**
%iC=load i8*,i8**%iB,align 8
store i8*%iC,i8**%d,align 8
%iD=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%iw)
store i8*%iD,i8**%i,align 8
%iE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iF=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%iE)
store i8*%iF,i8**%h,align 8
%iG=call i8*@sml_alloc(i32 inreg 12)#0
%iH=getelementptr inbounds i8,i8*%iG,i64 -4
%iI=bitcast i8*%iH to i32*
store i32 1342177288,i32*%iI,align 4
store i8*%iG,i8**%j,align 8
%iJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iK=bitcast i8*%iG to i8**
store i8*%iJ,i8**%iK,align 8
%iL=getelementptr inbounds i8,i8*%iG,i64 8
%iM=bitcast i8*%iL to i32*
store i32 1,i32*%iM,align 4
%iN=call i8*@sml_alloc(i32 inreg 28)#0
%iO=getelementptr inbounds i8,i8*%iN,i64 -4
%iP=bitcast i8*%iO to i32*
store i32 1342177304,i32*%iP,align 4
store i8*%iN,i8**%h,align 8
%iQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iR=bitcast i8*%iN to i8**
store i8*%iQ,i8**%iR,align 8
%iS=getelementptr inbounds i8,i8*%iN,i64 8
%iT=bitcast i8*%iS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2244 to void(...)*),void(...)**%iT,align 8
%iU=getelementptr inbounds i8,i8*%iN,i64 16
%iV=bitcast i8*%iU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2244 to void(...)*),void(...)**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iN,i64 24
%iX=bitcast i8*%iW to i32*
store i32 -2147483647,i32*%iX,align 4
%iY=call i8*@sml_alloc(i32 inreg 20)#0
%iZ=getelementptr inbounds i8,i8*%iY,i64 -4
%i0=bitcast i8*%iZ to i32*
store i32 1342177296,i32*%i0,align 4
store i8*%iY,i8**%j,align 8
%i1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%i2=bitcast i8*%iY to i8**
store i8*%i1,i8**%i2,align 8
%i3=getelementptr inbounds i8,i8*%iY,i64 8
%i4=bitcast i8*%i3 to i8**
store i8*null,i8**%i4,align 8
%i5=getelementptr inbounds i8,i8*%iY,i64 16
%i6=bitcast i8*%i5 to i32*
store i32 3,i32*%i6,align 4
%i7=call i8*@sml_alloc(i32 inreg 20)#0
%i8=getelementptr inbounds i8,i8*%i7,i64 -4
%i9=bitcast i8*%i8 to i32*
store i32 1342177296,i32*%i9,align 4
%ja=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jb=bitcast i8*%i7 to i8**
store i8*%ja,i8**%jb,align 8
%jc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jd=getelementptr inbounds i8,i8*%i7,i64 8
%je=bitcast i8*%jd to i8**
store i8*%jc,i8**%je,align 8
%jf=getelementptr inbounds i8,i8*%i7,i64 16
%jg=bitcast i8*%jf to i32*
store i32 3,i32*%jg,align 4
%jh=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%i7)
store i8*%jh,i8**%h,align 8
%ji=call i8*@sml_alloc(i32 inreg 20)#0
%jj=getelementptr inbounds i8,i8*%ji,i64 -4
%jk=bitcast i8*%jj to i32*
store i32 1342177296,i32*%jk,align 4
store i8*%ji,i8**%i,align 8
%jl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jm=bitcast i8*%ji to i8**
store i8*%jl,i8**%jm,align 8
%jn=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jo=getelementptr inbounds i8,i8*%ji,i64 8
%jp=bitcast i8*%jo to i8**
store i8*%jn,i8**%jp,align 8
%jq=getelementptr inbounds i8,i8*%ji,i64 16
%jr=bitcast i8*%jq to i32*
store i32 3,i32*%jr,align 4
%js=call i8*@sml_alloc(i32 inreg 28)#0
%jt=getelementptr inbounds i8,i8*%js,i64 -4
%ju=bitcast i8*%jt to i32*
store i32 1342177304,i32*%ju,align 4
store i8*%js,i8**%h,align 8
%jv=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jw=bitcast i8*%js to i8**
store i8*%jv,i8**%jw,align 8
%jx=getelementptr inbounds i8,i8*%js,i64 8
%jy=bitcast i8*%jx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2245 to void(...)*),void(...)**%jy,align 8
%jz=getelementptr inbounds i8,i8*%js,i64 16
%jA=bitcast i8*%jz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2245 to void(...)*),void(...)**%jA,align 8
%jB=getelementptr inbounds i8,i8*%js,i64 24
%jC=bitcast i8*%jB to i32*
store i32 -2147483647,i32*%jC,align 4
%jD=call i8*@sml_alloc(i32 inreg 20)#0
%jE=getelementptr inbounds i8,i8*%jD,i64 -4
%jF=bitcast i8*%jE to i32*
store i32 1342177296,i32*%jF,align 4
store i8*%jD,i8**%d,align 8
%jG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jH=bitcast i8*%jD to i8**
store i8*%jG,i8**%jH,align 8
%jI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jJ=getelementptr inbounds i8,i8*%jD,i64 8
%jK=bitcast i8*%jJ to i8**
store i8*%jI,i8**%jK,align 8
%jL=getelementptr inbounds i8,i8*%jD,i64 16
%jM=bitcast i8*%jL to i32*
store i32 3,i32*%jM,align 4
%jN=call i8*@sml_alloc(i32 inreg 28)#0
%jO=getelementptr inbounds i8,i8*%jN,i64 -4
%jP=bitcast i8*%jO to i32*
store i32 1342177304,i32*%jP,align 4
store i8*%jN,i8**%f,align 8
%jQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jR=bitcast i8*%jN to i8**
store i8*%jQ,i8**%jR,align 8
%jS=getelementptr inbounds i8,i8*%jN,i64 8
%jT=bitcast i8*%jS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2248 to void(...)*),void(...)**%jT,align 8
%jU=getelementptr inbounds i8,i8*%jN,i64 16
%jV=bitcast i8*%jU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2248 to void(...)*),void(...)**%jV,align 8
%jW=getelementptr inbounds i8,i8*%jN,i64 24
%jX=bitcast i8*%jW to i32*
store i32 -2147483647,i32*%jX,align 4
%jY=call i8*@sml_alloc(i32 inreg 12)#0
%jZ=getelementptr inbounds i8,i8*%jY,i64 -4
%j0=bitcast i8*%jZ to i32*
store i32 1342177288,i32*%j0,align 4
store i8*%jY,i8**%d,align 8
%j1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%j2=bitcast i8*%jY to i8**
store i8*%j1,i8**%j2,align 8
%j3=getelementptr inbounds i8,i8*%jY,i64 8
%j4=bitcast i8*%j3 to i32*
store i32 1,i32*%j4,align 4
%j5=call i8*@sml_alloc(i32 inreg 28)#0
%j6=getelementptr inbounds i8,i8*%j5,i64 -4
%j7=bitcast i8*%j6 to i32*
store i32 1342177304,i32*%j7,align 4
%j8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%j9=bitcast i8*%j5 to i8**
store i8*%j8,i8**%j9,align 8
%ka=getelementptr inbounds i8,i8*%j5,i64 8
%kb=bitcast i8*%ka to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2249 to void(...)*),void(...)**%kb,align 8
%kc=getelementptr inbounds i8,i8*%j5,i64 16
%kd=bitcast i8*%kc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2249 to void(...)*),void(...)**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j5,i64 24
%kf=bitcast i8*%ke to i32*
store i32 -2147483647,i32*%kf,align 4
%kg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kh=call fastcc i8*@_SMLLLN12ElaborateSQL7Fun__mapE_1228(i8*inreg%kg,i8*inreg%j5)
store i8*%kh,i8**%d,align 8
%ki=call i8*@sml_alloc(i32 inreg 20)#0
%kj=getelementptr inbounds i8,i8*%ki,i64 -4
%kk=bitcast i8*%kj to i32*
store i32 1342177296,i32*%kk,align 4
%kl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%km=bitcast i8*%ki to i8**
store i8*%kl,i8**%km,align 8
%kn=getelementptr inbounds i8,i8*%ki,i64 8
%ko=bitcast i8*%kn to i8**
store i8*null,i8**%ko,align 8
%kp=getelementptr inbounds i8,i8*%ki,i64 16
%kq=bitcast i8*%kp to i32*
store i32 3,i32*%kq,align 4
%kr=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eS,i64 0,i32 2)to i8*),i8*inreg%ki)
store i8*%kr,i8**%d,align 8
%ks=call i8*@sml_alloc(i32 inreg 12)#0
%kt=getelementptr inbounds i8,i8*%ks,i64 -4
%ku=bitcast i8*%kt to i32*
store i32 1342177288,i32*%ku,align 4
store i8*%ks,i8**%e,align 8
%kv=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kw=bitcast i8*%ks to i8**
store i8*%kv,i8**%kw,align 8
%kx=getelementptr inbounds i8,i8*%ks,i64 8
%ky=bitcast i8*%kx to i32*
store i32 1,i32*%ky,align 4
%kz=call i8*@sml_alloc(i32 inreg 28)#0
%kA=getelementptr inbounds i8,i8*%kz,i64 -4
%kB=bitcast i8*%kA to i32*
store i32 1342177304,i32*%kB,align 4
%kC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kD=bitcast i8*%kz to i8**
store i8*%kC,i8**%kD,align 8
%kE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kF=getelementptr inbounds i8,i8*%kz,i64 8
%kG=bitcast i8*%kF to i8**
store i8*%kE,i8**%kG,align 8
%kH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kI=getelementptr inbounds i8,i8*%kz,i64 16
%kJ=bitcast i8*%kI to i8**
store i8*%kH,i8**%kJ,align 8
%kK=getelementptr inbounds i8,i8*%kz,i64 24
%kL=bitcast i8*%kK to i32*
store i32 7,i32*%kL,align 4
%kM=call fastcc i8*@_SMLLLN12ElaborateSQL10Con__INSERTE_1269(i8*inreg%kz)
store i8*%kM,i8**%b,align 8
%kN=call i8*@sml_alloc(i32 inreg 20)#0
%kO=getelementptr inbounds i8,i8*%kN,i64 -4
%kP=bitcast i8*%kO to i32*
store i32 1342177296,i32*%kP,align 4
store i8*%kN,i8**%d,align 8
%kQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%kR=bitcast i8*%kN to i8**
store i8*%kQ,i8**%kR,align 8
%kS=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kT=getelementptr inbounds i8,i8*%kN,i64 8
%kU=bitcast i8*%kT to i8**
store i8*%kS,i8**%kU,align 8
%kV=getelementptr inbounds i8,i8*%kN,i64 16
%kW=bitcast i8*%kV to i32*
store i32 3,i32*%kW,align 4
%kX=call i8*@sml_alloc(i32 inreg 28)#0
%kY=getelementptr inbounds i8,i8*%kX,i64 -4
%kZ=bitcast i8*%kY to i32*
store i32 1342177304,i32*%kZ,align 4
%k0=load i8*,i8**%d,align 8
%k1=bitcast i8*%kX to i8**
store i8*%k0,i8**%k1,align 8
%k2=getelementptr inbounds i8,i8*%kX,i64 8
%k3=bitcast i8*%k2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2250 to void(...)*),void(...)**%k3,align 8
%k4=getelementptr inbounds i8,i8*%kX,i64 16
%k5=bitcast i8*%k4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2250 to void(...)*),void(...)**%k5,align 8
%k6=getelementptr inbounds i8,i8*%kX,i64 24
%k7=bitcast i8*%k6 to i32*
store i32 -2147483647,i32*%k7,align 4
ret i8*%kX
k8:
%k9=getelementptr inbounds i8,i8*%s,i64 8
%la=bitcast i8*%k9 to i8**
%lb=load i8*,i8**%la,align 8
%lc=bitcast i8*%lb to i8**
%ld=load i8*,i8**%lc,align 8
store i8*%ld,i8**%b,align 8
%le=getelementptr inbounds i8,i8*%lb,i64 8
%lf=bitcast i8*%le to i8**
%lg=load i8*,i8**%lf,align 8
store i8*%lg,i8**%c,align 8
%lh=getelementptr inbounds i8,i8*%lb,i64 16
%li=bitcast i8*%lh to i8**
%lj=load i8*,i8**%li,align 8
store i8*%lj,i8**%d,align 8
%lk=getelementptr inbounds i8,i8*%lb,i64 24
%ll=bitcast i8*%lk to i8**
%lm=load i8*,i8**%ll,align 8
%ln=bitcast i8*%lm to i8**
%lo=load i8*,i8**%ln,align 8
%lp=getelementptr inbounds i8,i8*%lm,i64 8
%lq=bitcast i8*%lp to i8**
%lr=load i8*,i8**%lq,align 8
store i8*%lr,i8**%e,align 8
%ls=getelementptr inbounds i8,i8*%lm,i64 16
%lt=bitcast i8*%ls to i8**
%lu=load i8*,i8**%lt,align 8
store i8*%lu,i8**%f,align 8
%lv=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%lo)
store i8*%lv,i8**%g,align 8
%lw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lx=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%lw)
store i8*%lx,i8**%e,align 8
%ly=call i8*@sml_alloc(i32 inreg 12)#0
%lz=getelementptr inbounds i8,i8*%ly,i64 -4
%lA=bitcast i8*%lz to i32*
store i32 1342177288,i32*%lA,align 4
store i8*%ly,i8**%h,align 8
%lB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lC=bitcast i8*%ly to i8**
store i8*%lB,i8**%lC,align 8
%lD=getelementptr inbounds i8,i8*%ly,i64 8
%lE=bitcast i8*%lD to i32*
store i32 1,i32*%lE,align 4
%lF=call i8*@sml_alloc(i32 inreg 28)#0
%lG=getelementptr inbounds i8,i8*%lF,i64 -4
%lH=bitcast i8*%lG to i32*
store i32 1342177304,i32*%lH,align 4
store i8*%lF,i8**%e,align 8
%lI=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%lJ=bitcast i8*%lF to i8**
store i8*%lI,i8**%lJ,align 8
%lK=getelementptr inbounds i8,i8*%lF,i64 8
%lL=bitcast i8*%lK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2235 to void(...)*),void(...)**%lL,align 8
%lM=getelementptr inbounds i8,i8*%lF,i64 16
%lN=bitcast i8*%lM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2235 to void(...)*),void(...)**%lN,align 8
%lO=getelementptr inbounds i8,i8*%lF,i64 24
%lP=bitcast i8*%lO to i32*
store i32 -2147483647,i32*%lP,align 4
%lQ=call i8*@sml_alloc(i32 inreg 20)#0
%lR=getelementptr inbounds i8,i8*%lQ,i64 -4
%lS=bitcast i8*%lR to i32*
store i32 1342177296,i32*%lS,align 4
store i8*%lQ,i8**%h,align 8
%lT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lU=bitcast i8*%lQ to i8**
store i8*%lT,i8**%lU,align 8
%lV=getelementptr inbounds i8,i8*%lQ,i64 8
%lW=bitcast i8*%lV to i8**
store i8*null,i8**%lW,align 8
%lX=getelementptr inbounds i8,i8*%lQ,i64 16
%lY=bitcast i8*%lX to i32*
store i32 3,i32*%lY,align 4
%lZ=call i8*@sml_alloc(i32 inreg 20)#0
%l0=getelementptr inbounds i8,i8*%lZ,i64 -4
%l1=bitcast i8*%l0 to i32*
store i32 1342177296,i32*%l1,align 4
%l2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%l3=bitcast i8*%lZ to i8**
store i8*%l2,i8**%l3,align 8
%l4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%l5=getelementptr inbounds i8,i8*%lZ,i64 8
%l6=bitcast i8*%l5 to i8**
store i8*%l4,i8**%l6,align 8
%l7=getelementptr inbounds i8,i8*%lZ,i64 16
%l8=bitcast i8*%l7 to i32*
store i32 3,i32*%l8,align 4
%l9=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%lZ)
store i8*%l9,i8**%e,align 8
%ma=call i8*@sml_alloc(i32 inreg 20)#0
%mb=getelementptr inbounds i8,i8*%ma,i64 -4
%mc=bitcast i8*%mb to i32*
store i32 1342177296,i32*%mc,align 4
store i8*%ma,i8**%g,align 8
%md=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%me=bitcast i8*%ma to i8**
store i8*%md,i8**%me,align 8
%mf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mg=getelementptr inbounds i8,i8*%ma,i64 8
%mh=bitcast i8*%mg to i8**
store i8*%mf,i8**%mh,align 8
%mi=getelementptr inbounds i8,i8*%ma,i64 16
%mj=bitcast i8*%mi to i32*
store i32 3,i32*%mj,align 4
%mk=call i8*@sml_alloc(i32 inreg 28)#0
%ml=getelementptr inbounds i8,i8*%mk,i64 -4
%mm=bitcast i8*%ml to i32*
store i32 1342177304,i32*%mm,align 4
store i8*%mk,i8**%e,align 8
%mn=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mo=bitcast i8*%mk to i8**
store i8*%mn,i8**%mo,align 8
%mp=getelementptr inbounds i8,i8*%mk,i64 8
%mq=bitcast i8*%mp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2236 to void(...)*),void(...)**%mq,align 8
%mr=getelementptr inbounds i8,i8*%mk,i64 16
%ms=bitcast i8*%mr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2236 to void(...)*),void(...)**%ms,align 8
%mt=getelementptr inbounds i8,i8*%mk,i64 24
%mu=bitcast i8*%mt to i32*
store i32 -2147483647,i32*%mu,align 4
%mv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mw=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%mv)
store i8*%mw,i8**%d,align 8
%mx=call i8*@sml_alloc(i32 inreg 20)#0
%my=getelementptr inbounds i8,i8*%mx,i64 -4
%mz=bitcast i8*%my to i32*
store i32 1342177296,i32*%mz,align 4
%mA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mB=bitcast i8*%mx to i8**
store i8*%mA,i8**%mB,align 8
%mC=getelementptr inbounds i8,i8*%mx,i64 8
%mD=bitcast i8*%mC to i8**
store i8*null,i8**%mD,align 8
%mE=getelementptr inbounds i8,i8*%mx,i64 16
%mF=bitcast i8*%mE to i32*
store i32 3,i32*%mF,align 4
%mG=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eW,i64 0,i32 2)to i8*),i8*inreg%mx)
store i8*%mG,i8**%d,align 8
%mH=call i8*@sml_alloc(i32 inreg 28)#0
%mI=getelementptr inbounds i8,i8*%mH,i64 -4
%mJ=bitcast i8*%mI to i32*
store i32 1342177304,i32*%mJ,align 4
%mK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mL=bitcast i8*%mH to i8**
store i8*%mK,i8**%mL,align 8
%mM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%mN=getelementptr inbounds i8,i8*%mH,i64 8
%mO=bitcast i8*%mN to i8**
store i8*%mM,i8**%mO,align 8
%mP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mQ=getelementptr inbounds i8,i8*%mH,i64 16
%mR=bitcast i8*%mQ to i8**
store i8*%mP,i8**%mR,align 8
%mS=getelementptr inbounds i8,i8*%mH,i64 24
%mT=bitcast i8*%mS to i32*
store i32 7,i32*%mT,align 4
%mU=call fastcc i8*@_SMLLLN12ElaborateSQL10Con__INSERTE_1269(i8*inreg%mH)
store i8*%mU,i8**%b,align 8
%mV=call i8*@sml_alloc(i32 inreg 20)#0
%mW=getelementptr inbounds i8,i8*%mV,i64 -4
%mX=bitcast i8*%mW to i32*
store i32 1342177296,i32*%mX,align 4
store i8*%mV,i8**%d,align 8
%mY=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%mZ=bitcast i8*%mV to i8**
store i8*%mY,i8**%mZ,align 8
%m0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%m1=getelementptr inbounds i8,i8*%mV,i64 8
%m2=bitcast i8*%m1 to i8**
store i8*%m0,i8**%m2,align 8
%m3=getelementptr inbounds i8,i8*%mV,i64 16
%m4=bitcast i8*%m3 to i32*
store i32 3,i32*%m4,align 4
%m5=call i8*@sml_alloc(i32 inreg 28)#0
%m6=getelementptr inbounds i8,i8*%m5,i64 -4
%m7=bitcast i8*%m6 to i32*
store i32 1342177304,i32*%m7,align 4
%m8=load i8*,i8**%d,align 8
%m9=bitcast i8*%m5 to i8**
store i8*%m8,i8**%m9,align 8
%na=getelementptr inbounds i8,i8*%m5,i64 8
%nb=bitcast i8*%na to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2237 to void(...)*),void(...)**%nb,align 8
%nc=getelementptr inbounds i8,i8*%m5,i64 16
%nd=bitcast i8*%nc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2237 to void(...)*),void(...)**%nd,align 8
%ne=getelementptr inbounds i8,i8*%m5,i64 24
%nf=bitcast i8*%ne to i32*
store i32 -2147483647,i32*%nf,align 4
ret i8*%m5
ng:
%nh=getelementptr inbounds i8,i8*%s,i64 8
%ni=bitcast i8*%nh to i8**
%nj=load i8*,i8**%ni,align 8
%nk=bitcast i8*%nj to i8**
%nl=load i8*,i8**%nk,align 8
store i8*%nl,i8**%b,align 8
%nm=getelementptr inbounds i8,i8*%nj,i64 8
%nn=bitcast i8*%nm to i8**
%no=load i8*,i8**%nn,align 8
store i8*%no,i8**%c,align 8
%np=getelementptr inbounds i8,i8*%nj,i64 16
%nq=bitcast i8*%np to i8**
%nr=load i8*,i8**%nq,align 8
%ns=getelementptr inbounds i8,i8*%nj,i64 24
%nt=bitcast i8*%ns to i8**
%nu=load i8*,i8**%nt,align 8
store i8*%nu,i8**%d,align 8
%nv=bitcast i8*%nr to i8**
%nw=load i8*,i8**%nv,align 8
%nx=getelementptr inbounds i8,i8*%nr,i64 8
%ny=bitcast i8*%nx to i8**
%nz=load i8*,i8**%ny,align 8
store i8*%nz,i8**%e,align 8
%nA=getelementptr inbounds i8,i8*%nr,i64 16
%nB=bitcast i8*%nA to i8**
%nC=load i8*,i8**%nB,align 8
store i8*%nC,i8**%f,align 8
%nD=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%nw)
store i8*%nD,i8**%g,align 8
%nE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nF=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%nE)
store i8*%nF,i8**%e,align 8
%nG=call i8*@sml_alloc(i32 inreg 12)#0
%nH=getelementptr inbounds i8,i8*%nG,i64 -4
%nI=bitcast i8*%nH to i32*
store i32 1342177288,i32*%nI,align 4
store i8*%nG,i8**%h,align 8
%nJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nK=bitcast i8*%nG to i8**
store i8*%nJ,i8**%nK,align 8
%nL=getelementptr inbounds i8,i8*%nG,i64 8
%nM=bitcast i8*%nL to i32*
store i32 1,i32*%nM,align 4
%nN=call i8*@sml_alloc(i32 inreg 28)#0
%nO=getelementptr inbounds i8,i8*%nN,i64 -4
%nP=bitcast i8*%nO to i32*
store i32 1342177304,i32*%nP,align 4
store i8*%nN,i8**%e,align 8
%nQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nR=bitcast i8*%nN to i8**
store i8*%nQ,i8**%nR,align 8
%nS=getelementptr inbounds i8,i8*%nN,i64 8
%nT=bitcast i8*%nS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2230 to void(...)*),void(...)**%nT,align 8
%nU=getelementptr inbounds i8,i8*%nN,i64 16
%nV=bitcast i8*%nU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2230 to void(...)*),void(...)**%nV,align 8
%nW=getelementptr inbounds i8,i8*%nN,i64 24
%nX=bitcast i8*%nW to i32*
store i32 -2147483647,i32*%nX,align 4
%nY=call i8*@sml_alloc(i32 inreg 20)#0
%nZ=getelementptr inbounds i8,i8*%nY,i64 -4
%n0=bitcast i8*%nZ to i32*
store i32 1342177296,i32*%n0,align 4
store i8*%nY,i8**%h,align 8
%n1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%n2=bitcast i8*%nY to i8**
store i8*%n1,i8**%n2,align 8
%n3=getelementptr inbounds i8,i8*%nY,i64 8
%n4=bitcast i8*%n3 to i8**
store i8*null,i8**%n4,align 8
%n5=getelementptr inbounds i8,i8*%nY,i64 16
%n6=bitcast i8*%n5 to i32*
store i32 3,i32*%n6,align 4
%n7=call i8*@sml_alloc(i32 inreg 20)#0
%n8=getelementptr inbounds i8,i8*%n7,i64 -4
%n9=bitcast i8*%n8 to i32*
store i32 1342177296,i32*%n9,align 4
%oa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ob=bitcast i8*%n7 to i8**
store i8*%oa,i8**%ob,align 8
%oc=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%od=getelementptr inbounds i8,i8*%n7,i64 8
%oe=bitcast i8*%od to i8**
store i8*%oc,i8**%oe,align 8
%of=getelementptr inbounds i8,i8*%n7,i64 16
%og=bitcast i8*%of to i32*
store i32 3,i32*%og,align 4
%oh=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%n7)
store i8*%oh,i8**%e,align 8
%oi=call i8*@sml_alloc(i32 inreg 20)#0
%oj=getelementptr inbounds i8,i8*%oi,i64 -4
%ok=bitcast i8*%oj to i32*
store i32 1342177296,i32*%ok,align 4
store i8*%oi,i8**%g,align 8
%ol=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%om=bitcast i8*%oi to i8**
store i8*%ol,i8**%om,align 8
%on=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oo=getelementptr inbounds i8,i8*%oi,i64 8
%op=bitcast i8*%oo to i8**
store i8*%on,i8**%op,align 8
%oq=getelementptr inbounds i8,i8*%oi,i64 16
%or=bitcast i8*%oq to i32*
store i32 3,i32*%or,align 4
%os=call i8*@sml_alloc(i32 inreg 28)#0
%ot=getelementptr inbounds i8,i8*%os,i64 -4
%ou=bitcast i8*%ot to i32*
store i32 1342177304,i32*%ou,align 4
store i8*%os,i8**%e,align 8
%ov=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ow=bitcast i8*%os to i8**
store i8*%ov,i8**%ow,align 8
%ox=getelementptr inbounds i8,i8*%os,i64 8
%oy=bitcast i8*%ox to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2231 to void(...)*),void(...)**%oy,align 8
%oz=getelementptr inbounds i8,i8*%os,i64 16
%oA=bitcast i8*%oz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2231 to void(...)*),void(...)**%oA,align 8
%oB=getelementptr inbounds i8,i8*%os,i64 24
%oC=bitcast i8*%oB to i32*
store i32 -2147483647,i32*%oC,align 4
%oD=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%oE=getelementptr inbounds i8,i8*%oD,i64 16
%oF=bitcast i8*%oE to i8*(i8*,i8*)**
%oG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oF,align 8
%oH=bitcast i8*%oD to i8**
%oI=load i8*,i8**%oH,align 8
%oJ=call fastcc i8*%oG(i8*inreg%oI,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hJ,i64 0,i32 2)to i8*))
%oK=getelementptr inbounds i8,i8*%oJ,i64 16
%oL=bitcast i8*%oK to i8*(i8*,i8*)**
%oM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oL,align 8
%oN=bitcast i8*%oJ to i8**
%oO=load i8*,i8**%oN,align 8
%oP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oQ=call fastcc i8*%oM(i8*inreg%oO,i8*inreg%oP)
store i8*%oQ,i8**%d,align 8
%oR=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%oS=getelementptr inbounds i8,i8*%oR,i64 16
%oT=bitcast i8*%oS to i8*(i8*,i8*)**
%oU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oT,align 8
%oV=bitcast i8*%oR to i8**
%oW=load i8*,i8**%oV,align 8
%oX=call fastcc i8*%oU(i8*inreg%oW,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%oY=getelementptr inbounds i8,i8*%oX,i64 16
%oZ=bitcast i8*%oY to i8*(i8*,i8*)**
%o0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%oZ,align 8
%o1=bitcast i8*%oX to i8**
%o2=load i8*,i8**%o1,align 8
%o3=call fastcc i8*%o0(i8*inreg%o2,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%o4=getelementptr inbounds i8,i8*%o3,i64 16
%o5=bitcast i8*%o4 to i8*(i8*,i8*)**
%o6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%o5,align 8
%o7=bitcast i8*%o3 to i8**
%o8=load i8*,i8**%o7,align 8
%o9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pa=call fastcc i8*%o6(i8*inreg%o8,i8*inreg%o9)
store i8*%pa,i8**%d,align 8
%pb=call i8*@sml_alloc(i32 inreg 20)#0
%pc=getelementptr inbounds i8,i8*%pb,i64 -4
%pd=bitcast i8*%pc to i32*
store i32 1342177296,i32*%pd,align 4
%pe=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pf=bitcast i8*%pb to i8**
store i8*%pe,i8**%pf,align 8
%pg=getelementptr inbounds i8,i8*%pb,i64 8
%ph=bitcast i8*%pg to i8**
store i8*null,i8**%ph,align 8
%pi=getelementptr inbounds i8,i8*%pb,i64 16
%pj=bitcast i8*%pi to i32*
store i32 3,i32*%pj,align 4
%pk=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eS,i64 0,i32 2)to i8*),i8*inreg%pb)
store i8*%pk,i8**%d,align 8
%pl=call i8*@sml_alloc(i32 inreg 12)#0
%pm=getelementptr inbounds i8,i8*%pl,i64 -4
%pn=bitcast i8*%pm to i32*
store i32 1342177288,i32*%pn,align 4
store i8*%pl,i8**%f,align 8
%po=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%pp=bitcast i8*%pl to i8**
store i8*%po,i8**%pp,align 8
%pq=getelementptr inbounds i8,i8*%pl,i64 8
%pr=bitcast i8*%pq to i32*
store i32 1,i32*%pr,align 4
%ps=call i8*@sml_alloc(i32 inreg 28)#0
%pt=getelementptr inbounds i8,i8*%ps,i64 -4
%pu=bitcast i8*%pt to i32*
store i32 1342177304,i32*%pu,align 4
%pv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pw=bitcast i8*%ps to i8**
store i8*%pv,i8**%pw,align 8
%px=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%py=getelementptr inbounds i8,i8*%ps,i64 8
%pz=bitcast i8*%py to i8**
store i8*%px,i8**%pz,align 8
%pA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pB=getelementptr inbounds i8,i8*%ps,i64 16
%pC=bitcast i8*%pB to i8**
store i8*%pA,i8**%pC,align 8
%pD=getelementptr inbounds i8,i8*%ps,i64 24
%pE=bitcast i8*%pD to i32*
store i32 7,i32*%pE,align 4
%pF=call fastcc i8*@_SMLLLN12ElaborateSQL10Con__INSERTE_1269(i8*inreg%ps)
store i8*%pF,i8**%b,align 8
%pG=call i8*@sml_alloc(i32 inreg 20)#0
%pH=getelementptr inbounds i8,i8*%pG,i64 -4
%pI=bitcast i8*%pH to i32*
store i32 1342177296,i32*%pI,align 4
store i8*%pG,i8**%d,align 8
%pJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%pK=bitcast i8*%pG to i8**
store i8*%pJ,i8**%pK,align 8
%pL=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%pM=getelementptr inbounds i8,i8*%pG,i64 8
%pN=bitcast i8*%pM to i8**
store i8*%pL,i8**%pN,align 8
%pO=getelementptr inbounds i8,i8*%pG,i64 16
%pP=bitcast i8*%pO to i32*
store i32 3,i32*%pP,align 4
%pQ=call i8*@sml_alloc(i32 inreg 28)#0
%pR=getelementptr inbounds i8,i8*%pQ,i64 -4
%pS=bitcast i8*%pR to i32*
store i32 1342177304,i32*%pS,align 4
%pT=load i8*,i8**%d,align 8
%pU=bitcast i8*%pQ to i8**
store i8*%pT,i8**%pU,align 8
%pV=getelementptr inbounds i8,i8*%pQ,i64 8
%pW=bitcast i8*%pV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2234 to void(...)*),void(...)**%pW,align 8
%pX=getelementptr inbounds i8,i8*%pQ,i64 16
%pY=bitcast i8*%pX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2234 to void(...)*),void(...)**%pY,align 8
%pZ=getelementptr inbounds i8,i8*%pQ,i64 24
%p0=bitcast i8*%pZ to i32*
store i32 -2147483647,i32*%p0,align 4
ret i8*%pQ
p1:
store i8*null,i8**%b,align 8
%p2=getelementptr inbounds i8,i8*%s,i64 8
%p3=bitcast i8*%p2 to i8**
%p4=load i8*,i8**%p3,align 8
%p5=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%p4)
store i8*%p5,i8**%b,align 8
%p6=call i8*@sml_alloc(i32 inreg 20)#0
%p7=getelementptr inbounds i8,i8*%p6,i64 -4
%p8=bitcast i8*%p7 to i32*
store i32 1342177296,i32*%p8,align 4
%p9=load i8*,i8**%b,align 8
%qa=bitcast i8*%p6 to i8**
store i8*%p9,i8**%qa,align 8
%qb=getelementptr inbounds i8,i8*%p6,i64 8
%qc=bitcast i8*%qb to i8**
store i8*null,i8**%qc,align 8
%qd=getelementptr inbounds i8,i8*%p6,i64 16
%qe=bitcast i8*%qd to i32*
store i32 3,i32*%qe,align 4
%qf=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eC,i64 0,i32 2)to i8*),i8*inreg%p6)
ret i8*%qf
qg:
%qh=getelementptr inbounds i8,i8*%s,i64 8
%qi=bitcast i8*%qh to i8**
%qj=load i8*,i8**%qi,align 8
%qk=getelementptr inbounds i8,i8*%qj,i64 8
%ql=bitcast i8*%qk to i8**
%qm=load i8*,i8**%ql,align 8
store i8*%qm,i8**%b,align 8
%qn=getelementptr inbounds i8,i8*%qj,i64 16
%qo=bitcast i8*%qn to i8**
%qp=load i8*,i8**%qo,align 8
store i8*%qp,i8**%c,align 8
%qq=getelementptr inbounds i8,i8*%qj,i64 24
%qr=bitcast i8*%qq to i8**
%qs=load i8*,i8**%qr,align 8
store i8*%qs,i8**%d,align 8
%qt=getelementptr inbounds i8,i8*%qj,i64 32
%qu=bitcast i8*%qt to i8**
%qv=load i8*,i8**%qu,align 8
store i8*%qv,i8**%e,align 8
%qw=getelementptr inbounds i8,i8*%qj,i64 40
%qx=bitcast i8*%qw to i8**
%qy=load i8*,i8**%qx,align 8
store i8*%qy,i8**%f,align 8
%qz=getelementptr inbounds i8,i8*%qj,i64 48
%qA=bitcast i8*%qz to i8**
%qB=load i8*,i8**%qA,align 8
%qC=getelementptr inbounds i8,i8*%qj,i64 56
%qD=bitcast i8*%qC to i8**
%qE=load i8*,i8**%qD,align 8
store i8*%qE,i8**%g,align 8
%qF=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%qB)
store i8*%qF,i8**%h,align 8
%qG=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%qH=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%qG)
store i8*%qH,i8**%b,align 8
%qI=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qJ=getelementptr inbounds i8,i8*%qI,i64 16
%qK=bitcast i8*%qJ to i8*(i8*,i8*)**
%qL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qK,align 8
%qM=bitcast i8*%qI to i8**
%qN=load i8*,i8**%qM,align 8
%qO=call fastcc i8*%qL(i8*inreg%qN,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%qP=getelementptr inbounds i8,i8*%qO,i64 16
%qQ=bitcast i8*%qP to i8*(i8*,i8*)**
%qR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qQ,align 8
%qS=bitcast i8*%qO to i8**
%qT=load i8*,i8**%qS,align 8
%qU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qV=call fastcc i8*%qR(i8*inreg%qT,i8*inreg%qU)
store i8*%qV,i8**%g,align 8
%qW=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qX=getelementptr inbounds i8,i8*%qW,i64 16
%qY=bitcast i8*%qX to i8*(i8*,i8*)**
%qZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qY,align 8
%q0=bitcast i8*%qW to i8**
%q1=load i8*,i8**%q0,align 8
%q2=call fastcc i8*%qZ(i8*inreg%q1,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gY,i64 0,i32 2)to i8*))
%q3=getelementptr inbounds i8,i8*%q2,i64 16
%q4=bitcast i8*%q3 to i8*(i8*,i8*)**
%q5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q4,align 8
%q6=bitcast i8*%q2 to i8**
%q7=load i8*,i8**%q6,align 8
%q8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%q9=call fastcc i8*%q5(i8*inreg%q7,i8*inreg%q8)
store i8*%q9,i8**%c,align 8
%ra=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%rb=getelementptr inbounds i8,i8*%ra,i64 16
%rc=bitcast i8*%rb to i8*(i8*,i8*)**
%rd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rc,align 8
%re=bitcast i8*%ra to i8**
%rf=load i8*,i8**%re,align 8
%rg=call fastcc i8*%rd(i8*inreg%rf,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%rh=getelementptr inbounds i8,i8*%rg,i64 16
%ri=bitcast i8*%rh to i8*(i8*,i8*)**
%rj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ri,align 8
%rk=bitcast i8*%rg to i8**
%rl=load i8*,i8**%rk,align 8
%rm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%rn=call fastcc i8*%rj(i8*inreg%rl,i8*inreg%rm)
store i8*%rn,i8**%f,align 8
%ro=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%rp=getelementptr inbounds i8,i8*%ro,i64 16
%rq=bitcast i8*%rp to i8*(i8*,i8*)**
%rr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rq,align 8
%rs=bitcast i8*%ro to i8**
%rt=load i8*,i8**%rs,align 8
%ru=call fastcc i8*%rr(i8*inreg%rt,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%rv=getelementptr inbounds i8,i8*%ru,i64 16
%rw=bitcast i8*%rv to i8*(i8*,i8*)**
%rx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rw,align 8
%ry=bitcast i8*%ru to i8**
%rz=load i8*,i8**%ry,align 8
%rA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%rB=call fastcc i8*%rx(i8*inreg%rz,i8*inreg%rA)
store i8*%rB,i8**%d,align 8
%rC=load i8*,i8**%g,align 8
%rD=icmp eq i8*%rC,null
br i1%rD,label%rR,label%rE
rE:
%rF=bitcast i8*%rC to i8**
%rG=load i8*,i8**%rF,align 8
store i8*%rG,i8**%g,align 8
%rH=call i8*@sml_alloc(i32 inreg 20)#0
%rI=getelementptr inbounds i8,i8*%rH,i64 -4
%rJ=bitcast i8*%rI to i32*
store i32 1342177296,i32*%rJ,align 4
%rK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rL=bitcast i8*%rH to i8**
store i8*%rK,i8**%rL,align 8
%rM=getelementptr inbounds i8,i8*%rH,i64 8
%rN=bitcast i8*%rM to i8**
store i8*null,i8**%rN,align 8
%rO=getelementptr inbounds i8,i8*%rH,i64 16
%rP=bitcast i8*%rO to i32*
store i32 3,i32*%rP,align 4
%rQ=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%rH)
br label%rR
rR:
%rS=phi i8*[%rQ,%rE],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%qg]
store i8*%rS,i8**%g,align 8
%rT=load i8*,i8**%c,align 8
%rU=icmp eq i8*%rT,null
br i1%rU,label%r8,label%rV
rV:
%rW=bitcast i8*%rT to i8**
%rX=load i8*,i8**%rW,align 8
store i8*%rX,i8**%c,align 8
%rY=call i8*@sml_alloc(i32 inreg 20)#0
%rZ=getelementptr inbounds i8,i8*%rY,i64 -4
%r0=bitcast i8*%rZ to i32*
store i32 1342177296,i32*%r0,align 4
%r1=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r2=bitcast i8*%rY to i8**
store i8*%r1,i8**%r2,align 8
%r3=getelementptr inbounds i8,i8*%rY,i64 8
%r4=bitcast i8*%r3 to i8**
store i8*null,i8**%r4,align 8
%r5=getelementptr inbounds i8,i8*%rY,i64 16
%r6=bitcast i8*%r5 to i32*
store i32 3,i32*%r6,align 4
%r7=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%rY)
br label%r8
r8:
%r9=phi i8*[%r7,%rV],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%rR]
store i8*%r9,i8**%c,align 8
%sa=load i8*,i8**%f,align 8
%sb=icmp eq i8*%sa,null
br i1%sb,label%sp,label%sc
sc:
%sd=bitcast i8*%sa to i8**
%se=load i8*,i8**%sd,align 8
store i8*%se,i8**%f,align 8
%sf=call i8*@sml_alloc(i32 inreg 20)#0
%sg=getelementptr inbounds i8,i8*%sf,i64 -4
%sh=bitcast i8*%sg to i32*
store i32 1342177296,i32*%sh,align 4
%si=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%sj=bitcast i8*%sf to i8**
store i8*%si,i8**%sj,align 8
%sk=getelementptr inbounds i8,i8*%sf,i64 8
%sl=bitcast i8*%sk to i8**
store i8*null,i8**%sl,align 8
%sm=getelementptr inbounds i8,i8*%sf,i64 16
%sn=bitcast i8*%sm to i32*
store i32 3,i32*%sn,align 4
%so=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%sf)
br label%sp
sp:
%sq=phi i8*[%so,%sc],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%r8]
store i8*%sq,i8**%f,align 8
%sr=load i8*,i8**%d,align 8
%ss=icmp eq i8*%sr,null
br i1%ss,label%sG,label%st
st:
%su=bitcast i8*%sr to i8**
%sv=load i8*,i8**%su,align 8
store i8*%sv,i8**%d,align 8
%sw=call i8*@sml_alloc(i32 inreg 20)#0
%sx=getelementptr inbounds i8,i8*%sw,i64 -4
%sy=bitcast i8*%sx to i32*
store i32 1342177296,i32*%sy,align 4
%sz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sA=bitcast i8*%sw to i8**
store i8*%sz,i8**%sA,align 8
%sB=getelementptr inbounds i8,i8*%sw,i64 8
%sC=bitcast i8*%sB to i8**
store i8*null,i8**%sC,align 8
%sD=getelementptr inbounds i8,i8*%sw,i64 16
%sE=bitcast i8*%sD to i32*
store i32 3,i32*%sE,align 4
%sF=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%sw)
br label%sG
sG:
%sH=phi i8*[%sF,%st],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%sp]
store i8*%sH,i8**%d,align 8
%sI=call i8*@sml_alloc(i32 inreg 20)#0
%sJ=getelementptr inbounds i8,i8*%sI,i64 -4
%sK=bitcast i8*%sJ to i32*
store i32 1342177296,i32*%sK,align 4
store i8*%sI,i8**%i,align 8
%sL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%sM=bitcast i8*%sI to i8**
store i8*%sL,i8**%sM,align 8
%sN=getelementptr inbounds i8,i8*%sI,i64 8
%sO=bitcast i8*%sN to i8**
store i8*null,i8**%sO,align 8
%sP=getelementptr inbounds i8,i8*%sI,i64 16
%sQ=bitcast i8*%sP to i32*
store i32 3,i32*%sQ,align 4
%sR=call i8*@sml_alloc(i32 inreg 20)#0
%sS=getelementptr inbounds i8,i8*%sR,i64 -4
%sT=bitcast i8*%sS to i32*
store i32 1342177296,i32*%sT,align 4
store i8*%sR,i8**%d,align 8
%sU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%sV=bitcast i8*%sR to i8**
store i8*%sU,i8**%sV,align 8
%sW=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%sX=getelementptr inbounds i8,i8*%sR,i64 8
%sY=bitcast i8*%sX to i8**
store i8*%sW,i8**%sY,align 8
%sZ=getelementptr inbounds i8,i8*%sR,i64 16
%s0=bitcast i8*%sZ to i32*
store i32 3,i32*%s0,align 4
%s1=call i8*@sml_alloc(i32 inreg 20)#0
%s2=getelementptr inbounds i8,i8*%s1,i64 -4
%s3=bitcast i8*%s2 to i32*
store i32 1342177296,i32*%s3,align 4
store i8*%s1,i8**%f,align 8
%s4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%s5=bitcast i8*%s1 to i8**
store i8*%s4,i8**%s5,align 8
%s6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%s7=getelementptr inbounds i8,i8*%s1,i64 8
%s8=bitcast i8*%s7 to i8**
store i8*%s6,i8**%s8,align 8
%s9=getelementptr inbounds i8,i8*%s1,i64 16
%ta=bitcast i8*%s9 to i32*
store i32 3,i32*%ta,align 4
%tb=call i8*@sml_alloc(i32 inreg 20)#0
%tc=getelementptr inbounds i8,i8*%tb,i64 -4
%td=bitcast i8*%tc to i32*
store i32 1342177296,i32*%td,align 4
store i8*%tb,i8**%c,align 8
%te=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tf=bitcast i8*%tb to i8**
store i8*%te,i8**%tf,align 8
%tg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%th=getelementptr inbounds i8,i8*%tb,i64 8
%ti=bitcast i8*%th to i8**
store i8*%tg,i8**%ti,align 8
%tj=getelementptr inbounds i8,i8*%tb,i64 16
%tk=bitcast i8*%tj to i32*
store i32 3,i32*%tk,align 4
%tl=call i8*@sml_alloc(i32 inreg 20)#0
%tm=getelementptr inbounds i8,i8*%tl,i64 -4
%tn=bitcast i8*%tm to i32*
store i32 1342177296,i32*%tn,align 4
store i8*%tl,i8**%d,align 8
%to=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%tp=bitcast i8*%tl to i8**
store i8*%to,i8**%tp,align 8
%tq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%tr=getelementptr inbounds i8,i8*%tl,i64 8
%ts=bitcast i8*%tr to i8**
store i8*%tq,i8**%ts,align 8
%tt=getelementptr inbounds i8,i8*%tl,i64 16
%tu=bitcast i8*%tt to i32*
store i32 3,i32*%tu,align 4
%tv=call i8*@sml_alloc(i32 inreg 20)#0
%tw=getelementptr inbounds i8,i8*%tv,i64 -4
%tx=bitcast i8*%tw to i32*
store i32 1342177296,i32*%tx,align 4
%ty=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tz=bitcast i8*%tv to i8**
store i8*%ty,i8**%tz,align 8
%tA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tB=getelementptr inbounds i8,i8*%tv,i64 8
%tC=bitcast i8*%tB to i8**
store i8*%tA,i8**%tC,align 8
%tD=getelementptr inbounds i8,i8*%tv,i64 16
%tE=bitcast i8*%tD to i32*
store i32 3,i32*%tE,align 4
%tF=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ey,i64 0,i32 2)to i8*),i8*inreg%tv)
store i8*%tF,i8**%b,align 8
%tG=call i8*@sml_alloc(i32 inreg 20)#0
%tH=getelementptr inbounds i8,i8*%tG,i64 -4
%tI=bitcast i8*%tH to i32*
store i32 1342177296,i32*%tI,align 4
store i8*%tG,i8**%c,align 8
%tJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tK=bitcast i8*%tG to i8**
store i8*%tJ,i8**%tK,align 8
%tL=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%tM=getelementptr inbounds i8,i8*%tG,i64 8
%tN=bitcast i8*%tM to i8**
store i8*%tL,i8**%tN,align 8
%tO=getelementptr inbounds i8,i8*%tG,i64 16
%tP=bitcast i8*%tO to i32*
store i32 3,i32*%tP,align 4
%tQ=call i8*@sml_alloc(i32 inreg 28)#0
%tR=getelementptr inbounds i8,i8*%tQ,i64 -4
%tS=bitcast i8*%tR to i32*
store i32 1342177304,i32*%tS,align 4
%tT=load i8*,i8**%c,align 8
%tU=bitcast i8*%tQ to i8**
store i8*%tT,i8**%tU,align 8
%tV=getelementptr inbounds i8,i8*%tQ,i64 8
%tW=bitcast i8*%tV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2229 to void(...)*),void(...)**%tW,align 8
%tX=getelementptr inbounds i8,i8*%tQ,i64 16
%tY=bitcast i8*%tX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2229 to void(...)*),void(...)**%tY,align 8
%tZ=getelementptr inbounds i8,i8*%tQ,i64 24
%t0=bitcast i8*%tZ to i32*
store i32 -2147483647,i32*%t0,align 4
ret i8*%tQ
t1:
%t2=getelementptr inbounds i8,i8*%s,i64 8
%t3=bitcast i8*%t2 to i8**
%t4=load i8*,i8**%t3,align 8
%t5=bitcast i8*%t4 to i8**
%t6=load i8*,i8**%t5,align 8
%t7=getelementptr inbounds i8,i8*%t4,i64 8
%t8=bitcast i8*%t7 to i8***
%t9=load i8**,i8***%t8,align 8
%ua=load i8*,i8**%t9,align 8
store i8*%ua,i8**%b,align 8
%ub=getelementptr inbounds i8,i8*%t4,i64 16
%uc=bitcast i8*%ub to i8**
%ud=load i8*,i8**%uc,align 8
store i8*%ud,i8**%c,align 8
%ue=icmp eq i8*%t6,null
br i1%ue,label%ul,label%uf
uf:
%ug=bitcast i8*%t6 to i32*
%uh=load i32,i32*%ug,align 4
%ui=icmp eq i32%uh,0
%uj=select i1%ui,i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hF,i64 0,i32 2)to i8*),i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hG,i64 0,i32 2)to i8*)
%uk=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%uj)
br label%ul
ul:
%um=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%t1],[%uk,%uf]
store i8*%um,i8**%d,align 8
%un=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%uo=getelementptr inbounds i8,i8*%un,i64 16
%up=bitcast i8*%uo to i8*(i8*,i8*)**
%uq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%up,align 8
%ur=bitcast i8*%un to i8**
%us=load i8*,i8**%ur,align 8
%ut=call fastcc i8*%uq(i8*inreg%us,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hH,i64 0,i32 2)to i8*))
%uu=getelementptr inbounds i8,i8*%ut,i64 16
%uv=bitcast i8*%uu to i8*(i8*,i8*)**
%uw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uv,align 8
%ux=bitcast i8*%ut to i8**
%uy=load i8*,i8**%ux,align 8
%uz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%uA=call fastcc i8*%uw(i8*inreg%uy,i8*inreg%uz)
store i8*%uA,i8**%b,align 8
%uB=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%uC=getelementptr inbounds i8,i8*%uB,i64 16
%uD=bitcast i8*%uC to i8*(i8*,i8*)**
%uE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uD,align 8
%uF=bitcast i8*%uB to i8**
%uG=load i8*,i8**%uF,align 8
%uH=call fastcc i8*%uE(i8*inreg%uG,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hI,i64 0,i32 2)to i8*))
%uI=getelementptr inbounds i8,i8*%uH,i64 16
%uJ=bitcast i8*%uI to i8*(i8*,i8*)**
%uK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uJ,align 8
%uL=bitcast i8*%uH to i8**
%uM=load i8*,i8**%uL,align 8
%uN=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%uO=call fastcc i8*%uK(i8*inreg%uM,i8*inreg%uN)
store i8*%uO,i8**%b,align 8
%uP=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%uQ=getelementptr inbounds i8,i8*%uP,i64 16
%uR=bitcast i8*%uQ to i8*(i8*,i8*)**
%uS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uR,align 8
%uT=bitcast i8*%uP to i8**
%uU=load i8*,i8**%uT,align 8
%uV=call fastcc i8*%uS(i8*inreg%uU,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%uW=getelementptr inbounds i8,i8*%uV,i64 16
%uX=bitcast i8*%uW to i8*(i8*,i8*)**
%uY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uX,align 8
%uZ=bitcast i8*%uV to i8**
%u0=load i8*,i8**%uZ,align 8
%u1=call fastcc i8*%uY(i8*inreg%u0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%u2=getelementptr inbounds i8,i8*%u1,i64 16
%u3=bitcast i8*%u2 to i8*(i8*,i8*)**
%u4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u3,align 8
%u5=bitcast i8*%u1 to i8**
%u6=load i8*,i8**%u5,align 8
%u7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u8=call fastcc i8*%u4(i8*inreg%u6,i8*inreg%u7)
store i8*%u8,i8**%b,align 8
%u9=call i8*@sml_alloc(i32 inreg 20)#0
%va=getelementptr inbounds i8,i8*%u9,i64 -4
%vb=bitcast i8*%va to i32*
store i32 1342177296,i32*%vb,align 4
store i8*%u9,i8**%e,align 8
%vc=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%vd=bitcast i8*%u9 to i8**
store i8*%vc,i8**%vd,align 8
%ve=getelementptr inbounds i8,i8*%u9,i64 8
%vf=bitcast i8*%ve to i8**
store i8*null,i8**%vf,align 8
%vg=getelementptr inbounds i8,i8*%u9,i64 16
%vh=bitcast i8*%vg to i32*
store i32 3,i32*%vh,align 4
%vi=call i8*@sml_alloc(i32 inreg 20)#0
%vj=getelementptr inbounds i8,i8*%vi,i64 -4
%vk=bitcast i8*%vj to i32*
store i32 1342177296,i32*%vk,align 4
%vl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vm=bitcast i8*%vi to i8**
store i8*%vl,i8**%vm,align 8
%vn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vo=getelementptr inbounds i8,i8*%vi,i64 8
%vp=bitcast i8*%vo to i8**
store i8*%vn,i8**%vp,align 8
%vq=getelementptr inbounds i8,i8*%vi,i64 16
%vr=bitcast i8*%vq to i32*
store i32 3,i32*%vr,align 4
%vs=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eu,i64 0,i32 2)to i8*),i8*inreg%vi)
store i8*%vs,i8**%b,align 8
%vt=call i8*@sml_alloc(i32 inreg 20)#0
%vu=getelementptr inbounds i8,i8*%vt,i64 -4
%vv=bitcast i8*%vu to i32*
store i32 1342177296,i32*%vv,align 4
store i8*%vt,i8**%d,align 8
%vw=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%vx=bitcast i8*%vt to i8**
store i8*%vw,i8**%vx,align 8
%vy=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%vz=getelementptr inbounds i8,i8*%vt,i64 8
%vA=bitcast i8*%vz to i8**
store i8*%vy,i8**%vA,align 8
%vB=getelementptr inbounds i8,i8*%vt,i64 16
%vC=bitcast i8*%vB to i32*
store i32 3,i32*%vC,align 4
%vD=call i8*@sml_alloc(i32 inreg 28)#0
%vE=getelementptr inbounds i8,i8*%vD,i64 -4
%vF=bitcast i8*%vE to i32*
store i32 1342177304,i32*%vF,align 4
%vG=load i8*,i8**%d,align 8
%vH=bitcast i8*%vD to i8**
store i8*%vG,i8**%vH,align 8
%vI=getelementptr inbounds i8,i8*%vD,i64 8
%vJ=bitcast i8*%vI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2228 to void(...)*),void(...)**%vJ,align 8
%vK=getelementptr inbounds i8,i8*%vD,i64 16
%vL=bitcast i8*%vK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2228 to void(...)*),void(...)**%vL,align 8
%vM=getelementptr inbounds i8,i8*%vD,i64 24
%vN=bitcast i8*%vM to i32*
store i32 -2147483647,i32*%vN,align 4
ret i8*%vD
vO:
%vP=getelementptr inbounds i8,i8*%s,i64 8
%vQ=bitcast i8*%vP to i8**
%vR=load i8*,i8**%vQ,align 8
%vS=bitcast i8*%vR to i8**
%vT=load i8*,i8**%vS,align 8
%vU=bitcast i8*%vT to i8**
%vV=load i8*,i8**%vU,align 8
store i8*%vV,i8**%b,align 8
%vW=getelementptr inbounds i8,i8*%vT,i64 8
%vX=bitcast i8*%vW to i8**
%vY=load i8*,i8**%vX,align 8
store i8*%vY,i8**%c,align 8
%vZ=getelementptr inbounds i8,i8*%vR,i64 8
%v0=bitcast i8*%vZ to i8**
%v1=load i8*,i8**%v0,align 8
store i8*%v1,i8**%d,align 8
%v2=getelementptr inbounds i8,i8*%vR,i64 16
%v3=bitcast i8*%v2 to i8**
%v4=load i8*,i8**%v3,align 8
store i8*%v4,i8**%e,align 8
%v5=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%v6=getelementptr inbounds i8,i8*%v5,i64 16
%v7=bitcast i8*%v6 to i8*(i8*,i8*)**
%v8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v7,align 8
%v9=bitcast i8*%v5 to i8**
%wa=load i8*,i8**%v9,align 8
store i8*%wa,i8**%f,align 8
%wb=call i8*@sml_alloc(i32 inreg 12)#0
%wc=getelementptr inbounds i8,i8*%wb,i64 -4
%wd=bitcast i8*%wc to i32*
store i32 1342177288,i32*%wd,align 4
store i8*%wb,i8**%g,align 8
%we=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%wf=bitcast i8*%wb to i8**
store i8*%we,i8**%wf,align 8
%wg=getelementptr inbounds i8,i8*%wb,i64 8
%wh=bitcast i8*%wg to i32*
store i32 1,i32*%wh,align 4
%wi=call i8*@sml_alloc(i32 inreg 28)#0
%wj=getelementptr inbounds i8,i8*%wi,i64 -4
%wk=bitcast i8*%wj to i32*
store i32 1342177304,i32*%wk,align 4
%wl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wm=bitcast i8*%wi to i8**
store i8*%wl,i8**%wm,align 8
%wn=getelementptr inbounds i8,i8*%wi,i64 8
%wo=bitcast i8*%wn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2212 to void(...)*),void(...)**%wo,align 8
%wp=getelementptr inbounds i8,i8*%wi,i64 16
%wq=bitcast i8*%wp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2212 to void(...)*),void(...)**%wq,align 8
%wr=getelementptr inbounds i8,i8*%wi,i64 24
%ws=bitcast i8*%wr to i32*
store i32 -2147483647,i32*%ws,align 4
%wt=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wu=call fastcc i8*%v8(i8*inreg%wt,i8*inreg%wi)
%wv=getelementptr inbounds i8,i8*%wu,i64 16
%ww=bitcast i8*%wv to i8*(i8*,i8*)**
%wx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ww,align 8
%wy=bitcast i8*%wu to i8**
%wz=load i8*,i8**%wy,align 8
%wA=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%wB=call fastcc i8*%wx(i8*inreg%wz,i8*inreg%wA)
store i8*%wB,i8**%b,align 8
%wC=load i8*,i8**%e,align 8
%wD=icmp eq i8*%wC,null
store i8*null,i8**%e,align 8
br i1%wD,label%xf,label%wE
wE:
%wF=bitcast i8*%wC to i8**
%wG=load i8*,i8**%wF,align 8
%wH=bitcast i8*%wG to i8**
%wI=load i8*,i8**%wH,align 8
%wJ=getelementptr inbounds i8,i8*%wG,i64 8
%wK=bitcast i8*%wJ to i8**
%wL=load i8*,i8**%wK,align 8
store i8*%wL,i8**%c,align 8
%wM=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%wI)
store i8*%wM,i8**%e,align 8
%wN=call i8*@sml_alloc(i32 inreg 20)#0
%wO=getelementptr inbounds i8,i8*%wN,i64 -4
%wP=bitcast i8*%wO to i32*
store i32 1342177296,i32*%wP,align 4
store i8*%wN,i8**%f,align 8
%wQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%wR=bitcast i8*%wN to i8**
store i8*%wQ,i8**%wR,align 8
%wS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wT=getelementptr inbounds i8,i8*%wN,i64 8
%wU=bitcast i8*%wT to i8**
store i8*%wS,i8**%wU,align 8
%wV=getelementptr inbounds i8,i8*%wN,i64 16
%wW=bitcast i8*%wV to i32*
store i32 3,i32*%wW,align 4
%wX=call i8*@sml_alloc(i32 inreg 28)#0
%wY=getelementptr inbounds i8,i8*%wX,i64 -4
%wZ=bitcast i8*%wY to i32*
store i32 1342177304,i32*%wZ,align 4
store i8*%wX,i8**%c,align 8
%w0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%w1=bitcast i8*%wX to i8**
store i8*%w0,i8**%w1,align 8
%w2=getelementptr inbounds i8,i8*%wX,i64 8
%w3=bitcast i8*%w2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2213 to void(...)*),void(...)**%w3,align 8
%w4=getelementptr inbounds i8,i8*%wX,i64 16
%w5=bitcast i8*%w4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2213 to void(...)*),void(...)**%w5,align 8
%w6=getelementptr inbounds i8,i8*%wX,i64 24
%w7=bitcast i8*%w6 to i32*
store i32 -2147483647,i32*%w7,align 4
%w8=call i8*@sml_alloc(i32 inreg 12)#0
%w9=getelementptr inbounds i8,i8*%w8,i64 -4
%xa=bitcast i8*%w9 to i32*
store i32 1342177288,i32*%xa,align 4
%xb=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%xc=bitcast i8*%w8 to i8**
store i8*%xb,i8**%xc,align 8
%xd=getelementptr inbounds i8,i8*%w8,i64 8
%xe=bitcast i8*%xd to i32*
store i32 1,i32*%xe,align 4
br label%xf
xf:
%xg=phi i8*[%w8,%wE],[null,%vO]
store i8*%xg,i8**%c,align 8
%xh=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@hD,i64 0,i32 2,i64 0))
store i8*%xh,i8**%e,align 8
%xi=load i8*,i8**%b,align 8
%xj=icmp eq i8*%xi,null
br i1%xj,label%xx,label%xk
xk:
%xl=bitcast i8*%xi to i8**
%xm=load i8*,i8**%xl,align 8
store i8*%xm,i8**%b,align 8
%xn=call i8*@sml_alloc(i32 inreg 20)#0
%xo=getelementptr inbounds i8,i8*%xn,i64 -4
%xp=bitcast i8*%xo to i32*
store i32 1342177296,i32*%xp,align 4
%xq=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%xr=bitcast i8*%xn to i8**
store i8*%xq,i8**%xr,align 8
%xs=getelementptr inbounds i8,i8*%xn,i64 8
%xt=bitcast i8*%xs to i8**
store i8*null,i8**%xt,align 8
%xu=getelementptr inbounds i8,i8*%xn,i64 16
%xv=bitcast i8*%xu to i32*
store i32 3,i32*%xv,align 4
%xw=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%xn)
br label%xx
xx:
%xy=phi i8*[%xw,%xk],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%xf]
store i8*%xy,i8**%b,align 8
%xz=call i8*@sml_alloc(i32 inreg 20)#0
%xA=getelementptr inbounds i8,i8*%xz,i64 -4
%xB=bitcast i8*%xA to i32*
store i32 1342177296,i32*%xB,align 4
store i8*%xz,i8**%f,align 8
%xC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%xD=bitcast i8*%xz to i8**
store i8*%xC,i8**%xD,align 8
%xE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%xF=getelementptr inbounds i8,i8*%xz,i64 8
%xG=bitcast i8*%xF to i8**
store i8*%xE,i8**%xG,align 8
%xH=getelementptr inbounds i8,i8*%xz,i64 16
%xI=bitcast i8*%xH to i32*
store i32 3,i32*%xI,align 4
%xJ=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@hE,i64 0,i32 2,i64 0))
store i8*%xJ,i8**%b,align 8
%xK=load i8*,i8**%c,align 8
%xL=icmp eq i8*%xK,null
br i1%xL,label%xZ,label%xM
xM:
%xN=bitcast i8*%xK to i8**
%xO=load i8*,i8**%xN,align 8
store i8*%xO,i8**%c,align 8
%xP=call i8*@sml_alloc(i32 inreg 20)#0
%xQ=getelementptr inbounds i8,i8*%xP,i64 -4
%xR=bitcast i8*%xQ to i32*
store i32 1342177296,i32*%xR,align 4
%xS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%xT=bitcast i8*%xP to i8**
store i8*%xS,i8**%xT,align 8
%xU=getelementptr inbounds i8,i8*%xP,i64 8
%xV=bitcast i8*%xU to i8**
store i8*null,i8**%xV,align 8
%xW=getelementptr inbounds i8,i8*%xP,i64 16
%xX=bitcast i8*%xW to i32*
store i32 3,i32*%xX,align 4
%xY=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%xP)
br label%xZ
xZ:
%x0=phi i8*[%xY,%xM],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%xx]
store i8*%x0,i8**%c,align 8
%x1=call i8*@sml_alloc(i32 inreg 20)#0
%x2=getelementptr inbounds i8,i8*%x1,i64 -4
%x3=bitcast i8*%x2 to i32*
store i32 1342177296,i32*%x3,align 4
store i8*%x1,i8**%e,align 8
%x4=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%x5=bitcast i8*%x1 to i8**
store i8*%x4,i8**%x5,align 8
%x6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x7=getelementptr inbounds i8,i8*%x1,i64 8
%x8=bitcast i8*%x7 to i8**
store i8*%x6,i8**%x8,align 8
%x9=getelementptr inbounds i8,i8*%x1,i64 16
%ya=bitcast i8*%x9 to i32*
store i32 3,i32*%ya,align 4
%yb=call i8*@sml_alloc(i32 inreg 20)#0
%yc=getelementptr inbounds i8,i8*%yb,i64 -4
%yd=bitcast i8*%yc to i32*
store i32 1342177296,i32*%yd,align 4
store i8*%yb,i8**%c,align 8
%ye=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%yf=bitcast i8*%yb to i8**
store i8*%ye,i8**%yf,align 8
%yg=getelementptr inbounds i8,i8*%yb,i64 8
%yh=bitcast i8*%yg to i8**
store i8*null,i8**%yh,align 8
%yi=getelementptr inbounds i8,i8*%yb,i64 16
%yj=bitcast i8*%yi to i32*
store i32 3,i32*%yj,align 4
%yk=call i8*@sml_alloc(i32 inreg 20)#0
%yl=getelementptr inbounds i8,i8*%yk,i64 -4
%ym=bitcast i8*%yl to i32*
store i32 1342177296,i32*%ym,align 4
store i8*%yk,i8**%b,align 8
%yn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%yo=bitcast i8*%yk to i8**
store i8*%yn,i8**%yo,align 8
%yp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yq=getelementptr inbounds i8,i8*%yk,i64 8
%yr=bitcast i8*%yq to i8**
store i8*%yp,i8**%yr,align 8
%ys=getelementptr inbounds i8,i8*%yk,i64 16
%yt=bitcast i8*%ys to i32*
store i32 3,i32*%yt,align 4
%yu=call i8*@sml_alloc(i32 inreg 12)#0
%yv=getelementptr inbounds i8,i8*%yu,i64 -4
%yw=bitcast i8*%yv to i32*
store i32 1342177288,i32*%yw,align 4
store i8*%yu,i8**%c,align 8
%yx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%yy=bitcast i8*%yu to i8**
store i8*%yx,i8**%yy,align 8
%yz=getelementptr inbounds i8,i8*%yu,i64 8
%yA=bitcast i8*%yz to i32*
store i32 1,i32*%yA,align 4
%yB=call i8*@sml_alloc(i32 inreg 28)#0
%yC=getelementptr inbounds i8,i8*%yB,i64 -4
%yD=bitcast i8*%yC to i32*
store i32 1342177304,i32*%yD,align 4
store i8*%yB,i8**%b,align 8
%yE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%yF=bitcast i8*%yB to i8**
store i8*%yE,i8**%yF,align 8
%yG=getelementptr inbounds i8,i8*%yB,i64 8
%yH=bitcast i8*%yG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2217 to void(...)*),void(...)**%yH,align 8
%yI=getelementptr inbounds i8,i8*%yB,i64 16
%yJ=bitcast i8*%yI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2217 to void(...)*),void(...)**%yJ,align 8
%yK=getelementptr inbounds i8,i8*%yB,i64 24
%yL=bitcast i8*%yK to i32*
store i32 -2147483647,i32*%yL,align 4
%yM=call i8*@sml_alloc(i32 inreg 20)#0
%yN=getelementptr inbounds i8,i8*%yM,i64 -4
%yO=bitcast i8*%yN to i32*
store i32 1342177296,i32*%yO,align 4
%yP=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%yQ=bitcast i8*%yM to i8**
store i8*%yP,i8**%yQ,align 8
%yR=getelementptr inbounds i8,i8*%yM,i64 8
%yS=bitcast i8*%yR to i8**
store i8*null,i8**%yS,align 8
%yT=getelementptr inbounds i8,i8*%yM,i64 16
%yU=bitcast i8*%yT to i32*
store i32 3,i32*%yU,align 4
%yV=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ea,i64 0,i32 2)to i8*),i8*inreg%yM)
store i8*%yV,i8**%b,align 8
%yW=call i8*@sml_alloc(i32 inreg 20)#0
%yX=getelementptr inbounds i8,i8*%yW,i64 -4
%yY=bitcast i8*%yX to i32*
store i32 1342177296,i32*%yY,align 4
store i8*%yW,i8**%c,align 8
%yZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y0=bitcast i8*%yW to i8**
store i8*%yZ,i8**%y0,align 8
%y1=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%y2=getelementptr inbounds i8,i8*%yW,i64 8
%y3=bitcast i8*%y2 to i8**
store i8*%y1,i8**%y3,align 8
%y4=getelementptr inbounds i8,i8*%yW,i64 16
%y5=bitcast i8*%y4 to i32*
store i32 3,i32*%y5,align 4
%y6=call i8*@sml_alloc(i32 inreg 28)#0
%y7=getelementptr inbounds i8,i8*%y6,i64 -4
%y8=bitcast i8*%y7 to i32*
store i32 1342177304,i32*%y8,align 4
%y9=load i8*,i8**%c,align 8
%za=bitcast i8*%y6 to i8**
store i8*%y9,i8**%za,align 8
%zb=getelementptr inbounds i8,i8*%y6,i64 8
%zc=bitcast i8*%zb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2218 to void(...)*),void(...)**%zc,align 8
%zd=getelementptr inbounds i8,i8*%y6,i64 16
%ze=bitcast i8*%zd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2218 to void(...)*),void(...)**%ze,align 8
%zf=getelementptr inbounds i8,i8*%y6,i64 24
%zg=bitcast i8*%zf to i32*
store i32 -2147483647,i32*%zg,align 4
ret i8*%y6
zh:
%zi=getelementptr inbounds i8,i8*%s,i64 8
%zj=bitcast i8*%zi to i8**
%zk=load i8*,i8**%zj,align 8
%zl=bitcast i8*%zk to i8**
%zm=load i8*,i8**%zl,align 8
store i8*%zm,i8**%b,align 8
%zn=getelementptr inbounds i8,i8*%zk,i64 8
%zo=bitcast i8*%zn to i8**
%zp=load i8*,i8**%zo,align 8
store i8*%zp,i8**%c,align 8
%zq=getelementptr inbounds i8,i8*%zk,i64 16
%zr=bitcast i8*%zq to i8**
%zs=load i8*,i8**%zr,align 8
%zt=bitcast i8*%zs to i8**
%zu=load i8*,i8**%zt,align 8
%zv=getelementptr inbounds i8,i8*%zs,i64 8
%zw=bitcast i8*%zv to i8**
%zx=load i8*,i8**%zw,align 8
store i8*%zx,i8**%d,align 8
%zy=getelementptr inbounds i8,i8*%zs,i64 16
%zz=bitcast i8*%zy to i8**
%zA=load i8*,i8**%zz,align 8
store i8*%zA,i8**%e,align 8
%zB=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%zu)
store i8*%zB,i8**%f,align 8
%zC=call i8*@sml_alloc(i32 inreg 20)#0
%zD=getelementptr inbounds i8,i8*%zC,i64 -4
%zE=bitcast i8*%zD to i32*
store i32 1342177296,i32*%zE,align 4
store i8*%zC,i8**%g,align 8
%zF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zG=bitcast i8*%zC to i8**
store i8*%zF,i8**%zG,align 8
%zH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%zI=getelementptr inbounds i8,i8*%zC,i64 8
%zJ=bitcast i8*%zI to i8**
store i8*%zH,i8**%zJ,align 8
%zK=getelementptr inbounds i8,i8*%zC,i64 16
%zL=bitcast i8*%zK to i32*
store i32 3,i32*%zL,align 4
%zM=call i8*@sml_alloc(i32 inreg 28)#0
%zN=getelementptr inbounds i8,i8*%zM,i64 -4
%zO=bitcast i8*%zN to i32*
store i32 1342177304,i32*%zO,align 4
store i8*%zM,i8**%i,align 8
%zP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%zQ=bitcast i8*%zM to i8**
store i8*%zP,i8**%zQ,align 8
%zR=getelementptr inbounds i8,i8*%zM,i64 8
%zS=bitcast i8*%zR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2196 to void(...)*),void(...)**%zS,align 8
%zT=getelementptr inbounds i8,i8*%zM,i64 16
%zU=bitcast i8*%zT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2196 to void(...)*),void(...)**%zU,align 8
%zV=getelementptr inbounds i8,i8*%zM,i64 24
%zW=bitcast i8*%zV to i32*
store i32 -2147483647,i32*%zW,align 4
%zX=load i8*,i8**%b,align 8
%zY=icmp eq i8*%zX,null
br i1%zY,label%A4,label%zZ
zZ:
%z0=bitcast i8*%zX to i8**
%z1=load i8*,i8**%z0,align 8
%z2=bitcast i8*%z1 to i8**
%z3=load i8*,i8**%z2,align 8
store i8*%z3,i8**%b,align 8
%z4=getelementptr inbounds i8,i8*%z1,i64 8
%z5=bitcast i8*%z4 to i8**
%z6=load i8*,i8**%z5,align 8
store i8*%z6,i8**%e,align 8
%z7=getelementptr inbounds i8,i8*%z1,i64 16
%z8=bitcast i8*%z7 to i8**
%z9=load i8*,i8**%z8,align 8
store i8*%z9,i8**%f,align 8
%Aa=getelementptr inbounds i8,i8*%z1,i64 24
%Ab=bitcast i8*%Aa to i8**
%Ac=load i8*,i8**%Ab,align 8
store i8*%Ac,i8**%g,align 8
%Ad=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ae=getelementptr inbounds i8,i8*%Ad,i64 16
%Af=bitcast i8*%Ae to i8*(i8*,i8*)**
%Ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Af,align 8
%Ah=bitcast i8*%Ad to i8**
%Ai=load i8*,i8**%Ah,align 8
store i8*%Ai,i8**%h,align 8
%Aj=call i8*@sml_alloc(i32 inreg 12)#0
%Ak=getelementptr inbounds i8,i8*%Aj,i64 -4
%Al=bitcast i8*%Ak to i32*
store i32 1342177288,i32*%Al,align 4
store i8*%Aj,i8**%j,align 8
%Am=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%An=bitcast i8*%Aj to i8**
store i8*%Am,i8**%An,align 8
%Ao=getelementptr inbounds i8,i8*%Aj,i64 8
%Ap=bitcast i8*%Ao to i32*
store i32 1,i32*%Ap,align 4
%Aq=call i8*@sml_alloc(i32 inreg 28)#0
%Ar=getelementptr inbounds i8,i8*%Aq,i64 -4
%As=bitcast i8*%Ar to i32*
store i32 1342177304,i32*%As,align 4
%At=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%Au=bitcast i8*%Aq to i8**
store i8*%At,i8**%Au,align 8
%Av=getelementptr inbounds i8,i8*%Aq,i64 8
%Aw=bitcast i8*%Av to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2198 to void(...)*),void(...)**%Aw,align 8
%Ax=getelementptr inbounds i8,i8*%Aq,i64 16
%Ay=bitcast i8*%Ax to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2198 to void(...)*),void(...)**%Ay,align 8
%Az=getelementptr inbounds i8,i8*%Aq,i64 24
%AA=bitcast i8*%Az to i32*
store i32 -2147483647,i32*%AA,align 4
%AB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%AC=call fastcc i8*%Ag(i8*inreg%AB,i8*inreg%Aq)
%AD=getelementptr inbounds i8,i8*%AC,i64 16
%AE=bitcast i8*%AD to i8*(i8*,i8*)**
%AF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%AE,align 8
%AG=bitcast i8*%AC to i8**
%AH=load i8*,i8**%AG,align 8
%AI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AJ=call fastcc i8*%AF(i8*inreg%AH,i8*inreg%AI)
store i8*%AJ,i8**%e,align 8
%AK=call i8*@sml_alloc(i32 inreg 28)#0
%AL=getelementptr inbounds i8,i8*%AK,i64 -4
%AM=bitcast i8*%AL to i32*
store i32 1342177304,i32*%AM,align 4
store i8*%AK,i8**%g,align 8
%AN=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%AO=bitcast i8*%AK to i8**
store i8*%AN,i8**%AO,align 8
%AP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AQ=getelementptr inbounds i8,i8*%AK,i64 8
%AR=bitcast i8*%AQ to i8**
store i8*%AP,i8**%AR,align 8
%AS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%AT=getelementptr inbounds i8,i8*%AK,i64 16
%AU=bitcast i8*%AT to i8**
store i8*%AS,i8**%AU,align 8
%AV=getelementptr inbounds i8,i8*%AK,i64 24
%AW=bitcast i8*%AV to i32*
store i32 7,i32*%AW,align 4
%AX=call i8*@sml_alloc(i32 inreg 12)#0
%AY=getelementptr inbounds i8,i8*%AX,i64 -4
%AZ=bitcast i8*%AY to i32*
store i32 1342177288,i32*%AZ,align 4
%A0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%A1=bitcast i8*%AX to i8**
store i8*%A0,i8**%A1,align 8
%A2=getelementptr inbounds i8,i8*%AX,i64 8
%A3=bitcast i8*%A2 to i32*
store i32 1,i32*%A3,align 4
br label%A4
A4:
%A5=phi i8*[%AX,%zZ],[null,%zh]
store i8*%A5,i8**%b,align 8
%A6=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[7x i8]}>,<{[4x i8],i32,[7x i8]}>*@hE,i64 0,i32 2,i64 0))
store i8*%A6,i8**%e,align 8
%A7=call i8*@sml_alloc(i32 inreg 12)#0
%A8=getelementptr inbounds i8,i8*%A7,i64 -4
%A9=bitcast i8*%A8 to i32*
store i32 1342177288,i32*%A9,align 4
store i8*%A7,i8**%f,align 8
%Ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Bb=bitcast i8*%A7 to i8**
store i8*%Ba,i8**%Bb,align 8
%Bc=getelementptr inbounds i8,i8*%A7,i64 8
%Bd=bitcast i8*%Bc to i32*
store i32 1,i32*%Bd,align 4
%Be=call i8*@sml_alloc(i32 inreg 28)#0
%Bf=getelementptr inbounds i8,i8*%Be,i64 -4
%Bg=bitcast i8*%Bf to i32*
store i32 1342177304,i32*%Bg,align 4
store i8*%Be,i8**%d,align 8
%Bh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Bi=bitcast i8*%Be to i8**
store i8*%Bh,i8**%Bi,align 8
%Bj=getelementptr inbounds i8,i8*%Be,i64 8
%Bk=bitcast i8*%Bj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2200 to void(...)*),void(...)**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%Be,i64 16
%Bm=bitcast i8*%Bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2200 to void(...)*),void(...)**%Bm,align 8
%Bn=getelementptr inbounds i8,i8*%Be,i64 24
%Bo=bitcast i8*%Bn to i32*
store i32 -2147483647,i32*%Bo,align 4
%Bp=call i8*@sml_alloc(i32 inreg 20)#0
%Bq=getelementptr inbounds i8,i8*%Bp,i64 -4
%Br=bitcast i8*%Bq to i32*
store i32 1342177296,i32*%Br,align 4
store i8*%Bp,i8**%f,align 8
%Bs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Bt=bitcast i8*%Bp to i8**
store i8*%Bs,i8**%Bt,align 8
%Bu=getelementptr inbounds i8,i8*%Bp,i64 8
%Bv=bitcast i8*%Bu to i8**
store i8*null,i8**%Bv,align 8
%Bw=getelementptr inbounds i8,i8*%Bp,i64 16
%Bx=bitcast i8*%Bw to i32*
store i32 3,i32*%Bx,align 4
%By=call i8*@sml_alloc(i32 inreg 20)#0
%Bz=getelementptr inbounds i8,i8*%By,i64 -4
%BA=bitcast i8*%Bz to i32*
store i32 1342177296,i32*%BA,align 4
store i8*%By,i8**%d,align 8
%BB=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%BC=bitcast i8*%By to i8**
store i8*%BB,i8**%BC,align 8
%BD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%BE=getelementptr inbounds i8,i8*%By,i64 8
%BF=bitcast i8*%BE to i8**
store i8*%BD,i8**%BF,align 8
%BG=getelementptr inbounds i8,i8*%By,i64 16
%BH=bitcast i8*%BG to i32*
store i32 3,i32*%BH,align 4
%BI=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%BJ=getelementptr inbounds i8,i8*%BI,i64 16
%BK=bitcast i8*%BJ to i8*(i8*,i8*)**
%BL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%BK,align 8
%BM=bitcast i8*%BI to i8**
%BN=load i8*,i8**%BM,align 8
%BO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%BP=call fastcc i8*%BL(i8*inreg%BN,i8*inreg%BO)
store i8*%BP,i8**%d,align 8
%BQ=call i8*@sml_alloc(i32 inreg 12)#0
%BR=getelementptr inbounds i8,i8*%BQ,i64 -4
%BS=bitcast i8*%BR to i32*
store i32 1342177288,i32*%BS,align 4
store i8*%BQ,i8**%f,align 8
%BT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%BU=bitcast i8*%BQ to i8**
store i8*%BT,i8**%BU,align 8
%BV=getelementptr inbounds i8,i8*%BQ,i64 8
%BW=bitcast i8*%BV to i32*
store i32 1,i32*%BW,align 4
%BX=call i8*@sml_alloc(i32 inreg 28)#0
%BY=getelementptr inbounds i8,i8*%BX,i64 -4
%BZ=bitcast i8*%BY to i32*
store i32 1342177304,i32*%BZ,align 4
store i8*%BX,i8**%d,align 8
%B0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B1=bitcast i8*%BX to i8**
store i8*%B0,i8**%B1,align 8
%B2=getelementptr inbounds i8,i8*%BX,i64 8
%B3=bitcast i8*%B2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2202 to void(...)*),void(...)**%B3,align 8
%B4=getelementptr inbounds i8,i8*%BX,i64 16
%B5=bitcast i8*%B4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2202 to void(...)*),void(...)**%B5,align 8
%B6=getelementptr inbounds i8,i8*%BX,i64 24
%B7=bitcast i8*%B6 to i32*
store i32 -2147483647,i32*%B7,align 4
%B8=call i8*@sml_alloc(i32 inreg 20)#0
%B9=getelementptr inbounds i8,i8*%B8,i64 -4
%Ca=bitcast i8*%B9 to i32*
store i32 1342177296,i32*%Ca,align 4
store i8*%B8,i8**%f,align 8
%Cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Cc=bitcast i8*%B8 to i8**
store i8*%Cb,i8**%Cc,align 8
%Cd=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ce=getelementptr inbounds i8,i8*%B8,i64 8
%Cf=bitcast i8*%Ce to i8**
store i8*%Cd,i8**%Cf,align 8
%Cg=getelementptr inbounds i8,i8*%B8,i64 16
%Ch=bitcast i8*%Cg to i32*
store i32 3,i32*%Ch,align 4
%Ci=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[6x i8]}>,<{[4x i8],i32,[6x i8]}>*@hC,i64 0,i32 2,i64 0))
store i8*%Ci,i8**%g,align 8
%Cj=load i8*,i8**%b,align 8
%Ck=icmp eq i8*%Cj,null
br i1%Ck,label%Eg,label%Cl
Cl:
%Cm=bitcast i8*%Cj to i8**
%Cn=load i8*,i8**%Cm,align 8
%Co=bitcast i8*%Cn to i8**
%Cp=load i8*,i8**%Co,align 8
store i8*%Cp,i8**%b,align 8
%Cq=getelementptr inbounds i8,i8*%Cn,i64 8
%Cr=bitcast i8*%Cq to i8**
%Cs=load i8*,i8**%Cr,align 8
store i8*%Cs,i8**%d,align 8
%Ct=getelementptr inbounds i8,i8*%Cn,i64 16
%Cu=bitcast i8*%Ct to i8**
%Cv=load i8*,i8**%Cu,align 8
store i8*%Cv,i8**%e,align 8
%Cw=call i8*@sml_alloc(i32 inreg 12)#0
%Cx=getelementptr inbounds i8,i8*%Cw,i64 -4
%Cy=bitcast i8*%Cx to i32*
store i32 1342177288,i32*%Cy,align 4
store i8*%Cw,i8**%h,align 8
%Cz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%CA=bitcast i8*%Cw to i8**
store i8*%Cz,i8**%CA,align 8
%CB=getelementptr inbounds i8,i8*%Cw,i64 8
%CC=bitcast i8*%CB to i32*
store i32 1,i32*%CC,align 4
%CD=call i8*@sml_alloc(i32 inreg 28)#0
%CE=getelementptr inbounds i8,i8*%CD,i64 -4
%CF=bitcast i8*%CE to i32*
store i32 1342177304,i32*%CF,align 4
store i8*%CD,i8**%i,align 8
%CG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%CH=bitcast i8*%CD to i8**
store i8*%CG,i8**%CH,align 8
%CI=getelementptr inbounds i8,i8*%CD,i64 8
%CJ=bitcast i8*%CI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2204 to void(...)*),void(...)**%CJ,align 8
%CK=getelementptr inbounds i8,i8*%CD,i64 16
%CL=bitcast i8*%CK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2204 to void(...)*),void(...)**%CL,align 8
%CM=getelementptr inbounds i8,i8*%CD,i64 24
%CN=bitcast i8*%CM to i32*
store i32 -2147483647,i32*%CN,align 4
%CO=load i8*,i8**%d,align 8
%CP=icmp eq i8*%CO,null
store i8*null,i8**%d,align 8
br i1%CP,label%C3,label%CQ
CQ:
%CR=bitcast i8*%CO to i8**
%CS=load i8*,i8**%CR,align 8
store i8*%CS,i8**%b,align 8
%CT=call i8*@sml_alloc(i32 inreg 20)#0
%CU=getelementptr inbounds i8,i8*%CT,i64 -4
%CV=bitcast i8*%CU to i32*
store i32 1342177296,i32*%CV,align 4
%CW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%CX=bitcast i8*%CT to i8**
store i8*%CW,i8**%CX,align 8
%CY=getelementptr inbounds i8,i8*%CT,i64 8
%CZ=bitcast i8*%CY to i8**
store i8*null,i8**%CZ,align 8
%C0=getelementptr inbounds i8,i8*%CT,i64 16
%C1=bitcast i8*%C0 to i32*
store i32 3,i32*%C1,align 4
%C2=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%CT)
br label%C3
C3:
%C4=phi i8*[%C2,%CQ],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%Cl]
store i8*%C4,i8**%b,align 8
%C5=call i8*@sml_alloc(i32 inreg 12)#0
%C6=getelementptr inbounds i8,i8*%C5,i64 -4
%C7=bitcast i8*%C6 to i32*
store i32 1342177288,i32*%C7,align 4
store i8*%C5,i8**%d,align 8
%C8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C9=bitcast i8*%C5 to i8**
store i8*%C8,i8**%C9,align 8
%Da=getelementptr inbounds i8,i8*%C5,i64 8
%Db=bitcast i8*%Da to i32*
store i32 1,i32*%Db,align 4
%Dc=call i8*@sml_alloc(i32 inreg 28)#0
%Dd=getelementptr inbounds i8,i8*%Dc,i64 -4
%De=bitcast i8*%Dd to i32*
store i32 1342177304,i32*%De,align 4
store i8*%Dc,i8**%e,align 8
%Df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Dg=bitcast i8*%Dc to i8**
store i8*%Df,i8**%Dg,align 8
%Dh=getelementptr inbounds i8,i8*%Dc,i64 8
%Di=bitcast i8*%Dh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2205 to void(...)*),void(...)**%Di,align 8
%Dj=getelementptr inbounds i8,i8*%Dc,i64 16
%Dk=bitcast i8*%Dj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2205 to void(...)*),void(...)**%Dk,align 8
%Dl=getelementptr inbounds i8,i8*%Dc,i64 24
%Dm=bitcast i8*%Dl to i32*
store i32 -2147483647,i32*%Dm,align 4
%Dn=call i8*@sml_alloc(i32 inreg 20)#0
%Do=getelementptr inbounds i8,i8*%Dn,i64 -4
%Dp=bitcast i8*%Do to i32*
store i32 1342177296,i32*%Dp,align 4
store i8*%Dn,i8**%d,align 8
%Dq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Dr=bitcast i8*%Dn to i8**
store i8*%Dq,i8**%Dr,align 8
%Ds=getelementptr inbounds i8,i8*%Dn,i64 8
%Dt=bitcast i8*%Ds to i8**
store i8*null,i8**%Dt,align 8
%Du=getelementptr inbounds i8,i8*%Dn,i64 16
%Dv=bitcast i8*%Du to i32*
store i32 3,i32*%Dv,align 4
%Dw=call i8*@sml_alloc(i32 inreg 20)#0
%Dx=getelementptr inbounds i8,i8*%Dw,i64 -4
%Dy=bitcast i8*%Dx to i32*
store i32 1342177296,i32*%Dy,align 4
store i8*%Dw,i8**%e,align 8
%Dz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%DA=bitcast i8*%Dw to i8**
store i8*%Dz,i8**%DA,align 8
%DB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%DC=getelementptr inbounds i8,i8*%Dw,i64 8
%DD=bitcast i8*%DC to i8**
store i8*%DB,i8**%DD,align 8
%DE=getelementptr inbounds i8,i8*%Dw,i64 16
%DF=bitcast i8*%DE to i32*
store i32 3,i32*%DF,align 4
%DG=call i8*@sml_alloc(i32 inreg 20)#0
%DH=getelementptr inbounds i8,i8*%DG,i64 -4
%DI=bitcast i8*%DH to i32*
store i32 1342177296,i32*%DI,align 4
store i8*%DG,i8**%b,align 8
%DJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%DK=bitcast i8*%DG to i8**
store i8*%DJ,i8**%DK,align 8
%DL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%DM=getelementptr inbounds i8,i8*%DG,i64 8
%DN=bitcast i8*%DM to i8**
store i8*%DL,i8**%DN,align 8
%DO=getelementptr inbounds i8,i8*%DG,i64 16
%DP=bitcast i8*%DO to i32*
store i32 3,i32*%DP,align 4
%DQ=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%DR=getelementptr inbounds i8,i8*%DQ,i64 16
%DS=bitcast i8*%DR to i8*(i8*,i8*)**
%DT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%DS,align 8
%DU=bitcast i8*%DQ to i8**
%DV=load i8*,i8**%DU,align 8
%DW=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%DX=call fastcc i8*%DT(i8*inreg%DV,i8*inreg%DW)
store i8*%DX,i8**%b,align 8
%DY=call i8*@sml_alloc(i32 inreg 12)#0
%DZ=getelementptr inbounds i8,i8*%DY,i64 -4
%D0=bitcast i8*%DZ to i32*
store i32 1342177288,i32*%D0,align 4
store i8*%DY,i8**%d,align 8
%D1=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%D2=bitcast i8*%DY to i8**
store i8*%D1,i8**%D2,align 8
%D3=getelementptr inbounds i8,i8*%DY,i64 8
%D4=bitcast i8*%D3 to i32*
store i32 1,i32*%D4,align 4
%D5=call i8*@sml_alloc(i32 inreg 28)#0
%D6=getelementptr inbounds i8,i8*%D5,i64 -4
%D7=bitcast i8*%D6 to i32*
store i32 1342177304,i32*%D7,align 4
%D8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D9=bitcast i8*%D5 to i8**
store i8*%D8,i8**%D9,align 8
%Ea=getelementptr inbounds i8,i8*%D5,i64 8
%Eb=bitcast i8*%Ea to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2207 to void(...)*),void(...)**%Eb,align 8
%Ec=getelementptr inbounds i8,i8*%D5,i64 16
%Ed=bitcast i8*%Ec to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2207 to void(...)*),void(...)**%Ed,align 8
%Ee=getelementptr inbounds i8,i8*%D5,i64 24
%Ef=bitcast i8*%Ee to i32*
store i32 -2147483647,i32*%Ef,align 4
br label%Eg
Eg:
%Eh=phi i8*[%D5,%C3],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%A4]
store i8*%Eh,i8**%b,align 8
%Ei=call i8*@sml_alloc(i32 inreg 20)#0
%Ej=getelementptr inbounds i8,i8*%Ei,i64 -4
%Ek=bitcast i8*%Ej to i32*
store i32 1342177296,i32*%Ek,align 4
store i8*%Ei,i8**%d,align 8
%El=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Em=bitcast i8*%Ei to i8**
store i8*%El,i8**%Em,align 8
%En=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Eo=getelementptr inbounds i8,i8*%Ei,i64 8
%Ep=bitcast i8*%Eo to i8**
store i8*%En,i8**%Ep,align 8
%Eq=getelementptr inbounds i8,i8*%Ei,i64 16
%Er=bitcast i8*%Eq to i32*
store i32 3,i32*%Er,align 4
%Es=call i8*@sml_alloc(i32 inreg 20)#0
%Et=getelementptr inbounds i8,i8*%Es,i64 -4
%Eu=bitcast i8*%Et to i32*
store i32 1342177296,i32*%Eu,align 4
store i8*%Es,i8**%e,align 8
%Ev=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ew=bitcast i8*%Es to i8**
store i8*%Ev,i8**%Ew,align 8
%Ex=getelementptr inbounds i8,i8*%Es,i64 8
%Ey=bitcast i8*%Ex to i8**
store i8*null,i8**%Ey,align 8
%Ez=getelementptr inbounds i8,i8*%Es,i64 16
%EA=bitcast i8*%Ez to i32*
store i32 3,i32*%EA,align 4
%EB=call i8*@sml_alloc(i32 inreg 20)#0
%EC=getelementptr inbounds i8,i8*%EB,i64 -4
%ED=bitcast i8*%EC to i32*
store i32 1342177296,i32*%ED,align 4
store i8*%EB,i8**%b,align 8
%EE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%EF=bitcast i8*%EB to i8**
store i8*%EE,i8**%EF,align 8
%EG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%EH=getelementptr inbounds i8,i8*%EB,i64 8
%EI=bitcast i8*%EH to i8**
store i8*%EG,i8**%EI,align 8
%EJ=getelementptr inbounds i8,i8*%EB,i64 16
%EK=bitcast i8*%EJ to i32*
store i32 3,i32*%EK,align 4
%EL=call i8*@sml_alloc(i32 inreg 12)#0
%EM=getelementptr inbounds i8,i8*%EL,i64 -4
%EN=bitcast i8*%EM to i32*
store i32 1342177288,i32*%EN,align 4
store i8*%EL,i8**%d,align 8
%EO=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%EP=bitcast i8*%EL to i8**
store i8*%EO,i8**%EP,align 8
%EQ=getelementptr inbounds i8,i8*%EL,i64 8
%ER=bitcast i8*%EQ to i32*
store i32 1,i32*%ER,align 4
%ES=call i8*@sml_alloc(i32 inreg 28)#0
%ET=getelementptr inbounds i8,i8*%ES,i64 -4
%EU=bitcast i8*%ET to i32*
store i32 1342177304,i32*%EU,align 4
store i8*%ES,i8**%b,align 8
%EV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%EW=bitcast i8*%ES to i8**
store i8*%EV,i8**%EW,align 8
%EX=getelementptr inbounds i8,i8*%ES,i64 8
%EY=bitcast i8*%EX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2209 to void(...)*),void(...)**%EY,align 8
%EZ=getelementptr inbounds i8,i8*%ES,i64 16
%E0=bitcast i8*%EZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2209 to void(...)*),void(...)**%E0,align 8
%E1=getelementptr inbounds i8,i8*%ES,i64 24
%E2=bitcast i8*%E1 to i32*
store i32 -2147483647,i32*%E2,align 4
%E3=call i8*@sml_alloc(i32 inreg 20)#0
%E4=getelementptr inbounds i8,i8*%E3,i64 -4
%E5=bitcast i8*%E4 to i32*
store i32 1342177296,i32*%E5,align 4
%E6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%E7=bitcast i8*%E3 to i8**
store i8*%E6,i8**%E7,align 8
%E8=getelementptr inbounds i8,i8*%E3,i64 8
%E9=bitcast i8*%E8 to i8**
store i8*null,i8**%E9,align 8
%Fa=getelementptr inbounds i8,i8*%E3,i64 16
%Fb=bitcast i8*%Fa to i32*
store i32 3,i32*%Fb,align 4
%Fc=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d6,i64 0,i32 2)to i8*),i8*inreg%E3)
store i8*%Fc,i8**%b,align 8
%Fd=call i8*@sml_alloc(i32 inreg 20)#0
%Fe=getelementptr inbounds i8,i8*%Fd,i64 -4
%Ff=bitcast i8*%Fe to i32*
store i32 1342177296,i32*%Ff,align 4
store i8*%Fd,i8**%d,align 8
%Fg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Fh=bitcast i8*%Fd to i8**
store i8*%Fg,i8**%Fh,align 8
%Fi=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Fj=getelementptr inbounds i8,i8*%Fd,i64 8
%Fk=bitcast i8*%Fj to i8**
store i8*%Fi,i8**%Fk,align 8
%Fl=getelementptr inbounds i8,i8*%Fd,i64 16
%Fm=bitcast i8*%Fl to i32*
store i32 3,i32*%Fm,align 4
%Fn=call i8*@sml_alloc(i32 inreg 28)#0
%Fo=getelementptr inbounds i8,i8*%Fn,i64 -4
%Fp=bitcast i8*%Fo to i32*
store i32 1342177304,i32*%Fp,align 4
%Fq=load i8*,i8**%d,align 8
%Fr=bitcast i8*%Fn to i8**
store i8*%Fq,i8**%Fr,align 8
%Fs=getelementptr inbounds i8,i8*%Fn,i64 8
%Ft=bitcast i8*%Fs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2210 to void(...)*),void(...)**%Ft,align 8
%Fu=getelementptr inbounds i8,i8*%Fn,i64 16
%Fv=bitcast i8*%Fu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2210 to void(...)*),void(...)**%Fv,align 8
%Fw=getelementptr inbounds i8,i8*%Fn,i64 24
%Fx=bitcast i8*%Fw to i32*
store i32 -2147483647,i32*%Fx,align 4
ret i8*%Fn
Fy:
%Fz=getelementptr inbounds i8,i8*%s,i64 8
%FA=bitcast i8*%Fz to i8**
%FB=load i8*,i8**%FA,align 8
%FC=bitcast i8*%FB to i8**
%FD=load i8*,i8**%FC,align 8
store i8*%FD,i8**%b,align 8
%FE=getelementptr inbounds i8,i8*%FB,i64 8
%FF=bitcast i8*%FE to i8**
%FG=load i8*,i8**%FF,align 8
store i8*%FG,i8**%c,align 8
%FH=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%FI=getelementptr inbounds i8,i8*%FH,i64 16
%FJ=bitcast i8*%FI to i8*(i8*,i8*)**
%FK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FJ,align 8
%FL=bitcast i8*%FH to i8**
%FM=load i8*,i8**%FL,align 8
%FN=call fastcc i8*%FK(i8*inreg%FM,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hB,i64 0,i32 2)to i8*))
%FO=getelementptr inbounds i8,i8*%FN,i64 16
%FP=bitcast i8*%FO to i8*(i8*,i8*)**
%FQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FP,align 8
%FR=bitcast i8*%FN to i8**
%FS=load i8*,i8**%FR,align 8
%FT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%FU=call fastcc i8*%FQ(i8*inreg%FS,i8*inreg%FT)
store i8*%FU,i8**%b,align 8
%FV=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%FW=getelementptr inbounds i8,i8*%FV,i64 16
%FX=bitcast i8*%FW to i8*(i8*,i8*)**
%FY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%FX,align 8
%FZ=bitcast i8*%FV to i8**
%F0=load i8*,i8**%FZ,align 8
%F1=call fastcc i8*%FY(i8*inreg%F0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fW,i64 0,i32 2)to i8*))
%F2=getelementptr inbounds i8,i8*%F1,i64 16
%F3=bitcast i8*%F2 to i8*(i8*,i8*)**
%F4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F3,align 8
%F5=bitcast i8*%F1 to i8**
%F6=load i8*,i8**%F5,align 8
%F7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F8=call fastcc i8*%F4(i8*inreg%F6,i8*inreg%F7)
store i8*%F8,i8**%b,align 8
%F9=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Ga=getelementptr inbounds i8,i8*%F9,i64 16
%Gb=bitcast i8*%Ga to i8*(i8*,i8*)**
%Gc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Gb,align 8
%Gd=bitcast i8*%F9 to i8**
%Ge=load i8*,i8**%Gd,align 8
%Gf=call fastcc i8*%Gc(i8*inreg%Ge,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%Gg=getelementptr inbounds i8,i8*%Gf,i64 16
%Gh=bitcast i8*%Gg to i8*(i8*,i8*)**
%Gi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Gh,align 8
%Gj=bitcast i8*%Gf to i8**
%Gk=load i8*,i8**%Gj,align 8
%Gl=call fastcc i8*%Gi(i8*inreg%Gk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%Gm=getelementptr inbounds i8,i8*%Gl,i64 16
%Gn=bitcast i8*%Gm to i8*(i8*,i8*)**
%Go=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Gn,align 8
%Gp=bitcast i8*%Gl to i8**
%Gq=load i8*,i8**%Gp,align 8
%Gr=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Gs=call fastcc i8*%Go(i8*inreg%Gq,i8*inreg%Gr)
store i8*%Gs,i8**%b,align 8
%Gt=call i8*@sml_alloc(i32 inreg 20)#0
%Gu=getelementptr inbounds i8,i8*%Gt,i64 -4
%Gv=bitcast i8*%Gu to i32*
store i32 1342177296,i32*%Gv,align 4
%Gw=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Gx=bitcast i8*%Gt to i8**
store i8*%Gw,i8**%Gx,align 8
%Gy=getelementptr inbounds i8,i8*%Gt,i64 8
%Gz=bitcast i8*%Gy to i8**
store i8*null,i8**%Gz,align 8
%GA=getelementptr inbounds i8,i8*%Gt,i64 16
%GB=bitcast i8*%GA to i32*
store i32 3,i32*%GB,align 4
%GC=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@d2,i64 0,i32 2)to i8*),i8*inreg%Gt)
store i8*%GC,i8**%b,align 8
%GD=call i8*@sml_alloc(i32 inreg 20)#0
%GE=getelementptr inbounds i8,i8*%GD,i64 -4
%GF=bitcast i8*%GE to i32*
store i32 1342177296,i32*%GF,align 4
store i8*%GD,i8**%d,align 8
%GG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%GH=bitcast i8*%GD to i8**
store i8*%GG,i8**%GH,align 8
%GI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%GJ=getelementptr inbounds i8,i8*%GD,i64 8
%GK=bitcast i8*%GJ to i8**
store i8*%GI,i8**%GK,align 8
%GL=getelementptr inbounds i8,i8*%GD,i64 16
%GM=bitcast i8*%GL to i32*
store i32 3,i32*%GM,align 4
%GN=call i8*@sml_alloc(i32 inreg 28)#0
%GO=getelementptr inbounds i8,i8*%GN,i64 -4
%GP=bitcast i8*%GO to i32*
store i32 1342177304,i32*%GP,align 4
%GQ=load i8*,i8**%d,align 8
%GR=bitcast i8*%GN to i8**
store i8*%GQ,i8**%GR,align 8
%GS=getelementptr inbounds i8,i8*%GN,i64 8
%GT=bitcast i8*%GS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2195 to void(...)*),void(...)**%GT,align 8
%GU=getelementptr inbounds i8,i8*%GN,i64 16
%GV=bitcast i8*%GU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2195 to void(...)*),void(...)**%GV,align 8
%GW=getelementptr inbounds i8,i8*%GN,i64 24
%GX=bitcast i8*%GW to i32*
store i32 -2147483647,i32*%GX,align 4
ret i8*%GN
GY:
%GZ=getelementptr inbounds i8,i8*%s,i64 8
%G0=bitcast i8*%GZ to i8**
%G1=load i8*,i8**%G0,align 8
%G2=bitcast i8*%G1 to i8**
%G3=load i8*,i8**%G2,align 8
store i8*%G3,i8**%b,align 8
%G4=getelementptr inbounds i8,i8*%G1,i64 8
%G5=bitcast i8*%G4 to i8**
%G6=load i8*,i8**%G5,align 8
store i8*%G6,i8**%c,align 8
%G7=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%G8=getelementptr inbounds i8,i8*%G7,i64 16
%G9=bitcast i8*%G8 to i8*(i8*,i8*)**
%Ha=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G9,align 8
%Hb=bitcast i8*%G7 to i8**
%Hc=load i8*,i8**%Hb,align 8
%Hd=call fastcc i8*%Ha(i8*inreg%Hc,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gV,i64 0,i32 2)to i8*))
%He=getelementptr inbounds i8,i8*%Hd,i64 16
%Hf=bitcast i8*%He to i8*(i8*,i8*)**
%Hg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hf,align 8
%Hh=bitcast i8*%Hd to i8**
%Hi=load i8*,i8**%Hh,align 8
%Hj=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Hk=call fastcc i8*%Hg(i8*inreg%Hi,i8*inreg%Hj)
store i8*%Hk,i8**%b,align 8
%Hl=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Hm=getelementptr inbounds i8,i8*%Hl,i64 16
%Hn=bitcast i8*%Hm to i8*(i8*,i8*)**
%Ho=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hn,align 8
%Hp=bitcast i8*%Hl to i8**
%Hq=load i8*,i8**%Hp,align 8
%Hr=call fastcc i8*%Ho(i8*inreg%Hq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%Hs=getelementptr inbounds i8,i8*%Hr,i64 16
%Ht=bitcast i8*%Hs to i8*(i8*,i8*)**
%Hu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ht,align 8
%Hv=bitcast i8*%Hr to i8**
%Hw=load i8*,i8**%Hv,align 8
%Hx=call fastcc i8*%Hu(i8*inreg%Hw,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%Hy=getelementptr inbounds i8,i8*%Hx,i64 16
%Hz=bitcast i8*%Hy to i8*(i8*,i8*)**
%HA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Hz,align 8
%HB=bitcast i8*%Hx to i8**
%HC=load i8*,i8**%HB,align 8
%HD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%HE=call fastcc i8*%HA(i8*inreg%HC,i8*inreg%HD)
store i8*%HE,i8**%b,align 8
%HF=call i8*@sml_alloc(i32 inreg 20)#0
%HG=getelementptr inbounds i8,i8*%HF,i64 -4
%HH=bitcast i8*%HG to i32*
store i32 1342177296,i32*%HH,align 4
%HI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%HJ=bitcast i8*%HF to i8**
store i8*%HI,i8**%HJ,align 8
%HK=getelementptr inbounds i8,i8*%HF,i64 8
%HL=bitcast i8*%HK to i8**
store i8*null,i8**%HL,align 8
%HM=getelementptr inbounds i8,i8*%HF,i64 16
%HN=bitcast i8*%HM to i32*
store i32 3,i32*%HN,align 4
%HO=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dQ,i64 0,i32 2)to i8*),i8*inreg%HF)
store i8*%HO,i8**%b,align 8
%HP=call i8*@sml_alloc(i32 inreg 20)#0
%HQ=getelementptr inbounds i8,i8*%HP,i64 -4
%HR=bitcast i8*%HQ to i32*
store i32 1342177296,i32*%HR,align 4
store i8*%HP,i8**%d,align 8
%HS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%HT=bitcast i8*%HP to i8**
store i8*%HS,i8**%HT,align 8
%HU=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%HV=getelementptr inbounds i8,i8*%HP,i64 8
%HW=bitcast i8*%HV to i8**
store i8*%HU,i8**%HW,align 8
%HX=getelementptr inbounds i8,i8*%HP,i64 16
%HY=bitcast i8*%HX to i32*
store i32 3,i32*%HY,align 4
%HZ=call i8*@sml_alloc(i32 inreg 28)#0
%H0=getelementptr inbounds i8,i8*%HZ,i64 -4
%H1=bitcast i8*%H0 to i32*
store i32 1342177304,i32*%H1,align 4
%H2=load i8*,i8**%d,align 8
%H3=bitcast i8*%HZ to i8**
store i8*%H2,i8**%H3,align 8
%H4=getelementptr inbounds i8,i8*%HZ,i64 8
%H5=bitcast i8*%H4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2190 to void(...)*),void(...)**%H5,align 8
%H6=getelementptr inbounds i8,i8*%HZ,i64 16
%H7=bitcast i8*%H6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2190 to void(...)*),void(...)**%H7,align 8
%H8=getelementptr inbounds i8,i8*%HZ,i64 24
%H9=bitcast i8*%H8 to i32*
store i32 -2147483647,i32*%H9,align 4
ret i8*%HZ
Ia:
%Ib=getelementptr inbounds i8,i8*%s,i64 8
%Ic=bitcast i8*%Ib to i8**
%Id=load i8*,i8**%Ic,align 8
%Ie=bitcast i8*%Id to i8**
%If=load i8*,i8**%Ie,align 8
%Ig=getelementptr inbounds i8,i8*%Id,i64 8
%Ih=bitcast i8*%Ig to i8**
%Ii=load i8*,i8**%Ih,align 8
store i8*%Ii,i8**%b,align 8
%Ij=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%If)
store i8*%Ij,i8**%c,align 8
%Ik=call i8*@sml_alloc(i32 inreg 20)#0
%Il=getelementptr inbounds i8,i8*%Ik,i64 -4
%Im=bitcast i8*%Il to i32*
store i32 1342177296,i32*%Im,align 4
%In=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Io=bitcast i8*%Ik to i8**
store i8*%In,i8**%Io,align 8
%Ip=getelementptr inbounds i8,i8*%Ik,i64 8
%Iq=bitcast i8*%Ip to i8**
store i8*null,i8**%Iq,align 8
%Ir=getelementptr inbounds i8,i8*%Ik,i64 16
%Is=bitcast i8*%Ir to i32*
store i32 3,i32*%Is,align 4
%It=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dg,i64 0,i32 2)to i8*),i8*inreg%Ik)
store i8*%It,i8**%c,align 8
%Iu=call i8*@sml_alloc(i32 inreg 20)#0
%Iv=getelementptr inbounds i8,i8*%Iu,i64 -4
%Iw=bitcast i8*%Iv to i32*
store i32 1342177296,i32*%Iw,align 4
store i8*%Iu,i8**%d,align 8
%Ix=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Iy=bitcast i8*%Iu to i8**
store i8*%Ix,i8**%Iy,align 8
%Iz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%IA=getelementptr inbounds i8,i8*%Iu,i64 8
%IB=bitcast i8*%IA to i8**
store i8*%Iz,i8**%IB,align 8
%IC=getelementptr inbounds i8,i8*%Iu,i64 16
%ID=bitcast i8*%IC to i32*
store i32 3,i32*%ID,align 4
%IE=call i8*@sml_alloc(i32 inreg 28)#0
%IF=getelementptr inbounds i8,i8*%IE,i64 -4
%IG=bitcast i8*%IF to i32*
store i32 1342177304,i32*%IG,align 4
%IH=load i8*,i8**%d,align 8
%II=bitcast i8*%IE to i8**
store i8*%IH,i8**%II,align 8
%IJ=getelementptr inbounds i8,i8*%IE,i64 8
%IK=bitcast i8*%IJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2189 to void(...)*),void(...)**%IK,align 8
%IL=getelementptr inbounds i8,i8*%IE,i64 16
%IM=bitcast i8*%IL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2189 to void(...)*),void(...)**%IM,align 8
%IN=getelementptr inbounds i8,i8*%IE,i64 24
%IO=bitcast i8*%IN to i32*
store i32 -2147483647,i32*%IO,align 4
ret i8*%IE
IP:
%IQ=getelementptr inbounds i8,i8*%s,i64 8
%IR=bitcast i8*%IQ to i8**
%IS=load i8*,i8**%IR,align 8
%IT=bitcast i8*%IS to i8**
%IU=load i8*,i8**%IT,align 8
%IV=getelementptr inbounds i8,i8*%IS,i64 8
%IW=bitcast i8*%IV to i8**
%IX=load i8*,i8**%IW,align 8
store i8*%IX,i8**%b,align 8
%IY=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%IU)
store i8*%IY,i8**%c,align 8
%IZ=call i8*@sml_alloc(i32 inreg 20)#0
%I0=getelementptr inbounds i8,i8*%IZ,i64 -4
%I1=bitcast i8*%I0 to i32*
store i32 1342177296,i32*%I1,align 4
%I2=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%I3=bitcast i8*%IZ to i8**
store i8*%I2,i8**%I3,align 8
%I4=getelementptr inbounds i8,i8*%IZ,i64 8
%I5=bitcast i8*%I4 to i8**
store i8*null,i8**%I5,align 8
%I6=getelementptr inbounds i8,i8*%IZ,i64 16
%I7=bitcast i8*%I6 to i32*
store i32 3,i32*%I7,align 4
%I8=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c0,i64 0,i32 2)to i8*),i8*inreg%IZ)
store i8*%I8,i8**%c,align 8
%I9=call i8*@sml_alloc(i32 inreg 20)#0
%Ja=getelementptr inbounds i8,i8*%I9,i64 -4
%Jb=bitcast i8*%Ja to i32*
store i32 1342177296,i32*%Jb,align 4
store i8*%I9,i8**%d,align 8
%Jc=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Jd=bitcast i8*%I9 to i8**
store i8*%Jc,i8**%Jd,align 8
%Je=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Jf=getelementptr inbounds i8,i8*%I9,i64 8
%Jg=bitcast i8*%Jf to i8**
store i8*%Je,i8**%Jg,align 8
%Jh=getelementptr inbounds i8,i8*%I9,i64 16
%Ji=bitcast i8*%Jh to i32*
store i32 3,i32*%Ji,align 4
%Jj=call i8*@sml_alloc(i32 inreg 28)#0
%Jk=getelementptr inbounds i8,i8*%Jj,i64 -4
%Jl=bitcast i8*%Jk to i32*
store i32 1342177304,i32*%Jl,align 4
%Jm=load i8*,i8**%d,align 8
%Jn=bitcast i8*%Jj to i8**
store i8*%Jm,i8**%Jn,align 8
%Jo=getelementptr inbounds i8,i8*%Jj,i64 8
%Jp=bitcast i8*%Jo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2188 to void(...)*),void(...)**%Jp,align 8
%Jq=getelementptr inbounds i8,i8*%Jj,i64 16
%Jr=bitcast i8*%Jq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2188 to void(...)*),void(...)**%Jr,align 8
%Js=getelementptr inbounds i8,i8*%Jj,i64 24
%Jt=bitcast i8*%Js to i32*
store i32 -2147483647,i32*%Jt,align 4
ret i8*%Jj
Ju:
%Jv=getelementptr inbounds i8,i8*%s,i64 8
%Jw=bitcast i8*%Jv to i8**
%Jx=load i8*,i8**%Jw,align 8
%Jy=bitcast i8*%Jx to i8**
%Jz=load i8*,i8**%Jy,align 8
%JA=getelementptr inbounds i8,i8*%Jx,i64 8
%JB=bitcast i8*%JA to i8**
%JC=load i8*,i8**%JB,align 8
store i8*%JC,i8**%b,align 8
%JD=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Jz)
store i8*%JD,i8**%c,align 8
%JE=call i8*@sml_alloc(i32 inreg 20)#0
%JF=getelementptr inbounds i8,i8*%JE,i64 -4
%JG=bitcast i8*%JF to i32*
store i32 1342177296,i32*%JG,align 4
%JH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%JI=bitcast i8*%JE to i8**
store i8*%JH,i8**%JI,align 8
%JJ=getelementptr inbounds i8,i8*%JE,i64 8
%JK=bitcast i8*%JJ to i8**
store i8*null,i8**%JK,align 8
%JL=getelementptr inbounds i8,i8*%JE,i64 16
%JM=bitcast i8*%JL to i32*
store i32 3,i32*%JM,align 4
%JN=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cC,i64 0,i32 2)to i8*),i8*inreg%JE)
store i8*%JN,i8**%c,align 8
%JO=call i8*@sml_alloc(i32 inreg 20)#0
%JP=getelementptr inbounds i8,i8*%JO,i64 -4
%JQ=bitcast i8*%JP to i32*
store i32 1342177296,i32*%JQ,align 4
store i8*%JO,i8**%d,align 8
%JR=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%JS=bitcast i8*%JO to i8**
store i8*%JR,i8**%JS,align 8
%JT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%JU=getelementptr inbounds i8,i8*%JO,i64 8
%JV=bitcast i8*%JU to i8**
store i8*%JT,i8**%JV,align 8
%JW=getelementptr inbounds i8,i8*%JO,i64 16
%JX=bitcast i8*%JW to i32*
store i32 3,i32*%JX,align 4
%JY=call i8*@sml_alloc(i32 inreg 28)#0
%JZ=getelementptr inbounds i8,i8*%JY,i64 -4
%J0=bitcast i8*%JZ to i32*
store i32 1342177304,i32*%J0,align 4
%J1=load i8*,i8**%d,align 8
%J2=bitcast i8*%JY to i8**
store i8*%J1,i8**%J2,align 8
%J3=getelementptr inbounds i8,i8*%JY,i64 8
%J4=bitcast i8*%J3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2187 to void(...)*),void(...)**%J4,align 8
%J5=getelementptr inbounds i8,i8*%JY,i64 16
%J6=bitcast i8*%J5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2187 to void(...)*),void(...)**%J6,align 8
%J7=getelementptr inbounds i8,i8*%JY,i64 24
%J8=bitcast i8*%J7 to i32*
store i32 -2147483647,i32*%J8,align 4
ret i8*%JY
J9:
%Ka=getelementptr inbounds i8,i8*%s,i64 8
%Kb=bitcast i8*%Ka to i8**
%Kc=load i8*,i8**%Kb,align 8
%Kd=getelementptr inbounds i8,i8*%Kc,i64 8
%Ke=bitcast i8*%Kd to i8**
%Kf=load i8*,i8**%Ke,align 8
store i8*%Kf,i8**%b,align 8
%Kg=load i8*,i8**@_SMLZN17ElaborateErrorSQL15TupleInSQLQueryE,align 8
store i8*%Kg,i8**%c,align 8
%Kh=call i8*@sml_alloc(i32 inreg 20)#0
%Ki=getelementptr inbounds i8,i8*%Kh,i64 -4
%Kj=bitcast i8*%Ki to i32*
store i32 1342177296,i32*%Kj,align 4
store i8*%Kh,i8**%d,align 8
%Kk=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Kl=bitcast i8*%Kh to i8**
store i8*%Kk,i8**%Kl,align 8
%Km=getelementptr inbounds i8,i8*%Kh,i64 8
%Kn=bitcast i8*%Km to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@hy,i64 0,i32 2,i64 0),i8**%Kn,align 8
%Ko=getelementptr inbounds i8,i8*%Kh,i64 16
%Kp=bitcast i8*%Ko to i32*
store i32 3,i32*%Kp,align 4
%Kq=call i8*@sml_alloc(i32 inreg 20)#0
%Kr=getelementptr inbounds i8,i8*%Kq,i64 -4
%Ks=bitcast i8*%Kr to i32*
store i32 1342177296,i32*%Ks,align 4
%Kt=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ku=bitcast i8*%Kq to i8**
store i8*%Kt,i8**%Ku,align 8
%Kv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Kw=getelementptr inbounds i8,i8*%Kq,i64 8
%Kx=bitcast i8*%Kw to i8**
store i8*%Kv,i8**%Kx,align 8
%Ky=getelementptr inbounds i8,i8*%Kq,i64 16
%Kz=bitcast i8*%Ky to i32*
store i32 3,i32*%Kz,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%Kq)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*)
KA:
%KB=getelementptr inbounds i8,i8*%s,i64 8
%KC=bitcast i8*%KB to i8**
%KD=load i8*,i8**%KC,align 8
%KE=bitcast i8*%KD to i8**
%KF=load i8*,i8**%KE,align 8
store i8*%KF,i8**%b,align 8
%KG=getelementptr inbounds i8,i8*%KD,i64 8
%KH=bitcast i8*%KG to i8**
%KI=load i8*,i8**%KH,align 8
%KJ=getelementptr inbounds i8,i8*%KD,i64 16
%KK=bitcast i8*%KJ to i8**
%KL=load i8*,i8**%KK,align 8
store i8*%KL,i8**%c,align 8
%KM=getelementptr inbounds i8,i8*%KD,i64 24
%KN=bitcast i8*%KM to i8**
%KO=load i8*,i8**%KN,align 8
store i8*%KO,i8**%d,align 8
%KP=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%KI)
store i8*%KP,i8**%e,align 8
%KQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%KR=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%KQ)
store i8*%KR,i8**%c,align 8
%KS=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%KT=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%KS)
store i8*%KT,i8**%b,align 8
%KU=call i8*@sml_alloc(i32 inreg 12)#0
%KV=getelementptr inbounds i8,i8*%KU,i64 -4
%KW=bitcast i8*%KV to i32*
store i32 1342177288,i32*%KW,align 4
store i8*%KU,i8**%f,align 8
%KX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%KY=bitcast i8*%KU to i8**
store i8*%KX,i8**%KY,align 8
%KZ=getelementptr inbounds i8,i8*%KU,i64 8
%K0=bitcast i8*%KZ to i32*
store i32 1,i32*%K0,align 4
%K1=call i8*@sml_alloc(i32 inreg 28)#0
%K2=getelementptr inbounds i8,i8*%K1,i64 -4
%K3=bitcast i8*%K2 to i32*
store i32 1342177304,i32*%K3,align 4
store i8*%K1,i8**%b,align 8
%K4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%K5=bitcast i8*%K1 to i8**
store i8*%K4,i8**%K5,align 8
%K6=getelementptr inbounds i8,i8*%K1,i64 8
%K7=bitcast i8*%K6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2184 to void(...)*),void(...)**%K7,align 8
%K8=getelementptr inbounds i8,i8*%K1,i64 16
%K9=bitcast i8*%K8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2184 to void(...)*),void(...)**%K9,align 8
%La=getelementptr inbounds i8,i8*%K1,i64 24
%Lb=bitcast i8*%La to i32*
store i32 -2147483647,i32*%Lb,align 4
%Lc=call i8*@sml_alloc(i32 inreg 20)#0
%Ld=getelementptr inbounds i8,i8*%Lc,i64 -4
%Le=bitcast i8*%Ld to i32*
store i32 1342177296,i32*%Le,align 4
store i8*%Lc,i8**%f,align 8
%Lf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Lg=bitcast i8*%Lc to i8**
store i8*%Lf,i8**%Lg,align 8
%Lh=getelementptr inbounds i8,i8*%Lc,i64 8
%Li=bitcast i8*%Lh to i8**
store i8*null,i8**%Li,align 8
%Lj=getelementptr inbounds i8,i8*%Lc,i64 16
%Lk=bitcast i8*%Lj to i32*
store i32 3,i32*%Lk,align 4
%Ll=call i8*@sml_alloc(i32 inreg 20)#0
%Lm=getelementptr inbounds i8,i8*%Ll,i64 -4
%Ln=bitcast i8*%Lm to i32*
store i32 1342177296,i32*%Ln,align 4
store i8*%Ll,i8**%c,align 8
%Lo=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Lp=bitcast i8*%Ll to i8**
store i8*%Lo,i8**%Lp,align 8
%Lq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Lr=getelementptr inbounds i8,i8*%Ll,i64 8
%Ls=bitcast i8*%Lr to i8**
store i8*%Lq,i8**%Ls,align 8
%Lt=getelementptr inbounds i8,i8*%Ll,i64 16
%Lu=bitcast i8*%Lt to i32*
store i32 3,i32*%Lu,align 4
%Lv=call i8*@sml_alloc(i32 inreg 20)#0
%Lw=getelementptr inbounds i8,i8*%Lv,i64 -4
%Lx=bitcast i8*%Lw to i32*
store i32 1342177296,i32*%Lx,align 4
%Ly=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Lz=bitcast i8*%Lv to i8**
store i8*%Ly,i8**%Lz,align 8
%LA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%LB=getelementptr inbounds i8,i8*%Lv,i64 8
%LC=bitcast i8*%LB to i8**
store i8*%LA,i8**%LC,align 8
%LD=getelementptr inbounds i8,i8*%Lv,i64 16
%LE=bitcast i8*%LD to i32*
store i32 3,i32*%LE,align 4
%LF=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c8,i64 0,i32 2)to i8*),i8*inreg%Lv)
store i8*%LF,i8**%b,align 8
%LG=call i8*@sml_alloc(i32 inreg 20)#0
%LH=getelementptr inbounds i8,i8*%LG,i64 -4
%LI=bitcast i8*%LH to i32*
store i32 1342177296,i32*%LI,align 4
store i8*%LG,i8**%c,align 8
%LJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%LK=bitcast i8*%LG to i8**
store i8*%LJ,i8**%LK,align 8
%LL=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%LM=getelementptr inbounds i8,i8*%LG,i64 8
%LN=bitcast i8*%LM to i8**
store i8*%LL,i8**%LN,align 8
%LO=getelementptr inbounds i8,i8*%LG,i64 16
%LP=bitcast i8*%LO to i32*
store i32 3,i32*%LP,align 4
%LQ=call i8*@sml_alloc(i32 inreg 28)#0
%LR=getelementptr inbounds i8,i8*%LQ,i64 -4
%LS=bitcast i8*%LR to i32*
store i32 1342177304,i32*%LS,align 4
%LT=load i8*,i8**%c,align 8
%LU=bitcast i8*%LQ to i8**
store i8*%LT,i8**%LU,align 8
%LV=getelementptr inbounds i8,i8*%LQ,i64 8
%LW=bitcast i8*%LV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2185 to void(...)*),void(...)**%LW,align 8
%LX=getelementptr inbounds i8,i8*%LQ,i64 16
%LY=bitcast i8*%LX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2185 to void(...)*),void(...)**%LY,align 8
%LZ=getelementptr inbounds i8,i8*%LQ,i64 24
%L0=bitcast i8*%LZ to i32*
store i32 -2147483647,i32*%L0,align 4
ret i8*%LQ
L1:
store i8*null,i8**%b,align 8
%L2=getelementptr inbounds i8,i8*%s,i64 8
%L3=bitcast i8*%L2 to i8**
%L4=load i8*,i8**%L3,align 8
%L5=bitcast i8*%L4 to i32*
%L6=load i32,i32*%L5,align 4
%L7=icmp eq i32%L6,0
br i1%L7,label%Mc,label%L8
L8:
%L9=getelementptr inbounds i8,i8*%L4,i64 16
%Ma=bitcast i8*%L9 to i8**
%Mb=load i8*,i8**%Ma,align 8
br label%k
Mc:
%Md=getelementptr inbounds i8,i8*%L4,i64 8
%Me=bitcast i8*%Md to i8**
%Mf=load i8*,i8**%Me,align 8
store i8*%Mf,i8**%b,align 8
%Mg=getelementptr inbounds i8,i8*%L4,i64 16
%Mh=bitcast i8*%Mg to i8**
%Mi=load i8*,i8**%Mh,align 8
store i8*%Mi,i8**%c,align 8
%Mj=bitcast i8*%Mi to i32*
%Mk=load i32,i32*%Mj,align 4
%Ml=icmp eq i32%Mk,28
br i1%Ml,label%OT,label%Mm
Mm:
%Mn=getelementptr inbounds i8,i8*%L4,i64 24
%Mo=bitcast i8*%Mn to i8**
%Mp=load i8*,i8**%Mo,align 8
store i8*%Mp,i8**%d,align 8
%Mq=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%Mf)
%Mr=getelementptr inbounds i8,i8*%Mq,i64 -4
%Ms=bitcast i8*%Mr to i32*
%Mt=load i32,i32*%Ms,align 4
%Mu=and i32%Mt,268435455
%Mv=icmp eq i32%Mu,2
br i1%Mv,label%Mw,label%Ng
Mw:
%Mx=load i8,i8*%Mq,align 1
%My=icmp eq i8%Mx,126
br i1%My,label%Mz,label%Ng
Mz:
store i8*null,i8**%b,align 8
%MA=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%MB=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%MA)
store i8*%MB,i8**%b,align 8
%MC=call i8*@sml_alloc(i32 inreg 20)#0
%MD=getelementptr inbounds i8,i8*%MC,i64 -4
%ME=bitcast i8*%MD to i32*
store i32 1342177296,i32*%ME,align 4
store i8*%MC,i8**%c,align 8
%MF=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%MG=bitcast i8*%MC to i8**
store i8*%MF,i8**%MG,align 8
%MH=getelementptr inbounds i8,i8*%MC,i64 8
%MI=bitcast i8*%MH to i8**
store i8*null,i8**%MI,align 8
%MJ=getelementptr inbounds i8,i8*%MC,i64 16
%MK=bitcast i8*%MJ to i32*
store i32 3,i32*%MK,align 4
%ML=call i8*@sml_alloc(i32 inreg 20)#0
%MM=getelementptr inbounds i8,i8*%ML,i64 -4
%MN=bitcast i8*%MM to i32*
store i32 1342177296,i32*%MN,align 4
%MO=bitcast i8*%ML to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hx,i64 0,i32 2)to i8*),i8**%MO,align 8
%MP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%MQ=getelementptr inbounds i8,i8*%ML,i64 8
%MR=bitcast i8*%MQ to i8**
store i8*%MP,i8**%MR,align 8
%MS=getelementptr inbounds i8,i8*%ML,i64 16
%MT=bitcast i8*%MS to i32*
store i32 3,i32*%MT,align 4
%MU=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dc,i64 0,i32 2)to i8*),i8*inreg%ML)
store i8*%MU,i8**%b,align 8
%MV=call i8*@sml_alloc(i32 inreg 20)#0
%MW=getelementptr inbounds i8,i8*%MV,i64 -4
%MX=bitcast i8*%MW to i32*
store i32 1342177296,i32*%MX,align 4
store i8*%MV,i8**%c,align 8
%MY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%MZ=bitcast i8*%MV to i8**
store i8*%MY,i8**%MZ,align 8
%M0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%M1=getelementptr inbounds i8,i8*%MV,i64 8
%M2=bitcast i8*%M1 to i8**
store i8*%M0,i8**%M2,align 8
%M3=getelementptr inbounds i8,i8*%MV,i64 16
%M4=bitcast i8*%M3 to i32*
store i32 3,i32*%M4,align 4
%M5=call i8*@sml_alloc(i32 inreg 28)#0
%M6=getelementptr inbounds i8,i8*%M5,i64 -4
%M7=bitcast i8*%M6 to i32*
store i32 1342177304,i32*%M7,align 4
%M8=load i8*,i8**%c,align 8
%M9=bitcast i8*%M5 to i8**
store i8*%M8,i8**%M9,align 8
%Na=getelementptr inbounds i8,i8*%M5,i64 8
%Nb=bitcast i8*%Na to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2183 to void(...)*),void(...)**%Nb,align 8
%Nc=getelementptr inbounds i8,i8*%M5,i64 16
%Nd=bitcast i8*%Nc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2183 to void(...)*),void(...)**%Nd,align 8
%Ne=getelementptr inbounds i8,i8*%M5,i64 24
%Nf=bitcast i8*%Ne to i32*
store i32 -2147483647,i32*%Nf,align 4
ret i8*%M5
Ng:
%Nh=call fastcc i8*@_SMLFN6String9translateE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hu,i64 0,i32 2)to i8*))
%Ni=getelementptr inbounds i8,i8*%Nh,i64 16
%Nj=bitcast i8*%Ni to i8*(i8*,i8*)**
%Nk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Nj,align 8
%Nl=bitcast i8*%Nh to i8**
%Nm=load i8*,i8**%Nl,align 8
store i8*%Nm,i8**%e,align 8
%Nn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%No=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%Nn)
%Np=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Nq=call fastcc i8*%Nk(i8*inreg%Np,i8*inreg%No)
store i8*%Nq,i8**%b,align 8
%Nr=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ns=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Nr)
store i8*%Ns,i8**%e,align 8
%Nt=call i8*@sml_alloc(i32 inreg 20)#0
%Nu=getelementptr inbounds i8,i8*%Nt,i64 -4
%Nv=bitcast i8*%Nu to i32*
store i32 1342177296,i32*%Nv,align 4
store i8*%Nt,i8**%c,align 8
%Nw=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Nx=bitcast i8*%Nt to i8**
store i8*%Nw,i8**%Nx,align 8
%Ny=getelementptr inbounds i8,i8*%Nt,i64 8
%Nz=bitcast i8*%Ny to i8**
store i8*null,i8**%Nz,align 8
%NA=getelementptr inbounds i8,i8*%Nt,i64 16
%NB=bitcast i8*%NA to i32*
store i32 3,i32*%NB,align 4
%NC=call i8*@sml_alloc(i32 inreg 12)#0
%ND=getelementptr inbounds i8,i8*%NC,i64 -4
%NE=bitcast i8*%ND to i32*
store i32 1342177288,i32*%NE,align 4
store i8*%NC,i8**%e,align 8
%NF=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%NG=bitcast i8*%NC to i8**
store i8*%NF,i8**%NG,align 8
%NH=getelementptr inbounds i8,i8*%NC,i64 8
%NI=bitcast i8*%NH to i32*
store i32 1,i32*%NI,align 4
%NJ=call i8*@sml_alloc(i32 inreg 28)#0
%NK=getelementptr inbounds i8,i8*%NJ,i64 -4
%NL=bitcast i8*%NK to i32*
store i32 1342177304,i32*%NL,align 4
store i8*%NJ,i8**%f,align 8
%NM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%NN=bitcast i8*%NJ to i8**
store i8*%NM,i8**%NN,align 8
%NO=getelementptr inbounds i8,i8*%NJ,i64 8
%NP=bitcast i8*%NO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2177 to void(...)*),void(...)**%NP,align 8
%NQ=getelementptr inbounds i8,i8*%NJ,i64 16
%NR=bitcast i8*%NQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2177 to void(...)*),void(...)**%NR,align 8
%NS=getelementptr inbounds i8,i8*%NJ,i64 24
%NT=bitcast i8*%NS to i32*
store i32 -2147483647,i32*%NT,align 4
%NU=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%NV=getelementptr inbounds i8,i8*%NU,i64 16
%NW=bitcast i8*%NV to i8*(i8*,i8*)**
%NX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%NW,align 8
%NY=bitcast i8*%NU to i8**
%NZ=load i8*,i8**%NY,align 8
%N0=call fastcc i8*%NX(i8*inreg%NZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%N1=getelementptr inbounds i8,i8*%N0,i64 16
%N2=bitcast i8*%N1 to i8*(i8*,i8*)**
%N3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N2,align 8
%N4=bitcast i8*%N0 to i8**
%N5=load i8*,i8**%N4,align 8
%N6=call fastcc i8*%N3(i8*inreg%N5,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%N7=getelementptr inbounds i8,i8*%N6,i64 16
%N8=bitcast i8*%N7 to i8*(i8*,i8*)**
%N9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N8,align 8
%Oa=bitcast i8*%N6 to i8**
%Ob=load i8*,i8**%Oa,align 8
%Oc=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Od=call fastcc i8*%N9(i8*inreg%Ob,i8*inreg%Oc)
store i8*%Od,i8**%b,align 8
%Oe=call i8*@sml_alloc(i32 inreg 20)#0
%Of=getelementptr inbounds i8,i8*%Oe,i64 -4
%Og=bitcast i8*%Of to i32*
store i32 1342177296,i32*%Og,align 4
store i8*%Oe,i8**%c,align 8
%Oh=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Oi=bitcast i8*%Oe to i8**
store i8*%Oh,i8**%Oi,align 8
%Oj=getelementptr inbounds i8,i8*%Oe,i64 8
%Ok=bitcast i8*%Oj to i8**
store i8*null,i8**%Ok,align 8
%Ol=getelementptr inbounds i8,i8*%Oe,i64 16
%Om=bitcast i8*%Ol to i32*
store i32 3,i32*%Om,align 4
%On=call i8*@sml_alloc(i32 inreg 20)#0
%Oo=getelementptr inbounds i8,i8*%On,i64 -4
%Op=bitcast i8*%Oo to i32*
store i32 1342177296,i32*%Op,align 4
%Oq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Or=bitcast i8*%On to i8**
store i8*%Oq,i8**%Or,align 8
%Os=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ot=getelementptr inbounds i8,i8*%On,i64 8
%Ou=bitcast i8*%Ot to i8**
store i8*%Os,i8**%Ou,align 8
%Ov=getelementptr inbounds i8,i8*%On,i64 16
%Ow=bitcast i8*%Ov to i32*
store i32 3,i32*%Ow,align 4
%Ox=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c4,i64 0,i32 2)to i8*),i8*inreg%On)
store i8*%Ox,i8**%b,align 8
%Oy=call i8*@sml_alloc(i32 inreg 20)#0
%Oz=getelementptr inbounds i8,i8*%Oy,i64 -4
%OA=bitcast i8*%Oz to i32*
store i32 1342177296,i32*%OA,align 4
store i8*%Oy,i8**%c,align 8
%OB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%OC=bitcast i8*%Oy to i8**
store i8*%OB,i8**%OC,align 8
%OD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%OE=getelementptr inbounds i8,i8*%Oy,i64 8
%OF=bitcast i8*%OE to i8**
store i8*%OD,i8**%OF,align 8
%OG=getelementptr inbounds i8,i8*%Oy,i64 16
%OH=bitcast i8*%OG to i32*
store i32 3,i32*%OH,align 4
%OI=call i8*@sml_alloc(i32 inreg 28)#0
%OJ=getelementptr inbounds i8,i8*%OI,i64 -4
%OK=bitcast i8*%OJ to i32*
store i32 1342177304,i32*%OK,align 4
%OL=load i8*,i8**%c,align 8
%OM=bitcast i8*%OI to i8**
store i8*%OL,i8**%OM,align 8
%ON=getelementptr inbounds i8,i8*%OI,i64 8
%OO=bitcast i8*%ON to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2178 to void(...)*),void(...)**%OO,align 8
%OP=getelementptr inbounds i8,i8*%OI,i64 16
%OQ=bitcast i8*%OP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2178 to void(...)*),void(...)**%OQ,align 8
%OR=getelementptr inbounds i8,i8*%OI,i64 24
%OS=bitcast i8*%OR to i32*
store i32 -2147483647,i32*%OS,align 4
ret i8*%OI
OT:
%OU=getelementptr inbounds i8,i8*%Mi,i64 8
%OV=bitcast i8*%OU to i8***
%OW=load i8**,i8***%OV,align 8
%OX=load i8*,i8**%OW,align 8
store i8*%OX,i8**%c,align 8
%OY=getelementptr inbounds i8,i8*%L4,i64 24
%OZ=bitcast i8*%OY to i8**
%O0=load i8*,i8**%OZ,align 8
store i8*%O0,i8**%d,align 8
%O1=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%Mf)
%O2=getelementptr inbounds i8,i8*%O1,i64 -4
%O3=bitcast i8*%O2 to i32*
%O4=load i32,i32*%O3,align 4
%O5=and i32%O4,268435455
%O6=icmp eq i32%O5,2
br i1%O6,label%O7,label%Pv
O7:
%O8=load i8,i8*%O1,align 1
%O9=icmp eq i8%O8,126
br i1%O9,label%Pa,label%Pv
Pa:
store i8*null,i8**%c,align 8
%Pb=load i8*,i8**@_SMLZN17ElaborateErrorSQL11NegNotUnaryE,align 8
store i8*%Pb,i8**%b,align 8
%Pc=call i8*@sml_alloc(i32 inreg 20)#0
%Pd=getelementptr inbounds i8,i8*%Pc,i64 -4
%Pe=bitcast i8*%Pd to i32*
store i32 1342177296,i32*%Pe,align 4
store i8*%Pc,i8**%c,align 8
%Pf=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Pg=bitcast i8*%Pc to i8**
store i8*%Pf,i8**%Pg,align 8
%Ph=getelementptr inbounds i8,i8*%Pc,i64 8
%Pi=bitcast i8*%Ph to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ht,i64 0,i32 2,i64 0),i8**%Pi,align 8
%Pj=getelementptr inbounds i8,i8*%Pc,i64 16
%Pk=bitcast i8*%Pj to i32*
store i32 3,i32*%Pk,align 4
%Pl=call i8*@sml_alloc(i32 inreg 20)#0
%Pm=getelementptr inbounds i8,i8*%Pl,i64 -4
%Pn=bitcast i8*%Pm to i32*
store i32 1342177296,i32*%Pn,align 4
%Po=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Pp=bitcast i8*%Pl to i8**
store i8*%Po,i8**%Pp,align 8
%Pq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Pr=getelementptr inbounds i8,i8*%Pl,i64 8
%Ps=bitcast i8*%Pr to i8**
store i8*%Pq,i8**%Ps,align 8
%Pt=getelementptr inbounds i8,i8*%Pl,i64 16
%Pu=bitcast i8*%Pt to i32*
store i32 3,i32*%Pu,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%Pl)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*)
Pv:
%Pw=call fastcc i8*@_SMLFN6String9translateE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hs,i64 0,i32 2)to i8*))
%Px=getelementptr inbounds i8,i8*%Pw,i64 16
%Py=bitcast i8*%Px to i8*(i8*,i8*)**
%Pz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Py,align 8
%PA=bitcast i8*%Pw to i8**
%PB=load i8*,i8**%PA,align 8
store i8*%PB,i8**%e,align 8
%PC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%PD=call fastcc i8*@_SMLFN6Symbol14symbolToStringE(i8*inreg%PC)
%PE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%PF=call fastcc i8*%Pz(i8*inreg%PE,i8*inreg%PD)
store i8*%PF,i8**%b,align 8
%PG=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%PH=getelementptr inbounds i8,i8*%PG,i64 16
%PI=bitcast i8*%PH to i8*(i8*,i8*)**
%PJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%PI,align 8
%PK=bitcast i8*%PG to i8**
%PL=load i8*,i8**%PK,align 8
%PM=call fastcc i8*%PJ(i8*inreg%PL,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%PN=getelementptr inbounds i8,i8*%PM,i64 16
%PO=bitcast i8*%PN to i8*(i8*,i8*)**
%PP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%PO,align 8
%PQ=bitcast i8*%PM to i8**
%PR=load i8*,i8**%PQ,align 8
%PS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%PT=call fastcc i8*%PP(i8*inreg%PR,i8*inreg%PS)
store i8*%PT,i8**%c,align 8
%PU=call i8*@sml_alloc(i32 inreg 12)#0
%PV=getelementptr inbounds i8,i8*%PU,i64 -4
%PW=bitcast i8*%PV to i32*
store i32 1342177288,i32*%PW,align 4
store i8*%PU,i8**%e,align 8
%PX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%PY=bitcast i8*%PU to i8**
store i8*%PX,i8**%PY,align 8
%PZ=getelementptr inbounds i8,i8*%PU,i64 8
%P0=bitcast i8*%PZ to i32*
store i32 1,i32*%P0,align 4
%P1=call i8*@sml_alloc(i32 inreg 28)#0
%P2=getelementptr inbounds i8,i8*%P1,i64 -4
%P3=bitcast i8*%P2 to i32*
store i32 1342177304,i32*%P3,align 4
store i8*%P1,i8**%f,align 8
%P4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P5=bitcast i8*%P1 to i8**
store i8*%P4,i8**%P5,align 8
%P6=getelementptr inbounds i8,i8*%P1,i64 8
%P7=bitcast i8*%P6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2171 to void(...)*),void(...)**%P7,align 8
%P8=getelementptr inbounds i8,i8*%P1,i64 16
%P9=bitcast i8*%P8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2171 to void(...)*),void(...)**%P9,align 8
%Qa=getelementptr inbounds i8,i8*%P1,i64 24
%Qb=bitcast i8*%Qa to i32*
store i32 -2147483647,i32*%Qb,align 4
%Qc=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Qd=getelementptr inbounds i8,i8*%Qc,i64 16
%Qe=bitcast i8*%Qd to i8*(i8*,i8*)**
%Qf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qe,align 8
%Qg=bitcast i8*%Qc to i8**
%Qh=load i8*,i8**%Qg,align 8
%Qi=call fastcc i8*%Qf(i8*inreg%Qh,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%Qj=getelementptr inbounds i8,i8*%Qi,i64 16
%Qk=bitcast i8*%Qj to i8*(i8*,i8*)**
%Ql=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qk,align 8
%Qm=bitcast i8*%Qi to i8**
%Qn=load i8*,i8**%Qm,align 8
%Qo=call fastcc i8*%Ql(i8*inreg%Qn,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%Qp=getelementptr inbounds i8,i8*%Qo,i64 16
%Qq=bitcast i8*%Qp to i8*(i8*,i8*)**
%Qr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Qq,align 8
%Qs=bitcast i8*%Qo to i8**
%Qt=load i8*,i8**%Qs,align 8
%Qu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Qv=call fastcc i8*%Qr(i8*inreg%Qt,i8*inreg%Qu)
store i8*%Qv,i8**%b,align 8
%Qw=call i8*@sml_alloc(i32 inreg 20)#0
%Qx=getelementptr inbounds i8,i8*%Qw,i64 -4
%Qy=bitcast i8*%Qx to i32*
store i32 1342177296,i32*%Qy,align 4
store i8*%Qw,i8**%c,align 8
%Qz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%QA=bitcast i8*%Qw to i8**
store i8*%Qz,i8**%QA,align 8
%QB=getelementptr inbounds i8,i8*%Qw,i64 8
%QC=bitcast i8*%QB to i8**
store i8*null,i8**%QC,align 8
%QD=getelementptr inbounds i8,i8*%Qw,i64 16
%QE=bitcast i8*%QD to i32*
store i32 3,i32*%QE,align 4
%QF=call i8*@sml_alloc(i32 inreg 20)#0
%QG=getelementptr inbounds i8,i8*%QF,i64 -4
%QH=bitcast i8*%QG to i32*
store i32 1342177296,i32*%QH,align 4
%QI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%QJ=bitcast i8*%QF to i8**
store i8*%QI,i8**%QJ,align 8
%QK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%QL=getelementptr inbounds i8,i8*%QF,i64 8
%QM=bitcast i8*%QL to i8**
store i8*%QK,i8**%QM,align 8
%QN=getelementptr inbounds i8,i8*%QF,i64 16
%QO=bitcast i8*%QN to i32*
store i32 3,i32*%QO,align 4
%QP=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@c4,i64 0,i32 2)to i8*),i8*inreg%QF)
store i8*%QP,i8**%b,align 8
%QQ=call i8*@sml_alloc(i32 inreg 20)#0
%QR=getelementptr inbounds i8,i8*%QQ,i64 -4
%QS=bitcast i8*%QR to i32*
store i32 1342177296,i32*%QS,align 4
store i8*%QQ,i8**%c,align 8
%QT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%QU=bitcast i8*%QQ to i8**
store i8*%QT,i8**%QU,align 8
%QV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%QW=getelementptr inbounds i8,i8*%QQ,i64 8
%QX=bitcast i8*%QW to i8**
store i8*%QV,i8**%QX,align 8
%QY=getelementptr inbounds i8,i8*%QQ,i64 16
%QZ=bitcast i8*%QY to i32*
store i32 3,i32*%QZ,align 4
%Q0=call i8*@sml_alloc(i32 inreg 28)#0
%Q1=getelementptr inbounds i8,i8*%Q0,i64 -4
%Q2=bitcast i8*%Q1 to i32*
store i32 1342177304,i32*%Q2,align 4
%Q3=load i8*,i8**%c,align 8
%Q4=bitcast i8*%Q0 to i8**
store i8*%Q3,i8**%Q4,align 8
%Q5=getelementptr inbounds i8,i8*%Q0,i64 8
%Q6=bitcast i8*%Q5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2172 to void(...)*),void(...)**%Q6,align 8
%Q7=getelementptr inbounds i8,i8*%Q0,i64 16
%Q8=bitcast i8*%Q7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2172 to void(...)*),void(...)**%Q8,align 8
%Q9=getelementptr inbounds i8,i8*%Q0,i64 24
%Ra=bitcast i8*%Q9 to i32*
store i32 -2147483647,i32*%Ra,align 4
ret i8*%Q0
Rb:
%Rc=getelementptr inbounds i8,i8*%s,i64 8
%Rd=bitcast i8*%Rc to i8**
%Re=load i8*,i8**%Rd,align 8
%Rf=getelementptr inbounds i8,i8*%Re,i64 16
%Rg=bitcast i8*%Rf to i8**
%Rh=load i8*,i8**%Rg,align 8
store i8*%Rh,i8**%b,align 8
%Ri=load i8*,i8**@_SMLZN17ElaborateErrorSQL13AppInSQLQueryE,align 8
store i8*%Ri,i8**%c,align 8
%Rj=call i8*@sml_alloc(i32 inreg 20)#0
%Rk=getelementptr inbounds i8,i8*%Rj,i64 -4
%Rl=bitcast i8*%Rk to i32*
store i32 1342177296,i32*%Rl,align 4
store i8*%Rj,i8**%d,align 8
%Rm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Rn=bitcast i8*%Rj to i8**
store i8*%Rm,i8**%Rn,align 8
%Ro=getelementptr inbounds i8,i8*%Rj,i64 8
%Rp=bitcast i8*%Ro to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@hr,i64 0,i32 2,i64 0),i8**%Rp,align 8
%Rq=getelementptr inbounds i8,i8*%Rj,i64 16
%Rr=bitcast i8*%Rq to i32*
store i32 3,i32*%Rr,align 4
%Rs=call i8*@sml_alloc(i32 inreg 20)#0
%Rt=getelementptr inbounds i8,i8*%Rs,i64 -4
%Ru=bitcast i8*%Rt to i32*
store i32 1342177296,i32*%Ru,align 4
%Rv=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Rw=bitcast i8*%Rs to i8**
store i8*%Rv,i8**%Rw,align 8
%Rx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ry=getelementptr inbounds i8,i8*%Rs,i64 8
%Rz=bitcast i8*%Ry to i8**
store i8*%Rx,i8**%Rz,align 8
%RA=getelementptr inbounds i8,i8*%Rs,i64 16
%RB=bitcast i8*%RA to i32*
store i32 3,i32*%RB,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%Rs)
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fT,i64 0,i32 2)to i8*)
RC:
%RD=getelementptr inbounds i8,i8*%s,i64 8
%RE=bitcast i8*%RD to i8**
%RF=load i8*,i8**%RE,align 8
%RG=bitcast i8*%RF to i32*
%RH=load i32,i32*%RG,align 4
%RI=icmp eq i32%RH,0
%RJ=getelementptr inbounds i8,i8*%RF,i64 8
%RK=bitcast i8*%RJ to i8**
%RL=load i8*,i8**%RK,align 8
%RM=getelementptr inbounds i8,i8*%RF,i64 16
%RN=bitcast i8*%RM to i8**
%RO=load i8*,i8**%RN,align 8
store i8*%RO,i8**%b,align 8
%RP=getelementptr inbounds i8,i8*%RF,i64 24
%RQ=bitcast i8*%RP to i8**
%RR=load i8*,i8**%RQ,align 8
store i8*%RR,i8**%c,align 8
%RS=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%RL)
store i8*%RS,i8**%d,align 8
%RT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%RU=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%RT)
store i8*%RU,i8**%b,align 8
%RV=call i8*@sml_alloc(i32 inreg 20)#0
%RW=getelementptr inbounds i8,i8*%RV,i64 -4
%RX=bitcast i8*%RW to i32*
store i32 1342177296,i32*%RX,align 4
store i8*%RV,i8**%e,align 8
%RY=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%RZ=bitcast i8*%RV to i8**
store i8*%RY,i8**%RZ,align 8
%R0=getelementptr inbounds i8,i8*%RV,i64 8
%R1=bitcast i8*%R0 to i8**
store i8*null,i8**%R1,align 8
%R2=getelementptr inbounds i8,i8*%RV,i64 16
%R3=bitcast i8*%R2 to i32*
store i32 3,i32*%R3,align 4
%R4=call i8*@sml_alloc(i32 inreg 20)#0
%R5=getelementptr inbounds i8,i8*%R4,i64 -4
%R6=bitcast i8*%R5 to i32*
store i32 1342177296,i32*%R6,align 4
%R7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%R8=bitcast i8*%R4 to i8**
store i8*%R7,i8**%R8,align 8
%R9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Sa=getelementptr inbounds i8,i8*%R4,i64 8
%Sb=bitcast i8*%Sa to i8**
store i8*%R9,i8**%Sb,align 8
%Sc=getelementptr inbounds i8,i8*%R4,i64 16
%Sd=bitcast i8*%Sc to i32*
store i32 3,i32*%Sd,align 4
br i1%RI,label%SB,label%Se
Se:
%Sf=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cW,i64 0,i32 2)to i8*),i8*inreg%R4)
store i8*%Sf,i8**%b,align 8
%Sg=call i8*@sml_alloc(i32 inreg 20)#0
%Sh=getelementptr inbounds i8,i8*%Sg,i64 -4
%Si=bitcast i8*%Sh to i32*
store i32 1342177296,i32*%Si,align 4
store i8*%Sg,i8**%d,align 8
%Sj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Sk=bitcast i8*%Sg to i8**
store i8*%Sj,i8**%Sk,align 8
%Sl=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Sm=getelementptr inbounds i8,i8*%Sg,i64 8
%Sn=bitcast i8*%Sm to i8**
store i8*%Sl,i8**%Sn,align 8
%So=getelementptr inbounds i8,i8*%Sg,i64 16
%Sp=bitcast i8*%So to i32*
store i32 3,i32*%Sp,align 4
%Sq=call i8*@sml_alloc(i32 inreg 28)#0
%Sr=getelementptr inbounds i8,i8*%Sq,i64 -4
%Ss=bitcast i8*%Sr to i32*
store i32 1342177304,i32*%Ss,align 4
%St=load i8*,i8**%d,align 8
%Su=bitcast i8*%Sq to i8**
store i8*%St,i8**%Su,align 8
%Sv=getelementptr inbounds i8,i8*%Sq,i64 8
%Sw=bitcast i8*%Sv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2166 to void(...)*),void(...)**%Sw,align 8
%Sx=getelementptr inbounds i8,i8*%Sq,i64 16
%Sy=bitcast i8*%Sx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2166 to void(...)*),void(...)**%Sy,align 8
%Sz=getelementptr inbounds i8,i8*%Sq,i64 24
%SA=bitcast i8*%Sz to i32*
store i32 -2147483647,i32*%SA,align 4
ret i8*%Sq
SB:
%SC=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cS,i64 0,i32 2)to i8*),i8*inreg%R4)
store i8*%SC,i8**%b,align 8
%SD=call i8*@sml_alloc(i32 inreg 20)#0
%SE=getelementptr inbounds i8,i8*%SD,i64 -4
%SF=bitcast i8*%SE to i32*
store i32 1342177296,i32*%SF,align 4
store i8*%SD,i8**%d,align 8
%SG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%SH=bitcast i8*%SD to i8**
store i8*%SG,i8**%SH,align 8
%SI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%SJ=getelementptr inbounds i8,i8*%SD,i64 8
%SK=bitcast i8*%SJ to i8**
store i8*%SI,i8**%SK,align 8
%SL=getelementptr inbounds i8,i8*%SD,i64 16
%SM=bitcast i8*%SL to i32*
store i32 3,i32*%SM,align 4
%SN=call i8*@sml_alloc(i32 inreg 28)#0
%SO=getelementptr inbounds i8,i8*%SN,i64 -4
%SP=bitcast i8*%SO to i32*
store i32 1342177304,i32*%SP,align 4
%SQ=load i8*,i8**%d,align 8
%SR=bitcast i8*%SN to i8**
store i8*%SQ,i8**%SR,align 8
%SS=getelementptr inbounds i8,i8*%SN,i64 8
%ST=bitcast i8*%SS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2165 to void(...)*),void(...)**%ST,align 8
%SU=getelementptr inbounds i8,i8*%SN,i64 16
%SV=bitcast i8*%SU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2165 to void(...)*),void(...)**%SV,align 8
%SW=getelementptr inbounds i8,i8*%SN,i64 24
%SX=bitcast i8*%SW to i32*
store i32 -2147483647,i32*%SX,align 4
ret i8*%SN
SY:
%SZ=getelementptr inbounds i8,i8*%s,i64 8
%S0=bitcast i8*%SZ to i8**
%S1=load i8*,i8**%S0,align 8
%S2=bitcast i8*%S1 to i32*
%S3=load i32,i32*%S2,align 4
switch i32%S3,label%S4[
i32 5,label%Yo
i32 2,label%XL
i32 6,label%W8
i32 3,label%Wv
i32 0,label%VS
i32 1,label%Vf
i32 7,label%UC
i32 4,label%TZ
i32 8,label%Tm
]
S4:
call void@sml_matchcomp_bug()
%S5=load i8*,i8**@_SMLZ5Match,align 8
store i8*%S5,i8**%b,align 8
%S6=call i8*@sml_alloc(i32 inreg 20)#0
%S7=getelementptr inbounds i8,i8*%S6,i64 -4
%S8=bitcast i8*%S7 to i32*
store i32 1342177296,i32*%S8,align 4
store i8*%S6,i8**%c,align 8
%S9=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ta=bitcast i8*%S6 to i8**
store i8*%S9,i8**%Ta,align 8
%Tb=getelementptr inbounds i8,i8*%S6,i64 8
%Tc=bitcast i8*%Tb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%Tc,align 8
%Td=getelementptr inbounds i8,i8*%S6,i64 16
%Te=bitcast i8*%Td to i32*
store i32 3,i32*%Te,align 4
%Tf=call i8*@sml_alloc(i32 inreg 60)#0
%Tg=getelementptr inbounds i8,i8*%Tf,i64 -4
%Th=bitcast i8*%Tg to i32*
store i32 1342177336,i32*%Th,align 4
%Ti=getelementptr inbounds i8,i8*%Tf,i64 56
%Tj=bitcast i8*%Ti to i32*
store i32 1,i32*%Tj,align 4
%Tk=load i8*,i8**%c,align 8
%Tl=bitcast i8*%Tf to i8**
store i8*%Tk,i8**%Tl,align 8
call void@sml_raise(i8*inreg%Tf)#1
unreachable
Tm:
%Tn=getelementptr inbounds i8,i8*%S1,i64 8
%To=bitcast i8*%Tn to i8**
%Tp=load i8*,i8**%To,align 8
%Tq=getelementptr inbounds i8,i8*%S1,i64 16
%Tr=bitcast i8*%Tq to i8**
%Ts=load i8*,i8**%Tr,align 8
store i8*%Ts,i8**%b,align 8
%Tt=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Tp)
store i8*%Tt,i8**%c,align 8
%Tu=call i8*@sml_alloc(i32 inreg 20)#0
%Tv=getelementptr inbounds i8,i8*%Tu,i64 -4
%Tw=bitcast i8*%Tv to i32*
store i32 1342177296,i32*%Tw,align 4
%Tx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ty=bitcast i8*%Tu to i8**
store i8*%Tx,i8**%Ty,align 8
%Tz=getelementptr inbounds i8,i8*%Tu,i64 8
%TA=bitcast i8*%Tz to i8**
store i8*null,i8**%TA,align 8
%TB=getelementptr inbounds i8,i8*%Tu,i64 16
%TC=bitcast i8*%TB to i32*
store i32 3,i32*%TC,align 4
%TD=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cO,i64 0,i32 2)to i8*),i8*inreg%Tu)
store i8*%TD,i8**%c,align 8
%TE=call i8*@sml_alloc(i32 inreg 20)#0
%TF=getelementptr inbounds i8,i8*%TE,i64 -4
%TG=bitcast i8*%TF to i32*
store i32 1342177296,i32*%TG,align 4
store i8*%TE,i8**%d,align 8
%TH=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%TI=bitcast i8*%TE to i8**
store i8*%TH,i8**%TI,align 8
%TJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%TK=getelementptr inbounds i8,i8*%TE,i64 8
%TL=bitcast i8*%TK to i8**
store i8*%TJ,i8**%TL,align 8
%TM=getelementptr inbounds i8,i8*%TE,i64 16
%TN=bitcast i8*%TM to i32*
store i32 3,i32*%TN,align 4
%TO=call i8*@sml_alloc(i32 inreg 28)#0
%TP=getelementptr inbounds i8,i8*%TO,i64 -4
%TQ=bitcast i8*%TP to i32*
store i32 1342177304,i32*%TQ,align 4
%TR=load i8*,i8**%d,align 8
%TS=bitcast i8*%TO to i8**
store i8*%TR,i8**%TS,align 8
%TT=getelementptr inbounds i8,i8*%TO,i64 8
%TU=bitcast i8*%TT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2163 to void(...)*),void(...)**%TU,align 8
%TV=getelementptr inbounds i8,i8*%TO,i64 16
%TW=bitcast i8*%TV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2163 to void(...)*),void(...)**%TW,align 8
%TX=getelementptr inbounds i8,i8*%TO,i64 24
%TY=bitcast i8*%TX to i32*
store i32 -2147483647,i32*%TY,align 4
ret i8*%TO
TZ:
%T0=getelementptr inbounds i8,i8*%S1,i64 8
%T1=bitcast i8*%T0 to i8**
%T2=load i8*,i8**%T1,align 8
%T3=getelementptr inbounds i8,i8*%S1,i64 16
%T4=bitcast i8*%T3 to i8**
%T5=load i8*,i8**%T4,align 8
store i8*%T5,i8**%b,align 8
%T6=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%T2)
store i8*%T6,i8**%c,align 8
%T7=call i8*@sml_alloc(i32 inreg 20)#0
%T8=getelementptr inbounds i8,i8*%T7,i64 -4
%T9=bitcast i8*%T8 to i32*
store i32 1342177296,i32*%T9,align 4
%Ua=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ub=bitcast i8*%T7 to i8**
store i8*%Ua,i8**%Ub,align 8
%Uc=getelementptr inbounds i8,i8*%T7,i64 8
%Ud=bitcast i8*%Uc to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hq,i64 0,i32 2)to i8*),i8**%Ud,align 8
%Ue=getelementptr inbounds i8,i8*%T7,i64 16
%Uf=bitcast i8*%Ue to i32*
store i32 3,i32*%Uf,align 4
%Ug=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cK,i64 0,i32 2)to i8*),i8*inreg%T7)
store i8*%Ug,i8**%c,align 8
%Uh=call i8*@sml_alloc(i32 inreg 20)#0
%Ui=getelementptr inbounds i8,i8*%Uh,i64 -4
%Uj=bitcast i8*%Ui to i32*
store i32 1342177296,i32*%Uj,align 4
store i8*%Uh,i8**%d,align 8
%Uk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ul=bitcast i8*%Uh to i8**
store i8*%Uk,i8**%Ul,align 8
%Um=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Un=getelementptr inbounds i8,i8*%Uh,i64 8
%Uo=bitcast i8*%Un to i8**
store i8*%Um,i8**%Uo,align 8
%Up=getelementptr inbounds i8,i8*%Uh,i64 16
%Uq=bitcast i8*%Up to i32*
store i32 3,i32*%Uq,align 4
%Ur=call i8*@sml_alloc(i32 inreg 28)#0
%Us=getelementptr inbounds i8,i8*%Ur,i64 -4
%Ut=bitcast i8*%Us to i32*
store i32 1342177304,i32*%Ut,align 4
%Uu=load i8*,i8**%d,align 8
%Uv=bitcast i8*%Ur to i8**
store i8*%Uu,i8**%Uv,align 8
%Uw=getelementptr inbounds i8,i8*%Ur,i64 8
%Ux=bitcast i8*%Uw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2162 to void(...)*),void(...)**%Ux,align 8
%Uy=getelementptr inbounds i8,i8*%Ur,i64 16
%Uz=bitcast i8*%Uy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2162 to void(...)*),void(...)**%Uz,align 8
%UA=getelementptr inbounds i8,i8*%Ur,i64 24
%UB=bitcast i8*%UA to i32*
store i32 -2147483647,i32*%UB,align 4
ret i8*%Ur
UC:
%UD=getelementptr inbounds i8,i8*%S1,i64 8
%UE=bitcast i8*%UD to i8**
%UF=load i8*,i8**%UE,align 8
%UG=getelementptr inbounds i8,i8*%S1,i64 16
%UH=bitcast i8*%UG to i8**
%UI=load i8*,i8**%UH,align 8
store i8*%UI,i8**%b,align 8
%UJ=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%UF)
store i8*%UJ,i8**%c,align 8
%UK=call i8*@sml_alloc(i32 inreg 20)#0
%UL=getelementptr inbounds i8,i8*%UK,i64 -4
%UM=bitcast i8*%UL to i32*
store i32 1342177296,i32*%UM,align 4
%UN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%UO=bitcast i8*%UK to i8**
store i8*%UN,i8**%UO,align 8
%UP=getelementptr inbounds i8,i8*%UK,i64 8
%UQ=bitcast i8*%UP to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hm,i64 0,i32 2)to i8*),i8**%UQ,align 8
%UR=getelementptr inbounds i8,i8*%UK,i64 16
%US=bitcast i8*%UR to i32*
store i32 3,i32*%US,align 4
%UT=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i64 0,i32 2)to i8*),i8*inreg%UK)
store i8*%UT,i8**%c,align 8
%UU=call i8*@sml_alloc(i32 inreg 20)#0
%UV=getelementptr inbounds i8,i8*%UU,i64 -4
%UW=bitcast i8*%UV to i32*
store i32 1342177296,i32*%UW,align 4
store i8*%UU,i8**%d,align 8
%UX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%UY=bitcast i8*%UU to i8**
store i8*%UX,i8**%UY,align 8
%UZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U0=getelementptr inbounds i8,i8*%UU,i64 8
%U1=bitcast i8*%U0 to i8**
store i8*%UZ,i8**%U1,align 8
%U2=getelementptr inbounds i8,i8*%UU,i64 16
%U3=bitcast i8*%U2 to i32*
store i32 3,i32*%U3,align 4
%U4=call i8*@sml_alloc(i32 inreg 28)#0
%U5=getelementptr inbounds i8,i8*%U4,i64 -4
%U6=bitcast i8*%U5 to i32*
store i32 1342177304,i32*%U6,align 4
%U7=load i8*,i8**%d,align 8
%U8=bitcast i8*%U4 to i8**
store i8*%U7,i8**%U8,align 8
%U9=getelementptr inbounds i8,i8*%U4,i64 8
%Va=bitcast i8*%U9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2156 to void(...)*),void(...)**%Va,align 8
%Vb=getelementptr inbounds i8,i8*%U4,i64 16
%Vc=bitcast i8*%Vb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2156 to void(...)*),void(...)**%Vc,align 8
%Vd=getelementptr inbounds i8,i8*%U4,i64 24
%Ve=bitcast i8*%Vd to i32*
store i32 -2147483647,i32*%Ve,align 4
ret i8*%U4
Vf:
%Vg=getelementptr inbounds i8,i8*%S1,i64 8
%Vh=bitcast i8*%Vg to i8**
%Vi=load i8*,i8**%Vh,align 8
%Vj=getelementptr inbounds i8,i8*%S1,i64 16
%Vk=bitcast i8*%Vj to i8**
%Vl=load i8*,i8**%Vk,align 8
store i8*%Vl,i8**%b,align 8
%Vm=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Vi)
store i8*%Vm,i8**%c,align 8
%Vn=call i8*@sml_alloc(i32 inreg 20)#0
%Vo=getelementptr inbounds i8,i8*%Vn,i64 -4
%Vp=bitcast i8*%Vo to i32*
store i32 1342177296,i32*%Vp,align 4
%Vq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Vr=bitcast i8*%Vn to i8**
store i8*%Vq,i8**%Vr,align 8
%Vs=getelementptr inbounds i8,i8*%Vn,i64 8
%Vt=bitcast i8*%Vs to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hk,i64 0,i32 2)to i8*),i8**%Vt,align 8
%Vu=getelementptr inbounds i8,i8*%Vn,i64 16
%Vv=bitcast i8*%Vu to i32*
store i32 3,i32*%Vv,align 4
%Vw=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cK,i64 0,i32 2)to i8*),i8*inreg%Vn)
store i8*%Vw,i8**%c,align 8
%Vx=call i8*@sml_alloc(i32 inreg 20)#0
%Vy=getelementptr inbounds i8,i8*%Vx,i64 -4
%Vz=bitcast i8*%Vy to i32*
store i32 1342177296,i32*%Vz,align 4
store i8*%Vx,i8**%d,align 8
%VA=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%VB=bitcast i8*%Vx to i8**
store i8*%VA,i8**%VB,align 8
%VC=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%VD=getelementptr inbounds i8,i8*%Vx,i64 8
%VE=bitcast i8*%VD to i8**
store i8*%VC,i8**%VE,align 8
%VF=getelementptr inbounds i8,i8*%Vx,i64 16
%VG=bitcast i8*%VF to i32*
store i32 3,i32*%VG,align 4
%VH=call i8*@sml_alloc(i32 inreg 28)#0
%VI=getelementptr inbounds i8,i8*%VH,i64 -4
%VJ=bitcast i8*%VI to i32*
store i32 1342177304,i32*%VJ,align 4
%VK=load i8*,i8**%d,align 8
%VL=bitcast i8*%VH to i8**
store i8*%VK,i8**%VL,align 8
%VM=getelementptr inbounds i8,i8*%VH,i64 8
%VN=bitcast i8*%VM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2150 to void(...)*),void(...)**%VN,align 8
%VO=getelementptr inbounds i8,i8*%VH,i64 16
%VP=bitcast i8*%VO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2150 to void(...)*),void(...)**%VP,align 8
%VQ=getelementptr inbounds i8,i8*%VH,i64 24
%VR=bitcast i8*%VQ to i32*
store i32 -2147483647,i32*%VR,align 4
ret i8*%VH
VS:
%VT=getelementptr inbounds i8,i8*%S1,i64 8
%VU=bitcast i8*%VT to i8**
%VV=load i8*,i8**%VU,align 8
%VW=getelementptr inbounds i8,i8*%S1,i64 16
%VX=bitcast i8*%VW to i8**
%VY=load i8*,i8**%VX,align 8
store i8*%VY,i8**%b,align 8
%VZ=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%VV)
store i8*%VZ,i8**%c,align 8
%V0=call i8*@sml_alloc(i32 inreg 20)#0
%V1=getelementptr inbounds i8,i8*%V0,i64 -4
%V2=bitcast i8*%V1 to i32*
store i32 1342177296,i32*%V2,align 4
%V3=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V4=bitcast i8*%V0 to i8**
store i8*%V3,i8**%V4,align 8
%V5=getelementptr inbounds i8,i8*%V0,i64 8
%V6=bitcast i8*%V5 to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@hg,i64 0,i32 2)to i8*),i8**%V6,align 8
%V7=getelementptr inbounds i8,i8*%V0,i64 16
%V8=bitcast i8*%V7 to i32*
store i32 3,i32*%V8,align 4
%V9=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i64 0,i32 2)to i8*),i8*inreg%V0)
store i8*%V9,i8**%c,align 8
%Wa=call i8*@sml_alloc(i32 inreg 20)#0
%Wb=getelementptr inbounds i8,i8*%Wa,i64 -4
%Wc=bitcast i8*%Wb to i32*
store i32 1342177296,i32*%Wc,align 4
store i8*%Wa,i8**%d,align 8
%Wd=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%We=bitcast i8*%Wa to i8**
store i8*%Wd,i8**%We,align 8
%Wf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Wg=getelementptr inbounds i8,i8*%Wa,i64 8
%Wh=bitcast i8*%Wg to i8**
store i8*%Wf,i8**%Wh,align 8
%Wi=getelementptr inbounds i8,i8*%Wa,i64 16
%Wj=bitcast i8*%Wi to i32*
store i32 3,i32*%Wj,align 4
%Wk=call i8*@sml_alloc(i32 inreg 28)#0
%Wl=getelementptr inbounds i8,i8*%Wk,i64 -4
%Wm=bitcast i8*%Wl to i32*
store i32 1342177304,i32*%Wm,align 4
%Wn=load i8*,i8**%d,align 8
%Wo=bitcast i8*%Wk to i8**
store i8*%Wn,i8**%Wo,align 8
%Wp=getelementptr inbounds i8,i8*%Wk,i64 8
%Wq=bitcast i8*%Wp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2144 to void(...)*),void(...)**%Wq,align 8
%Wr=getelementptr inbounds i8,i8*%Wk,i64 16
%Ws=bitcast i8*%Wr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2144 to void(...)*),void(...)**%Ws,align 8
%Wt=getelementptr inbounds i8,i8*%Wk,i64 24
%Wu=bitcast i8*%Wt to i32*
store i32 -2147483647,i32*%Wu,align 4
ret i8*%Wk
Wv:
%Ww=getelementptr inbounds i8,i8*%S1,i64 8
%Wx=bitcast i8*%Ww to i8**
%Wy=load i8*,i8**%Wx,align 8
%Wz=getelementptr inbounds i8,i8*%S1,i64 16
%WA=bitcast i8*%Wz to i8**
%WB=load i8*,i8**%WA,align 8
store i8*%WB,i8**%b,align 8
%WC=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Wy)
store i8*%WC,i8**%c,align 8
%WD=call i8*@sml_alloc(i32 inreg 20)#0
%WE=getelementptr inbounds i8,i8*%WD,i64 -4
%WF=bitcast i8*%WE to i32*
store i32 1342177296,i32*%WF,align 4
%WG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%WH=bitcast i8*%WD to i8**
store i8*%WG,i8**%WH,align 8
%WI=getelementptr inbounds i8,i8*%WD,i64 8
%WJ=bitcast i8*%WI to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@he,i64 0,i32 2)to i8*),i8**%WJ,align 8
%WK=getelementptr inbounds i8,i8*%WD,i64 16
%WL=bitcast i8*%WK to i32*
store i32 3,i32*%WL,align 4
%WM=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cK,i64 0,i32 2)to i8*),i8*inreg%WD)
store i8*%WM,i8**%c,align 8
%WN=call i8*@sml_alloc(i32 inreg 20)#0
%WO=getelementptr inbounds i8,i8*%WN,i64 -4
%WP=bitcast i8*%WO to i32*
store i32 1342177296,i32*%WP,align 4
store i8*%WN,i8**%d,align 8
%WQ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%WR=bitcast i8*%WN to i8**
store i8*%WQ,i8**%WR,align 8
%WS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%WT=getelementptr inbounds i8,i8*%WN,i64 8
%WU=bitcast i8*%WT to i8**
store i8*%WS,i8**%WU,align 8
%WV=getelementptr inbounds i8,i8*%WN,i64 16
%WW=bitcast i8*%WV to i32*
store i32 3,i32*%WW,align 4
%WX=call i8*@sml_alloc(i32 inreg 28)#0
%WY=getelementptr inbounds i8,i8*%WX,i64 -4
%WZ=bitcast i8*%WY to i32*
store i32 1342177304,i32*%WZ,align 4
%W0=load i8*,i8**%d,align 8
%W1=bitcast i8*%WX to i8**
store i8*%W0,i8**%W1,align 8
%W2=getelementptr inbounds i8,i8*%WX,i64 8
%W3=bitcast i8*%W2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2138 to void(...)*),void(...)**%W3,align 8
%W4=getelementptr inbounds i8,i8*%WX,i64 16
%W5=bitcast i8*%W4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2138 to void(...)*),void(...)**%W5,align 8
%W6=getelementptr inbounds i8,i8*%WX,i64 24
%W7=bitcast i8*%W6 to i32*
store i32 -2147483647,i32*%W7,align 4
ret i8*%WX
W8:
%W9=getelementptr inbounds i8,i8*%S1,i64 8
%Xa=bitcast i8*%W9 to i8**
%Xb=load i8*,i8**%Xa,align 8
%Xc=getelementptr inbounds i8,i8*%S1,i64 16
%Xd=bitcast i8*%Xc to i8**
%Xe=load i8*,i8**%Xd,align 8
store i8*%Xe,i8**%b,align 8
%Xf=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Xb)
store i8*%Xf,i8**%c,align 8
%Xg=call i8*@sml_alloc(i32 inreg 20)#0
%Xh=getelementptr inbounds i8,i8*%Xg,i64 -4
%Xi=bitcast i8*%Xh to i32*
store i32 1342177296,i32*%Xi,align 4
%Xj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Xk=bitcast i8*%Xg to i8**
store i8*%Xj,i8**%Xk,align 8
%Xl=getelementptr inbounds i8,i8*%Xg,i64 8
%Xm=bitcast i8*%Xl to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ha,i64 0,i32 2)to i8*),i8**%Xm,align 8
%Xn=getelementptr inbounds i8,i8*%Xg,i64 16
%Xo=bitcast i8*%Xn to i32*
store i32 3,i32*%Xo,align 4
%Xp=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i64 0,i32 2)to i8*),i8*inreg%Xg)
store i8*%Xp,i8**%c,align 8
%Xq=call i8*@sml_alloc(i32 inreg 20)#0
%Xr=getelementptr inbounds i8,i8*%Xq,i64 -4
%Xs=bitcast i8*%Xr to i32*
store i32 1342177296,i32*%Xs,align 4
store i8*%Xq,i8**%d,align 8
%Xt=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Xu=bitcast i8*%Xq to i8**
store i8*%Xt,i8**%Xu,align 8
%Xv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Xw=getelementptr inbounds i8,i8*%Xq,i64 8
%Xx=bitcast i8*%Xw to i8**
store i8*%Xv,i8**%Xx,align 8
%Xy=getelementptr inbounds i8,i8*%Xq,i64 16
%Xz=bitcast i8*%Xy to i32*
store i32 3,i32*%Xz,align 4
%XA=call i8*@sml_alloc(i32 inreg 28)#0
%XB=getelementptr inbounds i8,i8*%XA,i64 -4
%XC=bitcast i8*%XB to i32*
store i32 1342177304,i32*%XC,align 4
%XD=load i8*,i8**%d,align 8
%XE=bitcast i8*%XA to i8**
store i8*%XD,i8**%XE,align 8
%XF=getelementptr inbounds i8,i8*%XA,i64 8
%XG=bitcast i8*%XF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2132 to void(...)*),void(...)**%XG,align 8
%XH=getelementptr inbounds i8,i8*%XA,i64 16
%XI=bitcast i8*%XH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2132 to void(...)*),void(...)**%XI,align 8
%XJ=getelementptr inbounds i8,i8*%XA,i64 24
%XK=bitcast i8*%XJ to i32*
store i32 -2147483647,i32*%XK,align 4
ret i8*%XA
XL:
%XM=getelementptr inbounds i8,i8*%S1,i64 8
%XN=bitcast i8*%XM to i8**
%XO=load i8*,i8**%XN,align 8
%XP=getelementptr inbounds i8,i8*%S1,i64 16
%XQ=bitcast i8*%XP to i8**
%XR=load i8*,i8**%XQ,align 8
store i8*%XR,i8**%b,align 8
%XS=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%XO)
store i8*%XS,i8**%c,align 8
%XT=call i8*@sml_alloc(i32 inreg 20)#0
%XU=getelementptr inbounds i8,i8*%XT,i64 -4
%XV=bitcast i8*%XU to i32*
store i32 1342177296,i32*%XV,align 4
%XW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%XX=bitcast i8*%XT to i8**
store i8*%XW,i8**%XX,align 8
%XY=getelementptr inbounds i8,i8*%XT,i64 8
%XZ=bitcast i8*%XY to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g8,i64 0,i32 2)to i8*),i8**%XZ,align 8
%X0=getelementptr inbounds i8,i8*%XT,i64 16
%X1=bitcast i8*%X0 to i32*
store i32 3,i32*%X1,align 4
%X2=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cK,i64 0,i32 2)to i8*),i8*inreg%XT)
store i8*%X2,i8**%c,align 8
%X3=call i8*@sml_alloc(i32 inreg 20)#0
%X4=getelementptr inbounds i8,i8*%X3,i64 -4
%X5=bitcast i8*%X4 to i32*
store i32 1342177296,i32*%X5,align 4
store i8*%X3,i8**%d,align 8
%X6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%X7=bitcast i8*%X3 to i8**
store i8*%X6,i8**%X7,align 8
%X8=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%X9=getelementptr inbounds i8,i8*%X3,i64 8
%Ya=bitcast i8*%X9 to i8**
store i8*%X8,i8**%Ya,align 8
%Yb=getelementptr inbounds i8,i8*%X3,i64 16
%Yc=bitcast i8*%Yb to i32*
store i32 3,i32*%Yc,align 4
%Yd=call i8*@sml_alloc(i32 inreg 28)#0
%Ye=getelementptr inbounds i8,i8*%Yd,i64 -4
%Yf=bitcast i8*%Ye to i32*
store i32 1342177304,i32*%Yf,align 4
%Yg=load i8*,i8**%d,align 8
%Yh=bitcast i8*%Yd to i8**
store i8*%Yg,i8**%Yh,align 8
%Yi=getelementptr inbounds i8,i8*%Yd,i64 8
%Yj=bitcast i8*%Yi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2126 to void(...)*),void(...)**%Yj,align 8
%Yk=getelementptr inbounds i8,i8*%Yd,i64 16
%Yl=bitcast i8*%Yk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2126 to void(...)*),void(...)**%Yl,align 8
%Ym=getelementptr inbounds i8,i8*%Yd,i64 24
%Yn=bitcast i8*%Ym to i32*
store i32 -2147483647,i32*%Yn,align 4
ret i8*%Yd
Yo:
%Yp=getelementptr inbounds i8,i8*%S1,i64 8
%Yq=bitcast i8*%Yp to i8**
%Yr=load i8*,i8**%Yq,align 8
%Ys=getelementptr inbounds i8,i8*%S1,i64 16
%Yt=bitcast i8*%Ys to i8**
%Yu=load i8*,i8**%Yt,align 8
store i8*%Yu,i8**%b,align 8
%Yv=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%Yr)
store i8*%Yv,i8**%c,align 8
%Yw=call i8*@sml_alloc(i32 inreg 20)#0
%Yx=getelementptr inbounds i8,i8*%Yw,i64 -4
%Yy=bitcast i8*%Yx to i32*
store i32 1342177296,i32*%Yy,align 4
%Yz=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%YA=bitcast i8*%Yw to i8**
store i8*%Yz,i8**%YA,align 8
%YB=getelementptr inbounds i8,i8*%Yw,i64 8
%YC=bitcast i8*%YB to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g4,i64 0,i32 2)to i8*),i8**%YC,align 8
%YD=getelementptr inbounds i8,i8*%Yw,i64 16
%YE=bitcast i8*%YD to i32*
store i32 3,i32*%YE,align 4
%YF=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cG,i64 0,i32 2)to i8*),i8*inreg%Yw)
store i8*%YF,i8**%c,align 8
%YG=call i8*@sml_alloc(i32 inreg 20)#0
%YH=getelementptr inbounds i8,i8*%YG,i64 -4
%YI=bitcast i8*%YH to i32*
store i32 1342177296,i32*%YI,align 4
store i8*%YG,i8**%d,align 8
%YJ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%YK=bitcast i8*%YG to i8**
store i8*%YJ,i8**%YK,align 8
%YL=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%YM=getelementptr inbounds i8,i8*%YG,i64 8
%YN=bitcast i8*%YM to i8**
store i8*%YL,i8**%YN,align 8
%YO=getelementptr inbounds i8,i8*%YG,i64 16
%YP=bitcast i8*%YO to i32*
store i32 3,i32*%YP,align 4
%YQ=call i8*@sml_alloc(i32 inreg 28)#0
%YR=getelementptr inbounds i8,i8*%YQ,i64 -4
%YS=bitcast i8*%YR to i32*
store i32 1342177304,i32*%YS,align 4
%YT=load i8*,i8**%d,align 8
%YU=bitcast i8*%YQ to i8**
store i8*%YT,i8**%YU,align 8
%YV=getelementptr inbounds i8,i8*%YQ,i64 8
%YW=bitcast i8*%YV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2120 to void(...)*),void(...)**%YW,align 8
%YX=getelementptr inbounds i8,i8*%YQ,i64 16
%YY=bitcast i8*%YX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2120 to void(...)*),void(...)**%YY,align 8
%YZ=getelementptr inbounds i8,i8*%YQ,i64 24
%Y0=bitcast i8*%YZ to i32*
store i32 -2147483647,i32*%Y0,align 4
ret i8*%YQ
Y1:
%Y2=getelementptr inbounds i8,i8*%s,i64 8
%Y3=bitcast i8*%Y2 to i8**
%Y4=load i8*,i8**%Y3,align 8
%Y5=bitcast i8*%Y4 to i8**
%Y6=load i8*,i8**%Y5,align 8
%Y7=bitcast i8*%Y6 to i8**
%Y8=load i8*,i8**%Y7,align 8
%Y9=getelementptr inbounds i8,i8*%Y6,i64 8
%Za=bitcast i8*%Y9 to i8**
%Zb=load i8*,i8**%Za,align 8
store i8*%Zb,i8**%b,align 8
%Zc=getelementptr inbounds i8,i8*%Y4,i64 8
%Zd=bitcast i8*%Zc to i8**
%Ze=load i8*,i8**%Zd,align 8
store i8*%Ze,i8**%c,align 8
%Zf=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%Y8)
store i8*%Zf,i8**%d,align 8
%Zg=call i8*@sml_alloc(i32 inreg 12)#0
%Zh=getelementptr inbounds i8,i8*%Zg,i64 -4
%Zi=bitcast i8*%Zh to i32*
store i32 1342177288,i32*%Zi,align 4
store i8*%Zg,i8**%e,align 8
%Zj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Zk=bitcast i8*%Zg to i8**
store i8*%Zj,i8**%Zk,align 8
%Zl=getelementptr inbounds i8,i8*%Zg,i64 8
%Zm=bitcast i8*%Zl to i32*
store i32 1,i32*%Zm,align 4
%Zn=call i8*@sml_alloc(i32 inreg 28)#0
%Zo=getelementptr inbounds i8,i8*%Zn,i64 -4
%Zp=bitcast i8*%Zo to i32*
store i32 1342177304,i32*%Zp,align 4
store i8*%Zn,i8**%d,align 8
%Zq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Zr=bitcast i8*%Zn to i8**
store i8*%Zq,i8**%Zr,align 8
%Zs=getelementptr inbounds i8,i8*%Zn,i64 8
%Zt=bitcast i8*%Zs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2112 to void(...)*),void(...)**%Zt,align 8
%Zu=getelementptr inbounds i8,i8*%Zn,i64 16
%Zv=bitcast i8*%Zu to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2112 to void(...)*),void(...)**%Zv,align 8
%Zw=getelementptr inbounds i8,i8*%Zn,i64 24
%Zx=bitcast i8*%Zw to i32*
store i32 -2147483647,i32*%Zx,align 4
%Zy=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Zz=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%Zy)
store i8*%Zz,i8**%b,align 8
%ZA=call i8*@sml_alloc(i32 inreg 12)#0
%ZB=getelementptr inbounds i8,i8*%ZA,i64 -4
%ZC=bitcast i8*%ZB to i32*
store i32 1342177288,i32*%ZC,align 4
store i8*%ZA,i8**%e,align 8
%ZD=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ZE=bitcast i8*%ZA to i8**
store i8*%ZD,i8**%ZE,align 8
%ZF=getelementptr inbounds i8,i8*%ZA,i64 8
%ZG=bitcast i8*%ZF to i32*
store i32 1,i32*%ZG,align 4
%ZH=call i8*@sml_alloc(i32 inreg 28)#0
%ZI=getelementptr inbounds i8,i8*%ZH,i64 -4
%ZJ=bitcast i8*%ZI to i32*
store i32 1342177304,i32*%ZJ,align 4
store i8*%ZH,i8**%b,align 8
%ZK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ZL=bitcast i8*%ZH to i8**
store i8*%ZK,i8**%ZL,align 8
%ZM=getelementptr inbounds i8,i8*%ZH,i64 8
%ZN=bitcast i8*%ZM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2113 to void(...)*),void(...)**%ZN,align 8
%ZO=getelementptr inbounds i8,i8*%ZH,i64 16
%ZP=bitcast i8*%ZO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2113 to void(...)*),void(...)**%ZP,align 8
%ZQ=getelementptr inbounds i8,i8*%ZH,i64 24
%ZR=bitcast i8*%ZQ to i32*
store i32 -2147483647,i32*%ZR,align 4
%ZS=call i8*@sml_alloc(i32 inreg 20)#0
%ZT=getelementptr inbounds i8,i8*%ZS,i64 -4
%ZU=bitcast i8*%ZT to i32*
store i32 1342177296,i32*%ZU,align 4
store i8*%ZS,i8**%e,align 8
%ZV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ZW=bitcast i8*%ZS to i8**
store i8*%ZV,i8**%ZW,align 8
%ZX=getelementptr inbounds i8,i8*%ZS,i64 8
%ZY=bitcast i8*%ZX to i8**
store i8*null,i8**%ZY,align 8
%ZZ=getelementptr inbounds i8,i8*%ZS,i64 16
%Z0=bitcast i8*%ZZ to i32*
store i32 3,i32*%Z0,align 4
%Z1=call i8*@sml_alloc(i32 inreg 20)#0
%Z2=getelementptr inbounds i8,i8*%Z1,i64 -4
%Z3=bitcast i8*%Z2 to i32*
store i32 1342177296,i32*%Z3,align 4
%Z4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Z5=bitcast i8*%Z1 to i8**
store i8*%Z4,i8**%Z5,align 8
%Z6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Z7=getelementptr inbounds i8,i8*%Z1,i64 8
%Z8=bitcast i8*%Z7 to i8**
store i8*%Z6,i8**%Z8,align 8
%Z9=getelementptr inbounds i8,i8*%Z1,i64 16
%aaa=bitcast i8*%Z9 to i32*
store i32 3,i32*%aaa,align 4
%aab=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cy,i64 0,i32 2)to i8*),i8*inreg%Z1)
store i8*%aab,i8**%b,align 8
%aac=call i8*@sml_alloc(i32 inreg 20)#0
%aad=getelementptr inbounds i8,i8*%aac,i64 -4
%aae=bitcast i8*%aad to i32*
store i32 1342177296,i32*%aae,align 4
store i8*%aac,i8**%d,align 8
%aaf=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aag=bitcast i8*%aac to i8**
store i8*%aaf,i8**%aag,align 8
%aah=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aai=getelementptr inbounds i8,i8*%aac,i64 8
%aaj=bitcast i8*%aai to i8**
store i8*%aah,i8**%aaj,align 8
%aak=getelementptr inbounds i8,i8*%aac,i64 16
%aal=bitcast i8*%aak to i32*
store i32 3,i32*%aal,align 4
%aam=call i8*@sml_alloc(i32 inreg 28)#0
%aan=getelementptr inbounds i8,i8*%aam,i64 -4
%aao=bitcast i8*%aan to i32*
store i32 1342177304,i32*%aao,align 4
%aap=load i8*,i8**%d,align 8
%aaq=bitcast i8*%aam to i8**
store i8*%aap,i8**%aaq,align 8
%aar=getelementptr inbounds i8,i8*%aam,i64 8
%aas=bitcast i8*%aar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2114 to void(...)*),void(...)**%aas,align 8
%aat=getelementptr inbounds i8,i8*%aam,i64 16
%aau=bitcast i8*%aat to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2114 to void(...)*),void(...)**%aau,align 8
%aav=getelementptr inbounds i8,i8*%aam,i64 24
%aaw=bitcast i8*%aav to i32*
store i32 -2147483647,i32*%aaw,align 4
ret i8*%aam
aax:
%aay=getelementptr inbounds i8,i8*%s,i64 8
%aaz=bitcast i8*%aay to i8**
%aaA=load i8*,i8**%aaz,align 8
%aaB=bitcast i8*%aaA to i8**
%aaC=load i8*,i8**%aaB,align 8
%aaD=getelementptr inbounds i8,i8*%aaA,i64 8
%aaE=bitcast i8*%aaD to i8**
%aaF=load i8*,i8**%aaE,align 8
store i8*%aaF,i8**%b,align 8
%aaG=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%aaC)
store i8*%aaG,i8**%c,align 8
%aaH=call i8*@sml_alloc(i32 inreg 12)#0
%aaI=getelementptr inbounds i8,i8*%aaH,i64 -4
%aaJ=bitcast i8*%aaI to i32*
store i32 1342177288,i32*%aaJ,align 4
store i8*%aaH,i8**%d,align 8
%aaK=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aaL=bitcast i8*%aaH to i8**
store i8*%aaK,i8**%aaL,align 8
%aaM=getelementptr inbounds i8,i8*%aaH,i64 8
%aaN=bitcast i8*%aaM to i32*
store i32 1,i32*%aaN,align 4
%aaO=call i8*@sml_alloc(i32 inreg 28)#0
%aaP=getelementptr inbounds i8,i8*%aaO,i64 -4
%aaQ=bitcast i8*%aaP to i32*
store i32 1342177304,i32*%aaQ,align 4
store i8*%aaO,i8**%c,align 8
%aaR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aaS=bitcast i8*%aaO to i8**
store i8*%aaR,i8**%aaS,align 8
%aaT=getelementptr inbounds i8,i8*%aaO,i64 8
%aaU=bitcast i8*%aaT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2110 to void(...)*),void(...)**%aaU,align 8
%aaV=getelementptr inbounds i8,i8*%aaO,i64 16
%aaW=bitcast i8*%aaV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2110 to void(...)*),void(...)**%aaW,align 8
%aaX=getelementptr inbounds i8,i8*%aaO,i64 24
%aaY=bitcast i8*%aaX to i32*
store i32 -2147483647,i32*%aaY,align 4
%aaZ=call i8*@sml_alloc(i32 inreg 20)#0
%aa0=getelementptr inbounds i8,i8*%aaZ,i64 -4
%aa1=bitcast i8*%aa0 to i32*
store i32 1342177296,i32*%aa1,align 4
%aa2=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aa3=bitcast i8*%aaZ to i8**
store i8*%aa2,i8**%aa3,align 8
%aa4=getelementptr inbounds i8,i8*%aaZ,i64 8
%aa5=bitcast i8*%aa4 to i8**
store i8*null,i8**%aa5,align 8
%aa6=getelementptr inbounds i8,i8*%aaZ,i64 16
%aa7=bitcast i8*%aa6 to i32*
store i32 3,i32*%aa7,align 4
%aa8=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cu,i64 0,i32 2)to i8*),i8*inreg%aaZ)
store i8*%aa8,i8**%c,align 8
%aa9=call i8*@sml_alloc(i32 inreg 20)#0
%aba=getelementptr inbounds i8,i8*%aa9,i64 -4
%abb=bitcast i8*%aba to i32*
store i32 1342177296,i32*%abb,align 4
store i8*%aa9,i8**%d,align 8
%abc=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%abd=bitcast i8*%aa9 to i8**
store i8*%abc,i8**%abd,align 8
%abe=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%abf=getelementptr inbounds i8,i8*%aa9,i64 8
%abg=bitcast i8*%abf to i8**
store i8*%abe,i8**%abg,align 8
%abh=getelementptr inbounds i8,i8*%aa9,i64 16
%abi=bitcast i8*%abh to i32*
store i32 3,i32*%abi,align 4
%abj=call i8*@sml_alloc(i32 inreg 28)#0
%abk=getelementptr inbounds i8,i8*%abj,i64 -4
%abl=bitcast i8*%abk to i32*
store i32 1342177304,i32*%abl,align 4
%abm=load i8*,i8**%d,align 8
%abn=bitcast i8*%abj to i8**
store i8*%abm,i8**%abn,align 8
%abo=getelementptr inbounds i8,i8*%abj,i64 8
%abp=bitcast i8*%abo to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2111 to void(...)*),void(...)**%abp,align 8
%abq=getelementptr inbounds i8,i8*%abj,i64 16
%abr=bitcast i8*%abq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2111 to void(...)*),void(...)**%abr,align 8
%abs=getelementptr inbounds i8,i8*%abj,i64 24
%abt=bitcast i8*%abs to i32*
store i32 -2147483647,i32*%abt,align 4
ret i8*%abj
abu:
%abv=getelementptr inbounds i8,i8*%s,i64 8
%abw=bitcast i8*%abv to i8**
%abx=load i8*,i8**%abw,align 8
store i8*%abx,i8**%b,align 8
%aby=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g2,i64 0,i32 2)to i8*))
store i8*%aby,i8**%c,align 8
%abz=call i8*@sml_alloc(i32 inreg 20)#0
%abA=getelementptr inbounds i8,i8*%abz,i64 -4
%abB=bitcast i8*%abA to i32*
store i32 1342177296,i32*%abB,align 4
store i8*%abz,i8**%d,align 8
%abC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%abD=bitcast i8*%abz to i8**
store i8*%abC,i8**%abD,align 8
%abE=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%abF=getelementptr inbounds i8,i8*%abz,i64 8
%abG=bitcast i8*%abF to i8**
store i8*%abE,i8**%abG,align 8
%abH=getelementptr inbounds i8,i8*%abz,i64 16
%abI=bitcast i8*%abH to i32*
store i32 3,i32*%abI,align 4
%abJ=call i8*@sml_alloc(i32 inreg 28)#0
%abK=getelementptr inbounds i8,i8*%abJ,i64 -4
%abL=bitcast i8*%abK to i32*
store i32 1342177304,i32*%abL,align 4
%abM=load i8*,i8**%d,align 8
%abN=bitcast i8*%abJ to i8**
store i8*%abM,i8**%abN,align 8
%abO=getelementptr inbounds i8,i8*%abJ,i64 8
%abP=bitcast i8*%abO to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2109 to void(...)*),void(...)**%abP,align 8
%abQ=getelementptr inbounds i8,i8*%abJ,i64 16
%abR=bitcast i8*%abQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2109 to void(...)*),void(...)**%abR,align 8
%abS=getelementptr inbounds i8,i8*%abJ,i64 24
%abT=bitcast i8*%abS to i32*
store i32 -2147483647,i32*%abT,align 4
ret i8*%abJ
abU:
%abV=getelementptr inbounds i8,i8*%s,i64 8
%abW=bitcast i8*%abV to i8**
%abX=load i8*,i8**%abW,align 8
%abY=bitcast i8*%abX to i8**
%abZ=load i8*,i8**%abY,align 8
%ab0=bitcast i8*%abZ to i32*
%ab1=load i32,i32*%ab0,align 4
switch i32%ab1,label%ab2[
i32 2,label%aip
i32 5,label%aha
i32 4,label%afV
i32 3,label%aeG
i32 1,label%adw
i32 0,label%ack
]
ab2:
call void@sml_matchcomp_bug()
%ab3=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ab3,i8**%b,align 8
%ab4=call i8*@sml_alloc(i32 inreg 20)#0
%ab5=getelementptr inbounds i8,i8*%ab4,i64 -4
%ab6=bitcast i8*%ab5 to i32*
store i32 1342177296,i32*%ab6,align 4
store i8*%ab4,i8**%c,align 8
%ab7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ab8=bitcast i8*%ab4 to i8**
store i8*%ab7,i8**%ab8,align 8
%ab9=getelementptr inbounds i8,i8*%ab4,i64 8
%aca=bitcast i8*%ab9 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hO,i64 0,i32 2,i64 0),i8**%aca,align 8
%acb=getelementptr inbounds i8,i8*%ab4,i64 16
%acc=bitcast i8*%acb to i32*
store i32 3,i32*%acc,align 4
%acd=call i8*@sml_alloc(i32 inreg 60)#0
%ace=getelementptr inbounds i8,i8*%acd,i64 -4
%acf=bitcast i8*%ace to i32*
store i32 1342177336,i32*%acf,align 4
%acg=getelementptr inbounds i8,i8*%acd,i64 56
%ach=bitcast i8*%acg to i32*
store i32 1,i32*%ach,align 4
%aci=load i8*,i8**%c,align 8
%acj=bitcast i8*%acd to i8**
store i8*%aci,i8**%acj,align 8
call void@sml_raise(i8*inreg%acd)#1
unreachable
ack:
%acl=getelementptr inbounds i8,i8*%abZ,i64 4
%acm=bitcast i8*%acl to i32*
%acn=load i32,i32*%acm,align 4
%aco=icmp eq i32%acn,0
%acp=getelementptr inbounds i8,i8*%abX,i64 8
%acq=bitcast i8*%acp to i8**
%acr=load i8*,i8**%acq,align 8
store i8*%acr,i8**%b,align 8
br i1%aco,label%acZ,label%acs
acs:
%act=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cn,i64 0,i32 2)to i8*),i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g1,i64 0,i32 2)to i8*))
store i8*%act,i8**%c,align 8
%acu=call i8*@sml_alloc(i32 inreg 20)#0
%acv=getelementptr inbounds i8,i8*%acu,i64 -4
%acw=bitcast i8*%acv to i32*
store i32 1342177296,i32*%acw,align 4
%acx=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%acy=bitcast i8*%acu to i8**
store i8*%acx,i8**%acy,align 8
%acz=getelementptr inbounds i8,i8*%acu,i64 8
%acA=bitcast i8*%acz to i8**
store i8*null,i8**%acA,align 8
%acB=getelementptr inbounds i8,i8*%acu,i64 16
%acC=bitcast i8*%acB to i32*
store i32 3,i32*%acC,align 4
%acD=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%acu)
store i8*%acD,i8**%c,align 8
%acE=call i8*@sml_alloc(i32 inreg 20)#0
%acF=getelementptr inbounds i8,i8*%acE,i64 -4
%acG=bitcast i8*%acF to i32*
store i32 1342177296,i32*%acG,align 4
store i8*%acE,i8**%d,align 8
%acH=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%acI=bitcast i8*%acE to i8**
store i8*%acH,i8**%acI,align 8
%acJ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%acK=getelementptr inbounds i8,i8*%acE,i64 8
%acL=bitcast i8*%acK to i8**
store i8*%acJ,i8**%acL,align 8
%acM=getelementptr inbounds i8,i8*%acE,i64 16
%acN=bitcast i8*%acM to i32*
store i32 3,i32*%acN,align 4
%acO=call i8*@sml_alloc(i32 inreg 28)#0
%acP=getelementptr inbounds i8,i8*%acO,i64 -4
%acQ=bitcast i8*%acP to i32*
store i32 1342177304,i32*%acQ,align 4
%acR=load i8*,i8**%d,align 8
%acS=bitcast i8*%acO to i8**
store i8*%acR,i8**%acS,align 8
%acT=getelementptr inbounds i8,i8*%acO,i64 8
%acU=bitcast i8*%acT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2106 to void(...)*),void(...)**%acU,align 8
%acV=getelementptr inbounds i8,i8*%acO,i64 16
%acW=bitcast i8*%acV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2106 to void(...)*),void(...)**%acW,align 8
%acX=getelementptr inbounds i8,i8*%acO,i64 24
%acY=bitcast i8*%acX to i32*
store i32 -2147483647,i32*%acY,align 4
ret i8*%acO
acZ:
%ac0=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cn,i64 0,i32 2)to i8*),i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@g0,i64 0,i32 2)to i8*))
store i8*%ac0,i8**%c,align 8
%ac1=call i8*@sml_alloc(i32 inreg 20)#0
%ac2=getelementptr inbounds i8,i8*%ac1,i64 -4
%ac3=bitcast i8*%ac2 to i32*
store i32 1342177296,i32*%ac3,align 4
%ac4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ac5=bitcast i8*%ac1 to i8**
store i8*%ac4,i8**%ac5,align 8
%ac6=getelementptr inbounds i8,i8*%ac1,i64 8
%ac7=bitcast i8*%ac6 to i8**
store i8*null,i8**%ac7,align 8
%ac8=getelementptr inbounds i8,i8*%ac1,i64 16
%ac9=bitcast i8*%ac8 to i32*
store i32 3,i32*%ac9,align 4
%ada=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%ac1)
store i8*%ada,i8**%c,align 8
%adb=call i8*@sml_alloc(i32 inreg 20)#0
%adc=getelementptr inbounds i8,i8*%adb,i64 -4
%add=bitcast i8*%adc to i32*
store i32 1342177296,i32*%add,align 4
store i8*%adb,i8**%d,align 8
%ade=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%adf=bitcast i8*%adb to i8**
store i8*%ade,i8**%adf,align 8
%adg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%adh=getelementptr inbounds i8,i8*%adb,i64 8
%adi=bitcast i8*%adh to i8**
store i8*%adg,i8**%adi,align 8
%adj=getelementptr inbounds i8,i8*%adb,i64 16
%adk=bitcast i8*%adj to i32*
store i32 3,i32*%adk,align 4
%adl=call i8*@sml_alloc(i32 inreg 28)#0
%adm=getelementptr inbounds i8,i8*%adl,i64 -4
%adn=bitcast i8*%adm to i32*
store i32 1342177304,i32*%adn,align 4
%ado=load i8*,i8**%d,align 8
%adp=bitcast i8*%adl to i8**
store i8*%ado,i8**%adp,align 8
%adq=getelementptr inbounds i8,i8*%adl,i64 8
%adr=bitcast i8*%adq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2104 to void(...)*),void(...)**%adr,align 8
%ads=getelementptr inbounds i8,i8*%adl,i64 16
%adt=bitcast i8*%ads to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2104 to void(...)*),void(...)**%adt,align 8
%adu=getelementptr inbounds i8,i8*%adl,i64 24
%adv=bitcast i8*%adu to i32*
store i32 -2147483647,i32*%adv,align 4
ret i8*%adl
adw:
%adx=getelementptr inbounds i8,i8*%abZ,i64 4
%ady=load i8,i8*%adx,align 1
%adz=getelementptr inbounds i8,i8*%abX,i64 8
%adA=bitcast i8*%adz to i8**
%adB=load i8*,i8**%adA,align 8
store i8*%adB,i8**%b,align 8
%adC=call i8*@sml_alloc(i32 inreg 12)#0
%adD=getelementptr inbounds i8,i8*%adC,i64 -4
%adE=bitcast i8*%adD to i32*
store i32 1342177288,i32*%adE,align 4
store i8*%adC,i8**%c,align 8
%adF=getelementptr inbounds i8,i8*%adC,i64 4
%adG=bitcast i8*%adC to i64*
store i64 0,i64*%adG,align 4
store i8%ady,i8*%adF,align 1
%adH=getelementptr inbounds i8,i8*%adC,i64 8
%adI=bitcast i8*%adH to i32*
store i32 0,i32*%adI,align 4
%adJ=call i8*@sml_alloc(i32 inreg 12)#0
%adK=getelementptr inbounds i8,i8*%adJ,i64 -4
%adL=bitcast i8*%adK to i32*
store i32 1342177288,i32*%adL,align 4
store i8*%adJ,i8**%d,align 8
%adM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%adN=bitcast i8*%adJ to i8**
store i8*%adM,i8**%adN,align 8
%adO=getelementptr inbounds i8,i8*%adJ,i64 8
%adP=bitcast i8*%adO to i32*
store i32 1,i32*%adP,align 4
%adQ=call i8*@sml_alloc(i32 inreg 28)#0
%adR=getelementptr inbounds i8,i8*%adQ,i64 -4
%adS=bitcast i8*%adR to i32*
store i32 1342177304,i32*%adS,align 4
store i8*%adQ,i8**%c,align 8
%adT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%adU=bitcast i8*%adQ to i8**
store i8*%adT,i8**%adU,align 8
%adV=getelementptr inbounds i8,i8*%adQ,i64 8
%adW=bitcast i8*%adV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2101 to void(...)*),void(...)**%adW,align 8
%adX=getelementptr inbounds i8,i8*%adQ,i64 16
%adY=bitcast i8*%adX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2101 to void(...)*),void(...)**%adY,align 8
%adZ=getelementptr inbounds i8,i8*%adQ,i64 24
%ad0=bitcast i8*%adZ to i32*
store i32 -2147483647,i32*%ad0,align 4
%ad1=call i8*@sml_alloc(i32 inreg 20)#0
%ad2=getelementptr inbounds i8,i8*%ad1,i64 -4
%ad3=bitcast i8*%ad2 to i32*
store i32 1342177296,i32*%ad3,align 4
%ad4=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ad5=bitcast i8*%ad1 to i8**
store i8*%ad4,i8**%ad5,align 8
%ad6=getelementptr inbounds i8,i8*%ad1,i64 8
%ad7=bitcast i8*%ad6 to i8**
store i8*null,i8**%ad7,align 8
%ad8=getelementptr inbounds i8,i8*%ad1,i64 16
%ad9=bitcast i8*%ad8 to i32*
store i32 3,i32*%ad9,align 4
%aea=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cj,i64 0,i32 2)to i8*),i8*inreg%ad1)
store i8*%aea,i8**%c,align 8
%aeb=call i8*@sml_alloc(i32 inreg 20)#0
%aec=getelementptr inbounds i8,i8*%aeb,i64 -4
%aed=bitcast i8*%aec to i32*
store i32 1342177296,i32*%aed,align 4
%aee=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aef=bitcast i8*%aeb to i8**
store i8*%aee,i8**%aef,align 8
%aeg=getelementptr inbounds i8,i8*%aeb,i64 8
%aeh=bitcast i8*%aeg to i8**
store i8*null,i8**%aeh,align 8
%aei=getelementptr inbounds i8,i8*%aeb,i64 16
%aej=bitcast i8*%aei to i32*
store i32 3,i32*%aej,align 4
%aek=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%aeb)
store i8*%aek,i8**%c,align 8
%ael=call i8*@sml_alloc(i32 inreg 20)#0
%aem=getelementptr inbounds i8,i8*%ael,i64 -4
%aen=bitcast i8*%aem to i32*
store i32 1342177296,i32*%aen,align 4
store i8*%ael,i8**%d,align 8
%aeo=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aep=bitcast i8*%ael to i8**
store i8*%aeo,i8**%aep,align 8
%aeq=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aer=getelementptr inbounds i8,i8*%ael,i64 8
%aes=bitcast i8*%aer to i8**
store i8*%aeq,i8**%aes,align 8
%aet=getelementptr inbounds i8,i8*%ael,i64 16
%aeu=bitcast i8*%aet to i32*
store i32 3,i32*%aeu,align 4
%aev=call i8*@sml_alloc(i32 inreg 28)#0
%aew=getelementptr inbounds i8,i8*%aev,i64 -4
%aex=bitcast i8*%aew to i32*
store i32 1342177304,i32*%aex,align 4
%aey=load i8*,i8**%d,align 8
%aez=bitcast i8*%aev to i8**
store i8*%aey,i8**%aez,align 8
%aeA=getelementptr inbounds i8,i8*%aev,i64 8
%aeB=bitcast i8*%aeA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2102 to void(...)*),void(...)**%aeB,align 8
%aeC=getelementptr inbounds i8,i8*%aev,i64 16
%aeD=bitcast i8*%aeC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2102 to void(...)*),void(...)**%aeD,align 8
%aeE=getelementptr inbounds i8,i8*%aev,i64 24
%aeF=bitcast i8*%aeE to i32*
store i32 -2147483647,i32*%aeF,align 4
ret i8*%aev
aeG:
%aeH=getelementptr inbounds i8,i8*%abZ,i64 8
%aeI=bitcast i8*%aeH to i8**
%aeJ=load i8*,i8**%aeI,align 8
store i8*%aeJ,i8**%b,align 8
%aeK=getelementptr inbounds i8,i8*%abX,i64 8
%aeL=bitcast i8*%aeK to i8**
%aeM=load i8*,i8**%aeL,align 8
store i8*%aeM,i8**%c,align 8
%aeN=call i8*@sml_alloc(i32 inreg 20)#0
%aeO=getelementptr inbounds i8,i8*%aeN,i64 -4
%aeP=bitcast i8*%aeO to i32*
store i32 1342177296,i32*%aeP,align 4
store i8*%aeN,i8**%d,align 8
%aeQ=getelementptr inbounds i8,i8*%aeN,i64 4
%aeR=bitcast i8*%aeQ to i32*
store i32 0,i32*%aeR,align 1
%aeS=bitcast i8*%aeN to i32*
store i32 2,i32*%aeS,align 4
%aeT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aeU=getelementptr inbounds i8,i8*%aeN,i64 8
%aeV=bitcast i8*%aeU to i8**
store i8*%aeT,i8**%aeV,align 8
%aeW=getelementptr inbounds i8,i8*%aeN,i64 16
%aeX=bitcast i8*%aeW to i32*
store i32 2,i32*%aeX,align 4
%aeY=call i8*@sml_alloc(i32 inreg 12)#0
%aeZ=getelementptr inbounds i8,i8*%aeY,i64 -4
%ae0=bitcast i8*%aeZ to i32*
store i32 1342177288,i32*%ae0,align 4
store i8*%aeY,i8**%b,align 8
%ae1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ae2=bitcast i8*%aeY to i8**
store i8*%ae1,i8**%ae2,align 8
%ae3=getelementptr inbounds i8,i8*%aeY,i64 8
%ae4=bitcast i8*%ae3 to i32*
store i32 1,i32*%ae4,align 4
%ae5=call i8*@sml_alloc(i32 inreg 28)#0
%ae6=getelementptr inbounds i8,i8*%ae5,i64 -4
%ae7=bitcast i8*%ae6 to i32*
store i32 1342177304,i32*%ae7,align 4
store i8*%ae5,i8**%d,align 8
%ae8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ae9=bitcast i8*%ae5 to i8**
store i8*%ae8,i8**%ae9,align 8
%afa=getelementptr inbounds i8,i8*%ae5,i64 8
%afb=bitcast i8*%afa to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2099 to void(...)*),void(...)**%afb,align 8
%afc=getelementptr inbounds i8,i8*%ae5,i64 16
%afd=bitcast i8*%afc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2099 to void(...)*),void(...)**%afd,align 8
%afe=getelementptr inbounds i8,i8*%ae5,i64 24
%aff=bitcast i8*%afe to i32*
store i32 -2147483647,i32*%aff,align 4
%afg=call i8*@sml_alloc(i32 inreg 20)#0
%afh=getelementptr inbounds i8,i8*%afg,i64 -4
%afi=bitcast i8*%afh to i32*
store i32 1342177296,i32*%afi,align 4
%afj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%afk=bitcast i8*%afg to i8**
store i8*%afj,i8**%afk,align 8
%afl=getelementptr inbounds i8,i8*%afg,i64 8
%afm=bitcast i8*%afl to i8**
store i8*null,i8**%afm,align 8
%afn=getelementptr inbounds i8,i8*%afg,i64 16
%afo=bitcast i8*%afn to i32*
store i32 3,i32*%afo,align 4
%afp=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cb,i64 0,i32 2)to i8*),i8*inreg%afg)
store i8*%afp,i8**%b,align 8
%afq=call i8*@sml_alloc(i32 inreg 20)#0
%afr=getelementptr inbounds i8,i8*%afq,i64 -4
%afs=bitcast i8*%afr to i32*
store i32 1342177296,i32*%afs,align 4
%aft=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%afu=bitcast i8*%afq to i8**
store i8*%aft,i8**%afu,align 8
%afv=getelementptr inbounds i8,i8*%afq,i64 8
%afw=bitcast i8*%afv to i8**
store i8*null,i8**%afw,align 8
%afx=getelementptr inbounds i8,i8*%afq,i64 16
%afy=bitcast i8*%afx to i32*
store i32 3,i32*%afy,align 4
%afz=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%afq)
store i8*%afz,i8**%b,align 8
%afA=call i8*@sml_alloc(i32 inreg 20)#0
%afB=getelementptr inbounds i8,i8*%afA,i64 -4
%afC=bitcast i8*%afB to i32*
store i32 1342177296,i32*%afC,align 4
store i8*%afA,i8**%d,align 8
%afD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%afE=bitcast i8*%afA to i8**
store i8*%afD,i8**%afE,align 8
%afF=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%afG=getelementptr inbounds i8,i8*%afA,i64 8
%afH=bitcast i8*%afG to i8**
store i8*%afF,i8**%afH,align 8
%afI=getelementptr inbounds i8,i8*%afA,i64 16
%afJ=bitcast i8*%afI to i32*
store i32 3,i32*%afJ,align 4
%afK=call i8*@sml_alloc(i32 inreg 28)#0
%afL=getelementptr inbounds i8,i8*%afK,i64 -4
%afM=bitcast i8*%afL to i32*
store i32 1342177304,i32*%afM,align 4
%afN=load i8*,i8**%d,align 8
%afO=bitcast i8*%afK to i8**
store i8*%afN,i8**%afO,align 8
%afP=getelementptr inbounds i8,i8*%afK,i64 8
%afQ=bitcast i8*%afP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2100 to void(...)*),void(...)**%afQ,align 8
%afR=getelementptr inbounds i8,i8*%afK,i64 16
%afS=bitcast i8*%afR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2100 to void(...)*),void(...)**%afS,align 8
%afT=getelementptr inbounds i8,i8*%afK,i64 24
%afU=bitcast i8*%afT to i32*
store i32 -2147483647,i32*%afU,align 4
ret i8*%afK
afV:
%afW=getelementptr inbounds i8,i8*%abZ,i64 8
%afX=bitcast i8*%afW to i8**
%afY=load i8*,i8**%afX,align 8
store i8*%afY,i8**%b,align 8
%afZ=getelementptr inbounds i8,i8*%abX,i64 8
%af0=bitcast i8*%afZ to i8**
%af1=load i8*,i8**%af0,align 8
store i8*%af1,i8**%c,align 8
%af2=call i8*@sml_alloc(i32 inreg 20)#0
%af3=getelementptr inbounds i8,i8*%af2,i64 -4
%af4=bitcast i8*%af3 to i32*
store i32 1342177296,i32*%af4,align 4
store i8*%af2,i8**%d,align 8
%af5=getelementptr inbounds i8,i8*%af2,i64 4
%af6=bitcast i8*%af5 to i32*
store i32 0,i32*%af6,align 1
%af7=bitcast i8*%af2 to i32*
store i32 3,i32*%af7,align 4
%af8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%af9=getelementptr inbounds i8,i8*%af2,i64 8
%aga=bitcast i8*%af9 to i8**
store i8*%af8,i8**%aga,align 8
%agb=getelementptr inbounds i8,i8*%af2,i64 16
%agc=bitcast i8*%agb to i32*
store i32 2,i32*%agc,align 4
%agd=call i8*@sml_alloc(i32 inreg 12)#0
%age=getelementptr inbounds i8,i8*%agd,i64 -4
%agf=bitcast i8*%age to i32*
store i32 1342177288,i32*%agf,align 4
store i8*%agd,i8**%b,align 8
%agg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%agh=bitcast i8*%agd to i8**
store i8*%agg,i8**%agh,align 8
%agi=getelementptr inbounds i8,i8*%agd,i64 8
%agj=bitcast i8*%agi to i32*
store i32 1,i32*%agj,align 4
%agk=call i8*@sml_alloc(i32 inreg 28)#0
%agl=getelementptr inbounds i8,i8*%agk,i64 -4
%agm=bitcast i8*%agl to i32*
store i32 1342177304,i32*%agm,align 4
store i8*%agk,i8**%d,align 8
%agn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ago=bitcast i8*%agk to i8**
store i8*%agn,i8**%ago,align 8
%agp=getelementptr inbounds i8,i8*%agk,i64 8
%agq=bitcast i8*%agp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2097 to void(...)*),void(...)**%agq,align 8
%agr=getelementptr inbounds i8,i8*%agk,i64 16
%ags=bitcast i8*%agr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2097 to void(...)*),void(...)**%ags,align 8
%agt=getelementptr inbounds i8,i8*%agk,i64 24
%agu=bitcast i8*%agt to i32*
store i32 -2147483647,i32*%agu,align 4
%agv=call i8*@sml_alloc(i32 inreg 20)#0
%agw=getelementptr inbounds i8,i8*%agv,i64 -4
%agx=bitcast i8*%agw to i32*
store i32 1342177296,i32*%agx,align 4
%agy=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%agz=bitcast i8*%agv to i8**
store i8*%agy,i8**%agz,align 8
%agA=getelementptr inbounds i8,i8*%agv,i64 8
%agB=bitcast i8*%agA to i8**
store i8*null,i8**%agB,align 8
%agC=getelementptr inbounds i8,i8*%agv,i64 16
%agD=bitcast i8*%agC to i32*
store i32 3,i32*%agD,align 4
%agE=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@cf,i64 0,i32 2)to i8*),i8*inreg%agv)
store i8*%agE,i8**%b,align 8
%agF=call i8*@sml_alloc(i32 inreg 20)#0
%agG=getelementptr inbounds i8,i8*%agF,i64 -4
%agH=bitcast i8*%agG to i32*
store i32 1342177296,i32*%agH,align 4
%agI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%agJ=bitcast i8*%agF to i8**
store i8*%agI,i8**%agJ,align 8
%agK=getelementptr inbounds i8,i8*%agF,i64 8
%agL=bitcast i8*%agK to i8**
store i8*null,i8**%agL,align 8
%agM=getelementptr inbounds i8,i8*%agF,i64 16
%agN=bitcast i8*%agM to i32*
store i32 3,i32*%agN,align 4
%agO=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%agF)
store i8*%agO,i8**%b,align 8
%agP=call i8*@sml_alloc(i32 inreg 20)#0
%agQ=getelementptr inbounds i8,i8*%agP,i64 -4
%agR=bitcast i8*%agQ to i32*
store i32 1342177296,i32*%agR,align 4
store i8*%agP,i8**%d,align 8
%agS=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%agT=bitcast i8*%agP to i8**
store i8*%agS,i8**%agT,align 8
%agU=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%agV=getelementptr inbounds i8,i8*%agP,i64 8
%agW=bitcast i8*%agV to i8**
store i8*%agU,i8**%agW,align 8
%agX=getelementptr inbounds i8,i8*%agP,i64 16
%agY=bitcast i8*%agX to i32*
store i32 3,i32*%agY,align 4
%agZ=call i8*@sml_alloc(i32 inreg 28)#0
%ag0=getelementptr inbounds i8,i8*%agZ,i64 -4
%ag1=bitcast i8*%ag0 to i32*
store i32 1342177304,i32*%ag1,align 4
%ag2=load i8*,i8**%d,align 8
%ag3=bitcast i8*%agZ to i8**
store i8*%ag2,i8**%ag3,align 8
%ag4=getelementptr inbounds i8,i8*%agZ,i64 8
%ag5=bitcast i8*%ag4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2098 to void(...)*),void(...)**%ag5,align 8
%ag6=getelementptr inbounds i8,i8*%agZ,i64 16
%ag7=bitcast i8*%ag6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2098 to void(...)*),void(...)**%ag7,align 8
%ag8=getelementptr inbounds i8,i8*%agZ,i64 24
%ag9=bitcast i8*%ag8 to i32*
store i32 -2147483647,i32*%ag9,align 4
ret i8*%agZ
aha:
%ahb=getelementptr inbounds i8,i8*%abZ,i64 8
%ahc=bitcast i8*%ahb to i8**
%ahd=load i8*,i8**%ahc,align 8
store i8*%ahd,i8**%b,align 8
%ahe=getelementptr inbounds i8,i8*%abX,i64 8
%ahf=bitcast i8*%ahe to i8**
%ahg=load i8*,i8**%ahf,align 8
store i8*%ahg,i8**%c,align 8
%ahh=call i8*@sml_alloc(i32 inreg 20)#0
%ahi=getelementptr inbounds i8,i8*%ahh,i64 -4
%ahj=bitcast i8*%ahi to i32*
store i32 1342177296,i32*%ahj,align 4
store i8*%ahh,i8**%d,align 8
%ahk=getelementptr inbounds i8,i8*%ahh,i64 4
%ahl=bitcast i8*%ahk to i32*
store i32 0,i32*%ahl,align 1
%ahm=bitcast i8*%ahh to i32*
store i32 5,i32*%ahm,align 4
%ahn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aho=getelementptr inbounds i8,i8*%ahh,i64 8
%ahp=bitcast i8*%aho to i8**
store i8*%ahn,i8**%ahp,align 8
%ahq=getelementptr inbounds i8,i8*%ahh,i64 16
%ahr=bitcast i8*%ahq to i32*
store i32 2,i32*%ahr,align 4
%ahs=call i8*@sml_alloc(i32 inreg 12)#0
%aht=getelementptr inbounds i8,i8*%ahs,i64 -4
%ahu=bitcast i8*%aht to i32*
store i32 1342177288,i32*%ahu,align 4
store i8*%ahs,i8**%b,align 8
%ahv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ahw=bitcast i8*%ahs to i8**
store i8*%ahv,i8**%ahw,align 8
%ahx=getelementptr inbounds i8,i8*%ahs,i64 8
%ahy=bitcast i8*%ahx to i32*
store i32 1,i32*%ahy,align 4
%ahz=call i8*@sml_alloc(i32 inreg 28)#0
%ahA=getelementptr inbounds i8,i8*%ahz,i64 -4
%ahB=bitcast i8*%ahA to i32*
store i32 1342177304,i32*%ahB,align 4
store i8*%ahz,i8**%d,align 8
%ahC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ahD=bitcast i8*%ahz to i8**
store i8*%ahC,i8**%ahD,align 8
%ahE=getelementptr inbounds i8,i8*%ahz,i64 8
%ahF=bitcast i8*%ahE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2095 to void(...)*),void(...)**%ahF,align 8
%ahG=getelementptr inbounds i8,i8*%ahz,i64 16
%ahH=bitcast i8*%ahG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2095 to void(...)*),void(...)**%ahH,align 8
%ahI=getelementptr inbounds i8,i8*%ahz,i64 24
%ahJ=bitcast i8*%ahI to i32*
store i32 -2147483647,i32*%ahJ,align 4
%ahK=call i8*@sml_alloc(i32 inreg 20)#0
%ahL=getelementptr inbounds i8,i8*%ahK,i64 -4
%ahM=bitcast i8*%ahL to i32*
store i32 1342177296,i32*%ahM,align 4
%ahN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ahO=bitcast i8*%ahK to i8**
store i8*%ahN,i8**%ahO,align 8
%ahP=getelementptr inbounds i8,i8*%ahK,i64 8
%ahQ=bitcast i8*%ahP to i8**
store i8*null,i8**%ahQ,align 8
%ahR=getelementptr inbounds i8,i8*%ahK,i64 16
%ahS=bitcast i8*%ahR to i32*
store i32 3,i32*%ahS,align 4
%ahT=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b7,i64 0,i32 2)to i8*),i8*inreg%ahK)
store i8*%ahT,i8**%b,align 8
%ahU=call i8*@sml_alloc(i32 inreg 20)#0
%ahV=getelementptr inbounds i8,i8*%ahU,i64 -4
%ahW=bitcast i8*%ahV to i32*
store i32 1342177296,i32*%ahW,align 4
%ahX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ahY=bitcast i8*%ahU to i8**
store i8*%ahX,i8**%ahY,align 8
%ahZ=getelementptr inbounds i8,i8*%ahU,i64 8
%ah0=bitcast i8*%ahZ to i8**
store i8*null,i8**%ah0,align 8
%ah1=getelementptr inbounds i8,i8*%ahU,i64 16
%ah2=bitcast i8*%ah1 to i32*
store i32 3,i32*%ah2,align 4
%ah3=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%ahU)
store i8*%ah3,i8**%b,align 8
%ah4=call i8*@sml_alloc(i32 inreg 20)#0
%ah5=getelementptr inbounds i8,i8*%ah4,i64 -4
%ah6=bitcast i8*%ah5 to i32*
store i32 1342177296,i32*%ah6,align 4
store i8*%ah4,i8**%d,align 8
%ah7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah8=bitcast i8*%ah4 to i8**
store i8*%ah7,i8**%ah8,align 8
%ah9=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aia=getelementptr inbounds i8,i8*%ah4,i64 8
%aib=bitcast i8*%aia to i8**
store i8*%ah9,i8**%aib,align 8
%aic=getelementptr inbounds i8,i8*%ah4,i64 16
%aid=bitcast i8*%aic to i32*
store i32 3,i32*%aid,align 4
%aie=call i8*@sml_alloc(i32 inreg 28)#0
%aif=getelementptr inbounds i8,i8*%aie,i64 -4
%aig=bitcast i8*%aif to i32*
store i32 1342177304,i32*%aig,align 4
%aih=load i8*,i8**%d,align 8
%aii=bitcast i8*%aie to i8**
store i8*%aih,i8**%aii,align 8
%aij=getelementptr inbounds i8,i8*%aie,i64 8
%aik=bitcast i8*%aij to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2096 to void(...)*),void(...)**%aik,align 8
%ail=getelementptr inbounds i8,i8*%aie,i64 16
%aim=bitcast i8*%ail to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2096 to void(...)*),void(...)**%aim,align 8
%ain=getelementptr inbounds i8,i8*%aie,i64 24
%aio=bitcast i8*%ain to i32*
store i32 -2147483647,i32*%aio,align 4
ret i8*%aie
aip:
%aiq=getelementptr inbounds i8,i8*%abZ,i64 8
%air=bitcast i8*%aiq to i8**
%ais=load i8*,i8**%air,align 8
store i8*%ais,i8**%b,align 8
%ait=getelementptr inbounds i8,i8*%abX,i64 8
%aiu=bitcast i8*%ait to i8**
%aiv=load i8*,i8**%aiu,align 8
store i8*%aiv,i8**%c,align 8
%aiw=call i8*@sml_alloc(i32 inreg 20)#0
%aix=getelementptr inbounds i8,i8*%aiw,i64 -4
%aiy=bitcast i8*%aix to i32*
store i32 1342177296,i32*%aiy,align 4
store i8*%aiw,i8**%d,align 8
%aiz=getelementptr inbounds i8,i8*%aiw,i64 4
%aiA=bitcast i8*%aiz to i32*
store i32 0,i32*%aiA,align 1
%aiB=bitcast i8*%aiw to i32*
store i32 1,i32*%aiB,align 4
%aiC=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aiD=getelementptr inbounds i8,i8*%aiw,i64 8
%aiE=bitcast i8*%aiD to i8**
store i8*%aiC,i8**%aiE,align 8
%aiF=getelementptr inbounds i8,i8*%aiw,i64 16
%aiG=bitcast i8*%aiF to i32*
store i32 2,i32*%aiG,align 4
%aiH=call i8*@sml_alloc(i32 inreg 12)#0
%aiI=getelementptr inbounds i8,i8*%aiH,i64 -4
%aiJ=bitcast i8*%aiI to i32*
store i32 1342177288,i32*%aiJ,align 4
store i8*%aiH,i8**%b,align 8
%aiK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aiL=bitcast i8*%aiH to i8**
store i8*%aiK,i8**%aiL,align 8
%aiM=getelementptr inbounds i8,i8*%aiH,i64 8
%aiN=bitcast i8*%aiM to i32*
store i32 1,i32*%aiN,align 4
%aiO=call i8*@sml_alloc(i32 inreg 28)#0
%aiP=getelementptr inbounds i8,i8*%aiO,i64 -4
%aiQ=bitcast i8*%aiP to i32*
store i32 1342177304,i32*%aiQ,align 4
store i8*%aiO,i8**%d,align 8
%aiR=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aiS=bitcast i8*%aiO to i8**
store i8*%aiR,i8**%aiS,align 8
%aiT=getelementptr inbounds i8,i8*%aiO,i64 8
%aiU=bitcast i8*%aiT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2093 to void(...)*),void(...)**%aiU,align 8
%aiV=getelementptr inbounds i8,i8*%aiO,i64 16
%aiW=bitcast i8*%aiV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2093 to void(...)*),void(...)**%aiW,align 8
%aiX=getelementptr inbounds i8,i8*%aiO,i64 24
%aiY=bitcast i8*%aiX to i32*
store i32 -2147483647,i32*%aiY,align 4
%aiZ=call i8*@sml_alloc(i32 inreg 20)#0
%ai0=getelementptr inbounds i8,i8*%aiZ,i64 -4
%ai1=bitcast i8*%ai0 to i32*
store i32 1342177296,i32*%ai1,align 4
%ai2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ai3=bitcast i8*%aiZ to i8**
store i8*%ai2,i8**%ai3,align 8
%ai4=getelementptr inbounds i8,i8*%aiZ,i64 8
%ai5=bitcast i8*%ai4 to i8**
store i8*null,i8**%ai5,align 8
%ai6=getelementptr inbounds i8,i8*%aiZ,i64 16
%ai7=bitcast i8*%ai6 to i32*
store i32 3,i32*%ai7,align 4
%ai8=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@b3,i64 0,i32 2)to i8*),i8*inreg%aiZ)
store i8*%ai8,i8**%b,align 8
%ai9=call i8*@sml_alloc(i32 inreg 20)#0
%aja=getelementptr inbounds i8,i8*%ai9,i64 -4
%ajb=bitcast i8*%aja to i32*
store i32 1342177296,i32*%ajb,align 4
%ajc=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ajd=bitcast i8*%ai9 to i8**
store i8*%ajc,i8**%ajd,align 8
%aje=getelementptr inbounds i8,i8*%ai9,i64 8
%ajf=bitcast i8*%aje to i8**
store i8*null,i8**%ajf,align 8
%ajg=getelementptr inbounds i8,i8*%ai9,i64 16
%ajh=bitcast i8*%ajg to i32*
store i32 3,i32*%ajh,align 4
%aji=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%ai9)
store i8*%aji,i8**%b,align 8
%ajj=call i8*@sml_alloc(i32 inreg 20)#0
%ajk=getelementptr inbounds i8,i8*%ajj,i64 -4
%ajl=bitcast i8*%ajk to i32*
store i32 1342177296,i32*%ajl,align 4
store i8*%ajj,i8**%d,align 8
%ajm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ajn=bitcast i8*%ajj to i8**
store i8*%ajm,i8**%ajn,align 8
%ajo=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ajp=getelementptr inbounds i8,i8*%ajj,i64 8
%ajq=bitcast i8*%ajp to i8**
store i8*%ajo,i8**%ajq,align 8
%ajr=getelementptr inbounds i8,i8*%ajj,i64 16
%ajs=bitcast i8*%ajr to i32*
store i32 3,i32*%ajs,align 4
%ajt=call i8*@sml_alloc(i32 inreg 28)#0
%aju=getelementptr inbounds i8,i8*%ajt,i64 -4
%ajv=bitcast i8*%aju to i32*
store i32 1342177304,i32*%ajv,align 4
%ajw=load i8*,i8**%d,align 8
%ajx=bitcast i8*%ajt to i8**
store i8*%ajw,i8**%ajx,align 8
%ajy=getelementptr inbounds i8,i8*%ajt,i64 8
%ajz=bitcast i8*%ajy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2094 to void(...)*),void(...)**%ajz,align 8
%ajA=getelementptr inbounds i8,i8*%ajt,i64 16
%ajB=bitcast i8*%ajA to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2094 to void(...)*),void(...)**%ajB,align 8
%ajC=getelementptr inbounds i8,i8*%ajt,i64 24
%ajD=bitcast i8*%ajC to i32*
store i32 -2147483647,i32*%ajD,align 4
ret i8*%ajt
ajE:
%ajF=getelementptr inbounds i8,i8*%s,i64 8
%ajG=bitcast i8*%ajF to i8**
%ajH=load i8*,i8**%ajG,align 8
%ajI=bitcast i8*%ajH to i8**
%ajJ=load i8*,i8**%ajI,align 8
store i8*%ajJ,i8**%b,align 8
%ajK=getelementptr inbounds i8,i8*%ajH,i64 16
%ajL=bitcast i8*%ajK to i8**
%ajM=load i8*,i8**%ajL,align 8
store i8*%ajM,i8**%c,align 8
%ajN=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@gZ,i64 0,i32 2,i64 0))
store i8*%ajN,i8**%d,align 8
%ajO=call i8*@sml_alloc(i32 inreg 28)#0
%ajP=getelementptr inbounds i8,i8*%ajO,i64 -4
%ajQ=bitcast i8*%ajP to i32*
store i32 1342177304,i32*%ajQ,align 4
store i8*%ajO,i8**%e,align 8
%ajR=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ajS=bitcast i8*%ajO to i8**
store i8*%ajR,i8**%ajS,align 8
%ajT=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ajU=getelementptr inbounds i8,i8*%ajO,i64 8
%ajV=bitcast i8*%ajU to i8**
store i8*%ajT,i8**%ajV,align 8
%ajW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ajX=getelementptr inbounds i8,i8*%ajO,i64 16
%ajY=bitcast i8*%ajX to i8**
store i8*%ajW,i8**%ajY,align 8
%ajZ=getelementptr inbounds i8,i8*%ajO,i64 24
%aj0=bitcast i8*%ajZ to i32*
store i32 7,i32*%aj0,align 4
%aj1=call i8*@sml_alloc(i32 inreg 28)#0
%aj2=getelementptr inbounds i8,i8*%aj1,i64 -4
%aj3=bitcast i8*%aj2 to i32*
store i32 1342177304,i32*%aj3,align 4
%aj4=load i8*,i8**%e,align 8
%aj5=bitcast i8*%aj1 to i8**
store i8*%aj4,i8**%aj5,align 8
%aj6=getelementptr inbounds i8,i8*%aj1,i64 8
%aj7=bitcast i8*%aj6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2092 to void(...)*),void(...)**%aj7,align 8
%aj8=getelementptr inbounds i8,i8*%aj1,i64 16
%aj9=bitcast i8*%aj8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2092 to void(...)*),void(...)**%aj9,align 8
%aka=getelementptr inbounds i8,i8*%aj1,i64 24
%akb=bitcast i8*%aka to i32*
store i32 -2147483647,i32*%akb,align 4
ret i8*%aj1
akc:
%akd=getelementptr inbounds i8,i8*%s,i64 8
%ake=bitcast i8*%akd to i8**
%akf=load i8*,i8**%ake,align 8
%akg=bitcast i8*%akf to i8**
%akh=load i8*,i8**%akg,align 8
store i8*%akh,i8**%b,align 8
%aki=getelementptr inbounds i8,i8*%akf,i64 8
%akj=bitcast i8*%aki to i8**
%akk=load i8*,i8**%akj,align 8
store i8*%akk,i8**%c,align 8
%akl=call i8*@sml_alloc(i32 inreg 12)#0
%akm=getelementptr inbounds i8,i8*%akl,i64 -4
%akn=bitcast i8*%akm to i32*
store i32 1342177288,i32*%akn,align 4
store i8*%akl,i8**%d,align 8
%ako=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%akp=bitcast i8*%akl to i8**
store i8*%ako,i8**%akp,align 8
%akq=getelementptr inbounds i8,i8*%akl,i64 8
%akr=bitcast i8*%akq to i32*
store i32 1,i32*%akr,align 4
%aks=call i8*@sml_alloc(i32 inreg 28)#0
%akt=getelementptr inbounds i8,i8*%aks,i64 -4
%aku=bitcast i8*%akt to i32*
store i32 1342177304,i32*%aku,align 4
store i8*%aks,i8**%b,align 8
%akv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%akw=bitcast i8*%aks to i8**
store i8*%akv,i8**%akw,align 8
%akx=getelementptr inbounds i8,i8*%aks,i64 8
%aky=bitcast i8*%akx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2089 to void(...)*),void(...)**%aky,align 8
%akz=getelementptr inbounds i8,i8*%aks,i64 16
%akA=bitcast i8*%akz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2089 to void(...)*),void(...)**%akA,align 8
%akB=getelementptr inbounds i8,i8*%aks,i64 24
%akC=bitcast i8*%akB to i32*
store i32 -2147483647,i32*%akC,align 4
%akD=call i8*@sml_alloc(i32 inreg 20)#0
%akE=getelementptr inbounds i8,i8*%akD,i64 -4
%akF=bitcast i8*%akE to i32*
store i32 1342177296,i32*%akF,align 4
%akG=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%akH=bitcast i8*%akD to i8**
store i8*%akG,i8**%akH,align 8
%akI=getelementptr inbounds i8,i8*%akD,i64 8
%akJ=bitcast i8*%akI to i8**
store i8*null,i8**%akJ,align 8
%akK=getelementptr inbounds i8,i8*%akD,i64 16
%akL=bitcast i8*%akK to i32*
store i32 3,i32*%akL,align 4
%akM=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bZ,i64 0,i32 2)to i8*),i8*inreg%akD)
store i8*%akM,i8**%b,align 8
%akN=call i8*@sml_alloc(i32 inreg 20)#0
%akO=getelementptr inbounds i8,i8*%akN,i64 -4
%akP=bitcast i8*%akO to i32*
store i32 1342177296,i32*%akP,align 4
store i8*%akN,i8**%d,align 8
%akQ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%akR=bitcast i8*%akN to i8**
store i8*%akQ,i8**%akR,align 8
%akS=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%akT=getelementptr inbounds i8,i8*%akN,i64 8
%akU=bitcast i8*%akT to i8**
store i8*%akS,i8**%akU,align 8
%akV=getelementptr inbounds i8,i8*%akN,i64 16
%akW=bitcast i8*%akV to i32*
store i32 3,i32*%akW,align 4
%akX=call i8*@sml_alloc(i32 inreg 28)#0
%akY=getelementptr inbounds i8,i8*%akX,i64 -4
%akZ=bitcast i8*%akY to i32*
store i32 1342177304,i32*%akZ,align 4
%ak0=load i8*,i8**%d,align 8
%ak1=bitcast i8*%akX to i8**
store i8*%ak0,i8**%ak1,align 8
%ak2=getelementptr inbounds i8,i8*%akX,i64 8
%ak3=bitcast i8*%ak2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2090 to void(...)*),void(...)**%ak3,align 8
%ak4=getelementptr inbounds i8,i8*%akX,i64 16
%ak5=bitcast i8*%ak4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11queryToTermE_2090 to void(...)*),void(...)**%ak5,align 8
%ak6=getelementptr inbounds i8,i8*%akX,i64 24
%ak7=bitcast i8*%ak6 to i32*
store i32 -2147483647,i32*%ak7,align 4
ret i8*%akX
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%a)#2 gc"smlsharp"{
m:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%b,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%b,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%a,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 0,label%eR
i32 1,label%dF
i32 3,label%c0
i32 2,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hP,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%l,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%K,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
%Q=bitcast i8*%P to i32*
%R=load i32,i32*%Q,align 4
switch i32%R,label%S[
i32 1,label%bY
i32 0,label%a9
i32 2,label%ak
]
S:
call void@sml_matchcomp_bug()
%T=load i8*,i8**@_SMLZ5Match,align 8
store i8*%T,i8**%b,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%c,align 8
%X=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hP,i64 0,i32 2,i64 0),i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 60)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177336,i32*%af,align 4
%ag=getelementptr inbounds i8,i8*%ad,i64 56
%ah=bitcast i8*%ag to i32*
store i32 1,i32*%ah,align 4
%ai=load i8*,i8**%c,align 8
%aj=bitcast i8*%ad to i8**
store i8*%ai,i8**%aj,align 8
call void@sml_raise(i8*inreg%ad)#1
unreachable
ak:
%al=getelementptr inbounds i8,i8*%K,i64 16
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%b,align 8
%ao=getelementptr inbounds i8,i8*%K,i64 24
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%c,align 8
%ar=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%M)
store i8*%ar,i8**%d,align 8
%as=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%at=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%as)
store i8*%at,i8**%b,align 8
%au=call i8*@sml_alloc(i32 inreg 20)#0
%av=getelementptr inbounds i8,i8*%au,i64 -4
%aw=bitcast i8*%av to i32*
store i32 1342177296,i32*%aw,align 4
store i8*%au,i8**%e,align 8
%ax=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ay=bitcast i8*%au to i8**
store i8*%ax,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%au,i64 8
%aA=bitcast i8*%az to i8**
store i8*null,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%au,i64 16
%aC=bitcast i8*%aB to i32*
store i32 3,i32*%aC,align 4
%aD=call i8*@sml_alloc(i32 inreg 20)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177296,i32*%aF,align 4
%aG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aD,i64 16
%aM=bitcast i8*%aL to i32*
store i32 3,i32*%aM,align 4
%aN=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dM,i64 0,i32 2)to i8*),i8*inreg%aD)
store i8*%aN,i8**%b,align 8
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
store i8*%aO,i8**%d,align 8
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aU=getelementptr inbounds i8,i8*%aO,i64 8
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aO,i64 16
%aX=bitcast i8*%aW to i32*
store i32 3,i32*%aX,align 4
%aY=call i8*@sml_alloc(i32 inreg 28)#0
%aZ=getelementptr inbounds i8,i8*%aY,i64 -4
%a0=bitcast i8*%aZ to i32*
store i32 1342177304,i32*%a0,align 4
%a1=load i8*,i8**%d,align 8
%a2=bitcast i8*%aY to i8**
store i8*%a1,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aY,i64 8
%a4=bitcast i8*%a3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2277 to void(...)*),void(...)**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aY,i64 16
%a6=bitcast i8*%a5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2277 to void(...)*),void(...)**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aY,i64 24
%a8=bitcast i8*%a7 to i32*
store i32 -2147483647,i32*%a8,align 4
ret i8*%aY
a9:
%ba=getelementptr inbounds i8,i8*%K,i64 16
%bb=bitcast i8*%ba to i8**
%bc=load i8*,i8**%bb,align 8
store i8*%bc,i8**%b,align 8
%bd=getelementptr inbounds i8,i8*%K,i64 24
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%c,align 8
%bg=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%M)
store i8*%bg,i8**%d,align 8
%bh=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bi=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%bh)
store i8*%bi,i8**%b,align 8
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
store i8*%bj,i8**%e,align 8
%bm=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=getelementptr inbounds i8,i8*%bj,i64 8
%bp=bitcast i8*%bo to i8**
store i8*null,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bj,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call i8*@sml_alloc(i32 inreg 20)#0
%bt=getelementptr inbounds i8,i8*%bs,i64 -4
%bu=bitcast i8*%bt to i32*
store i32 1342177296,i32*%bu,align 4
%bv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bw=bitcast i8*%bs to i8**
store i8*%bv,i8**%bw,align 8
%bx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%by=getelementptr inbounds i8,i8*%bs,i64 8
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bs,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
%bC=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dI,i64 0,i32 2)to i8*),i8*inreg%bs)
store i8*%bC,i8**%b,align 8
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%d,align 8
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 28)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177304,i32*%bP,align 4
%bQ=load i8*,i8**%d,align 8
%bR=bitcast i8*%bN to i8**
store i8*%bQ,i8**%bR,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2276 to void(...)*),void(...)**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 16
%bV=bitcast i8*%bU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2276 to void(...)*),void(...)**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bN,i64 24
%bX=bitcast i8*%bW to i32*
store i32 -2147483647,i32*%bX,align 4
ret i8*%bN
bY:
%bZ=getelementptr inbounds i8,i8*%P,i64 8
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
%b2=bitcast i8*%b1 to i32**
%b3=load i32*,i32**%b2,align 8
%b4=load i32,i32*%b3,align 4
%b5=getelementptr inbounds i8,i8*%b1,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%b,align 8
%b8=getelementptr inbounds i8,i8*%K,i64 16
%b9=bitcast i8*%b8 to i8**
%ca=load i8*,i8**%b9,align 8
store i8*%ca,i8**%c,align 8
%cb=getelementptr inbounds i8,i8*%K,i64 24
%cc=bitcast i8*%cb to i8**
%cd=load i8*,i8**%cc,align 8
store i8*%cd,i8**%d,align 8
%ce=icmp eq i32%b4,0
%cf=select i1%ce,i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f5,i64 0,i32 2)to i8*),i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f6,i64 0,i32 2)to i8*)
%cg=getelementptr inbounds i8,i8*%cf,i64 16
%ch=bitcast i8*%cg to i8*(i8*,i8*)**
%ci=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ch,align 8
%cj=bitcast i8*%cf to i8**
%ck=load i8*,i8**%cj,align 8
store i8*%ck,i8**%f,align 8
%cl=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%M)
store i8*%cl,i8**%e,align 8
%cm=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cn=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%cm)
store i8*%cn,i8**%c,align 8
%co=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cp=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%co)
store i8*%cp,i8**%b,align 8
%cq=call i8*@sml_alloc(i32 inreg 28)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177304,i32*%cs,align 4
%ct=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cu=bitcast i8*%cq to i8**
store i8*%ct,i8**%cu,align 8
%cv=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cw=getelementptr inbounds i8,i8*%cq,i64 8
%cx=bitcast i8*%cw to i8**
store i8*%cv,i8**%cx,align 8
%cy=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cz=getelementptr inbounds i8,i8*%cq,i64 16
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cq,i64 24
%cC=bitcast i8*%cB to i32*
store i32 7,i32*%cC,align 4
%cD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cE=call fastcc i8*%ci(i8*inreg%cD,i8*inreg%cq)
store i8*%cE,i8**%b,align 8
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
store i8*%cF,i8**%c,align 8
%cI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cJ=bitcast i8*%cF to i8**
store i8*%cI,i8**%cJ,align 8
%cK=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cL=getelementptr inbounds i8,i8*%cF,i64 8
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cF,i64 16
%cO=bitcast i8*%cN to i32*
store i32 3,i32*%cO,align 4
%cP=call i8*@sml_alloc(i32 inreg 28)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177304,i32*%cR,align 4
%cS=load i8*,i8**%c,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cP,i64 8
%cV=bitcast i8*%cU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2275 to void(...)*),void(...)**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cP,i64 16
%cX=bitcast i8*%cW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2275 to void(...)*),void(...)**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cP,i64 24
%cZ=bitcast i8*%cY to i32*
store i32 -2147483647,i32*%cZ,align 4
ret i8*%cP
c0:
%c1=getelementptr inbounds i8,i8*%l,i64 8
%c2=bitcast i8*%c1 to i8**
%c3=load i8*,i8**%c2,align 8
%c4=bitcast i8*%c3 to i8**
%c5=load i8*,i8**%c4,align 8
%c6=getelementptr inbounds i8,i8*%c3,i64 8
%c7=bitcast i8*%c6 to i8**
%c8=load i8*,i8**%c7,align 8
store i8*%c8,i8**%b,align 8
%c9=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%c5)
store i8*%c9,i8**%c,align 8
%da=call i8*@sml_alloc(i32 inreg 20)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177296,i32*%dc,align 4
%dd=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%da,i64 8
%dg=bitcast i8*%df to i8**
store i8*null,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%da,i64 16
%di=bitcast i8*%dh to i32*
store i32 3,i32*%di,align 4
%dj=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ds,i64 0,i32 2)to i8*),i8*inreg%da)
store i8*%dj,i8**%c,align 8
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
store i8*%dk,i8**%d,align 8
%dn=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%do=bitcast i8*%dk to i8**
store i8*%dn,i8**%do,align 8
%dp=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dq=getelementptr inbounds i8,i8*%dk,i64 8
%dr=bitcast i8*%dq to i8**
store i8*%dp,i8**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dk,i64 16
%dt=bitcast i8*%ds to i32*
store i32 3,i32*%dt,align 4
%du=call i8*@sml_alloc(i32 inreg 28)#0
%dv=getelementptr inbounds i8,i8*%du,i64 -4
%dw=bitcast i8*%dv to i32*
store i32 1342177304,i32*%dw,align 4
%dx=load i8*,i8**%d,align 8
%dy=bitcast i8*%du to i8**
store i8*%dx,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%du,i64 8
%dA=bitcast i8*%dz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2274 to void(...)*),void(...)**%dA,align 8
%dB=getelementptr inbounds i8,i8*%du,i64 16
%dC=bitcast i8*%dB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2274 to void(...)*),void(...)**%dC,align 8
%dD=getelementptr inbounds i8,i8*%du,i64 24
%dE=bitcast i8*%dD to i32*
store i32 -2147483647,i32*%dE,align 4
ret i8*%du
dF:
%dG=getelementptr inbounds i8,i8*%l,i64 8
%dH=bitcast i8*%dG to i8**
%dI=load i8*,i8**%dH,align 8
%dJ=bitcast i8*%dI to i8**
%dK=load i8*,i8**%dJ,align 8
%dL=getelementptr inbounds i8,i8*%dI,i64 8
%dM=bitcast i8*%dL to i8**
%dN=load i8*,i8**%dM,align 8
store i8*%dN,i8**%b,align 8
%dO=getelementptr inbounds i8,i8*%dI,i64 16
%dP=bitcast i8*%dO to i8**
%dQ=load i8*,i8**%dP,align 8
store i8*%dQ,i8**%c,align 8
%dR=call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%dK)
store i8*%dR,i8**%d,align 8
%dS=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dT=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%dS)
store i8*%dT,i8**%b,align 8
%dU=call i8*@sml_alloc(i32 inreg 12)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177288,i32*%dW,align 4
store i8*%dU,i8**%e,align 8
%dX=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
%dZ=getelementptr inbounds i8,i8*%dU,i64 8
%d0=bitcast i8*%dZ to i32*
store i32 1,i32*%d0,align 4
%d1=call i8*@sml_alloc(i32 inreg 28)#0
%d2=getelementptr inbounds i8,i8*%d1,i64 -4
%d3=bitcast i8*%d2 to i32*
store i32 1342177304,i32*%d3,align 4
store i8*%d1,i8**%b,align 8
%d4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%d5=bitcast i8*%d1 to i8**
store i8*%d4,i8**%d5,align 8
%d6=getelementptr inbounds i8,i8*%d1,i64 8
%d7=bitcast i8*%d6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2272 to void(...)*),void(...)**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d1,i64 16
%d9=bitcast i8*%d8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2272 to void(...)*),void(...)**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d1,i64 24
%eb=bitcast i8*%ea to i32*
store i32 -2147483647,i32*%eb,align 4
%ec=call i8*@sml_alloc(i32 inreg 20)#0
%ed=getelementptr inbounds i8,i8*%ec,i64 -4
%ee=bitcast i8*%ed to i32*
store i32 1342177296,i32*%ee,align 4
store i8*%ec,i8**%e,align 8
%ef=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%eg=bitcast i8*%ec to i8**
store i8*%ef,i8**%eg,align 8
%eh=getelementptr inbounds i8,i8*%ec,i64 8
%ei=bitcast i8*%eh to i8**
store i8*null,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%ec,i64 16
%ek=bitcast i8*%ej to i32*
store i32 3,i32*%ek,align 4
%el=call i8*@sml_alloc(i32 inreg 20)#0
%em=getelementptr inbounds i8,i8*%el,i64 -4
%en=bitcast i8*%em to i32*
store i32 1342177296,i32*%en,align 4
%eo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ep=bitcast i8*%el to i8**
store i8*%eo,i8**%ep,align 8
%eq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%er=getelementptr inbounds i8,i8*%el,i64 8
%es=bitcast i8*%er to i8**
store i8*%eq,i8**%es,align 8
%et=getelementptr inbounds i8,i8*%el,i64 16
%eu=bitcast i8*%et to i32*
store i32 3,i32*%eu,align 4
%ev=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dw,i64 0,i32 2)to i8*),i8*inreg%el)
store i8*%ev,i8**%b,align 8
%ew=call i8*@sml_alloc(i32 inreg 20)#0
%ex=getelementptr inbounds i8,i8*%ew,i64 -4
%ey=bitcast i8*%ex to i32*
store i32 1342177296,i32*%ey,align 4
store i8*%ew,i8**%d,align 8
%ez=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eA=bitcast i8*%ew to i8**
store i8*%ez,i8**%eA,align 8
%eB=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%eC=getelementptr inbounds i8,i8*%ew,i64 8
%eD=bitcast i8*%eC to i8**
store i8*%eB,i8**%eD,align 8
%eE=getelementptr inbounds i8,i8*%ew,i64 16
%eF=bitcast i8*%eE to i32*
store i32 3,i32*%eF,align 4
%eG=call i8*@sml_alloc(i32 inreg 28)#0
%eH=getelementptr inbounds i8,i8*%eG,i64 -4
%eI=bitcast i8*%eH to i32*
store i32 1342177304,i32*%eI,align 4
%eJ=load i8*,i8**%d,align 8
%eK=bitcast i8*%eG to i8**
store i8*%eJ,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eG,i64 8
%eM=bitcast i8*%eL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2273 to void(...)*),void(...)**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eG,i64 16
%eO=bitcast i8*%eN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2273 to void(...)*),void(...)**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eG,i64 24
%eQ=bitcast i8*%eP to i32*
store i32 -2147483647,i32*%eQ,align 4
ret i8*%eG
eR:
%eS=getelementptr inbounds i8,i8*%l,i64 8
%eT=bitcast i8*%eS to i8***
%eU=load i8**,i8***%eT,align 8
%eV=load i8*,i8**%eU,align 8
%eW=getelementptr inbounds i8,i8*%eV,i64 16
%eX=bitcast i8*%eW to i8**
%eY=load i8*,i8**%eX,align 8
store i8*%eY,i8**%b,align 8
%eZ=bitcast i8*%eV to i8**
%e0=load i8*,i8**%eZ,align 8
%e1=getelementptr inbounds i8,i8*%eV,i64 8
%e2=bitcast i8*%e1 to i8**
%e3=load i8*,i8**%e2,align 8
store i8*%e3,i8**%c,align 8
store i8*%eY,i8**%d,align 8
%e4=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%e0)
store i8*%e4,i8**%e,align 8
%e5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%e6=call fastcc i8*@_SMLFN11RecordLabel8toStringE(i8*inreg%e5)
store i8*%e6,i8**%c,align 8
%e7=call i8*@sml_alloc(i32 inreg 12)#0
%e8=getelementptr inbounds i8,i8*%e7,i64 -4
%e9=bitcast i8*%e8 to i32*
store i32 1342177288,i32*%e9,align 4
store i8*%e7,i8**%f,align 8
%fa=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fb=bitcast i8*%e7 to i8**
store i8*%fa,i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e7,i64 8
%fd=bitcast i8*%fc to i32*
store i32 1,i32*%fd,align 4
%fe=call i8*@sml_alloc(i32 inreg 28)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177304,i32*%fg,align 4
store i8*%fe,i8**%c,align 8
%fh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fi=bitcast i8*%fe to i8**
store i8*%fh,i8**%fi,align 8
%fj=getelementptr inbounds i8,i8*%fe,i64 8
%fk=bitcast i8*%fj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2269 to void(...)*),void(...)**%fk,align 8
%fl=getelementptr inbounds i8,i8*%fe,i64 16
%fm=bitcast i8*%fl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2269 to void(...)*),void(...)**%fm,align 8
%fn=getelementptr inbounds i8,i8*%fe,i64 24
%fo=bitcast i8*%fn to i32*
store i32 -2147483647,i32*%fo,align 4
%fp=call i8*@sml_alloc(i32 inreg 20)#0
%fq=getelementptr inbounds i8,i8*%fp,i64 -4
%fr=bitcast i8*%fq to i32*
store i32 1342177296,i32*%fr,align 4
store i8*%fp,i8**%f,align 8
%fs=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ft=bitcast i8*%fp to i8**
store i8*%fs,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fp,i64 8
%fv=bitcast i8*%fu to i8**
store i8*null,i8**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fp,i64 16
%fx=bitcast i8*%fw to i32*
store i32 3,i32*%fx,align 4
%fy=call i8*@sml_alloc(i32 inreg 20)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177296,i32*%fA,align 4
%fB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fC=bitcast i8*%fy to i8**
store i8*%fB,i8**%fC,align 8
%fD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fE=getelementptr inbounds i8,i8*%fy,i64 8
%fF=bitcast i8*%fE to i8**
store i8*%fD,i8**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fy,i64 16
%fH=bitcast i8*%fG to i32*
store i32 3,i32*%fH,align 4
%fI=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@dk,i64 0,i32 2)to i8*),i8*inreg%fy)
store i8*%fI,i8**%c,align 8
%fJ=call i8*@sml_alloc(i32 inreg 20)#0
%fK=getelementptr inbounds i8,i8*%fJ,i64 -4
%fL=bitcast i8*%fK to i32*
store i32 1342177296,i32*%fL,align 4
store i8*%fJ,i8**%e,align 8
%fM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fN=bitcast i8*%fJ to i8**
store i8*%fM,i8**%fN,align 8
%fO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%fP=getelementptr inbounds i8,i8*%fJ,i64 8
%fQ=bitcast i8*%fP to i8**
store i8*%fO,i8**%fQ,align 8
%fR=getelementptr inbounds i8,i8*%fJ,i64 16
%fS=bitcast i8*%fR to i32*
store i32 3,i32*%fS,align 4
%fT=call i8*@sml_alloc(i32 inreg 28)#0
%fU=getelementptr inbounds i8,i8*%fT,i64 -4
%fV=bitcast i8*%fU to i32*
store i32 1342177304,i32*%fV,align 4
store i8*%fT,i8**%c,align 8
%fW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fX=bitcast i8*%fT to i8**
store i8*%fW,i8**%fX,align 8
%fY=getelementptr inbounds i8,i8*%fT,i64 8
%fZ=bitcast i8*%fY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_2270 to void(...)*),void(...)**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fT,i64 16
%f1=bitcast i8*%f0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL5table_2270 to void(...)*),void(...)**%f1,align 8
%f2=getelementptr inbounds i8,i8*%fT,i64 24
%f3=bitcast i8*%f2 to i32*
store i32 -2147483647,i32*%f3,align 4
%f4=call i8*@sml_alloc(i32 inreg 20)#0
%f5=getelementptr inbounds i8,i8*%f4,i64 -4
%f6=bitcast i8*%f5 to i32*
store i32 1342177296,i32*%f6,align 4
%f7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%f8=bitcast i8*%f4 to i8**
store i8*%f7,i8**%f8,align 8
%f9=getelementptr inbounds i8,i8*%f4,i64 8
%ga=bitcast i8*%f9 to i8**
store i8*null,i8**%ga,align 8
%gb=getelementptr inbounds i8,i8*%f4,i64 16
%gc=bitcast i8*%gb to i32*
store i32 3,i32*%gc,align 4
%gd=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@do,i64 0,i32 2)to i8*),i8*inreg%f4)
store i8*%gd,i8**%c,align 8
%ge=call i8*@sml_alloc(i32 inreg 20)#0
%gf=getelementptr inbounds i8,i8*%ge,i64 -4
%gg=bitcast i8*%gf to i32*
store i32 1342177296,i32*%gg,align 4
store i8*%ge,i8**%d,align 8
%gh=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%gi=bitcast i8*%ge to i8**
store i8*%gh,i8**%gi,align 8
%gj=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%gk=getelementptr inbounds i8,i8*%ge,i64 8
%gl=bitcast i8*%gk to i8**
store i8*%gj,i8**%gl,align 8
%gm=getelementptr inbounds i8,i8*%ge,i64 16
%gn=bitcast i8*%gm to i32*
store i32 3,i32*%gn,align 4
%go=call i8*@sml_alloc(i32 inreg 28)#0
%gp=getelementptr inbounds i8,i8*%go,i64 -4
%gq=bitcast i8*%gp to i32*
store i32 1342177304,i32*%gq,align 4
%gr=load i8*,i8**%d,align 8
%gs=bitcast i8*%go to i8**
store i8*%gr,i8**%gs,align 8
%gt=getelementptr inbounds i8,i8*%go,i64 8
%gu=bitcast i8*%gt to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2271 to void(...)*),void(...)**%gu,align 8
%gv=getelementptr inbounds i8,i8*%go,i64 16
%gw=bitcast i8*%gv to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11tableToTermE_2271 to void(...)*),void(...)**%gw,align 8
%gx=getelementptr inbounds i8,i8*%go,i64 24
%gy=bitcast i8*%gx to i32*
store i32 -2147483647,i32*%gy,align 4
ret i8*%go
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL17insertValueToTermE_1890(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=icmp eq i8*%m,null
br i1%n,label%o,label%K
o:
%p=getelementptr inbounds i8,i8*%j,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 12)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177288,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i32*
store i32 1,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 28)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177304,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%z,i64 8
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_2281 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%z,i64 16
%H=bitcast i8*%G to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_2281 to void(...)*),void(...)**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 24
%J=bitcast i8*%I to i32*
store i32 -2147483647,i32*%J,align 4
ret i8*%z
K:
%L=bitcast i8*%m to i8**
%M=load i8*,i8**%L,align 8
%N=getelementptr inbounds i8,i8*%j,i64 8
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%b,align 8
%Q=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%M)
store i8*%Q,i8**%c,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
%U=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to i8**
store i8*null,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to i32*
store i32 3,i32*%Z,align 4
%aa=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@eK,i64 0,i32 2)to i8*),i8*inreg%R)
store i8*%aa,i8**%c,align 8
%ab=call i8*@sml_alloc(i32 inreg 20)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177296,i32*%ad,align 4
store i8*%ab,i8**%d,align 8
%ae=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ah=getelementptr inbounds i8,i8*%ab,i64 8
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ab,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
%al=call i8*@sml_alloc(i32 inreg 28)#0
%am=getelementptr inbounds i8,i8*%al,i64 -4
%an=bitcast i8*%am to i32*
store i32 1342177304,i32*%an,align 4
%ao=load i8*,i8**%d,align 8
%ap=bitcast i8*%al to i8**
store i8*%ao,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%al,i64 8
%ar=bitcast i8*%aq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_2280 to void(...)*),void(...)**%ar,align 8
%as=getelementptr inbounds i8,i8*%al,i64 16
%at=bitcast i8*%as to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL17insertValueToTermE_2280 to void(...)*),void(...)**%at,align 8
%au=getelementptr inbounds i8,i8*%al,i64 24
%av=bitcast i8*%au to i32*
store i32 -2147483647,i32*%av,align 4
ret i8*%al
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12havingToTermE_1891(i8*inreg%a)#2 gc"smlsharp"{
k:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%b,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%b,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%a,%k]
%l=bitcast i8*%j to i8**
%m=load i8*,i8**%l,align 8
%n=getelementptr inbounds i8,i8*%j,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%b,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%m)
store i8*%q,i8**%c,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ei,i64 0,i32 2)to i8*),i8*inreg%r)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 28)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177304,i32*%N,align 4
%O=load i8*,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12havingToTermE_2282 to void(...)*),void(...)**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12havingToTermE_2282 to void(...)*),void(...)**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 24
%V=bitcast i8*%U to i32*
store i32 -2147483647,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13groupByToTermE_1892(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=getelementptr inbounds i8,i8*%k,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%b,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=getelementptr inbounds i8,i8*%k,i64 16
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%d,align 8
%x=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gU,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%b,align 8
%L=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%O(i8*inreg%Q,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gX,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Y=call fastcc i8*%U(i8*inreg%W,i8*inreg%X)
%Z=icmp eq i8*%Y,null
br i1%Z,label%an,label%aa
aa:
%ab=bitcast i8*%Y to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ad,i64 8
%aj=bitcast i8*%ai to i8**
store i8*null,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@k,i64 0,i32 2)to i8*),i8*inreg%ad)
br label%an
an:
%ao=phi i8*[%am,%aa],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fZ,i64 0,i32 2)to i8*),%j]
store i8*%ao,i8**%d,align 8
%ap=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%as(i8*inreg%au,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
%aB=call fastcc i8*%ay(i8*inreg%aA,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%aC=getelementptr inbounds i8,i8*%aB,i64 16
%aD=bitcast i8*%aC to i8*(i8*,i8*)**
%aE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aD,align 8
%aF=bitcast i8*%aB to i8**
%aG=load i8*,i8**%aF,align 8
%aH=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aI=call fastcc i8*%aE(i8*inreg%aG,i8*inreg%aH)
store i8*%aI,i8**%b,align 8
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
store i8*%aJ,i8**%e,align 8
%aM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to i8**
store i8*null,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aJ,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call i8*@sml_alloc(i32 inreg 20)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aY=getelementptr inbounds i8,i8*%aS,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aS,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
%a2=call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@ee,i64 0,i32 2)to i8*),i8*inreg%aS)
store i8*%a2,i8**%b,align 8
%a3=call i8*@sml_alloc(i32 inreg 20)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
store i8*%a3,i8**%d,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a3,i64 16
%bc=bitcast i8*%bb to i32*
store i32 3,i32*%bc,align 4
%bd=call i8*@sml_alloc(i32 inreg 28)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177304,i32*%bf,align 4
%bg=load i8*,i8**%d,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13groupByToTermE_2283 to void(...)*),void(...)**%bj,align 8
%bk=getelementptr inbounds i8,i8*%bd,i64 16
%bl=bitcast i8*%bk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL13groupByToTermE_2283 to void(...)*),void(...)**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bd,i64 24
%bn=bitcast i8*%bm to i32*
store i32 -2147483647,i32*%bn,align 4
ret i8*%bd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2285(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 16
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*null,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%K,i64 24
%W=bitcast i8*%V to i32*
store i32 7,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=bitcast i8*%X to i32*
%Z=getelementptr inbounds i8,i8*%X,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%X,i64 4
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
store i32 20,i32*%Y,align 4
%ad=load i8*,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLL1f_2286(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%h,label%j
h:
%i=bitcast i8*%a to i32*
br label%m
j:
call void@sml_check(i32 inreg%f)
%k=bitcast i8**%d to i32**
%l=load i32*,i32**%k,align 8
br label%m
m:
%n=phi i32*[%l,%j],[%i,%h]
store i8*null,i8**%d,align 8
%o=load i32,i32*%n,align 4
%p=call fastcc i8*@_SMLFN6IntInf7fromIntE(i32 inreg%o)
store i8*%p,i8**%d,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%q,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
%v=bitcast i8*%q to i32*
store i32 1,i32*%v,align 4
%w=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=bitcast i8*%L to i32*
%N=getelementptr inbounds i8,i8*%L,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%L,i64 4
%Q=bitcast i8*%P to i32*
store i32 0,i32*%Q,align 1
store i32 2,i32*%M,align 4
%R=load i8*,i8**%d,align 8
%S=getelementptr inbounds i8,i8*%L,i64 8
%T=bitcast i8*%S to i8**
store i8*%R,i8**%T,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i32*
store i32 2,i32*%V,align 4
ret i8*%L
}
define internal fastcc i8*@_SMLLL1f_2287(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLL1f_2288(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bA,i64 0,i32 2)to i8*))
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
%r=load i8*,i8**%c,align 8
%s=call fastcc i8*%o(i8*inreg%q,i8*inreg%r)
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=getelementptr inbounds i8,i8*%t,i64 4
%x=bitcast i8*%w to i32*
store i32 0,i32*%x,align 1
%y=bitcast i8*%t to i32*
store i32 25,i32*%y,align 4
%z=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%t,i64 8
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%t,i64 16
%D=bitcast i8*%C to i32*
store i32 2,i32*%D,align 4
%E=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%F=getelementptr inbounds i8,i8*%E,i64 16
%G=bitcast i8*%F to i8*(i8*,i8*)**
%H=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%G,align 8
%I=bitcast i8*%E to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%e,align 8
%K=call i8*@sml_alloc(i32 inreg 12)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177288,i32*%M,align 4
store i8*%K,i8**%g,align 8
%N=load i8*,i8**%c,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i32*
store i32 1,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2287 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2287 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=call fastcc i8*%H(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=bitcast i8**%d to i8***
%ak=load i8**,i8***%aj,align 8
store i8*null,i8**%d,align 8
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%al)
store i8*%am,i8**%d,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%e,align 8
%aq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%d,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 15,i32*%aC,align 4
%aD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
store i8*%aI,i8**%e,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aI,i64 8
%aO=bitcast i8*%aN to i8**
store i8*null,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aI,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 28)#0
%aS=getelementptr inbounds i8,i8*%aR,i64 -4
%aT=bitcast i8*%aS to i32*
store i32 1342177304,i32*%aT,align 4
store i8*%aR,i8**%d,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=bitcast i8*%aR to i8**
store i8*%aU,i8**%aV,align 8
%aW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aX=getelementptr inbounds i8,i8*%aR,i64 8
%aY=bitcast i8*%aX to i8**
store i8*%aW,i8**%aY,align 8
%aZ=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aR,i64 24
%a3=bitcast i8*%a2 to i32*
store i32 7,i32*%a3,align 4
%a4=call i8*@sml_alloc(i32 inreg 20)#0
%a5=getelementptr inbounds i8,i8*%a4,i64 -4
%a6=bitcast i8*%a5 to i32*
store i32 1342177296,i32*%a6,align 4
%a7=bitcast i8*%a4 to i64*
store i64 0,i64*%a7,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a4,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a4,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a4
}
define internal fastcc i8*@_SMLLL1f_2289(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
%u=getelementptr inbounds i8,i8*%r,i64 8
%v=bitcast i8*%u to i8***
%w=load i8**,i8***%v,align 8
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%c,align 8
store i8*null,i8**%d,align 8
%y=load i8*,i8**%q,align 8
store i8*%y,i8**%e,align 8
%z=call i8*@sml_alloc(i32 inreg 12)#0
%A=bitcast i8*%z to i32*
%B=getelementptr inbounds i8,i8*%z,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i8*%z,i8**%d,align 8
store i32%t,i32*%A,align 4
%D=getelementptr inbounds i8,i8*%z,i64 8
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
store i8*%F,i8**%f,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2286 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2286 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%g,align 8
%T=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*null,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
store i8*%Z,i8**%d,align 8
%ac=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=call fastcc i8*%am(i8*inreg%ao,i8*inreg%ap)
store i8*%aq,i8**%d,align 8
%ar=call i8*@sml_alloc(i32 inreg 12)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177288,i32*%at,align 4
store i8*%ar,i8**%e,align 8
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i32*
store i32 1,i32*%ax,align 4
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i8*%ay,i8**%d,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2288 to void(...)*),void(...)**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2288 to void(...)*),void(...)**%aG,align 8
%aH=getelementptr inbounds i8,i8*%ay,i64 24
%aI=bitcast i8*%aH to i32*
store i32 -2147483647,i32*%aI,align 4
%aJ=call i8*@sml_alloc(i32 inreg 20)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177296,i32*%aL,align 4
%aM=load i8*,i8**%c,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=load i8*,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aJ,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aJ,i64 16
%aS=bitcast i8*%aR to i32*
store i32 3,i32*%aS,align 4
ret i8*%aJ
}
define internal fastcc i8*@_SMLLL3map_2290(i8*inreg%a,i32 inreg%b,i8*inreg%c)unnamed_addr#2 gc"smlsharp"{
n:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%c,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%e,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%c,%n]
%o=icmp eq i8*%m,null
br i1%o,label%p,label%q
p:
ret i8*null
q:
%r=bitcast i8*%m to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%f,align 8
%w=load i8*,i8**%d,align 8
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%g,align 8
%C=call i8*@sml_alloc(i32 inreg 20)#0
%D=bitcast i8*%C to i32*
%E=getelementptr inbounds i8,i8*%C,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177296,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%C,i64 4
%H=bitcast i8*%G to i32*
store i32 0,i32*%H,align 1
store i32%b,i32*%D,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=getelementptr inbounds i8,i8*%C,i64 8
%K=bitcast i8*%J to i8**
store i8*%I,i8**%K,align 8
%L=getelementptr inbounds i8,i8*%C,i64 16
%M=bitcast i8*%L to i32*
store i32 2,i32*%M,align 4
%N=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%O=call fastcc i8*%z(i8*inreg%N,i8*inreg%C)
store i8*%O,i8**%e,align 8
%P=add nsw i32%b,1
%Q=load i8*,i8**%d,align 8
%R=load i8*,i8**%f,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%S=call fastcc i8*@_SMLLL3map_2290(i8*inreg%Q,i32 inreg%P,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
%W=load i8*,i8**%e,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%d,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
ret i8*%T
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2292(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2293(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%j,label%i
i:
call void@sml_check(i32 inreg%g)
br label%j
j:
%k=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%l=getelementptr inbounds i8,i8*%k,i64 16
%m=bitcast i8*%l to i8*(i8*,i8*)**
%n=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m,align 8
%o=bitcast i8*%k to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 12)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177288,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%c,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i32*
store i32 1,i32*%w,align 4
%x=call i8*@sml_alloc(i32 inreg 28)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177304,i32*%z,align 4
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2292 to void(...)*),void(...)**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2292 to void(...)*),void(...)**%F,align 8
%G=getelementptr inbounds i8,i8*%x,i64 24
%H=bitcast i8*%G to i32*
store i32 -2147483647,i32*%H,align 4
%I=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%J=call fastcc i8*%n(i8*inreg%I,i8*inreg%x)
%K=getelementptr inbounds i8,i8*%J,i64 16
%L=bitcast i8*%K to i8*(i8*,i8*)**
%M=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%L,align 8
%N=bitcast i8*%J to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8**%d to i8***
%Q=load i8**,i8***%P,align 8
store i8*null,i8**%d,align 8
%R=load i8*,i8**%Q,align 8
%S=call fastcc i8*%M(i8*inreg%O,i8*inreg%R)
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=getelementptr inbounds i8,i8*%T,i64 8
%aa=bitcast i8*%Z to i8**
store i8*%Y,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%T,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=bitcast i8*%ad to i32*
%af=getelementptr inbounds i8,i8*%ad,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177296,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ad,i64 4
%ai=bitcast i8*%ah to i32*
store i32 0,i32*%ai,align 1
store i32 15,i32*%ae,align 4
%aj=load i8*,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
ret i8*%ad
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2294(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%i,label%h
h:
call void@sml_check(i32 inreg%f)
br label%i
i:
%j=call i8*@sml_alloc(i32 inreg 12)#0
%k=getelementptr inbounds i8,i8*%j,i64 -4
%l=bitcast i8*%k to i32*
store i32 1342177288,i32*%l,align 4
store i8*%j,i8**%e,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=bitcast i8*%j to i8**
store i8*%m,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%j,i64 8
%p=bitcast i8*%o to i32*
store i32 1,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 28)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177304,i32*%s,align 4
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2289 to void(...)*),void(...)**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL1f_2289 to void(...)*),void(...)**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 24
%A=bitcast i8*%z to i32*
store i32 -2147483647,i32*%A,align 4
%B=bitcast i8**%d to i8***
%C=load i8**,i8***%B,align 8
store i8*null,i8**%d,align 8
%D=load i8*,i8**%C,align 8
%E=call fastcc i8*@_SMLLL3map_2290(i8*inreg%q,i32 inreg 0,i8*inreg%D)
store i8*%E,i8**%c,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%d,align 8
%I=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
store i8*%M,i8**%e,align 8
%P=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2293 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2293 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=getelementptr inbounds i8,i8*%X,i64 -4
%Z=bitcast i8*%Y to i32*
store i32 1342177296,i32*%Z,align 4
store i8*%X,i8**%c,align 8
%aa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ab=bitcast i8*%X to i8**
store i8*%aa,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%X,i64 8
%ad=bitcast i8*%ac to i8**
store i8*null,i8**%ad,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 16
%af=bitcast i8*%ae to i32*
store i32 3,i32*%af,align 4
%ag=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%aj(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fX,i64 0,i32 2)to i8*))
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=call fastcc i8*%ap(i8*inreg%ar,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fY,i64 0,i32 2)to i8*))
%at=getelementptr inbounds i8,i8*%as,i64 16
%au=bitcast i8*%at to i8*(i8*,i8*)**
%av=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%au,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
%ay=load i8*,i8**%c,align 8
%az=tail call fastcc i8*%av(i8*inreg%ax,i8*inreg%ay)
ret i8*%az
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2295(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2296(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=getelementptr inbounds i8,i8*%m,i64 8
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%e,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%d,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 1
%F=bitcast i8*%A to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 2,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%g,align 8
%O=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*null,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=load i8*,i8**%c,align 8
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8**
%X=load i8*,i8**%W,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=bitcast i8*%U to i8**
%ae=load i8*,i8**%ad,align 8
%af=call fastcc i8*%aa(i8*inreg%ac,i8*inreg%ae)
store i8*%af,i8**%d,align 8
%ag=bitcast i8**%c to i8***
%ah=load i8**,i8***%ag,align 8
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%e,align 8
%aj=call i8*@sml_alloc(i32 inreg 28)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
store i8*%aj,i8**%f,align 8
%am=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%aj,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%e,align 8
%az=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=getelementptr inbounds i8,i8*%aw,i64 8
%aC=bitcast i8*%aB to i8**
store i8*null,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 16
%aE=bitcast i8*%aD to i32*
store i32 3,i32*%aE,align 4
%aF=load i8**,i8***%ag,align 8
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%c,align 8
%aH=call i8*@sml_alloc(i32 inreg 20)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177296,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aH,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=bitcast i8*%aR to i32*
%aT=getelementptr inbounds i8,i8*%aR,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=getelementptr inbounds i8,i8*%aR,i64 4
%aW=bitcast i8*%aV to i32*
store i32 0,i32*%aW,align 1
store i32 10,i32*%aS,align 4
%aX=load i8*,i8**%d,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 2,i32*%a1,align 4
ret i8*%aR
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2299(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
h:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
br label%f
f:
%g=phi i8*[%a,%h],[%S,%R]
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%b,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%g,%f]
%o=bitcast i8*%n to i32*
%p=load i32,i32*%o,align 4
switch i32%p,label%q[
i32 8,label%br
i32 25,label%ae
i32 22,label%X
i32 23,label%T
i32 26,label%K
]
q:
%r=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%r,i8**%b,align 8
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
store i8*%s,i8**%c,align 8
%v=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@hQ,i64 0,i32 2,i64 0),i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[11x i8]}>,<{[4x i8],i32,[11x i8]}>*@hR,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%s,i64 24
%C=bitcast i8*%B to i32*
store i32 7,i32*%C,align 4
%D=call i8*@sml_alloc(i32 inreg 60)#0
%E=getelementptr inbounds i8,i8*%D,i64 -4
%F=bitcast i8*%E to i32*
store i32 1342177336,i32*%F,align 4
%G=getelementptr inbounds i8,i8*%D,i64 56
%H=bitcast i8*%G to i32*
store i32 1,i32*%H,align 4
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%D to i8**
store i8*%I,i8**%J,align 8
call void@sml_raise(i8*inreg%D)#1
unreachable
K:
%L=getelementptr inbounds i8,i8*%n,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
%O=getelementptr inbounds i8,i8*%N,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%b,align 8
br label%R
R:
%S=phi i8*[%Q,%K],[%W,%T],[%ad,%X]
br label%f
T:
%U=getelementptr inbounds i8,i8*%n,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%b,align 8
br label%R
X:
%Y=getelementptr inbounds i8,i8*%n,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 48
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
store i8*%ad,i8**%b,align 8
br label%R
ae:
%af=getelementptr inbounds i8,i8*%n,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%b,align 8
%an=getelementptr inbounds i8,i8*%ak,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%c,align 8
%aq=call i8*@sml_alloc(i32 inreg 12)#0
%ar=getelementptr inbounds i8,i8*%aq,i64 -4
%as=bitcast i8*%ar to i32*
store i32 1342177288,i32*%as,align 4
store i8*%aq,i8**%d,align 8
%at=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%au=bitcast i8*%aq to i8**
store i8*%at,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 8
%aw=bitcast i8*%av to i32*
store i32 1,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 28)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177304,i32*%az,align 4
%aA=load i8*,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ax,i64 8
%aD=bitcast i8*%aC to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2294 to void(...)*),void(...)**%aD,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 16
%aF=bitcast i8*%aE to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2294 to void(...)*),void(...)**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 24
%aH=bitcast i8*%aG to i32*
store i32 -2147483647,i32*%aH,align 4
%aI=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%aI,i8**%b,align 8
%aJ=call i8*@sml_alloc(i32 inreg 12)#0
%aK=getelementptr inbounds i8,i8*%aJ,i64 -4
%aL=bitcast i8*%aK to i32*
store i32 1342177288,i32*%aL,align 4
store i8*%aJ,i8**%e,align 8
%aM=load i8*,i8**%b,align 8
%aN=bitcast i8*%aJ to i8**
store i8*%aM,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aJ,i64 8
%aP=bitcast i8*%aO to i32*
store i32 1,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 28)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177304,i32*%aS,align 4
%aT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2295 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2295 to void(...)*),void(...)**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aQ,i64 24
%a0=bitcast i8*%aZ to i32*
store i32 -2147483647,i32*%a0,align 4
%a1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a2=call fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2294(i8*inreg%a1,i8*inreg%aQ)
store i8*%a2,i8**%d,align 8
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%e,align 8
%a6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 28)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177304,i32*%bi,align 4
%bj=load i8*,i8**%e,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2296 to void(...)*),void(...)**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2296 to void(...)*),void(...)**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 24
%bq=bitcast i8*%bp to i32*
store i32 -2147483647,i32*%bq,align 4
ret i8*%bg
br:
%bs=getelementptr inbounds i8,i8*%n,i64 8
%bt=bitcast i8*%bs to i8**
%bu=load i8*,i8**%bt,align 8
%bv=bitcast i8*%bu to i8**
%bw=load i8*,i8**%bv,align 8
store i8*%bw,i8**%b,align 8
%bx=getelementptr inbounds i8,i8*%bu,i64 16
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
store i8*%bz,i8**%c,align 8
%bA=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@hS,i64 0,i32 2,i64 0))
store i8*%bA,i8**%d,align 8
%bB=call i8*@sml_alloc(i32 inreg 28)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177304,i32*%bD,align 4
store i8*%bB,i8**%e,align 8
%bE=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bF=bitcast i8*%bB to i8**
store i8*%bE,i8**%bF,align 8
%bG=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bH=getelementptr inbounds i8,i8*%bB,i64 8
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bB,i64 16
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bB,i64 24
%bN=bitcast i8*%bM to i32*
store i32 7,i32*%bN,align 4
%bO=call i8*@sml_alloc(i32 inreg 28)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177304,i32*%bQ,align 4
%bR=load i8*,i8**%e,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2285 to void(...)*),void(...)**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 16
%bW=bitcast i8*%bV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10readResultE_2285 to void(...)*),void(...)**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bO,i64 24
%bY=bitcast i8*%bX to i32*
store i32 -2147483647,i32*%bY,align 4
ret i8*%bO
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2301(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2302(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2304(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2305(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2306(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2307(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2308(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2309(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2310(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2311(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2312(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2313(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2314(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2315(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2316(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2317(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2318(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2319(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2320(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2321(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2322(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2323(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2324(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2325(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2326(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2327(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2328(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2329(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2330(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2331(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2332(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2333(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2334(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2335(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2336(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2337(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2338(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2339(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2340(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2341(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2342(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2343(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2344(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 1
%F=bitcast i8*%A to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 2,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*null,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bG,i64 0,i32 2)to i8*))
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
store i8*%ab,i8**%e,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 4
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 1
%ah=bitcast i8*%ac to i32*
store i32 25,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 16
%am=bitcast i8*%al to i32*
store i32 2,i32*%am,align 4
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
store i8*null,i8**%d,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%c,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*null,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 7,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%e,align 8
%aX=bitcast i8*%aU to i64*
store i64 0,i64*%aX,align 4
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 2,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%d,align 8
%a6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%c,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%e,align 8
%bj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i8**
store i8*null,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
store i8*%bp,i8**%d,align 8
%bs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bp,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=bitcast i8*%bz to i32*
%bB=getelementptr inbounds i8,i8*%bz,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=getelementptr inbounds i8,i8*%bz,i64 4
%bE=bitcast i8*%bD to i32*
store i32 0,i32*%bE,align 1
store i32 10,i32*%bA,align 4
%bF=load i8*,i8**%d,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 2,i32*%bJ,align 4
ret i8*%bz
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2345(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*null,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=getelementptr inbounds i8,i8*%B,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
%G=bitcast i8*%B to i32*
store i32 2,i32*%G,align 4
%H=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 2,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
store i8*%M,i8**%f,align 8
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i8**
store i8*null,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bJ,i64 0,i32 2)to i8*))
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%c,align 8
%ac=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ab)
store i8*%ac,i8**%e,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 4
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=bitcast i8*%ad to i32*
store i32 25,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
%ao=bitcast i8**%d to i8***
%ap=load i8**,i8***%ao,align 8
%aq=load i8*,i8**%ap,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%c,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
store i8*%ax,i8**%e,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%h,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*null,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%e,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 7,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%g,align 8
%aX=bitcast i8*%aU to i64*
store i64 0,i64*%aX,align 4
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 2,i32*%a2,align 4
%a3=load i8*,i8**%d,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%d,align 8
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
store i8*%a7,i8**%e,align 8
%ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to i8**
store i8*null,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%d,align 8
%bj=getelementptr inbounds i8,i8*%bg,i64 4
%bk=bitcast i8*%bj to i32*
store i32 0,i32*%bk,align 1
%bl=bitcast i8*%bg to i32*
store i32 25,i32*%bl,align 4
%bm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 16
%bq=bitcast i8*%bp to i32*
store i32 2,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%e,align 8
%bu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*null,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 3,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
store i8*%bA,i8**%d,align 8
%bD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=load i8*,i8**%c,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bA,i64 24
%bM=bitcast i8*%bL to i32*
store i32 7,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177296,i32*%bP,align 4
store i8*%bN,i8**%e,align 8
%bQ=bitcast i8*%bN to i64*
store i64 0,i64*%bQ,align 4
%bR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 16
%bV=bitcast i8*%bU to i32*
store i32 2,i32*%bV,align 4
%bW=call i8*@sml_alloc(i32 inreg 28)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177304,i32*%bY,align 4
store i8*%bW,i8**%d,align 8
%bZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=load i8*,i8**%c,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bW,i64 24
%b8=bitcast i8*%b7 to i32*
store i32 7,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%e,align 8
%cc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b9,i64 8
%cf=bitcast i8*%ce to i8**
store i8*null,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b9,i64 16
%ch=bitcast i8*%cg to i32*
store i32 3,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%d,align 8
%cl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%co=getelementptr inbounds i8,i8*%ci,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%ci,i64 16
%cr=bitcast i8*%cq to i32*
store i32 3,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=bitcast i8*%cs to i32*
%cu=getelementptr inbounds i8,i8*%cs,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177296,i32*%cv,align 4
%cw=getelementptr inbounds i8,i8*%cs,i64 4
%cx=bitcast i8*%cw to i32*
store i32 0,i32*%cx,align 1
store i32 10,i32*%ct,align 4
%cy=load i8*,i8**%d,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cs,i64 16
%cC=bitcast i8*%cB to i32*
store i32 2,i32*%cC,align 4
ret i8*%cs
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2346(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2347(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2348(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2349(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2350(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2351(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2352(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2353(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2354(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2355(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2356(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2357(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2358(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2359(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2360(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2361(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2362(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2363(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2364(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2365(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%i,label%k
i:
%j=bitcast i8*%a to i8**
br label%n
k:
call void@sml_check(i32 inreg%g)
%l=bitcast i8**%d to i8***
%m=load i8**,i8***%l,align 8
br label%n
n:
%o=phi i8**[%m,%k],[%j,%i]
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%f,align 8
%t=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
store i8*%z,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 4
%D=bitcast i8*%C to i32*
store i32 0,i32*%D,align 1
%E=bitcast i8*%z to i32*
store i32 2,i32*%E,align 4
%F=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%G=getelementptr inbounds i8,i8*%z,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%z,i64 16
%J=bitcast i8*%I to i32*
store i32 2,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 20)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177296,i32*%M,align 4
store i8*%K,i8**%f,align 8
%N=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to i8**
store i8*null,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to i32*
store i32 3,i32*%S,align 4
%T=load i8*,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%T,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
store i8*null,i8**%d,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
%ac=load i8*,i8**%c,align 8
%ad=call fastcc i8*%Z(i8*inreg%ab,i8*inreg%ac)
store i8*%ad,i8**%d,align 8
%ae=call i8*@sml_alloc(i32 inreg 28)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177304,i32*%ag,align 4
store i8*%ae,i8**%e,align 8
%ah=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ai=bitcast i8*%ae to i8**
store i8*%ah,i8**%ai,align 8
%aj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ak=getelementptr inbounds i8,i8*%ae,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=load i8*,i8**%c,align 8
%an=getelementptr inbounds i8,i8*%ae,i64 16
%ao=bitcast i8*%an to i8**
store i8*%am,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ae,i64 24
%aq=bitcast i8*%ap to i32*
store i32 7,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%f,align 8
%au=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to i8**
store i8*null,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to i32*
store i32 3,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%d,align 8
%aD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=bitcast i8*%aK to i32*
%aM=getelementptr inbounds i8,i8*%aK,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177296,i32*%aN,align 4
%aO=getelementptr inbounds i8,i8*%aK,i64 4
%aP=bitcast i8*%aO to i32*
store i32 0,i32*%aP,align 1
store i32 10,i32*%aL,align 4
%aQ=load i8*,i8**%d,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aK,i64 16
%aU=bitcast i8*%aT to i32*
store i32 2,i32*%aU,align 4
ret i8*%aK
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2367(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%c,align 8
%h=getelementptr inbounds i8,i8*%a,i64 16
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177296,i32*%o,align 4
store i8*%m,i8**%f,align 8
%p=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to i8**
store i8*null,i8**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to i32*
store i32 3,i32*%u,align 4
%v=call i8*@sml_alloc(i32 inreg 20)#0
%w=getelementptr inbounds i8,i8*%v,i64 -4
%x=bitcast i8*%w to i32*
store i32 1342177296,i32*%x,align 4
store i8*%v,i8**%g,align 8
%y=getelementptr inbounds i8,i8*%v,i64 4
%z=bitcast i8*%y to i32*
store i32 0,i32*%z,align 1
%A=bitcast i8*%v to i32*
store i32 25,i32*%A,align 4
%B=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%v,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%v,i64 16
%F=bitcast i8*%E to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%G,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%c,align 8
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
store i8*%K,i8**%e,align 8
%N=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=getelementptr inbounds i8,i8*%K,i64 8
%R=bitcast i8*%Q to i8**
store i8*%P,i8**%R,align 8
%S=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%T=getelementptr inbounds i8,i8*%K,i64 16
%U=bitcast i8*%T to i8**
store i8*%S,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%K,i64 24
%W=bitcast i8*%V to i32*
store i32 7,i32*%W,align 4
%X=call i8*@sml_alloc(i32 inreg 20)#0
%Y=bitcast i8*%X to i32*
%Z=getelementptr inbounds i8,i8*%X,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%X,i64 4
%ac=bitcast i8*%ab to i32*
store i32 0,i32*%ac,align 1
store i32 20,i32*%Y,align 4
%ad=load i8*,i8**%e,align 8
%ae=getelementptr inbounds i8,i8*%X,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%X,i64 16
%ah=bitcast i8*%ag to i32*
store i32 2,i32*%ah,align 4
ret i8*%X
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2368(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2369(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%f,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*null,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%e,align 8
%D=getelementptr inbounds i8,i8*%A,i64 4
%E=bitcast i8*%D to i32*
store i32 0,i32*%E,align 1
%F=bitcast i8*%A to i32*
store i32 2,i32*%F,align 4
%G=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%H=getelementptr inbounds i8,i8*%A,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 16
%K=bitcast i8*%J to i32*
store i32 2,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 20)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177296,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%L,i64 8
%R=bitcast i8*%Q to i8**
store i8*null,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%L,i64 16
%T=bitcast i8*%S to i32*
store i32 3,i32*%T,align 4
%U=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bG,i64 0,i32 2)to i8*))
%V=getelementptr inbounds i8,i8*%U,i64 16
%W=bitcast i8*%V to i8*(i8*,i8*)**
%X=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%W,align 8
%Y=bitcast i8*%U to i8**
%Z=load i8*,i8**%Y,align 8
%aa=load i8*,i8**%c,align 8
%ab=call fastcc i8*%X(i8*inreg%Z,i8*inreg%aa)
store i8*%ab,i8**%e,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%g,align 8
%af=getelementptr inbounds i8,i8*%ac,i64 4
%ag=bitcast i8*%af to i32*
store i32 0,i32*%ag,align 1
%ah=bitcast i8*%ac to i32*
store i32 25,i32*%ah,align 4
%ai=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ai,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 16
%am=bitcast i8*%al to i32*
store i32 2,i32*%am,align 4
%an=load i8*,i8**%d,align 8
%ao=getelementptr inbounds i8,i8*%an,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
store i8*null,i8**%d,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%c,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
store i8*%ax,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*null,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 7,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%e,align 8
%aX=bitcast i8*%aU to i64*
store i64 0,i64*%aX,align 4
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 2,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
store i8*%a3,i8**%d,align 8
%a6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a9=getelementptr inbounds i8,i8*%a3,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=load i8*,i8**%c,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 16
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a3,i64 24
%bf=bitcast i8*%be to i32*
store i32 7,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%e,align 8
%bj=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i8**
store i8*null,i8**%bm,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 16
%bo=bitcast i8*%bn to i32*
store i32 3,i32*%bo,align 4
%bp=call i8*@sml_alloc(i32 inreg 20)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177296,i32*%br,align 4
store i8*%bp,i8**%d,align 8
%bs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bv=getelementptr inbounds i8,i8*%bp,i64 8
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=getelementptr inbounds i8,i8*%bp,i64 16
%by=bitcast i8*%bx to i32*
store i32 3,i32*%by,align 4
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=bitcast i8*%bz to i32*
%bB=getelementptr inbounds i8,i8*%bz,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=getelementptr inbounds i8,i8*%bz,i64 4
%bE=bitcast i8*%bD to i32*
store i32 0,i32*%bE,align 1
store i32 10,i32*%bA,align 4
%bF=load i8*,i8**%d,align 8
%bG=getelementptr inbounds i8,i8*%bz,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bz,i64 16
%bJ=bitcast i8*%bI to i32*
store i32 2,i32*%bJ,align 4
ret i8*%bz
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2370(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%d,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%a,%o]
%p=getelementptr inbounds i8,i8*%n,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%f,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*null,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%e,align 8
%E=getelementptr inbounds i8,i8*%B,i64 4
%F=bitcast i8*%E to i32*
store i32 0,i32*%F,align 1
%G=bitcast i8*%B to i32*
store i32 2,i32*%G,align 4
%H=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I=getelementptr inbounds i8,i8*%B,i64 8
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%B,i64 16
%L=bitcast i8*%K to i32*
store i32 2,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
store i8*%M,i8**%f,align 8
%P=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i8**
store i8*null,i8**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bJ,i64 0,i32 2)to i8*))
%W=getelementptr inbounds i8,i8*%V,i64 16
%X=bitcast i8*%W to i8*(i8*,i8*)**
%Y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%X,align 8
%Z=bitcast i8*%V to i8**
%aa=load i8*,i8**%Z,align 8
%ab=load i8*,i8**%c,align 8
%ac=call fastcc i8*%Y(i8*inreg%aa,i8*inreg%ab)
store i8*%ac,i8**%e,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%g,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 4
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=bitcast i8*%ad to i32*
store i32 25,i32*%ai,align 4
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
%ao=bitcast i8**%d to i8***
%ap=load i8**,i8***%ao,align 8
%aq=load i8*,i8**%ap,align 8
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%c,align 8
%ax=call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
store i8*%ax,i8**%e,align 8
%ay=call i8*@sml_alloc(i32 inreg 20)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177296,i32*%aA,align 4
store i8*%ay,i8**%h,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*null,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ay,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%e,align 8
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 7,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
store i8*%aU,i8**%g,align 8
%aX=bitcast i8*%aU to i64*
store i64 0,i64*%aX,align 4
%aY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 2,i32*%a2,align 4
%a3=load i8*,i8**%d,align 8
%a4=getelementptr inbounds i8,i8*%a3,i64 8
%a5=bitcast i8*%a4 to i8**
%a6=load i8*,i8**%a5,align 8
store i8*%a6,i8**%d,align 8
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
store i8*%a7,i8**%e,align 8
%ba=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to i8**
store i8*null,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to i32*
store i32 3,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
store i8*%bg,i8**%d,align 8
%bj=getelementptr inbounds i8,i8*%bg,i64 4
%bk=bitcast i8*%bj to i32*
store i32 0,i32*%bk,align 1
%bl=bitcast i8*%bg to i32*
store i32 25,i32*%bl,align 4
%bm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bn=getelementptr inbounds i8,i8*%bg,i64 8
%bo=bitcast i8*%bn to i8**
store i8*%bm,i8**%bo,align 8
%bp=getelementptr inbounds i8,i8*%bg,i64 16
%bq=bitcast i8*%bp to i32*
store i32 2,i32*%bq,align 4
%br=call i8*@sml_alloc(i32 inreg 20)#0
%bs=getelementptr inbounds i8,i8*%br,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
store i8*%br,i8**%e,align 8
%bu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bv=bitcast i8*%br to i8**
store i8*%bu,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
store i8*null,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%br,i64 16
%bz=bitcast i8*%by to i32*
store i32 3,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 28)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177304,i32*%bC,align 4
store i8*%bA,i8**%d,align 8
%bD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bG=getelementptr inbounds i8,i8*%bA,i64 8
%bH=bitcast i8*%bG to i8**
store i8*%bF,i8**%bH,align 8
%bI=load i8*,i8**%c,align 8
%bJ=getelementptr inbounds i8,i8*%bA,i64 16
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bA,i64 24
%bM=bitcast i8*%bL to i32*
store i32 7,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 20)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177296,i32*%bP,align 4
store i8*%bN,i8**%e,align 8
%bQ=bitcast i8*%bN to i64*
store i64 0,i64*%bQ,align 4
%bR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bS=getelementptr inbounds i8,i8*%bN,i64 8
%bT=bitcast i8*%bS to i8**
store i8*%bR,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bN,i64 16
%bV=bitcast i8*%bU to i32*
store i32 2,i32*%bV,align 4
%bW=call i8*@sml_alloc(i32 inreg 28)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177304,i32*%bY,align 4
store i8*%bW,i8**%d,align 8
%bZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=load i8*,i8**%c,align 8
%b5=getelementptr inbounds i8,i8*%bW,i64 16
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bW,i64 24
%b8=bitcast i8*%b7 to i32*
store i32 7,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%e,align 8
%cc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b9,i64 8
%cf=bitcast i8*%ce to i8**
store i8*null,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b9,i64 16
%ch=bitcast i8*%cg to i32*
store i32 3,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 20)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177296,i32*%ck,align 4
store i8*%ci,i8**%d,align 8
%cl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%co=getelementptr inbounds i8,i8*%ci,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%ci,i64 16
%cr=bitcast i8*%cq to i32*
store i32 3,i32*%cr,align 4
%cs=call i8*@sml_alloc(i32 inreg 20)#0
%ct=bitcast i8*%cs to i32*
%cu=getelementptr inbounds i8,i8*%cs,i64 -4
%cv=bitcast i8*%cu to i32*
store i32 1342177296,i32*%cv,align 4
%cw=getelementptr inbounds i8,i8*%cs,i64 4
%cx=bitcast i8*%cw to i32*
store i32 0,i32*%cx,align 1
store i32 10,i32*%ct,align 4
%cy=load i8*,i8**%d,align 8
%cz=getelementptr inbounds i8,i8*%cs,i64 8
%cA=bitcast i8*%cz to i8**
store i8*%cy,i8**%cA,align 8
%cB=getelementptr inbounds i8,i8*%cs,i64 16
%cC=bitcast i8*%cB to i32*
store i32 2,i32*%cC,align 4
ret i8*%cs
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2372(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
n:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%b,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%b,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%a,%n]
%o=call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%m)
store i8*%o,i8**%c,align 8
%p=load i8*,i8**%b,align 8
%q=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%p)
store i8*%q,i8**%d,align 8
%r=load i8*,i8**%b,align 8
%s=bitcast i8*%r to i32*
%t=load i32,i32*%s,align 4
switch i32%t,label%u[
i32 16,label%Gz
i32 8,label%Fu
i32 6,label%EB
i32 17,label%DI
i32 3,label%CP
i32 4,label%BW
i32 19,label%A3
i32 20,label%Aa
i32 0,label%zh
i32 27,label%yo
i32 1,label%xv
i32 28,label%wC
i32 9,label%vJ
i32 10,label%uQ
i32 30,label%tJ
i32 11,label%sC
i32 21,label%rv
i32 18,label%qo
i32 15,label%ph
i32 25,label%nY
i32 22,label%mF
i32 23,label%ll
i32 13,label%kq
i32 12,label%jv
i32 14,label%iA
i32 29,label%hF
i32 7,label%gK
i32 2,label%fP
i32 5,label%eU
i32 24,label%dZ
i32 26,label%M
]
u:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%v=load i8*,i8**@_SMLZ5Match,align 8
store i8*%v,i8**%b,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
store i8*%w,i8**%c,align 8
%z=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%w,i64 8
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hT,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%w,i64 16
%E=bitcast i8*%D to i32*
store i32 3,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%c,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
store i8*null,i8**%b,align 8
br label%N
N:
%O=phi i8*[%r,%M],[%Y,%S]
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
%R=icmp eq i32%Q,26
br i1%R,label%S,label%Z
S:
%T=getelementptr inbounds i8,i8*%O,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=getelementptr inbounds i8,i8*%V,i64 8
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
br label%N
Z:
%aa=bitcast i8*%O to i32*
store i8*%O,i8**%b,align 8
%ab=load i32,i32*%aa,align 4
switch i32%ab,label%c4[
i32 8,label%bw
i32 23,label%ac
]
ac:
%ad=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%ad,i8**%e,align 8
%ae=load i8*,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 16
%ag=bitcast i8*%af to i8*(i8*,i8*)**
%ah=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 12)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177288,i32*%am,align 4
store i8*%ak,i8**%f,align 8
%an=load i8*,i8**%e,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i32*
store i32 1,i32*%aq,align 4
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
%au=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ar,i64 8
%ax=bitcast i8*%aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2368 to void(...)*),void(...)**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ar,i64 16
%az=bitcast i8*%ay to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2368 to void(...)*),void(...)**%az,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 24
%aB=bitcast i8*%aA to i32*
store i32 -2147483647,i32*%aB,align 4
%aC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aD=call fastcc i8*%ah(i8*inreg%aC,i8*inreg%ar)
store i8*%aD,i8**%d,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%f,align 8
%aH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
%aJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aK=getelementptr inbounds i8,i8*%aE,i64 8
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aE,i64 16
%aN=bitcast i8*%aM to i32*
store i32 3,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 28)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177304,i32*%aQ,align 4
store i8*%aO,i8**%e,align 8
%aR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2369 to void(...)*),void(...)**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2369 to void(...)*),void(...)**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aO,i64 24
%aY=bitcast i8*%aX to i32*
store i32 -2147483647,i32*%aY,align 4
%aZ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a0=call fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2299(i8*inreg%aZ)
store i8*%a0,i8**%b,align 8
%a1=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%a1,i8**%d,align 8
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
store i8*%a2,i8**%f,align 8
%a5=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a8=getelementptr inbounds i8,i8*%a2,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a2,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 28)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177304,i32*%be,align 4
store i8*%bc,i8**%b,align 8
%bf=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2370 to void(...)*),void(...)**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 16
%bk=bitcast i8*%bj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2370 to void(...)*),void(...)**%bk,align 8
%bl=getelementptr inbounds i8,i8*%bc,i64 24
%bm=bitcast i8*%bl to i32*
store i32 -2147483647,i32*%bm,align 4
%bn=call i8*@sml_alloc(i32 inreg 28)#0
%bo=getelementptr inbounds i8,i8*%bn,i64 -4
%bp=bitcast i8*%bo to i32*
store i32 1342177304,i32*%bp,align 4
%bq=load i8*,i8**%c,align 8
%br=bitcast i8*%bn to i8**
store i8*%bq,i8**%br,align 8
%bs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bt=getelementptr inbounds i8,i8*%bn,i64 8
%bu=bitcast i8*%bt to i8**
store i8*%bs,i8**%bu,align 8
%bv=load i8*,i8**%b,align 8
br label%HU
bw:
%bx=getelementptr inbounds i8,i8*%O,i64 8
%by=bitcast i8*%bx to i8**
%bz=load i8*,i8**%by,align 8
%bA=bitcast i8*%bz to i8**
%bB=load i8*,i8**%bA,align 8
store i8*%bB,i8**%b,align 8
%bC=getelementptr inbounds i8,i8*%bz,i64 8
%bD=bitcast i8*%bC to i32*
%bE=load i32,i32*%bD,align 4
%bF=icmp eq i32%bE,0
br i1%bF,label%bG,label%c4
bG:
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i8**
%bJ=load i8*,i8**%bI,align 8
store i8*%bJ,i8**%e,align 8
%bK=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%bK,i8**%f,align 8
%bL=load i8*,i8**%d,align 8
%bM=getelementptr inbounds i8,i8*%bL,i64 16
%bN=bitcast i8*%bM to i8*(i8*,i8*)**
%bO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bN,align 8
%bP=bitcast i8*%bL to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%d,align 8
%bR=call i8*@sml_alloc(i32 inreg 12)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177288,i32*%bT,align 4
store i8*%bR,i8**%g,align 8
%bU=load i8*,i8**%f,align 8
%bV=bitcast i8*%bR to i8**
store i8*%bU,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bR,i64 8
%bX=bitcast i8*%bW to i32*
store i32 1,i32*%bX,align 4
%bY=call i8*@sml_alloc(i32 inreg 28)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177304,i32*%b0,align 4
%b1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b2=bitcast i8*%bY to i8**
store i8*%b1,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bY,i64 8
%b4=bitcast i8*%b3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2364 to void(...)*),void(...)**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bY,i64 16
%b6=bitcast i8*%b5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2364 to void(...)*),void(...)**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bY,i64 24
%b8=bitcast i8*%b7 to i32*
store i32 -2147483647,i32*%b8,align 4
%b9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ca=call fastcc i8*%bO(i8*inreg%b9,i8*inreg%bY)
store i8*%ca,i8**%d,align 8
%cb=call i8*@sml_alloc(i32 inreg 20)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177296,i32*%cd,align 4
store i8*%cb,i8**%g,align 8
%ce=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cb,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=call i8*@sml_alloc(i32 inreg 28)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177304,i32*%cn,align 4
store i8*%cl,i8**%f,align 8
%co=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cp=bitcast i8*%cl to i8**
store i8*%co,i8**%cp,align 8
%cq=getelementptr inbounds i8,i8*%cl,i64 8
%cr=bitcast i8*%cq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2365 to void(...)*),void(...)**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cl,i64 16
%ct=bitcast i8*%cs to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2365 to void(...)*),void(...)**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cl,i64 24
%cv=bitcast i8*%cu to i32*
store i32 -2147483647,i32*%cv,align 4
%cw=call fastcc i8*@_SMLFN11RecordLabel10fromStringE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@hS,i64 0,i32 2,i64 0))
store i8*%cw,i8**%d,align 8
%cx=call i8*@sml_alloc(i32 inreg 28)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177304,i32*%cz,align 4
store i8*%cx,i8**%g,align 8
%cA=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%cB=bitcast i8*%cx to i8**
store i8*%cA,i8**%cB,align 8
%cC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cD=getelementptr inbounds i8,i8*%cx,i64 8
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cG=getelementptr inbounds i8,i8*%cx,i64 16
%cH=bitcast i8*%cG to i8**
store i8*%cF,i8**%cH,align 8
%cI=getelementptr inbounds i8,i8*%cx,i64 24
%cJ=bitcast i8*%cI to i32*
store i32 7,i32*%cJ,align 4
%cK=call i8*@sml_alloc(i32 inreg 28)#0
%cL=getelementptr inbounds i8,i8*%cK,i64 -4
%cM=bitcast i8*%cL to i32*
store i32 1342177304,i32*%cM,align 4
store i8*%cK,i8**%b,align 8
%cN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cO=bitcast i8*%cK to i8**
store i8*%cN,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cK,i64 8
%cQ=bitcast i8*%cP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2367 to void(...)*),void(...)**%cQ,align 8
%cR=getelementptr inbounds i8,i8*%cK,i64 16
%cS=bitcast i8*%cR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2367 to void(...)*),void(...)**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cK,i64 24
%cU=bitcast i8*%cT to i32*
store i32 -2147483647,i32*%cU,align 4
%cV=call i8*@sml_alloc(i32 inreg 28)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177304,i32*%cX,align 4
%cY=load i8*,i8**%c,align 8
%cZ=bitcast i8*%cV to i8**
store i8*%cY,i8**%cZ,align 8
%c0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c1=getelementptr inbounds i8,i8*%cV,i64 8
%c2=bitcast i8*%c1 to i8**
store i8*%c0,i8**%c2,align 8
%c3=load i8*,i8**%b,align 8
br label%HU
c4:
store i8*null,i8**%b,align 8
%c5=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%c5,i8**%b,align 8
%c6=load i8*,i8**%d,align 8
%c7=getelementptr inbounds i8,i8*%c6,i64 16
%c8=bitcast i8*%c7 to i8*(i8*,i8*)**
%c9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c8,align 8
%da=bitcast i8*%c6 to i8**
%db=load i8*,i8**%da,align 8
store i8*%db,i8**%d,align 8
%dc=call i8*@sml_alloc(i32 inreg 12)#0
%dd=getelementptr inbounds i8,i8*%dc,i64 -4
%de=bitcast i8*%dd to i32*
store i32 1342177288,i32*%de,align 4
store i8*%dc,i8**%e,align 8
%df=load i8*,i8**%b,align 8
%dg=bitcast i8*%dc to i8**
store i8*%df,i8**%dg,align 8
%dh=getelementptr inbounds i8,i8*%dc,i64 8
%di=bitcast i8*%dh to i32*
store i32 1,i32*%di,align 4
%dj=call i8*@sml_alloc(i32 inreg 28)#0
%dk=getelementptr inbounds i8,i8*%dj,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 1342177304,i32*%dl,align 4
%dm=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dn=bitcast i8*%dj to i8**
store i8*%dm,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dj,i64 8
%dp=bitcast i8*%do to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2362 to void(...)*),void(...)**%dp,align 8
%dq=getelementptr inbounds i8,i8*%dj,i64 16
%dr=bitcast i8*%dq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2362 to void(...)*),void(...)**%dr,align 8
%ds=getelementptr inbounds i8,i8*%dj,i64 24
%dt=bitcast i8*%ds to i32*
store i32 -2147483647,i32*%dt,align 4
%du=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dv=call fastcc i8*%c9(i8*inreg%du,i8*inreg%dj)
store i8*%dv,i8**%d,align 8
%dw=call i8*@sml_alloc(i32 inreg 20)#0
%dx=getelementptr inbounds i8,i8*%dw,i64 -4
%dy=bitcast i8*%dx to i32*
store i32 1342177296,i32*%dy,align 4
store i8*%dw,i8**%e,align 8
%dz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%dA=bitcast i8*%dw to i8**
store i8*%dz,i8**%dA,align 8
%dB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dC=getelementptr inbounds i8,i8*%dw,i64 8
%dD=bitcast i8*%dC to i8**
store i8*%dB,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dw,i64 16
%dF=bitcast i8*%dE to i32*
store i32 3,i32*%dF,align 4
%dG=call i8*@sml_alloc(i32 inreg 28)#0
%dH=getelementptr inbounds i8,i8*%dG,i64 -4
%dI=bitcast i8*%dH to i32*
store i32 1342177304,i32*%dI,align 4
store i8*%dG,i8**%b,align 8
%dJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dK=bitcast i8*%dG to i8**
store i8*%dJ,i8**%dK,align 8
%dL=getelementptr inbounds i8,i8*%dG,i64 8
%dM=bitcast i8*%dL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2363 to void(...)*),void(...)**%dM,align 8
%dN=getelementptr inbounds i8,i8*%dG,i64 16
%dO=bitcast i8*%dN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2363 to void(...)*),void(...)**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dG,i64 24
%dQ=bitcast i8*%dP to i32*
store i32 -2147483647,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 28)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177304,i32*%dT,align 4
%dU=load i8*,i8**%c,align 8
%dV=bitcast i8*%dR to i8**
store i8*%dU,i8**%dV,align 8
%dW=load i8*,i8**%b,align 8
%dX=getelementptr inbounds i8,i8*%dR,i64 8
%dY=bitcast i8*%dX to i8**
store i8*%dW,i8**%dY,align 8
br label%HU
dZ:
store i8*null,i8**%b,align 8
%d0=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%d0,i8**%b,align 8
%d1=load i8*,i8**%d,align 8
%d2=getelementptr inbounds i8,i8*%d1,i64 16
%d3=bitcast i8*%d2 to i8*(i8*,i8*)**
%d4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d3,align 8
%d5=bitcast i8*%d1 to i8**
%d6=load i8*,i8**%d5,align 8
store i8*%d6,i8**%d,align 8
%d7=call i8*@sml_alloc(i32 inreg 12)#0
%d8=getelementptr inbounds i8,i8*%d7,i64 -4
%d9=bitcast i8*%d8 to i32*
store i32 1342177288,i32*%d9,align 4
store i8*%d7,i8**%e,align 8
%ea=load i8*,i8**%b,align 8
%eb=bitcast i8*%d7 to i8**
store i8*%ea,i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d7,i64 8
%ed=bitcast i8*%ec to i32*
store i32 1,i32*%ed,align 4
%ee=call i8*@sml_alloc(i32 inreg 28)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177304,i32*%eg,align 4
%eh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ei=bitcast i8*%ee to i8**
store i8*%eh,i8**%ei,align 8
%ej=getelementptr inbounds i8,i8*%ee,i64 8
%ek=bitcast i8*%ej to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2360 to void(...)*),void(...)**%ek,align 8
%el=getelementptr inbounds i8,i8*%ee,i64 16
%em=bitcast i8*%el to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2360 to void(...)*),void(...)**%em,align 8
%en=getelementptr inbounds i8,i8*%ee,i64 24
%eo=bitcast i8*%en to i32*
store i32 -2147483647,i32*%eo,align 4
%ep=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eq=call fastcc i8*%d4(i8*inreg%ep,i8*inreg%ee)
store i8*%eq,i8**%d,align 8
%er=call i8*@sml_alloc(i32 inreg 20)#0
%es=getelementptr inbounds i8,i8*%er,i64 -4
%et=bitcast i8*%es to i32*
store i32 1342177296,i32*%et,align 4
store i8*%er,i8**%e,align 8
%eu=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ev=bitcast i8*%er to i8**
store i8*%eu,i8**%ev,align 8
%ew=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ex=getelementptr inbounds i8,i8*%er,i64 8
%ey=bitcast i8*%ex to i8**
store i8*%ew,i8**%ey,align 8
%ez=getelementptr inbounds i8,i8*%er,i64 16
%eA=bitcast i8*%ez to i32*
store i32 3,i32*%eA,align 4
%eB=call i8*@sml_alloc(i32 inreg 28)#0
%eC=getelementptr inbounds i8,i8*%eB,i64 -4
%eD=bitcast i8*%eC to i32*
store i32 1342177304,i32*%eD,align 4
store i8*%eB,i8**%b,align 8
%eE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eF=bitcast i8*%eB to i8**
store i8*%eE,i8**%eF,align 8
%eG=getelementptr inbounds i8,i8*%eB,i64 8
%eH=bitcast i8*%eG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2361 to void(...)*),void(...)**%eH,align 8
%eI=getelementptr inbounds i8,i8*%eB,i64 16
%eJ=bitcast i8*%eI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2361 to void(...)*),void(...)**%eJ,align 8
%eK=getelementptr inbounds i8,i8*%eB,i64 24
%eL=bitcast i8*%eK to i32*
store i32 -2147483647,i32*%eL,align 4
%eM=call i8*@sml_alloc(i32 inreg 28)#0
%eN=getelementptr inbounds i8,i8*%eM,i64 -4
%eO=bitcast i8*%eN to i32*
store i32 1342177304,i32*%eO,align 4
%eP=load i8*,i8**%c,align 8
%eQ=bitcast i8*%eM to i8**
store i8*%eP,i8**%eQ,align 8
%eR=load i8*,i8**%b,align 8
%eS=getelementptr inbounds i8,i8*%eM,i64 8
%eT=bitcast i8*%eS to i8**
store i8*%eR,i8**%eT,align 8
br label%HU
eU:
store i8*null,i8**%b,align 8
%eV=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%eV,i8**%b,align 8
%eW=load i8*,i8**%d,align 8
%eX=getelementptr inbounds i8,i8*%eW,i64 16
%eY=bitcast i8*%eX to i8*(i8*,i8*)**
%eZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eY,align 8
%e0=bitcast i8*%eW to i8**
%e1=load i8*,i8**%e0,align 8
store i8*%e1,i8**%d,align 8
%e2=call i8*@sml_alloc(i32 inreg 12)#0
%e3=getelementptr inbounds i8,i8*%e2,i64 -4
%e4=bitcast i8*%e3 to i32*
store i32 1342177288,i32*%e4,align 4
store i8*%e2,i8**%e,align 8
%e5=load i8*,i8**%b,align 8
%e6=bitcast i8*%e2 to i8**
store i8*%e5,i8**%e6,align 8
%e7=getelementptr inbounds i8,i8*%e2,i64 8
%e8=bitcast i8*%e7 to i32*
store i32 1,i32*%e8,align 4
%e9=call i8*@sml_alloc(i32 inreg 28)#0
%fa=getelementptr inbounds i8,i8*%e9,i64 -4
%fb=bitcast i8*%fa to i32*
store i32 1342177304,i32*%fb,align 4
%fc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fd=bitcast i8*%e9 to i8**
store i8*%fc,i8**%fd,align 8
%fe=getelementptr inbounds i8,i8*%e9,i64 8
%ff=bitcast i8*%fe to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2358 to void(...)*),void(...)**%ff,align 8
%fg=getelementptr inbounds i8,i8*%e9,i64 16
%fh=bitcast i8*%fg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2358 to void(...)*),void(...)**%fh,align 8
%fi=getelementptr inbounds i8,i8*%e9,i64 24
%fj=bitcast i8*%fi to i32*
store i32 -2147483647,i32*%fj,align 4
%fk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fl=call fastcc i8*%eZ(i8*inreg%fk,i8*inreg%e9)
store i8*%fl,i8**%d,align 8
%fm=call i8*@sml_alloc(i32 inreg 20)#0
%fn=getelementptr inbounds i8,i8*%fm,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177296,i32*%fo,align 4
store i8*%fm,i8**%e,align 8
%fp=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%fq=bitcast i8*%fm to i8**
store i8*%fp,i8**%fq,align 8
%fr=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fs=getelementptr inbounds i8,i8*%fm,i64 8
%ft=bitcast i8*%fs to i8**
store i8*%fr,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fm,i64 16
%fv=bitcast i8*%fu to i32*
store i32 3,i32*%fv,align 4
%fw=call i8*@sml_alloc(i32 inreg 28)#0
%fx=getelementptr inbounds i8,i8*%fw,i64 -4
%fy=bitcast i8*%fx to i32*
store i32 1342177304,i32*%fy,align 4
store i8*%fw,i8**%b,align 8
%fz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fA=bitcast i8*%fw to i8**
store i8*%fz,i8**%fA,align 8
%fB=getelementptr inbounds i8,i8*%fw,i64 8
%fC=bitcast i8*%fB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2359 to void(...)*),void(...)**%fC,align 8
%fD=getelementptr inbounds i8,i8*%fw,i64 16
%fE=bitcast i8*%fD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2359 to void(...)*),void(...)**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fw,i64 24
%fG=bitcast i8*%fF to i32*
store i32 -2147483647,i32*%fG,align 4
%fH=call i8*@sml_alloc(i32 inreg 28)#0
%fI=getelementptr inbounds i8,i8*%fH,i64 -4
%fJ=bitcast i8*%fI to i32*
store i32 1342177304,i32*%fJ,align 4
%fK=load i8*,i8**%c,align 8
%fL=bitcast i8*%fH to i8**
store i8*%fK,i8**%fL,align 8
%fM=load i8*,i8**%b,align 8
%fN=getelementptr inbounds i8,i8*%fH,i64 8
%fO=bitcast i8*%fN to i8**
store i8*%fM,i8**%fO,align 8
br label%HU
fP:
store i8*null,i8**%b,align 8
%fQ=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%fQ,i8**%b,align 8
%fR=load i8*,i8**%d,align 8
%fS=getelementptr inbounds i8,i8*%fR,i64 16
%fT=bitcast i8*%fS to i8*(i8*,i8*)**
%fU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fT,align 8
%fV=bitcast i8*%fR to i8**
%fW=load i8*,i8**%fV,align 8
store i8*%fW,i8**%d,align 8
%fX=call i8*@sml_alloc(i32 inreg 12)#0
%fY=getelementptr inbounds i8,i8*%fX,i64 -4
%fZ=bitcast i8*%fY to i32*
store i32 1342177288,i32*%fZ,align 4
store i8*%fX,i8**%e,align 8
%f0=load i8*,i8**%b,align 8
%f1=bitcast i8*%fX to i8**
store i8*%f0,i8**%f1,align 8
%f2=getelementptr inbounds i8,i8*%fX,i64 8
%f3=bitcast i8*%f2 to i32*
store i32 1,i32*%f3,align 4
%f4=call i8*@sml_alloc(i32 inreg 28)#0
%f5=getelementptr inbounds i8,i8*%f4,i64 -4
%f6=bitcast i8*%f5 to i32*
store i32 1342177304,i32*%f6,align 4
%f7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%f8=bitcast i8*%f4 to i8**
store i8*%f7,i8**%f8,align 8
%f9=getelementptr inbounds i8,i8*%f4,i64 8
%ga=bitcast i8*%f9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2356 to void(...)*),void(...)**%ga,align 8
%gb=getelementptr inbounds i8,i8*%f4,i64 16
%gc=bitcast i8*%gb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2356 to void(...)*),void(...)**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f4,i64 24
%ge=bitcast i8*%gd to i32*
store i32 -2147483647,i32*%ge,align 4
%gf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gg=call fastcc i8*%fU(i8*inreg%gf,i8*inreg%f4)
store i8*%gg,i8**%d,align 8
%gh=call i8*@sml_alloc(i32 inreg 20)#0
%gi=getelementptr inbounds i8,i8*%gh,i64 -4
%gj=bitcast i8*%gi to i32*
store i32 1342177296,i32*%gj,align 4
store i8*%gh,i8**%e,align 8
%gk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%gl=bitcast i8*%gh to i8**
store i8*%gk,i8**%gl,align 8
%gm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gn=getelementptr inbounds i8,i8*%gh,i64 8
%go=bitcast i8*%gn to i8**
store i8*%gm,i8**%go,align 8
%gp=getelementptr inbounds i8,i8*%gh,i64 16
%gq=bitcast i8*%gp to i32*
store i32 3,i32*%gq,align 4
%gr=call i8*@sml_alloc(i32 inreg 28)#0
%gs=getelementptr inbounds i8,i8*%gr,i64 -4
%gt=bitcast i8*%gs to i32*
store i32 1342177304,i32*%gt,align 4
store i8*%gr,i8**%b,align 8
%gu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gv=bitcast i8*%gr to i8**
store i8*%gu,i8**%gv,align 8
%gw=getelementptr inbounds i8,i8*%gr,i64 8
%gx=bitcast i8*%gw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2357 to void(...)*),void(...)**%gx,align 8
%gy=getelementptr inbounds i8,i8*%gr,i64 16
%gz=bitcast i8*%gy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2357 to void(...)*),void(...)**%gz,align 8
%gA=getelementptr inbounds i8,i8*%gr,i64 24
%gB=bitcast i8*%gA to i32*
store i32 -2147483647,i32*%gB,align 4
%gC=call i8*@sml_alloc(i32 inreg 28)#0
%gD=getelementptr inbounds i8,i8*%gC,i64 -4
%gE=bitcast i8*%gD to i32*
store i32 1342177304,i32*%gE,align 4
%gF=load i8*,i8**%c,align 8
%gG=bitcast i8*%gC to i8**
store i8*%gF,i8**%gG,align 8
%gH=load i8*,i8**%b,align 8
%gI=getelementptr inbounds i8,i8*%gC,i64 8
%gJ=bitcast i8*%gI to i8**
store i8*%gH,i8**%gJ,align 8
br label%HU
gK:
store i8*null,i8**%b,align 8
%gL=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%gL,i8**%b,align 8
%gM=load i8*,i8**%d,align 8
%gN=getelementptr inbounds i8,i8*%gM,i64 16
%gO=bitcast i8*%gN to i8*(i8*,i8*)**
%gP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gO,align 8
%gQ=bitcast i8*%gM to i8**
%gR=load i8*,i8**%gQ,align 8
store i8*%gR,i8**%d,align 8
%gS=call i8*@sml_alloc(i32 inreg 12)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177288,i32*%gU,align 4
store i8*%gS,i8**%e,align 8
%gV=load i8*,i8**%b,align 8
%gW=bitcast i8*%gS to i8**
store i8*%gV,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gS,i64 8
%gY=bitcast i8*%gX to i32*
store i32 1,i32*%gY,align 4
%gZ=call i8*@sml_alloc(i32 inreg 28)#0
%g0=getelementptr inbounds i8,i8*%gZ,i64 -4
%g1=bitcast i8*%g0 to i32*
store i32 1342177304,i32*%g1,align 4
%g2=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g3=bitcast i8*%gZ to i8**
store i8*%g2,i8**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gZ,i64 8
%g5=bitcast i8*%g4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2354 to void(...)*),void(...)**%g5,align 8
%g6=getelementptr inbounds i8,i8*%gZ,i64 16
%g7=bitcast i8*%g6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2354 to void(...)*),void(...)**%g7,align 8
%g8=getelementptr inbounds i8,i8*%gZ,i64 24
%g9=bitcast i8*%g8 to i32*
store i32 -2147483647,i32*%g9,align 4
%ha=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hb=call fastcc i8*%gP(i8*inreg%ha,i8*inreg%gZ)
store i8*%hb,i8**%d,align 8
%hc=call i8*@sml_alloc(i32 inreg 20)#0
%hd=getelementptr inbounds i8,i8*%hc,i64 -4
%he=bitcast i8*%hd to i32*
store i32 1342177296,i32*%he,align 4
store i8*%hc,i8**%e,align 8
%hf=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%hg=bitcast i8*%hc to i8**
store i8*%hf,i8**%hg,align 8
%hh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hi=getelementptr inbounds i8,i8*%hc,i64 8
%hj=bitcast i8*%hi to i8**
store i8*%hh,i8**%hj,align 8
%hk=getelementptr inbounds i8,i8*%hc,i64 16
%hl=bitcast i8*%hk to i32*
store i32 3,i32*%hl,align 4
%hm=call i8*@sml_alloc(i32 inreg 28)#0
%hn=getelementptr inbounds i8,i8*%hm,i64 -4
%ho=bitcast i8*%hn to i32*
store i32 1342177304,i32*%ho,align 4
store i8*%hm,i8**%b,align 8
%hp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hq=bitcast i8*%hm to i8**
store i8*%hp,i8**%hq,align 8
%hr=getelementptr inbounds i8,i8*%hm,i64 8
%hs=bitcast i8*%hr to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2355 to void(...)*),void(...)**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hm,i64 16
%hu=bitcast i8*%ht to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2355 to void(...)*),void(...)**%hu,align 8
%hv=getelementptr inbounds i8,i8*%hm,i64 24
%hw=bitcast i8*%hv to i32*
store i32 -2147483647,i32*%hw,align 4
%hx=call i8*@sml_alloc(i32 inreg 28)#0
%hy=getelementptr inbounds i8,i8*%hx,i64 -4
%hz=bitcast i8*%hy to i32*
store i32 1342177304,i32*%hz,align 4
%hA=load i8*,i8**%c,align 8
%hB=bitcast i8*%hx to i8**
store i8*%hA,i8**%hB,align 8
%hC=load i8*,i8**%b,align 8
%hD=getelementptr inbounds i8,i8*%hx,i64 8
%hE=bitcast i8*%hD to i8**
store i8*%hC,i8**%hE,align 8
br label%HU
hF:
store i8*null,i8**%b,align 8
%hG=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%hG,i8**%b,align 8
%hH=load i8*,i8**%d,align 8
%hI=getelementptr inbounds i8,i8*%hH,i64 16
%hJ=bitcast i8*%hI to i8*(i8*,i8*)**
%hK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hJ,align 8
%hL=bitcast i8*%hH to i8**
%hM=load i8*,i8**%hL,align 8
store i8*%hM,i8**%d,align 8
%hN=call i8*@sml_alloc(i32 inreg 12)#0
%hO=getelementptr inbounds i8,i8*%hN,i64 -4
%hP=bitcast i8*%hO to i32*
store i32 1342177288,i32*%hP,align 4
store i8*%hN,i8**%e,align 8
%hQ=load i8*,i8**%b,align 8
%hR=bitcast i8*%hN to i8**
store i8*%hQ,i8**%hR,align 8
%hS=getelementptr inbounds i8,i8*%hN,i64 8
%hT=bitcast i8*%hS to i32*
store i32 1,i32*%hT,align 4
%hU=call i8*@sml_alloc(i32 inreg 28)#0
%hV=getelementptr inbounds i8,i8*%hU,i64 -4
%hW=bitcast i8*%hV to i32*
store i32 1342177304,i32*%hW,align 4
%hX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hY=bitcast i8*%hU to i8**
store i8*%hX,i8**%hY,align 8
%hZ=getelementptr inbounds i8,i8*%hU,i64 8
%h0=bitcast i8*%hZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2352 to void(...)*),void(...)**%h0,align 8
%h1=getelementptr inbounds i8,i8*%hU,i64 16
%h2=bitcast i8*%h1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2352 to void(...)*),void(...)**%h2,align 8
%h3=getelementptr inbounds i8,i8*%hU,i64 24
%h4=bitcast i8*%h3 to i32*
store i32 -2147483647,i32*%h4,align 4
%h5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%h6=call fastcc i8*%hK(i8*inreg%h5,i8*inreg%hU)
store i8*%h6,i8**%d,align 8
%h7=call i8*@sml_alloc(i32 inreg 20)#0
%h8=getelementptr inbounds i8,i8*%h7,i64 -4
%h9=bitcast i8*%h8 to i32*
store i32 1342177296,i32*%h9,align 4
store i8*%h7,i8**%e,align 8
%ia=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ib=bitcast i8*%h7 to i8**
store i8*%ia,i8**%ib,align 8
%ic=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%id=getelementptr inbounds i8,i8*%h7,i64 8
%ie=bitcast i8*%id to i8**
store i8*%ic,i8**%ie,align 8
%if=getelementptr inbounds i8,i8*%h7,i64 16
%ig=bitcast i8*%if to i32*
store i32 3,i32*%ig,align 4
%ih=call i8*@sml_alloc(i32 inreg 28)#0
%ii=getelementptr inbounds i8,i8*%ih,i64 -4
%ij=bitcast i8*%ii to i32*
store i32 1342177304,i32*%ij,align 4
store i8*%ih,i8**%b,align 8
%ik=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%il=bitcast i8*%ih to i8**
store i8*%ik,i8**%il,align 8
%im=getelementptr inbounds i8,i8*%ih,i64 8
%in=bitcast i8*%im to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2353 to void(...)*),void(...)**%in,align 8
%io=getelementptr inbounds i8,i8*%ih,i64 16
%ip=bitcast i8*%io to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2353 to void(...)*),void(...)**%ip,align 8
%iq=getelementptr inbounds i8,i8*%ih,i64 24
%ir=bitcast i8*%iq to i32*
store i32 -2147483647,i32*%ir,align 4
%is=call i8*@sml_alloc(i32 inreg 28)#0
%it=getelementptr inbounds i8,i8*%is,i64 -4
%iu=bitcast i8*%it to i32*
store i32 1342177304,i32*%iu,align 4
%iv=load i8*,i8**%c,align 8
%iw=bitcast i8*%is to i8**
store i8*%iv,i8**%iw,align 8
%ix=load i8*,i8**%b,align 8
%iy=getelementptr inbounds i8,i8*%is,i64 8
%iz=bitcast i8*%iy to i8**
store i8*%ix,i8**%iz,align 8
br label%HU
iA:
store i8*null,i8**%b,align 8
%iB=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%iB,i8**%b,align 8
%iC=load i8*,i8**%d,align 8
%iD=getelementptr inbounds i8,i8*%iC,i64 16
%iE=bitcast i8*%iD to i8*(i8*,i8*)**
%iF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iE,align 8
%iG=bitcast i8*%iC to i8**
%iH=load i8*,i8**%iG,align 8
store i8*%iH,i8**%d,align 8
%iI=call i8*@sml_alloc(i32 inreg 12)#0
%iJ=getelementptr inbounds i8,i8*%iI,i64 -4
%iK=bitcast i8*%iJ to i32*
store i32 1342177288,i32*%iK,align 4
store i8*%iI,i8**%e,align 8
%iL=load i8*,i8**%b,align 8
%iM=bitcast i8*%iI to i8**
store i8*%iL,i8**%iM,align 8
%iN=getelementptr inbounds i8,i8*%iI,i64 8
%iO=bitcast i8*%iN to i32*
store i32 1,i32*%iO,align 4
%iP=call i8*@sml_alloc(i32 inreg 28)#0
%iQ=getelementptr inbounds i8,i8*%iP,i64 -4
%iR=bitcast i8*%iQ to i32*
store i32 1342177304,i32*%iR,align 4
%iS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iT=bitcast i8*%iP to i8**
store i8*%iS,i8**%iT,align 8
%iU=getelementptr inbounds i8,i8*%iP,i64 8
%iV=bitcast i8*%iU to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2350 to void(...)*),void(...)**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iP,i64 16
%iX=bitcast i8*%iW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2350 to void(...)*),void(...)**%iX,align 8
%iY=getelementptr inbounds i8,i8*%iP,i64 24
%iZ=bitcast i8*%iY to i32*
store i32 -2147483647,i32*%iZ,align 4
%i0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%i1=call fastcc i8*%iF(i8*inreg%i0,i8*inreg%iP)
store i8*%i1,i8**%d,align 8
%i2=call i8*@sml_alloc(i32 inreg 20)#0
%i3=getelementptr inbounds i8,i8*%i2,i64 -4
%i4=bitcast i8*%i3 to i32*
store i32 1342177296,i32*%i4,align 4
store i8*%i2,i8**%e,align 8
%i5=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i6=bitcast i8*%i2 to i8**
store i8*%i5,i8**%i6,align 8
%i7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%i8=getelementptr inbounds i8,i8*%i2,i64 8
%i9=bitcast i8*%i8 to i8**
store i8*%i7,i8**%i9,align 8
%ja=getelementptr inbounds i8,i8*%i2,i64 16
%jb=bitcast i8*%ja to i32*
store i32 3,i32*%jb,align 4
%jc=call i8*@sml_alloc(i32 inreg 28)#0
%jd=getelementptr inbounds i8,i8*%jc,i64 -4
%je=bitcast i8*%jd to i32*
store i32 1342177304,i32*%je,align 4
store i8*%jc,i8**%b,align 8
%jf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jg=bitcast i8*%jc to i8**
store i8*%jf,i8**%jg,align 8
%jh=getelementptr inbounds i8,i8*%jc,i64 8
%ji=bitcast i8*%jh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2351 to void(...)*),void(...)**%ji,align 8
%jj=getelementptr inbounds i8,i8*%jc,i64 16
%jk=bitcast i8*%jj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2351 to void(...)*),void(...)**%jk,align 8
%jl=getelementptr inbounds i8,i8*%jc,i64 24
%jm=bitcast i8*%jl to i32*
store i32 -2147483647,i32*%jm,align 4
%jn=call i8*@sml_alloc(i32 inreg 28)#0
%jo=getelementptr inbounds i8,i8*%jn,i64 -4
%jp=bitcast i8*%jo to i32*
store i32 1342177304,i32*%jp,align 4
%jq=load i8*,i8**%c,align 8
%jr=bitcast i8*%jn to i8**
store i8*%jq,i8**%jr,align 8
%js=load i8*,i8**%b,align 8
%jt=getelementptr inbounds i8,i8*%jn,i64 8
%ju=bitcast i8*%jt to i8**
store i8*%js,i8**%ju,align 8
br label%HU
jv:
store i8*null,i8**%b,align 8
%jw=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%jw,i8**%b,align 8
%jx=load i8*,i8**%d,align 8
%jy=getelementptr inbounds i8,i8*%jx,i64 16
%jz=bitcast i8*%jy to i8*(i8*,i8*)**
%jA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jz,align 8
%jB=bitcast i8*%jx to i8**
%jC=load i8*,i8**%jB,align 8
store i8*%jC,i8**%d,align 8
%jD=call i8*@sml_alloc(i32 inreg 12)#0
%jE=getelementptr inbounds i8,i8*%jD,i64 -4
%jF=bitcast i8*%jE to i32*
store i32 1342177288,i32*%jF,align 4
store i8*%jD,i8**%e,align 8
%jG=load i8*,i8**%b,align 8
%jH=bitcast i8*%jD to i8**
store i8*%jG,i8**%jH,align 8
%jI=getelementptr inbounds i8,i8*%jD,i64 8
%jJ=bitcast i8*%jI to i32*
store i32 1,i32*%jJ,align 4
%jK=call i8*@sml_alloc(i32 inreg 28)#0
%jL=getelementptr inbounds i8,i8*%jK,i64 -4
%jM=bitcast i8*%jL to i32*
store i32 1342177304,i32*%jM,align 4
%jN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jO=bitcast i8*%jK to i8**
store i8*%jN,i8**%jO,align 8
%jP=getelementptr inbounds i8,i8*%jK,i64 8
%jQ=bitcast i8*%jP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2348 to void(...)*),void(...)**%jQ,align 8
%jR=getelementptr inbounds i8,i8*%jK,i64 16
%jS=bitcast i8*%jR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2348 to void(...)*),void(...)**%jS,align 8
%jT=getelementptr inbounds i8,i8*%jK,i64 24
%jU=bitcast i8*%jT to i32*
store i32 -2147483647,i32*%jU,align 4
%jV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jW=call fastcc i8*%jA(i8*inreg%jV,i8*inreg%jK)
store i8*%jW,i8**%d,align 8
%jX=call i8*@sml_alloc(i32 inreg 20)#0
%jY=getelementptr inbounds i8,i8*%jX,i64 -4
%jZ=bitcast i8*%jY to i32*
store i32 1342177296,i32*%jZ,align 4
store i8*%jX,i8**%e,align 8
%j0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%j1=bitcast i8*%jX to i8**
store i8*%j0,i8**%j1,align 8
%j2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%j3=getelementptr inbounds i8,i8*%jX,i64 8
%j4=bitcast i8*%j3 to i8**
store i8*%j2,i8**%j4,align 8
%j5=getelementptr inbounds i8,i8*%jX,i64 16
%j6=bitcast i8*%j5 to i32*
store i32 3,i32*%j6,align 4
%j7=call i8*@sml_alloc(i32 inreg 28)#0
%j8=getelementptr inbounds i8,i8*%j7,i64 -4
%j9=bitcast i8*%j8 to i32*
store i32 1342177304,i32*%j9,align 4
store i8*%j7,i8**%b,align 8
%ka=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kb=bitcast i8*%j7 to i8**
store i8*%ka,i8**%kb,align 8
%kc=getelementptr inbounds i8,i8*%j7,i64 8
%kd=bitcast i8*%kc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2349 to void(...)*),void(...)**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j7,i64 16
%kf=bitcast i8*%ke to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2349 to void(...)*),void(...)**%kf,align 8
%kg=getelementptr inbounds i8,i8*%j7,i64 24
%kh=bitcast i8*%kg to i32*
store i32 -2147483647,i32*%kh,align 4
%ki=call i8*@sml_alloc(i32 inreg 28)#0
%kj=getelementptr inbounds i8,i8*%ki,i64 -4
%kk=bitcast i8*%kj to i32*
store i32 1342177304,i32*%kk,align 4
%kl=load i8*,i8**%c,align 8
%km=bitcast i8*%ki to i8**
store i8*%kl,i8**%km,align 8
%kn=load i8*,i8**%b,align 8
%ko=getelementptr inbounds i8,i8*%ki,i64 8
%kp=bitcast i8*%ko to i8**
store i8*%kn,i8**%kp,align 8
br label%HU
kq:
store i8*null,i8**%b,align 8
%kr=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%kr,i8**%b,align 8
%ks=load i8*,i8**%d,align 8
%kt=getelementptr inbounds i8,i8*%ks,i64 16
%ku=bitcast i8*%kt to i8*(i8*,i8*)**
%kv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ku,align 8
%kw=bitcast i8*%ks to i8**
%kx=load i8*,i8**%kw,align 8
store i8*%kx,i8**%d,align 8
%ky=call i8*@sml_alloc(i32 inreg 12)#0
%kz=getelementptr inbounds i8,i8*%ky,i64 -4
%kA=bitcast i8*%kz to i32*
store i32 1342177288,i32*%kA,align 4
store i8*%ky,i8**%e,align 8
%kB=load i8*,i8**%b,align 8
%kC=bitcast i8*%ky to i8**
store i8*%kB,i8**%kC,align 8
%kD=getelementptr inbounds i8,i8*%ky,i64 8
%kE=bitcast i8*%kD to i32*
store i32 1,i32*%kE,align 4
%kF=call i8*@sml_alloc(i32 inreg 28)#0
%kG=getelementptr inbounds i8,i8*%kF,i64 -4
%kH=bitcast i8*%kG to i32*
store i32 1342177304,i32*%kH,align 4
%kI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kJ=bitcast i8*%kF to i8**
store i8*%kI,i8**%kJ,align 8
%kK=getelementptr inbounds i8,i8*%kF,i64 8
%kL=bitcast i8*%kK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2346 to void(...)*),void(...)**%kL,align 8
%kM=getelementptr inbounds i8,i8*%kF,i64 16
%kN=bitcast i8*%kM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2346 to void(...)*),void(...)**%kN,align 8
%kO=getelementptr inbounds i8,i8*%kF,i64 24
%kP=bitcast i8*%kO to i32*
store i32 -2147483647,i32*%kP,align 4
%kQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kR=call fastcc i8*%kv(i8*inreg%kQ,i8*inreg%kF)
store i8*%kR,i8**%d,align 8
%kS=call i8*@sml_alloc(i32 inreg 20)#0
%kT=getelementptr inbounds i8,i8*%kS,i64 -4
%kU=bitcast i8*%kT to i32*
store i32 1342177296,i32*%kU,align 4
store i8*%kS,i8**%e,align 8
%kV=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%kW=bitcast i8*%kS to i8**
store i8*%kV,i8**%kW,align 8
%kX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kY=getelementptr inbounds i8,i8*%kS,i64 8
%kZ=bitcast i8*%kY to i8**
store i8*%kX,i8**%kZ,align 8
%k0=getelementptr inbounds i8,i8*%kS,i64 16
%k1=bitcast i8*%k0 to i32*
store i32 3,i32*%k1,align 4
%k2=call i8*@sml_alloc(i32 inreg 28)#0
%k3=getelementptr inbounds i8,i8*%k2,i64 -4
%k4=bitcast i8*%k3 to i32*
store i32 1342177304,i32*%k4,align 4
store i8*%k2,i8**%b,align 8
%k5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%k6=bitcast i8*%k2 to i8**
store i8*%k5,i8**%k6,align 8
%k7=getelementptr inbounds i8,i8*%k2,i64 8
%k8=bitcast i8*%k7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2347 to void(...)*),void(...)**%k8,align 8
%k9=getelementptr inbounds i8,i8*%k2,i64 16
%la=bitcast i8*%k9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2347 to void(...)*),void(...)**%la,align 8
%lb=getelementptr inbounds i8,i8*%k2,i64 24
%lc=bitcast i8*%lb to i32*
store i32 -2147483647,i32*%lc,align 4
%ld=call i8*@sml_alloc(i32 inreg 28)#0
%le=getelementptr inbounds i8,i8*%ld,i64 -4
%lf=bitcast i8*%le to i32*
store i32 1342177304,i32*%lf,align 4
%lg=load i8*,i8**%c,align 8
%lh=bitcast i8*%ld to i8**
store i8*%lg,i8**%lh,align 8
%li=load i8*,i8**%b,align 8
%lj=getelementptr inbounds i8,i8*%ld,i64 8
%lk=bitcast i8*%lj to i8**
store i8*%li,i8**%lk,align 8
br label%HU
ll:
%lm=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%lm,i8**%e,align 8
%ln=load i8*,i8**%d,align 8
%lo=getelementptr inbounds i8,i8*%ln,i64 16
%lp=bitcast i8*%lo to i8*(i8*,i8*)**
%lq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lp,align 8
%lr=bitcast i8*%ln to i8**
%ls=load i8*,i8**%lr,align 8
store i8*%ls,i8**%d,align 8
%lt=call i8*@sml_alloc(i32 inreg 12)#0
%lu=getelementptr inbounds i8,i8*%lt,i64 -4
%lv=bitcast i8*%lu to i32*
store i32 1342177288,i32*%lv,align 4
store i8*%lt,i8**%f,align 8
%lw=load i8*,i8**%e,align 8
%lx=bitcast i8*%lt to i8**
store i8*%lw,i8**%lx,align 8
%ly=getelementptr inbounds i8,i8*%lt,i64 8
%lz=bitcast i8*%ly to i32*
store i32 1,i32*%lz,align 4
%lA=call i8*@sml_alloc(i32 inreg 28)#0
%lB=getelementptr inbounds i8,i8*%lA,i64 -4
%lC=bitcast i8*%lB to i32*
store i32 1342177304,i32*%lC,align 4
%lD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lE=bitcast i8*%lA to i8**
store i8*%lD,i8**%lE,align 8
%lF=getelementptr inbounds i8,i8*%lA,i64 8
%lG=bitcast i8*%lF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2343 to void(...)*),void(...)**%lG,align 8
%lH=getelementptr inbounds i8,i8*%lA,i64 16
%lI=bitcast i8*%lH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2343 to void(...)*),void(...)**%lI,align 8
%lJ=getelementptr inbounds i8,i8*%lA,i64 24
%lK=bitcast i8*%lJ to i32*
store i32 -2147483647,i32*%lK,align 4
%lL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lM=call fastcc i8*%lq(i8*inreg%lL,i8*inreg%lA)
store i8*%lM,i8**%d,align 8
%lN=call i8*@sml_alloc(i32 inreg 20)#0
%lO=getelementptr inbounds i8,i8*%lN,i64 -4
%lP=bitcast i8*%lO to i32*
store i32 1342177296,i32*%lP,align 4
store i8*%lN,i8**%f,align 8
%lQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lR=bitcast i8*%lN to i8**
store i8*%lQ,i8**%lR,align 8
%lS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lT=getelementptr inbounds i8,i8*%lN,i64 8
%lU=bitcast i8*%lT to i8**
store i8*%lS,i8**%lU,align 8
%lV=getelementptr inbounds i8,i8*%lN,i64 16
%lW=bitcast i8*%lV to i32*
store i32 3,i32*%lW,align 4
%lX=call i8*@sml_alloc(i32 inreg 28)#0
%lY=getelementptr inbounds i8,i8*%lX,i64 -4
%lZ=bitcast i8*%lY to i32*
store i32 1342177304,i32*%lZ,align 4
store i8*%lX,i8**%e,align 8
%l0=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%l1=bitcast i8*%lX to i8**
store i8*%l0,i8**%l1,align 8
%l2=getelementptr inbounds i8,i8*%lX,i64 8
%l3=bitcast i8*%l2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2344 to void(...)*),void(...)**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lX,i64 16
%l5=bitcast i8*%l4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2344 to void(...)*),void(...)**%l5,align 8
%l6=getelementptr inbounds i8,i8*%lX,i64 24
%l7=bitcast i8*%l6 to i32*
store i32 -2147483647,i32*%l7,align 4
%l8=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%l9=call fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2299(i8*inreg%l8)
store i8*%l9,i8**%b,align 8
%ma=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%ma,i8**%d,align 8
%mb=call i8*@sml_alloc(i32 inreg 20)#0
%mc=getelementptr inbounds i8,i8*%mb,i64 -4
%md=bitcast i8*%mc to i32*
store i32 1342177296,i32*%md,align 4
store i8*%mb,i8**%f,align 8
%me=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%mf=bitcast i8*%mb to i8**
store i8*%me,i8**%mf,align 8
%mg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mh=getelementptr inbounds i8,i8*%mb,i64 8
%mi=bitcast i8*%mh to i8**
store i8*%mg,i8**%mi,align 8
%mj=getelementptr inbounds i8,i8*%mb,i64 16
%mk=bitcast i8*%mj to i32*
store i32 3,i32*%mk,align 4
%ml=call i8*@sml_alloc(i32 inreg 28)#0
%mm=getelementptr inbounds i8,i8*%ml,i64 -4
%mn=bitcast i8*%mm to i32*
store i32 1342177304,i32*%mn,align 4
store i8*%ml,i8**%b,align 8
%mo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mp=bitcast i8*%ml to i8**
store i8*%mo,i8**%mp,align 8
%mq=getelementptr inbounds i8,i8*%ml,i64 8
%mr=bitcast i8*%mq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2345 to void(...)*),void(...)**%mr,align 8
%ms=getelementptr inbounds i8,i8*%ml,i64 16
%mt=bitcast i8*%ms to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2345 to void(...)*),void(...)**%mt,align 8
%mu=getelementptr inbounds i8,i8*%ml,i64 24
%mv=bitcast i8*%mu to i32*
store i32 -2147483647,i32*%mv,align 4
%mw=call i8*@sml_alloc(i32 inreg 28)#0
%mx=getelementptr inbounds i8,i8*%mw,i64 -4
%my=bitcast i8*%mx to i32*
store i32 1342177304,i32*%my,align 4
%mz=load i8*,i8**%c,align 8
%mA=bitcast i8*%mw to i8**
store i8*%mz,i8**%mA,align 8
%mB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mC=getelementptr inbounds i8,i8*%mw,i64 8
%mD=bitcast i8*%mC to i8**
store i8*%mB,i8**%mD,align 8
%mE=load i8*,i8**%b,align 8
br label%HU
mF:
%mG=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%mG,i8**%e,align 8
%mH=load i8*,i8**%d,align 8
%mI=getelementptr inbounds i8,i8*%mH,i64 16
%mJ=bitcast i8*%mI to i8*(i8*,i8*)**
%mK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mJ,align 8
%mL=bitcast i8*%mH to i8**
%mM=load i8*,i8**%mL,align 8
store i8*%mM,i8**%d,align 8
%mN=call i8*@sml_alloc(i32 inreg 12)#0
%mO=getelementptr inbounds i8,i8*%mN,i64 -4
%mP=bitcast i8*%mO to i32*
store i32 1342177288,i32*%mP,align 4
store i8*%mN,i8**%f,align 8
%mQ=load i8*,i8**%e,align 8
%mR=bitcast i8*%mN to i8**
store i8*%mQ,i8**%mR,align 8
%mS=getelementptr inbounds i8,i8*%mN,i64 8
%mT=bitcast i8*%mS to i32*
store i32 1,i32*%mT,align 4
%mU=call i8*@sml_alloc(i32 inreg 28)#0
%mV=getelementptr inbounds i8,i8*%mU,i64 -4
%mW=bitcast i8*%mV to i32*
store i32 1342177304,i32*%mW,align 4
%mX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mY=bitcast i8*%mU to i8**
store i8*%mX,i8**%mY,align 8
%mZ=getelementptr inbounds i8,i8*%mU,i64 8
%m0=bitcast i8*%mZ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2341 to void(...)*),void(...)**%m0,align 8
%m1=getelementptr inbounds i8,i8*%mU,i64 16
%m2=bitcast i8*%m1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2341 to void(...)*),void(...)**%m2,align 8
%m3=getelementptr inbounds i8,i8*%mU,i64 24
%m4=bitcast i8*%m3 to i32*
store i32 -2147483647,i32*%m4,align 4
%m5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%m6=call fastcc i8*%mK(i8*inreg%m5,i8*inreg%mU)
store i8*%m6,i8**%d,align 8
%m7=call i8*@sml_alloc(i32 inreg 20)#0
%m8=getelementptr inbounds i8,i8*%m7,i64 -4
%m9=bitcast i8*%m8 to i32*
store i32 1342177296,i32*%m9,align 4
store i8*%m7,i8**%f,align 8
%na=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nb=bitcast i8*%m7 to i8**
store i8*%na,i8**%nb,align 8
%nc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nd=getelementptr inbounds i8,i8*%m7,i64 8
%ne=bitcast i8*%nd to i8**
store i8*%nc,i8**%ne,align 8
%nf=getelementptr inbounds i8,i8*%m7,i64 16
%ng=bitcast i8*%nf to i32*
store i32 3,i32*%ng,align 4
%nh=call i8*@sml_alloc(i32 inreg 28)#0
%ni=getelementptr inbounds i8,i8*%nh,i64 -4
%nj=bitcast i8*%ni to i32*
store i32 1342177304,i32*%nj,align 4
store i8*%nh,i8**%d,align 8
%nk=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nl=bitcast i8*%nh to i8**
store i8*%nk,i8**%nl,align 8
%nm=getelementptr inbounds i8,i8*%nh,i64 8
%nn=bitcast i8*%nm to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2342 to void(...)*),void(...)**%nn,align 8
%no=getelementptr inbounds i8,i8*%nh,i64 16
%np=bitcast i8*%no to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2342 to void(...)*),void(...)**%np,align 8
%nq=getelementptr inbounds i8,i8*%nh,i64 24
%nr=bitcast i8*%nq to i32*
store i32 -2147483647,i32*%nr,align 4
%ns=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%nt=call fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2299(i8*inreg%ns)
store i8*%nt,i8**%b,align 8
%nu=call i8*@sml_alloc(i32 inreg 20)#0
%nv=getelementptr inbounds i8,i8*%nu,i64 -4
%nw=bitcast i8*%nv to i32*
store i32 1342177296,i32*%nw,align 4
store i8*%nu,i8**%e,align 8
%nx=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%ny=bitcast i8*%nu to i8**
store i8*%nx,i8**%ny,align 8
%nz=getelementptr inbounds i8,i8*%nu,i64 8
%nA=bitcast i8*%nz to i8**
store i8*null,i8**%nA,align 8
%nB=getelementptr inbounds i8,i8*%nu,i64 16
%nC=bitcast i8*%nB to i32*
store i32 3,i32*%nC,align 4
%nD=call i8*@sml_alloc(i32 inreg 20)#0
%nE=getelementptr inbounds i8,i8*%nD,i64 -4
%nF=bitcast i8*%nE to i32*
store i32 1342177296,i32*%nF,align 4
store i8*%nD,i8**%b,align 8
%nG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nH=bitcast i8*%nD to i8**
store i8*%nG,i8**%nH,align 8
%nI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nJ=getelementptr inbounds i8,i8*%nD,i64 8
%nK=bitcast i8*%nJ to i8**
store i8*%nI,i8**%nK,align 8
%nL=getelementptr inbounds i8,i8*%nD,i64 16
%nM=bitcast i8*%nL to i32*
store i32 3,i32*%nM,align 4
%nN=call i8*@sml_alloc(i32 inreg 20)#0
%nO=getelementptr inbounds i8,i8*%nN,i64 -4
%nP=bitcast i8*%nO to i32*
store i32 1342177296,i32*%nP,align 4
%nQ=load i8*,i8**%c,align 8
%nR=bitcast i8*%nN to i8**
store i8*%nQ,i8**%nR,align 8
%nS=load i8*,i8**%b,align 8
%nT=getelementptr inbounds i8,i8*%nN,i64 8
%nU=bitcast i8*%nT to i8**
store i8*%nS,i8**%nU,align 8
%nV=getelementptr inbounds i8,i8*%nN,i64 16
%nW=bitcast i8*%nV to i32*
store i32 3,i32*%nW,align 4
%nX=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fJ,i64 0,i32 2)to i8*),i8*inreg%nN)
ret i8*%nX
nY:
%nZ=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%nZ,i8**%e,align 8
%n0=load i8*,i8**%d,align 8
%n1=getelementptr inbounds i8,i8*%n0,i64 16
%n2=bitcast i8*%n1 to i8*(i8*,i8*)**
%n3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n2,align 8
%n4=bitcast i8*%n0 to i8**
%n5=load i8*,i8**%n4,align 8
store i8*%n5,i8**%d,align 8
%n6=call i8*@sml_alloc(i32 inreg 12)#0
%n7=getelementptr inbounds i8,i8*%n6,i64 -4
%n8=bitcast i8*%n7 to i32*
store i32 1342177288,i32*%n8,align 4
store i8*%n6,i8**%f,align 8
%n9=load i8*,i8**%e,align 8
%oa=bitcast i8*%n6 to i8**
store i8*%n9,i8**%oa,align 8
%ob=getelementptr inbounds i8,i8*%n6,i64 8
%oc=bitcast i8*%ob to i32*
store i32 1,i32*%oc,align 4
%od=call i8*@sml_alloc(i32 inreg 28)#0
%oe=getelementptr inbounds i8,i8*%od,i64 -4
%of=bitcast i8*%oe to i32*
store i32 1342177304,i32*%of,align 4
%og=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%oh=bitcast i8*%od to i8**
store i8*%og,i8**%oh,align 8
%oi=getelementptr inbounds i8,i8*%od,i64 8
%oj=bitcast i8*%oi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2339 to void(...)*),void(...)**%oj,align 8
%ok=getelementptr inbounds i8,i8*%od,i64 16
%ol=bitcast i8*%ok to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2339 to void(...)*),void(...)**%ol,align 8
%om=getelementptr inbounds i8,i8*%od,i64 24
%on=bitcast i8*%om to i32*
store i32 -2147483647,i32*%on,align 4
%oo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%op=call fastcc i8*%n3(i8*inreg%oo,i8*inreg%od)
store i8*%op,i8**%d,align 8
%oq=call i8*@sml_alloc(i32 inreg 20)#0
%or=getelementptr inbounds i8,i8*%oq,i64 -4
%os=bitcast i8*%or to i32*
store i32 1342177296,i32*%os,align 4
store i8*%oq,i8**%f,align 8
%ot=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ou=bitcast i8*%oq to i8**
store i8*%ot,i8**%ou,align 8
%ov=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ow=getelementptr inbounds i8,i8*%oq,i64 8
%ox=bitcast i8*%ow to i8**
store i8*%ov,i8**%ox,align 8
%oy=getelementptr inbounds i8,i8*%oq,i64 16
%oz=bitcast i8*%oy to i32*
store i32 3,i32*%oz,align 4
%oA=call i8*@sml_alloc(i32 inreg 28)#0
%oB=getelementptr inbounds i8,i8*%oA,i64 -4
%oC=bitcast i8*%oB to i32*
store i32 1342177304,i32*%oC,align 4
store i8*%oA,i8**%d,align 8
%oD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%oE=bitcast i8*%oA to i8**
store i8*%oD,i8**%oE,align 8
%oF=getelementptr inbounds i8,i8*%oA,i64 8
%oG=bitcast i8*%oF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2340 to void(...)*),void(...)**%oG,align 8
%oH=getelementptr inbounds i8,i8*%oA,i64 16
%oI=bitcast i8*%oH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2340 to void(...)*),void(...)**%oI,align 8
%oJ=getelementptr inbounds i8,i8*%oA,i64 24
%oK=bitcast i8*%oJ to i32*
store i32 -2147483647,i32*%oK,align 4
%oL=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%oM=call fastcc i8*@_SMLLLN12ElaborateSQL10readResultE_2299(i8*inreg%oL)
store i8*%oM,i8**%b,align 8
%oN=call i8*@sml_alloc(i32 inreg 20)#0
%oO=getelementptr inbounds i8,i8*%oN,i64 -4
%oP=bitcast i8*%oO to i32*
store i32 1342177296,i32*%oP,align 4
store i8*%oN,i8**%e,align 8
%oQ=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%oR=bitcast i8*%oN to i8**
store i8*%oQ,i8**%oR,align 8
%oS=getelementptr inbounds i8,i8*%oN,i64 8
%oT=bitcast i8*%oS to i8**
store i8*null,i8**%oT,align 8
%oU=getelementptr inbounds i8,i8*%oN,i64 16
%oV=bitcast i8*%oU to i32*
store i32 3,i32*%oV,align 4
%oW=call i8*@sml_alloc(i32 inreg 20)#0
%oX=getelementptr inbounds i8,i8*%oW,i64 -4
%oY=bitcast i8*%oX to i32*
store i32 1342177296,i32*%oY,align 4
store i8*%oW,i8**%b,align 8
%oZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%o0=bitcast i8*%oW to i8**
store i8*%oZ,i8**%o0,align 8
%o1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%o2=getelementptr inbounds i8,i8*%oW,i64 8
%o3=bitcast i8*%o2 to i8**
store i8*%o1,i8**%o3,align 8
%o4=getelementptr inbounds i8,i8*%oW,i64 16
%o5=bitcast i8*%o4 to i32*
store i32 3,i32*%o5,align 4
%o6=call i8*@sml_alloc(i32 inreg 20)#0
%o7=getelementptr inbounds i8,i8*%o6,i64 -4
%o8=bitcast i8*%o7 to i32*
store i32 1342177296,i32*%o8,align 4
%o9=load i8*,i8**%c,align 8
%pa=bitcast i8*%o6 to i8**
store i8*%o9,i8**%pa,align 8
%pb=load i8*,i8**%b,align 8
%pc=getelementptr inbounds i8,i8*%o6,i64 8
%pd=bitcast i8*%pc to i8**
store i8*%pb,i8**%pd,align 8
%pe=getelementptr inbounds i8,i8*%o6,i64 16
%pf=bitcast i8*%pe to i32*
store i32 3,i32*%pf,align 4
%pg=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fG,i64 0,i32 2)to i8*),i8*inreg%o6)
ret i8*%pg
ph:
store i8*null,i8**%b,align 8
%pi=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%pi,i8**%b,align 8
%pj=load i8*,i8**%d,align 8
%pk=getelementptr inbounds i8,i8*%pj,i64 16
%pl=bitcast i8*%pk to i8*(i8*,i8*)**
%pm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pl,align 8
%pn=bitcast i8*%pj to i8**
%po=load i8*,i8**%pn,align 8
store i8*%po,i8**%d,align 8
%pp=call i8*@sml_alloc(i32 inreg 12)#0
%pq=getelementptr inbounds i8,i8*%pp,i64 -4
%pr=bitcast i8*%pq to i32*
store i32 1342177288,i32*%pr,align 4
store i8*%pp,i8**%e,align 8
%ps=load i8*,i8**%b,align 8
%pt=bitcast i8*%pp to i8**
store i8*%ps,i8**%pt,align 8
%pu=getelementptr inbounds i8,i8*%pp,i64 8
%pv=bitcast i8*%pu to i32*
store i32 1,i32*%pv,align 4
%pw=call i8*@sml_alloc(i32 inreg 28)#0
%px=getelementptr inbounds i8,i8*%pw,i64 -4
%py=bitcast i8*%px to i32*
store i32 1342177304,i32*%py,align 4
%pz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pA=bitcast i8*%pw to i8**
store i8*%pz,i8**%pA,align 8
%pB=getelementptr inbounds i8,i8*%pw,i64 8
%pC=bitcast i8*%pB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2337 to void(...)*),void(...)**%pC,align 8
%pD=getelementptr inbounds i8,i8*%pw,i64 16
%pE=bitcast i8*%pD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2337 to void(...)*),void(...)**%pE,align 8
%pF=getelementptr inbounds i8,i8*%pw,i64 24
%pG=bitcast i8*%pF to i32*
store i32 -2147483647,i32*%pG,align 4
%pH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pI=call fastcc i8*%pm(i8*inreg%pH,i8*inreg%pw)
store i8*%pI,i8**%d,align 8
%pJ=call i8*@sml_alloc(i32 inreg 20)#0
%pK=getelementptr inbounds i8,i8*%pJ,i64 -4
%pL=bitcast i8*%pK to i32*
store i32 1342177296,i32*%pL,align 4
store i8*%pJ,i8**%e,align 8
%pM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%pN=bitcast i8*%pJ to i8**
store i8*%pM,i8**%pN,align 8
%pO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pP=getelementptr inbounds i8,i8*%pJ,i64 8
%pQ=bitcast i8*%pP to i8**
store i8*%pO,i8**%pQ,align 8
%pR=getelementptr inbounds i8,i8*%pJ,i64 16
%pS=bitcast i8*%pR to i32*
store i32 3,i32*%pS,align 4
%pT=call i8*@sml_alloc(i32 inreg 28)#0
%pU=getelementptr inbounds i8,i8*%pT,i64 -4
%pV=bitcast i8*%pU to i32*
store i32 1342177304,i32*%pV,align 4
store i8*%pT,i8**%b,align 8
%pW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pX=bitcast i8*%pT to i8**
store i8*%pW,i8**%pX,align 8
%pY=getelementptr inbounds i8,i8*%pT,i64 8
%pZ=bitcast i8*%pY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2338 to void(...)*),void(...)**%pZ,align 8
%p0=getelementptr inbounds i8,i8*%pT,i64 16
%p1=bitcast i8*%p0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2338 to void(...)*),void(...)**%p1,align 8
%p2=getelementptr inbounds i8,i8*%pT,i64 24
%p3=bitcast i8*%p2 to i32*
store i32 -2147483647,i32*%p3,align 4
%p4=call i8*@sml_alloc(i32 inreg 20)#0
%p5=getelementptr inbounds i8,i8*%p4,i64 -4
%p6=bitcast i8*%p5 to i32*
store i32 1342177296,i32*%p6,align 4
store i8*%p4,i8**%d,align 8
%p7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%p8=bitcast i8*%p4 to i8**
store i8*%p7,i8**%p8,align 8
%p9=getelementptr inbounds i8,i8*%p4,i64 8
%qa=bitcast i8*%p9 to i8**
store i8*null,i8**%qa,align 8
%qb=getelementptr inbounds i8,i8*%p4,i64 16
%qc=bitcast i8*%qb to i32*
store i32 3,i32*%qc,align 4
%qd=call i8*@sml_alloc(i32 inreg 20)#0
%qe=getelementptr inbounds i8,i8*%qd,i64 -4
%qf=bitcast i8*%qe to i32*
store i32 1342177296,i32*%qf,align 4
%qg=load i8*,i8**%c,align 8
%qh=bitcast i8*%qd to i8**
store i8*%qg,i8**%qh,align 8
%qi=load i8*,i8**%d,align 8
%qj=getelementptr inbounds i8,i8*%qd,i64 8
%qk=bitcast i8*%qj to i8**
store i8*%qi,i8**%qk,align 8
%ql=getelementptr inbounds i8,i8*%qd,i64 16
%qm=bitcast i8*%ql to i32*
store i32 3,i32*%qm,align 4
%qn=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fD,i64 0,i32 2)to i8*),i8*inreg%qd)
ret i8*%qn
qo:
store i8*null,i8**%b,align 8
%qp=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%qp,i8**%b,align 8
%qq=load i8*,i8**%d,align 8
%qr=getelementptr inbounds i8,i8*%qq,i64 16
%qs=bitcast i8*%qr to i8*(i8*,i8*)**
%qt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qs,align 8
%qu=bitcast i8*%qq to i8**
%qv=load i8*,i8**%qu,align 8
store i8*%qv,i8**%d,align 8
%qw=call i8*@sml_alloc(i32 inreg 12)#0
%qx=getelementptr inbounds i8,i8*%qw,i64 -4
%qy=bitcast i8*%qx to i32*
store i32 1342177288,i32*%qy,align 4
store i8*%qw,i8**%e,align 8
%qz=load i8*,i8**%b,align 8
%qA=bitcast i8*%qw to i8**
store i8*%qz,i8**%qA,align 8
%qB=getelementptr inbounds i8,i8*%qw,i64 8
%qC=bitcast i8*%qB to i32*
store i32 1,i32*%qC,align 4
%qD=call i8*@sml_alloc(i32 inreg 28)#0
%qE=getelementptr inbounds i8,i8*%qD,i64 -4
%qF=bitcast i8*%qE to i32*
store i32 1342177304,i32*%qF,align 4
%qG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%qH=bitcast i8*%qD to i8**
store i8*%qG,i8**%qH,align 8
%qI=getelementptr inbounds i8,i8*%qD,i64 8
%qJ=bitcast i8*%qI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2335 to void(...)*),void(...)**%qJ,align 8
%qK=getelementptr inbounds i8,i8*%qD,i64 16
%qL=bitcast i8*%qK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2335 to void(...)*),void(...)**%qL,align 8
%qM=getelementptr inbounds i8,i8*%qD,i64 24
%qN=bitcast i8*%qM to i32*
store i32 -2147483647,i32*%qN,align 4
%qO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qP=call fastcc i8*%qt(i8*inreg%qO,i8*inreg%qD)
store i8*%qP,i8**%d,align 8
%qQ=call i8*@sml_alloc(i32 inreg 20)#0
%qR=getelementptr inbounds i8,i8*%qQ,i64 -4
%qS=bitcast i8*%qR to i32*
store i32 1342177296,i32*%qS,align 4
store i8*%qQ,i8**%e,align 8
%qT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%qU=bitcast i8*%qQ to i8**
store i8*%qT,i8**%qU,align 8
%qV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qW=getelementptr inbounds i8,i8*%qQ,i64 8
%qX=bitcast i8*%qW to i8**
store i8*%qV,i8**%qX,align 8
%qY=getelementptr inbounds i8,i8*%qQ,i64 16
%qZ=bitcast i8*%qY to i32*
store i32 3,i32*%qZ,align 4
%q0=call i8*@sml_alloc(i32 inreg 28)#0
%q1=getelementptr inbounds i8,i8*%q0,i64 -4
%q2=bitcast i8*%q1 to i32*
store i32 1342177304,i32*%q2,align 4
store i8*%q0,i8**%b,align 8
%q3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%q4=bitcast i8*%q0 to i8**
store i8*%q3,i8**%q4,align 8
%q5=getelementptr inbounds i8,i8*%q0,i64 8
%q6=bitcast i8*%q5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2336 to void(...)*),void(...)**%q6,align 8
%q7=getelementptr inbounds i8,i8*%q0,i64 16
%q8=bitcast i8*%q7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2336 to void(...)*),void(...)**%q8,align 8
%q9=getelementptr inbounds i8,i8*%q0,i64 24
%ra=bitcast i8*%q9 to i32*
store i32 -2147483647,i32*%ra,align 4
%rb=call i8*@sml_alloc(i32 inreg 20)#0
%rc=getelementptr inbounds i8,i8*%rb,i64 -4
%rd=bitcast i8*%rc to i32*
store i32 1342177296,i32*%rd,align 4
store i8*%rb,i8**%d,align 8
%re=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%rf=bitcast i8*%rb to i8**
store i8*%re,i8**%rf,align 8
%rg=getelementptr inbounds i8,i8*%rb,i64 8
%rh=bitcast i8*%rg to i8**
store i8*null,i8**%rh,align 8
%ri=getelementptr inbounds i8,i8*%rb,i64 16
%rj=bitcast i8*%ri to i32*
store i32 3,i32*%rj,align 4
%rk=call i8*@sml_alloc(i32 inreg 20)#0
%rl=getelementptr inbounds i8,i8*%rk,i64 -4
%rm=bitcast i8*%rl to i32*
store i32 1342177296,i32*%rm,align 4
%rn=load i8*,i8**%c,align 8
%ro=bitcast i8*%rk to i8**
store i8*%rn,i8**%ro,align 8
%rp=load i8*,i8**%d,align 8
%rq=getelementptr inbounds i8,i8*%rk,i64 8
%rr=bitcast i8*%rq to i8**
store i8*%rp,i8**%rr,align 8
%rs=getelementptr inbounds i8,i8*%rk,i64 16
%rt=bitcast i8*%rs to i32*
store i32 3,i32*%rt,align 4
%ru=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fA,i64 0,i32 2)to i8*),i8*inreg%rk)
ret i8*%ru
rv:
store i8*null,i8**%b,align 8
%rw=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%rw,i8**%b,align 8
%rx=load i8*,i8**%d,align 8
%ry=getelementptr inbounds i8,i8*%rx,i64 16
%rz=bitcast i8*%ry to i8*(i8*,i8*)**
%rA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rz,align 8
%rB=bitcast i8*%rx to i8**
%rC=load i8*,i8**%rB,align 8
store i8*%rC,i8**%d,align 8
%rD=call i8*@sml_alloc(i32 inreg 12)#0
%rE=getelementptr inbounds i8,i8*%rD,i64 -4
%rF=bitcast i8*%rE to i32*
store i32 1342177288,i32*%rF,align 4
store i8*%rD,i8**%e,align 8
%rG=load i8*,i8**%b,align 8
%rH=bitcast i8*%rD to i8**
store i8*%rG,i8**%rH,align 8
%rI=getelementptr inbounds i8,i8*%rD,i64 8
%rJ=bitcast i8*%rI to i32*
store i32 1,i32*%rJ,align 4
%rK=call i8*@sml_alloc(i32 inreg 28)#0
%rL=getelementptr inbounds i8,i8*%rK,i64 -4
%rM=bitcast i8*%rL to i32*
store i32 1342177304,i32*%rM,align 4
%rN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rO=bitcast i8*%rK to i8**
store i8*%rN,i8**%rO,align 8
%rP=getelementptr inbounds i8,i8*%rK,i64 8
%rQ=bitcast i8*%rP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2333 to void(...)*),void(...)**%rQ,align 8
%rR=getelementptr inbounds i8,i8*%rK,i64 16
%rS=bitcast i8*%rR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2333 to void(...)*),void(...)**%rS,align 8
%rT=getelementptr inbounds i8,i8*%rK,i64 24
%rU=bitcast i8*%rT to i32*
store i32 -2147483647,i32*%rU,align 4
%rV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%rW=call fastcc i8*%rA(i8*inreg%rV,i8*inreg%rK)
store i8*%rW,i8**%d,align 8
%rX=call i8*@sml_alloc(i32 inreg 20)#0
%rY=getelementptr inbounds i8,i8*%rX,i64 -4
%rZ=bitcast i8*%rY to i32*
store i32 1342177296,i32*%rZ,align 4
store i8*%rX,i8**%e,align 8
%r0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%r1=bitcast i8*%rX to i8**
store i8*%r0,i8**%r1,align 8
%r2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r3=getelementptr inbounds i8,i8*%rX,i64 8
%r4=bitcast i8*%r3 to i8**
store i8*%r2,i8**%r4,align 8
%r5=getelementptr inbounds i8,i8*%rX,i64 16
%r6=bitcast i8*%r5 to i32*
store i32 3,i32*%r6,align 4
%r7=call i8*@sml_alloc(i32 inreg 28)#0
%r8=getelementptr inbounds i8,i8*%r7,i64 -4
%r9=bitcast i8*%r8 to i32*
store i32 1342177304,i32*%r9,align 4
store i8*%r7,i8**%b,align 8
%sa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sb=bitcast i8*%r7 to i8**
store i8*%sa,i8**%sb,align 8
%sc=getelementptr inbounds i8,i8*%r7,i64 8
%sd=bitcast i8*%sc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2334 to void(...)*),void(...)**%sd,align 8
%se=getelementptr inbounds i8,i8*%r7,i64 16
%sf=bitcast i8*%se to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2334 to void(...)*),void(...)**%sf,align 8
%sg=getelementptr inbounds i8,i8*%r7,i64 24
%sh=bitcast i8*%sg to i32*
store i32 -2147483647,i32*%sh,align 4
%si=call i8*@sml_alloc(i32 inreg 20)#0
%sj=getelementptr inbounds i8,i8*%si,i64 -4
%sk=bitcast i8*%sj to i32*
store i32 1342177296,i32*%sk,align 4
store i8*%si,i8**%d,align 8
%sl=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%sm=bitcast i8*%si to i8**
store i8*%sl,i8**%sm,align 8
%sn=getelementptr inbounds i8,i8*%si,i64 8
%so=bitcast i8*%sn to i8**
store i8*null,i8**%so,align 8
%sp=getelementptr inbounds i8,i8*%si,i64 16
%sq=bitcast i8*%sp to i32*
store i32 3,i32*%sq,align 4
%sr=call i8*@sml_alloc(i32 inreg 20)#0
%ss=getelementptr inbounds i8,i8*%sr,i64 -4
%st=bitcast i8*%ss to i32*
store i32 1342177296,i32*%st,align 4
%su=load i8*,i8**%c,align 8
%sv=bitcast i8*%sr to i8**
store i8*%su,i8**%sv,align 8
%sw=load i8*,i8**%d,align 8
%sx=getelementptr inbounds i8,i8*%sr,i64 8
%sy=bitcast i8*%sx to i8**
store i8*%sw,i8**%sy,align 8
%sz=getelementptr inbounds i8,i8*%sr,i64 16
%sA=bitcast i8*%sz to i32*
store i32 3,i32*%sA,align 4
%sB=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fx,i64 0,i32 2)to i8*),i8*inreg%sr)
ret i8*%sB
sC:
store i8*null,i8**%b,align 8
%sD=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%sD,i8**%b,align 8
%sE=load i8*,i8**%d,align 8
%sF=getelementptr inbounds i8,i8*%sE,i64 16
%sG=bitcast i8*%sF to i8*(i8*,i8*)**
%sH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%sG,align 8
%sI=bitcast i8*%sE to i8**
%sJ=load i8*,i8**%sI,align 8
store i8*%sJ,i8**%d,align 8
%sK=call i8*@sml_alloc(i32 inreg 12)#0
%sL=getelementptr inbounds i8,i8*%sK,i64 -4
%sM=bitcast i8*%sL to i32*
store i32 1342177288,i32*%sM,align 4
store i8*%sK,i8**%e,align 8
%sN=load i8*,i8**%b,align 8
%sO=bitcast i8*%sK to i8**
store i8*%sN,i8**%sO,align 8
%sP=getelementptr inbounds i8,i8*%sK,i64 8
%sQ=bitcast i8*%sP to i32*
store i32 1,i32*%sQ,align 4
%sR=call i8*@sml_alloc(i32 inreg 28)#0
%sS=getelementptr inbounds i8,i8*%sR,i64 -4
%sT=bitcast i8*%sS to i32*
store i32 1342177304,i32*%sT,align 4
%sU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sV=bitcast i8*%sR to i8**
store i8*%sU,i8**%sV,align 8
%sW=getelementptr inbounds i8,i8*%sR,i64 8
%sX=bitcast i8*%sW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2331 to void(...)*),void(...)**%sX,align 8
%sY=getelementptr inbounds i8,i8*%sR,i64 16
%sZ=bitcast i8*%sY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2331 to void(...)*),void(...)**%sZ,align 8
%s0=getelementptr inbounds i8,i8*%sR,i64 24
%s1=bitcast i8*%s0 to i32*
store i32 -2147483647,i32*%s1,align 4
%s2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%s3=call fastcc i8*%sH(i8*inreg%s2,i8*inreg%sR)
store i8*%s3,i8**%d,align 8
%s4=call i8*@sml_alloc(i32 inreg 20)#0
%s5=getelementptr inbounds i8,i8*%s4,i64 -4
%s6=bitcast i8*%s5 to i32*
store i32 1342177296,i32*%s6,align 4
store i8*%s4,i8**%e,align 8
%s7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%s8=bitcast i8*%s4 to i8**
store i8*%s7,i8**%s8,align 8
%s9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ta=getelementptr inbounds i8,i8*%s4,i64 8
%tb=bitcast i8*%ta to i8**
store i8*%s9,i8**%tb,align 8
%tc=getelementptr inbounds i8,i8*%s4,i64 16
%td=bitcast i8*%tc to i32*
store i32 3,i32*%td,align 4
%te=call i8*@sml_alloc(i32 inreg 28)#0
%tf=getelementptr inbounds i8,i8*%te,i64 -4
%tg=bitcast i8*%tf to i32*
store i32 1342177304,i32*%tg,align 4
store i8*%te,i8**%b,align 8
%th=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ti=bitcast i8*%te to i8**
store i8*%th,i8**%ti,align 8
%tj=getelementptr inbounds i8,i8*%te,i64 8
%tk=bitcast i8*%tj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2332 to void(...)*),void(...)**%tk,align 8
%tl=getelementptr inbounds i8,i8*%te,i64 16
%tm=bitcast i8*%tl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2332 to void(...)*),void(...)**%tm,align 8
%tn=getelementptr inbounds i8,i8*%te,i64 24
%to=bitcast i8*%tn to i32*
store i32 -2147483647,i32*%to,align 4
%tp=call i8*@sml_alloc(i32 inreg 20)#0
%tq=getelementptr inbounds i8,i8*%tp,i64 -4
%tr=bitcast i8*%tq to i32*
store i32 1342177296,i32*%tr,align 4
store i8*%tp,i8**%d,align 8
%ts=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%tt=bitcast i8*%tp to i8**
store i8*%ts,i8**%tt,align 8
%tu=getelementptr inbounds i8,i8*%tp,i64 8
%tv=bitcast i8*%tu to i8**
store i8*null,i8**%tv,align 8
%tw=getelementptr inbounds i8,i8*%tp,i64 16
%tx=bitcast i8*%tw to i32*
store i32 3,i32*%tx,align 4
%ty=call i8*@sml_alloc(i32 inreg 20)#0
%tz=getelementptr inbounds i8,i8*%ty,i64 -4
%tA=bitcast i8*%tz to i32*
store i32 1342177296,i32*%tA,align 4
%tB=load i8*,i8**%c,align 8
%tC=bitcast i8*%ty to i8**
store i8*%tB,i8**%tC,align 8
%tD=load i8*,i8**%d,align 8
%tE=getelementptr inbounds i8,i8*%ty,i64 8
%tF=bitcast i8*%tE to i8**
store i8*%tD,i8**%tF,align 8
%tG=getelementptr inbounds i8,i8*%ty,i64 16
%tH=bitcast i8*%tG to i32*
store i32 3,i32*%tH,align 4
%tI=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fu,i64 0,i32 2)to i8*),i8*inreg%ty)
ret i8*%tI
tJ:
store i8*null,i8**%b,align 8
%tK=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%tK,i8**%b,align 8
%tL=load i8*,i8**%d,align 8
%tM=getelementptr inbounds i8,i8*%tL,i64 16
%tN=bitcast i8*%tM to i8*(i8*,i8*)**
%tO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tN,align 8
%tP=bitcast i8*%tL to i8**
%tQ=load i8*,i8**%tP,align 8
store i8*%tQ,i8**%d,align 8
%tR=call i8*@sml_alloc(i32 inreg 12)#0
%tS=getelementptr inbounds i8,i8*%tR,i64 -4
%tT=bitcast i8*%tS to i32*
store i32 1342177288,i32*%tT,align 4
store i8*%tR,i8**%e,align 8
%tU=load i8*,i8**%b,align 8
%tV=bitcast i8*%tR to i8**
store i8*%tU,i8**%tV,align 8
%tW=getelementptr inbounds i8,i8*%tR,i64 8
%tX=bitcast i8*%tW to i32*
store i32 1,i32*%tX,align 4
%tY=call i8*@sml_alloc(i32 inreg 28)#0
%tZ=getelementptr inbounds i8,i8*%tY,i64 -4
%t0=bitcast i8*%tZ to i32*
store i32 1342177304,i32*%t0,align 4
%t1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%t2=bitcast i8*%tY to i8**
store i8*%t1,i8**%t2,align 8
%t3=getelementptr inbounds i8,i8*%tY,i64 8
%t4=bitcast i8*%t3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2329 to void(...)*),void(...)**%t4,align 8
%t5=getelementptr inbounds i8,i8*%tY,i64 16
%t6=bitcast i8*%t5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2329 to void(...)*),void(...)**%t6,align 8
%t7=getelementptr inbounds i8,i8*%tY,i64 24
%t8=bitcast i8*%t7 to i32*
store i32 -2147483647,i32*%t8,align 4
%t9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ua=call fastcc i8*%tO(i8*inreg%t9,i8*inreg%tY)
store i8*%ua,i8**%d,align 8
%ub=call i8*@sml_alloc(i32 inreg 20)#0
%uc=getelementptr inbounds i8,i8*%ub,i64 -4
%ud=bitcast i8*%uc to i32*
store i32 1342177296,i32*%ud,align 4
store i8*%ub,i8**%e,align 8
%ue=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%uf=bitcast i8*%ub to i8**
store i8*%ue,i8**%uf,align 8
%ug=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uh=getelementptr inbounds i8,i8*%ub,i64 8
%ui=bitcast i8*%uh to i8**
store i8*%ug,i8**%ui,align 8
%uj=getelementptr inbounds i8,i8*%ub,i64 16
%uk=bitcast i8*%uj to i32*
store i32 3,i32*%uk,align 4
%ul=call i8*@sml_alloc(i32 inreg 28)#0
%um=getelementptr inbounds i8,i8*%ul,i64 -4
%un=bitcast i8*%um to i32*
store i32 1342177304,i32*%un,align 4
store i8*%ul,i8**%b,align 8
%uo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%up=bitcast i8*%ul to i8**
store i8*%uo,i8**%up,align 8
%uq=getelementptr inbounds i8,i8*%ul,i64 8
%ur=bitcast i8*%uq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2330 to void(...)*),void(...)**%ur,align 8
%us=getelementptr inbounds i8,i8*%ul,i64 16
%ut=bitcast i8*%us to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2330 to void(...)*),void(...)**%ut,align 8
%uu=getelementptr inbounds i8,i8*%ul,i64 24
%uv=bitcast i8*%uu to i32*
store i32 -2147483647,i32*%uv,align 4
%uw=call i8*@sml_alloc(i32 inreg 20)#0
%ux=getelementptr inbounds i8,i8*%uw,i64 -4
%uy=bitcast i8*%ux to i32*
store i32 1342177296,i32*%uy,align 4
store i8*%uw,i8**%d,align 8
%uz=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%uA=bitcast i8*%uw to i8**
store i8*%uz,i8**%uA,align 8
%uB=getelementptr inbounds i8,i8*%uw,i64 8
%uC=bitcast i8*%uB to i8**
store i8*null,i8**%uC,align 8
%uD=getelementptr inbounds i8,i8*%uw,i64 16
%uE=bitcast i8*%uD to i32*
store i32 3,i32*%uE,align 4
%uF=call i8*@sml_alloc(i32 inreg 20)#0
%uG=getelementptr inbounds i8,i8*%uF,i64 -4
%uH=bitcast i8*%uG to i32*
store i32 1342177296,i32*%uH,align 4
%uI=load i8*,i8**%c,align 8
%uJ=bitcast i8*%uF to i8**
store i8*%uI,i8**%uJ,align 8
%uK=load i8*,i8**%d,align 8
%uL=getelementptr inbounds i8,i8*%uF,i64 8
%uM=bitcast i8*%uL to i8**
store i8*%uK,i8**%uM,align 8
%uN=getelementptr inbounds i8,i8*%uF,i64 16
%uO=bitcast i8*%uN to i32*
store i32 3,i32*%uO,align 4
%uP=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fr,i64 0,i32 2)to i8*),i8*inreg%uF)
ret i8*%uP
uQ:
store i8*null,i8**%b,align 8
%uR=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%uR,i8**%b,align 8
%uS=load i8*,i8**%d,align 8
%uT=getelementptr inbounds i8,i8*%uS,i64 16
%uU=bitcast i8*%uT to i8*(i8*,i8*)**
%uV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uU,align 8
%uW=bitcast i8*%uS to i8**
%uX=load i8*,i8**%uW,align 8
store i8*%uX,i8**%d,align 8
%uY=call i8*@sml_alloc(i32 inreg 12)#0
%uZ=getelementptr inbounds i8,i8*%uY,i64 -4
%u0=bitcast i8*%uZ to i32*
store i32 1342177288,i32*%u0,align 4
store i8*%uY,i8**%e,align 8
%u1=load i8*,i8**%b,align 8
%u2=bitcast i8*%uY to i8**
store i8*%u1,i8**%u2,align 8
%u3=getelementptr inbounds i8,i8*%uY,i64 8
%u4=bitcast i8*%u3 to i32*
store i32 1,i32*%u4,align 4
%u5=call i8*@sml_alloc(i32 inreg 28)#0
%u6=getelementptr inbounds i8,i8*%u5,i64 -4
%u7=bitcast i8*%u6 to i32*
store i32 1342177304,i32*%u7,align 4
%u8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u9=bitcast i8*%u5 to i8**
store i8*%u8,i8**%u9,align 8
%va=getelementptr inbounds i8,i8*%u5,i64 8
%vb=bitcast i8*%va to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2327 to void(...)*),void(...)**%vb,align 8
%vc=getelementptr inbounds i8,i8*%u5,i64 16
%vd=bitcast i8*%vc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2327 to void(...)*),void(...)**%vd,align 8
%ve=getelementptr inbounds i8,i8*%u5,i64 24
%vf=bitcast i8*%ve to i32*
store i32 -2147483647,i32*%vf,align 4
%vg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vh=call fastcc i8*%uV(i8*inreg%vg,i8*inreg%u5)
store i8*%vh,i8**%d,align 8
%vi=call i8*@sml_alloc(i32 inreg 20)#0
%vj=getelementptr inbounds i8,i8*%vi,i64 -4
%vk=bitcast i8*%vj to i32*
store i32 1342177296,i32*%vk,align 4
store i8*%vi,i8**%e,align 8
%vl=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%vm=bitcast i8*%vi to i8**
store i8*%vl,i8**%vm,align 8
%vn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vo=getelementptr inbounds i8,i8*%vi,i64 8
%vp=bitcast i8*%vo to i8**
store i8*%vn,i8**%vp,align 8
%vq=getelementptr inbounds i8,i8*%vi,i64 16
%vr=bitcast i8*%vq to i32*
store i32 3,i32*%vr,align 4
%vs=call i8*@sml_alloc(i32 inreg 28)#0
%vt=getelementptr inbounds i8,i8*%vs,i64 -4
%vu=bitcast i8*%vt to i32*
store i32 1342177304,i32*%vu,align 4
store i8*%vs,i8**%b,align 8
%vv=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%vw=bitcast i8*%vs to i8**
store i8*%vv,i8**%vw,align 8
%vx=getelementptr inbounds i8,i8*%vs,i64 8
%vy=bitcast i8*%vx to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2328 to void(...)*),void(...)**%vy,align 8
%vz=getelementptr inbounds i8,i8*%vs,i64 16
%vA=bitcast i8*%vz to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2328 to void(...)*),void(...)**%vA,align 8
%vB=getelementptr inbounds i8,i8*%vs,i64 24
%vC=bitcast i8*%vB to i32*
store i32 -2147483647,i32*%vC,align 4
%vD=call i8*@sml_alloc(i32 inreg 20)#0
%vE=getelementptr inbounds i8,i8*%vD,i64 -4
%vF=bitcast i8*%vE to i32*
store i32 1342177296,i32*%vF,align 4
%vG=load i8*,i8**%c,align 8
%vH=bitcast i8*%vD to i8**
store i8*%vG,i8**%vH,align 8
%vI=load i8*,i8**%b,align 8
br label%Hs
vJ:
store i8*null,i8**%b,align 8
%vK=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%vK,i8**%b,align 8
%vL=load i8*,i8**%d,align 8
%vM=getelementptr inbounds i8,i8*%vL,i64 16
%vN=bitcast i8*%vM to i8*(i8*,i8*)**
%vO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vN,align 8
%vP=bitcast i8*%vL to i8**
%vQ=load i8*,i8**%vP,align 8
store i8*%vQ,i8**%d,align 8
%vR=call i8*@sml_alloc(i32 inreg 12)#0
%vS=getelementptr inbounds i8,i8*%vR,i64 -4
%vT=bitcast i8*%vS to i32*
store i32 1342177288,i32*%vT,align 4
store i8*%vR,i8**%e,align 8
%vU=load i8*,i8**%b,align 8
%vV=bitcast i8*%vR to i8**
store i8*%vU,i8**%vV,align 8
%vW=getelementptr inbounds i8,i8*%vR,i64 8
%vX=bitcast i8*%vW to i32*
store i32 1,i32*%vX,align 4
%vY=call i8*@sml_alloc(i32 inreg 28)#0
%vZ=getelementptr inbounds i8,i8*%vY,i64 -4
%v0=bitcast i8*%vZ to i32*
store i32 1342177304,i32*%v0,align 4
%v1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v2=bitcast i8*%vY to i8**
store i8*%v1,i8**%v2,align 8
%v3=getelementptr inbounds i8,i8*%vY,i64 8
%v4=bitcast i8*%v3 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2325 to void(...)*),void(...)**%v4,align 8
%v5=getelementptr inbounds i8,i8*%vY,i64 16
%v6=bitcast i8*%v5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2325 to void(...)*),void(...)**%v6,align 8
%v7=getelementptr inbounds i8,i8*%vY,i64 24
%v8=bitcast i8*%v7 to i32*
store i32 -2147483647,i32*%v8,align 4
%v9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wa=call fastcc i8*%vO(i8*inreg%v9,i8*inreg%vY)
store i8*%wa,i8**%d,align 8
%wb=call i8*@sml_alloc(i32 inreg 20)#0
%wc=getelementptr inbounds i8,i8*%wb,i64 -4
%wd=bitcast i8*%wc to i32*
store i32 1342177296,i32*%wd,align 4
store i8*%wb,i8**%e,align 8
%we=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%wf=bitcast i8*%wb to i8**
store i8*%we,i8**%wf,align 8
%wg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wh=getelementptr inbounds i8,i8*%wb,i64 8
%wi=bitcast i8*%wh to i8**
store i8*%wg,i8**%wi,align 8
%wj=getelementptr inbounds i8,i8*%wb,i64 16
%wk=bitcast i8*%wj to i32*
store i32 3,i32*%wk,align 4
%wl=call i8*@sml_alloc(i32 inreg 28)#0
%wm=getelementptr inbounds i8,i8*%wl,i64 -4
%wn=bitcast i8*%wm to i32*
store i32 1342177304,i32*%wn,align 4
store i8*%wl,i8**%b,align 8
%wo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wp=bitcast i8*%wl to i8**
store i8*%wo,i8**%wp,align 8
%wq=getelementptr inbounds i8,i8*%wl,i64 8
%wr=bitcast i8*%wq to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2326 to void(...)*),void(...)**%wr,align 8
%ws=getelementptr inbounds i8,i8*%wl,i64 16
%wt=bitcast i8*%ws to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2326 to void(...)*),void(...)**%wt,align 8
%wu=getelementptr inbounds i8,i8*%wl,i64 24
%wv=bitcast i8*%wu to i32*
store i32 -2147483647,i32*%wv,align 4
%ww=call i8*@sml_alloc(i32 inreg 20)#0
%wx=getelementptr inbounds i8,i8*%ww,i64 -4
%wy=bitcast i8*%wx to i32*
store i32 1342177296,i32*%wy,align 4
%wz=load i8*,i8**%c,align 8
%wA=bitcast i8*%ww to i8**
store i8*%wz,i8**%wA,align 8
%wB=load i8*,i8**%b,align 8
br label%Hs
wC:
store i8*null,i8**%b,align 8
%wD=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%wD,i8**%b,align 8
%wE=load i8*,i8**%d,align 8
%wF=getelementptr inbounds i8,i8*%wE,i64 16
%wG=bitcast i8*%wF to i8*(i8*,i8*)**
%wH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%wG,align 8
%wI=bitcast i8*%wE to i8**
%wJ=load i8*,i8**%wI,align 8
store i8*%wJ,i8**%d,align 8
%wK=call i8*@sml_alloc(i32 inreg 12)#0
%wL=getelementptr inbounds i8,i8*%wK,i64 -4
%wM=bitcast i8*%wL to i32*
store i32 1342177288,i32*%wM,align 4
store i8*%wK,i8**%e,align 8
%wN=load i8*,i8**%b,align 8
%wO=bitcast i8*%wK to i8**
store i8*%wN,i8**%wO,align 8
%wP=getelementptr inbounds i8,i8*%wK,i64 8
%wQ=bitcast i8*%wP to i32*
store i32 1,i32*%wQ,align 4
%wR=call i8*@sml_alloc(i32 inreg 28)#0
%wS=getelementptr inbounds i8,i8*%wR,i64 -4
%wT=bitcast i8*%wS to i32*
store i32 1342177304,i32*%wT,align 4
%wU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wV=bitcast i8*%wR to i8**
store i8*%wU,i8**%wV,align 8
%wW=getelementptr inbounds i8,i8*%wR,i64 8
%wX=bitcast i8*%wW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2323 to void(...)*),void(...)**%wX,align 8
%wY=getelementptr inbounds i8,i8*%wR,i64 16
%wZ=bitcast i8*%wY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2323 to void(...)*),void(...)**%wZ,align 8
%w0=getelementptr inbounds i8,i8*%wR,i64 24
%w1=bitcast i8*%w0 to i32*
store i32 -2147483647,i32*%w1,align 4
%w2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w3=call fastcc i8*%wH(i8*inreg%w2,i8*inreg%wR)
store i8*%w3,i8**%d,align 8
%w4=call i8*@sml_alloc(i32 inreg 20)#0
%w5=getelementptr inbounds i8,i8*%w4,i64 -4
%w6=bitcast i8*%w5 to i32*
store i32 1342177296,i32*%w6,align 4
store i8*%w4,i8**%e,align 8
%w7=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%w8=bitcast i8*%w4 to i8**
store i8*%w7,i8**%w8,align 8
%w9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xa=getelementptr inbounds i8,i8*%w4,i64 8
%xb=bitcast i8*%xa to i8**
store i8*%w9,i8**%xb,align 8
%xc=getelementptr inbounds i8,i8*%w4,i64 16
%xd=bitcast i8*%xc to i32*
store i32 3,i32*%xd,align 4
%xe=call i8*@sml_alloc(i32 inreg 28)#0
%xf=getelementptr inbounds i8,i8*%xe,i64 -4
%xg=bitcast i8*%xf to i32*
store i32 1342177304,i32*%xg,align 4
store i8*%xe,i8**%b,align 8
%xh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%xi=bitcast i8*%xe to i8**
store i8*%xh,i8**%xi,align 8
%xj=getelementptr inbounds i8,i8*%xe,i64 8
%xk=bitcast i8*%xj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2324 to void(...)*),void(...)**%xk,align 8
%xl=getelementptr inbounds i8,i8*%xe,i64 16
%xm=bitcast i8*%xl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2324 to void(...)*),void(...)**%xm,align 8
%xn=getelementptr inbounds i8,i8*%xe,i64 24
%xo=bitcast i8*%xn to i32*
store i32 -2147483647,i32*%xo,align 4
%xp=call i8*@sml_alloc(i32 inreg 20)#0
%xq=getelementptr inbounds i8,i8*%xp,i64 -4
%xr=bitcast i8*%xq to i32*
store i32 1342177296,i32*%xr,align 4
%xs=load i8*,i8**%c,align 8
%xt=bitcast i8*%xp to i8**
store i8*%xs,i8**%xt,align 8
%xu=load i8*,i8**%b,align 8
br label%Hs
xv:
store i8*null,i8**%b,align 8
%xw=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%xw,i8**%b,align 8
%xx=load i8*,i8**%d,align 8
%xy=getelementptr inbounds i8,i8*%xx,i64 16
%xz=bitcast i8*%xy to i8*(i8*,i8*)**
%xA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%xz,align 8
%xB=bitcast i8*%xx to i8**
%xC=load i8*,i8**%xB,align 8
store i8*%xC,i8**%d,align 8
%xD=call i8*@sml_alloc(i32 inreg 12)#0
%xE=getelementptr inbounds i8,i8*%xD,i64 -4
%xF=bitcast i8*%xE to i32*
store i32 1342177288,i32*%xF,align 4
store i8*%xD,i8**%e,align 8
%xG=load i8*,i8**%b,align 8
%xH=bitcast i8*%xD to i8**
store i8*%xG,i8**%xH,align 8
%xI=getelementptr inbounds i8,i8*%xD,i64 8
%xJ=bitcast i8*%xI to i32*
store i32 1,i32*%xJ,align 4
%xK=call i8*@sml_alloc(i32 inreg 28)#0
%xL=getelementptr inbounds i8,i8*%xK,i64 -4
%xM=bitcast i8*%xL to i32*
store i32 1342177304,i32*%xM,align 4
%xN=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%xO=bitcast i8*%xK to i8**
store i8*%xN,i8**%xO,align 8
%xP=getelementptr inbounds i8,i8*%xK,i64 8
%xQ=bitcast i8*%xP to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2321 to void(...)*),void(...)**%xQ,align 8
%xR=getelementptr inbounds i8,i8*%xK,i64 16
%xS=bitcast i8*%xR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2321 to void(...)*),void(...)**%xS,align 8
%xT=getelementptr inbounds i8,i8*%xK,i64 24
%xU=bitcast i8*%xT to i32*
store i32 -2147483647,i32*%xU,align 4
%xV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xW=call fastcc i8*%xA(i8*inreg%xV,i8*inreg%xK)
store i8*%xW,i8**%d,align 8
%xX=call i8*@sml_alloc(i32 inreg 20)#0
%xY=getelementptr inbounds i8,i8*%xX,i64 -4
%xZ=bitcast i8*%xY to i32*
store i32 1342177296,i32*%xZ,align 4
store i8*%xX,i8**%e,align 8
%x0=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%x1=bitcast i8*%xX to i8**
store i8*%x0,i8**%x1,align 8
%x2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%x3=getelementptr inbounds i8,i8*%xX,i64 8
%x4=bitcast i8*%x3 to i8**
store i8*%x2,i8**%x4,align 8
%x5=getelementptr inbounds i8,i8*%xX,i64 16
%x6=bitcast i8*%x5 to i32*
store i32 3,i32*%x6,align 4
%x7=call i8*@sml_alloc(i32 inreg 28)#0
%x8=getelementptr inbounds i8,i8*%x7,i64 -4
%x9=bitcast i8*%x8 to i32*
store i32 1342177304,i32*%x9,align 4
store i8*%x7,i8**%b,align 8
%ya=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%yb=bitcast i8*%x7 to i8**
store i8*%ya,i8**%yb,align 8
%yc=getelementptr inbounds i8,i8*%x7,i64 8
%yd=bitcast i8*%yc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2322 to void(...)*),void(...)**%yd,align 8
%ye=getelementptr inbounds i8,i8*%x7,i64 16
%yf=bitcast i8*%ye to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2322 to void(...)*),void(...)**%yf,align 8
%yg=getelementptr inbounds i8,i8*%x7,i64 24
%yh=bitcast i8*%yg to i32*
store i32 -2147483647,i32*%yh,align 4
%yi=call i8*@sml_alloc(i32 inreg 20)#0
%yj=getelementptr inbounds i8,i8*%yi,i64 -4
%yk=bitcast i8*%yj to i32*
store i32 1342177296,i32*%yk,align 4
%yl=load i8*,i8**%c,align 8
%ym=bitcast i8*%yi to i8**
store i8*%yl,i8**%ym,align 8
%yn=load i8*,i8**%b,align 8
br label%Hs
yo:
store i8*null,i8**%b,align 8
%yp=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%yp,i8**%b,align 8
%yq=load i8*,i8**%d,align 8
%yr=getelementptr inbounds i8,i8*%yq,i64 16
%ys=bitcast i8*%yr to i8*(i8*,i8*)**
%yt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ys,align 8
%yu=bitcast i8*%yq to i8**
%yv=load i8*,i8**%yu,align 8
store i8*%yv,i8**%d,align 8
%yw=call i8*@sml_alloc(i32 inreg 12)#0
%yx=getelementptr inbounds i8,i8*%yw,i64 -4
%yy=bitcast i8*%yx to i32*
store i32 1342177288,i32*%yy,align 4
store i8*%yw,i8**%e,align 8
%yz=load i8*,i8**%b,align 8
%yA=bitcast i8*%yw to i8**
store i8*%yz,i8**%yA,align 8
%yB=getelementptr inbounds i8,i8*%yw,i64 8
%yC=bitcast i8*%yB to i32*
store i32 1,i32*%yC,align 4
%yD=call i8*@sml_alloc(i32 inreg 28)#0
%yE=getelementptr inbounds i8,i8*%yD,i64 -4
%yF=bitcast i8*%yE to i32*
store i32 1342177304,i32*%yF,align 4
%yG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%yH=bitcast i8*%yD to i8**
store i8*%yG,i8**%yH,align 8
%yI=getelementptr inbounds i8,i8*%yD,i64 8
%yJ=bitcast i8*%yI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2319 to void(...)*),void(...)**%yJ,align 8
%yK=getelementptr inbounds i8,i8*%yD,i64 16
%yL=bitcast i8*%yK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2319 to void(...)*),void(...)**%yL,align 8
%yM=getelementptr inbounds i8,i8*%yD,i64 24
%yN=bitcast i8*%yM to i32*
store i32 -2147483647,i32*%yN,align 4
%yO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yP=call fastcc i8*%yt(i8*inreg%yO,i8*inreg%yD)
store i8*%yP,i8**%d,align 8
%yQ=call i8*@sml_alloc(i32 inreg 20)#0
%yR=getelementptr inbounds i8,i8*%yQ,i64 -4
%yS=bitcast i8*%yR to i32*
store i32 1342177296,i32*%yS,align 4
store i8*%yQ,i8**%e,align 8
%yT=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%yU=bitcast i8*%yQ to i8**
store i8*%yT,i8**%yU,align 8
%yV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yW=getelementptr inbounds i8,i8*%yQ,i64 8
%yX=bitcast i8*%yW to i8**
store i8*%yV,i8**%yX,align 8
%yY=getelementptr inbounds i8,i8*%yQ,i64 16
%yZ=bitcast i8*%yY to i32*
store i32 3,i32*%yZ,align 4
%y0=call i8*@sml_alloc(i32 inreg 28)#0
%y1=getelementptr inbounds i8,i8*%y0,i64 -4
%y2=bitcast i8*%y1 to i32*
store i32 1342177304,i32*%y2,align 4
store i8*%y0,i8**%b,align 8
%y3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%y4=bitcast i8*%y0 to i8**
store i8*%y3,i8**%y4,align 8
%y5=getelementptr inbounds i8,i8*%y0,i64 8
%y6=bitcast i8*%y5 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2320 to void(...)*),void(...)**%y6,align 8
%y7=getelementptr inbounds i8,i8*%y0,i64 16
%y8=bitcast i8*%y7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2320 to void(...)*),void(...)**%y8,align 8
%y9=getelementptr inbounds i8,i8*%y0,i64 24
%za=bitcast i8*%y9 to i32*
store i32 -2147483647,i32*%za,align 4
%zb=call i8*@sml_alloc(i32 inreg 20)#0
%zc=getelementptr inbounds i8,i8*%zb,i64 -4
%zd=bitcast i8*%zc to i32*
store i32 1342177296,i32*%zd,align 4
%ze=load i8*,i8**%c,align 8
%zf=bitcast i8*%zb to i8**
store i8*%ze,i8**%zf,align 8
%zg=load i8*,i8**%b,align 8
br label%Hs
zh:
store i8*null,i8**%b,align 8
%zi=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%zi,i8**%b,align 8
%zj=load i8*,i8**%d,align 8
%zk=getelementptr inbounds i8,i8*%zj,i64 16
%zl=bitcast i8*%zk to i8*(i8*,i8*)**
%zm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zl,align 8
%zn=bitcast i8*%zj to i8**
%zo=load i8*,i8**%zn,align 8
store i8*%zo,i8**%d,align 8
%zp=call i8*@sml_alloc(i32 inreg 12)#0
%zq=getelementptr inbounds i8,i8*%zp,i64 -4
%zr=bitcast i8*%zq to i32*
store i32 1342177288,i32*%zr,align 4
store i8*%zp,i8**%e,align 8
%zs=load i8*,i8**%b,align 8
%zt=bitcast i8*%zp to i8**
store i8*%zs,i8**%zt,align 8
%zu=getelementptr inbounds i8,i8*%zp,i64 8
%zv=bitcast i8*%zu to i32*
store i32 1,i32*%zv,align 4
%zw=call i8*@sml_alloc(i32 inreg 28)#0
%zx=getelementptr inbounds i8,i8*%zw,i64 -4
%zy=bitcast i8*%zx to i32*
store i32 1342177304,i32*%zy,align 4
%zz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zA=bitcast i8*%zw to i8**
store i8*%zz,i8**%zA,align 8
%zB=getelementptr inbounds i8,i8*%zw,i64 8
%zC=bitcast i8*%zB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2317 to void(...)*),void(...)**%zC,align 8
%zD=getelementptr inbounds i8,i8*%zw,i64 16
%zE=bitcast i8*%zD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2317 to void(...)*),void(...)**%zE,align 8
%zF=getelementptr inbounds i8,i8*%zw,i64 24
%zG=bitcast i8*%zF to i32*
store i32 -2147483647,i32*%zG,align 4
%zH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zI=call fastcc i8*%zm(i8*inreg%zH,i8*inreg%zw)
store i8*%zI,i8**%d,align 8
%zJ=call i8*@sml_alloc(i32 inreg 20)#0
%zK=getelementptr inbounds i8,i8*%zJ,i64 -4
%zL=bitcast i8*%zK to i32*
store i32 1342177296,i32*%zL,align 4
store i8*%zJ,i8**%e,align 8
%zM=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%zN=bitcast i8*%zJ to i8**
store i8*%zM,i8**%zN,align 8
%zO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zP=getelementptr inbounds i8,i8*%zJ,i64 8
%zQ=bitcast i8*%zP to i8**
store i8*%zO,i8**%zQ,align 8
%zR=getelementptr inbounds i8,i8*%zJ,i64 16
%zS=bitcast i8*%zR to i32*
store i32 3,i32*%zS,align 4
%zT=call i8*@sml_alloc(i32 inreg 28)#0
%zU=getelementptr inbounds i8,i8*%zT,i64 -4
%zV=bitcast i8*%zU to i32*
store i32 1342177304,i32*%zV,align 4
store i8*%zT,i8**%b,align 8
%zW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zX=bitcast i8*%zT to i8**
store i8*%zW,i8**%zX,align 8
%zY=getelementptr inbounds i8,i8*%zT,i64 8
%zZ=bitcast i8*%zY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2318 to void(...)*),void(...)**%zZ,align 8
%z0=getelementptr inbounds i8,i8*%zT,i64 16
%z1=bitcast i8*%z0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2318 to void(...)*),void(...)**%z1,align 8
%z2=getelementptr inbounds i8,i8*%zT,i64 24
%z3=bitcast i8*%z2 to i32*
store i32 -2147483647,i32*%z3,align 4
%z4=call i8*@sml_alloc(i32 inreg 20)#0
%z5=getelementptr inbounds i8,i8*%z4,i64 -4
%z6=bitcast i8*%z5 to i32*
store i32 1342177296,i32*%z6,align 4
%z7=load i8*,i8**%c,align 8
%z8=bitcast i8*%z4 to i8**
store i8*%z7,i8**%z8,align 8
%z9=load i8*,i8**%b,align 8
br label%Hs
Aa:
store i8*null,i8**%b,align 8
%Ab=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%Ab,i8**%b,align 8
%Ac=load i8*,i8**%d,align 8
%Ad=getelementptr inbounds i8,i8*%Ac,i64 16
%Ae=bitcast i8*%Ad to i8*(i8*,i8*)**
%Af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Ae,align 8
%Ag=bitcast i8*%Ac to i8**
%Ah=load i8*,i8**%Ag,align 8
store i8*%Ah,i8**%d,align 8
%Ai=call i8*@sml_alloc(i32 inreg 12)#0
%Aj=getelementptr inbounds i8,i8*%Ai,i64 -4
%Ak=bitcast i8*%Aj to i32*
store i32 1342177288,i32*%Ak,align 4
store i8*%Ai,i8**%e,align 8
%Al=load i8*,i8**%b,align 8
%Am=bitcast i8*%Ai to i8**
store i8*%Al,i8**%Am,align 8
%An=getelementptr inbounds i8,i8*%Ai,i64 8
%Ao=bitcast i8*%An to i32*
store i32 1,i32*%Ao,align 4
%Ap=call i8*@sml_alloc(i32 inreg 28)#0
%Aq=getelementptr inbounds i8,i8*%Ap,i64 -4
%Ar=bitcast i8*%Aq to i32*
store i32 1342177304,i32*%Ar,align 4
%As=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%At=bitcast i8*%Ap to i8**
store i8*%As,i8**%At,align 8
%Au=getelementptr inbounds i8,i8*%Ap,i64 8
%Av=bitcast i8*%Au to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2315 to void(...)*),void(...)**%Av,align 8
%Aw=getelementptr inbounds i8,i8*%Ap,i64 16
%Ax=bitcast i8*%Aw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2315 to void(...)*),void(...)**%Ax,align 8
%Ay=getelementptr inbounds i8,i8*%Ap,i64 24
%Az=bitcast i8*%Ay to i32*
store i32 -2147483647,i32*%Az,align 4
%AA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AB=call fastcc i8*%Af(i8*inreg%AA,i8*inreg%Ap)
store i8*%AB,i8**%d,align 8
%AC=call i8*@sml_alloc(i32 inreg 20)#0
%AD=getelementptr inbounds i8,i8*%AC,i64 -4
%AE=bitcast i8*%AD to i32*
store i32 1342177296,i32*%AE,align 4
store i8*%AC,i8**%e,align 8
%AF=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%AG=bitcast i8*%AC to i8**
store i8*%AF,i8**%AG,align 8
%AH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AI=getelementptr inbounds i8,i8*%AC,i64 8
%AJ=bitcast i8*%AI to i8**
store i8*%AH,i8**%AJ,align 8
%AK=getelementptr inbounds i8,i8*%AC,i64 16
%AL=bitcast i8*%AK to i32*
store i32 3,i32*%AL,align 4
%AM=call i8*@sml_alloc(i32 inreg 28)#0
%AN=getelementptr inbounds i8,i8*%AM,i64 -4
%AO=bitcast i8*%AN to i32*
store i32 1342177304,i32*%AO,align 4
store i8*%AM,i8**%b,align 8
%AP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AQ=bitcast i8*%AM to i8**
store i8*%AP,i8**%AQ,align 8
%AR=getelementptr inbounds i8,i8*%AM,i64 8
%AS=bitcast i8*%AR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2316 to void(...)*),void(...)**%AS,align 8
%AT=getelementptr inbounds i8,i8*%AM,i64 16
%AU=bitcast i8*%AT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2316 to void(...)*),void(...)**%AU,align 8
%AV=getelementptr inbounds i8,i8*%AM,i64 24
%AW=bitcast i8*%AV to i32*
store i32 -2147483647,i32*%AW,align 4
%AX=call i8*@sml_alloc(i32 inreg 20)#0
%AY=getelementptr inbounds i8,i8*%AX,i64 -4
%AZ=bitcast i8*%AY to i32*
store i32 1342177296,i32*%AZ,align 4
%A0=load i8*,i8**%c,align 8
%A1=bitcast i8*%AX to i8**
store i8*%A0,i8**%A1,align 8
%A2=load i8*,i8**%b,align 8
br label%Hs
A3:
store i8*null,i8**%b,align 8
%A4=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%A4,i8**%b,align 8
%A5=load i8*,i8**%d,align 8
%A6=getelementptr inbounds i8,i8*%A5,i64 16
%A7=bitcast i8*%A6 to i8*(i8*,i8*)**
%A8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A7,align 8
%A9=bitcast i8*%A5 to i8**
%Ba=load i8*,i8**%A9,align 8
store i8*%Ba,i8**%d,align 8
%Bb=call i8*@sml_alloc(i32 inreg 12)#0
%Bc=getelementptr inbounds i8,i8*%Bb,i64 -4
%Bd=bitcast i8*%Bc to i32*
store i32 1342177288,i32*%Bd,align 4
store i8*%Bb,i8**%e,align 8
%Be=load i8*,i8**%b,align 8
%Bf=bitcast i8*%Bb to i8**
store i8*%Be,i8**%Bf,align 8
%Bg=getelementptr inbounds i8,i8*%Bb,i64 8
%Bh=bitcast i8*%Bg to i32*
store i32 1,i32*%Bh,align 4
%Bi=call i8*@sml_alloc(i32 inreg 28)#0
%Bj=getelementptr inbounds i8,i8*%Bi,i64 -4
%Bk=bitcast i8*%Bj to i32*
store i32 1342177304,i32*%Bk,align 4
%Bl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Bm=bitcast i8*%Bi to i8**
store i8*%Bl,i8**%Bm,align 8
%Bn=getelementptr inbounds i8,i8*%Bi,i64 8
%Bo=bitcast i8*%Bn to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2313 to void(...)*),void(...)**%Bo,align 8
%Bp=getelementptr inbounds i8,i8*%Bi,i64 16
%Bq=bitcast i8*%Bp to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2313 to void(...)*),void(...)**%Bq,align 8
%Br=getelementptr inbounds i8,i8*%Bi,i64 24
%Bs=bitcast i8*%Br to i32*
store i32 -2147483647,i32*%Bs,align 4
%Bt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Bu=call fastcc i8*%A8(i8*inreg%Bt,i8*inreg%Bi)
store i8*%Bu,i8**%d,align 8
%Bv=call i8*@sml_alloc(i32 inreg 20)#0
%Bw=getelementptr inbounds i8,i8*%Bv,i64 -4
%Bx=bitcast i8*%Bw to i32*
store i32 1342177296,i32*%Bx,align 4
store i8*%Bv,i8**%e,align 8
%By=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Bz=bitcast i8*%Bv to i8**
store i8*%By,i8**%Bz,align 8
%BA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%BB=getelementptr inbounds i8,i8*%Bv,i64 8
%BC=bitcast i8*%BB to i8**
store i8*%BA,i8**%BC,align 8
%BD=getelementptr inbounds i8,i8*%Bv,i64 16
%BE=bitcast i8*%BD to i32*
store i32 3,i32*%BE,align 4
%BF=call i8*@sml_alloc(i32 inreg 28)#0
%BG=getelementptr inbounds i8,i8*%BF,i64 -4
%BH=bitcast i8*%BG to i32*
store i32 1342177304,i32*%BH,align 4
store i8*%BF,i8**%b,align 8
%BI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%BJ=bitcast i8*%BF to i8**
store i8*%BI,i8**%BJ,align 8
%BK=getelementptr inbounds i8,i8*%BF,i64 8
%BL=bitcast i8*%BK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2314 to void(...)*),void(...)**%BL,align 8
%BM=getelementptr inbounds i8,i8*%BF,i64 16
%BN=bitcast i8*%BM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2314 to void(...)*),void(...)**%BN,align 8
%BO=getelementptr inbounds i8,i8*%BF,i64 24
%BP=bitcast i8*%BO to i32*
store i32 -2147483647,i32*%BP,align 4
%BQ=call i8*@sml_alloc(i32 inreg 20)#0
%BR=getelementptr inbounds i8,i8*%BQ,i64 -4
%BS=bitcast i8*%BR to i32*
store i32 1342177296,i32*%BS,align 4
%BT=load i8*,i8**%c,align 8
%BU=bitcast i8*%BQ to i8**
store i8*%BT,i8**%BU,align 8
%BV=load i8*,i8**%b,align 8
br label%Hs
BW:
store i8*null,i8**%b,align 8
%BX=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%BX,i8**%b,align 8
%BY=load i8*,i8**%d,align 8
%BZ=getelementptr inbounds i8,i8*%BY,i64 16
%B0=bitcast i8*%BZ to i8*(i8*,i8*)**
%B1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B0,align 8
%B2=bitcast i8*%BY to i8**
%B3=load i8*,i8**%B2,align 8
store i8*%B3,i8**%d,align 8
%B4=call i8*@sml_alloc(i32 inreg 12)#0
%B5=getelementptr inbounds i8,i8*%B4,i64 -4
%B6=bitcast i8*%B5 to i32*
store i32 1342177288,i32*%B6,align 4
store i8*%B4,i8**%e,align 8
%B7=load i8*,i8**%b,align 8
%B8=bitcast i8*%B4 to i8**
store i8*%B7,i8**%B8,align 8
%B9=getelementptr inbounds i8,i8*%B4,i64 8
%Ca=bitcast i8*%B9 to i32*
store i32 1,i32*%Ca,align 4
%Cb=call i8*@sml_alloc(i32 inreg 28)#0
%Cc=getelementptr inbounds i8,i8*%Cb,i64 -4
%Cd=bitcast i8*%Cc to i32*
store i32 1342177304,i32*%Cd,align 4
%Ce=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Cf=bitcast i8*%Cb to i8**
store i8*%Ce,i8**%Cf,align 8
%Cg=getelementptr inbounds i8,i8*%Cb,i64 8
%Ch=bitcast i8*%Cg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2311 to void(...)*),void(...)**%Ch,align 8
%Ci=getelementptr inbounds i8,i8*%Cb,i64 16
%Cj=bitcast i8*%Ci to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2311 to void(...)*),void(...)**%Cj,align 8
%Ck=getelementptr inbounds i8,i8*%Cb,i64 24
%Cl=bitcast i8*%Ck to i32*
store i32 -2147483647,i32*%Cl,align 4
%Cm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Cn=call fastcc i8*%B1(i8*inreg%Cm,i8*inreg%Cb)
store i8*%Cn,i8**%d,align 8
%Co=call i8*@sml_alloc(i32 inreg 20)#0
%Cp=getelementptr inbounds i8,i8*%Co,i64 -4
%Cq=bitcast i8*%Cp to i32*
store i32 1342177296,i32*%Cq,align 4
store i8*%Co,i8**%e,align 8
%Cr=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Cs=bitcast i8*%Co to i8**
store i8*%Cr,i8**%Cs,align 8
%Ct=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Cu=getelementptr inbounds i8,i8*%Co,i64 8
%Cv=bitcast i8*%Cu to i8**
store i8*%Ct,i8**%Cv,align 8
%Cw=getelementptr inbounds i8,i8*%Co,i64 16
%Cx=bitcast i8*%Cw to i32*
store i32 3,i32*%Cx,align 4
%Cy=call i8*@sml_alloc(i32 inreg 28)#0
%Cz=getelementptr inbounds i8,i8*%Cy,i64 -4
%CA=bitcast i8*%Cz to i32*
store i32 1342177304,i32*%CA,align 4
store i8*%Cy,i8**%b,align 8
%CB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%CC=bitcast i8*%Cy to i8**
store i8*%CB,i8**%CC,align 8
%CD=getelementptr inbounds i8,i8*%Cy,i64 8
%CE=bitcast i8*%CD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2312 to void(...)*),void(...)**%CE,align 8
%CF=getelementptr inbounds i8,i8*%Cy,i64 16
%CG=bitcast i8*%CF to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2312 to void(...)*),void(...)**%CG,align 8
%CH=getelementptr inbounds i8,i8*%Cy,i64 24
%CI=bitcast i8*%CH to i32*
store i32 -2147483647,i32*%CI,align 4
%CJ=call i8*@sml_alloc(i32 inreg 20)#0
%CK=getelementptr inbounds i8,i8*%CJ,i64 -4
%CL=bitcast i8*%CK to i32*
store i32 1342177296,i32*%CL,align 4
%CM=load i8*,i8**%c,align 8
%CN=bitcast i8*%CJ to i8**
store i8*%CM,i8**%CN,align 8
%CO=load i8*,i8**%b,align 8
br label%Hs
CP:
store i8*null,i8**%b,align 8
%CQ=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%CQ,i8**%b,align 8
%CR=load i8*,i8**%d,align 8
%CS=getelementptr inbounds i8,i8*%CR,i64 16
%CT=bitcast i8*%CS to i8*(i8*,i8*)**
%CU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%CT,align 8
%CV=bitcast i8*%CR to i8**
%CW=load i8*,i8**%CV,align 8
store i8*%CW,i8**%d,align 8
%CX=call i8*@sml_alloc(i32 inreg 12)#0
%CY=getelementptr inbounds i8,i8*%CX,i64 -4
%CZ=bitcast i8*%CY to i32*
store i32 1342177288,i32*%CZ,align 4
store i8*%CX,i8**%e,align 8
%C0=load i8*,i8**%b,align 8
%C1=bitcast i8*%CX to i8**
store i8*%C0,i8**%C1,align 8
%C2=getelementptr inbounds i8,i8*%CX,i64 8
%C3=bitcast i8*%C2 to i32*
store i32 1,i32*%C3,align 4
%C4=call i8*@sml_alloc(i32 inreg 28)#0
%C5=getelementptr inbounds i8,i8*%C4,i64 -4
%C6=bitcast i8*%C5 to i32*
store i32 1342177304,i32*%C6,align 4
%C7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%C8=bitcast i8*%C4 to i8**
store i8*%C7,i8**%C8,align 8
%C9=getelementptr inbounds i8,i8*%C4,i64 8
%Da=bitcast i8*%C9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2309 to void(...)*),void(...)**%Da,align 8
%Db=getelementptr inbounds i8,i8*%C4,i64 16
%Dc=bitcast i8*%Db to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2309 to void(...)*),void(...)**%Dc,align 8
%Dd=getelementptr inbounds i8,i8*%C4,i64 24
%De=bitcast i8*%Dd to i32*
store i32 -2147483647,i32*%De,align 4
%Df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Dg=call fastcc i8*%CU(i8*inreg%Df,i8*inreg%C4)
store i8*%Dg,i8**%d,align 8
%Dh=call i8*@sml_alloc(i32 inreg 20)#0
%Di=getelementptr inbounds i8,i8*%Dh,i64 -4
%Dj=bitcast i8*%Di to i32*
store i32 1342177296,i32*%Dj,align 4
store i8*%Dh,i8**%e,align 8
%Dk=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Dl=bitcast i8*%Dh to i8**
store i8*%Dk,i8**%Dl,align 8
%Dm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Dn=getelementptr inbounds i8,i8*%Dh,i64 8
%Do=bitcast i8*%Dn to i8**
store i8*%Dm,i8**%Do,align 8
%Dp=getelementptr inbounds i8,i8*%Dh,i64 16
%Dq=bitcast i8*%Dp to i32*
store i32 3,i32*%Dq,align 4
%Dr=call i8*@sml_alloc(i32 inreg 28)#0
%Ds=getelementptr inbounds i8,i8*%Dr,i64 -4
%Dt=bitcast i8*%Ds to i32*
store i32 1342177304,i32*%Dt,align 4
store i8*%Dr,i8**%b,align 8
%Du=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Dv=bitcast i8*%Dr to i8**
store i8*%Du,i8**%Dv,align 8
%Dw=getelementptr inbounds i8,i8*%Dr,i64 8
%Dx=bitcast i8*%Dw to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2310 to void(...)*),void(...)**%Dx,align 8
%Dy=getelementptr inbounds i8,i8*%Dr,i64 16
%Dz=bitcast i8*%Dy to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2310 to void(...)*),void(...)**%Dz,align 8
%DA=getelementptr inbounds i8,i8*%Dr,i64 24
%DB=bitcast i8*%DA to i32*
store i32 -2147483647,i32*%DB,align 4
%DC=call i8*@sml_alloc(i32 inreg 20)#0
%DD=getelementptr inbounds i8,i8*%DC,i64 -4
%DE=bitcast i8*%DD to i32*
store i32 1342177296,i32*%DE,align 4
%DF=load i8*,i8**%c,align 8
%DG=bitcast i8*%DC to i8**
store i8*%DF,i8**%DG,align 8
%DH=load i8*,i8**%b,align 8
br label%Hs
DI:
store i8*null,i8**%b,align 8
%DJ=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%DJ,i8**%b,align 8
%DK=load i8*,i8**%d,align 8
%DL=getelementptr inbounds i8,i8*%DK,i64 16
%DM=bitcast i8*%DL to i8*(i8*,i8*)**
%DN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%DM,align 8
%DO=bitcast i8*%DK to i8**
%DP=load i8*,i8**%DO,align 8
store i8*%DP,i8**%d,align 8
%DQ=call i8*@sml_alloc(i32 inreg 12)#0
%DR=getelementptr inbounds i8,i8*%DQ,i64 -4
%DS=bitcast i8*%DR to i32*
store i32 1342177288,i32*%DS,align 4
store i8*%DQ,i8**%e,align 8
%DT=load i8*,i8**%b,align 8
%DU=bitcast i8*%DQ to i8**
store i8*%DT,i8**%DU,align 8
%DV=getelementptr inbounds i8,i8*%DQ,i64 8
%DW=bitcast i8*%DV to i32*
store i32 1,i32*%DW,align 4
%DX=call i8*@sml_alloc(i32 inreg 28)#0
%DY=getelementptr inbounds i8,i8*%DX,i64 -4
%DZ=bitcast i8*%DY to i32*
store i32 1342177304,i32*%DZ,align 4
%D0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%D1=bitcast i8*%DX to i8**
store i8*%D0,i8**%D1,align 8
%D2=getelementptr inbounds i8,i8*%DX,i64 8
%D3=bitcast i8*%D2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2307 to void(...)*),void(...)**%D3,align 8
%D4=getelementptr inbounds i8,i8*%DX,i64 16
%D5=bitcast i8*%D4 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2307 to void(...)*),void(...)**%D5,align 8
%D6=getelementptr inbounds i8,i8*%DX,i64 24
%D7=bitcast i8*%D6 to i32*
store i32 -2147483647,i32*%D7,align 4
%D8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D9=call fastcc i8*%DN(i8*inreg%D8,i8*inreg%DX)
store i8*%D9,i8**%d,align 8
%Ea=call i8*@sml_alloc(i32 inreg 20)#0
%Eb=getelementptr inbounds i8,i8*%Ea,i64 -4
%Ec=bitcast i8*%Eb to i32*
store i32 1342177296,i32*%Ec,align 4
store i8*%Ea,i8**%e,align 8
%Ed=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ee=bitcast i8*%Ea to i8**
store i8*%Ed,i8**%Ee,align 8
%Ef=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Eg=getelementptr inbounds i8,i8*%Ea,i64 8
%Eh=bitcast i8*%Eg to i8**
store i8*%Ef,i8**%Eh,align 8
%Ei=getelementptr inbounds i8,i8*%Ea,i64 16
%Ej=bitcast i8*%Ei to i32*
store i32 3,i32*%Ej,align 4
%Ek=call i8*@sml_alloc(i32 inreg 28)#0
%El=getelementptr inbounds i8,i8*%Ek,i64 -4
%Em=bitcast i8*%El to i32*
store i32 1342177304,i32*%Em,align 4
store i8*%Ek,i8**%b,align 8
%En=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Eo=bitcast i8*%Ek to i8**
store i8*%En,i8**%Eo,align 8
%Ep=getelementptr inbounds i8,i8*%Ek,i64 8
%Eq=bitcast i8*%Ep to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2308 to void(...)*),void(...)**%Eq,align 8
%Er=getelementptr inbounds i8,i8*%Ek,i64 16
%Es=bitcast i8*%Er to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2308 to void(...)*),void(...)**%Es,align 8
%Et=getelementptr inbounds i8,i8*%Ek,i64 24
%Eu=bitcast i8*%Et to i32*
store i32 -2147483647,i32*%Eu,align 4
%Ev=call i8*@sml_alloc(i32 inreg 20)#0
%Ew=getelementptr inbounds i8,i8*%Ev,i64 -4
%Ex=bitcast i8*%Ew to i32*
store i32 1342177296,i32*%Ex,align 4
%Ey=load i8*,i8**%c,align 8
%Ez=bitcast i8*%Ev to i8**
store i8*%Ey,i8**%Ez,align 8
%EA=load i8*,i8**%b,align 8
br label%Hs
EB:
store i8*null,i8**%b,align 8
%EC=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%EC,i8**%b,align 8
%ED=load i8*,i8**%d,align 8
%EE=getelementptr inbounds i8,i8*%ED,i64 16
%EF=bitcast i8*%EE to i8*(i8*,i8*)**
%EG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EF,align 8
%EH=bitcast i8*%ED to i8**
%EI=load i8*,i8**%EH,align 8
store i8*%EI,i8**%d,align 8
%EJ=call i8*@sml_alloc(i32 inreg 12)#0
%EK=getelementptr inbounds i8,i8*%EJ,i64 -4
%EL=bitcast i8*%EK to i32*
store i32 1342177288,i32*%EL,align 4
store i8*%EJ,i8**%e,align 8
%EM=load i8*,i8**%b,align 8
%EN=bitcast i8*%EJ to i8**
store i8*%EM,i8**%EN,align 8
%EO=getelementptr inbounds i8,i8*%EJ,i64 8
%EP=bitcast i8*%EO to i32*
store i32 1,i32*%EP,align 4
%EQ=call i8*@sml_alloc(i32 inreg 28)#0
%ER=getelementptr inbounds i8,i8*%EQ,i64 -4
%ES=bitcast i8*%ER to i32*
store i32 1342177304,i32*%ES,align 4
%ET=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%EU=bitcast i8*%EQ to i8**
store i8*%ET,i8**%EU,align 8
%EV=getelementptr inbounds i8,i8*%EQ,i64 8
%EW=bitcast i8*%EV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2305 to void(...)*),void(...)**%EW,align 8
%EX=getelementptr inbounds i8,i8*%EQ,i64 16
%EY=bitcast i8*%EX to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2305 to void(...)*),void(...)**%EY,align 8
%EZ=getelementptr inbounds i8,i8*%EQ,i64 24
%E0=bitcast i8*%EZ to i32*
store i32 -2147483647,i32*%E0,align 4
%E1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E2=call fastcc i8*%EG(i8*inreg%E1,i8*inreg%EQ)
store i8*%E2,i8**%d,align 8
%E3=call i8*@sml_alloc(i32 inreg 20)#0
%E4=getelementptr inbounds i8,i8*%E3,i64 -4
%E5=bitcast i8*%E4 to i32*
store i32 1342177296,i32*%E5,align 4
store i8*%E3,i8**%e,align 8
%E6=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%E7=bitcast i8*%E3 to i8**
store i8*%E6,i8**%E7,align 8
%E8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E9=getelementptr inbounds i8,i8*%E3,i64 8
%Fa=bitcast i8*%E9 to i8**
store i8*%E8,i8**%Fa,align 8
%Fb=getelementptr inbounds i8,i8*%E3,i64 16
%Fc=bitcast i8*%Fb to i32*
store i32 3,i32*%Fc,align 4
%Fd=call i8*@sml_alloc(i32 inreg 28)#0
%Fe=getelementptr inbounds i8,i8*%Fd,i64 -4
%Ff=bitcast i8*%Fe to i32*
store i32 1342177304,i32*%Ff,align 4
store i8*%Fd,i8**%b,align 8
%Fg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Fh=bitcast i8*%Fd to i8**
store i8*%Fg,i8**%Fh,align 8
%Fi=getelementptr inbounds i8,i8*%Fd,i64 8
%Fj=bitcast i8*%Fi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2306 to void(...)*),void(...)**%Fj,align 8
%Fk=getelementptr inbounds i8,i8*%Fd,i64 16
%Fl=bitcast i8*%Fk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2306 to void(...)*),void(...)**%Fl,align 8
%Fm=getelementptr inbounds i8,i8*%Fd,i64 24
%Fn=bitcast i8*%Fm to i32*
store i32 -2147483647,i32*%Fn,align 4
%Fo=call i8*@sml_alloc(i32 inreg 20)#0
%Fp=getelementptr inbounds i8,i8*%Fo,i64 -4
%Fq=bitcast i8*%Fp to i32*
store i32 1342177296,i32*%Fq,align 4
%Fr=load i8*,i8**%c,align 8
%Fs=bitcast i8*%Fo to i8**
store i8*%Fr,i8**%Fs,align 8
%Ft=load i8*,i8**%b,align 8
br label%Hs
Fu:
store i8*null,i8**%c,align 8
store i8*null,i8**%d,align 8
%Fv=getelementptr inbounds i8,i8*%r,i64 8
%Fw=bitcast i8*%Fv to i8**
%Fx=load i8*,i8**%Fw,align 8
%Fy=bitcast i8*%Fx to i8**
%Fz=load i8*,i8**%Fy,align 8
store i8*%Fz,i8**%b,align 8
%FA=getelementptr inbounds i8,i8*%Fx,i64 8
%FB=bitcast i8*%FA to i32*
%FC=load i32,i32*%FB,align 4
switch i32%FC,label%FD[
i32 2,label%F4
i32 9,label%F3
i32 3,label%F2
i32 6,label%F1
i32 5,label%F0
i32 4,label%FZ
i32 8,label%FY
i32 7,label%FX
i32 0,label%FW
i32 1,label%FV
]
FD:
call void@sml_matchcomp_bug()
%FE=load i8*,i8**@_SMLZ5Match,align 8
store i8*%FE,i8**%b,align 8
%FF=call i8*@sml_alloc(i32 inreg 20)#0
%FG=getelementptr inbounds i8,i8*%FF,i64 -4
%FH=bitcast i8*%FG to i32*
store i32 1342177296,i32*%FH,align 4
store i8*%FF,i8**%c,align 8
%FI=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%FJ=bitcast i8*%FF to i8**
store i8*%FI,i8**%FJ,align 8
%FK=getelementptr inbounds i8,i8*%FF,i64 8
%FL=bitcast i8*%FK to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@hY,i64 0,i32 2,i64 0),i8**%FL,align 8
%FM=getelementptr inbounds i8,i8*%FF,i64 16
%FN=bitcast i8*%FM to i32*
store i32 3,i32*%FN,align 4
%FO=call i8*@sml_alloc(i32 inreg 60)#0
%FP=getelementptr inbounds i8,i8*%FO,i64 -4
%FQ=bitcast i8*%FP to i32*
store i32 1342177336,i32*%FQ,align 4
%FR=getelementptr inbounds i8,i8*%FO,i64 56
%FS=bitcast i8*%FR to i32*
store i32 1,i32*%FS,align 4
%FT=load i8*,i8**%c,align 8
%FU=bitcast i8*%FO to i8**
store i8*%FT,i8**%FU,align 8
call void@sml_raise(i8*inreg%FO)#1
unreachable
FV:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fQ,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
FW:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fM,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
FX:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fJ,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
FY:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fG,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
FZ:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fD,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F0:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fA,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F1:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fx,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F2:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fu,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F3:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fr,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F4:
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fo,i64 0,i32 2)to i8*),i8**%c,align 8
br label%F5
F5:
%F6=call i8*@sml_alloc(i32 inreg 12)#0
%F7=getelementptr inbounds i8,i8*%F6,i64 -4
%F8=bitcast i8*%F7 to i32*
store i32 1342177288,i32*%F8,align 4
store i8*%F6,i8**%d,align 8
%F9=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%Ga=bitcast i8*%F6 to i8**
store i8*%F9,i8**%Ga,align 8
%Gb=getelementptr inbounds i8,i8*%F6,i64 8
%Gc=bitcast i8*%Gb to i32*
store i32 1,i32*%Gc,align 4
%Gd=call i8*@sml_alloc(i32 inreg 28)#0
%Ge=getelementptr inbounds i8,i8*%Gd,i64 -4
%Gf=bitcast i8*%Ge to i32*
store i32 1342177304,i32*%Gf,align 4
store i8*%Gd,i8**%b,align 8
%Gg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Gh=bitcast i8*%Gd to i8**
store i8*%Gg,i8**%Gh,align 8
%Gi=getelementptr inbounds i8,i8*%Gd,i64 8
%Gj=bitcast i8*%Gi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2304 to void(...)*),void(...)**%Gj,align 8
%Gk=getelementptr inbounds i8,i8*%Gd,i64 16
%Gl=bitcast i8*%Gk to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2304 to void(...)*),void(...)**%Gl,align 8
%Gm=getelementptr inbounds i8,i8*%Gd,i64 24
%Gn=bitcast i8*%Gm to i32*
store i32 -2147483647,i32*%Gn,align 4
%Go=call i8*@sml_alloc(i32 inreg 20)#0
%Gp=getelementptr inbounds i8,i8*%Go,i64 -4
%Gq=bitcast i8*%Gp to i32*
store i32 1342177296,i32*%Gq,align 4
%Gr=load i8*,i8**%b,align 8
%Gs=bitcast i8*%Go to i8**
store i8*%Gr,i8**%Gs,align 8
%Gt=getelementptr inbounds i8,i8*%Go,i64 8
%Gu=bitcast i8*%Gt to i8**
store i8*null,i8**%Gu,align 8
%Gv=getelementptr inbounds i8,i8*%Go,i64 16
%Gw=bitcast i8*%Gv to i32*
store i32 3,i32*%Gw,align 4
%Gx=load i8*,i8**%c,align 8
%Gy=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg%Gx,i8*inreg%Go)
ret i8*%Gy
Gz:
store i8*null,i8**%b,align 8
%GA=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%GA,i8**%b,align 8
%GB=load i8*,i8**%d,align 8
%GC=getelementptr inbounds i8,i8*%GB,i64 16
%GD=bitcast i8*%GC to i8*(i8*,i8*)**
%GE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%GD,align 8
%GF=bitcast i8*%GB to i8**
%GG=load i8*,i8**%GF,align 8
store i8*%GG,i8**%d,align 8
%GH=call i8*@sml_alloc(i32 inreg 12)#0
%GI=getelementptr inbounds i8,i8*%GH,i64 -4
%GJ=bitcast i8*%GI to i32*
store i32 1342177288,i32*%GJ,align 4
store i8*%GH,i8**%e,align 8
%GK=load i8*,i8**%b,align 8
%GL=bitcast i8*%GH to i8**
store i8*%GK,i8**%GL,align 8
%GM=getelementptr inbounds i8,i8*%GH,i64 8
%GN=bitcast i8*%GM to i32*
store i32 1,i32*%GN,align 4
%GO=call i8*@sml_alloc(i32 inreg 28)#0
%GP=getelementptr inbounds i8,i8*%GO,i64 -4
%GQ=bitcast i8*%GP to i32*
store i32 1342177304,i32*%GQ,align 4
%GR=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%GS=bitcast i8*%GO to i8**
store i8*%GR,i8**%GS,align 8
%GT=getelementptr inbounds i8,i8*%GO,i64 8
%GU=bitcast i8*%GT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2301 to void(...)*),void(...)**%GU,align 8
%GV=getelementptr inbounds i8,i8*%GO,i64 16
%GW=bitcast i8*%GV to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2301 to void(...)*),void(...)**%GW,align 8
%GX=getelementptr inbounds i8,i8*%GO,i64 24
%GY=bitcast i8*%GX to i32*
store i32 -2147483647,i32*%GY,align 4
%GZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G0=call fastcc i8*%GE(i8*inreg%GZ,i8*inreg%GO)
store i8*%G0,i8**%d,align 8
%G1=call i8*@sml_alloc(i32 inreg 20)#0
%G2=getelementptr inbounds i8,i8*%G1,i64 -4
%G3=bitcast i8*%G2 to i32*
store i32 1342177296,i32*%G3,align 4
store i8*%G1,i8**%e,align 8
%G4=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%G5=bitcast i8*%G1 to i8**
store i8*%G4,i8**%G5,align 8
%G6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%G7=getelementptr inbounds i8,i8*%G1,i64 8
%G8=bitcast i8*%G7 to i8**
store i8*%G6,i8**%G8,align 8
%G9=getelementptr inbounds i8,i8*%G1,i64 16
%Ha=bitcast i8*%G9 to i32*
store i32 3,i32*%Ha,align 4
%Hb=call i8*@sml_alloc(i32 inreg 28)#0
%Hc=getelementptr inbounds i8,i8*%Hb,i64 -4
%Hd=bitcast i8*%Hc to i32*
store i32 1342177304,i32*%Hd,align 4
store i8*%Hb,i8**%b,align 8
%He=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Hf=bitcast i8*%Hb to i8**
store i8*%He,i8**%Hf,align 8
%Hg=getelementptr inbounds i8,i8*%Hb,i64 8
%Hh=bitcast i8*%Hg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2302 to void(...)*),void(...)**%Hh,align 8
%Hi=getelementptr inbounds i8,i8*%Hb,i64 16
%Hj=bitcast i8*%Hi to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10queryToExpE_2302 to void(...)*),void(...)**%Hj,align 8
%Hk=getelementptr inbounds i8,i8*%Hb,i64 24
%Hl=bitcast i8*%Hk to i32*
store i32 -2147483647,i32*%Hl,align 4
%Hm=call i8*@sml_alloc(i32 inreg 20)#0
%Hn=getelementptr inbounds i8,i8*%Hm,i64 -4
%Ho=bitcast i8*%Hn to i32*
store i32 1342177296,i32*%Ho,align 4
%Hp=load i8*,i8**%c,align 8
%Hq=bitcast i8*%Hm to i8**
store i8*%Hp,i8**%Hq,align 8
%Hr=load i8*,i8**%b,align 8
br label%Hs
Hs:
%Ht=phi i8*[%Hm,%Gz],[%Fo,%EB],[%Ev,%DI],[%DC,%CP],[%CJ,%BW],[%BQ,%A3],[%AX,%Aa],[%z4,%zh],[%zb,%yo],[%yi,%xv],[%xp,%wC],[%ww,%vJ],[%vD,%uQ]
%Hu=phi i8*[%Hr,%Gz],[%Ft,%EB],[%EA,%DI],[%DH,%CP],[%CO,%BW],[%BV,%A3],[%A2,%Aa],[%z9,%zh],[%zg,%yo],[%yn,%xv],[%xu,%wC],[%wB,%vJ],[%vI,%uQ]
%Hv=phi i8*[%Hp,%Gz],[%Fr,%EB],[%Ey,%DI],[%DF,%CP],[%CM,%BW],[%BT,%A3],[%A0,%Aa],[%z7,%zh],[%ze,%yo],[%yl,%xv],[%xs,%wC],[%wz,%vJ],[%vG,%uQ]
%Hw=getelementptr inbounds i8,i8*%Ht,i64 8
%Hx=bitcast i8*%Hw to i8**
store i8*%Hu,i8**%Hx,align 8
%Hy=getelementptr inbounds i8,i8*%Ht,i64 16
%Hz=bitcast i8*%Hy to i32*
store i32 3,i32*%Hz,align 4
store i8*%Hv,i8**%b,align 8
store i8*%Hu,i8**%c,align 8
%HA=call i8*@sml_alloc(i32 inreg 20)#0
%HB=getelementptr inbounds i8,i8*%HA,i64 -4
%HC=bitcast i8*%HB to i32*
store i32 1342177296,i32*%HC,align 4
store i8*%HA,i8**%d,align 8
%HD=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%HE=bitcast i8*%HA to i8**
store i8*%HD,i8**%HE,align 8
%HF=getelementptr inbounds i8,i8*%HA,i64 8
%HG=bitcast i8*%HF to i8**
store i8*null,i8**%HG,align 8
%HH=getelementptr inbounds i8,i8*%HA,i64 16
%HI=bitcast i8*%HH to i32*
store i32 3,i32*%HI,align 4
%HJ=call i8*@sml_alloc(i32 inreg 20)#0
%HK=getelementptr inbounds i8,i8*%HJ,i64 -4
%HL=bitcast i8*%HK to i32*
store i32 1342177296,i32*%HL,align 4
%HM=load i8*,i8**%b,align 8
%HN=bitcast i8*%HJ to i8**
store i8*%HM,i8**%HN,align 8
%HO=load i8*,i8**%d,align 8
%HP=getelementptr inbounds i8,i8*%HJ,i64 8
%HQ=bitcast i8*%HP to i8**
store i8*%HO,i8**%HQ,align 8
%HR=getelementptr inbounds i8,i8*%HJ,i64 16
%HS=bitcast i8*%HR to i32*
store i32 3,i32*%HS,align 4
%HT=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fo,i64 0,i32 2)to i8*),i8*inreg%HJ)
ret i8*%HT
HU:
%HV=phi i8*[%mw,%ll],[%ld,%kq],[%ki,%jv],[%jn,%iA],[%is,%hF],[%hx,%gK],[%gC,%fP],[%fH,%eU],[%eM,%dZ],[%dR,%c4],[%cV,%bG],[%bn,%ac]
%HW=phi i8*[%mE,%ll],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%kq],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%jv],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%iA],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%hF],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%gK],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%fP],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%eU],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%dZ],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f3,i64 0,i32 2)to i8*),%c4],[%c3,%bG],[%bv,%ac]
%HX=phi i8*[%mB,%ll],[%li,%kq],[%kn,%jv],[%js,%iA],[%ix,%hF],[%hC,%gK],[%gH,%fP],[%fM,%eU],[%eR,%dZ],[%dW,%c4],[%c0,%bG],[%bs,%ac]
%HY=phi i8*[%mz,%ll],[%lg,%kq],[%kl,%jv],[%jq,%iA],[%iv,%hF],[%hA,%gK],[%gF,%fP],[%fK,%eU],[%eP,%dZ],[%dU,%c4],[%cY,%bG],[%bq,%ac]
%HZ=getelementptr inbounds i8,i8*%HV,i64 16
%H0=bitcast i8*%HZ to i8**
store i8*%HW,i8**%H0,align 8
%H1=getelementptr inbounds i8,i8*%HV,i64 24
%H2=bitcast i8*%H1 to i32*
store i32 7,i32*%H2,align 4
store i8*%HY,i8**%b,align 8
store i8*%HX,i8**%c,align 8
store i8*%HW,i8**%d,align 8
%H3=call i8*@sml_alloc(i32 inreg 20)#0
%H4=getelementptr inbounds i8,i8*%H3,i64 -4
%H5=bitcast i8*%H4 to i32*
store i32 1342177296,i32*%H5,align 4
store i8*%H3,i8**%e,align 8
%H6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%H7=bitcast i8*%H3 to i8**
store i8*%H6,i8**%H7,align 8
%H8=getelementptr inbounds i8,i8*%H3,i64 8
%H9=bitcast i8*%H8 to i8**
store i8*null,i8**%H9,align 8
%Ia=getelementptr inbounds i8,i8*%H3,i64 16
%Ib=bitcast i8*%Ia to i32*
store i32 3,i32*%Ib,align 4
%Ic=call i8*@sml_alloc(i32 inreg 20)#0
%Id=getelementptr inbounds i8,i8*%Ic,i64 -4
%Ie=bitcast i8*%Id to i32*
store i32 1342177296,i32*%Ie,align 4
store i8*%Ic,i8**%d,align 8
%If=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Ig=bitcast i8*%Ic to i8**
store i8*%If,i8**%Ig,align 8
%Ih=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ii=getelementptr inbounds i8,i8*%Ic,i64 8
%Ij=bitcast i8*%Ii to i8**
store i8*%Ih,i8**%Ij,align 8
%Ik=getelementptr inbounds i8,i8*%Ic,i64 16
%Il=bitcast i8*%Ik to i32*
store i32 3,i32*%Il,align 4
%Im=call i8*@sml_alloc(i32 inreg 20)#0
%In=getelementptr inbounds i8,i8*%Im,i64 -4
%Io=bitcast i8*%In to i32*
store i32 1342177296,i32*%Io,align 4
%Ip=load i8*,i8**%b,align 8
%Iq=bitcast i8*%Im to i8**
store i8*%Ip,i8**%Iq,align 8
%Ir=load i8*,i8**%d,align 8
%Is=getelementptr inbounds i8,i8*%Im,i64 8
%It=bitcast i8*%Is to i8**
store i8*%Ir,i8**%It,align 8
%Iu=getelementptr inbounds i8,i8*%Im,i64 16
%Iv=bitcast i8*%Iu to i32*
store i32 3,i32*%Iv,align 4
%Iw=tail call fastcc i8*@_SMLLLN12ElaborateSQL3ConE_1214(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fM,i64 0,i32 2)to i8*),i8*inreg%Im)
ret i8*%Iw
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2374(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2375(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%c to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
store i8*%s,i8**%g,align 8
%v=load i8*,i8**%d,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*null,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%s,i64 16
%A=bitcast i8*%z to i32*
store i32 3,i32*%A,align 4
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%d,align 8
%F=call i8*@sml_alloc(i32 inreg 20)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177296,i32*%H,align 4
store i8*%F,i8**%h,align 8
%I=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i8**
store i8*null,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%c,align 8
%P=getelementptr inbounds i8,i8*%O,i64 24
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%O,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%U(i8*inreg%W,i8*inreg%Z)
store i8*%aa,i8**%d,align 8
%ab=load i8*,i8**%c,align 8
%ac=getelementptr inbounds i8,i8*%ab,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%e,align 8
%af=call i8*@sml_alloc(i32 inreg 28)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177304,i32*%ah,align 4
store i8*%af,i8**%f,align 8
%ai=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%af,i64 16
%ap=bitcast i8*%ao to i8**
store i8*%an,i8**%ap,align 8
%aq=getelementptr inbounds i8,i8*%af,i64 24
%ar=bitcast i8*%aq to i32*
store i32 7,i32*%ar,align 4
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%e,align 8
%av=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=getelementptr inbounds i8,i8*%as,i64 8
%ay=bitcast i8*%ax to i8**
store i8*null,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%as,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%c,align 8
%aC=getelementptr inbounds i8,i8*%aB,i64 8
%aD=bitcast i8*%aC to i8**
%aE=load i8*,i8**%aD,align 8
store i8*%aE,i8**%c,align 8
%aF=call i8*@sml_alloc(i32 inreg 36)#0
%aG=getelementptr inbounds i8,i8*%aF,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 1342177312,i32*%aH,align 4
store i8*%aF,i8**%d,align 8
%aI=getelementptr inbounds i8,i8*%aF,i64 20
%aJ=bitcast i8*%aI to i32*
store i32 0,i32*%aJ,align 1
%aK=bitcast i8*%aF to i8**
%aL=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
store i8*%aL,i8**%aK,align 8
%aM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aF,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aF,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 2,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aS=getelementptr inbounds i8,i8*%aF,i64 24
%aT=bitcast i8*%aS to i8**
store i8*%aR,i8**%aT,align 8
%aU=getelementptr inbounds i8,i8*%aF,i64 32
%aV=bitcast i8*%aU to i32*
store i32 11,i32*%aV,align 4
%aW=call i8*@sml_alloc(i32 inreg 20)#0
%aX=bitcast i8*%aW to i32*
%aY=getelementptr inbounds i8,i8*%aW,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
%a0=getelementptr inbounds i8,i8*%aW,i64 4
%a1=bitcast i8*%a0 to i32*
store i32 0,i32*%a1,align 1
store i32 1,i32*%aX,align 4
%a2=load i8*,i8**%d,align 8
%a3=getelementptr inbounds i8,i8*%aW,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 2,i32*%a6,align 4
ret i8*%aW
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2376(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%a to i8**
%h=load i8*,i8**%g,align 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%b,align 8
%k=getelementptr inbounds i8,i8*%h,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%d,align 8
%q=getelementptr inbounds i8,i8*%a,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%d,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2374 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2374 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 36)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177312,i32*%N,align 4
store i8*%L,i8**%f,align 8
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=bitcast i8*%L to i8**
store i8*%O,i8**%P,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=getelementptr inbounds i8,i8*%L,i64 8
%S=bitcast i8*%R to i8**
store i8*%Q,i8**%S,align 8
%T=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%U=getelementptr inbounds i8,i8*%L,i64 16
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=getelementptr inbounds i8,i8*%L,i64 24
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%L,i64 32
%aa=bitcast i8*%Z to i32*
store i32 15,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2375 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2375 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
ret i8*%ab
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2378(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%h,label%g
g:
call void@sml_check(i32 inreg%e)
br label%h
h:
%i=call fastcc i8*@_SMLFN4List5foldrE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%j=getelementptr inbounds i8,i8*%i,i64 16
%k=bitcast i8*%j to i8*(i8*,i8*)**
%l=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k,align 8
%m=bitcast i8*%i to i8**
%n=load i8*,i8**%m,align 8
%o=call fastcc i8*%l(i8*inreg%n,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hU,i64 0,i32 2)to i8*))
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%v=call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=bitcast i8**%d to i8***
%C=load i8**,i8***%B,align 8
%D=load i8*,i8**%C,align 8
%E=tail call fastcc i8*%y(i8*inreg%A,i8*inreg%D)
ret i8*%E
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2379(i8*inreg%a)unnamed_addr#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
%d=bitcast i8*%a to i8**
%e=load i8*,i8**%d,align 8
store i8*%e,i8**%b,align 8
%f=call i8*@sml_alloc(i32 inreg 12)#0
%g=getelementptr inbounds i8,i8*%f,i64 -4
%h=bitcast i8*%g to i32*
store i32 1342177288,i32*%h,align 4
store i8*%f,i8**%c,align 8
%i=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%j=bitcast i8*%f to i8**
store i8*%i,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%f,i64 8
%l=bitcast i8*%k to i32*
store i32 1,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 28)#0
%n=getelementptr inbounds i8,i8*%m,i64 -4
%o=bitcast i8*%n to i32*
store i32 1342177304,i32*%o,align 4
%p=load i8*,i8**%c,align 8
%q=bitcast i8*%m to i8**
store i8*%p,i8**%q,align 8
%r=getelementptr inbounds i8,i8*%m,i64 8
%s=bitcast i8*%r to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2378 to void(...)*),void(...)**%s,align 8
%t=getelementptr inbounds i8,i8*%m,i64 16
%u=bitcast i8*%t to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8makeBindE_2378 to void(...)*),void(...)**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 24
%w=bitcast i8*%v to i32*
store i32 -2147483647,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2381(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2383(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%k,label%j
j:
call void@sml_check(i32 inreg%h)
br label%k
k:
%l=call fastcc i8*@_SMLFN8ListPair5unzipE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m=getelementptr inbounds i8,i8*%l,i64 16
%n=bitcast i8*%m to i8*(i8*,i8*)**
%o=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%n,align 8
%p=bitcast i8*%l to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%g,align 8
%r=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=call fastcc i8*%u(i8*inreg%w,i8*inreg%x)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=call fastcc i8*%B(i8*inreg%D,i8*inreg%E)
%G=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%H=call fastcc i8*%o(i8*inreg%G,i8*inreg%F)
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
store i8*%J,i8**%d,align 8
%K=getelementptr inbounds i8,i8*%H,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%e,align 8
%N=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%O=getelementptr inbounds i8,i8*%N,i64 16
%P=bitcast i8*%O to i8*(i8*,i8*)**
%Q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%P,align 8
%R=bitcast i8*%N to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%g,align 8
%T=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%U=getelementptr inbounds i8,i8*%T,i64 16
%V=bitcast i8*%U to i8*(i8*,i8*)**
%W=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%V,align 8
%X=bitcast i8*%T to i8**
%Y=load i8*,i8**%X,align 8
%Z=call fastcc i8*%W(i8*inreg%Y,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hV,i64 0,i32 2)to i8*))
%aa=getelementptr inbounds i8,i8*%Z,i64 16
%ab=bitcast i8*%aa to i8*(i8*,i8*)**
%ac=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ab,align 8
%ad=bitcast i8*%Z to i8**
%ae=load i8*,i8**%ad,align 8
%af=load i8*,i8**%d,align 8
%ag=call fastcc i8*%ac(i8*inreg%ae,i8*inreg%af)
%ah=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ai=call fastcc i8*%Q(i8*inreg%ah,i8*inreg%ag)
store i8*%ai,i8**%g,align 8
%aj=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=call fastcc i8*%am(i8*inreg%ao,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hW,i64 0,i32 2)to i8*))
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=bitcast i8**%f to i8***
%aw=load i8**,i8***%av,align 8
store i8*null,i8**%f,align 8
%ax=load i8*,i8**%aw,align 8
%ay=call fastcc i8*%as(i8*inreg%au,i8*inreg%ax)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aF=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%d,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
store i8*%aG,i8**%f,align 8
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aM=getelementptr inbounds i8,i8*%aG,i64 8
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aG,i64 16
%aP=bitcast i8*%aO to i32*
store i32 3,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
%aT=load i8*,i8**%f,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=load i8*,i8**%e,align 8
%aW=getelementptr inbounds i8,i8*%aQ,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aQ,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 3,i32*%aZ,align 4
ret i8*%aQ
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
o:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%m,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%c,align 8
br label%m
m:
%n=phi i8*[%l,%k],[%b,%o]
%p=bitcast i8*%n to i32*
%q=load i32,i32*%p,align 4
switch i32%q,label%r[
i32 1,label%b5
i32 0,label%J
]
r:
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%s=load i8*,i8**@_SMLZ5Match,align 8
store i8*%s,i8**%c,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
store i8*%t,i8**%d,align 8
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@hX,i64 0,i32 2,i64 0),i8**%z,align 8
%A=getelementptr inbounds i8,i8*%t,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=call i8*@sml_alloc(i32 inreg 60)#0
%D=getelementptr inbounds i8,i8*%C,i64 -4
%E=bitcast i8*%D to i32*
store i32 1342177336,i32*%E,align 4
%F=getelementptr inbounds i8,i8*%C,i64 56
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=load i8*,i8**%d,align 8
%I=bitcast i8*%C to i8**
store i8*%H,i8**%I,align 8
call void@sml_raise(i8*inreg%C)#1
unreachable
J:
%K=getelementptr inbounds i8,i8*%n,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%c,align 8
%N=bitcast i8*%M to i32*
%O=load i32,i32*%N,align 4
%P=icmp eq i32%O,6
br i1%P,label%bQ,label%Q
Q:
%R=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%R,i8**%d,align 8
%S=load i8*,i8**%c,align 8
%T=call fastcc i8*@_SMLLLN12ElaborateSQL6getLocE_1281(i8*inreg%S)
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
store i8*%U,i8**%h,align 8
%X=load i8*,i8**%d,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
store i8*null,i8**%aa,align 8
%ab=getelementptr inbounds i8,i8*%U,i64 16
%ac=bitcast i8*%ab to i32*
store i32 3,i32*%ac,align 4
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
store i8*%ad,i8**%f,align 8
%ag=getelementptr inbounds i8,i8*%ad,i64 4
%ah=bitcast i8*%ag to i32*
store i32 0,i32*%ah,align 1
%ai=bitcast i8*%ad to i32*
store i32 2,i32*%ai,align 4
%aj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ak=getelementptr inbounds i8,i8*%ad,i64 8
%al=bitcast i8*%ak to i8**
store i8*%aj,i8**%al,align 8
%am=getelementptr inbounds i8,i8*%ad,i64 16
%an=bitcast i8*%am to i32*
store i32 2,i32*%an,align 4
%ao=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ap=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1319(i8*inreg%ao)
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=call fastcc i8*%as(i8*inreg%au,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fV,i64 0,i32 2)to i8*))
%aw=getelementptr inbounds i8,i8*%av,i64 16
%ax=bitcast i8*%aw to i8*(i8*,i8*)**
%ay=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ax,align 8
%az=bitcast i8*%av to i8**
%aA=load i8*,i8**%az,align 8
%aB=load i8*,i8**%e,align 8
%aC=call fastcc i8*%ay(i8*inreg%aA,i8*inreg%aB)
store i8*%aC,i8**%h,align 8
%aD=call i8*@sml_alloc(i32 inreg 28)#0
%aE=getelementptr inbounds i8,i8*%aD,i64 -4
%aF=bitcast i8*%aE to i32*
store i32 1342177304,i32*%aF,align 4
store i8*%aD,i8**%c,align 8
%aG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aH=bitcast i8*%aD to i8**
store i8*%aG,i8**%aH,align 8
%aI=load i8*,i8**%e,align 8
%aJ=getelementptr inbounds i8,i8*%aD,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aM=getelementptr inbounds i8,i8*%aD,i64 16
%aN=bitcast i8*%aM to i8**
store i8*%aL,i8**%aN,align 8
%aO=getelementptr inbounds i8,i8*%aD,i64 24
%aP=bitcast i8*%aO to i32*
store i32 7,i32*%aP,align 4
%aQ=call i8*@sml_alloc(i32 inreg 20)#0
%aR=getelementptr inbounds i8,i8*%aQ,i64 -4
%aS=bitcast i8*%aR to i32*
store i32 1342177296,i32*%aS,align 4
store i8*%aQ,i8**%h,align 8
%aT=load i8*,i8**%c,align 8
%aU=bitcast i8*%aQ to i8**
store i8*%aT,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aQ,i64 8
%aW=bitcast i8*%aV to i8**
store i8*null,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aQ,i64 16
%aY=bitcast i8*%aX to i32*
store i32 3,i32*%aY,align 4
%aZ=bitcast i8**%g to i8***
%a0=load i8**,i8***%aZ,align 8
store i8*null,i8**%g,align 8
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%c,align 8
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
store i8*%a2,i8**%f,align 8
%a5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a8=getelementptr inbounds i8,i8*%a2,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a2,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=call i8*@sml_alloc(i32 inreg 20)#0
%bd=getelementptr inbounds i8,i8*%bc,i64 -4
%be=bitcast i8*%bd to i32*
store i32 1342177296,i32*%be,align 4
store i8*%bc,i8**%g,align 8
%bf=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bg=bitcast i8*%bc to i8**
store i8*%bf,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%bc,i64 8
%bi=bitcast i8*%bh to i8**
store i8*null,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bc,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%c,align 8
%bo=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=getelementptr inbounds i8,i8*%bl,i64 16
%bu=bitcast i8*%bt to i32*
store i32 3,i32*%bu,align 4
%bv=call i8*@sml_alloc(i32 inreg 20)#0
%bw=getelementptr inbounds i8,i8*%bv,i64 -4
%bx=bitcast i8*%bw to i32*
store i32 1342177296,i32*%bx,align 4
store i8*%bv,i8**%d,align 8
%by=getelementptr inbounds i8,i8*%bv,i64 4
%bz=bitcast i8*%by to i32*
store i32 0,i32*%bz,align 1
%bA=bitcast i8*%bv to i32*
store i32 16,i32*%bA,align 4
%bB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bC=getelementptr inbounds i8,i8*%bv,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bv,i64 16
%bF=bitcast i8*%bE to i32*
store i32 2,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=load i8*,i8**%f,align 8
%bK=bitcast i8*%bG to i8**
store i8*%bJ,i8**%bK,align 8
%bL=load i8*,i8**%d,align 8
%bM=getelementptr inbounds i8,i8*%bG,i64 8
%bN=bitcast i8*%bM to i8**
store i8*%bL,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bG,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
ret i8*%bG
bQ:
%bR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bS=getelementptr inbounds i8,i8*%bR,i64 8
%bT=bitcast i8*%bS to i8**
%bU=load i8*,i8**%bT,align 8
store i8*%bU,i8**%d,align 8
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
%bY=load i8*,i8**%d,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%c,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
ret i8*%bV
b5:
%b6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b7=getelementptr inbounds i8,i8*%b6,i64 8
%b8=bitcast i8*%b7 to i8**
%b9=load i8*,i8**%b8,align 8
store i8*%b9,i8**%c,align 8
%ca=getelementptr inbounds i8,i8*%n,i64 8
%cb=bitcast i8*%ca to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%d,align 8
%cd=call i8*@sml_alloc(i32 inreg 20)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177296,i32*%cf,align 4
%cg=load i8*,i8**%c,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=load i8*,i8**%d,align 8
%cj=getelementptr inbounds i8,i8*%cd,i64 8
%ck=bitcast i8*%cj to i8**
store i8*%ci,i8**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cd,i64 16
%cm=bitcast i8*%cl to i32*
store i32 3,i32*%cm,align 4
ret i8*%cd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8getSpineE_2388(i8*inreg%a)unnamed_addr#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
%o=icmp eq i32%n,0
br i1%o,label%z,label%p
p:
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=load i8*,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*null,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
ret i8*%q
z:
%A=getelementptr inbounds i8,i8*%k,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%b,align 8
%F=getelementptr inbounds i8,i8*%C,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%c,align 8
%I=call fastcc i8*@_SMLFN4List1_VE(i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%P=call fastcc i8*@_SMLLLN12ElaborateSQL8getSpineE_2388(i8*inreg%O)
store i8*%P,i8**%b,align 8
%Q=call i8*@sml_alloc(i32 inreg 20)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177296,i32*%S,align 4
store i8*%Q,i8**%e,align 8
%T=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%U=bitcast i8*%Q to i8**
store i8*%T,i8**%U,align 8
%V=getelementptr inbounds i8,i8*%Q,i64 8
%W=bitcast i8*%V to i8**
store i8*null,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%Q,i64 16
%Y=bitcast i8*%X to i32*
store i32 3,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%b,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%e,align 8
%af=getelementptr inbounds i8,i8*%Z,i64 8
%ag=bitcast i8*%af to i8**
store i8*%ae,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%Z,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=load i8*,i8**%d,align 8
%ak=tail call fastcc i8*%L(i8*inreg%aj,i8*inreg%Z)
ret i8*%ak
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2406(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2408(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2410(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%c,align 8
%w=bitcast i8*%s to i32*
%x=load i32,i32*%w,align 4
switch i32%x,label%f2[
i32 0,label%e5
i32 29,label%y
]
y:
%z=getelementptr inbounds i8,i8*%s,i64 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
%C=bitcast i8*%B to i8**
%D=load i8*,i8**%C,align 8
%E=bitcast i8*%D to i32*
%F=load i32,i32*%E,align 4
%G=icmp eq i32%F,0
br i1%G,label%H,label%f2
H:
%I=getelementptr inbounds i8,i8*%D,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%c,align 8
%L=getelementptr inbounds i8,i8*%B,i64 8
%M=bitcast i8*%L to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%d,align 8
%O=load i8*,i8**%g,align 8
%P=getelementptr inbounds i8,i8*%O,i64 32
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=getelementptr inbounds i8,i8*%O,i64 16
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%f,align 8
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%d,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
%af=load i8*,i8**%e,align 8
%ag=load i8*,i8**%f,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%ah=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%af,i8*inreg%ag,i8*inreg%V)
%ai=getelementptr inbounds i8,i8*%ah,i64 8
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8*%ah to i32*
%am=load i32,i32*%al,align 4
%an=bitcast i8*%ak to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%e,align 8
%as=load i8*,i8**%g,align 8
%at=getelementptr inbounds i8,i8*%as,i64 40
%au=bitcast i8*%at to i32*
%av=load i32,i32*%au,align 4
%aw=icmp eq i32%av,%am
br i1%aw,label%ax,label%aM
ax:
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
store i8*%aA,i8**%d,align 8
%aB=call i8*@sml_alloc(i32 inreg 20)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177296,i32*%aD,align 4
%aE=load i8*,i8**%d,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%e,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aB,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=bitcast i8**%g to i8***
br label%dG
aM:
store i8*null,i8**%e,align 8
%aN=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2372(i8*inreg%ar)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%d,align 8
%aU=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg%aT)
store i8*%aU,i8**%e,align 8
%aV=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%aV,i8**%f,align 8
%aW=load i8*,i8**%g,align 8
%aX=getelementptr inbounds i8,i8*%aW,i64 40
%aY=bitcast i8*%aX to i32*
%aZ=load i32,i32*%aY,align 4
switch i32%aZ,label%a0[
i32 2,label%bq
i32 9,label%bp
i32 3,label%bo
i32 6,label%bn
i32 5,label%bm
i32 4,label%bl
i32 8,label%bk
i32 7,label%bj
i32 0,label%bi
i32 1,label%br
]
a0:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%a1=load i8*,i8**@_SMLZ5Match,align 8
store i8*%a1,i8**%c,align 8
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
store i8*%a2,i8**%d,align 8
%a5=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@hY,i64 0,i32 2,i64 0),i8**%a8,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 16
%ba=bitcast i8*%a9 to i32*
store i32 3,i32*%ba,align 4
%bb=call i8*@sml_alloc(i32 inreg 60)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177336,i32*%bd,align 4
%be=getelementptr inbounds i8,i8*%bb,i64 56
%bf=bitcast i8*%be to i32*
store i32 1,i32*%bf,align 4
%bg=load i8*,i8**%d,align 8
%bh=bitcast i8*%bb to i8**
store i8*%bg,i8**%bh,align 8
call void@sml_raise(i8*inreg%bb)#1
unreachable
bi:
br label%br
bj:
br label%br
bk:
br label%br
bl:
br label%br
bm:
br label%br
bn:
br label%br
bo:
br label%br
bp:
br label%br
bq:
br label%br
br:
%bs=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fM,i64 0,i32 2)to i8*),%bi],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fJ,i64 0,i32 2)to i8*),%bj],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fG,i64 0,i32 2)to i8*),%bk],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fD,i64 0,i32 2)to i8*),%bl],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fA,i64 0,i32 2)to i8*),%bm],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fx,i64 0,i32 2)to i8*),%bn],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fu,i64 0,i32 2)to i8*),%bo],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fr,i64 0,i32 2)to i8*),%bp],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fo,i64 0,i32 2)to i8*),%bq],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fQ,i64 0,i32 2)to i8*),%aM]
%bt=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%bs)
%bu=getelementptr inbounds i8,i8*%bt,i64 16
%bv=bitcast i8*%bu to i8*(i8*,i8*)**
%bw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bv,align 8
%bx=bitcast i8*%bt to i8**
%by=load i8*,i8**%bx,align 8
%bz=load i8*,i8**%d,align 8
%bA=call fastcc i8*%bw(i8*inreg%by,i8*inreg%bz)
store i8*%bA,i8**%h,align 8
%bB=call i8*@sml_alloc(i32 inreg 20)#0
%bC=getelementptr inbounds i8,i8*%bB,i64 -4
%bD=bitcast i8*%bC to i32*
store i32 1342177296,i32*%bD,align 4
store i8*%bB,i8**%i,align 8
%bE=getelementptr inbounds i8,i8*%bB,i64 4
%bF=bitcast i8*%bE to i32*
store i32 0,i32*%bF,align 1
%bG=bitcast i8*%bB to i32*
store i32 2,i32*%bG,align 4
%bH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bI=getelementptr inbounds i8,i8*%bB,i64 8
%bJ=bitcast i8*%bI to i8**
store i8*%bH,i8**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bB,i64 16
%bL=bitcast i8*%bK to i32*
store i32 2,i32*%bL,align 4
%bM=call i8*@sml_alloc(i32 inreg 20)#0
%bN=getelementptr inbounds i8,i8*%bM,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
store i8*%bM,i8**%h,align 8
%bP=load i8*,i8**%f,align 8
%bQ=bitcast i8*%bM to i8**
store i8*%bP,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bM,i64 8
%bS=bitcast i8*%bR to i8**
store i8*null,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bM,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%j,align 8
%bY=getelementptr inbounds i8,i8*%bV,i64 4
%bZ=bitcast i8*%bY to i32*
store i32 0,i32*%bZ,align 1
%b0=bitcast i8*%bV to i32*
store i32 2,i32*%b0,align 4
%b1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b2=getelementptr inbounds i8,i8*%bV,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bV,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 2,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
store i8*%b6,i8**%h,align 8
%b9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cc=getelementptr inbounds i8,i8*%b6,i64 8
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=load i8*,i8**%d,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 16
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=getelementptr inbounds i8,i8*%b6,i64 24
%ci=bitcast i8*%ch to i32*
store i32 7,i32*%ci,align 4
%cj=call i8*@sml_alloc(i32 inreg 20)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177296,i32*%cl,align 4
store i8*%cj,i8**%i,align 8
%cm=getelementptr inbounds i8,i8*%cj,i64 4
%cn=bitcast i8*%cm to i32*
store i32 0,i32*%cn,align 1
%co=bitcast i8*%cj to i32*
store i32 1,i32*%co,align 4
%cp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cq=getelementptr inbounds i8,i8*%cj,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cj,i64 16
%ct=bitcast i8*%cs to i32*
store i32 2,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 28)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177304,i32*%cw,align 4
store i8*%cu,i8**%h,align 8
%cx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cy=bitcast i8*%cu to i8**
store i8*%cx,i8**%cy,align 8
%cz=load i8*,i8**%d,align 8
%cA=getelementptr inbounds i8,i8*%cu,i64 8
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 16
%cE=bitcast i8*%cD to i8**
store i8*%cC,i8**%cE,align 8
%cF=getelementptr inbounds i8,i8*%cu,i64 24
%cG=bitcast i8*%cF to i32*
store i32 7,i32*%cG,align 4
%cH=call i8*@sml_alloc(i32 inreg 20)#0
%cI=getelementptr inbounds i8,i8*%cH,i64 -4
%cJ=bitcast i8*%cI to i32*
store i32 1342177296,i32*%cJ,align 4
store i8*%cH,i8**%i,align 8
%cK=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cL=bitcast i8*%cH to i8**
store i8*%cK,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cH,i64 8
%cN=bitcast i8*%cM to i8**
store i8*null,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cH,i64 16
%cP=bitcast i8*%cO to i32*
store i32 3,i32*%cP,align 4
%cQ=bitcast i8**%g to i8***
%cR=load i8**,i8***%cQ,align 8
%cS=load i8*,i8**%cR,align 8
store i8*%cS,i8**%e,align 8
%cT=call i8*@sml_alloc(i32 inreg 20)#0
%cU=getelementptr inbounds i8,i8*%cT,i64 -4
%cV=bitcast i8*%cU to i32*
store i32 1342177296,i32*%cV,align 4
store i8*%cT,i8**%h,align 8
%cW=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cX=bitcast i8*%cT to i8**
store i8*%cW,i8**%cX,align 8
%cY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cZ=getelementptr inbounds i8,i8*%cT,i64 8
%c0=bitcast i8*%cZ to i8**
store i8*%cY,i8**%c0,align 8
%c1=getelementptr inbounds i8,i8*%cT,i64 16
%c2=bitcast i8*%c1 to i32*
store i32 3,i32*%c2,align 4
%c3=load i8*,i8**%g,align 8
%c4=getelementptr inbounds i8,i8*%c3,i64 40
%c5=bitcast i8*%c4 to i32*
%c6=load i32,i32*%c5,align 4
%c7=call i8*@sml_alloc(i32 inreg 28)#0
%c8=getelementptr inbounds i8,i8*%c7,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 1342177304,i32*%c9,align 4
store i8*%c7,i8**%e,align 8
%da=getelementptr inbounds i8,i8*%c7,i64 12
%db=bitcast i8*%da to i32*
store i32 0,i32*%db,align 1
%dc=load i8*,i8**%f,align 8
%dd=bitcast i8*%c7 to i8**
store i8*null,i8**%f,align 8
store i8*%dc,i8**%dd,align 8
%de=getelementptr inbounds i8,i8*%c7,i64 8
%df=bitcast i8*%de to i32*
store i32%c6,i32*%df,align 4
%dg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dh=getelementptr inbounds i8,i8*%c7,i64 16
%di=bitcast i8*%dh to i8**
store i8*%dg,i8**%di,align 8
%dj=getelementptr inbounds i8,i8*%c7,i64 24
%dk=bitcast i8*%dj to i32*
store i32 5,i32*%dk,align 4
%dl=call i8*@sml_alloc(i32 inreg 20)#0
%dm=getelementptr inbounds i8,i8*%dl,i64 -4
%dn=bitcast i8*%dm to i32*
store i32 1342177296,i32*%dn,align 4
store i8*%dl,i8**%d,align 8
%do=getelementptr inbounds i8,i8*%dl,i64 4
%dp=bitcast i8*%do to i32*
store i32 0,i32*%dp,align 1
%dq=bitcast i8*%dl to i32*
store i32 8,i32*%dq,align 4
%dr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ds=getelementptr inbounds i8,i8*%dl,i64 8
%dt=bitcast i8*%ds to i8**
store i8*%dr,i8**%dt,align 8
%du=getelementptr inbounds i8,i8*%dl,i64 16
%dv=bitcast i8*%du to i32*
store i32 2,i32*%dv,align 4
%dw=call i8*@sml_alloc(i32 inreg 20)#0
%dx=getelementptr inbounds i8,i8*%dw,i64 -4
%dy=bitcast i8*%dx to i32*
store i32 1342177296,i32*%dy,align 4
%dz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dA=bitcast i8*%dw to i8**
store i8*%dz,i8**%dA,align 8
%dB=load i8*,i8**%d,align 8
%dC=getelementptr inbounds i8,i8*%dw,i64 8
%dD=bitcast i8*%dC to i8**
store i8*%dB,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dw,i64 16
%dF=bitcast i8*%dE to i32*
store i32 3,i32*%dF,align 4
br label%dG
dG:
%dH=phi i8***[%cQ,%br],[%aL,%ax]
%dI=phi i8*[%dB,%br],[%aG,%ax]
%dJ=phi i8*[%dz,%br],[%aE,%ax]
store i8*%dJ,i8**%d,align 8
store i8*%dI,i8**%e,align 8
%dK=call i8*@sml_alloc(i32 inreg 20)#0
%dL=getelementptr inbounds i8,i8*%dK,i64 -4
%dM=bitcast i8*%dL to i32*
store i32 1342177296,i32*%dM,align 4
store i8*%dK,i8**%f,align 8
%dN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dO=bitcast i8*%dK to i8**
store i8*%dN,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dK,i64 8
%dQ=bitcast i8*%dP to i8**
store i8*null,i8**%dQ,align 8
%dR=getelementptr inbounds i8,i8*%dK,i64 16
%dS=bitcast i8*%dR to i32*
store i32 3,i32*%dS,align 4
%dT=call i8*@sml_alloc(i32 inreg 20)#0
%dU=getelementptr inbounds i8,i8*%dT,i64 -4
%dV=bitcast i8*%dU to i32*
store i32 1342177296,i32*%dV,align 4
store i8*%dT,i8**%d,align 8
%dW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dX=bitcast i8*%dT to i8**
store i8*%dW,i8**%dX,align 8
%dY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dZ=getelementptr inbounds i8,i8*%dT,i64 8
%d0=bitcast i8*%dZ to i8**
store i8*%dY,i8**%d0,align 8
%d1=getelementptr inbounds i8,i8*%dT,i64 16
%d2=bitcast i8*%d1 to i32*
store i32 3,i32*%d2,align 4
%d3=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%d4=getelementptr inbounds i8,i8*%d3,i64 16
%d5=bitcast i8*%d4 to i8*(i8*,i8*)**
%d6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d5,align 8
%d7=bitcast i8*%d3 to i8**
%d8=load i8*,i8**%d7,align 8
store i8*%d8,i8**%c,align 8
%d9=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ea=getelementptr inbounds i8,i8*%d9,i64 16
%eb=bitcast i8*%ea to i8*(i8*,i8*)**
%ec=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eb,align 8
%ed=bitcast i8*%d9 to i8**
%ee=load i8*,i8**%ed,align 8
%ef=call fastcc i8*%ec(i8*inreg%ee,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@hZ,i64 0,i32 2)to i8*))
%eg=getelementptr inbounds i8,i8*%ef,i64 16
%eh=bitcast i8*%eg to i8*(i8*,i8*)**
%ei=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eh,align 8
%ej=bitcast i8*%ef to i8**
%ek=load i8*,i8**%ej,align 8
%el=load i8*,i8**%d,align 8
%em=call fastcc i8*%ei(i8*inreg%ek,i8*inreg%el)
%en=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eo=call fastcc i8*%d6(i8*inreg%en,i8*inreg%em)
store i8*%eo,i8**%c,align 8
%ep=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%eq=getelementptr inbounds i8,i8*%ep,i64 16
%er=bitcast i8*%eq to i8*(i8*,i8*)**
%es=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%er,align 8
%et=bitcast i8*%ep to i8**
%eu=load i8*,i8**%et,align 8
%ev=call fastcc i8*%es(i8*inreg%eu,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h0,i64 0,i32 2)to i8*))
%ew=getelementptr inbounds i8,i8*%ev,i64 16
%ex=bitcast i8*%ew to i8*(i8*,i8*)**
%ey=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ex,align 8
%ez=bitcast i8*%ev to i8**
%eA=load i8*,i8**%ez,align 8
%eB=load i8**,i8***%dH,align 8
store i8*null,i8**%g,align 8
%eC=load i8*,i8**%eB,align 8
%eD=call fastcc i8*%ey(i8*inreg%eA,i8*inreg%eC)
%eE=getelementptr inbounds i8,i8*%eD,i64 16
%eF=bitcast i8*%eE to i8*(i8*,i8*)**
%eG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eF,align 8
%eH=bitcast i8*%eD to i8**
%eI=load i8*,i8**%eH,align 8
%eJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eK=call fastcc i8*%eG(i8*inreg%eI,i8*inreg%eJ)
store i8*%eK,i8**%d,align 8
%eL=call i8*@sml_alloc(i32 inreg 20)#0
%eM=getelementptr inbounds i8,i8*%eL,i64 -4
%eN=bitcast i8*%eM to i32*
store i32 1342177296,i32*%eN,align 4
store i8*%eL,i8**%f,align 8
%eO=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eP=bitcast i8*%eL to i8**
store i8*%eO,i8**%eP,align 8
%eQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eR=getelementptr inbounds i8,i8*%eL,i64 8
%eS=bitcast i8*%eR to i8**
store i8*%eQ,i8**%eS,align 8
%eT=getelementptr inbounds i8,i8*%eL,i64 16
%eU=bitcast i8*%eT to i32*
store i32 3,i32*%eU,align 4
%eV=call i8*@sml_alloc(i32 inreg 20)#0
%eW=getelementptr inbounds i8,i8*%eV,i64 -4
%eX=bitcast i8*%eW to i32*
store i32 1342177296,i32*%eX,align 4
%eY=load i8*,i8**%f,align 8
%eZ=bitcast i8*%eV to i8**
store i8*%eY,i8**%eZ,align 8
%e0=load i8*,i8**%e,align 8
%e1=getelementptr inbounds i8,i8*%eV,i64 8
%e2=bitcast i8*%e1 to i8**
store i8*%e0,i8**%e2,align 8
%e3=getelementptr inbounds i8,i8*%eV,i64 16
%e4=bitcast i8*%e3 to i32*
store i32 3,i32*%e4,align 4
ret i8*%eV
e5:
%e6=getelementptr inbounds i8,i8*%s,i64 8
%e7=bitcast i8*%e6 to i8**
%e8=load i8*,i8**%e7,align 8
%e9=bitcast i8*%e8 to i8**
%fa=load i8*,i8**%e9,align 8
%fb=icmp eq i8*%fa,null
br i1%fb,label%f2,label%fc
fc:
%fd=bitcast i8*%fa to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%d,align 8
%ff=getelementptr inbounds i8,i8*%fa,i64 8
%fg=bitcast i8*%ff to i8**
%fh=load i8*,i8**%fg,align 8
%fi=icmp eq i8*%fh,null
br i1%fi,label%fj,label%f1
fj:
%fk=getelementptr inbounds i8,i8*%e8,i64 8
%fl=bitcast i8*%fk to i8**
%fm=load i8*,i8**%fl,align 8
store i8*%fm,i8**%c,align 8
%fn=load i8*,i8**%g,align 8
%fo=getelementptr inbounds i8,i8*%fn,i64 32
%fp=bitcast i8*%fo to i8**
%fq=load i8*,i8**%fp,align 8
%fr=getelementptr inbounds i8,i8*%fn,i64 16
%fs=bitcast i8*%fr to i8**
%ft=load i8*,i8**%fs,align 8
%fu=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%fq,i8*inreg%ft)
%fv=getelementptr inbounds i8,i8*%fu,i64 16
%fw=bitcast i8*%fv to i8*(i8*,i8*)**
%fx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fw,align 8
%fy=bitcast i8*%fu to i8**
%fz=load i8*,i8**%fy,align 8
store i8*%fz,i8**%e,align 8
%fA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fB=getelementptr inbounds i8,i8*%fA,i64 40
%fC=bitcast i8*%fB to i32*
%fD=load i32,i32*%fC,align 4
%fE=call i8*@sml_alloc(i32 inreg 4)#0
%fF=bitcast i8*%fE to i32*
%fG=getelementptr inbounds i8,i8*%fE,i64 -4
%fH=bitcast i8*%fG to i32*
store i32 4,i32*%fH,align 4
store i32%fD,i32*%fF,align 4
%fI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fJ=call fastcc i8*%fx(i8*inreg%fI,i8*inreg%fE)
%fK=getelementptr inbounds i8,i8*%fJ,i64 16
%fL=bitcast i8*%fK to i8*(i8*,i8*)**
%fM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fL,align 8
%fN=bitcast i8*%fJ to i8**
%fO=load i8*,i8**%fN,align 8
store i8*%fO,i8**%e,align 8
%fP=call i8*@sml_alloc(i32 inreg 20)#0
%fQ=getelementptr inbounds i8,i8*%fP,i64 -4
%fR=bitcast i8*%fQ to i32*
store i32 1342177296,i32*%fR,align 4
%fS=load i8*,i8**%d,align 8
%fT=bitcast i8*%fP to i8**
store i8*%fS,i8**%fT,align 8
%fU=load i8*,i8**%c,align 8
%fV=getelementptr inbounds i8,i8*%fP,i64 8
%fW=bitcast i8*%fV to i8**
store i8*%fU,i8**%fW,align 8
%fX=getelementptr inbounds i8,i8*%fP,i64 16
%fY=bitcast i8*%fX to i32*
store i32 3,i32*%fY,align 4
%fZ=load i8*,i8**%e,align 8
%f0=tail call fastcc i8*%fM(i8*inreg%fZ,i8*inreg%fP)
ret i8*%f0
f1:
store i8*null,i8**%d,align 8
br label%f2
f2:
%f3=load i8*,i8**%g,align 8
%f4=getelementptr inbounds i8,i8*%f3,i64 24
%f5=bitcast i8*%f4 to i8**
%f6=load i8*,i8**%f5,align 8
%f7=getelementptr inbounds i8,i8*%f6,i64 16
%f8=bitcast i8*%f7 to i8*(i8*,i8*)**
%f9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%f8,align 8
%ga=bitcast i8*%f6 to i8**
%gb=load i8*,i8**%ga,align 8
%gc=call fastcc i8*%f9(i8*inreg%gb,i8*inreg%s)
store i8*%gc,i8**%d,align 8
%gd=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%gd,i8**%e,align 8
%ge=load i8*,i8**%g,align 8
%gf=getelementptr inbounds i8,i8*%ge,i64 40
%gg=bitcast i8*%gf to i32*
%gh=load i32,i32*%gg,align 4
switch i32%gh,label%gi[
i32 2,label%gI
i32 9,label%gH
i32 3,label%gG
i32 6,label%gF
i32 5,label%gE
i32 4,label%gD
i32 8,label%gC
i32 7,label%gB
i32 0,label%gA
i32 1,label%gJ
]
gi:
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
call void@sml_matchcomp_bug()
%gj=load i8*,i8**@_SMLZ5Match,align 8
store i8*%gj,i8**%c,align 8
%gk=call i8*@sml_alloc(i32 inreg 20)#0
%gl=getelementptr inbounds i8,i8*%gk,i64 -4
%gm=bitcast i8*%gl to i32*
store i32 1342177296,i32*%gm,align 4
store i8*%gk,i8**%d,align 8
%gn=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%go=bitcast i8*%gk to i8**
store i8*%gn,i8**%go,align 8
%gp=getelementptr inbounds i8,i8*%gk,i64 8
%gq=bitcast i8*%gp to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[72x i8]}>,<{[4x i8],i32,[72x i8]}>*@hY,i64 0,i32 2,i64 0),i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gk,i64 16
%gs=bitcast i8*%gr to i32*
store i32 3,i32*%gs,align 4
%gt=call i8*@sml_alloc(i32 inreg 60)#0
%gu=getelementptr inbounds i8,i8*%gt,i64 -4
%gv=bitcast i8*%gu to i32*
store i32 1342177336,i32*%gv,align 4
%gw=getelementptr inbounds i8,i8*%gt,i64 56
%gx=bitcast i8*%gw to i32*
store i32 1,i32*%gx,align 4
%gy=load i8*,i8**%d,align 8
%gz=bitcast i8*%gt to i8**
store i8*%gy,i8**%gz,align 8
call void@sml_raise(i8*inreg%gt)#1
unreachable
gA:
br label%gJ
gB:
br label%gJ
gC:
br label%gJ
gD:
br label%gJ
gE:
br label%gJ
gF:
br label%gJ
gG:
br label%gJ
gH:
br label%gJ
gI:
br label%gJ
gJ:
%gK=phi i8*[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fM,i64 0,i32 2)to i8*),%gA],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fJ,i64 0,i32 2)to i8*),%gB],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fG,i64 0,i32 2)to i8*),%gC],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fD,i64 0,i32 2)to i8*),%gD],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fA,i64 0,i32 2)to i8*),%gE],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fx,i64 0,i32 2)to i8*),%gF],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fu,i64 0,i32 2)to i8*),%gG],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fr,i64 0,i32 2)to i8*),%gH],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fo,i64 0,i32 2)to i8*),%gI],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@fQ,i64 0,i32 2)to i8*),%f2]
%gL=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg%gK)
%gM=getelementptr inbounds i8,i8*%gL,i64 16
%gN=bitcast i8*%gM to i8*(i8*,i8*)**
%gO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gN,align 8
%gP=bitcast i8*%gL to i8**
%gQ=load i8*,i8**%gP,align 8
%gR=load i8*,i8**%c,align 8
%gS=call fastcc i8*%gO(i8*inreg%gQ,i8*inreg%gR)
store i8*%gS,i8**%f,align 8
%gT=call i8*@sml_alloc(i32 inreg 20)#0
%gU=getelementptr inbounds i8,i8*%gT,i64 -4
%gV=bitcast i8*%gU to i32*
store i32 1342177296,i32*%gV,align 4
store i8*%gT,i8**%h,align 8
%gW=getelementptr inbounds i8,i8*%gT,i64 4
%gX=bitcast i8*%gW to i32*
store i32 0,i32*%gX,align 1
%gY=bitcast i8*%gT to i32*
store i32 2,i32*%gY,align 4
%gZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%g0=getelementptr inbounds i8,i8*%gT,i64 8
%g1=bitcast i8*%g0 to i8**
store i8*%gZ,i8**%g1,align 8
%g2=getelementptr inbounds i8,i8*%gT,i64 16
%g3=bitcast i8*%g2 to i32*
store i32 2,i32*%g3,align 4
%g4=call i8*@sml_alloc(i32 inreg 20)#0
%g5=getelementptr inbounds i8,i8*%g4,i64 -4
%g6=bitcast i8*%g5 to i32*
store i32 1342177296,i32*%g6,align 4
store i8*%g4,i8**%f,align 8
%g7=load i8*,i8**%e,align 8
%g8=bitcast i8*%g4 to i8**
store i8*%g7,i8**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g4,i64 8
%ha=bitcast i8*%g9 to i8**
store i8*null,i8**%ha,align 8
%hb=getelementptr inbounds i8,i8*%g4,i64 16
%hc=bitcast i8*%hb to i32*
store i32 3,i32*%hc,align 4
%hd=call i8*@sml_alloc(i32 inreg 20)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177296,i32*%hf,align 4
store i8*%hd,i8**%i,align 8
%hg=getelementptr inbounds i8,i8*%hd,i64 4
%hh=bitcast i8*%hg to i32*
store i32 0,i32*%hh,align 1
%hi=bitcast i8*%hd to i32*
store i32 2,i32*%hi,align 4
%hj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hk=getelementptr inbounds i8,i8*%hd,i64 8
%hl=bitcast i8*%hk to i8**
store i8*%hj,i8**%hl,align 8
%hm=getelementptr inbounds i8,i8*%hd,i64 16
%hn=bitcast i8*%hm to i32*
store i32 2,i32*%hn,align 4
%ho=call i8*@sml_alloc(i32 inreg 28)#0
%hp=getelementptr inbounds i8,i8*%ho,i64 -4
%hq=bitcast i8*%hp to i32*
store i32 1342177304,i32*%hq,align 4
store i8*%ho,i8**%f,align 8
%hr=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hs=bitcast i8*%ho to i8**
store i8*%hr,i8**%hs,align 8
%ht=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%hu=getelementptr inbounds i8,i8*%ho,i64 8
%hv=bitcast i8*%hu to i8**
store i8*%ht,i8**%hv,align 8
%hw=load i8*,i8**%c,align 8
%hx=getelementptr inbounds i8,i8*%ho,i64 16
%hy=bitcast i8*%hx to i8**
store i8*%hw,i8**%hy,align 8
%hz=getelementptr inbounds i8,i8*%ho,i64 24
%hA=bitcast i8*%hz to i32*
store i32 7,i32*%hA,align 4
%hB=call i8*@sml_alloc(i32 inreg 20)#0
%hC=getelementptr inbounds i8,i8*%hB,i64 -4
%hD=bitcast i8*%hC to i32*
store i32 1342177296,i32*%hD,align 4
store i8*%hB,i8**%h,align 8
%hE=getelementptr inbounds i8,i8*%hB,i64 4
%hF=bitcast i8*%hE to i32*
store i32 0,i32*%hF,align 1
%hG=bitcast i8*%hB to i32*
store i32 1,i32*%hG,align 4
%hH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hI=getelementptr inbounds i8,i8*%hB,i64 8
%hJ=bitcast i8*%hI to i8**
store i8*%hH,i8**%hJ,align 8
%hK=getelementptr inbounds i8,i8*%hB,i64 16
%hL=bitcast i8*%hK to i32*
store i32 2,i32*%hL,align 4
%hM=call i8*@sml_alloc(i32 inreg 28)#0
%hN=getelementptr inbounds i8,i8*%hM,i64 -4
%hO=bitcast i8*%hN to i32*
store i32 1342177304,i32*%hO,align 4
store i8*%hM,i8**%f,align 8
%hP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hQ=bitcast i8*%hM to i8**
store i8*%hP,i8**%hQ,align 8
%hR=load i8*,i8**%c,align 8
%hS=getelementptr inbounds i8,i8*%hM,i64 8
%hT=bitcast i8*%hS to i8**
store i8*%hR,i8**%hT,align 8
%hU=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hV=getelementptr inbounds i8,i8*%hM,i64 16
%hW=bitcast i8*%hV to i8**
store i8*%hU,i8**%hW,align 8
%hX=getelementptr inbounds i8,i8*%hM,i64 24
%hY=bitcast i8*%hX to i32*
store i32 7,i32*%hY,align 4
%hZ=call i8*@sml_alloc(i32 inreg 20)#0
%h0=getelementptr inbounds i8,i8*%hZ,i64 -4
%h1=bitcast i8*%h0 to i32*
store i32 1342177296,i32*%h1,align 4
store i8*%hZ,i8**%h,align 8
%h2=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%h3=bitcast i8*%hZ to i8**
store i8*%h2,i8**%h3,align 8
%h4=getelementptr inbounds i8,i8*%hZ,i64 8
%h5=bitcast i8*%h4 to i8**
store i8*null,i8**%h5,align 8
%h6=getelementptr inbounds i8,i8*%hZ,i64 16
%h7=bitcast i8*%h6 to i32*
store i32 3,i32*%h7,align 4
%h8=bitcast i8**%g to i8***
%h9=load i8**,i8***%h8,align 8
%ia=load i8*,i8**%h9,align 8
store i8*%ia,i8**%d,align 8
%ib=call i8*@sml_alloc(i32 inreg 20)#0
%ic=getelementptr inbounds i8,i8*%ib,i64 -4
%id=bitcast i8*%ic to i32*
store i32 1342177296,i32*%id,align 4
store i8*%ib,i8**%f,align 8
%ie=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%if=bitcast i8*%ib to i8**
store i8*%ie,i8**%if,align 8
%ig=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ih=getelementptr inbounds i8,i8*%ib,i64 8
%ii=bitcast i8*%ih to i8**
store i8*%ig,i8**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ib,i64 16
%ik=bitcast i8*%ij to i32*
store i32 3,i32*%ik,align 4
%il=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%im=getelementptr inbounds i8,i8*%il,i64 40
%in=bitcast i8*%im to i32*
%io=load i32,i32*%in,align 4
%ip=call i8*@sml_alloc(i32 inreg 28)#0
%iq=getelementptr inbounds i8,i8*%ip,i64 -4
%ir=bitcast i8*%iq to i32*
store i32 1342177304,i32*%ir,align 4
store i8*%ip,i8**%d,align 8
%is=getelementptr inbounds i8,i8*%ip,i64 12
%it=bitcast i8*%is to i32*
store i32 0,i32*%it,align 1
%iu=load i8*,i8**%e,align 8
%iv=bitcast i8*%ip to i8**
store i8*null,i8**%e,align 8
store i8*%iu,i8**%iv,align 8
%iw=getelementptr inbounds i8,i8*%ip,i64 8
%ix=bitcast i8*%iw to i32*
store i32%io,i32*%ix,align 4
%iy=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%iz=getelementptr inbounds i8,i8*%ip,i64 16
%iA=bitcast i8*%iz to i8**
store i8*%iy,i8**%iA,align 8
%iB=getelementptr inbounds i8,i8*%ip,i64 24
%iC=bitcast i8*%iB to i32*
store i32 5,i32*%iC,align 4
%iD=call i8*@sml_alloc(i32 inreg 20)#0
%iE=getelementptr inbounds i8,i8*%iD,i64 -4
%iF=bitcast i8*%iE to i32*
store i32 1342177296,i32*%iF,align 4
store i8*%iD,i8**%c,align 8
%iG=getelementptr inbounds i8,i8*%iD,i64 4
%iH=bitcast i8*%iG to i32*
store i32 0,i32*%iH,align 1
%iI=bitcast i8*%iD to i32*
store i32 8,i32*%iI,align 4
%iJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iK=getelementptr inbounds i8,i8*%iD,i64 8
%iL=bitcast i8*%iK to i8**
store i8*%iJ,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iD,i64 16
%iN=bitcast i8*%iM to i32*
store i32 2,i32*%iN,align 4
%iO=call i8*@sml_alloc(i32 inreg 20)#0
%iP=getelementptr inbounds i8,i8*%iO,i64 -4
%iQ=bitcast i8*%iP to i32*
store i32 1342177296,i32*%iQ,align 4
%iR=load i8*,i8**%f,align 8
%iS=bitcast i8*%iO to i8**
store i8*%iR,i8**%iS,align 8
%iT=load i8*,i8**%c,align 8
%iU=getelementptr inbounds i8,i8*%iO,i64 8
%iV=bitcast i8*%iU to i8**
store i8*%iT,i8**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iO,i64 16
%iX=bitcast i8*%iW to i32*
store i32 3,i32*%iX,align 4
ret i8*%iO
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2411(i8*inreg%a,i32 inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
%i=bitcast i8*%a to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%a,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%a,i64 16
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%e,align 8
%q=getelementptr inbounds i8,i8*%a,i64 24
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%f,align 8
%t=getelementptr inbounds i8,i8*%a,i64 32
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%g,align 8
%w=call i8*@sml_alloc(i32 inreg 52)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177328,i32*%y,align 4
store i8*%w,i8**%h,align 8
%z=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%w,i64 16
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%I=getelementptr inbounds i8,i8*%w,i64 24
%J=bitcast i8*%I to i8**
store i8*%H,i8**%J,align 8
%K=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%L=getelementptr inbounds i8,i8*%w,i64 32
%M=bitcast i8*%L to i8**
store i8*%K,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%w,i64 40
%O=bitcast i8*%N to i32*
store i32%b,i32*%O,align 4
%P=getelementptr inbounds i8,i8*%w,i64 48
%Q=bitcast i8*%P to i32*
store i32 31,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%h,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2410 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2410 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
ret i8*%R
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2417(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2419(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2422(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
store i8*null,i8**%d,align 8
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
store i8*null,i8**%c,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=call fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2391(i8*inreg%p,i8*inreg%r,i8*inreg%m)
%t=getelementptr inbounds i8,i8*%s,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2423(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2426(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL21DuplicateSQLFromLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ia,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2431(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2432(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2434(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2436(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%i,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%c,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=getelementptr inbounds i8,i8*%p,i64 8
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%e,align 8
%B=icmp eq i8*%u,null
br i1%B,label%al,label%C
C:
%D=bitcast i8*%u to i8**
%E=load i8*,i8**%D,align 8
%F=bitcast i8*%E to i32*
%G=load i32,i32*%F,align 4
%H=icmp eq i32%G,3
br i1%H,label%I,label%al
I:
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to i8***
%L=load i8**,i8***%K,align 8
%M=load i8*,i8**%L,align 8
%N=icmp eq i8*%M,null
br i1%N,label%S,label%O
O:
%P=bitcast i8*%M to i32*
%Q=load i32,i32*%P,align 4
%R=icmp eq i32%Q,4
br i1%R,label%S,label%al
S:
%T=getelementptr inbounds i8,i8*%u,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=icmp eq i8*%V,null
br i1%W,label%X,label%al
X:
%Y=load i8*,i8**%i,align 8
%Z=getelementptr inbounds i8,i8*%Y,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%c,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
%af=load i8*,i8**%c,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i8**
store i8*null,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to i32*
store i32 3,i32*%ak,align 4
br label%aZ
al:
%am=load i8*,i8**%i,align 8
%an=getelementptr inbounds i8,i8*%am,i64 24
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%h,align 8
%aq=getelementptr inbounds i8,i8*%am,i64 16
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%f,align 8
%at=getelementptr inbounds i8,i8*%am,i64 32
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%g,align 8
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%j,align 8
%az=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2431 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2431 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=load i8*,i8**%h,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%h,align 8
%aT=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%aS,i8*inreg%aG,i8*inreg%aR)
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
%aW=getelementptr inbounds i8,i8*%aT,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
br label%aZ
aZ:
%a0=phi i8*[null,%X],[%aY,%al]
%a1=phi i8*[%af,%X],[%aV,%al]
store i8*%a1,i8**%c,align 8
store i8*%a0,i8**%f,align 8
%a2=load i8*,i8**%e,align 8
%a3=icmp eq i8*%a2,null
br i1%a3,label%a4,label%be
a4:
%a5=load i8*,i8**%i,align 8
%a6=getelementptr inbounds i8,i8*%a5,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%e,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
%bc=load i8*,i8**%e,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
br label%bW
be:
%bf=bitcast i8*%a2 to i8**
%bg=load i8*,i8**%bf,align 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
%bj=getelementptr inbounds i8,i8*%bg,i64 8
%bk=bitcast i8*%bj to i8**
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%e,align 8
%bm=load i8*,i8**%i,align 8
%bn=getelementptr inbounds i8,i8*%bm,i64 32
%bo=bitcast i8*%bn to i8**
%bp=load i8*,i8**%bo,align 8
%bq=getelementptr inbounds i8,i8*%bm,i64 16
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
%bt=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%bp,i8*inreg%bs,i8*inreg%bi)
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%g,align 8
%bw=getelementptr inbounds i8,i8*%bt,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%h,align 8
%bz=call i8*@sml_alloc(i32 inreg 20)#0
%bA=getelementptr inbounds i8,i8*%bz,i64 -4
%bB=bitcast i8*%bA to i32*
store i32 1342177296,i32*%bB,align 4
store i8*%bz,i8**%j,align 8
%bC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bD=bitcast i8*%bz to i8**
store i8*%bC,i8**%bD,align 8
%bE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bF=getelementptr inbounds i8,i8*%bz,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bz,i64 16
%bI=bitcast i8*%bH to i32*
store i32 3,i32*%bI,align 4
%bJ=call i8*@sml_alloc(i32 inreg 12)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177288,i32*%bL,align 4
store i8*%bJ,i8**%e,align 8
%bM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bJ,i64 8
%bP=bitcast i8*%bO to i32*
store i32 1,i32*%bP,align 4
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
%bT=load i8*,i8**%g,align 8
%bU=bitcast i8*%bQ to i8**
store i8*%bT,i8**%bU,align 8
%bV=load i8*,i8**%e,align 8
br label%bW
bW:
%bX=phi i8*[%bQ,%be],[%a9,%a4]
%bY=phi i8*[%bV,%be],[null,%a4]
%bZ=phi i8*[%bT,%be],[%bc,%a4]
%b0=getelementptr inbounds i8,i8*%bX,i64 8
%b1=bitcast i8*%b0 to i8**
store i8*%bY,i8**%b1,align 8
%b2=getelementptr inbounds i8,i8*%bX,i64 16
%b3=bitcast i8*%b2 to i32*
store i32 3,i32*%b3,align 4
store i8*%bZ,i8**%e,align 8
store i8*%bY,i8**%g,align 8
%b4=call i8*@sml_alloc(i32 inreg 20)#0
%b5=getelementptr inbounds i8,i8*%b4,i64 -4
%b6=bitcast i8*%b5 to i32*
store i32 1342177296,i32*%b6,align 4
store i8*%b4,i8**%h,align 8
%b7=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b8=bitcast i8*%b4 to i8**
store i8*%b7,i8**%b8,align 8
%b9=getelementptr inbounds i8,i8*%b4,i64 8
%ca=bitcast i8*%b9 to i8**
store i8*null,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b4,i64 16
%cc=bitcast i8*%cb to i32*
store i32 3,i32*%cc,align 4
%cd=call i8*@sml_alloc(i32 inreg 20)#0
%ce=getelementptr inbounds i8,i8*%cd,i64 -4
%cf=bitcast i8*%ce to i32*
store i32 1342177296,i32*%cf,align 4
store i8*%cd,i8**%e,align 8
%cg=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%ch=bitcast i8*%cd to i8**
store i8*%cg,i8**%ch,align 8
%ci=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cj=getelementptr inbounds i8,i8*%cd,i64 8
%ck=bitcast i8*%cj to i8**
store i8*%ci,i8**%ck,align 8
%cl=getelementptr inbounds i8,i8*%cd,i64 16
%cm=bitcast i8*%cl to i32*
store i32 3,i32*%cm,align 4
%cn=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%co=getelementptr inbounds i8,i8*%cn,i64 16
%cp=bitcast i8*%co to i8*(i8*,i8*)**
%cq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cp,align 8
%cr=bitcast i8*%cn to i8**
%cs=load i8*,i8**%cr,align 8
store i8*%cs,i8**%c,align 8
%ct=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cu=getelementptr inbounds i8,i8*%ct,i64 16
%cv=bitcast i8*%cu to i8*(i8*,i8*)**
%cw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cv,align 8
%cx=bitcast i8*%ct to i8**
%cy=load i8*,i8**%cx,align 8
%cz=call fastcc i8*%cw(i8*inreg%cy,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ic,i64 0,i32 2)to i8*))
%cA=getelementptr inbounds i8,i8*%cz,i64 16
%cB=bitcast i8*%cA to i8*(i8*,i8*)**
%cC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cB,align 8
%cD=bitcast i8*%cz to i8**
%cE=load i8*,i8**%cD,align 8
%cF=load i8*,i8**%e,align 8
%cG=call fastcc i8*%cC(i8*inreg%cE,i8*inreg%cF)
%cH=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%cI=call fastcc i8*%cq(i8*inreg%cH,i8*inreg%cG)
store i8*%cI,i8**%c,align 8
%cJ=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cK=getelementptr inbounds i8,i8*%cJ,i64 16
%cL=bitcast i8*%cK to i8*(i8*,i8*)**
%cM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cL,align 8
%cN=bitcast i8*%cJ to i8**
%cO=load i8*,i8**%cN,align 8
%cP=call fastcc i8*%cM(i8*inreg%cO,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@id,i64 0,i32 2)to i8*))
%cQ=getelementptr inbounds i8,i8*%cP,i64 16
%cR=bitcast i8*%cQ to i8*(i8*,i8*)**
%cS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cR,align 8
%cT=bitcast i8*%cP to i8**
%cU=load i8*,i8**%cT,align 8
%cV=bitcast i8**%i to i8***
%cW=load i8**,i8***%cV,align 8
store i8*null,i8**%i,align 8
%cX=load i8*,i8**%cW,align 8
%cY=call fastcc i8*%cS(i8*inreg%cU,i8*inreg%cX)
%cZ=getelementptr inbounds i8,i8*%cY,i64 16
%c0=bitcast i8*%cZ to i8*(i8*,i8*)**
%c1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%c0,align 8
%c2=bitcast i8*%cY to i8**
%c3=load i8*,i8**%c2,align 8
%c4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c5=call fastcc i8*%c1(i8*inreg%c3,i8*inreg%c4)
store i8*%c5,i8**%e,align 8
%c6=call i8*@sml_alloc(i32 inreg 20)#0
%c7=getelementptr inbounds i8,i8*%c6,i64 -4
%c8=bitcast i8*%c7 to i32*
store i32 1342177296,i32*%c8,align 4
store i8*%c6,i8**%h,align 8
%c9=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%da=bitcast i8*%c6 to i8**
store i8*%c9,i8**%da,align 8
%db=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dc=getelementptr inbounds i8,i8*%c6,i64 8
%dd=bitcast i8*%dc to i8**
store i8*%db,i8**%dd,align 8
%de=getelementptr inbounds i8,i8*%c6,i64 16
%df=bitcast i8*%de to i32*
store i32 3,i32*%df,align 4
%dg=call i8*@sml_alloc(i32 inreg 20)#0
%dh=getelementptr inbounds i8,i8*%dg,i64 -4
%di=bitcast i8*%dh to i32*
store i32 1342177296,i32*%di,align 4
store i8*%dg,i8**%c,align 8
%dj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dk=bitcast i8*%dg to i8**
store i8*%dj,i8**%dk,align 8
%dl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dm=getelementptr inbounds i8,i8*%dg,i64 8
%dn=bitcast i8*%dm to i8**
store i8*%dl,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dg,i64 16
%dp=bitcast i8*%do to i32*
store i32 3,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177296,i32*%ds,align 4
store i8*%dq,i8**%d,align 8
%dt=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%du=bitcast i8*%dq to i8**
store i8*%dt,i8**%du,align 8
%dv=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dw=getelementptr inbounds i8,i8*%dq,i64 8
%dx=bitcast i8*%dw to i8**
store i8*%dv,i8**%dx,align 8
%dy=getelementptr inbounds i8,i8*%dq,i64 16
%dz=bitcast i8*%dy to i32*
store i32 3,i32*%dz,align 4
%dA=call i8*@sml_alloc(i32 inreg 20)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177296,i32*%dC,align 4
%dD=load i8*,i8**%h,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=load i8*,i8**%d,align 8
%dG=getelementptr inbounds i8,i8*%dA,i64 8
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=getelementptr inbounds i8,i8*%dA,i64 16
%dJ=bitcast i8*%dI to i32*
store i32 3,i32*%dJ,align 4
ret i8*%dA
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2441(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
k:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%i,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
br label%i
i:
%j=phi i8*[%h,%g],[%b,%k]
%l=bitcast i8*%j to i32*
%m=load i32,i32*%l,align 4
switch i32%m,label%n[
i32 0,label%aR
i32 1,label%F
]
n:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%o=load i8*,i8**@_SMLZ5Match,align 8
store i8*%o,i8**%c,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%d,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%p,i64 8
%v=bitcast i8*%u to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%v,align 8
%w=getelementptr inbounds i8,i8*%p,i64 16
%x=bitcast i8*%w to i32*
store i32 3,i32*%x,align 4
%y=call i8*@sml_alloc(i32 inreg 60)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177336,i32*%A,align 4
%B=getelementptr inbounds i8,i8*%y,i64 56
%C=bitcast i8*%B to i32*
store i32 1,i32*%C,align 4
%D=load i8*,i8**%d,align 8
%E=bitcast i8*%y to i8**
store i8*%D,i8**%E,align 8
call void@sml_raise(i8*inreg%y)#1
unreachable
F:
%G=getelementptr inbounds i8,i8*%j,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
%J=bitcast i8*%I to i32*
%K=load i32,i32*%J,align 4
switch i32%K,label%L[
i32 1,label%ao
i32 0,label%ad
]
L:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%M=load i8*,i8**@_SMLZ5Match,align 8
store i8*%M,i8**%c,align 8
%N=call i8*@sml_alloc(i32 inreg 20)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177296,i32*%P,align 4
store i8*%N,i8**%d,align 8
%Q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i32*
store i32 3,i32*%V,align 4
%W=call i8*@sml_alloc(i32 inreg 60)#0
%X=getelementptr inbounds i8,i8*%W,i64 -4
%Y=bitcast i8*%X to i32*
store i32 1342177336,i32*%Y,align 4
%Z=getelementptr inbounds i8,i8*%W,i64 56
%aa=bitcast i8*%Z to i32*
store i32 1,i32*%aa,align 4
%ab=load i8*,i8**%d,align 8
%ac=bitcast i8*%W to i8**
store i8*%ab,i8**%ac,align 8
call void@sml_raise(i8*inreg%W)#1
unreachable
ad:
%ae=load i8*,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=bitcast i8*%ae to i8**
%aj=load i8*,i8**%ai,align 8
%ak=getelementptr inbounds i8,i8*%I,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
%an=tail call fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2397(i8*inreg%ah,i8*inreg%aj,i8*inreg%am)
ret i8*%an
ao:
%ap=getelementptr inbounds i8,i8*%I,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%c,align 8
%as=load i8*,i8**%d,align 8
%at=getelementptr inbounds i8,i8*%as,i64 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*null,i8**%d,align 8
%aw=bitcast i8*%as to i8**
%ax=load i8*,i8**%aw,align 8
%ay=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%av,i8*inreg%ax)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%d,align 8
%aE=call i8*@sml_alloc(i32 inreg 4)#0
%aF=bitcast i8*%aE to i32*
%aG=getelementptr inbounds i8,i8*%aE,i64 -4
%aH=bitcast i8*%aG to i32*
store i32 4,i32*%aH,align 4
store i32 5,i32*%aF,align 4
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=call fastcc i8*%aB(i8*inreg%aI,i8*inreg%aE)
%aK=getelementptr inbounds i8,i8*%aJ,i64 16
%aL=bitcast i8*%aK to i8*(i8*,i8*)**
%aM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aL,align 8
%aN=bitcast i8*%aJ to i8**
%aO=load i8*,i8**%aN,align 8
%aP=load i8*,i8**%c,align 8
%aQ=tail call fastcc i8*%aM(i8*inreg%aO,i8*inreg%aP)
ret i8*%aQ
aR:
%aS=getelementptr inbounds i8,i8*%j,i64 8
%aT=bitcast i8*%aS to i8**
%aU=load i8*,i8**%aT,align 8
%aV=bitcast i8*%aU to i32*
%aW=load i32,i32*%aV,align 4
switch i32%aW,label%aX[
i32 1,label%bq
i32 0,label%bf
]
aX:
store i8*null,i8**%d,align 8
call void@sml_matchcomp_bug()
%aY=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aY,i8**%c,align 8
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%d,align 8
%a2=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aZ,i64 8
%a5=bitcast i8*%a4 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%a5,align 8
%a6=getelementptr inbounds i8,i8*%aZ,i64 16
%a7=bitcast i8*%a6 to i32*
store i32 3,i32*%a7,align 4
%a8=call i8*@sml_alloc(i32 inreg 60)#0
%a9=getelementptr inbounds i8,i8*%a8,i64 -4
%ba=bitcast i8*%a9 to i32*
store i32 1342177336,i32*%ba,align 4
%bb=getelementptr inbounds i8,i8*%a8,i64 56
%bc=bitcast i8*%bb to i32*
store i32 1,i32*%bc,align 4
%bd=load i8*,i8**%d,align 8
%be=bitcast i8*%a8 to i8**
store i8*%bd,i8**%be,align 8
call void@sml_raise(i8*inreg%a8)#1
unreachable
bf:
%bg=load i8*,i8**%d,align 8
%bh=getelementptr inbounds i8,i8*%bg,i64 8
%bi=bitcast i8*%bh to i8**
%bj=load i8*,i8**%bi,align 8
%bk=bitcast i8*%bg to i8**
%bl=load i8*,i8**%bk,align 8
%bm=getelementptr inbounds i8,i8*%aU,i64 8
%bn=bitcast i8*%bm to i8**
%bo=load i8*,i8**%bn,align 8
%bp=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2398(i8*inreg%bj,i8*inreg%bl,i8*inreg%bo)
ret i8*%bp
bq:
%br=getelementptr inbounds i8,i8*%aU,i64 8
%bs=bitcast i8*%br to i8**
%bt=load i8*,i8**%bs,align 8
store i8*%bt,i8**%c,align 8
%bu=load i8*,i8**%d,align 8
%bv=getelementptr inbounds i8,i8*%bu,i64 8
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
store i8*null,i8**%d,align 8
%by=bitcast i8*%bu to i8**
%bz=load i8*,i8**%by,align 8
%bA=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%bx,i8*inreg%bz)
%bB=getelementptr inbounds i8,i8*%bA,i64 16
%bC=bitcast i8*%bB to i8*(i8*,i8*)**
%bD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bC,align 8
%bE=bitcast i8*%bA to i8**
%bF=load i8*,i8**%bE,align 8
store i8*%bF,i8**%d,align 8
%bG=call i8*@sml_alloc(i32 inreg 4)#0
%bH=bitcast i8*%bG to i32*
%bI=getelementptr inbounds i8,i8*%bG,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 4,i32*%bJ,align 4
store i32 4,i32*%bH,align 4
%bK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bL=call fastcc i8*%bD(i8*inreg%bK,i8*inreg%bG)
%bM=getelementptr inbounds i8,i8*%bL,i64 16
%bN=bitcast i8*%bM to i8*(i8*,i8*)**
%bO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bN,align 8
%bP=bitcast i8*%bL to i8**
%bQ=load i8*,i8**%bP,align 8
%bR=load i8*,i8**%c,align 8
%bS=tail call fastcc i8*%bO(i8*inreg%bQ,i8*inreg%bR)
ret i8*%bS
}
define internal fastcc i8*@_SMLLL1l_2442(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
%c=bitcast i8*%a to i32*
%d=load i32,i32*%c,align 4
%e=icmp eq i32%d,4
br i1%e,label%g,label%f
f:
ret i8*null
g:
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8***
%j=load i8**,i8***%i,align 8
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%b,align 8
%l=call i8*@sml_alloc(i32 inreg 12)#0
%m=getelementptr inbounds i8,i8*%l,i64 -4
%n=bitcast i8*%m to i32*
store i32 1342177288,i32*%n,align 4
%o=load i8*,i8**%b,align 8
%p=bitcast i8*%l to i8**
store i8*%o,i8**%p,align 8
%q=getelementptr inbounds i8,i8*%l,i64 8
%r=bitcast i8*%q to i32*
store i32 1,i32*%r,align 4
ret i8*%l
}
define internal fastcc i32@_SMLLL15representatives_2444(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%a to i8**
%i=bitcast i8*%b to i8**
br label%o
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%j],[%h,%g]
%q=phi i8**[%l,%j],[%i,%g]
%r=load i8*,i8**%p,align 8
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%q,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=tail call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%t)
ret i32%D
}
define internal fastcc i8*@_SMLLL7groupBy_2445(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%d,align 8
%u=getelementptr inbounds i8,i8*%o,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=call fastcc i8*@_SMLFN4List10mapPartialE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%y=getelementptr inbounds i8,i8*%x,i64 16
%z=bitcast i8*%y to i8*(i8*,i8*)**
%A=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z,align 8
%B=bitcast i8*%x to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*%A(i8*inreg%C,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ie,i64 0,i32 2)to i8*))
%E=getelementptr inbounds i8,i8*%D,i64 16
%F=bitcast i8*%E to i8*(i8*,i8*)**
%G=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%F,align 8
%H=bitcast i8*%D to i8**
%I=load i8*,i8**%H,align 8
%J=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%K=call fastcc i8*%G(i8*inreg%I,i8*inreg%J)
store i8*%K,i8**%d,align 8
%L=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
%R=call fastcc i8*%O(i8*inreg%Q,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gd,i64 0,i32 2)to i8*))
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=bitcast i8**%g to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%U(i8*inreg%W,i8*inreg%Z)
%ab=getelementptr inbounds i8,i8*%aa,i64 16
%ac=bitcast i8*%ab to i8*(i8*,i8*)**
%ad=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ac,align 8
%ae=bitcast i8*%aa to i8**
%af=load i8*,i8**%ae,align 8
store i8*%af,i8**%f,align 8
%ag=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ah=getelementptr inbounds i8,i8*%ag,i64 16
%ai=bitcast i8*%ah to i8*(i8*,i8*)**
%aj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ai,align 8
%ak=bitcast i8*%ag to i8**
%al=load i8*,i8**%ak,align 8
%am=call fastcc i8*%aj(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gb,i64 0,i32 2)to i8*))
%an=getelementptr inbounds i8,i8*%am,i64 16
%ao=bitcast i8*%an to i8*(i8*,i8*)**
%ap=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ao,align 8
%aq=bitcast i8*%am to i8**
%ar=load i8*,i8**%aq,align 8
%as=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%at=call fastcc i8*%ap(i8*inreg%ar,i8*inreg%as)
%au=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%av=call fastcc i8*%ad(i8*inreg%au,i8*inreg%at)
store i8*%av,i8**%d,align 8
%aw=load i8*,i8**%g,align 8
%ax=getelementptr inbounds i8,i8*%aw,i64 8
%ay=bitcast i8*%ax to i8**
%az=load i8*,i8**%ay,align 8
%aA=icmp eq i8*%az,null
br i1%aA,label%aB,label%aE
aB:
%aC=bitcast i8*%aw to i8**
%aD=load i8*,i8**%aC,align 8
br label%bh
aE:
%aF=bitcast i8*%az to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%f,align 8
%aH=call fastcc i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg 1,i32 inreg 8)
%aI=getelementptr inbounds i8,i8*%aH,i64 16
%aJ=bitcast i8*%aI to i8*(i8*,i8*)**
%aK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aJ,align 8
%aL=bitcast i8*%aH to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%h,align 8
%aN=call i8*@sml_alloc(i32 inreg 12)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177288,i32*%aP,align 4
store i8*%aN,i8**%i,align 8
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aN,i64 8
%aT=bitcast i8*%aS to i32*
store i32 1,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 28)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177304,i32*%aW,align 4
%aX=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=getelementptr inbounds i8,i8*%aU,i64 8
%a0=bitcast i8*%aZ to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLL15representatives_2444 to void(...)*),void(...)**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 16
%a2=bitcast i8*%a1 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL15representatives_2756 to void(...)*),void(...)**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 24
%a4=bitcast i8*%a3 to i32*
store i32 -2147483647,i32*%a4,align 4
%a5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%a6=call fastcc i8*%aK(i8*inreg%a5,i8*inreg%aU)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8*,i8**%g,align 8
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8**
%bf=load i8*,i8**%be,align 8
%bg=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%bf)
br label%bh
bh:
%bi=phi i8*[%bg,%aE],[%aD,%aB]
store i8*%bi,i8**%f,align 8
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
%bm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bn=bitcast i8*%bj to i8**
store i8*%bm,i8**%bn,align 8
%bo=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bp=getelementptr inbounds i8,i8*%bj,i64 8
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bj,i64 16
%bs=bitcast i8*%br to i32*
store i32 3,i32*%bs,align 4
%bt=call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%bj)
store i8*%bt,i8**%d,align 8
%bu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bv=getelementptr inbounds i8,i8*%bu,i64 16
%bw=bitcast i8*%bv to i8**
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%f,align 8
%by=call i8*@sml_alloc(i32 inreg 36)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177312,i32*%bA,align 4
%bB=load i8*,i8**%f,align 8
%bC=bitcast i8*%by to i8**
store i8*%bB,i8**%bC,align 8
%bD=load i8*,i8**%c,align 8
%bE=getelementptr inbounds i8,i8*%by,i64 8
%bF=bitcast i8*%bE to i8**
store i8*%bD,i8**%bF,align 8
%bG=load i8*,i8**%e,align 8
%bH=getelementptr inbounds i8,i8*%by,i64 16
%bI=bitcast i8*%bH to i8**
store i8*%bG,i8**%bI,align 8
%bJ=load i8*,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%by,i64 24
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%by,i64 32
%bN=bitcast i8*%bM to i32*
store i32 15,i32*%bN,align 4
ret i8*%by
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2446(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2448(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i32@_SMLLLN12ElaborateSQL9elabQueryE_2450(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%j
g:
%h=bitcast i8*%a to i8**
%i=bitcast i8*%b to i8**
br label%o
j:
call void@sml_check(i32 inreg%e)
%k=bitcast i8**%d to i8***
%l=load i8**,i8***%k,align 8
%m=bitcast i8**%c to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%j],[%h,%g]
%q=phi i8**[%l,%j],[%i,%g]
%r=load i8*,i8**%p,align 8
store i8*%r,i8**%c,align 8
%s=load i8*,i8**%q,align 8
store i8*%s,i8**%d,align 8
%t=call i8*@sml_alloc(i32 inreg 20)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177296,i32*%v,align 4
%w=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%z=getelementptr inbounds i8,i8*%t,i64 8
%A=bitcast i8*%z to i8**
store i8*%y,i8**%A,align 8
%B=getelementptr inbounds i8,i8*%t,i64 16
%C=bitcast i8*%B to i32*
store i32 3,i32*%C,align 4
%D=call fastcc i32@_SMLFN11RecordLabel3Set6memberE(i8*inreg%t)
%E=tail call fastcc i32@_SMLFN4Bool3notE(i32 inreg%D)
ret i32%E
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2456(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2458(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2460(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2462(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc void@_SMLLL5error_2472(i8*inreg%a)#2 gc"smlsharp"{
l:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%a,i8**%b,align 8
%f=load atomic i32,i32*@sml_check_flag unordered,align 4
%g=icmp eq i32%f,0
br i1%g,label%j,label%h
h:
call void@sml_check(i32 inreg%f)
%i=load i8*,i8**%b,align 8
br label%j
j:
%k=phi i8*[%i,%h],[%a,%l]
%m=bitcast i8*%k to i32*
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 1,label%bY
i32 0,label%aU
i32 2,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@it,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=getelementptr inbounds i8,i8*%k,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%k,i64 16
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%b,align 8
%N=load i8*,i8**@_SMLZN14ElaborateError14EndWithInfixIDE,align 8
store i8*%N,i8**%c,align 8
%O=bitcast i8*%J to i32*
%P=load i32,i32*%O,align 4
%Q=icmp eq i32%P,8
br i1%Q,label%al,label%R
R:
store i8*null,i8**%c,align 8
%S=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%S,i8**%b,align 8
%T=call i8*@sml_alloc(i32 inreg 28)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177304,i32*%V,align 4
store i8*%T,i8**%c,align 8
%W=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ir,i64 0,i32 2,i64 0),i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@is,i64 0,i32 2,i64 0),i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%T,i64 24
%ad=bitcast i8*%ac to i32*
store i32 7,i32*%ad,align 4
%ae=call i8*@sml_alloc(i32 inreg 60)#0
%af=getelementptr inbounds i8,i8*%ae,i64 -4
%ag=bitcast i8*%af to i32*
store i32 1342177336,i32*%ag,align 4
%ah=getelementptr inbounds i8,i8*%ae,i64 56
%ai=bitcast i8*%ah to i32*
store i32 1,i32*%ai,align 4
%aj=load i8*,i8**%c,align 8
%ak=bitcast i8*%ae to i8**
store i8*%aj,i8**%ak,align 8
call void@sml_raise(i8*inreg%ae)#1
unreachable
al:
%am=getelementptr inbounds i8,i8*%J,i64 8
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
%as=load i8*,i8**%d,align 8
%at=bitcast i8*%ap to i8**
store i8*%as,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ap,i64 8
%av=bitcast i8*%au to i8**
store i8*null,i8**%av,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 16
%ax=bitcast i8*%aw to i32*
store i32 3,i32*%ax,align 4
store i8*%ap,i8**%d,align 8
%ay=call i8*@sml_alloc(i32 inreg 28)#0
%az=getelementptr inbounds i8,i8*%ay,i64 -4
%aA=bitcast i8*%az to i32*
store i32 1342177304,i32*%aA,align 4
store i8*%ay,i8**%e,align 8
%aB=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aC=bitcast i8*%ay to i8**
store i8*%aB,i8**%aC,align 8
%aD=getelementptr inbounds i8,i8*%ay,i64 8
%aE=bitcast i8*%aD to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iq,i64 0,i32 2,i64 0),i8**%aE,align 8
%aF=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aG=getelementptr inbounds i8,i8*%ay,i64 16
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%ay,i64 24
%aJ=bitcast i8*%aI to i32*
store i32 7,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=load i8*,i8**%b,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%e,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%aK)
ret void
aU:
%aV=getelementptr inbounds i8,i8*%k,i64 8
%aW=bitcast i8*%aV to i8**
%aX=load i8*,i8**%aW,align 8
%aY=getelementptr inbounds i8,i8*%k,i64 16
%aZ=bitcast i8*%aY to i8**
%a0=load i8*,i8**%aZ,align 8
store i8*%a0,i8**%b,align 8
%a1=load i8*,i8**@_SMLZN14ElaborateError16BeginWithInfixIDE,align 8
store i8*%a1,i8**%c,align 8
%a2=bitcast i8*%aX to i32*
%a3=load i32,i32*%a2,align 4
%a4=icmp eq i32%a3,8
br i1%a4,label%bp,label%a5
a5:
store i8*null,i8**%c,align 8
%a6=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%a6,i8**%b,align 8
%a7=call i8*@sml_alloc(i32 inreg 28)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177304,i32*%a9,align 4
store i8*%a7,i8**%c,align 8
%ba=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%bb=bitcast i8*%a7 to i8**
store i8*%ba,i8**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ir,i64 0,i32 2,i64 0),i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[23x i8]}>,<{[4x i8],i32,[23x i8]}>*@is,i64 0,i32 2,i64 0),i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a7,i64 24
%bh=bitcast i8*%bg to i32*
store i32 7,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 60)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177336,i32*%bk,align 4
%bl=getelementptr inbounds i8,i8*%bi,i64 56
%bm=bitcast i8*%bl to i32*
store i32 1,i32*%bm,align 4
%bn=load i8*,i8**%c,align 8
%bo=bitcast i8*%bi to i8**
store i8*%bn,i8**%bo,align 8
call void@sml_raise(i8*inreg%bi)#1
unreachable
bp:
%bq=getelementptr inbounds i8,i8*%aX,i64 8
%br=bitcast i8*%bq to i8**
%bs=load i8*,i8**%br,align 8
store i8*%bs,i8**%d,align 8
%bt=call i8*@sml_alloc(i32 inreg 20)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177296,i32*%bv,align 4
%bw=load i8*,i8**%d,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bt,i64 8
%bz=bitcast i8*%by to i8**
store i8*null,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bt,i64 16
%bB=bitcast i8*%bA to i32*
store i32 3,i32*%bB,align 4
store i8*%bt,i8**%d,align 8
%bC=call i8*@sml_alloc(i32 inreg 28)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177304,i32*%bE,align 4
store i8*%bC,i8**%e,align 8
%bF=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ip,i64 0,i32 2,i64 0),i8**%bI,align 8
%bJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bK=getelementptr inbounds i8,i8*%bC,i64 16
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bC,i64 24
%bN=bitcast i8*%bM to i32*
store i32 7,i32*%bN,align 4
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
%bR=load i8*,i8**%b,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=load i8*,i8**%e,align 8
%bU=getelementptr inbounds i8,i8*%bO,i64 8
%bV=bitcast i8*%bU to i8**
store i8*%bT,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bO,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%bO)
ret void
bY:
%bZ=getelementptr inbounds i8,i8*%k,i64 16
%b0=bitcast i8*%bZ to i8**
%b1=load i8*,i8**%b0,align 8
store i8*%b1,i8**%b,align 8
%b2=load i8*,i8**@_SMLZN14ElaborateError23InvalidFixityPrecedenceE,align 8
store i8*%b2,i8**%c,align 8
%b3=call i8*@sml_alloc(i32 inreg 20)#0
%b4=getelementptr inbounds i8,i8*%b3,i64 -4
%b5=bitcast i8*%b4 to i32*
store i32 1342177296,i32*%b5,align 4
store i8*%b3,i8**%d,align 8
%b6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%b7=bitcast i8*%b3 to i8**
store i8*%b6,i8**%b7,align 8
%b8=getelementptr inbounds i8,i8*%b3,i64 8
%b9=bitcast i8*%b8 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@io,i64 0,i32 2,i64 0),i8**%b9,align 8
%ca=getelementptr inbounds i8,i8*%b3,i64 16
%cb=bitcast i8*%ca to i32*
store i32 3,i32*%cb,align 4
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%b,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%d,align 8
%ci=getelementptr inbounds i8,i8*%cc,i64 8
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cc,i64 16
%cl=bitcast i8*%ck to i32*
store i32 3,i32*%cl,align 4
tail call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%cc)
ret void
}
define internal fastcc i8*@_SMLLL3src_2474(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
m:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%k,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
br label%k
k:
%l=phi i8*[%j,%i],[%b,%m]
%n=bitcast i8*%l to i32*
%o=load i32,i32*%n,align 4
%p=icmp eq i32%o,8
br i1%p,label%E,label%q
q:
store i8*null,i8**%e,align 8
%r=call fastcc i8*@_SMLLLN12ElaborateSQL6expLocE_1278(i8*inreg%l)
store i8*%r,i8**%d,align 8
%s=call i8*@sml_alloc(i32 inreg 28)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177304,i32*%u,align 4
%v=bitcast i8*%s to i8**
store i8*null,i8**%v,align 8
%w=load i8*,i8**%c,align 8
%x=getelementptr inbounds i8,i8*%s,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=load i8*,i8**%d,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i8**
store i8*%z,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%s,i64 24
%D=bitcast i8*%C to i32*
store i32 7,i32*%D,align 4
ret i8*%s
E:
%F=getelementptr inbounds i8,i8*%l,i64 8
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%d,align 8
%I=call fastcc i8*@_SMLFN9SymbolEnv4findE(i32 inreg 1,i32 inreg 8)
%J=getelementptr inbounds i8,i8*%I,i64 16
%K=bitcast i8*%J to i8*(i8*,i8*)**
%L=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%K,align 8
%M=bitcast i8*%I to i8**
%N=load i8*,i8**%M,align 8
store i8*%N,i8**%f,align 8
%O=bitcast i8**%e to i8***
%P=load i8**,i8***%O,align 8
%Q=load i8*,i8**%P,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*%T,i8**%e,align 8
%U=call i8*@sml_alloc(i32 inreg 20)#0
%V=getelementptr inbounds i8,i8*%U,i64 -4
%W=bitcast i8*%V to i32*
store i32 1342177296,i32*%W,align 4
%X=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Y=bitcast i8*%U to i8**
store i8*%X,i8**%Y,align 8
%Z=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%U,i64 8
%ab=bitcast i8*%aa to i8**
store i8*%Z,i8**%ab,align 8
%ac=getelementptr inbounds i8,i8*%U,i64 16
%ad=bitcast i8*%ac to i32*
store i32 3,i32*%ad,align 4
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%af=call fastcc i8*%L(i8*inreg%ae,i8*inreg%U)
%ag=icmp eq i8*%af,null
br i1%ag,label%ah,label%aw
ah:
%ai=load i8*,i8**%c,align 8
%aj=call fastcc i8*@_SMLLLN12ElaborateSQL6expLocE_1278(i8*inreg%ai)
store i8*%aj,i8**%d,align 8
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
%an=bitcast i8*%ak to i8**
store i8*null,i8**%an,align 8
%ao=load i8*,i8**%c,align 8
%ap=getelementptr inbounds i8,i8*%ak,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%d,align 8
%as=getelementptr inbounds i8,i8*%ak,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%ak,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
ret i8*%ak
aw:
%ax=bitcast i8*%af to i8***
%ay=load i8**,i8***%ax,align 8
%az=load i8*,i8**%ay,align 8
store i8*%az,i8**%d,align 8
%aA=load i8*,i8**%c,align 8
%aB=call fastcc i8*@_SMLLLN12ElaborateSQL6expLocE_1278(i8*inreg%aA)
store i8*%aB,i8**%e,align 8
%aC=call i8*@sml_alloc(i32 inreg 28)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177304,i32*%aE,align 4
%aF=load i8*,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
%aH=load i8*,i8**%c,align 8
%aI=getelementptr inbounds i8,i8*%aC,i64 8
%aJ=bitcast i8*%aI to i8**
store i8*%aH,i8**%aJ,align 8
%aK=load i8*,i8**%e,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aC,i64 24
%aO=bitcast i8*%aN to i32*
store i32 7,i32*%aO,align 4
ret i8*%aC
}
define internal fastcc i8*@_SMLLL4exps_2475(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=getelementptr inbounds i8,i8*%k,i64 8
%o=bitcast i8*%n to i8**
%p=load i8*,i8**%o,align 8
%q=bitcast i8*%k to i8**
%r=load i8*,i8**%q,align 8
%s=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%p,i8*inreg%r,i8*inreg%m)
ret i8*%s
}
define internal fastcc i32@_SMLLLN12ElaborateSQL7elabExpE_2477(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i32**
%m=load i32*,i32**%l,align 8
%n=load i32,i32*%m,align 4
switch i32%n,label%o[
i32 1,label%I
i32 0,label%G
]
o:
call void@sml_matchcomp_bug()
%p=load i8*,i8**@_SMLZ5Match,align 8
store i8*%p,i8**%b,align 8
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%c,align 8
%t=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%u=bitcast i8*%q to i8**
store i8*%t,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%q,i64 8
%w=bitcast i8*%v to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iv,i64 0,i32 2,i64 0),i8**%w,align 8
%x=getelementptr inbounds i8,i8*%q,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 60)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177336,i32*%B,align 4
%C=getelementptr inbounds i8,i8*%z,i64 56
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%z to i8**
store i8*%E,i8**%F,align 8
call void@sml_raise(i8*inreg%z)#1
unreachable
G:
%H=phi i32[1,%h],[0,%I]
ret i32%H
I:
br label%G
}
define internal fastcc i8*@_SMLLL4exps_2479(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
store i8*null,i8**%c,align 8
%r=load i8*,i8**%n,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
%v=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%r,i8*inreg%u)
store i8*%v,i8**%c,align 8
%w=call i8*@sml_alloc(i32 inreg 20)#0
%x=getelementptr inbounds i8,i8*%w,i64 -4
%y=bitcast i8*%x to i32*
store i32 1342177296,i32*%y,align 4
%z=load i8*,i8**%d,align 8
%A=bitcast i8*%w to i8**
store i8*%z,i8**%A,align 8
%B=load i8*,i8**%c,align 8
%C=getelementptr inbounds i8,i8*%w,i64 8
%D=bitcast i8*%C to i8**
store i8*%B,i8**%D,align 8
%E=getelementptr inbounds i8,i8*%w,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
ret i8*%w
}
define internal fastcc i8*@_SMLLL4exps_2480(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLL4exps_2482(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLL4exps_2484(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%e,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%g,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*null,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%d,align 8
%K=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%c,align 8
%X=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8*(i8*,i8*)**
%aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Z,align 8
%ab=bitcast i8*%X to i8**
%ac=load i8*,i8**%ab,align 8
%ad=call fastcc i8*%aa(i8*inreg%ac,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ix,i64 0,i32 2)to i8*))
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%d,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%am=call fastcc i8*%U(i8*inreg%al,i8*inreg%ak)
store i8*%am,i8**%c,align 8
%an=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
%at=call fastcc i8*%aq(i8*inreg%as,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iy,i64 0,i32 2)to i8*))
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=bitcast i8**%f to i8***
%aA=load i8**,i8***%az,align 8
store i8*null,i8**%f,align 8
%aB=load i8*,i8**%aA,align 8
%aC=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%aB)
%aD=getelementptr inbounds i8,i8*%aC,i64 16
%aE=bitcast i8*%aD to i8*(i8*,i8*)**
%aF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aE,align 8
%aG=bitcast i8*%aC to i8**
%aH=load i8*,i8**%aG,align 8
%aI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aJ=call fastcc i8*%aF(i8*inreg%aH,i8*inreg%aI)
store i8*%aJ,i8**%d,align 8
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
store i8*%aK,i8**%f,align 8
%aN=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aO=bitcast i8*%aK to i8**
store i8*%aN,i8**%aO,align 8
%aP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aQ=getelementptr inbounds i8,i8*%aK,i64 8
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aK,i64 16
%aT=bitcast i8*%aS to i32*
store i32 3,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%f,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%e,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
ret i8*%aU
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2485(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2487(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2489(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2491(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2493(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2498(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=getelementptr inbounds i8,i8*%i,i64 8
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
%n=bitcast i8*%m to i32*
%o=load i32,i32*%n,align 4
switch i32%o,label%p[
i32 1,label%L
i32 0,label%H
]
p:
call void@sml_matchcomp_bug()
%q=load i8*,i8**@_SMLZ5Match,align 8
store i8*%q,i8**%b,align 8
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=getelementptr inbounds i8,i8*%r,i64 -4
%t=bitcast i8*%s to i32*
store i32 1342177296,i32*%t,align 4
store i8*%r,i8**%c,align 8
%u=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%v=bitcast i8*%r to i8**
store i8*%u,i8**%v,align 8
%w=getelementptr inbounds i8,i8*%r,i64 8
%x=bitcast i8*%w to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iG,i64 0,i32 2,i64 0),i8**%x,align 8
%y=getelementptr inbounds i8,i8*%r,i64 16
%z=bitcast i8*%y to i32*
store i32 3,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 60)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177336,i32*%C,align 4
%D=getelementptr inbounds i8,i8*%A,i64 56
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=load i8*,i8**%c,align 8
%G=bitcast i8*%A to i8**
store i8*%F,i8**%G,align 8
call void@sml_raise(i8*inreg%A)#1
unreachable
H:
%I=getelementptr inbounds i8,i8*%m,i64 8
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
ret i8*%K
L:
%M=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%M,i8**%b,align 8
%N=call i8*@sml_alloc(i32 inreg 28)#0
%O=getelementptr inbounds i8,i8*%N,i64 -4
%P=bitcast i8*%O to i32*
store i32 1342177304,i32*%P,align 4
store i8*%N,i8**%c,align 8
%Q=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%R=bitcast i8*%N to i8**
store i8*%Q,i8**%R,align 8
%S=getelementptr inbounds i8,i8*%N,i64 8
%T=bitcast i8*%S to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iE,i64 0,i32 2,i64 0),i8**%T,align 8
%U=getelementptr inbounds i8,i8*%N,i64 16
%V=bitcast i8*%U to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[15x i8]}>,<{[4x i8],i32,[15x i8]}>*@iF,i64 0,i32 2,i64 0),i8**%V,align 8
%W=getelementptr inbounds i8,i8*%N,i64 24
%X=bitcast i8*%W to i32*
store i32 7,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 60)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177336,i32*%aa,align 4
%ab=getelementptr inbounds i8,i8*%Y,i64 56
%ac=bitcast i8*%ab to i32*
store i32 1,i32*%ac,align 4
%ad=load i8*,i8**%c,align 8
%ae=bitcast i8*%Y to i8**
store i8*%ad,i8**%ae,align 8
call void@sml_raise(i8*inreg%Y)#1
unreachable
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2501(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2503(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2505(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%g,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%a,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%e,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2507(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%c,align 8
%i=load i8*,i8**%d,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
%p=getelementptr inbounds i8,i8*%m,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%k,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*null,i8**%d,align 8
%v=bitcast i8*%k to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%u,i8*inreg%w,i8*inreg%o)
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2508(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2510(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2512(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2514(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2516(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%j,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%e,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2518(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%l,label%j
j:
call void@sml_check(i32 inreg%h)
%k=load i8*,i8**%c,align 8
br label%l
l:
%m=phi i8*[%k,%j],[%b,%n]
%o=bitcast i8*%m to i8**
%p=load i8*,i8**%o,align 8
store i8*%p,i8**%c,align 8
%q=getelementptr inbounds i8,i8*%m,i64 8
%r=bitcast i8*%q to i8**
%s=load i8*,i8**%r,align 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%e,align 8
%y=call fastcc i8*@_SMLFN6Option6getOptE(i32 inreg 1,i32 inreg 8)
%z=getelementptr inbounds i8,i8*%y,i64 16
%A=bitcast i8*%z to i8*(i8*,i8*)**
%B=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%A,align 8
%C=bitcast i8*%y to i8**
%D=load i8*,i8**%C,align 8
store i8*%D,i8**%g,align 8
%E=call i8*@sml_alloc(i32 inreg 20)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177296,i32*%G,align 4
%H=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%K=getelementptr inbounds i8,i8*%E,i64 8
%L=bitcast i8*%K to i8**
store i8*%J,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%E,i64 16
%N=bitcast i8*%M to i32*
store i32 3,i32*%N,align 4
%O=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%P=call fastcc i8*%B(i8*inreg%O,i8*inreg%E)
store i8*%P,i8**%c,align 8
%Q=load i8*,i8**%f,align 8
%R=getelementptr inbounds i8,i8*%Q,i64 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
store i8*null,i8**%f,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%X=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%T,i8*inreg%V,i8*inreg%W)
store i8*%X,i8**%d,align 8
%Y=call i8*@sml_alloc(i32 inreg 20)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177296,i32*%aa,align 4
%ab=load i8*,i8**%c,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%d,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%Y,i64 16
%ah=bitcast i8*%ag to i32*
store i32 3,i32*%ah,align 4
ret i8*%Y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2519(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2522(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL23DuplicateSQLSelectLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iS,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2526(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2528(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2530(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2532(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLL4left_2537(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLL4left_2539(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLL4left_2541(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLL4left_2543(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2547(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2549(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2553(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2555(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2557(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2559(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2564(i8*inreg%a)#4 gc"smlsharp"{
ret i8*%a
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2567(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL23DuplicateSQLInsertLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jj,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2569(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
%h=bitcast i8*%g to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%b,align 8
%j=getelementptr inbounds i8,i8*%g,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%a,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%e,align 8
%s=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%b,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2572(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
n:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%g=load atomic i32,i32*@sml_check_flag unordered,align 4
%h=icmp eq i32%g,0
br i1%h,label%l,label%i
i:
call void@sml_check(i32 inreg%g)
%j=load i8*,i8**%c,align 8
%k=load i8*,i8**%d,align 8
br label%l
l:
%m=phi i8*[%k,%i],[%a,%n]
%o=phi i8*[%j,%i],[%b,%n]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%c,align 8
%u=icmp eq i8*%q,null
br i1%u,label%v,label%D
v:
%w=bitcast i8*%m to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
br label%af
D:
%E=getelementptr inbounds i8,i8*%m,i64 16
%F=bitcast i8*%E to i8**
%G=load i8*,i8**%F,align 8
store i8*null,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%m,i64 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=bitcast i8*%q to i8**
%L=load i8*,i8**%K,align 8
%M=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%G,i8*inreg%J,i8*inreg%L)
%N=bitcast i8*%M to i8**
%O=load i8*,i8**%N,align 8
store i8*%O,i8**%d,align 8
%P=getelementptr inbounds i8,i8*%M,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
store i8*%R,i8**%e,align 8
%S=call i8*@sml_alloc(i32 inreg 12)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177288,i32*%U,align 4
store i8*%S,i8**%f,align 8
%V=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=getelementptr inbounds i8,i8*%S,i64 8
%Y=bitcast i8*%X to i32*
store i32 1,i32*%Y,align 4
%Z=call i8*@sml_alloc(i32 inreg 20)#0
%aa=getelementptr inbounds i8,i8*%Z,i64 -4
%ab=bitcast i8*%aa to i32*
store i32 1342177296,i32*%ab,align 4
%ac=load i8*,i8**%d,align 8
%ad=bitcast i8*%Z to i8**
store i8*%ac,i8**%ad,align 8
%ae=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
br label%af
af:
%ag=phi i8*[%Z,%D],[%y,%v]
%ah=phi i8*[%ae,%D],[null,%v]
%ai=phi i8*[%ac,%D],[%B,%v]
%aj=getelementptr inbounds i8,i8*%ag,i64 8
%ak=bitcast i8*%aj to i8**
store i8*%ah,i8**%ak,align 8
%al=getelementptr inbounds i8,i8*%ag,i64 16
%am=bitcast i8*%al to i32*
store i32 3,i32*%am,align 4
store i8*%ai,i8**%d,align 8
store i8*%ah,i8**%e,align 8
%an=call i8*@sml_alloc(i32 inreg 20)#0
%ao=getelementptr inbounds i8,i8*%an,i64 -4
%ap=bitcast i8*%ao to i32*
store i32 1342177296,i32*%ap,align 4
store i8*%an,i8**%f,align 8
%aq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ar=bitcast i8*%an to i8**
store i8*%aq,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%an,i64 8
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%an,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
%aA=load i8*,i8**%d,align 8
%aB=bitcast i8*%ax to i8**
store i8*%aA,i8**%aB,align 8
%aC=load i8*,i8**%f,align 8
%aD=getelementptr inbounds i8,i8*%ax,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%ax,i64 16
%aG=bitcast i8*%aF to i32*
store i32 3,i32*%aG,align 4
ret i8*%ax
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2573(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
p:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%n,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%c,align 8
br label%n
n:
%o=phi i8*[%m,%l],[%b,%p]
%q=bitcast i8*%o to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=getelementptr inbounds i8,i8*%o,i64 8
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%d,align 8
%v=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%w=getelementptr inbounds i8,i8*%v,i64 16
%x=bitcast i8*%w to i8*(i8*,i8*)**
%y=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x,align 8
%z=bitcast i8*%v to i8**
%A=load i8*,i8**%z,align 8
%B=load i8*,i8**%c,align 8
%C=call fastcc i8*%y(i8*inreg%A,i8*inreg%B)
%D=bitcast i8*%C to i32*
%E=load i32,i32*%D,align 4
%F=load i8*,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%F,i64 32
%H=bitcast i8*%G to i32*
%I=load i32,i32*%H,align 4
%J=icmp eq i32%E,%I
br i1%J,label%ag,label%K
K:
%L=load i8*,i8**@_SMLZN17ElaborateErrorSQL22NumberOfSQLInsertLabelE,align 8
store i8*%L,i8**%f,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
store i8*%M,i8**%g,align 8
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jm,i64 0,i32 2,i64 0),i8**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to i32*
store i32 3,i32*%U,align 4
%V=call i8*@sml_alloc(i32 inreg 20)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177296,i32*%X,align 4
%Y=load i8*,i8**%d,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ab=getelementptr inbounds i8,i8*%V,i64 8
%ac=bitcast i8*%ab to i8**
store i8*%aa,i8**%ac,align 8
%ad=getelementptr inbounds i8,i8*%V,i64 16
%ae=bitcast i8*%ad to i32*
store i32 3,i32*%ae,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%V)
%af=load i8*,i8**%e,align 8
br label%ag
ag:
%ah=phi i8*[%F,%n],[%af,%K]
%ai=getelementptr inbounds i8,i8*%ah,i64 16
%aj=bitcast i8*%ai to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%h,align 8
%al=bitcast i8*%ah to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%ah,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%g,align 8
%aq=getelementptr inbounds i8,i8*%ah,i64 24
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%e,align 8
%at=call i8*@sml_alloc(i32 inreg 28)#0
%au=getelementptr inbounds i8,i8*%at,i64 -4
%av=bitcast i8*%au to i32*
store i32 1342177304,i32*%av,align 4
store i8*%at,i8**%i,align 8
%aw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ax=bitcast i8*%at to i8**
store i8*%aw,i8**%ax,align 8
%ay=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%az=getelementptr inbounds i8,i8*%at,i64 8
%aA=bitcast i8*%az to i8**
store i8*%ay,i8**%aA,align 8
%aB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aC=getelementptr inbounds i8,i8*%at,i64 16
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%at,i64 24
%aF=bitcast i8*%aE to i32*
store i32 7,i32*%aF,align 4
%aG=call i8*@sml_alloc(i32 inreg 28)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177304,i32*%aI,align 4
%aJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aK=bitcast i8*%aG to i8**
store i8*%aJ,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2572 to void(...)*),void(...)**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 16
%aO=bitcast i8*%aN to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2572 to void(...)*),void(...)**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 24
%aQ=bitcast i8*%aP to i32*
store i32 -2147483647,i32*%aQ,align 4
%aR=load i8*,i8**%c,align 8
%aS=load i8*,i8**%h,align 8
store i8*null,i8**%c,align 8
store i8*null,i8**%h,align 8
%aT=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%aS,i8*inreg%aG,i8*inreg%aR)
store i8*%aT,i8**%c,align 8
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=getelementptr inbounds i8,i8*%aU,i64 -4
%aW=bitcast i8*%aV to i32*
store i32 1342177296,i32*%aW,align 4
%aX=load i8*,i8**%c,align 8
%aY=bitcast i8*%aU to i8**
store i8*%aX,i8**%aY,align 8
%aZ=load i8*,i8**%d,align 8
%a0=getelementptr inbounds i8,i8*%aU,i64 8
%a1=bitcast i8*%a0 to i8**
store i8*%aZ,i8**%a1,align 8
%a2=getelementptr inbounds i8,i8*%aU,i64 16
%a3=bitcast i8*%a2 to i32*
store i32 3,i32*%a3,align 4
ret i8*%aU
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2574(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2576(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2578(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2580(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2583(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2585(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2587(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2590(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load i8*,i8**@_SMLZN17ElaborateErrorSQL20DuplicateSQLSetLabelE,align 8
store i8*%d,i8**%c,align 8
%e=call i8*@sml_alloc(i32 inreg 28)#0
%f=getelementptr inbounds i8,i8*%e,i64 -4
%g=bitcast i8*%f to i32*
store i32 1342177304,i32*%g,align 4
%h=load i8*,i8**%c,align 8
%i=bitcast i8*%e to i8**
store i8*%h,i8**%i,align 8
%j=getelementptr inbounds i8,i8*%e,i64 8
%k=bitcast i8*%j to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jv,i64 0,i32 2,i64 0),i8**%k,align 8
%l=load i8*,i8**%b,align 8
%m=getelementptr inbounds i8,i8*%e,i64 16
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%e,i64 24
%p=bitcast i8*%o to i32*
store i32 7,i32*%p,align 4
ret i8*%e
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2592(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%b,align 8
%h=getelementptr inbounds i8,i8*%a,i64 8
%i=bitcast i8*%h to i8**
%j=load i8*,i8**%i,align 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%c,align 8
%m=getelementptr inbounds i8,i8*%j,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177296,i32*%r,align 4
store i8*%p,i8**%e,align 8
%s=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i32*
store i32 3,i32*%y,align 4
%z=call i8*@sml_alloc(i32 inreg 20)#0
%A=getelementptr inbounds i8,i8*%z,i64 -4
%B=bitcast i8*%A to i32*
store i32 1342177296,i32*%B,align 4
%C=load i8*,i8**%c,align 8
%D=bitcast i8*%z to i8**
store i8*%C,i8**%D,align 8
%E=load i8*,i8**%e,align 8
%F=getelementptr inbounds i8,i8*%z,i64 8
%G=bitcast i8*%F to i8**
store i8*%E,i8**%G,align 8
%H=getelementptr inbounds i8,i8*%z,i64 16
%I=bitcast i8*%H to i32*
store i32 3,i32*%I,align 4
ret i8*%z
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2594(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
l:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%j,label%g
g:
call void@sml_check(i32 inreg%e)
%h=load i8*,i8**%d,align 8
%i=load i8*,i8**%c,align 8
br label%j
j:
%k=phi i8*[%i,%g],[%a,%l]
%m=phi i8*[%h,%g],[%b,%l]
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%d,align 8
%p=getelementptr inbounds i8,i8*%k,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*null,i8**%c,align 8
%s=bitcast i8*%k to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%m,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%r,i8*inreg%t,i8*inreg%w)
store i8*%x,i8**%c,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
%B=load i8*,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=load i8*,i8**%c,align 8
%E=getelementptr inbounds i8,i8*%y,i64 8
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%y,i64 16
%H=bitcast i8*%G to i32*
store i32 3,i32*%H,align 4
ret i8*%y
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2596(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2598(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2601(i8*inreg%a)#4 gc"smlsharp"{
%b=bitcast i8*%a to i8**
%c=load i8*,i8**%b,align 8
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2603(i8*inreg%a)#2 gc"smlsharp"{
j:
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=load atomic i32,i32*@sml_check_flag unordered,align 4
%e=icmp eq i32%d,0
br i1%e,label%h,label%f
f:
call void@sml_check(i32 inreg%d)
%g=load i8*,i8**%b,align 8
br label%h
h:
%i=phi i8*[%g,%f],[%a,%j]
%k=bitcast i8*%i to i8**
%l=load i8*,i8**%k,align 8
%m=getelementptr inbounds i8,i8*%i,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%b,align 8
%p=getelementptr inbounds i8,i8*%l,i64 8
%q=bitcast i8*%p to i8**
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%c,align 8
%s=call i8*@sml_alloc(i32 inreg 20)#0
%t=getelementptr inbounds i8,i8*%s,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=load i8*,i8**%c,align 8
%w=bitcast i8*%s to i8**
store i8*%v,i8**%w,align 8
%x=load i8*,i8**%b,align 8
%y=getelementptr inbounds i8,i8*%s,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%s,i64 16
%B=bitcast i8*%A to i32*
store i32 3,i32*%B,align 4
%C=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%s)
ret i8*%C
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%i=bitcast i8*%b to i8**
%j=load i8*,i8**%i,align 8
store i8*%j,i8**%d,align 8
%k=bitcast i8*%a to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%f,align 8
%m=getelementptr inbounds i8,i8*%a,i64 8
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%g,align 8
%p=call i8*@sml_alloc(i32 inreg 44)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177320,i32*%r,align 4
store i8*%p,i8**%h,align 8
%s=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%E=getelementptr inbounds i8,i8*%p,i64 32
%F=bitcast i8*%E to i8**
store i8*%D,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%p,i64 40
%H=bitcast i8*%G to i32*
store i32 31,i32*%H,align 4
%I=call i8*@sml_alloc(i32 inreg 28)#0
%J=getelementptr inbounds i8,i8*%I,i64 -4
%K=bitcast i8*%J to i32*
store i32 1342177304,i32*%K,align 4
%L=load i8*,i8**%h,align 8
%M=bitcast i8*%I to i8**
store i8*%L,i8**%M,align 8
%N=getelementptr inbounds i8,i8*%I,i64 8
%O=bitcast i8*%N to void(...)**
store void(...)*bitcast(i8*(i8*,i32)*@_SMLLLN12ElaborateSQL9elabEmbedE_2411 to void(...)*),void(...)**%O,align 8
%P=getelementptr inbounds i8,i8*%I,i64 16
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabEmbedE_2748 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%I,i64 24
%S=bitcast i8*%R to i32*
store i32 -2147483647,i32*%S,align 4
ret i8*%I
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2391(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
t:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%m,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%r,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%p],[%c,%t]
store i8*null,i8**%e,align 8
%u=bitcast i8*%s to i32*
%v=load i32,i32*%u,align 4
switch i32%v,label%w[
i32 0,label%jI
i32 1,label%fH
i32 2,label%aT
i32 3,label%O
]
w:
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%x=load i8*,i8**@_SMLZ5Match,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%e,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@h8,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%e,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=getelementptr inbounds i8,i8*%s,i64 8
%Q=bitcast i8*%P to i8**
%R=load i8*,i8**%Q,align 8
%S=bitcast i8*%R to i8**
%T=load i8*,i8**%S,align 8
%U=getelementptr inbounds i8,i8*%R,i64 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
store i8*%W,i8**%e,align 8
%X=load i8*,i8**%d,align 8
%Y=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Z=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%Y,i8*inreg%X,i8*inreg%T)
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%d,align 8
%ac=getelementptr inbounds i8,i8*%Z,i64 8
%ad=bitcast i8*%ac to i8**
%ae=load i8*,i8**%ad,align 8
store i8*%ae,i8**%f,align 8
%af=call i8*@sml_alloc(i32 inreg 20)#0
%ag=getelementptr inbounds i8,i8*%af,i64 -4
%ah=bitcast i8*%ag to i32*
store i32 1342177296,i32*%ah,align 4
store i8*%af,i8**%g,align 8
%ai=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aj=bitcast i8*%af to i8**
store i8*%ai,i8**%aj,align 8
%ak=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%al=getelementptr inbounds i8,i8*%af,i64 8
%am=bitcast i8*%al to i8**
store i8*%ak,i8**%am,align 8
%an=getelementptr inbounds i8,i8*%af,i64 16
%ao=bitcast i8*%an to i32*
store i32 3,i32*%ao,align 4
%ap=call i8*@sml_alloc(i32 inreg 20)#0
%aq=getelementptr inbounds i8,i8*%ap,i64 -4
%ar=bitcast i8*%aq to i32*
store i32 1342177296,i32*%ar,align 4
store i8*%ap,i8**%f,align 8
%as=getelementptr inbounds i8,i8*%ap,i64 4
%at=bitcast i8*%as to i32*
store i32 0,i32*%at,align 1
%au=bitcast i8*%ap to i32*
store i32 3,i32*%au,align 4
%av=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aw=getelementptr inbounds i8,i8*%ap,i64 8
%ax=bitcast i8*%aw to i8**
store i8*%av,i8**%ax,align 8
%ay=getelementptr inbounds i8,i8*%ap,i64 16
%az=bitcast i8*%ay to i32*
store i32 2,i32*%az,align 4
%aA=call i8*@sml_alloc(i32 inreg 20)#0
%aB=getelementptr inbounds i8,i8*%aA,i64 -4
%aC=bitcast i8*%aB to i32*
store i32 1342177296,i32*%aC,align 4
store i8*%aA,i8**%e,align 8
%aD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aE=bitcast i8*%aA to i8**
store i8*%aD,i8**%aE,align 8
%aF=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aG=getelementptr inbounds i8,i8*%aA,i64 8
%aH=bitcast i8*%aG to i8**
store i8*%aF,i8**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aA,i64 16
%aJ=bitcast i8*%aI to i32*
store i32 3,i32*%aJ,align 4
%aK=call i8*@sml_alloc(i32 inreg 20)#0
%aL=getelementptr inbounds i8,i8*%aK,i64 -4
%aM=bitcast i8*%aL to i32*
store i32 1342177296,i32*%aM,align 4
%aN=bitcast i8*%aK to i64*
store i64 0,i64*%aN,align 4
%aO=load i8*,i8**%e,align 8
%aP=getelementptr inbounds i8,i8*%aK,i64 8
%aQ=bitcast i8*%aP to i8**
store i8*%aO,i8**%aQ,align 8
%aR=getelementptr inbounds i8,i8*%aK,i64 16
%aS=bitcast i8*%aR to i32*
store i32 2,i32*%aS,align 4
ret i8*%aK
aT:
%aU=getelementptr inbounds i8,i8*%s,i64 8
%aV=bitcast i8*%aU to i8**
%aW=load i8*,i8**%aV,align 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=getelementptr inbounds i8,i8*%aW,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%e,align 8
%a2=getelementptr inbounds i8,i8*%aW,i64 16
%a3=bitcast i8*%a2 to i8**
%a4=load i8*,i8**%a3,align 8
store i8*%a4,i8**%f,align 8
%a5=getelementptr inbounds i8,i8*%aW,i64 24
%a6=bitcast i8*%a5 to i8**
%a7=load i8*,i8**%a6,align 8
store i8*%a7,i8**%g,align 8
%a8=load i8*,i8**%d,align 8
%a9=load i8*,i8**%m,align 8
%ba=call fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2391(i8*inreg%a9,i8*inreg%a8,i8*inreg%aY)
%bb=getelementptr inbounds i8,i8*%ba,i64 8
%bc=bitcast i8*%bb to i8**
%bd=load i8*,i8**%bc,align 8
%be=bitcast i8*%ba to i32*
%bf=load i32,i32*%be,align 4
%bg=bitcast i8*%bd to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%h,align 8
%bi=getelementptr inbounds i8,i8*%bd,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%i,align 8
%bl=load i8*,i8**%d,align 8
%bm=load i8*,i8**%f,align 8
%bn=load i8*,i8**%m,align 8
store i8*null,i8**%f,align 8
%bo=call fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2391(i8*inreg%bn,i8*inreg%bl,i8*inreg%bm)
%bp=getelementptr inbounds i8,i8*%bo,i64 8
%bq=bitcast i8*%bp to i8**
%br=load i8*,i8**%bq,align 8
%bs=bitcast i8*%bo to i32*
%bt=load i32,i32*%bs,align 4
%bu=bitcast i8*%br to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%f,align 8
%bw=getelementptr inbounds i8,i8*%br,i64 8
%bx=bitcast i8*%bw to i8**
%by=load i8*,i8**%bx,align 8
store i8*%by,i8**%j,align 8
%bz=load i8*,i8**%e,align 8
%bA=bitcast i8*%bz to i32*
%bB=load i32,i32*%bA,align 4
switch i32%bB,label%bC[
i32 1,label%ce
i32 0,label%b4
i32 2,label%bU
]
bC:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%bD=load i8*,i8**@_SMLZ5Match,align 8
store i8*%bD,i8**%d,align 8
%bE=call i8*@sml_alloc(i32 inreg 20)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177296,i32*%bG,align 4
store i8*%bE,i8**%e,align 8
%bH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bE,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@h4,i64 0,i32 2,i64 0),i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bE,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call i8*@sml_alloc(i32 inreg 60)#0
%bO=getelementptr inbounds i8,i8*%bN,i64 -4
%bP=bitcast i8*%bO to i32*
store i32 1342177336,i32*%bP,align 4
%bQ=getelementptr inbounds i8,i8*%bN,i64 56
%bR=bitcast i8*%bQ to i32*
store i32 1,i32*%bR,align 4
%bS=load i8*,i8**%e,align 8
%bT=bitcast i8*%bN to i8**
store i8*%bS,i8**%bT,align 8
call void@sml_raise(i8*inreg%bN)#1
unreachable
bU:
store i8*null,i8**%e,align 8
%bV=load i8*,i8**%m,align 8
%bW=getelementptr inbounds i8,i8*%bV,i64 8
%bX=bitcast i8*%bW to i8**
%bY=load i8*,i8**%bX,align 8
store i8*%bY,i8**%d,align 8
%bZ=call i8*@sml_alloc(i32 inreg 20)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177296,i32*%b1,align 4
%b2=load i8*,i8**%d,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
br label%cW
b4:
store i8*null,i8**%e,align 8
%b5=load i8*,i8**%m,align 8
%b6=getelementptr inbounds i8,i8*%b5,i64 8
%b7=bitcast i8*%b6 to i8**
%b8=load i8*,i8**%b7,align 8
store i8*%b8,i8**%d,align 8
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
%cc=load i8*,i8**%d,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
br label%cW
ce:
%cf=getelementptr inbounds i8,i8*%bz,i64 8
%cg=bitcast i8*%cf to i8**
%ch=load i8*,i8**%cg,align 8
%ci=bitcast i8*%ch to i8**
%cj=load i8*,i8**%ci,align 8
store i8*%cj,i8**%e,align 8
%ck=getelementptr inbounds i8,i8*%ch,i64 8
%cl=bitcast i8*%ck to i8**
%cm=load i8*,i8**%cl,align 8
%cn=load i8*,i8**%d,align 8
%co=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%cp=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%co,i8*inreg%cn,i8*inreg%cm)
%cq=bitcast i8*%cp to i8**
%cr=load i8*,i8**%cq,align 8
store i8*%cr,i8**%d,align 8
%cs=getelementptr inbounds i8,i8*%cp,i64 8
%ct=bitcast i8*%cs to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%k,align 8
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
store i8*%cv,i8**%l,align 8
%cy=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
store i8*%cF,i8**%e,align 8
%cI=getelementptr inbounds i8,i8*%cF,i64 4
%cJ=bitcast i8*%cI to i32*
store i32 0,i32*%cJ,align 1
%cK=bitcast i8*%cF to i32*
store i32 1,i32*%cK,align 4
%cL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%cM=getelementptr inbounds i8,i8*%cF,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cF,i64 16
%cP=bitcast i8*%cO to i32*
store i32 2,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
%cT=load i8*,i8**%d,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%e,align 8
br label%cW
cW:
%cX=phi i8*[%cQ,%ce],[%b9,%b4],[%bZ,%bU]
%cY=phi i8*[%cV,%ce],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@h2,i64 0,i32 2)to i8*),%b4],[bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i32}>,<{[4x i8],i32,i32,[4x i8],i32}>*@h3,i64 0,i32 2)to i8*),%bU]
%cZ=phi i8*[%cT,%ce],[%cc,%b4],[%b2,%bU]
%c0=getelementptr inbounds i8,i8*%cX,i64 8
%c1=bitcast i8*%c0 to i8**
store i8*%cY,i8**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cX,i64 16
%c3=bitcast i8*%c2 to i32*
store i32 3,i32*%c3,align 4
store i8*%cZ,i8**%d,align 8
store i8*%cY,i8**%e,align 8
%c4=bitcast i8*%cY to i32*
%c5=load i32,i32*%c4,align 4
%c6=icmp eq i32%c5,2
%c7=zext i1%c6 to i32
%c8=or i32%bt,%bf
%c9=icmp eq i32%c8,0
%da=xor i1%c6,true
%db=or i1%c9,%da
br i1%db,label%dx,label%dc
dc:
%dd=load i8*,i8**@_SMLZN17ElaborateErrorSQL20UnnaturalNaturalJoinE,align 8
store i8*%dd,i8**%k,align 8
%de=call i8*@sml_alloc(i32 inreg 20)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177296,i32*%dg,align 4
store i8*%de,i8**%l,align 8
%dh=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%di=bitcast i8*%de to i8**
store i8*%dh,i8**%di,align 8
%dj=getelementptr inbounds i8,i8*%de,i64 8
%dk=bitcast i8*%dj to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@h5,i64 0,i32 2,i64 0),i8**%dk,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 16
%dm=bitcast i8*%dl to i32*
store i32 3,i32*%dm,align 4
%dn=call i8*@sml_alloc(i32 inreg 20)#0
%do=getelementptr inbounds i8,i8*%dn,i64 -4
%dp=bitcast i8*%do to i32*
store i32 1342177296,i32*%dp,align 4
%dq=load i8*,i8**%g,align 8
%dr=bitcast i8*%dn to i8**
store i8*%dq,i8**%dr,align 8
%ds=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dt=getelementptr inbounds i8,i8*%dn,i64 8
%du=bitcast i8*%dt to i8**
store i8*%ds,i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dn,i64 16
%dw=bitcast i8*%dv to i32*
store i32 3,i32*%dw,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%dn)
br label%dx
dx:
%dy=call fastcc i32@_SMLFN4Bool3notE(i32 inreg%c7)
%dz=call i8*@sml_alloc(i32 inreg 20)#0
%dA=getelementptr inbounds i8,i8*%dz,i64 -4
%dB=bitcast i8*%dA to i32*
store i32 1342177296,i32*%dB,align 4
store i8*%dz,i8**%k,align 8
%dC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dD=bitcast i8*%dz to i8**
store i8*%dC,i8**%dD,align 8
%dE=getelementptr inbounds i8,i8*%dz,i64 8
%dF=bitcast i8*%dE to i8**
store i8*null,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dz,i64 16
%dH=bitcast i8*%dG to i32*
store i32 3,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 20)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177296,i32*%dK,align 4
store i8*%dI,i8**%l,align 8
%dL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dM=bitcast i8*%dI to i8**
store i8*%dL,i8**%dM,align 8
%dN=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%dO=getelementptr inbounds i8,i8*%dI,i64 8
%dP=bitcast i8*%dO to i8**
store i8*%dN,i8**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dI,i64 16
%dR=bitcast i8*%dQ to i32*
store i32 3,i32*%dR,align 4
%dS=call i8*@sml_alloc(i32 inreg 20)#0
%dT=getelementptr inbounds i8,i8*%dS,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 1342177296,i32*%dU,align 4
store i8*%dS,i8**%d,align 8
%dV=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dW=bitcast i8*%dS to i8**
store i8*%dV,i8**%dW,align 8
%dX=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%dY=getelementptr inbounds i8,i8*%dS,i64 8
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dS,i64 16
%d1=bitcast i8*%d0 to i32*
store i32 3,i32*%d1,align 4
%d2=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%d3=getelementptr inbounds i8,i8*%d2,i64 16
%d4=bitcast i8*%d3 to i8*(i8*,i8*)**
%d5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d4,align 8
%d6=bitcast i8*%d2 to i8**
%d7=load i8*,i8**%d6,align 8
store i8*%d7,i8**%f,align 8
%d8=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%d9=getelementptr inbounds i8,i8*%d8,i64 16
%ea=bitcast i8*%d9 to i8*(i8*,i8*)**
%eb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ea,align 8
%ec=bitcast i8*%d8 to i8**
%ed=load i8*,i8**%ec,align 8
%ee=call fastcc i8*%eb(i8*inreg%ed,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h6,i64 0,i32 2)to i8*))
%ef=getelementptr inbounds i8,i8*%ee,i64 16
%eg=bitcast i8*%ef to i8*(i8*,i8*)**
%eh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eg,align 8
%ei=bitcast i8*%ee to i8**
%ej=load i8*,i8**%ei,align 8
%ek=load i8*,i8**%d,align 8
%el=call fastcc i8*%eh(i8*inreg%ej,i8*inreg%ek)
%em=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%en=call fastcc i8*%d5(i8*inreg%em,i8*inreg%el)
store i8*%en,i8**%f,align 8
%eo=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ep=getelementptr inbounds i8,i8*%eo,i64 16
%eq=bitcast i8*%ep to i8*(i8*,i8*)**
%er=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eq,align 8
%es=bitcast i8*%eo to i8**
%et=load i8*,i8**%es,align 8
%eu=call fastcc i8*%er(i8*inreg%et,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h7,i64 0,i32 2)to i8*))
%ev=getelementptr inbounds i8,i8*%eu,i64 16
%ew=bitcast i8*%ev to i8*(i8*,i8*)**
%ex=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ew,align 8
%ey=bitcast i8*%eu to i8**
%ez=load i8*,i8**%ey,align 8
%eA=bitcast i8**%m to i8***
%eB=load i8**,i8***%eA,align 8
store i8*null,i8**%m,align 8
%eC=load i8*,i8**%eB,align 8
%eD=call fastcc i8*%ex(i8*inreg%ez,i8*inreg%eC)
%eE=getelementptr inbounds i8,i8*%eD,i64 16
%eF=bitcast i8*%eE to i8*(i8*,i8*)**
%eG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eF,align 8
%eH=bitcast i8*%eD to i8**
%eI=load i8*,i8**%eH,align 8
%eJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eK=call fastcc i8*%eG(i8*inreg%eI,i8*inreg%eJ)
store i8*%eK,i8**%d,align 8
%eL=call i8*@sml_alloc(i32 inreg 20)#0
%eM=getelementptr inbounds i8,i8*%eL,i64 -4
%eN=bitcast i8*%eM to i32*
store i32 1342177296,i32*%eN,align 4
store i8*%eL,i8**%h,align 8
%eO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eP=bitcast i8*%eL to i8**
store i8*%eO,i8**%eP,align 8
%eQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eR=getelementptr inbounds i8,i8*%eL,i64 8
%eS=bitcast i8*%eR to i8**
store i8*%eQ,i8**%eS,align 8
%eT=getelementptr inbounds i8,i8*%eL,i64 16
%eU=bitcast i8*%eT to i32*
store i32 3,i32*%eU,align 4
%eV=call i8*@sml_alloc(i32 inreg 36)#0
%eW=getelementptr inbounds i8,i8*%eV,i64 -4
%eX=bitcast i8*%eW to i32*
store i32 1342177312,i32*%eX,align 4
store i8*%eV,i8**%d,align 8
%eY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eZ=bitcast i8*%eV to i8**
store i8*%eY,i8**%eZ,align 8
%e0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%e1=getelementptr inbounds i8,i8*%eV,i64 8
%e2=bitcast i8*%e1 to i8**
store i8*%e0,i8**%e2,align 8
%e3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%e4=getelementptr inbounds i8,i8*%eV,i64 16
%e5=bitcast i8*%e4 to i8**
store i8*%e3,i8**%e5,align 8
%e6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e7=getelementptr inbounds i8,i8*%eV,i64 24
%e8=bitcast i8*%e7 to i8**
store i8*%e6,i8**%e8,align 8
%e9=getelementptr inbounds i8,i8*%eV,i64 32
%fa=bitcast i8*%e9 to i32*
store i32 15,i32*%fa,align 4
%fb=call i8*@sml_alloc(i32 inreg 20)#0
%fc=getelementptr inbounds i8,i8*%fb,i64 -4
%fd=bitcast i8*%fc to i32*
store i32 1342177296,i32*%fd,align 4
store i8*%fb,i8**%e,align 8
%fe=getelementptr inbounds i8,i8*%fb,i64 4
%ff=bitcast i8*%fe to i32*
store i32 0,i32*%ff,align 1
%fg=bitcast i8*%fb to i32*
store i32 2,i32*%fg,align 4
%fh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fi=getelementptr inbounds i8,i8*%fb,i64 8
%fj=bitcast i8*%fi to i8**
store i8*%fh,i8**%fj,align 8
%fk=getelementptr inbounds i8,i8*%fb,i64 16
%fl=bitcast i8*%fk to i32*
store i32 2,i32*%fl,align 4
%fm=call i8*@sml_alloc(i32 inreg 20)#0
%fn=getelementptr inbounds i8,i8*%fm,i64 -4
%fo=bitcast i8*%fn to i32*
store i32 1342177296,i32*%fo,align 4
store i8*%fm,i8**%d,align 8
%fp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fq=bitcast i8*%fm to i8**
store i8*%fp,i8**%fq,align 8
%fr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fs=getelementptr inbounds i8,i8*%fm,i64 8
%ft=bitcast i8*%fs to i8**
store i8*%fr,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fm,i64 16
%fv=bitcast i8*%fu to i32*
store i32 3,i32*%fv,align 4
%fw=call i8*@sml_alloc(i32 inreg 20)#0
%fx=bitcast i8*%fw to i32*
%fy=getelementptr inbounds i8,i8*%fw,i64 -4
%fz=bitcast i8*%fy to i32*
store i32 1342177296,i32*%fz,align 4
%fA=getelementptr inbounds i8,i8*%fw,i64 4
%fB=bitcast i8*%fA to i32*
store i32 0,i32*%fB,align 1
store i32%dy,i32*%fx,align 4
%fC=load i8*,i8**%d,align 8
%fD=getelementptr inbounds i8,i8*%fw,i64 8
%fE=bitcast i8*%fD to i8**
store i8*%fC,i8**%fE,align 8
%fF=getelementptr inbounds i8,i8*%fw,i64 16
%fG=bitcast i8*%fF to i32*
store i32 2,i32*%fG,align 4
ret i8*%fw
fH:
%fI=getelementptr inbounds i8,i8*%s,i64 8
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
%fL=bitcast i8*%fK to i8**
%fM=load i8*,i8**%fL,align 8
%fN=bitcast i8*%fM to i32*
%fO=load i32,i32*%fN,align 4
%fP=icmp eq i32%fO,0
br i1%fP,label%hj,label%fQ
fQ:
%fR=getelementptr inbounds i8,i8*%fK,i64 8
%fS=bitcast i8*%fR to i8**
%fT=load i8*,i8**%fS,align 8
store i8*%fT,i8**%e,align 8
%fU=getelementptr inbounds i8,i8*%fK,i64 16
%fV=bitcast i8*%fU to i8**
%fW=load i8*,i8**%fV,align 8
store i8*%fW,i8**%f,align 8
%fX=load i8*,i8**%d,align 8
%fY=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%fZ=call fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2391(i8*inreg%fY,i8*inreg%fX,i8*inreg%fM)
%f0=getelementptr inbounds i8,i8*%fZ,i64 8
%f1=bitcast i8*%f0 to i8**
%f2=load i8*,i8**%f1,align 8
%f3=bitcast i8*%fZ to i32*
%f4=load i32,i32*%f3,align 4
%f5=bitcast i8*%f2 to i8**
%f6=load i8*,i8**%f5,align 8
store i8*%f6,i8**%d,align 8
%f7=getelementptr inbounds i8,i8*%f2,i64 8
%f8=bitcast i8*%f7 to i8**
%f9=load i8*,i8**%f8,align 8
store i8*%f9,i8**%g,align 8
%ga=icmp eq i32%f4,0
br i1%ga,label%gz,label%gb
gb:
%gc=load i8*,i8**@_SMLZN17ElaborateErrorSQL13CrossJoinNameE,align 8
store i8*%gc,i8**%h,align 8
%gd=call i8*@sml_alloc(i32 inreg 28)#0
%ge=getelementptr inbounds i8,i8*%gd,i64 -4
%gf=bitcast i8*%ge to i32*
store i32 1342177304,i32*%gf,align 4
store i8*%gd,i8**%i,align 8
%gg=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gh=bitcast i8*%gd to i8**
store i8*%gg,i8**%gh,align 8
%gi=getelementptr inbounds i8,i8*%gd,i64 8
%gj=bitcast i8*%gi to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@h1,i64 0,i32 2,i64 0),i8**%gj,align 8
%gk=load i8*,i8**%e,align 8
%gl=getelementptr inbounds i8,i8*%gd,i64 16
%gm=bitcast i8*%gl to i8**
store i8*%gk,i8**%gm,align 8
%gn=getelementptr inbounds i8,i8*%gd,i64 24
%go=bitcast i8*%gn to i32*
store i32 7,i32*%go,align 4
%gp=call i8*@sml_alloc(i32 inreg 20)#0
%gq=getelementptr inbounds i8,i8*%gp,i64 -4
%gr=bitcast i8*%gq to i32*
store i32 1342177296,i32*%gr,align 4
%gs=load i8*,i8**%f,align 8
%gt=bitcast i8*%gp to i8**
store i8*%gs,i8**%gt,align 8
%gu=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gv=getelementptr inbounds i8,i8*%gp,i64 8
%gw=bitcast i8*%gv to i8**
store i8*%gu,i8**%gw,align 8
%gx=getelementptr inbounds i8,i8*%gp,i64 16
%gy=bitcast i8*%gx to i32*
store i32 3,i32*%gy,align 4
call fastcc void@_SMLFN14UserErrorUtils12enqueueErrorE(i8*inreg%gp)
br label%gz
gz:
%gA=call i8*@sml_alloc(i32 inreg 28)#0
%gB=getelementptr inbounds i8,i8*%gA,i64 -4
%gC=bitcast i8*%gB to i32*
store i32 1342177304,i32*%gC,align 4
store i8*%gA,i8**%h,align 8
%gD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gE=bitcast i8*%gA to i8**
store i8*%gD,i8**%gE,align 8
%gF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gG=getelementptr inbounds i8,i8*%gA,i64 8
%gH=bitcast i8*%gG to i8**
store i8*%gF,i8**%gH,align 8
%gI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gJ=getelementptr inbounds i8,i8*%gA,i64 16
%gK=bitcast i8*%gJ to i8**
store i8*%gI,i8**%gK,align 8
%gL=getelementptr inbounds i8,i8*%gA,i64 24
%gM=bitcast i8*%gL to i32*
store i32 7,i32*%gM,align 4
%gN=call i8*@sml_alloc(i32 inreg 20)#0
%gO=getelementptr inbounds i8,i8*%gN,i64 -4
%gP=bitcast i8*%gO to i32*
store i32 1342177296,i32*%gP,align 4
store i8*%gN,i8**%f,align 8
%gQ=getelementptr inbounds i8,i8*%gN,i64 4
%gR=bitcast i8*%gQ to i32*
store i32 0,i32*%gR,align 1
%gS=bitcast i8*%gN to i32*
store i32 1,i32*%gS,align 4
%gT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gU=getelementptr inbounds i8,i8*%gN,i64 8
%gV=bitcast i8*%gU to i8**
store i8*%gT,i8**%gV,align 8
%gW=getelementptr inbounds i8,i8*%gN,i64 16
%gX=bitcast i8*%gW to i32*
store i32 2,i32*%gX,align 4
%gY=call i8*@sml_alloc(i32 inreg 20)#0
%gZ=getelementptr inbounds i8,i8*%gY,i64 -4
%g0=bitcast i8*%gZ to i32*
store i32 1342177296,i32*%g0,align 4
store i8*%gY,i8**%e,align 8
%g1=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g2=bitcast i8*%gY to i8**
store i8*%g1,i8**%g2,align 8
%g3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%g4=getelementptr inbounds i8,i8*%gY,i64 8
%g5=bitcast i8*%g4 to i8**
store i8*%g3,i8**%g5,align 8
%g6=getelementptr inbounds i8,i8*%gY,i64 16
%g7=bitcast i8*%g6 to i32*
store i32 3,i32*%g7,align 4
%g8=call i8*@sml_alloc(i32 inreg 20)#0
%g9=bitcast i8*%g8 to i32*
%ha=getelementptr inbounds i8,i8*%g8,i64 -4
%hb=bitcast i8*%ha to i32*
store i32 1342177296,i32*%hb,align 4
%hc=getelementptr inbounds i8,i8*%g8,i64 4
%hd=bitcast i8*%hc to i32*
store i32 0,i32*%hd,align 1
store i32%f4,i32*%g9,align 4
%he=load i8*,i8**%e,align 8
%hf=getelementptr inbounds i8,i8*%g8,i64 8
%hg=bitcast i8*%hf to i8**
store i8*%he,i8**%hg,align 8
%hh=getelementptr inbounds i8,i8*%g8,i64 16
%hi=bitcast i8*%hh to i32*
store i32 2,i32*%hi,align 4
ret i8*%g8
hj:
%hk=getelementptr inbounds i8,i8*%fM,i64 8
%hl=bitcast i8*%hk to i8**
%hm=load i8*,i8**%hl,align 8
%hn=getelementptr inbounds i8,i8*%fK,i64 8
%ho=bitcast i8*%hn to i8**
%hp=load i8*,i8**%ho,align 8
store i8*%hp,i8**%e,align 8
%hq=getelementptr inbounds i8,i8*%fK,i64 16
%hr=bitcast i8*%hq to i8**
%hs=load i8*,i8**%hr,align 8
store i8*%hs,i8**%f,align 8
%ht=bitcast i8*%hm to i8**
%hu=load i8*,i8**%ht,align 8
store i8*%hu,i8**%g,align 8
%hv=getelementptr inbounds i8,i8*%hm,i64 8
%hw=bitcast i8*%hv to i8**
%hx=load i8*,i8**%hw,align 8
store i8*%hx,i8**%h,align 8
%hy=getelementptr inbounds i8,i8*%hm,i64 16
%hz=bitcast i8*%hy to i8**
%hA=load i8*,i8**%hz,align 8
store i8*%hA,i8**%i,align 8
%hB=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%hu)
store i8*%hB,i8**%j,align 8
%hC=call i8*@sml_alloc(i32 inreg 20)#0
%hD=getelementptr inbounds i8,i8*%hC,i64 -4
%hE=bitcast i8*%hD to i32*
store i32 1342177296,i32*%hE,align 4
store i8*%hC,i8**%k,align 8
%hF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%hG=bitcast i8*%hC to i8**
store i8*%hF,i8**%hG,align 8
%hH=getelementptr inbounds i8,i8*%hC,i64 8
%hI=bitcast i8*%hH to i8**
store i8*null,i8**%hI,align 8
%hJ=getelementptr inbounds i8,i8*%hC,i64 16
%hK=bitcast i8*%hJ to i32*
store i32 3,i32*%hK,align 4
%hL=call i8*@sml_alloc(i32 inreg 20)#0
%hM=getelementptr inbounds i8,i8*%hL,i64 -4
%hN=bitcast i8*%hM to i32*
store i32 1342177296,i32*%hN,align 4
store i8*%hL,i8**%l,align 8
%hO=getelementptr inbounds i8,i8*%hL,i64 4
%hP=bitcast i8*%hO to i32*
store i32 0,i32*%hP,align 1
%hQ=bitcast i8*%hL to i32*
store i32 15,i32*%hQ,align 4
%hR=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hS=getelementptr inbounds i8,i8*%hL,i64 8
%hT=bitcast i8*%hS to i8**
store i8*%hR,i8**%hT,align 8
%hU=getelementptr inbounds i8,i8*%hL,i64 16
%hV=bitcast i8*%hU to i32*
store i32 2,i32*%hV,align 4
%hW=call i8*@sml_alloc(i32 inreg 20)#0
%hX=getelementptr inbounds i8,i8*%hW,i64 -4
%hY=bitcast i8*%hX to i32*
store i32 1342177296,i32*%hY,align 4
store i8*%hW,i8**%g,align 8
%hZ=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%h0=bitcast i8*%hW to i8**
store i8*%hZ,i8**%h0,align 8
%h1=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%h2=getelementptr inbounds i8,i8*%hW,i64 8
%h3=bitcast i8*%h2 to i8**
store i8*%h1,i8**%h3,align 8
%h4=getelementptr inbounds i8,i8*%hW,i64 16
%h5=bitcast i8*%h4 to i32*
store i32 3,i32*%h5,align 4
%h6=load i8*,i8**%d,align 8
%h7=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%h8=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%h7,i8*inreg%h6)
%h9=getelementptr inbounds i8,i8*%h8,i64 16
%ia=bitcast i8*%h9 to i8*(i8*,i8*)**
%ib=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ia,align 8
%ic=bitcast i8*%h8 to i8**
%id=load i8*,i8**%ic,align 8
store i8*%id,i8**%d,align 8
%ie=call i8*@sml_alloc(i32 inreg 4)#0
%if=bitcast i8*%ie to i32*
%ig=getelementptr inbounds i8,i8*%ie,i64 -4
%ih=bitcast i8*%ig to i32*
store i32 4,i32*%ih,align 4
store i32 1,i32*%if,align 4
%ii=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ij=call fastcc i8*%ib(i8*inreg%ii,i8*inreg%ie)
%ik=getelementptr inbounds i8,i8*%ij,i64 16
%il=bitcast i8*%ik to i8*(i8*,i8*)**
%im=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%il,align 8
%in=bitcast i8*%ij to i8**
%io=load i8*,i8**%in,align 8
%ip=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iq=call fastcc i8*%im(i8*inreg%io,i8*inreg%ip)
%ir=bitcast i8*%iq to i8**
%is=load i8*,i8**%ir,align 8
store i8*%is,i8**%d,align 8
%it=getelementptr inbounds i8,i8*%iq,i64 8
%iu=bitcast i8*%it to i8**
%iv=load i8*,i8**%iu,align 8
store i8*%iv,i8**%g,align 8
%iw=call i8*@sml_alloc(i32 inreg 28)#0
%ix=getelementptr inbounds i8,i8*%iw,i64 -4
%iy=bitcast i8*%ix to i32*
store i32 1342177304,i32*%iy,align 4
store i8*%iw,i8**%j,align 8
%iz=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iA=bitcast i8*%iw to i8**
store i8*%iz,i8**%iA,align 8
%iB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%iC=getelementptr inbounds i8,i8*%iw,i64 8
%iD=bitcast i8*%iC to i8**
store i8*%iB,i8**%iD,align 8
%iE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%iF=getelementptr inbounds i8,i8*%iw,i64 16
%iG=bitcast i8*%iF to i8**
store i8*%iE,i8**%iG,align 8
%iH=getelementptr inbounds i8,i8*%iw,i64 24
%iI=bitcast i8*%iH to i32*
store i32 7,i32*%iI,align 4
%iJ=call i8*@sml_alloc(i32 inreg 20)#0
%iK=getelementptr inbounds i8,i8*%iJ,i64 -4
%iL=bitcast i8*%iK to i32*
store i32 1342177296,i32*%iL,align 4
store i8*%iJ,i8**%g,align 8
%iM=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%iN=bitcast i8*%iJ to i8**
store i8*%iM,i8**%iN,align 8
%iO=getelementptr inbounds i8,i8*%iJ,i64 8
%iP=bitcast i8*%iO to i8**
store i8*null,i8**%iP,align 8
%iQ=getelementptr inbounds i8,i8*%iJ,i64 16
%iR=bitcast i8*%iQ to i32*
store i32 3,i32*%iR,align 4
%iS=call i8*@sml_alloc(i32 inreg 20)#0
%iT=getelementptr inbounds i8,i8*%iS,i64 -4
%iU=bitcast i8*%iT to i32*
store i32 1342177296,i32*%iU,align 4
store i8*%iS,i8**%h,align 8
%iV=bitcast i8*%iS to i64*
store i64 0,i64*%iV,align 4
%iW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iX=getelementptr inbounds i8,i8*%iS,i64 8
%iY=bitcast i8*%iX to i8**
store i8*%iW,i8**%iY,align 8
%iZ=getelementptr inbounds i8,i8*%iS,i64 16
%i0=bitcast i8*%iZ to i32*
store i32 2,i32*%i0,align 4
%i1=call i8*@sml_alloc(i32 inreg 28)#0
%i2=getelementptr inbounds i8,i8*%i1,i64 -4
%i3=bitcast i8*%i2 to i32*
store i32 1342177304,i32*%i3,align 4
store i8*%i1,i8**%g,align 8
%i4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%i5=bitcast i8*%i1 to i8**
store i8*%i4,i8**%i5,align 8
%i6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%i7=getelementptr inbounds i8,i8*%i1,i64 8
%i8=bitcast i8*%i7 to i8**
store i8*%i6,i8**%i8,align 8
%i9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ja=getelementptr inbounds i8,i8*%i1,i64 16
%jb=bitcast i8*%ja to i8**
store i8*%i9,i8**%jb,align 8
%jc=getelementptr inbounds i8,i8*%i1,i64 24
%jd=bitcast i8*%jc to i32*
store i32 7,i32*%jd,align 4
%je=call i8*@sml_alloc(i32 inreg 20)#0
%jf=getelementptr inbounds i8,i8*%je,i64 -4
%jg=bitcast i8*%jf to i32*
store i32 1342177296,i32*%jg,align 4
store i8*%je,i8**%f,align 8
%jh=getelementptr inbounds i8,i8*%je,i64 4
%ji=bitcast i8*%jh to i32*
store i32 0,i32*%ji,align 1
%jj=bitcast i8*%je to i32*
store i32 1,i32*%jj,align 4
%jk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jl=getelementptr inbounds i8,i8*%je,i64 8
%jm=bitcast i8*%jl to i8**
store i8*%jk,i8**%jm,align 8
%jn=getelementptr inbounds i8,i8*%je,i64 16
%jo=bitcast i8*%jn to i32*
store i32 2,i32*%jo,align 4
%jp=call i8*@sml_alloc(i32 inreg 20)#0
%jq=getelementptr inbounds i8,i8*%jp,i64 -4
%jr=bitcast i8*%jq to i32*
store i32 1342177296,i32*%jr,align 4
store i8*%jp,i8**%e,align 8
%js=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%jt=bitcast i8*%jp to i8**
store i8*%js,i8**%jt,align 8
%ju=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jv=getelementptr inbounds i8,i8*%jp,i64 8
%jw=bitcast i8*%jv to i8**
store i8*%ju,i8**%jw,align 8
%jx=getelementptr inbounds i8,i8*%jp,i64 16
%jy=bitcast i8*%jx to i32*
store i32 3,i32*%jy,align 4
%jz=call i8*@sml_alloc(i32 inreg 20)#0
%jA=getelementptr inbounds i8,i8*%jz,i64 -4
%jB=bitcast i8*%jA to i32*
store i32 1342177296,i32*%jB,align 4
%jC=bitcast i8*%jz to i64*
store i64 0,i64*%jC,align 4
%jD=load i8*,i8**%e,align 8
%jE=getelementptr inbounds i8,i8*%jz,i64 8
%jF=bitcast i8*%jE to i8**
store i8*%jD,i8**%jF,align 8
%jG=getelementptr inbounds i8,i8*%jz,i64 16
%jH=bitcast i8*%jG to i32*
store i32 2,i32*%jH,align 4
ret i8*%jz
jI:
%jJ=getelementptr inbounds i8,i8*%s,i64 8
%jK=bitcast i8*%jJ to i8**
%jL=load i8*,i8**%jK,align 8
store i8*%jL,i8**%e,align 8
%jM=bitcast i8*%jL to i8**
%jN=load i8*,i8**%jM,align 8
store i8*%jN,i8**%f,align 8
%jO=getelementptr inbounds i8,i8*%jL,i64 8
%jP=bitcast i8*%jO to i8**
%jQ=load i8*,i8**%jP,align 8
store i8*%jQ,i8**%g,align 8
%jR=getelementptr inbounds i8,i8*%jL,i64 16
%jS=bitcast i8*%jR to i8**
%jT=load i8*,i8**%jS,align 8
store i8*%jT,i8**%h,align 8
%jU=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%jN)
store i8*%jU,i8**%i,align 8
%jV=call i8*@sml_alloc(i32 inreg 20)#0
%jW=getelementptr inbounds i8,i8*%jV,i64 -4
%jX=bitcast i8*%jW to i32*
store i32 1342177296,i32*%jX,align 4
store i8*%jV,i8**%j,align 8
%jY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%jZ=bitcast i8*%jV to i8**
store i8*%jY,i8**%jZ,align 8
%j0=getelementptr inbounds i8,i8*%jV,i64 8
%j1=bitcast i8*%j0 to i8**
store i8*null,i8**%j1,align 8
%j2=getelementptr inbounds i8,i8*%jV,i64 16
%j3=bitcast i8*%j2 to i32*
store i32 3,i32*%j3,align 4
%j4=call i8*@sml_alloc(i32 inreg 20)#0
%j5=getelementptr inbounds i8,i8*%j4,i64 -4
%j6=bitcast i8*%j5 to i32*
store i32 1342177296,i32*%j6,align 4
store i8*%j4,i8**%k,align 8
%j7=getelementptr inbounds i8,i8*%j4,i64 4
%j8=bitcast i8*%j7 to i32*
store i32 0,i32*%j8,align 1
%j9=bitcast i8*%j4 to i32*
store i32 15,i32*%j9,align 4
%ka=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kb=getelementptr inbounds i8,i8*%j4,i64 8
%kc=bitcast i8*%kb to i8**
store i8*%ka,i8**%kc,align 8
%kd=getelementptr inbounds i8,i8*%j4,i64 16
%ke=bitcast i8*%kd to i32*
store i32 2,i32*%ke,align 4
%kf=call i8*@sml_alloc(i32 inreg 20)#0
%kg=getelementptr inbounds i8,i8*%kf,i64 -4
%kh=bitcast i8*%kg to i32*
store i32 1342177296,i32*%kh,align 4
store i8*%kf,i8**%f,align 8
%ki=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kj=bitcast i8*%kf to i8**
store i8*%ki,i8**%kj,align 8
%kk=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kl=getelementptr inbounds i8,i8*%kf,i64 8
%km=bitcast i8*%kl to i8**
store i8*%kk,i8**%km,align 8
%kn=getelementptr inbounds i8,i8*%kf,i64 16
%ko=bitcast i8*%kn to i32*
store i32 3,i32*%ko,align 4
%kp=load i8*,i8**%d,align 8
%kq=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%kr=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%kq,i8*inreg%kp)
%ks=getelementptr inbounds i8,i8*%kr,i64 16
%kt=bitcast i8*%ks to i8*(i8*,i8*)**
%ku=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kt,align 8
%kv=bitcast i8*%kr to i8**
%kw=load i8*,i8**%kv,align 8
store i8*%kw,i8**%d,align 8
%kx=call i8*@sml_alloc(i32 inreg 4)#0
%ky=bitcast i8*%kx to i32*
%kz=getelementptr inbounds i8,i8*%kx,i64 -4
%kA=bitcast i8*%kz to i32*
store i32 4,i32*%kA,align 4
store i32 1,i32*%ky,align 4
%kB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kC=call fastcc i8*%ku(i8*inreg%kB,i8*inreg%kx)
%kD=getelementptr inbounds i8,i8*%kC,i64 16
%kE=bitcast i8*%kD to i8*(i8*,i8*)**
%kF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kE,align 8
%kG=bitcast i8*%kC to i8**
%kH=load i8*,i8**%kG,align 8
%kI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kJ=call fastcc i8*%kF(i8*inreg%kH,i8*inreg%kI)
%kK=bitcast i8*%kJ to i8**
%kL=load i8*,i8**%kK,align 8
store i8*%kL,i8**%d,align 8
%kM=getelementptr inbounds i8,i8*%kJ,i64 8
%kN=bitcast i8*%kM to i8**
%kO=load i8*,i8**%kN,align 8
store i8*%kO,i8**%f,align 8
%kP=call i8*@sml_alloc(i32 inreg 28)#0
%kQ=getelementptr inbounds i8,i8*%kP,i64 -4
%kR=bitcast i8*%kQ to i32*
store i32 1342177304,i32*%kR,align 4
store i8*%kP,i8**%i,align 8
%kS=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kT=bitcast i8*%kP to i8**
store i8*%kS,i8**%kT,align 8
%kU=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kV=getelementptr inbounds i8,i8*%kP,i64 8
%kW=bitcast i8*%kV to i8**
store i8*%kU,i8**%kW,align 8
%kX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kY=getelementptr inbounds i8,i8*%kP,i64 16
%kZ=bitcast i8*%kY to i8**
store i8*%kX,i8**%kZ,align 8
%k0=getelementptr inbounds i8,i8*%kP,i64 24
%k1=bitcast i8*%k0 to i32*
store i32 7,i32*%k1,align 4
%k2=load i8*,i8**%e,align 8
%k3=getelementptr inbounds i8,i8*%k2,i64 8
%k4=bitcast i8*%k3 to i8**
%k5=load i8*,i8**%k4,align 8
store i8*%k5,i8**%e,align 8
%k6=call i8*@sml_alloc(i32 inreg 12)#0
%k7=getelementptr inbounds i8,i8*%k6,i64 -4
%k8=bitcast i8*%k7 to i32*
store i32 1342177288,i32*%k8,align 4
store i8*%k6,i8**%f,align 8
%k9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%la=bitcast i8*%k6 to i8**
store i8*%k9,i8**%la,align 8
%lb=getelementptr inbounds i8,i8*%k6,i64 8
%lc=bitcast i8*%lb to i32*
store i32 1,i32*%lc,align 4
%ld=call i8*@sml_alloc(i32 inreg 20)#0
%le=getelementptr inbounds i8,i8*%ld,i64 -4
%lf=bitcast i8*%le to i32*
store i32 1342177296,i32*%lf,align 4
store i8*%ld,i8**%e,align 8
%lg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lh=bitcast i8*%ld to i8**
store i8*%lg,i8**%lh,align 8
%li=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lj=getelementptr inbounds i8,i8*%ld,i64 8
%lk=bitcast i8*%lj to i8**
store i8*%li,i8**%lk,align 8
%ll=getelementptr inbounds i8,i8*%ld,i64 16
%lm=bitcast i8*%ll to i32*
store i32 3,i32*%lm,align 4
%ln=call i8*@sml_alloc(i32 inreg 20)#0
%lo=getelementptr inbounds i8,i8*%ln,i64 -4
%lp=bitcast i8*%lo to i32*
store i32 1342177296,i32*%lp,align 4
store i8*%ln,i8**%f,align 8
%lq=bitcast i8*%ln to i64*
store i64 0,i64*%lq,align 4
%lr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ls=getelementptr inbounds i8,i8*%ln,i64 8
%lt=bitcast i8*%ls to i8**
store i8*%lr,i8**%lt,align 8
%lu=getelementptr inbounds i8,i8*%ln,i64 16
%lv=bitcast i8*%lu to i32*
store i32 2,i32*%lv,align 4
%lw=call i8*@sml_alloc(i32 inreg 20)#0
%lx=getelementptr inbounds i8,i8*%lw,i64 -4
%ly=bitcast i8*%lx to i32*
store i32 1342177296,i32*%ly,align 4
store i8*%lw,i8**%e,align 8
%lz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lA=bitcast i8*%lw to i8**
store i8*%lz,i8**%lA,align 8
%lB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lC=getelementptr inbounds i8,i8*%lw,i64 8
%lD=bitcast i8*%lC to i8**
store i8*%lB,i8**%lD,align 8
%lE=getelementptr inbounds i8,i8*%lw,i64 16
%lF=bitcast i8*%lE to i32*
store i32 3,i32*%lF,align 4
%lG=call i8*@sml_alloc(i32 inreg 20)#0
%lH=getelementptr inbounds i8,i8*%lG,i64 -4
%lI=bitcast i8*%lH to i32*
store i32 1342177296,i32*%lI,align 4
%lJ=bitcast i8*%lG to i64*
store i64 0,i64*%lJ,align 4
%lK=load i8*,i8**%e,align 8
%lL=getelementptr inbounds i8,i8*%lG,i64 8
%lM=bitcast i8*%lL to i8**
store i8*%lK,i8**%lM,align 8
%lN=getelementptr inbounds i8,i8*%lG,i64 16
%lO=bitcast i8*%lN to i32*
store i32 2,i32*%lO,align 4
ret i8*%lG
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2392(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%o,label%l
l:
call void@sml_check(i32 inreg%j)
%m=load i8*,i8**%e,align 8
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%l],[%a,%q]
%r=phi i8*[%m,%l],[%c,%q]
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
store i8*%t,i8**%e,align 8
%u=getelementptr inbounds i8,i8*%r,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=getelementptr inbounds i8,i8*%p,i64 16
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%h,align 8
%A=call i8*@sml_alloc(i32 inreg 20)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177296,i32*%C,align 4
store i8*%A,i8**%i,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%G=getelementptr inbounds i8,i8*%A,i64 8
%H=bitcast i8*%G to i8**
store i8*%F,i8**%H,align 8
%I=getelementptr inbounds i8,i8*%A,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 28)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177304,i32*%M,align 4
%N=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%O=bitcast i8*%K to i8**
store i8*%N,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%K,i64 8
%Q=bitcast i8*%P to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2422 to void(...)*),void(...)**%Q,align 8
%R=getelementptr inbounds i8,i8*%K,i64 16
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL8elabFromE_2422 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%K,i64 24
%U=bitcast i8*%T to i32*
store i32 -2147483647,i32*%U,align 4
%V=load i8*,i8**%e,align 8
%W=load i8*,i8**%h,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
%X=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%W,i8*inreg%K,i8*inreg%V)
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=getelementptr inbounds i8,i8*%X,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%e,align 8
%ad=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
store i8*%ai,i8**%g,align 8
%aj=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=call fastcc i8*%am(i8*inreg%ao,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@gg,i64 0,i32 2)to i8*))
%aq=getelementptr inbounds i8,i8*%ap,i64 16
%ar=bitcast i8*%aq to i8*(i8*,i8*)**
%as=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ar,align 8
%at=bitcast i8*%ap to i8**
%au=load i8*,i8**%at,align 8
%av=load i8*,i8**%e,align 8
%aw=call fastcc i8*%as(i8*inreg%au,i8*inreg%av)
%ax=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ay=call fastcc i8*%ag(i8*inreg%ax,i8*inreg%aw)
store i8*%ay,i8**%g,align 8
%az=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%aA=getelementptr inbounds i8,i8*%az,i64 16
%aB=bitcast i8*%aA to i8*(i8*,i8*)**
%aC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aB,align 8
%aD=bitcast i8*%az to i8**
%aE=load i8*,i8**%aD,align 8
%aF=call fastcc i8*%aC(i8*inreg%aE,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@h9,i64 0,i32 2)to i8*))
%aG=getelementptr inbounds i8,i8*%aF,i64 16
%aH=bitcast i8*%aG to i8*(i8*,i8*)**
%aI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aH,align 8
%aJ=bitcast i8*%aF to i8**
%aK=load i8*,i8**%aJ,align 8
%aL=load i8*,i8**%g,align 8
%aM=call fastcc i8*%aI(i8*inreg%aK,i8*inreg%aL)
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8*(i8*,i8*)**
%aP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aO,align 8
%aQ=bitcast i8*%aM to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=load i8*,i8**%f,align 8
%aT=call fastcc i8*%aP(i8*inreg%aR,i8*inreg%aS)
%aU=getelementptr inbounds i8,i8*%aT,i64 16
%aV=bitcast i8*%aU to i8*(i8*,i8*)**
%aW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aV,align 8
%aX=bitcast i8*%aT to i8**
%aY=load i8*,i8**%aX,align 8
%aZ=call fastcc i8*%aW(i8*inreg%aY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ib,i64 0,i32 2)to i8*))
%a0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a1=call fastcc i8*@_SMLFN11RecordLabel3Set8fromListE(i8*inreg%a0)
store i8*%a1,i8**%g,align 8
%a2=call i8*@sml_alloc(i32 inreg 12)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177288,i32*%a4,align 4
store i8*%a2,i8**%h,align 8
%a5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a2,i64 8
%a8=bitcast i8*%a7 to i32*
store i32 1,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%g,align 8
%bc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bf=getelementptr inbounds i8,i8*%a9,i64 8
%bg=bitcast i8*%bf to i8**
store i8*%be,i8**%bg,align 8
%bh=getelementptr inbounds i8,i8*%a9,i64 16
%bi=bitcast i8*%bh to i32*
store i32 3,i32*%bi,align 4
%bj=call i8*@sml_alloc(i32 inreg 20)#0
%bk=getelementptr inbounds i8,i8*%bj,i64 -4
%bl=bitcast i8*%bk to i32*
store i32 1342177296,i32*%bl,align 4
store i8*%bj,i8**%f,align 8
%bm=getelementptr inbounds i8,i8*%bj,i64 4
%bn=bitcast i8*%bm to i32*
store i32 0,i32*%bn,align 1
%bo=bitcast i8*%bj to i32*
store i32 11,i32*%bo,align 4
%bp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bq=getelementptr inbounds i8,i8*%bj,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bp,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bj,i64 16
%bt=bitcast i8*%bs to i32*
store i32 2,i32*%bt,align 4
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
store i8*%bu,i8**%e,align 8
%bx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bA=getelementptr inbounds i8,i8*%bu,i64 8
%bB=bitcast i8*%bA to i8**
store i8*%bz,i8**%bB,align 8
%bC=getelementptr inbounds i8,i8*%bu,i64 16
%bD=bitcast i8*%bC to i32*
store i32 3,i32*%bD,align 4
%bE=call i8*@sml_alloc(i32 inreg 20)#0
%bF=getelementptr inbounds i8,i8*%bE,i64 -4
%bG=bitcast i8*%bF to i32*
store i32 1342177296,i32*%bG,align 4
%bH=load i8*,i8**%h,align 8
%bI=bitcast i8*%bE to i8**
store i8*%bH,i8**%bI,align 8
%bJ=load i8*,i8**%e,align 8
%bK=getelementptr inbounds i8,i8*%bE,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bJ,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bE,i64 16
%bN=bitcast i8*%bM to i32*
store i32 3,i32*%bN,align 4
ret i8*%bE
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
E:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
%p=alloca i8*,align 8
%q=alloca i8*,align 8
%r=alloca i8*,align 8
%s=alloca i8*,align 8
%t=alloca i8*,align 8
%u=alloca i8*,align 8
%v=alloca i8*,align 8
%w=alloca i8*,align 8
%x=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
call void@llvm.gcroot(i8**%p,i8*null)#0
call void@llvm.gcroot(i8**%q,i8*null)#0
call void@llvm.gcroot(i8**%r,i8*null)#0
call void@llvm.gcroot(i8**%s,i8*null)#0
call void@llvm.gcroot(i8**%t,i8*null)#0
call void@llvm.gcroot(i8**%u,i8*null)#0
call void@llvm.gcroot(i8**%v,i8*null)#0
call void@llvm.gcroot(i8**%w,i8*null)#0
call void@llvm.gcroot(i8**%x,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%w,align 8
%y=load atomic i32,i32*@sml_check_flag unordered,align 4
%z=icmp eq i32%y,0
br i1%z,label%C,label%A
A:
call void@sml_check(i32 inreg%y)
%B=load i8*,i8**%e,align 8
br label%C
C:
%D=phi i8*[%B,%A],[%c,%E]
store i8*null,i8**%e,align 8
%F=bitcast i8*%D to i32*
%G=load i32,i32*%F,align 4
switch i32%G,label%H[
i32 0,label%ay
i32 1,label%Z
]
H:
store i8*null,i8**%w,align 8
call void@sml_matchcomp_bug()
%I=load i8*,i8**@_SMLZ5Match,align 8
store i8*%I,i8**%d,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%e,align 8
%M=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 60)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177336,i32*%U,align 4
%V=getelementptr inbounds i8,i8*%S,i64 56
%W=bitcast i8*%V to i32*
store i32 1,i32*%W,align 4
%X=load i8*,i8**%e,align 8
%Y=bitcast i8*%S to i8**
store i8*%X,i8**%Y,align 8
call void@sml_raise(i8*inreg%S)#1
unreachable
Z:
%aa=getelementptr inbounds i8,i8*%D,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%e,align 8
%ad=load i8*,i8**%d,align 8
%ae=load i8*,i8**%w,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%w,align 8
%af=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%ae,i8*inreg%ad)
%ag=getelementptr inbounds i8,i8*%af,i64 16
%ah=bitcast i8*%ag to i8*(i8*,i8*)**
%ai=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ah,align 8
%aj=bitcast i8*%af to i8**
%ak=load i8*,i8**%aj,align 8
store i8*%ak,i8**%d,align 8
%al=call i8*@sml_alloc(i32 inreg 4)#0
%am=bitcast i8*%al to i32*
%an=getelementptr inbounds i8,i8*%al,i64 -4
%ao=bitcast i8*%an to i32*
store i32 4,i32*%ao,align 4
store i32 7,i32*%am,align 4
%ap=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aq=call fastcc i8*%ai(i8*inreg%ap,i8*inreg%al)
%ar=getelementptr inbounds i8,i8*%aq,i64 16
%as=bitcast i8*%ar to i8*(i8*,i8*)**
%at=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%as,align 8
%au=bitcast i8*%aq to i8**
%av=load i8*,i8**%au,align 8
%aw=load i8*,i8**%e,align 8
%ax=tail call fastcc i8*%at(i8*inreg%av,i8*inreg%aw)
ret i8*%ax
ay:
%az=getelementptr inbounds i8,i8*%D,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%e,align 8
%aE=getelementptr inbounds i8,i8*%aB,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 16
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%f,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 24
%aL=bitcast i8*%aK to i8**
%aM=load i8*,i8**%aL,align 8
store i8*%aM,i8**%g,align 8
%aN=getelementptr inbounds i8,i8*%aB,i64 32
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%h,align 8
%aQ=getelementptr inbounds i8,i8*%aB,i64 40
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%i,align 8
%aT=getelementptr inbounds i8,i8*%aB,i64 48
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%j,align 8
%aW=bitcast i8*%aG to i32*
%aX=load i32,i32*%aW,align 4
switch i32%aX,label%aY[
i32 1,label%bs
i32 0,label%bg
]
aY:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%w,align 8
call void@sml_matchcomp_bug()
%aZ=load i8*,i8**@_SMLZ5Match,align 8
store i8*%aZ,i8**%d,align 8
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
store i8*%a0,i8**%e,align 8
%a3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%a0,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%a0,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 60)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177336,i32*%bb,align 4
%bc=getelementptr inbounds i8,i8*%a9,i64 56
%bd=bitcast i8*%bc to i32*
store i32 1,i32*%bd,align 4
%be=load i8*,i8**%e,align 8
%bf=bitcast i8*%a9 to i8**
store i8*%be,i8**%bf,align 8
call void@sml_raise(i8*inreg%a9)#1
unreachable
bg:
%bh=getelementptr inbounds i8,i8*%aG,i64 8
%bi=bitcast i8*%bh to i8**
%bj=load i8*,i8**%bi,align 8
%bk=load i8*,i8**%d,align 8
%bl=load i8*,i8**%w,align 8
%bm=call fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2392(i8*inreg%bl,i8*inreg%bk,i8*inreg%bj)
%bn=getelementptr inbounds i8,i8*%bm,i64 8
%bo=bitcast i8*%bn to i8**
%bp=load i8*,i8**%bo,align 8
%bq=bitcast i8*%bm to i8**
%br=load i8*,i8**%bq,align 8
br label%b0
bs:
%bt=getelementptr inbounds i8,i8*%aG,i64 8
%bu=bitcast i8*%bt to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%k,align 8
%bw=load i8*,i8**%d,align 8
%bx=load i8*,i8**%w,align 8
%by=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%bx,i8*inreg%bw)
%bz=getelementptr inbounds i8,i8*%by,i64 16
%bA=bitcast i8*%bz to i8*(i8*,i8*)**
%bB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bA,align 8
%bC=bitcast i8*%by to i8**
%bD=load i8*,i8**%bC,align 8
store i8*%bD,i8**%l,align 8
%bE=call i8*@sml_alloc(i32 inreg 4)#0
%bF=bitcast i8*%bE to i32*
%bG=getelementptr inbounds i8,i8*%bE,i64 -4
%bH=bitcast i8*%bG to i32*
store i32 4,i32*%bH,align 4
store i32 3,i32*%bF,align 4
%bI=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bJ=call fastcc i8*%bB(i8*inreg%bI,i8*inreg%bE)
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8*(i8*,i8*)**
%bM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bL,align 8
%bN=bitcast i8*%bJ to i8**
%bO=load i8*,i8**%bN,align 8
%bP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bQ=call fastcc i8*%bM(i8*inreg%bO,i8*inreg%bP)
store i8*%bQ,i8**%k,align 8
%bR=call i8*@sml_alloc(i32 inreg 20)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177296,i32*%bT,align 4
%bU=bitcast i8*%bR to i8**
store i8*null,i8**%bU,align 8
%bV=load i8*,i8**%k,align 8
%bW=getelementptr inbounds i8,i8*%bR,i64 8
%bX=bitcast i8*%bW to i8**
store i8*%bV,i8**%bX,align 8
%bY=getelementptr inbounds i8,i8*%bR,i64 16
%bZ=bitcast i8*%bY to i32*
store i32 3,i32*%bZ,align 4
br label%b0
b0:
%b1=phi i8*[%br,%bg],[null,%bs]
%b2=phi i8*[%bp,%bg],[%bV,%bs]
store i8*%b1,i8**%k,align 8
%b3=bitcast i8*%b2 to i8**
%b4=load i8*,i8**%b3,align 8
store i8*%b4,i8**%l,align 8
%b5=getelementptr inbounds i8,i8*%b2,i64 8
%b6=bitcast i8*%b5 to i8**
%b7=load i8*,i8**%b6,align 8
store i8*%b7,i8**%m,align 8
%b8=load i8*,i8**%d,align 8
%b9=getelementptr inbounds i8,i8*%b8,i64 16
%ca=bitcast i8*%b9 to i8**
%cb=load i8*,i8**%ca,align 8
store i8*%cb,i8**%n,align 8
%cc=call i8*@sml_alloc(i32 inreg 20)#0
%cd=getelementptr inbounds i8,i8*%cc,i64 -4
%ce=bitcast i8*%cd to i32*
store i32 1342177296,i32*%ce,align 4
%cf=load i8*,i8**%k,align 8
%cg=bitcast i8*%cc to i8**
store i8*%cf,i8**%cg,align 8
%ch=load i8*,i8**%n,align 8
%ci=getelementptr inbounds i8,i8*%cc,i64 8
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%cc,i64 16
%cl=bitcast i8*%ck to i32*
store i32 3,i32*%cl,align 4
%cm=icmp eq i8*%cf,null
br i1%cm,label%cr,label%cn
cn:
%co=bitcast i8*%cf to i8**
%cp=load i8*,i8**%co,align 8
store i8*%cp,i8**%o,align 8
%cq=icmp eq i8*%ch,null
br i1%cq,label%cr,label%cs
cr:
store i8*%cf,i8**%n,align 8
store i8*%ch,i8**%o,align 8
br label%dI
cs:
%ct=bitcast i8*%ch to i8**
%cu=load i8*,i8**%ct,align 8
store i8*%cu,i8**%n,align 8
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
%cy=load i8*,i8**%o,align 8
%cz=bitcast i8*%cv to i8**
store i8*%cy,i8**%cz,align 8
%cA=load i8*,i8**%n,align 8
%cB=getelementptr inbounds i8,i8*%cv,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cv,i64 16
%cE=bitcast i8*%cD to i32*
store i32 3,i32*%cE,align 4
%cF=call fastcc i8*@_SMLFN11RecordLabel3Set5unionE(i8*inreg%cv)
store i8*%cF,i8**%p,align 8
%cG=call i8*@sml_alloc(i32 inreg 12)#0
%cH=getelementptr inbounds i8,i8*%cG,i64 -4
%cI=bitcast i8*%cH to i32*
store i32 1342177288,i32*%cI,align 4
store i8*%cG,i8**%q,align 8
%cJ=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%cK=bitcast i8*%cG to i8**
store i8*%cJ,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cG,i64 8
%cM=bitcast i8*%cL to i32*
store i32 1,i32*%cM,align 4
%cN=call i8*@sml_alloc(i32 inreg 20)#0
%cO=getelementptr inbounds i8,i8*%cN,i64 -4
%cP=bitcast i8*%cO to i32*
store i32 1342177296,i32*%cP,align 4
%cQ=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%cR=bitcast i8*%cN to i8**
store i8*%cQ,i8**%cR,align 8
%cS=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%cT=getelementptr inbounds i8,i8*%cN,i64 8
%cU=bitcast i8*%cT to i8**
store i8*%cS,i8**%cU,align 8
%cV=getelementptr inbounds i8,i8*%cN,i64 16
%cW=bitcast i8*%cV to i32*
store i32 3,i32*%cW,align 4
%cX=call fastcc i8*@_SMLFN11RecordLabel3Set10differenceE(i8*inreg%cN)
store i8*%cX,i8**%n,align 8
%cY=call i8*@sml_alloc(i32 inreg 12)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 1342177288,i32*%c0,align 4
store i8*%cY,i8**%o,align 8
%c1=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%c2=bitcast i8*%cY to i8**
store i8*%c1,i8**%c2,align 8
%c3=getelementptr inbounds i8,i8*%cY,i64 8
%c4=bitcast i8*%c3 to i32*
store i32 1,i32*%c4,align 4
%c5=call i8*@sml_alloc(i32 inreg 20)#0
%c6=getelementptr inbounds i8,i8*%c5,i64 -4
%c7=bitcast i8*%c6 to i32*
store i32 1342177296,i32*%c7,align 4
%c8=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%c9=bitcast i8*%c5 to i8**
store i8*%c8,i8**%c9,align 8
%da=load i8*,i8**%o,align 8
%db=getelementptr inbounds i8,i8*%c5,i64 8
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c5,i64 16
%de=bitcast i8*%dd to i32*
store i32 3,i32*%de,align 4
%df=load i8*,i8**%k,align 8
store i8*%c8,i8**%n,align 8
%dg=icmp eq i8*%df,null
%dh=icmp eq i8*%da,null
%di=or i1%dh,%dg
br i1%di,label%dI,label%dj
dj:
%dk=bitcast i8*%df to i8**
%dl=load i8*,i8**%dk,align 8
%dm=bitcast i8*%da to i8**
%dn=load i8*,i8**%dm,align 8
store i8*%dn,i8**%p,align 8
%do=call fastcc i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg%dl)
store i8*%do,i8**%q,align 8
%dp=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dq=call fastcc i8*@_SMLFN11RecordLabel3Set9listItemsE(i8*inreg%dp)
store i8*%dq,i8**%p,align 8
%dr=call i8*@sml_alloc(i32 inreg 20)#0
%ds=getelementptr inbounds i8,i8*%dr,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177296,i32*%dt,align 4
store i8*%dr,i8**%r,align 8
%du=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dv=bitcast i8*%dr to i8**
store i8*%du,i8**%dv,align 8
%dw=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%dx=getelementptr inbounds i8,i8*%dr,i64 8
%dy=bitcast i8*%dx to i8**
store i8*%dw,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dr,i64 16
%dA=bitcast i8*%dz to i32*
store i32 3,i32*%dA,align 4
%dB=call i8*@sml_alloc(i32 inreg 12)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177288,i32*%dD,align 4
%dE=load i8*,i8**%r,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dB,i64 8
%dH=bitcast i8*%dG to i32*
store i32 1,i32*%dH,align 4
br label%dI
dI:
%dJ=phi i8*[%dB,%dj],[null,%cs],[null,%cr]
store i8*%dJ,i8**%p,align 8
%dK=bitcast i8**%d to i8***
%dL=load i8**,i8***%dK,align 8
%dM=load i8*,i8**%dL,align 8
store i8*%dM,i8**%q,align 8
store i8*null,i8**%d,align 8
%dN=getelementptr inbounds i8*,i8**%dL,i64 1
%dO=load i8*,i8**%dN,align 8
store i8*%dO,i8**%r,align 8
%dP=call i8*@sml_alloc(i32 inreg 28)#0
%dQ=getelementptr inbounds i8,i8*%dP,i64 -4
%dR=bitcast i8*%dQ to i32*
store i32 1342177304,i32*%dR,align 4
store i8*%dP,i8**%d,align 8
%dS=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%dT=bitcast i8*%dP to i8**
store i8*%dS,i8**%dT,align 8
%dU=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%dV=getelementptr inbounds i8,i8*%dP,i64 8
%dW=bitcast i8*%dV to i8**
store i8*%dU,i8**%dW,align 8
%dX=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%dY=getelementptr inbounds i8,i8*%dP,i64 16
%dZ=bitcast i8*%dY to i8**
store i8*%dX,i8**%dZ,align 8
%d0=getelementptr inbounds i8,i8*%dP,i64 24
%d1=bitcast i8*%d0 to i32*
store i32 7,i32*%d1,align 4
%d2=load i8*,i8**%e,align 8
%d3=bitcast i8*%d2 to i32*
%d4=load i32,i32*%d3,align 4
switch i32%d4,label%d5[
i32 1,label%et
i32 0,label%en
]
d5:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%o,align 8
store i8*null,i8**%p,align 8
store i8*null,i8**%w,align 8
call void@sml_matchcomp_bug()
%d6=load i8*,i8**@_SMLZ5Match,align 8
store i8*%d6,i8**%d,align 8
%d7=call i8*@sml_alloc(i32 inreg 20)#0
%d8=getelementptr inbounds i8,i8*%d7,i64 -4
%d9=bitcast i8*%d8 to i32*
store i32 1342177296,i32*%d9,align 4
store i8*%d7,i8**%e,align 8
%ea=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eb=bitcast i8*%d7 to i8**
store i8*%ea,i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d7,i64 8
%ed=bitcast i8*%ec to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%ed,align 8
%ee=getelementptr inbounds i8,i8*%d7,i64 16
%ef=bitcast i8*%ee to i32*
store i32 3,i32*%ef,align 4
%eg=call i8*@sml_alloc(i32 inreg 60)#0
%eh=getelementptr inbounds i8,i8*%eg,i64 -4
%ei=bitcast i8*%eh to i32*
store i32 1342177336,i32*%ei,align 4
%ej=getelementptr inbounds i8,i8*%eg,i64 56
%ek=bitcast i8*%ej to i32*
store i32 1,i32*%ek,align 4
%el=load i8*,i8**%e,align 8
%em=bitcast i8*%eg to i8**
store i8*%el,i8**%em,align 8
call void@sml_raise(i8*inreg%eg)#1
unreachable
en:
store i8*null,i8**%e,align 8
%eo=getelementptr inbounds i8,i8*%d2,i64 8
%ep=bitcast i8*%eo to i8**
%eq=load i8*,i8**%ep,align 8
%er=load i8*,i8**%w,align 8
%es=call fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2399(i8*inreg%er,i8*inreg%dP,i8*inreg%eq)
br label%eR
et:
%eu=getelementptr inbounds i8,i8*%d2,i64 8
%ev=bitcast i8*%eu to i8**
%ew=load i8*,i8**%ev,align 8
store i8*%ew,i8**%e,align 8
%ex=load i8*,i8**%w,align 8
%ey=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%ex,i8*inreg%dP)
%ez=getelementptr inbounds i8,i8*%ey,i64 16
%eA=bitcast i8*%ez to i8*(i8*,i8*)**
%eB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eA,align 8
%eC=bitcast i8*%ey to i8**
%eD=load i8*,i8**%eC,align 8
store i8*%eD,i8**%n,align 8
%eE=call i8*@sml_alloc(i32 inreg 4)#0
%eF=bitcast i8*%eE to i32*
%eG=getelementptr inbounds i8,i8*%eE,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 4,i32*%eH,align 4
store i32 8,i32*%eF,align 4
%eI=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%eJ=call fastcc i8*%eB(i8*inreg%eI,i8*inreg%eE)
%eK=getelementptr inbounds i8,i8*%eJ,i64 16
%eL=bitcast i8*%eK to i8*(i8*,i8*)**
%eM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eL,align 8
%eN=bitcast i8*%eJ to i8**
%eO=load i8*,i8**%eN,align 8
%eP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%eQ=call fastcc i8*%eM(i8*inreg%eO,i8*inreg%eP)
br label%eR
eR:
%eS=phi i8*[%es,%en],[%eQ,%et]
%eT=bitcast i8*%eS to i8**
%eU=load i8*,i8**%eT,align 8
store i8*%eU,i8**%e,align 8
%eV=getelementptr inbounds i8,i8*%eS,i64 8
%eW=bitcast i8*%eV to i8**
%eX=load i8*,i8**%eW,align 8
store i8*%eX,i8**%n,align 8
%eY=load i8*,i8**%f,align 8
%eZ=icmp eq i8*%eY,null
br i1%eZ,label%e0,label%fa
e0:
%e1=load i8*,i8**%w,align 8
%e2=getelementptr inbounds i8,i8*%e1,i64 8
%e3=bitcast i8*%e2 to i8**
%e4=load i8*,i8**%e3,align 8
store i8*%e4,i8**%f,align 8
%e5=call i8*@sml_alloc(i32 inreg 20)#0
%e6=getelementptr inbounds i8,i8*%e5,i64 -4
%e7=bitcast i8*%e6 to i32*
store i32 1342177296,i32*%e7,align 4
%e8=load i8*,i8**%f,align 8
%e9=bitcast i8*%e5 to i8**
store i8*%e8,i8**%e9,align 8
br label%g3
fa:
store i8*null,i8**%f,align 8
%fb=bitcast i8*%eY to i8**
%fc=load i8*,i8**%fb,align 8
%fd=bitcast i8*%fc to i32*
%fe=load i32,i32*%fd,align 4
switch i32%fe,label%ff[
i32 1,label%gj
i32 0,label%fx
]
ff:
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%o,align 8
store i8*null,i8**%p,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%w,align 8
call void@sml_matchcomp_bug()
%fg=load i8*,i8**@_SMLZ5Match,align 8
store i8*%fg,i8**%d,align 8
%fh=call i8*@sml_alloc(i32 inreg 20)#0
%fi=getelementptr inbounds i8,i8*%fh,i64 -4
%fj=bitcast i8*%fi to i32*
store i32 1342177296,i32*%fj,align 4
store i8*%fh,i8**%e,align 8
%fk=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fl=bitcast i8*%fh to i8**
store i8*%fk,i8**%fl,align 8
%fm=getelementptr inbounds i8,i8*%fh,i64 8
%fn=bitcast i8*%fm to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%fn,align 8
%fo=getelementptr inbounds i8,i8*%fh,i64 16
%fp=bitcast i8*%fo to i32*
store i32 3,i32*%fp,align 4
%fq=call i8*@sml_alloc(i32 inreg 60)#0
%fr=getelementptr inbounds i8,i8*%fq,i64 -4
%fs=bitcast i8*%fr to i32*
store i32 1342177336,i32*%fs,align 4
%ft=getelementptr inbounds i8,i8*%fq,i64 56
%fu=bitcast i8*%ft to i32*
store i32 1,i32*%fu,align 4
%fv=load i8*,i8**%e,align 8
%fw=bitcast i8*%fq to i8**
store i8*%fv,i8**%fw,align 8
call void@sml_raise(i8*inreg%fq)#1
unreachable
fx:
%fy=getelementptr inbounds i8,i8*%fc,i64 8
%fz=bitcast i8*%fy to i8**
%fA=load i8*,i8**%fz,align 8
%fB=bitcast i8*%fA to i8**
%fC=load i8*,i8**%fB,align 8
%fD=getelementptr inbounds i8,i8*%fA,i64 8
%fE=bitcast i8*%fD to i8**
%fF=load i8*,i8**%fE,align 8
store i8*%fF,i8**%f,align 8
%fG=load i8*,i8**%d,align 8
%fH=load i8*,i8**%w,align 8
%fI=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%fH,i8*inreg%fG,i8*inreg%fC)
%fJ=bitcast i8*%fI to i8**
%fK=load i8*,i8**%fJ,align 8
store i8*%fK,i8**%q,align 8
%fL=getelementptr inbounds i8,i8*%fI,i64 8
%fM=bitcast i8*%fL to i8**
%fN=load i8*,i8**%fM,align 8
store i8*%fN,i8**%r,align 8
%fO=call i8*@sml_alloc(i32 inreg 20)#0
%fP=getelementptr inbounds i8,i8*%fO,i64 -4
%fQ=bitcast i8*%fP to i32*
store i32 1342177296,i32*%fQ,align 4
store i8*%fO,i8**%s,align 8
%fR=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%fS=bitcast i8*%fO to i8**
store i8*%fR,i8**%fS,align 8
%fT=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fU=getelementptr inbounds i8,i8*%fO,i64 8
%fV=bitcast i8*%fU to i8**
store i8*%fT,i8**%fV,align 8
%fW=getelementptr inbounds i8,i8*%fO,i64 16
%fX=bitcast i8*%fW to i32*
store i32 3,i32*%fX,align 4
%fY=call i8*@sml_alloc(i32 inreg 20)#0
%fZ=getelementptr inbounds i8,i8*%fY,i64 -4
%f0=bitcast i8*%fZ to i32*
store i32 1342177296,i32*%f0,align 4
store i8*%fY,i8**%f,align 8
%f1=getelementptr inbounds i8,i8*%fY,i64 4
%f2=bitcast i8*%f1 to i32*
store i32 0,i32*%f2,align 1
%f3=bitcast i8*%fY to i32*
store i32 30,i32*%f3,align 4
%f4=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%f5=getelementptr inbounds i8,i8*%fY,i64 8
%f6=bitcast i8*%f5 to i8**
store i8*%f4,i8**%f6,align 8
%f7=getelementptr inbounds i8,i8*%fY,i64 16
%f8=bitcast i8*%f7 to i32*
store i32 2,i32*%f8,align 4
%f9=call i8*@sml_alloc(i32 inreg 20)#0
%ga=getelementptr inbounds i8,i8*%f9,i64 -4
%gb=bitcast i8*%ga to i32*
store i32 1342177296,i32*%gb,align 4
%gc=load i8*,i8**%q,align 8
%gd=bitcast i8*%f9 to i8**
store i8*%gc,i8**%gd,align 8
%ge=load i8*,i8**%f,align 8
%gf=getelementptr inbounds i8,i8*%f9,i64 8
%gg=bitcast i8*%gf to i8**
store i8*%ge,i8**%gg,align 8
%gh=getelementptr inbounds i8,i8*%f9,i64 16
%gi=bitcast i8*%gh to i32*
store i32 3,i32*%gi,align 4
br label%gN
gj:
%gk=getelementptr inbounds i8,i8*%fc,i64 8
%gl=bitcast i8*%gk to i8**
%gm=load i8*,i8**%gl,align 8
store i8*%gm,i8**%f,align 8
%gn=load i8*,i8**%d,align 8
%go=load i8*,i8**%w,align 8
%gp=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%go,i8*inreg%gn)
%gq=getelementptr inbounds i8,i8*%gp,i64 16
%gr=bitcast i8*%gq to i8*(i8*,i8*)**
%gs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gr,align 8
%gt=bitcast i8*%gp to i8**
%gu=load i8*,i8**%gt,align 8
store i8*%gu,i8**%q,align 8
%gv=call i8*@sml_alloc(i32 inreg 4)#0
%gw=bitcast i8*%gv to i32*
%gx=getelementptr inbounds i8,i8*%gv,i64 -4
%gy=bitcast i8*%gx to i32*
store i32 4,i32*%gy,align 4
store i32 9,i32*%gw,align 4
%gz=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%gA=call fastcc i8*%gs(i8*inreg%gz,i8*inreg%gv)
%gB=getelementptr inbounds i8,i8*%gA,i64 16
%gC=bitcast i8*%gB to i8*(i8*,i8*)**
%gD=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gC,align 8
%gE=bitcast i8*%gA to i8**
%gF=load i8*,i8**%gE,align 8
%gG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gH=call fastcc i8*%gD(i8*inreg%gF,i8*inreg%gG)
%gI=bitcast i8*%gH to i8**
%gJ=load i8*,i8**%gI,align 8
%gK=getelementptr inbounds i8,i8*%gH,i64 8
%gL=bitcast i8*%gK to i8**
%gM=load i8*,i8**%gL,align 8
br label%gN
gN:
%gO=phi i8*[%ge,%fx],[%gM,%gj]
%gP=phi i8*[%gc,%fx],[%gJ,%gj]
store i8*%gP,i8**%f,align 8
store i8*%gO,i8**%q,align 8
%gQ=call i8*@sml_alloc(i32 inreg 12)#0
%gR=getelementptr inbounds i8,i8*%gQ,i64 -4
%gS=bitcast i8*%gR to i32*
store i32 1342177288,i32*%gS,align 4
store i8*%gQ,i8**%r,align 8
%gT=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%gU=bitcast i8*%gQ to i8**
store i8*%gT,i8**%gU,align 8
%gV=getelementptr inbounds i8,i8*%gQ,i64 8
%gW=bitcast i8*%gV to i32*
store i32 1,i32*%gW,align 4
%gX=call i8*@sml_alloc(i32 inreg 20)#0
%gY=getelementptr inbounds i8,i8*%gX,i64 -4
%gZ=bitcast i8*%gY to i32*
store i32 1342177296,i32*%gZ,align 4
%g0=load i8*,i8**%f,align 8
%g1=bitcast i8*%gX to i8**
store i8*%g0,i8**%g1,align 8
%g2=load i8*,i8**%r,align 8
br label%g3
g3:
%g4=phi i8*[%gX,%gN],[%e5,%e0]
%g5=phi i8*[%g2,%gN],[null,%e0]
%g6=phi i8*[%g0,%gN],[%e8,%e0]
%g7=getelementptr inbounds i8,i8*%g4,i64 8
%g8=bitcast i8*%g7 to i8**
store i8*%g5,i8**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g4,i64 16
%ha=bitcast i8*%g9 to i32*
store i32 3,i32*%ha,align 4
store i8*%g6,i8**%f,align 8
store i8*%g5,i8**%q,align 8
%hb=bitcast i8**%w to i8***
%hc=load i8**,i8***%hb,align 8
%hd=load i8*,i8**%hc,align 8
store i8*%hd,i8**%r,align 8
%he=getelementptr inbounds i8*,i8**%hc,i64 1
%hf=load i8*,i8**%he,align 8
store i8*%hf,i8**%s,align 8
%hg=getelementptr inbounds i8*,i8**%hc,i64 2
%hh=load i8*,i8**%hg,align 8
store i8*%hh,i8**%t,align 8
%hi=call i8*@sml_alloc(i32 inreg 44)#0
%hj=getelementptr inbounds i8,i8*%hi,i64 -4
%hk=bitcast i8*%hj to i32*
store i32 1342177320,i32*%hk,align 4
store i8*%hi,i8**%u,align 8
%hl=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%hm=bitcast i8*%hi to i8**
store i8*%hl,i8**%hm,align 8
%hn=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%ho=getelementptr inbounds i8,i8*%hi,i64 8
%hp=bitcast i8*%ho to i8**
store i8*%hn,i8**%hp,align 8
%hq=load i8*,i8**%d,align 8
%hr=getelementptr inbounds i8,i8*%hi,i64 16
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%hu=getelementptr inbounds i8,i8*%hi,i64 24
%hv=bitcast i8*%hu to i8**
store i8*%ht,i8**%hv,align 8
%hw=load i8*,i8**%w,align 8
%hx=getelementptr inbounds i8,i8*%hi,i64 32
%hy=bitcast i8*%hx to i8**
store i8*%hw,i8**%hy,align 8
%hz=getelementptr inbounds i8,i8*%hi,i64 40
%hA=bitcast i8*%hz to i32*
store i32 31,i32*%hA,align 4
%hB=call i8*@sml_alloc(i32 inreg 28)#0
%hC=getelementptr inbounds i8,i8*%hB,i64 -4
%hD=bitcast i8*%hC to i32*
store i32 1342177304,i32*%hD,align 4
%hE=load i8*,i8**%u,align 8
%hF=bitcast i8*%hB to i8**
store i8*%hE,i8**%hF,align 8
%hG=getelementptr inbounds i8,i8*%hB,i64 8
%hH=bitcast i8*%hG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2436 to void(...)*),void(...)**%hH,align 8
%hI=getelementptr inbounds i8,i8*%hB,i64 16
%hJ=bitcast i8*%hI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2436 to void(...)*),void(...)**%hJ,align 8
%hK=getelementptr inbounds i8,i8*%hB,i64 24
%hL=bitcast i8*%hK to i32*
store i32 -2147483647,i32*%hL,align 4
%hM=load i8*,i8**%g,align 8
%hN=icmp eq i8*%hM,null
br i1%hN,label%hO,label%hY
hO:
store i8*null,i8**%u,align 8
%hP=load i8*,i8**%w,align 8
%hQ=getelementptr inbounds i8,i8*%hP,i64 8
%hR=bitcast i8*%hQ to i8**
%hS=load i8*,i8**%hR,align 8
store i8*%hS,i8**%g,align 8
%hT=call i8*@sml_alloc(i32 inreg 20)#0
%hU=getelementptr inbounds i8,i8*%hT,i64 -4
%hV=bitcast i8*%hU to i32*
store i32 1342177296,i32*%hV,align 4
%hW=load i8*,i8**%g,align 8
%hX=bitcast i8*%hT to i8**
store i8*%hW,i8**%hX,align 8
br label%ik
hY:
store i8*null,i8**%g,align 8
%hZ=bitcast i8*%hM to i8**
%h0=load i8*,i8**%hZ,align 8
store i8*null,i8**%u,align 8
%h1=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2436(i8*inreg%hE,i8*inreg%h0)
%h2=bitcast i8*%h1 to i8**
%h3=load i8*,i8**%h2,align 8
store i8*%h3,i8**%g,align 8
%h4=getelementptr inbounds i8,i8*%h1,i64 8
%h5=bitcast i8*%h4 to i8**
%h6=load i8*,i8**%h5,align 8
store i8*%h6,i8**%r,align 8
%h7=call i8*@sml_alloc(i32 inreg 12)#0
%h8=getelementptr inbounds i8,i8*%h7,i64 -4
%h9=bitcast i8*%h8 to i32*
store i32 1342177288,i32*%h9,align 4
store i8*%h7,i8**%s,align 8
%ia=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%ib=bitcast i8*%h7 to i8**
store i8*%ia,i8**%ib,align 8
%ic=getelementptr inbounds i8,i8*%h7,i64 8
%id=bitcast i8*%ic to i32*
store i32 1,i32*%id,align 4
%ie=call i8*@sml_alloc(i32 inreg 20)#0
%if=getelementptr inbounds i8,i8*%ie,i64 -4
%ig=bitcast i8*%if to i32*
store i32 1342177296,i32*%ig,align 4
%ih=load i8*,i8**%g,align 8
%ii=bitcast i8*%ie to i8**
store i8*%ih,i8**%ii,align 8
%ij=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
br label%ik
ik:
%il=phi i8*[%ie,%hY],[%hT,%hO]
%im=phi i8*[%ij,%hY],[null,%hO]
%in=phi i8*[%ih,%hY],[%hW,%hO]
%io=getelementptr inbounds i8,i8*%il,i64 8
%ip=bitcast i8*%io to i8**
store i8*%im,i8**%ip,align 8
%iq=getelementptr inbounds i8,i8*%il,i64 16
%ir=bitcast i8*%iq to i32*
store i32 3,i32*%ir,align 4
store i8*%in,i8**%g,align 8
store i8*%im,i8**%r,align 8
%is=load i8*,i8**%h,align 8
%it=icmp eq i8*%is,null
br i1%it,label%iu,label%iE
iu:
%iv=load i8*,i8**%w,align 8
%iw=getelementptr inbounds i8,i8*%iv,i64 8
%ix=bitcast i8*%iw to i8**
%iy=load i8*,i8**%ix,align 8
store i8*%iy,i8**%h,align 8
%iz=call i8*@sml_alloc(i32 inreg 20)#0
%iA=getelementptr inbounds i8,i8*%iz,i64 -4
%iB=bitcast i8*%iA to i32*
store i32 1342177296,i32*%iB,align 4
%iC=load i8*,i8**%h,align 8
%iD=bitcast i8*%iz to i8**
store i8*%iC,i8**%iD,align 8
br label%jR
iE:
store i8*null,i8**%h,align 8
%iF=bitcast i8*%is to i8**
%iG=load i8*,i8**%iF,align 8
%iH=bitcast i8*%iG to i32*
%iI=load i32,i32*%iH,align 4
switch i32%iI,label%iJ[
i32 1,label%i8
i32 0,label%i1
]
iJ:
store i8*null,i8**%i,align 8
store i8*null,i8**%j,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
store i8*null,i8**%o,align 8
store i8*null,i8**%p,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%n,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%q,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%r,align 8
store i8*null,i8**%w,align 8
call void@sml_matchcomp_bug()
%iK=load i8*,i8**@_SMLZ5Match,align 8
store i8*%iK,i8**%d,align 8
%iL=call i8*@sml_alloc(i32 inreg 20)#0
%iM=getelementptr inbounds i8,i8*%iL,i64 -4
%iN=bitcast i8*%iM to i32*
store i32 1342177296,i32*%iN,align 4
store i8*%iL,i8**%e,align 8
%iO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iP=bitcast i8*%iL to i8**
store i8*%iO,i8**%iP,align 8
%iQ=getelementptr inbounds i8,i8*%iL,i64 8
%iR=bitcast i8*%iQ to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%iR,align 8
%iS=getelementptr inbounds i8,i8*%iL,i64 16
%iT=bitcast i8*%iS to i32*
store i32 3,i32*%iT,align 4
%iU=call i8*@sml_alloc(i32 inreg 60)#0
%iV=getelementptr inbounds i8,i8*%iU,i64 -4
%iW=bitcast i8*%iV to i32*
store i32 1342177336,i32*%iW,align 4
%iX=getelementptr inbounds i8,i8*%iU,i64 56
%iY=bitcast i8*%iX to i32*
store i32 1,i32*%iY,align 4
%iZ=load i8*,i8**%e,align 8
%i0=bitcast i8*%iU to i8**
store i8*%iZ,i8**%i0,align 8
call void@sml_raise(i8*inreg%iU)#1
unreachable
i1:
%i2=getelementptr inbounds i8,i8*%iG,i64 8
%i3=bitcast i8*%i2 to i8**
%i4=load i8*,i8**%i3,align 8
%i5=load i8*,i8**%d,align 8
%i6=load i8*,i8**%w,align 8
%i7=call fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2396(i8*inreg%i6,i8*inreg%i5,i8*inreg%i4)
br label%jx
i8:
%i9=getelementptr inbounds i8,i8*%iG,i64 8
%ja=bitcast i8*%i9 to i8**
%jb=load i8*,i8**%ja,align 8
store i8*%jb,i8**%h,align 8
%jc=load i8*,i8**%d,align 8
%jd=load i8*,i8**%w,align 8
%je=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%jd,i8*inreg%jc)
%jf=getelementptr inbounds i8,i8*%je,i64 16
%jg=bitcast i8*%jf to i8*(i8*,i8*)**
%jh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jg,align 8
%ji=bitcast i8*%je to i8**
%jj=load i8*,i8**%ji,align 8
store i8*%jj,i8**%s,align 8
%jk=call i8*@sml_alloc(i32 inreg 4)#0
%jl=bitcast i8*%jk to i32*
%jm=getelementptr inbounds i8,i8*%jk,i64 -4
%jn=bitcast i8*%jm to i32*
store i32 4,i32*%jn,align 4
store i32 6,i32*%jl,align 4
%jo=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%jp=call fastcc i8*%jh(i8*inreg%jo,i8*inreg%jk)
%jq=getelementptr inbounds i8,i8*%jp,i64 16
%jr=bitcast i8*%jq to i8*(i8*,i8*)**
%js=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jr,align 8
%jt=bitcast i8*%jp to i8**
%ju=load i8*,i8**%jt,align 8
%jv=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%jw=call fastcc i8*%js(i8*inreg%ju,i8*inreg%jv)
br label%jx
jx:
%jy=phi i8*[%i7,%i1],[%jw,%i8]
%jz=bitcast i8*%jy to i8**
%jA=load i8*,i8**%jz,align 8
store i8*%jA,i8**%h,align 8
%jB=getelementptr inbounds i8,i8*%jy,i64 8
%jC=bitcast i8*%jB to i8**
%jD=load i8*,i8**%jC,align 8
store i8*%jD,i8**%s,align 8
%jE=call i8*@sml_alloc(i32 inreg 12)#0
%jF=getelementptr inbounds i8,i8*%jE,i64 -4
%jG=bitcast i8*%jF to i32*
store i32 1342177288,i32*%jG,align 4
store i8*%jE,i8**%t,align 8
%jH=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%jI=bitcast i8*%jE to i8**
store i8*%jH,i8**%jI,align 8
%jJ=getelementptr inbounds i8,i8*%jE,i64 8
%jK=bitcast i8*%jJ to i32*
store i32 1,i32*%jK,align 4
%jL=call i8*@sml_alloc(i32 inreg 20)#0
%jM=getelementptr inbounds i8,i8*%jL,i64 -4
%jN=bitcast i8*%jM to i32*
store i32 1342177296,i32*%jN,align 4
%jO=load i8*,i8**%h,align 8
%jP=bitcast i8*%jL to i8**
store i8*%jO,i8**%jP,align 8
%jQ=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
br label%jR
jR:
%jS=phi i8*[%jL,%jx],[%iz,%iu]
%jT=phi i8*[%jQ,%jx],[null,%iu]
%jU=phi i8*[%jO,%jx],[%iC,%iu]
%jV=getelementptr inbounds i8,i8*%jS,i64 8
%jW=bitcast i8*%jV to i8**
store i8*%jT,i8**%jW,align 8
%jX=getelementptr inbounds i8,i8*%jS,i64 16
%jY=bitcast i8*%jX to i32*
store i32 3,i32*%jY,align 4
store i8*%jU,i8**%h,align 8
store i8*%jT,i8**%s,align 8
%jZ=call i8*@sml_alloc(i32 inreg 20)#0
%j0=getelementptr inbounds i8,i8*%jZ,i64 -4
%j1=bitcast i8*%j0 to i32*
store i32 1342177296,i32*%j1,align 4
store i8*%jZ,i8**%t,align 8
%j2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%j3=bitcast i8*%jZ to i8**
store i8*%j2,i8**%j3,align 8
%j4=load i8*,i8**%w,align 8
%j5=getelementptr inbounds i8,i8*%jZ,i64 8
%j6=bitcast i8*%j5 to i8**
store i8*%j4,i8**%j6,align 8
%j7=getelementptr inbounds i8,i8*%jZ,i64 16
%j8=bitcast i8*%j7 to i32*
store i32 3,i32*%j8,align 4
%j9=call i8*@sml_alloc(i32 inreg 28)#0
%ka=getelementptr inbounds i8,i8*%j9,i64 -4
%kb=bitcast i8*%ka to i32*
store i32 1342177304,i32*%kb,align 4
%kc=load i8*,i8**%t,align 8
%kd=bitcast i8*%j9 to i8**
store i8*%kc,i8**%kd,align 8
%ke=getelementptr inbounds i8,i8*%j9,i64 8
%kf=bitcast i8*%ke to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2441 to void(...)*),void(...)**%kf,align 8
%kg=getelementptr inbounds i8,i8*%j9,i64 16
%kh=bitcast i8*%kg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2441 to void(...)*),void(...)**%kh,align 8
%ki=getelementptr inbounds i8,i8*%j9,i64 24
%kj=bitcast i8*%ki to i32*
store i32 -2147483647,i32*%kj,align 4
%kk=load i8*,i8**%i,align 8
%kl=icmp eq i8*%kk,null
store i8*null,i8**%i,align 8
br i1%kl,label%km,label%kw
km:
store i8*null,i8**%t,align 8
%kn=load i8*,i8**%w,align 8
%ko=getelementptr inbounds i8,i8*%kn,i64 8
%kp=bitcast i8*%ko to i8**
%kq=load i8*,i8**%kp,align 8
store i8*%kq,i8**%d,align 8
%kr=call i8*@sml_alloc(i32 inreg 20)#0
%ks=getelementptr inbounds i8,i8*%kr,i64 -4
%kt=bitcast i8*%ks to i32*
store i32 1342177296,i32*%kt,align 4
%ku=load i8*,i8**%d,align 8
%kv=bitcast i8*%kr to i8**
store i8*%ku,i8**%kv,align 8
br label%kS
kw:
%kx=bitcast i8*%kk to i8**
%ky=load i8*,i8**%kx,align 8
store i8*null,i8**%t,align 8
%kz=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2441(i8*inreg%kc,i8*inreg%ky)
%kA=bitcast i8*%kz to i8**
%kB=load i8*,i8**%kA,align 8
store i8*%kB,i8**%d,align 8
%kC=getelementptr inbounds i8,i8*%kz,i64 8
%kD=bitcast i8*%kC to i8**
%kE=load i8*,i8**%kD,align 8
store i8*%kE,i8**%i,align 8
%kF=call i8*@sml_alloc(i32 inreg 12)#0
%kG=getelementptr inbounds i8,i8*%kF,i64 -4
%kH=bitcast i8*%kG to i32*
store i32 1342177288,i32*%kH,align 4
store i8*%kF,i8**%t,align 8
%kI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kJ=bitcast i8*%kF to i8**
store i8*%kI,i8**%kJ,align 8
%kK=getelementptr inbounds i8,i8*%kF,i64 8
%kL=bitcast i8*%kK to i32*
store i32 1,i32*%kL,align 4
%kM=call i8*@sml_alloc(i32 inreg 20)#0
%kN=getelementptr inbounds i8,i8*%kM,i64 -4
%kO=bitcast i8*%kN to i32*
store i32 1342177296,i32*%kO,align 4
%kP=load i8*,i8**%d,align 8
%kQ=bitcast i8*%kM to i8**
store i8*%kP,i8**%kQ,align 8
%kR=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
br label%kS
kS:
%kT=phi i8*[%kM,%kw],[%kr,%km]
%kU=phi i8*[%kR,%kw],[null,%km]
%kV=phi i8*[%kP,%kw],[%ku,%km]
%kW=getelementptr inbounds i8,i8*%kT,i64 8
%kX=bitcast i8*%kW to i8**
store i8*%kU,i8**%kX,align 8
%kY=getelementptr inbounds i8,i8*%kT,i64 16
%kZ=bitcast i8*%kY to i32*
store i32 3,i32*%kZ,align 4
store i8*%kV,i8**%d,align 8
store i8*%kU,i8**%i,align 8
%k0=call fastcc i8*@_SMLFN6Option3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
store i8*%k0,i8**%t,align 8
%k1=load i8*,i8**%e,align 8
%k2=getelementptr inbounds i8,i8*%k1,i64 8
%k3=bitcast i8*%k2 to i8**
%k4=load i8*,i8**%k3,align 8
store i8*%k4,i8**%u,align 8
%k5=load i8*,i8**%l,align 8
%k6=getelementptr inbounds i8,i8*%k5,i64 8
%k7=bitcast i8*%k6 to i8**
%k8=load i8*,i8**%k7,align 8
store i8*%k8,i8**%v,align 8
%k9=call i8*@sml_alloc(i32 inreg 20)#0
%la=getelementptr inbounds i8,i8*%k9,i64 -4
%lb=bitcast i8*%la to i32*
store i32 1342177296,i32*%lb,align 4
%lc=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%ld=bitcast i8*%k9 to i8**
store i8*%lc,i8**%ld,align 8
%le=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%lf=getelementptr inbounds i8,i8*%k9,i64 8
%lg=bitcast i8*%lf to i8**
store i8*%le,i8**%lg,align 8
%lh=getelementptr inbounds i8,i8*%k9,i64 16
%li=bitcast i8*%lh to i32*
store i32 3,i32*%li,align 4
%lj=call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%k9)
store i8*%lj,i8**%u,align 8
%lk=load i8*,i8**%t,align 8
%ll=getelementptr inbounds i8,i8*%lk,i64 16
%lm=bitcast i8*%ll to i8*(i8*,i8*)**
%ln=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lm,align 8
%lo=bitcast i8*%lk to i8**
%lp=load i8*,i8**%lo,align 8
store i8*%lp,i8**%v,align 8
%lq=load i8**,i8***%hb,align 8
%lr=load i8*,i8**%lq,align 8
store i8*%lr,i8**%t,align 8
%ls=call i8*@sml_alloc(i32 inreg 28)#0
%lt=getelementptr inbounds i8,i8*%ls,i64 -4
%lu=bitcast i8*%lt to i32*
store i32 1342177304,i32*%lu,align 4
store i8*%ls,i8**%x,align 8
%lv=load i8*,i8**%t,align 8
store i8*null,i8**%t,align 8
%lw=bitcast i8*%ls to i8**
store i8*%lv,i8**%lw,align 8
%lx=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%ly=getelementptr inbounds i8,i8*%ls,i64 8
%lz=bitcast i8*%ly to i8**
store i8*%lx,i8**%lz,align 8
%lA=load i8*,i8**%u,align 8
store i8*null,i8**%u,align 8
%lB=getelementptr inbounds i8,i8*%ls,i64 16
%lC=bitcast i8*%lB to i8**
store i8*%lA,i8**%lC,align 8
%lD=getelementptr inbounds i8,i8*%ls,i64 24
%lE=bitcast i8*%lD to i32*
store i32 7,i32*%lE,align 4
%lF=call i8*@sml_alloc(i32 inreg 28)#0
%lG=getelementptr inbounds i8,i8*%lF,i64 -4
%lH=bitcast i8*%lG to i32*
store i32 1342177304,i32*%lH,align 4
%lI=load i8*,i8**%x,align 8
store i8*null,i8**%x,align 8
%lJ=bitcast i8*%lF to i8**
store i8*%lI,i8**%lJ,align 8
%lK=getelementptr inbounds i8,i8*%lF,i64 8
%lL=bitcast i8*%lK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7groupBy_2445 to void(...)*),void(...)**%lL,align 8
%lM=getelementptr inbounds i8,i8*%lF,i64 16
%lN=bitcast i8*%lM to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL7groupBy_2445 to void(...)*),void(...)**%lN,align 8
%lO=getelementptr inbounds i8,i8*%lF,i64 24
%lP=bitcast i8*%lO to i32*
store i32 -2147483647,i32*%lP,align 4
%lQ=load i8*,i8**%v,align 8
store i8*null,i8**%v,align 8
%lR=call fastcc i8*%ln(i8*inreg%lQ,i8*inreg%lF)
%lS=getelementptr inbounds i8,i8*%lR,i64 16
%lT=bitcast i8*%lS to i8*(i8*,i8*)**
%lU=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%lT,align 8
%lV=bitcast i8*%lR to i8**
%lW=load i8*,i8**%lV,align 8
%lX=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%lY=call fastcc i8*%lU(i8*inreg%lW,i8*inreg%lX)
store i8*%lY,i8**%o,align 8
%lZ=call i8*@sml_alloc(i32 inreg 20)#0
%l0=getelementptr inbounds i8,i8*%lZ,i64 -4
%l1=bitcast i8*%l0 to i32*
store i32 1342177296,i32*%l1,align 4
store i8*%lZ,i8**%r,align 8
%l2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l3=bitcast i8*%lZ to i8**
store i8*%l2,i8**%l3,align 8
%l4=getelementptr inbounds i8,i8*%lZ,i64 8
%l5=bitcast i8*%l4 to i8**
store i8*null,i8**%l5,align 8
%l6=getelementptr inbounds i8,i8*%lZ,i64 16
%l7=bitcast i8*%l6 to i32*
store i32 3,i32*%l7,align 4
%l8=call i8*@sml_alloc(i32 inreg 20)#0
%l9=getelementptr inbounds i8,i8*%l8,i64 -4
%ma=bitcast i8*%l9 to i32*
store i32 1342177296,i32*%ma,align 4
store i8*%l8,i8**%d,align 8
%mb=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%mc=bitcast i8*%l8 to i8**
store i8*%mb,i8**%mc,align 8
%md=load i8*,i8**%r,align 8
store i8*null,i8**%r,align 8
%me=getelementptr inbounds i8,i8*%l8,i64 8
%mf=bitcast i8*%me to i8**
store i8*%md,i8**%mf,align 8
%mg=getelementptr inbounds i8,i8*%l8,i64 16
%mh=bitcast i8*%mg to i32*
store i32 3,i32*%mh,align 4
%mi=call i8*@sml_alloc(i32 inreg 20)#0
%mj=getelementptr inbounds i8,i8*%mi,i64 -4
%mk=bitcast i8*%mj to i32*
store i32 1342177296,i32*%mk,align 4
store i8*%mi,i8**%h,align 8
%ml=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mm=bitcast i8*%mi to i8**
store i8*%ml,i8**%mm,align 8
%mn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mo=getelementptr inbounds i8,i8*%mi,i64 8
%mp=bitcast i8*%mo to i8**
store i8*%mn,i8**%mp,align 8
%mq=getelementptr inbounds i8,i8*%mi,i64 16
%mr=bitcast i8*%mq to i32*
store i32 3,i32*%mr,align 4
%ms=call i8*@sml_alloc(i32 inreg 20)#0
%mt=getelementptr inbounds i8,i8*%ms,i64 -4
%mu=bitcast i8*%mt to i32*
store i32 1342177296,i32*%mu,align 4
store i8*%ms,i8**%d,align 8
%mv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mw=bitcast i8*%ms to i8**
store i8*%mv,i8**%mw,align 8
%mx=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%my=getelementptr inbounds i8,i8*%ms,i64 8
%mz=bitcast i8*%my to i8**
store i8*%mx,i8**%mz,align 8
%mA=getelementptr inbounds i8,i8*%ms,i64 16
%mB=bitcast i8*%mA to i32*
store i32 3,i32*%mB,align 4
%mC=call i8*@sml_alloc(i32 inreg 20)#0
%mD=getelementptr inbounds i8,i8*%mC,i64 -4
%mE=bitcast i8*%mD to i32*
store i32 1342177296,i32*%mE,align 4
store i8*%mC,i8**%f,align 8
%mF=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%mG=bitcast i8*%mC to i8**
store i8*%mF,i8**%mG,align 8
%mH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mI=getelementptr inbounds i8,i8*%mC,i64 8
%mJ=bitcast i8*%mI to i8**
store i8*%mH,i8**%mJ,align 8
%mK=getelementptr inbounds i8,i8*%mC,i64 16
%mL=bitcast i8*%mK to i32*
store i32 3,i32*%mL,align 4
%mM=call i8*@sml_alloc(i32 inreg 20)#0
%mN=getelementptr inbounds i8,i8*%mM,i64 -4
%mO=bitcast i8*%mN to i32*
store i32 1342177296,i32*%mO,align 4
store i8*%mM,i8**%d,align 8
%mP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mQ=bitcast i8*%mM to i8**
store i8*%mP,i8**%mQ,align 8
%mR=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mS=getelementptr inbounds i8,i8*%mM,i64 8
%mT=bitcast i8*%mS to i8**
store i8*%mR,i8**%mT,align 8
%mU=getelementptr inbounds i8,i8*%mM,i64 16
%mV=bitcast i8*%mU to i32*
store i32 3,i32*%mV,align 4
%mW=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%mX=getelementptr inbounds i8,i8*%mW,i64 16
%mY=bitcast i8*%mX to i8*(i8*,i8*)**
%mZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mY,align 8
%m0=bitcast i8*%mW to i8**
%m1=load i8*,i8**%m0,align 8
store i8*%m1,i8**%e,align 8
%m2=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%m3=getelementptr inbounds i8,i8*%m2,i64 16
%m4=bitcast i8*%m3 to i8*(i8*,i8*)**
%m5=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%m4,align 8
%m6=bitcast i8*%m2 to i8**
%m7=load i8*,i8**%m6,align 8
%m8=call fastcc i8*%m5(i8*inreg%m7,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@if,i64 0,i32 2)to i8*))
%m9=getelementptr inbounds i8,i8*%m8,i64 16
%na=bitcast i8*%m9 to i8*(i8*,i8*)**
%nb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%na,align 8
%nc=bitcast i8*%m8 to i8**
%nd=load i8*,i8**%nc,align 8
%ne=load i8*,i8**%d,align 8
%nf=call fastcc i8*%nb(i8*inreg%nd,i8*inreg%ne)
%ng=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nh=call fastcc i8*%mZ(i8*inreg%ng,i8*inreg%nf)
store i8*%nh,i8**%e,align 8
%ni=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nj=getelementptr inbounds i8,i8*%ni,i64 16
%nk=bitcast i8*%nj to i8*(i8*,i8*)**
%nl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nk,align 8
%nm=bitcast i8*%ni to i8**
%nn=load i8*,i8**%nm,align 8
%no=call fastcc i8*%nl(i8*inreg%nn,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ig,i64 0,i32 2)to i8*))
%np=getelementptr inbounds i8,i8*%no,i64 16
%nq=bitcast i8*%np to i8*(i8*,i8*)**
%nr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nq,align 8
%ns=bitcast i8*%no to i8**
%nt=load i8*,i8**%ns,align 8
%nu=load i8**,i8***%hb,align 8
store i8*null,i8**%w,align 8
%nv=load i8*,i8**%nu,align 8
%nw=call fastcc i8*%nr(i8*inreg%nt,i8*inreg%nv)
%nx=getelementptr inbounds i8,i8*%nw,i64 16
%ny=bitcast i8*%nx to i8*(i8*,i8*)**
%nz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ny,align 8
%nA=bitcast i8*%nw to i8**
%nB=load i8*,i8**%nA,align 8
%nC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nD=call fastcc i8*%nz(i8*inreg%nB,i8*inreg%nC)
store i8*%nD,i8**%d,align 8
%nE=call i8*@sml_alloc(i32 inreg 20)#0
%nF=getelementptr inbounds i8,i8*%nE,i64 -4
%nG=bitcast i8*%nF to i32*
store i32 1342177296,i32*%nG,align 4
%nH=load i8*,i8**%e,align 8
%nI=bitcast i8*%nE to i8**
store i8*%nH,i8**%nI,align 8
%nJ=load i8*,i8**%d,align 8
%nK=getelementptr inbounds i8,i8*%nE,i64 8
%nL=bitcast i8*%nK to i8**
store i8*%nJ,i8**%nL,align 8
%nM=getelementptr inbounds i8,i8*%nE,i64 16
%nN=bitcast i8*%nM to i32*
store i32 3,i32*%nN,align 4
%nO=load i8*,i8**%k,align 8
%nP=icmp eq i8*%nO,null
store i8*null,i8**%k,align 8
br i1%nP,label%nQ,label%nR
nQ:
store i8*null,i8**%e,align 8
br label%oB
nR:
%nS=bitcast i8*%nO to i8**
%nT=load i8*,i8**%nS,align 8
store i8*%nT,i8**%f,align 8
%nU=call fastcc i8*@_SMLFN11RecordLabel3Map7filteriE(i32 inreg 1,i32 inreg 8)
%nV=getelementptr inbounds i8,i8*%nU,i64 16
%nW=bitcast i8*%nV to i8*(i8*,i8*)**
%nX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nW,align 8
%nY=bitcast i8*%nU to i8**
%nZ=load i8*,i8**%nY,align 8
store i8*%nZ,i8**%g,align 8
%n0=call i8*@sml_alloc(i32 inreg 12)#0
%n1=getelementptr inbounds i8,i8*%n0,i64 -4
%n2=bitcast i8*%n1 to i32*
store i32 1342177288,i32*%n2,align 4
store i8*%n0,i8**%h,align 8
%n3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%n4=bitcast i8*%n0 to i8**
store i8*%n3,i8**%n4,align 8
%n5=getelementptr inbounds i8,i8*%n0,i64 8
%n6=bitcast i8*%n5 to i32*
store i32 1,i32*%n6,align 4
%n7=call i8*@sml_alloc(i32 inreg 28)#0
%n8=getelementptr inbounds i8,i8*%n7,i64 -4
%n9=bitcast i8*%n8 to i32*
store i32 1342177304,i32*%n9,align 4
%oa=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%ob=bitcast i8*%n7 to i8**
store i8*%oa,i8**%ob,align 8
%oc=getelementptr inbounds i8,i8*%n7,i64 8
%od=bitcast i8*%oc to void(...)**
store void(...)*bitcast(i32(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2450 to void(...)*),void(...)**%od,align 8
%oe=getelementptr inbounds i8,i8*%n7,i64 16
%of=bitcast i8*%oe to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL9elabQueryE_2759 to void(...)*),void(...)**%of,align 8
%og=getelementptr inbounds i8,i8*%n7,i64 24
%oh=bitcast i8*%og to i32*
store i32 -2147483647,i32*%oh,align 4
%oi=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%oj=call fastcc i8*%nX(i8*inreg%oi,i8*inreg%n7)
%ok=getelementptr inbounds i8,i8*%oj,i64 16
%ol=bitcast i8*%ok to i8*(i8*,i8*)**
%om=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ol,align 8
%on=bitcast i8*%oj to i8**
%oo=load i8*,i8**%on,align 8
%op=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oq=call fastcc i8*%om(i8*inreg%oo,i8*inreg%op)
store i8*%oq,i8**%d,align 8
%or=call i8*@sml_alloc(i32 inreg 20)#0
%os=getelementptr inbounds i8,i8*%or,i64 -4
%ot=bitcast i8*%os to i32*
store i32 1342177296,i32*%ot,align 4
%ou=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ov=bitcast i8*%or to i8**
store i8*%ou,i8**%ov,align 8
%ow=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ox=getelementptr inbounds i8,i8*%or,i64 8
%oy=bitcast i8*%ox to i8**
store i8*%ow,i8**%oy,align 8
%oz=getelementptr inbounds i8,i8*%or,i64 16
%oA=bitcast i8*%oz to i32*
store i32 3,i32*%oA,align 4
br label%oB
oB:
%oC=phi i8*[%or,%nR],[%nE,%nQ]
store i8*%oC,i8**%d,align 8
%oD=call i8*@sml_alloc(i32 inreg 68)#0
%oE=getelementptr inbounds i8,i8*%oD,i64 -4
%oF=bitcast i8*%oE to i32*
store i32 1342177344,i32*%oF,align 4
store i8*%oD,i8**%e,align 8
%oG=load i8*,i8**%p,align 8
store i8*null,i8**%p,align 8
%oH=bitcast i8*%oD to i8**
store i8*%oG,i8**%oH,align 8
%oI=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%oJ=getelementptr inbounds i8,i8*%oD,i64 8
%oK=bitcast i8*%oJ to i8**
store i8*%oI,i8**%oK,align 8
%oL=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%oM=getelementptr inbounds i8,i8*%oD,i64 16
%oN=bitcast i8*%oM to i8**
store i8*%oL,i8**%oN,align 8
%oO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%oP=getelementptr inbounds i8,i8*%oD,i64 24
%oQ=bitcast i8*%oP to i8**
store i8*%oO,i8**%oQ,align 8
%oR=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%oS=getelementptr inbounds i8,i8*%oD,i64 32
%oT=bitcast i8*%oS to i8**
store i8*%oR,i8**%oT,align 8
%oU=load i8*,i8**%s,align 8
store i8*null,i8**%s,align 8
%oV=getelementptr inbounds i8,i8*%oD,i64 40
%oW=bitcast i8*%oV to i8**
store i8*%oU,i8**%oW,align 8
%oX=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%oY=getelementptr inbounds i8,i8*%oD,i64 48
%oZ=bitcast i8*%oY to i8**
store i8*%oX,i8**%oZ,align 8
%o0=load i8*,i8**%q,align 8
store i8*null,i8**%q,align 8
%o1=getelementptr inbounds i8,i8*%oD,i64 56
%o2=bitcast i8*%o1 to i8**
store i8*%o0,i8**%o2,align 8
%o3=getelementptr inbounds i8,i8*%oD,i64 64
%o4=bitcast i8*%o3 to i32*
store i32 255,i32*%o4,align 4
%o5=call i8*@sml_alloc(i32 inreg 20)#0
%o6=getelementptr inbounds i8,i8*%o5,i64 -4
%o7=bitcast i8*%o6 to i32*
store i32 1342177296,i32*%o7,align 4
store i8*%o5,i8**%f,align 8
%o8=getelementptr inbounds i8,i8*%o5,i64 4
%o9=bitcast i8*%o8 to i32*
store i32 0,i32*%o9,align 1
%pa=bitcast i8*%o5 to i32*
store i32 22,i32*%pa,align 4
%pb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pc=getelementptr inbounds i8,i8*%o5,i64 8
%pd=bitcast i8*%pc to i8**
store i8*%pb,i8**%pd,align 8
%pe=getelementptr inbounds i8,i8*%o5,i64 16
%pf=bitcast i8*%pe to i32*
store i32 2,i32*%pf,align 4
%pg=call i8*@sml_alloc(i32 inreg 20)#0
%ph=getelementptr inbounds i8,i8*%pg,i64 -4
%pi=bitcast i8*%ph to i32*
store i32 1342177296,i32*%pi,align 4
%pj=load i8*,i8**%d,align 8
%pk=bitcast i8*%pg to i8**
store i8*%pj,i8**%pk,align 8
%pl=load i8*,i8**%f,align 8
%pm=getelementptr inbounds i8,i8*%pg,i64 8
%pn=bitcast i8*%pm to i8**
store i8*%pl,i8**%pn,align 8
%po=getelementptr inbounds i8,i8*%pg,i64 16
%pp=bitcast i8*%po to i32*
store i32 3,i32*%pp,align 4
ret i8*%pg
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%k,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%c,%s]
store i8*null,i8**%e,align 8
%t=bitcast i8*%r to i32*
%u=load i32,i32*%t,align 4
switch i32%u,label%v[
i32 5,label%ER
i32 3,label%xo
i32 9,label%wK
i32 14,label%vZ
i32 7,label%ve
i32 1,label%ul
i32 2,label%sY
i32 4,label%r1
i32 6,label%q4
i32 10,label%oQ
i32 11,label%js
i32 8,label%iw
i32 12,label%hF
i32 13,label%gJ
i32 0,label%fQ
i32 15,label%N
]
v:
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%w=load i8*,i8**@_SMLZ5Match,align 8
store i8*%w,i8**%d,align 8
%x=call i8*@sml_alloc(i32 inreg 20)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177296,i32*%z,align 4
store i8*%x,i8**%e,align 8
%A=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iI,i64 0,i32 2,i64 0),i8**%D,align 8
%E=getelementptr inbounds i8,i8*%x,i64 16
%F=bitcast i8*%E to i32*
store i32 3,i32*%F,align 4
%G=call i8*@sml_alloc(i32 inreg 60)#0
%H=getelementptr inbounds i8,i8*%G,i64 -4
%I=bitcast i8*%H to i32*
store i32 1342177336,i32*%I,align 4
%J=getelementptr inbounds i8,i8*%G,i64 56
%K=bitcast i8*%J to i32*
store i32 1,i32*%K,align 4
%L=load i8*,i8**%e,align 8
%M=bitcast i8*%G to i8**
store i8*%L,i8**%M,align 8
call void@sml_raise(i8*inreg%G)#1
unreachable
N:
%O=getelementptr inbounds i8,i8*%r,i64 8
%P=bitcast i8*%O to i8**
%Q=load i8*,i8**%P,align 8
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%e,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%f,align 8
%W=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%X=getelementptr inbounds i8,i8*%W,i64 16
%Y=bitcast i8*%X to i8*(i8*,i8*)**
%Z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Y,align 8
%aa=bitcast i8*%W to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%g,align 8
%ac=call i8*@sml_alloc(i32 inreg 20)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177296,i32*%ae,align 4
store i8*%ac,i8**%h,align 8
%af=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=load i8*,i8**%k,align 8
%ai=getelementptr inbounds i8,i8*%ac,i64 8
%aj=bitcast i8*%ai to i8**
store i8*%ah,i8**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ac,i64 16
%al=bitcast i8*%ak to i32*
store i32 3,i32*%al,align 4
%am=call i8*@sml_alloc(i32 inreg 28)#0
%an=getelementptr inbounds i8,i8*%am,i64 -4
%ao=bitcast i8*%an to i32*
store i32 1342177304,i32*%ao,align 4
%ap=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aq=bitcast i8*%am to i8**
store i8*%ap,i8**%aq,align 8
%ar=getelementptr inbounds i8,i8*%am,i64 8
%as=bitcast i8*%ar to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2475 to void(...)*),void(...)**%as,align 8
%at=getelementptr inbounds i8,i8*%am,i64 16
%au=bitcast i8*%at to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2475 to void(...)*),void(...)**%au,align 8
%av=getelementptr inbounds i8,i8*%am,i64 24
%aw=bitcast i8*%av to i32*
store i32 -2147483647,i32*%aw,align 4
%ax=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ay=call fastcc i8*%Z(i8*inreg%ax,i8*inreg%am)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aF=call fastcc i8*%aB(i8*inreg%aD,i8*inreg%aE)
store i8*%aF,i8**%d,align 8
%aG=call fastcc i8*@_SMLFN4List3allE(i32 inreg 1,i32 inreg 8)
%aH=getelementptr inbounds i8,i8*%aG,i64 16
%aI=bitcast i8*%aH to i8*(i8*,i8*)**
%aJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aI,align 8
%aK=bitcast i8*%aG to i8**
%aL=load i8*,i8**%aK,align 8
%aM=call fastcc i8*%aJ(i8*inreg%aL,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iw,i64 0,i32 2)to i8*))
%aN=getelementptr inbounds i8,i8*%aM,i64 16
%aO=bitcast i8*%aN to i8*(i8*,i8*)**
%aP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aO,align 8
%aQ=bitcast i8*%aM to i8**
%aR=load i8*,i8**%aQ,align 8
%aS=load i8*,i8**%d,align 8
%aT=call fastcc i8*%aP(i8*inreg%aR,i8*inreg%aS)
%aU=bitcast i8*%aT to i32*
%aV=load i32,i32*%aU,align 4
%aW=icmp eq i32%aV,0
%aX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to void(...)**
%a0=load void(...)*,void(...)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
br i1%aW,label%cY,label%a3
a3:
%a4=bitcast void(...)*%a0 to i8*(i8*,i8*)*
%a5=call fastcc i8*%a4(i8*inreg%a2,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iB,i64 0,i32 2)to i8*))
%a6=getelementptr inbounds i8,i8*%a5,i64 16
%a7=bitcast i8*%a6 to i8*(i8*,i8*)**
%a8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a7,align 8
%a9=bitcast i8*%a5 to i8**
%ba=load i8*,i8**%a9,align 8
%bb=load i8*,i8**%d,align 8
%bc=call fastcc i8*%a8(i8*inreg%ba,i8*inreg%bb)
store i8*%bc,i8**%e,align 8
%bd=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%be=getelementptr inbounds i8,i8*%bd,i64 16
%bf=bitcast i8*%be to i8*(i8*,i8*)**
%bg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bf,align 8
%bh=bitcast i8*%bd to i8**
%bi=load i8*,i8**%bh,align 8
store i8*%bi,i8**%g,align 8
%bj=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bk=getelementptr inbounds i8,i8*%bj,i64 16
%bl=bitcast i8*%bk to i8*(i8*,i8*)**
%bm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bl,align 8
%bn=bitcast i8*%bj to i8**
%bo=load i8*,i8**%bn,align 8
%bp=call fastcc i8*%bm(i8*inreg%bo,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iC,i64 0,i32 2)to i8*))
%bq=getelementptr inbounds i8,i8*%bp,i64 16
%br=bitcast i8*%bq to i8*(i8*,i8*)**
%bs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%br,align 8
%bt=bitcast i8*%bp to i8**
%bu=load i8*,i8**%bt,align 8
%bv=load i8*,i8**%e,align 8
%bw=call fastcc i8*%bs(i8*inreg%bu,i8*inreg%bv)
%bx=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%by=call fastcc i8*%bg(i8*inreg%bx,i8*inreg%bw)
store i8*%by,i8**%g,align 8
%bz=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bA=getelementptr inbounds i8,i8*%bz,i64 16
%bB=bitcast i8*%bA to i8*(i8*,i8*)**
%bC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bB,align 8
%bD=bitcast i8*%bz to i8**
%bE=load i8*,i8**%bD,align 8
%bF=call fastcc i8*%bC(i8*inreg%bE,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iD,i64 0,i32 2)to i8*))
%bG=getelementptr inbounds i8,i8*%bF,i64 16
%bH=bitcast i8*%bG to i8*(i8*,i8*)**
%bI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bH,align 8
%bJ=bitcast i8*%bF to i8**
%bK=load i8*,i8**%bJ,align 8
%bL=bitcast i8**%k to i8***
%bM=load i8**,i8***%bL,align 8
store i8*null,i8**%k,align 8
%bN=load i8*,i8**%bM,align 8
%bO=call fastcc i8*%bI(i8*inreg%bK,i8*inreg%bN)
%bP=getelementptr inbounds i8,i8*%bO,i64 16
%bQ=bitcast i8*%bP to i8*(i8*,i8*)**
%bR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bQ,align 8
%bS=bitcast i8*%bO to i8**
%bT=load i8*,i8**%bS,align 8
%bU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bV=call fastcc i8*%bR(i8*inreg%bT,i8*inreg%bU)
store i8*%bV,i8**%e,align 8
%bW=call i8*@sml_alloc(i32 inreg 20)#0
%bX=getelementptr inbounds i8,i8*%bW,i64 -4
%bY=bitcast i8*%bX to i32*
store i32 1342177296,i32*%bY,align 4
store i8*%bW,i8**%h,align 8
%bZ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b0=bitcast i8*%bW to i8**
store i8*%bZ,i8**%b0,align 8
%b1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b2=getelementptr inbounds i8,i8*%bW,i64 8
%b3=bitcast i8*%b2 to i8**
store i8*%b1,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bW,i64 16
%b5=bitcast i8*%b4 to i32*
store i32 3,i32*%b5,align 4
%b6=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%b7=getelementptr inbounds i8,i8*%b6,i64 16
%b8=bitcast i8*%b7 to i8*(i8*,i8*)**
%b9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b8,align 8
%ca=bitcast i8*%b6 to i8**
%cb=load i8*,i8**%ca,align 8
%cc=call fastcc i8*%b9(i8*inreg%cb,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iH,i64 0,i32 2)to i8*))
%cd=getelementptr inbounds i8,i8*%cc,i64 16
%ce=bitcast i8*%cd to i8*(i8*,i8*)**
%cf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ce,align 8
%cg=bitcast i8*%cc to i8**
%ch=load i8*,i8**%cg,align 8
%ci=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cj=call fastcc i8*%cf(i8*inreg%ch,i8*inreg%ci)
store i8*%cj,i8**%d,align 8
%ck=call i8*@sml_alloc(i32 inreg 20)#0
%cl=getelementptr inbounds i8,i8*%ck,i64 -4
%cm=bitcast i8*%cl to i32*
store i32 1342177296,i32*%cm,align 4
store i8*%ck,i8**%e,align 8
%cn=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%co=bitcast i8*%ck to i8**
store i8*%cn,i8**%co,align 8
%cp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cq=getelementptr inbounds i8,i8*%ck,i64 8
%cr=bitcast i8*%cq to i8**
store i8*%cp,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%ck,i64 16
%ct=bitcast i8*%cs to i32*
store i32 3,i32*%ct,align 4
%cu=call i8*@sml_alloc(i32 inreg 20)#0
%cv=getelementptr inbounds i8,i8*%cu,i64 -4
%cw=bitcast i8*%cv to i32*
store i32 1342177296,i32*%cw,align 4
store i8*%cu,i8**%d,align 8
%cx=getelementptr inbounds i8,i8*%cu,i64 4
%cy=bitcast i8*%cx to i32*
store i32 0,i32*%cy,align 1
%cz=bitcast i8*%cu to i32*
store i32 28,i32*%cz,align 4
%cA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cB=getelementptr inbounds i8,i8*%cu,i64 8
%cC=bitcast i8*%cB to i8**
store i8*%cA,i8**%cC,align 8
%cD=getelementptr inbounds i8,i8*%cu,i64 16
%cE=bitcast i8*%cD to i32*
store i32 2,i32*%cE,align 4
%cF=call i8*@sml_alloc(i32 inreg 20)#0
%cG=getelementptr inbounds i8,i8*%cF,i64 -4
%cH=bitcast i8*%cG to i32*
store i32 1342177296,i32*%cH,align 4
store i8*%cF,i8**%e,align 8
%cI=bitcast i8*%cF to i64*
store i64 0,i64*%cI,align 4
%cJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cK=getelementptr inbounds i8,i8*%cF,i64 8
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=getelementptr inbounds i8,i8*%cF,i64 16
%cN=bitcast i8*%cM to i32*
store i32 2,i32*%cN,align 4
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
%cR=load i8*,i8**%h,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=load i8*,i8**%e,align 8
%cU=getelementptr inbounds i8,i8*%cO,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cO,i64 16
%cX=bitcast i8*%cW to i32*
store i32 3,i32*%cX,align 4
ret i8*%cO
cY:
store i8*%a2,i8**%g,align 8
%cZ=load i8*,i8**%k,align 8
%c0=getelementptr inbounds i8,i8*%cZ,i64 24
%c1=bitcast i8*%c0 to i8**
%c2=load i8*,i8**%c1,align 8
store i8*%c2,i8**%e,align 8
%c3=call i8*@sml_alloc(i32 inreg 12)#0
%c4=getelementptr inbounds i8,i8*%c3,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177288,i32*%c5,align 4
store i8*%c3,i8**%h,align 8
%c6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c7=bitcast i8*%c3 to i8**
store i8*%c6,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c3,i64 8
%c9=bitcast i8*%c8 to i32*
store i32 1,i32*%c9,align 4
%da=call i8*@sml_alloc(i32 inreg 28)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177304,i32*%dc,align 4
%dd=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%da,i64 8
%dg=bitcast i8*%df to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2479 to void(...)*),void(...)**%dg,align 8
%dh=getelementptr inbounds i8,i8*%da,i64 16
%di=bitcast i8*%dh to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2479 to void(...)*),void(...)**%di,align 8
%dj=getelementptr inbounds i8,i8*%da,i64 24
%dk=bitcast i8*%dj to i32*
store i32 -2147483647,i32*%dk,align 4
%dl=bitcast void(...)*%a0 to i8*(i8*,i8*)*
%dm=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dn=call fastcc i8*%dl(i8*inreg%dm,i8*inreg%da)
%do=getelementptr inbounds i8,i8*%dn,i64 16
%dp=bitcast i8*%do to i8*(i8*,i8*)**
%dq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dp,align 8
%dr=bitcast i8*%dn to i8**
%ds=load i8*,i8**%dr,align 8
%dt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%du=call fastcc i8*%dq(i8*inreg%ds,i8*inreg%dt)
store i8*%du,i8**%d,align 8
%dv=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%dw=getelementptr inbounds i8,i8*%dv,i64 16
%dx=bitcast i8*%dw to i8*(i8*,i8*)**
%dy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dx,align 8
%dz=bitcast i8*%dv to i8**
%dA=load i8*,i8**%dz,align 8
store i8*%dA,i8**%g,align 8
%dB=bitcast i8**%k to i8***
%dC=load i8**,i8***%dB,align 8
%dD=load i8*,i8**%dC,align 8
store i8*%dD,i8**%e,align 8
%dE=call i8*@sml_alloc(i32 inreg 12)#0
%dF=getelementptr inbounds i8,i8*%dE,i64 -4
%dG=bitcast i8*%dF to i32*
store i32 1342177288,i32*%dG,align 4
store i8*%dE,i8**%h,align 8
%dH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dI=bitcast i8*%dE to i8**
store i8*%dH,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dE,i64 8
%dK=bitcast i8*%dJ to i32*
store i32 1,i32*%dK,align 4
%dL=call i8*@sml_alloc(i32 inreg 28)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177304,i32*%dN,align 4
%dO=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dL,i64 8
%dR=bitcast i8*%dQ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2484 to void(...)*),void(...)**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dL,i64 16
%dT=bitcast i8*%dS to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL4exps_2484 to void(...)*),void(...)**%dT,align 8
%dU=getelementptr inbounds i8,i8*%dL,i64 24
%dV=bitcast i8*%dU to i32*
store i32 -2147483647,i32*%dV,align 4
%dW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dX=call fastcc i8*%dy(i8*inreg%dW,i8*inreg%dL)
%dY=getelementptr inbounds i8,i8*%dX,i64 16
%dZ=bitcast i8*%dY to i8*(i8*,i8*)**
%d0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dZ,align 8
%d1=bitcast i8*%dX to i8**
%d2=load i8*,i8**%d1,align 8
%d3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d4=call fastcc i8*%d0(i8*inreg%d2,i8*inreg%d3)
store i8*%d4,i8**%d,align 8
%d5=call fastcc i8*@_SMLFN8ListPair5unzipE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%d6=getelementptr inbounds i8,i8*%d5,i64 16
%d7=bitcast i8*%d6 to i8*(i8*,i8*)**
%d8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d7,align 8
%d9=bitcast i8*%d5 to i8**
%ea=load i8*,i8**%d9,align 8
%eb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ec=call fastcc i8*%d8(i8*inreg%ea,i8*inreg%eb)
%ed=bitcast i8*%ec to i8**
%ee=load i8*,i8**%ed,align 8
store i8*%ee,i8**%d,align 8
%ef=getelementptr inbounds i8,i8*%ec,i64 8
%eg=bitcast i8*%ef to i8**
%eh=load i8*,i8**%eg,align 8
store i8*%eh,i8**%e,align 8
%ei=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%ej=getelementptr inbounds i8,i8*%ei,i64 16
%ek=bitcast i8*%ej to i8*(i8*,i8*)**
%el=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ek,align 8
%em=bitcast i8*%ei to i8**
%en=load i8*,i8**%em,align 8
store i8*%en,i8**%g,align 8
%eo=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ep=getelementptr inbounds i8,i8*%eo,i64 16
%eq=bitcast i8*%ep to i8*(i8*,i8*)**
%er=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eq,align 8
%es=bitcast i8*%eo to i8**
%et=load i8*,i8**%es,align 8
%eu=call fastcc i8*%er(i8*inreg%et,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iz,i64 0,i32 2)to i8*))
%ev=getelementptr inbounds i8,i8*%eu,i64 16
%ew=bitcast i8*%ev to i8*(i8*,i8*)**
%ex=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ew,align 8
%ey=bitcast i8*%eu to i8**
%ez=load i8*,i8**%ey,align 8
%eA=load i8*,i8**%d,align 8
%eB=call fastcc i8*%ex(i8*inreg%ez,i8*inreg%eA)
%eC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eD=call fastcc i8*%el(i8*inreg%eC,i8*inreg%eB)
store i8*%eD,i8**%g,align 8
%eE=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%eF=getelementptr inbounds i8,i8*%eE,i64 16
%eG=bitcast i8*%eF to i8*(i8*,i8*)**
%eH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eG,align 8
%eI=bitcast i8*%eE to i8**
%eJ=load i8*,i8**%eI,align 8
%eK=call fastcc i8*%eH(i8*inreg%eJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iA,i64 0,i32 2)to i8*))
%eL=getelementptr inbounds i8,i8*%eK,i64 16
%eM=bitcast i8*%eL to i8*(i8*,i8*)**
%eN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eM,align 8
%eO=bitcast i8*%eK to i8**
%eP=load i8*,i8**%eO,align 8
%eQ=load i8**,i8***%dB,align 8
store i8*null,i8**%k,align 8
%eR=load i8*,i8**%eQ,align 8
%eS=call fastcc i8*%eN(i8*inreg%eP,i8*inreg%eR)
%eT=getelementptr inbounds i8,i8*%eS,i64 16
%eU=bitcast i8*%eT to i8*(i8*,i8*)**
%eV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eU,align 8
%eW=bitcast i8*%eS to i8**
%eX=load i8*,i8**%eW,align 8
%eY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eZ=call fastcc i8*%eV(i8*inreg%eX,i8*inreg%eY)
store i8*%eZ,i8**%d,align 8
%e0=call i8*@sml_alloc(i32 inreg 20)#0
%e1=getelementptr inbounds i8,i8*%e0,i64 -4
%e2=bitcast i8*%e1 to i32*
store i32 1342177296,i32*%e2,align 4
store i8*%e0,i8**%h,align 8
%e3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%e4=bitcast i8*%e0 to i8**
store i8*%e3,i8**%e4,align 8
%e5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%e6=getelementptr inbounds i8,i8*%e0,i64 8
%e7=bitcast i8*%e6 to i8**
store i8*%e5,i8**%e7,align 8
%e8=getelementptr inbounds i8,i8*%e0,i64 16
%e9=bitcast i8*%e8 to i32*
store i32 3,i32*%e9,align 4
%fa=call i8*@sml_alloc(i32 inreg 20)#0
%fb=getelementptr inbounds i8,i8*%fa,i64 -4
%fc=bitcast i8*%fb to i32*
store i32 1342177296,i32*%fc,align 4
store i8*%fa,i8**%d,align 8
%fd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fe=bitcast i8*%fa to i8**
store i8*%fd,i8**%fe,align 8
%ff=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fg=getelementptr inbounds i8,i8*%fa,i64 8
%fh=bitcast i8*%fg to i8**
store i8*%ff,i8**%fh,align 8
%fi=getelementptr inbounds i8,i8*%fa,i64 16
%fj=bitcast i8*%fi to i32*
store i32 3,i32*%fj,align 4
%fk=call i8*@sml_alloc(i32 inreg 20)#0
%fl=getelementptr inbounds i8,i8*%fk,i64 -4
%fm=bitcast i8*%fl to i32*
store i32 1342177296,i32*%fm,align 4
store i8*%fk,i8**%e,align 8
%fn=getelementptr inbounds i8,i8*%fk,i64 4
%fo=bitcast i8*%fn to i32*
store i32 0,i32*%fo,align 1
%fp=bitcast i8*%fk to i32*
store i32 28,i32*%fp,align 4
%fq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fr=getelementptr inbounds i8,i8*%fk,i64 8
%fs=bitcast i8*%fr to i8**
store i8*%fq,i8**%fs,align 8
%ft=getelementptr inbounds i8,i8*%fk,i64 16
%fu=bitcast i8*%ft to i32*
store i32 2,i32*%fu,align 4
%fv=call i8*@sml_alloc(i32 inreg 20)#0
%fw=getelementptr inbounds i8,i8*%fv,i64 -4
%fx=bitcast i8*%fw to i32*
store i32 1342177296,i32*%fx,align 4
store i8*%fv,i8**%d,align 8
%fy=getelementptr inbounds i8,i8*%fv,i64 4
%fz=bitcast i8*%fy to i32*
store i32 0,i32*%fz,align 1
%fA=bitcast i8*%fv to i32*
store i32 1,i32*%fA,align 4
%fB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fC=getelementptr inbounds i8,i8*%fv,i64 8
%fD=bitcast i8*%fC to i8**
store i8*%fB,i8**%fD,align 8
%fE=getelementptr inbounds i8,i8*%fv,i64 16
%fF=bitcast i8*%fE to i32*
store i32 2,i32*%fF,align 4
%fG=call i8*@sml_alloc(i32 inreg 20)#0
%fH=getelementptr inbounds i8,i8*%fG,i64 -4
%fI=bitcast i8*%fH to i32*
store i32 1342177296,i32*%fI,align 4
%fJ=load i8*,i8**%h,align 8
%fK=bitcast i8*%fG to i8**
store i8*%fJ,i8**%fK,align 8
%fL=load i8*,i8**%d,align 8
%fM=getelementptr inbounds i8,i8*%fG,i64 8
%fN=bitcast i8*%fM to i8**
store i8*%fL,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fG,i64 16
%fP=bitcast i8*%fO to i32*
store i32 3,i32*%fP,align 4
ret i8*%fG
fQ:
%fR=getelementptr inbounds i8,i8*%r,i64 8
%fS=bitcast i8*%fR to i8***
%fT=load i8**,i8***%fS,align 8
%fU=load i8*,i8**%fT,align 8
store i8*%fU,i8**%e,align 8
%fV=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fW=getelementptr inbounds i8,i8*%fV,i64 16
%fX=bitcast i8*%fW to i8*(i8*,i8*)**
%fY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fX,align 8
%fZ=bitcast i8*%fV to i8**
%f0=load i8*,i8**%fZ,align 8
store i8*%f0,i8**%f,align 8
%f1=call i8*@sml_alloc(i32 inreg 12)#0
%f2=getelementptr inbounds i8,i8*%f1,i64 -4
%f3=bitcast i8*%f2 to i32*
store i32 1342177288,i32*%f3,align 4
store i8*%f1,i8**%g,align 8
%f4=load i8*,i8**%d,align 8
%f5=bitcast i8*%f1 to i8**
store i8*%f4,i8**%f5,align 8
%f6=getelementptr inbounds i8,i8*%f1,i64 8
%f7=bitcast i8*%f6 to i32*
store i32 1,i32*%f7,align 4
%f8=call i8*@sml_alloc(i32 inreg 28)#0
%f9=getelementptr inbounds i8,i8*%f8,i64 -4
%ga=bitcast i8*%f9 to i32*
store i32 1342177304,i32*%ga,align 4
%gb=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gc=bitcast i8*%f8 to i8**
store i8*%gb,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f8,i64 8
%ge=bitcast i8*%gd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3src_2474 to void(...)*),void(...)**%ge,align 8
%gf=getelementptr inbounds i8,i8*%f8,i64 16
%gg=bitcast i8*%gf to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLL3src_2474 to void(...)*),void(...)**%gg,align 8
%gh=getelementptr inbounds i8,i8*%f8,i64 24
%gi=bitcast i8*%gh to i32*
store i32 -2147483647,i32*%gi,align 4
%gj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gk=call fastcc i8*%fY(i8*inreg%gj,i8*inreg%f8)
%gl=getelementptr inbounds i8,i8*%gk,i64 16
%gm=bitcast i8*%gl to i8*(i8*,i8*)**
%gn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gm,align 8
%go=bitcast i8*%gk to i8**
%gp=load i8*,i8**%go,align 8
%gq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gr=call fastcc i8*%gn(i8*inreg%gp,i8*inreg%gq)
store i8*%gr,i8**%e,align 8
%gs=call fastcc i8*@_SMLFN6Fixity5parseE(i32 inreg 1,i32 inreg 8)
%gt=getelementptr inbounds i8,i8*%gs,i64 16
%gu=bitcast i8*%gt to i8*(i8*,i8*)**
%gv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gu,align 8
%gw=bitcast i8*%gs to i8**
%gx=load i8*,i8**%gw,align 8
%gy=call fastcc i8*%gv(i8*inreg%gx,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iu,i64 0,i32 2)to i8*))
%gz=getelementptr inbounds i8,i8*%gy,i64 16
%gA=bitcast i8*%gz to i8*(i8*,i8*)**
%gB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gA,align 8
%gC=bitcast i8*%gy to i8**
%gD=load i8*,i8**%gC,align 8
%gE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gF=call fastcc i8*%gB(i8*inreg%gD,i8*inreg%gE)
%gG=load i8*,i8**%d,align 8
%gH=load i8*,i8**%k,align 8
%gI=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%gH,i8*inreg%gG,i8*inreg%gF)
ret i8*%gI
gJ:
%gK=getelementptr inbounds i8,i8*%r,i64 8
%gL=bitcast i8*%gK to i8**
%gM=load i8*,i8**%gL,align 8
store i8*%gM,i8**%d,align 8
%gN=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%gM)
store i8*%gN,i8**%e,align 8
%gO=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gP=getelementptr inbounds i8,i8*%gO,i64 8
%gQ=bitcast i8*%gP to i8**
%gR=load i8*,i8**%gQ,align 8
store i8*%gR,i8**%f,align 8
%gS=call i8*@sml_alloc(i32 inreg 20)#0
%gT=getelementptr inbounds i8,i8*%gS,i64 -4
%gU=bitcast i8*%gT to i32*
store i32 1342177296,i32*%gU,align 4
store i8*%gS,i8**%g,align 8
%gV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gW=bitcast i8*%gS to i8**
store i8*%gV,i8**%gW,align 8
%gX=getelementptr inbounds i8,i8*%gS,i64 8
%gY=bitcast i8*%gX to i8**
store i8*null,i8**%gY,align 8
%gZ=getelementptr inbounds i8,i8*%gS,i64 16
%g0=bitcast i8*%gZ to i32*
store i32 3,i32*%g0,align 4
%g1=call i8*@sml_alloc(i32 inreg 20)#0
%g2=getelementptr inbounds i8,i8*%g1,i64 -4
%g3=bitcast i8*%g2 to i32*
store i32 1342177296,i32*%g3,align 4
store i8*%g1,i8**%d,align 8
%g4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%g5=bitcast i8*%g1 to i8**
store i8*%g4,i8**%g5,align 8
%g6=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g7=getelementptr inbounds i8,i8*%g1,i64 8
%g8=bitcast i8*%g7 to i8**
store i8*%g6,i8**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g1,i64 16
%ha=bitcast i8*%g9 to i32*
store i32 3,i32*%ha,align 4
%hb=call i8*@sml_alloc(i32 inreg 20)#0
%hc=getelementptr inbounds i8,i8*%hb,i64 -4
%hd=bitcast i8*%hc to i32*
store i32 1342177296,i32*%hd,align 4
store i8*%hb,i8**%e,align 8
%he=getelementptr inbounds i8,i8*%hb,i64 4
%hf=bitcast i8*%he to i32*
store i32 0,i32*%hf,align 1
%hg=bitcast i8*%hb to i32*
store i32 16,i32*%hg,align 4
%hh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hi=getelementptr inbounds i8,i8*%hb,i64 8
%hj=bitcast i8*%hi to i8**
store i8*%hh,i8**%hj,align 8
%hk=getelementptr inbounds i8,i8*%hb,i64 16
%hl=bitcast i8*%hk to i32*
store i32 2,i32*%hl,align 4
%hm=call i8*@sml_alloc(i32 inreg 20)#0
%hn=getelementptr inbounds i8,i8*%hm,i64 -4
%ho=bitcast i8*%hn to i32*
store i32 1342177296,i32*%ho,align 4
store i8*%hm,i8**%d,align 8
%hp=bitcast i8*%hm to i64*
store i64 0,i64*%hp,align 4
%hq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hr=getelementptr inbounds i8,i8*%hm,i64 8
%hs=bitcast i8*%hr to i8**
store i8*%hq,i8**%hs,align 8
%ht=getelementptr inbounds i8,i8*%hm,i64 16
%hu=bitcast i8*%ht to i32*
store i32 2,i32*%hu,align 4
%hv=call i8*@sml_alloc(i32 inreg 20)#0
%hw=getelementptr inbounds i8,i8*%hv,i64 -4
%hx=bitcast i8*%hw to i32*
store i32 1342177296,i32*%hx,align 4
%hy=load i8*,i8**%f,align 8
%hz=bitcast i8*%hv to i8**
store i8*%hy,i8**%hz,align 8
%hA=load i8*,i8**%d,align 8
%hB=getelementptr inbounds i8,i8*%hv,i64 8
%hC=bitcast i8*%hB to i8**
store i8*%hA,i8**%hC,align 8
%hD=getelementptr inbounds i8,i8*%hv,i64 16
%hE=bitcast i8*%hD to i32*
store i32 3,i32*%hE,align 4
ret i8*%hv
hF:
%hG=getelementptr inbounds i8,i8*%r,i64 8
%hH=bitcast i8*%hG to i8**
%hI=load i8*,i8**%hH,align 8
%hJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hK=getelementptr inbounds i8,i8*%hJ,i64 8
%hL=bitcast i8*%hK to i8**
%hM=load i8*,i8**%hL,align 8
store i8*%hM,i8**%d,align 8
%hN=bitcast i8*%hI to i8**
%hO=load i8*,i8**%hN,align 8
store i8*%hO,i8**%e,align 8
%hP=getelementptr inbounds i8,i8*%hI,i64 8
%hQ=bitcast i8*%hP to i8**
%hR=load i8*,i8**%hQ,align 8
store i8*%hR,i8**%f,align 8
%hS=call i8*@sml_alloc(i32 inreg 20)#0
%hT=getelementptr inbounds i8,i8*%hS,i64 -4
%hU=bitcast i8*%hT to i32*
store i32 1342177296,i32*%hU,align 4
store i8*%hS,i8**%g,align 8
%hV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hW=bitcast i8*%hS to i8**
store i8*%hV,i8**%hW,align 8
%hX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hY=getelementptr inbounds i8,i8*%hS,i64 8
%hZ=bitcast i8*%hY to i8**
store i8*%hX,i8**%hZ,align 8
%h0=getelementptr inbounds i8,i8*%hS,i64 16
%h1=bitcast i8*%h0 to i32*
store i32 3,i32*%h1,align 4
%h2=call i8*@sml_alloc(i32 inreg 20)#0
%h3=getelementptr inbounds i8,i8*%h2,i64 -4
%h4=bitcast i8*%h3 to i32*
store i32 1342177296,i32*%h4,align 4
store i8*%h2,i8**%e,align 8
%h5=getelementptr inbounds i8,i8*%h2,i64 4
%h6=bitcast i8*%h5 to i32*
store i32 0,i32*%h6,align 1
%h7=bitcast i8*%h2 to i32*
store i32 16,i32*%h7,align 4
%h8=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%h9=getelementptr inbounds i8,i8*%h2,i64 8
%ia=bitcast i8*%h9 to i8**
store i8*%h8,i8**%ia,align 8
%ib=getelementptr inbounds i8,i8*%h2,i64 16
%ic=bitcast i8*%ib to i32*
store i32 2,i32*%ic,align 4
%id=call i8*@sml_alloc(i32 inreg 20)#0
%ie=getelementptr inbounds i8,i8*%id,i64 -4
%if=bitcast i8*%ie to i32*
store i32 1342177296,i32*%if,align 4
store i8*%id,i8**%f,align 8
%ig=bitcast i8*%id to i64*
store i64 0,i64*%ig,align 4
%ih=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ii=getelementptr inbounds i8,i8*%id,i64 8
%ij=bitcast i8*%ii to i8**
store i8*%ih,i8**%ij,align 8
%ik=getelementptr inbounds i8,i8*%id,i64 16
%il=bitcast i8*%ik to i32*
store i32 2,i32*%il,align 4
%im=call i8*@sml_alloc(i32 inreg 20)#0
%in=getelementptr inbounds i8,i8*%im,i64 -4
%io=bitcast i8*%in to i32*
store i32 1342177296,i32*%io,align 4
%ip=load i8*,i8**%d,align 8
%iq=bitcast i8*%im to i8**
store i8*%ip,i8**%iq,align 8
%ir=load i8*,i8**%f,align 8
%is=getelementptr inbounds i8,i8*%im,i64 8
%it=bitcast i8*%is to i8**
store i8*%ir,i8**%it,align 8
%iu=getelementptr inbounds i8,i8*%im,i64 16
%iv=bitcast i8*%iu to i32*
store i32 3,i32*%iv,align 4
ret i8*%im
iw:
%ix=getelementptr inbounds i8,i8*%r,i64 8
%iy=bitcast i8*%ix to i8**
%iz=load i8*,i8**%iy,align 8
store i8*%iz,i8**%d,align 8
%iA=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%iz)
store i8*%iA,i8**%e,align 8
%iB=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%iC=getelementptr inbounds i8,i8*%iB,i64 8
%iD=bitcast i8*%iC to i8**
%iE=load i8*,i8**%iD,align 8
store i8*%iE,i8**%f,align 8
%iF=call i8*@sml_alloc(i32 inreg 20)#0
%iG=getelementptr inbounds i8,i8*%iF,i64 -4
%iH=bitcast i8*%iG to i32*
store i32 1342177296,i32*%iH,align 4
store i8*%iF,i8**%g,align 8
%iI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iJ=bitcast i8*%iF to i8**
store i8*%iI,i8**%iJ,align 8
%iK=getelementptr inbounds i8,i8*%iF,i64 8
%iL=bitcast i8*%iK to i8**
store i8*null,i8**%iL,align 8
%iM=getelementptr inbounds i8,i8*%iF,i64 16
%iN=bitcast i8*%iM to i32*
store i32 3,i32*%iN,align 4
%iO=call i8*@sml_alloc(i32 inreg 20)#0
%iP=getelementptr inbounds i8,i8*%iO,i64 -4
%iQ=bitcast i8*%iP to i32*
store i32 1342177296,i32*%iQ,align 4
store i8*%iO,i8**%d,align 8
%iR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%iS=bitcast i8*%iO to i8**
store i8*%iR,i8**%iS,align 8
%iT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iU=getelementptr inbounds i8,i8*%iO,i64 8
%iV=bitcast i8*%iU to i8**
store i8*%iT,i8**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iO,i64 16
%iX=bitcast i8*%iW to i32*
store i32 3,i32*%iX,align 4
%iY=call i8*@sml_alloc(i32 inreg 20)#0
%iZ=getelementptr inbounds i8,i8*%iY,i64 -4
%i0=bitcast i8*%iZ to i32*
store i32 1342177296,i32*%i0,align 4
store i8*%iY,i8**%e,align 8
%i1=getelementptr inbounds i8,i8*%iY,i64 4
%i2=bitcast i8*%i1 to i32*
store i32 0,i32*%i2,align 1
%i3=bitcast i8*%iY to i32*
store i32 16,i32*%i3,align 4
%i4=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%i5=getelementptr inbounds i8,i8*%iY,i64 8
%i6=bitcast i8*%i5 to i8**
store i8*%i4,i8**%i6,align 8
%i7=getelementptr inbounds i8,i8*%iY,i64 16
%i8=bitcast i8*%i7 to i32*
store i32 2,i32*%i8,align 4
%i9=call i8*@sml_alloc(i32 inreg 20)#0
%ja=getelementptr inbounds i8,i8*%i9,i64 -4
%jb=bitcast i8*%ja to i32*
store i32 1342177296,i32*%jb,align 4
store i8*%i9,i8**%d,align 8
%jc=bitcast i8*%i9 to i64*
store i64 0,i64*%jc,align 4
%jd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%je=getelementptr inbounds i8,i8*%i9,i64 8
%jf=bitcast i8*%je to i8**
store i8*%jd,i8**%jf,align 8
%jg=getelementptr inbounds i8,i8*%i9,i64 16
%jh=bitcast i8*%jg to i32*
store i32 2,i32*%jh,align 4
%ji=call i8*@sml_alloc(i32 inreg 20)#0
%jj=getelementptr inbounds i8,i8*%ji,i64 -4
%jk=bitcast i8*%jj to i32*
store i32 1342177296,i32*%jk,align 4
%jl=load i8*,i8**%f,align 8
%jm=bitcast i8*%ji to i8**
store i8*%jl,i8**%jm,align 8
%jn=load i8*,i8**%d,align 8
%jo=getelementptr inbounds i8,i8*%ji,i64 8
%jp=bitcast i8*%jo to i8**
store i8*%jn,i8**%jp,align 8
%jq=getelementptr inbounds i8,i8*%ji,i64 16
%jr=bitcast i8*%jq to i32*
store i32 3,i32*%jr,align 4
ret i8*%ji
js:
%jt=getelementptr inbounds i8,i8*%r,i64 8
%ju=bitcast i8*%jt to i8**
%jv=load i8*,i8**%ju,align 8
%jw=bitcast i8*%jv to i32*
%jx=load i32,i32*%jw,align 4
%jy=getelementptr inbounds i8,i8*%jv,i64 8
%jz=bitcast i8*%jy to i8**
%jA=load i8*,i8**%jz,align 8
%jB=getelementptr inbounds i8,i8*%jv,i64 16
%jC=bitcast i8*%jB to i8**
%jD=load i8*,i8**%jC,align 8
store i8*%jD,i8**%e,align 8
%jE=getelementptr inbounds i8,i8*%jv,i64 24
%jF=bitcast i8*%jE to i8**
%jG=load i8*,i8**%jF,align 8
store i8*%jG,i8**%f,align 8
%jH=load i8*,i8**%d,align 8
%jI=load i8*,i8**%k,align 8
%jJ=call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%jI,i8*inreg%jH,i8*inreg%jA)
%jK=bitcast i8*%jJ to i8**
%jL=load i8*,i8**%jK,align 8
store i8*%jL,i8**%g,align 8
%jM=getelementptr inbounds i8,i8*%jJ,i64 8
%jN=bitcast i8*%jM to i8**
%jO=load i8*,i8**%jN,align 8
store i8*%jO,i8**%h,align 8
%jP=load i8*,i8**%d,align 8
%jQ=load i8*,i8**%e,align 8
%jR=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
%jS=call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%jR,i8*inreg%jP,i8*inreg%jQ)
%jT=bitcast i8*%jS to i8**
%jU=load i8*,i8**%jT,align 8
store i8*%jU,i8**%d,align 8
%jV=getelementptr inbounds i8,i8*%jS,i64 8
%jW=bitcast i8*%jV to i8**
%jX=load i8*,i8**%jW,align 8
store i8*%jX,i8**%e,align 8
%jY=load i8*,i8**%h,align 8
%jZ=bitcast i8*%jY to i32*
%j0=load i32,i32*%jZ,align 4
%j1=icmp eq i32%j0,0
br i1%j1,label%j2,label%mb
j2:
%j3=bitcast i8*%jX to i32*
%j4=getelementptr inbounds i8,i8*%jY,i64 8
%j5=bitcast i8*%j4 to i8**
%j6=load i8*,i8**%j5,align 8
store i8*%j6,i8**%i,align 8
%j7=load i32,i32*%j3,align 4
%j8=icmp eq i32%j7,0
br i1%j8,label%ka,label%j9
j9:
store i8*null,i8**%i,align 8
br label%mb
ka:
store i8*null,i8**%h,align 8
%kb=getelementptr inbounds i8,i8*%jX,i64 8
%kc=bitcast i8*%kb to i8**
%kd=load i8*,i8**%kc,align 8
store i8*%kd,i8**%e,align 8
%ke=call i8*@sml_alloc(i32 inreg 20)#0
%kf=getelementptr inbounds i8,i8*%ke,i64 -4
%kg=bitcast i8*%kf to i32*
store i32 1342177296,i32*%kg,align 4
store i8*%ke,i8**%h,align 8
%kh=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ki=bitcast i8*%ke to i8**
store i8*%kh,i8**%ki,align 8
%kj=getelementptr inbounds i8,i8*%ke,i64 8
%kk=bitcast i8*%kj to i8**
store i8*null,i8**%kk,align 8
%kl=getelementptr inbounds i8,i8*%ke,i64 16
%km=bitcast i8*%kl to i32*
store i32 3,i32*%km,align 4
%kn=call i8*@sml_alloc(i32 inreg 20)#0
%ko=getelementptr inbounds i8,i8*%kn,i64 -4
%kp=bitcast i8*%ko to i32*
store i32 1342177296,i32*%kp,align 4
store i8*%kn,i8**%d,align 8
%kq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kr=bitcast i8*%kn to i8**
store i8*%kq,i8**%kr,align 8
%ks=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%kt=getelementptr inbounds i8,i8*%kn,i64 8
%ku=bitcast i8*%kt to i8**
store i8*%ks,i8**%ku,align 8
%kv=getelementptr inbounds i8,i8*%kn,i64 16
%kw=bitcast i8*%kv to i32*
store i32 3,i32*%kw,align 4
%kx=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%ky=getelementptr inbounds i8,i8*%kx,i64 16
%kz=bitcast i8*%ky to i8*(i8*,i8*)**
%kA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kz,align 8
%kB=bitcast i8*%kx to i8**
%kC=load i8*,i8**%kB,align 8
store i8*%kC,i8**%g,align 8
%kD=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kE=getelementptr inbounds i8,i8*%kD,i64 16
%kF=bitcast i8*%kE to i8*(i8*,i8*)**
%kG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kF,align 8
%kH=bitcast i8*%kD to i8**
%kI=load i8*,i8**%kH,align 8
%kJ=call fastcc i8*%kG(i8*inreg%kI,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@im,i64 0,i32 2)to i8*))
%kK=getelementptr inbounds i8,i8*%kJ,i64 16
%kL=bitcast i8*%kK to i8*(i8*,i8*)**
%kM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kL,align 8
%kN=bitcast i8*%kJ to i8**
%kO=load i8*,i8**%kN,align 8
%kP=load i8*,i8**%d,align 8
%kQ=call fastcc i8*%kM(i8*inreg%kO,i8*inreg%kP)
%kR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kS=call fastcc i8*%kA(i8*inreg%kR,i8*inreg%kQ)
store i8*%kS,i8**%g,align 8
%kT=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kU=getelementptr inbounds i8,i8*%kT,i64 16
%kV=bitcast i8*%kU to i8*(i8*,i8*)**
%kW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kV,align 8
%kX=bitcast i8*%kT to i8**
%kY=load i8*,i8**%kX,align 8
%kZ=call fastcc i8*%kW(i8*inreg%kY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@in,i64 0,i32 2)to i8*))
%k0=getelementptr inbounds i8,i8*%kZ,i64 16
%k1=bitcast i8*%k0 to i8*(i8*,i8*)**
%k2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%k1,align 8
%k3=bitcast i8*%kZ to i8**
%k4=load i8*,i8**%k3,align 8
%k5=bitcast i8**%k to i8***
%k6=load i8**,i8***%k5,align 8
store i8*null,i8**%k,align 8
%k7=load i8*,i8**%k6,align 8
%k8=call fastcc i8*%k2(i8*inreg%k4,i8*inreg%k7)
%k9=getelementptr inbounds i8,i8*%k8,i64 16
%la=bitcast i8*%k9 to i8*(i8*,i8*)**
%lb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%la,align 8
%lc=bitcast i8*%k8 to i8**
%ld=load i8*,i8**%lc,align 8
%le=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lf=call fastcc i8*%lb(i8*inreg%ld,i8*inreg%le)
store i8*%lf,i8**%d,align 8
%lg=call i8*@sml_alloc(i32 inreg 20)#0
%lh=getelementptr inbounds i8,i8*%lg,i64 -4
%li=bitcast i8*%lh to i32*
store i32 1342177296,i32*%li,align 4
store i8*%lg,i8**%h,align 8
%lj=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lk=bitcast i8*%lg to i8**
store i8*%lj,i8**%lk,align 8
%ll=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lm=getelementptr inbounds i8,i8*%lg,i64 8
%ln=bitcast i8*%lm to i8**
store i8*%ll,i8**%ln,align 8
%lo=getelementptr inbounds i8,i8*%lg,i64 16
%lp=bitcast i8*%lo to i32*
store i32 3,i32*%lp,align 4
%lq=call i8*@sml_alloc(i32 inreg 36)#0
%lr=getelementptr inbounds i8,i8*%lq,i64 -4
%ls=bitcast i8*%lr to i32*
store i32 1342177312,i32*%ls,align 4
store i8*%lq,i8**%d,align 8
%lt=getelementptr inbounds i8,i8*%lq,i64 4
%lu=bitcast i8*%lt to i32*
store i32 0,i32*%lu,align 1
%lv=bitcast i8*%lq to i32*
store i32%jx,i32*%lv,align 4
%lw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%lx=getelementptr inbounds i8,i8*%lq,i64 8
%ly=bitcast i8*%lx to i8**
store i8*%lw,i8**%ly,align 8
%lz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lA=getelementptr inbounds i8,i8*%lq,i64 16
%lB=bitcast i8*%lA to i8**
store i8*%lz,i8**%lB,align 8
%lC=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lD=getelementptr inbounds i8,i8*%lq,i64 24
%lE=bitcast i8*%lD to i8**
store i8*%lC,i8**%lE,align 8
%lF=getelementptr inbounds i8,i8*%lq,i64 32
%lG=bitcast i8*%lF to i32*
store i32 14,i32*%lG,align 4
%lH=call i8*@sml_alloc(i32 inreg 20)#0
%lI=getelementptr inbounds i8,i8*%lH,i64 -4
%lJ=bitcast i8*%lI to i32*
store i32 1342177296,i32*%lJ,align 4
store i8*%lH,i8**%e,align 8
%lK=getelementptr inbounds i8,i8*%lH,i64 4
%lL=bitcast i8*%lK to i32*
store i32 0,i32*%lL,align 1
%lM=bitcast i8*%lH to i32*
store i32 20,i32*%lM,align 4
%lN=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%lO=getelementptr inbounds i8,i8*%lH,i64 8
%lP=bitcast i8*%lO to i8**
store i8*%lN,i8**%lP,align 8
%lQ=getelementptr inbounds i8,i8*%lH,i64 16
%lR=bitcast i8*%lQ to i32*
store i32 2,i32*%lR,align 4
%lS=call i8*@sml_alloc(i32 inreg 20)#0
%lT=getelementptr inbounds i8,i8*%lS,i64 -4
%lU=bitcast i8*%lT to i32*
store i32 1342177296,i32*%lU,align 4
store i8*%lS,i8**%d,align 8
%lV=bitcast i8*%lS to i64*
store i64 0,i64*%lV,align 4
%lW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%lX=getelementptr inbounds i8,i8*%lS,i64 8
%lY=bitcast i8*%lX to i8**
store i8*%lW,i8**%lY,align 8
%lZ=getelementptr inbounds i8,i8*%lS,i64 16
%l0=bitcast i8*%lZ to i32*
store i32 2,i32*%l0,align 4
%l1=call i8*@sml_alloc(i32 inreg 20)#0
%l2=getelementptr inbounds i8,i8*%l1,i64 -4
%l3=bitcast i8*%l2 to i32*
store i32 1342177296,i32*%l3,align 4
%l4=load i8*,i8**%h,align 8
%l5=bitcast i8*%l1 to i8**
store i8*%l4,i8**%l5,align 8
%l6=load i8*,i8**%d,align 8
%l7=getelementptr inbounds i8,i8*%l1,i64 8
%l8=bitcast i8*%l7 to i8**
store i8*%l6,i8**%l8,align 8
%l9=getelementptr inbounds i8,i8*%l1,i64 16
%ma=bitcast i8*%l9 to i32*
store i32 3,i32*%ma,align 4
ret i8*%l1
mb:
%mc=load i8*,i8**%k,align 8
%md=getelementptr inbounds i8,i8*%mc,i64 24
%me=bitcast i8*%md to i8**
%mf=load i8*,i8**%me,align 8
store i8*null,i8**%h,align 8
%mg=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%mf,i8*inreg%jY)
%mh=bitcast i8*%mg to i8**
%mi=load i8*,i8**%mh,align 8
store i8*%mi,i8**%h,align 8
%mj=getelementptr inbounds i8,i8*%mg,i64 8
%mk=bitcast i8*%mj to i8**
%ml=load i8*,i8**%mk,align 8
store i8*%ml,i8**%i,align 8
%mm=load i8*,i8**%k,align 8
%mn=getelementptr inbounds i8,i8*%mm,i64 24
%mo=bitcast i8*%mn to i8**
%mp=load i8*,i8**%mo,align 8
%mq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mr=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%mp,i8*inreg%mq)
%ms=bitcast i8*%mr to i8**
%mt=load i8*,i8**%ms,align 8
store i8*%mt,i8**%e,align 8
%mu=getelementptr inbounds i8,i8*%mr,i64 8
%mv=bitcast i8*%mu to i8**
%mw=load i8*,i8**%mv,align 8
store i8*%mw,i8**%j,align 8
%mx=call i8*@sml_alloc(i32 inreg 20)#0
%my=getelementptr inbounds i8,i8*%mx,i64 -4
%mz=bitcast i8*%my to i32*
store i32 1342177296,i32*%mz,align 4
store i8*%mx,i8**%l,align 8
%mA=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mB=bitcast i8*%mx to i8**
store i8*%mA,i8**%mB,align 8
%mC=getelementptr inbounds i8,i8*%mx,i64 8
%mD=bitcast i8*%mC to i8**
store i8*null,i8**%mD,align 8
%mE=getelementptr inbounds i8,i8*%mx,i64 16
%mF=bitcast i8*%mE to i32*
store i32 3,i32*%mF,align 4
%mG=call i8*@sml_alloc(i32 inreg 20)#0
%mH=getelementptr inbounds i8,i8*%mG,i64 -4
%mI=bitcast i8*%mH to i32*
store i32 1342177296,i32*%mI,align 4
store i8*%mG,i8**%e,align 8
%mJ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mK=bitcast i8*%mG to i8**
store i8*%mJ,i8**%mK,align 8
%mL=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%mM=getelementptr inbounds i8,i8*%mG,i64 8
%mN=bitcast i8*%mM to i8**
store i8*%mL,i8**%mN,align 8
%mO=getelementptr inbounds i8,i8*%mG,i64 16
%mP=bitcast i8*%mO to i32*
store i32 3,i32*%mP,align 4
%mQ=call i8*@sml_alloc(i32 inreg 20)#0
%mR=getelementptr inbounds i8,i8*%mQ,i64 -4
%mS=bitcast i8*%mR to i32*
store i32 1342177296,i32*%mS,align 4
store i8*%mQ,i8**%l,align 8
%mT=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%mU=bitcast i8*%mQ to i8**
store i8*%mT,i8**%mU,align 8
%mV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mW=getelementptr inbounds i8,i8*%mQ,i64 8
%mX=bitcast i8*%mW to i8**
store i8*%mV,i8**%mX,align 8
%mY=getelementptr inbounds i8,i8*%mQ,i64 16
%mZ=bitcast i8*%mY to i32*
store i32 3,i32*%mZ,align 4
%m0=call i8*@sml_alloc(i32 inreg 20)#0
%m1=getelementptr inbounds i8,i8*%m0,i64 -4
%m2=bitcast i8*%m1 to i32*
store i32 1342177296,i32*%m2,align 4
store i8*%m0,i8**%d,align 8
%m3=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%m4=bitcast i8*%m0 to i8**
store i8*%m3,i8**%m4,align 8
%m5=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%m6=getelementptr inbounds i8,i8*%m0,i64 8
%m7=bitcast i8*%m6 to i8**
store i8*%m5,i8**%m7,align 8
%m8=getelementptr inbounds i8,i8*%m0,i64 16
%m9=bitcast i8*%m8 to i32*
store i32 3,i32*%m9,align 4
%na=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%nb=getelementptr inbounds i8,i8*%na,i64 16
%nc=bitcast i8*%nb to i8*(i8*,i8*)**
%nd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nc,align 8
%ne=bitcast i8*%na to i8**
%nf=load i8*,i8**%ne,align 8
store i8*%nf,i8**%e,align 8
%ng=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nh=getelementptr inbounds i8,i8*%ng,i64 16
%ni=bitcast i8*%nh to i8*(i8*,i8*)**
%nj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ni,align 8
%nk=bitcast i8*%ng to i8**
%nl=load i8*,i8**%nk,align 8
%nm=call fastcc i8*%nj(i8*inreg%nl,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ik,i64 0,i32 2)to i8*))
%nn=getelementptr inbounds i8,i8*%nm,i64 16
%no=bitcast i8*%nn to i8*(i8*,i8*)**
%np=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%no,align 8
%nq=bitcast i8*%nm to i8**
%nr=load i8*,i8**%nq,align 8
%ns=load i8*,i8**%d,align 8
%nt=call fastcc i8*%np(i8*inreg%nr,i8*inreg%ns)
%nu=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nv=call fastcc i8*%nd(i8*inreg%nu,i8*inreg%nt)
store i8*%nv,i8**%e,align 8
%nw=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nx=getelementptr inbounds i8,i8*%nw,i64 16
%ny=bitcast i8*%nx to i8*(i8*,i8*)**
%nz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ny,align 8
%nA=bitcast i8*%nw to i8**
%nB=load i8*,i8**%nA,align 8
%nC=call fastcc i8*%nz(i8*inreg%nB,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@il,i64 0,i32 2)to i8*))
%nD=getelementptr inbounds i8,i8*%nC,i64 16
%nE=bitcast i8*%nD to i8*(i8*,i8*)**
%nF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nE,align 8
%nG=bitcast i8*%nC to i8**
%nH=load i8*,i8**%nG,align 8
%nI=bitcast i8**%k to i8***
%nJ=load i8**,i8***%nI,align 8
store i8*null,i8**%k,align 8
%nK=load i8*,i8**%nJ,align 8
%nL=call fastcc i8*%nF(i8*inreg%nH,i8*inreg%nK)
%nM=getelementptr inbounds i8,i8*%nL,i64 16
%nN=bitcast i8*%nM to i8*(i8*,i8*)**
%nO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nN,align 8
%nP=bitcast i8*%nL to i8**
%nQ=load i8*,i8**%nP,align 8
%nR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nS=call fastcc i8*%nO(i8*inreg%nQ,i8*inreg%nR)
store i8*%nS,i8**%d,align 8
%nT=call i8*@sml_alloc(i32 inreg 20)#0
%nU=getelementptr inbounds i8,i8*%nT,i64 -4
%nV=bitcast i8*%nU to i32*
store i32 1342177296,i32*%nV,align 4
store i8*%nT,i8**%g,align 8
%nW=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nX=bitcast i8*%nT to i8**
store i8*%nW,i8**%nX,align 8
%nY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%nZ=getelementptr inbounds i8,i8*%nT,i64 8
%n0=bitcast i8*%nZ to i8**
store i8*%nY,i8**%n0,align 8
%n1=getelementptr inbounds i8,i8*%nT,i64 16
%n2=bitcast i8*%n1 to i32*
store i32 3,i32*%n2,align 4
%n3=call i8*@sml_alloc(i32 inreg 36)#0
%n4=getelementptr inbounds i8,i8*%n3,i64 -4
%n5=bitcast i8*%n4 to i32*
store i32 1342177312,i32*%n5,align 4
store i8*%n3,i8**%d,align 8
%n6=getelementptr inbounds i8,i8*%n3,i64 4
%n7=bitcast i8*%n6 to i32*
store i32 0,i32*%n7,align 1
%n8=bitcast i8*%n3 to i32*
store i32%jx,i32*%n8,align 4
%n9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%oa=getelementptr inbounds i8,i8*%n3,i64 8
%ob=bitcast i8*%oa to i8**
store i8*%n9,i8**%ob,align 8
%oc=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%od=getelementptr inbounds i8,i8*%n3,i64 16
%oe=bitcast i8*%od to i8**
store i8*%oc,i8**%oe,align 8
%of=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%og=getelementptr inbounds i8,i8*%n3,i64 24
%oh=bitcast i8*%og to i8**
store i8*%of,i8**%oh,align 8
%oi=getelementptr inbounds i8,i8*%n3,i64 32
%oj=bitcast i8*%oi to i32*
store i32 14,i32*%oj,align 4
%ok=call i8*@sml_alloc(i32 inreg 20)#0
%ol=getelementptr inbounds i8,i8*%ok,i64 -4
%om=bitcast i8*%ol to i32*
store i32 1342177296,i32*%om,align 4
store i8*%ok,i8**%e,align 8
%on=getelementptr inbounds i8,i8*%ok,i64 4
%oo=bitcast i8*%on to i32*
store i32 0,i32*%oo,align 1
%op=bitcast i8*%ok to i32*
store i32 20,i32*%op,align 4
%oq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%or=getelementptr inbounds i8,i8*%ok,i64 8
%os=bitcast i8*%or to i8**
store i8*%oq,i8**%os,align 8
%ot=getelementptr inbounds i8,i8*%ok,i64 16
%ou=bitcast i8*%ot to i32*
store i32 2,i32*%ou,align 4
%ov=call i8*@sml_alloc(i32 inreg 20)#0
%ow=getelementptr inbounds i8,i8*%ov,i64 -4
%ox=bitcast i8*%ow to i32*
store i32 1342177296,i32*%ox,align 4
store i8*%ov,i8**%d,align 8
%oy=getelementptr inbounds i8,i8*%ov,i64 4
%oz=bitcast i8*%oy to i32*
store i32 0,i32*%oz,align 1
%oA=bitcast i8*%ov to i32*
store i32 1,i32*%oA,align 4
%oB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oC=getelementptr inbounds i8,i8*%ov,i64 8
%oD=bitcast i8*%oC to i8**
store i8*%oB,i8**%oD,align 8
%oE=getelementptr inbounds i8,i8*%ov,i64 16
%oF=bitcast i8*%oE to i32*
store i32 2,i32*%oF,align 4
%oG=call i8*@sml_alloc(i32 inreg 20)#0
%oH=getelementptr inbounds i8,i8*%oG,i64 -4
%oI=bitcast i8*%oH to i32*
store i32 1342177296,i32*%oI,align 4
%oJ=load i8*,i8**%g,align 8
%oK=bitcast i8*%oG to i8**
store i8*%oJ,i8**%oK,align 8
%oL=load i8*,i8**%d,align 8
%oM=getelementptr inbounds i8,i8*%oG,i64 8
%oN=bitcast i8*%oM to i8**
store i8*%oL,i8**%oN,align 8
%oO=getelementptr inbounds i8,i8*%oG,i64 16
%oP=bitcast i8*%oO to i32*
store i32 3,i32*%oP,align 4
ret i8*%oG
oQ:
%oR=getelementptr inbounds i8,i8*%r,i64 8
%oS=bitcast i8*%oR to i8**
%oT=load i8*,i8**%oS,align 8
%oU=bitcast i8*%oT to i32*
%oV=load i32,i32*%oU,align 4
%oW=getelementptr inbounds i8,i8*%oT,i64 8
%oX=bitcast i8*%oW to i8**
%oY=load i8*,i8**%oX,align 8
%oZ=getelementptr inbounds i8,i8*%oT,i64 16
%o0=bitcast i8*%oZ to i8**
%o1=load i8*,i8**%o0,align 8
store i8*%o1,i8**%e,align 8
%o2=load i8*,i8**%d,align 8
%o3=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%k,align 8
%o4=call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%o3,i8*inreg%o2,i8*inreg%oY)
%o5=bitcast i8*%o4 to i8**
%o6=load i8*,i8**%o5,align 8
store i8*%o6,i8**%d,align 8
%o7=getelementptr inbounds i8,i8*%o4,i64 8
%o8=bitcast i8*%o7 to i8**
%o9=load i8*,i8**%o8,align 8
%pa=bitcast i8*%o9 to i32*
%pb=load i32,i32*%pa,align 4
switch i32%pb,label%pc[
i32 1,label%qg
i32 0,label%pu
]
pc:
store i8*null,i8**%e,align 8
call void@sml_matchcomp_bug()
%pd=load i8*,i8**@_SMLZ5Match,align 8
store i8*%pd,i8**%d,align 8
%pe=call i8*@sml_alloc(i32 inreg 20)#0
%pf=getelementptr inbounds i8,i8*%pe,i64 -4
%pg=bitcast i8*%pf to i32*
store i32 1342177296,i32*%pg,align 4
store i8*%pe,i8**%e,align 8
%ph=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%pi=bitcast i8*%pe to i8**
store i8*%ph,i8**%pi,align 8
%pj=getelementptr inbounds i8,i8*%pe,i64 8
%pk=bitcast i8*%pj to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ij,i64 0,i32 2,i64 0),i8**%pk,align 8
%pl=getelementptr inbounds i8,i8*%pe,i64 16
%pm=bitcast i8*%pl to i32*
store i32 3,i32*%pm,align 4
%pn=call i8*@sml_alloc(i32 inreg 60)#0
%po=getelementptr inbounds i8,i8*%pn,i64 -4
%pp=bitcast i8*%po to i32*
store i32 1342177336,i32*%pp,align 4
%pq=getelementptr inbounds i8,i8*%pn,i64 56
%pr=bitcast i8*%pq to i32*
store i32 1,i32*%pr,align 4
%ps=load i8*,i8**%e,align 8
%pt=bitcast i8*%pn to i8**
store i8*%ps,i8**%pt,align 8
call void@sml_raise(i8*inreg%pn)#1
unreachable
pu:
%pv=getelementptr inbounds i8,i8*%o9,i64 8
%pw=bitcast i8*%pv to i8**
%px=load i8*,i8**%pw,align 8
store i8*%px,i8**%f,align 8
%py=call i8*@sml_alloc(i32 inreg 28)#0
%pz=getelementptr inbounds i8,i8*%py,i64 -4
%pA=bitcast i8*%pz to i32*
store i32 1342177304,i32*%pA,align 4
store i8*%py,i8**%g,align 8
%pB=getelementptr inbounds i8,i8*%py,i64 4
%pC=bitcast i8*%pB to i32*
store i32 0,i32*%pC,align 1
%pD=bitcast i8*%py to i32*
store i32%oV,i32*%pD,align 4
%pE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%pF=getelementptr inbounds i8,i8*%py,i64 8
%pG=bitcast i8*%pF to i8**
store i8*%pE,i8**%pG,align 8
%pH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%pI=getelementptr inbounds i8,i8*%py,i64 16
%pJ=bitcast i8*%pI to i8**
store i8*%pH,i8**%pJ,align 8
%pK=getelementptr inbounds i8,i8*%py,i64 24
%pL=bitcast i8*%pK to i32*
store i32 6,i32*%pL,align 4
%pM=call i8*@sml_alloc(i32 inreg 20)#0
%pN=getelementptr inbounds i8,i8*%pM,i64 -4
%pO=bitcast i8*%pN to i32*
store i32 1342177296,i32*%pO,align 4
store i8*%pM,i8**%e,align 8
%pP=getelementptr inbounds i8,i8*%pM,i64 4
%pQ=bitcast i8*%pP to i32*
store i32 0,i32*%pQ,align 1
%pR=bitcast i8*%pM to i32*
store i32 19,i32*%pR,align 4
%pS=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%pT=getelementptr inbounds i8,i8*%pM,i64 8
%pU=bitcast i8*%pT to i8**
store i8*%pS,i8**%pU,align 8
%pV=getelementptr inbounds i8,i8*%pM,i64 16
%pW=bitcast i8*%pV to i32*
store i32 2,i32*%pW,align 4
%pX=call i8*@sml_alloc(i32 inreg 20)#0
%pY=getelementptr inbounds i8,i8*%pX,i64 -4
%pZ=bitcast i8*%pY to i32*
store i32 1342177296,i32*%pZ,align 4
store i8*%pX,i8**%f,align 8
%p0=bitcast i8*%pX to i64*
store i64 0,i64*%p0,align 4
%p1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%p2=getelementptr inbounds i8,i8*%pX,i64 8
%p3=bitcast i8*%p2 to i8**
store i8*%p1,i8**%p3,align 8
%p4=getelementptr inbounds i8,i8*%pX,i64 16
%p5=bitcast i8*%p4 to i32*
store i32 2,i32*%p5,align 4
%p6=call i8*@sml_alloc(i32 inreg 20)#0
%p7=getelementptr inbounds i8,i8*%p6,i64 -4
%p8=bitcast i8*%p7 to i32*
store i32 1342177296,i32*%p8,align 4
%p9=load i8*,i8**%d,align 8
%qa=bitcast i8*%p6 to i8**
store i8*%p9,i8**%qa,align 8
%qb=load i8*,i8**%f,align 8
%qc=getelementptr inbounds i8,i8*%p6,i64 8
%qd=bitcast i8*%qc to i8**
store i8*%qb,i8**%qd,align 8
%qe=getelementptr inbounds i8,i8*%p6,i64 16
%qf=bitcast i8*%qe to i32*
store i32 3,i32*%qf,align 4
ret i8*%p6
qg:
%qh=getelementptr inbounds i8,i8*%o9,i64 8
%qi=bitcast i8*%qh to i8**
%qj=load i8*,i8**%qi,align 8
store i8*%qj,i8**%f,align 8
%qk=call i8*@sml_alloc(i32 inreg 28)#0
%ql=getelementptr inbounds i8,i8*%qk,i64 -4
%qm=bitcast i8*%ql to i32*
store i32 1342177304,i32*%qm,align 4
store i8*%qk,i8**%g,align 8
%qn=getelementptr inbounds i8,i8*%qk,i64 4
%qo=bitcast i8*%qn to i32*
store i32 0,i32*%qo,align 1
%qp=bitcast i8*%qk to i32*
store i32%oV,i32*%qp,align 4
%qq=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%qr=getelementptr inbounds i8,i8*%qk,i64 8
%qs=bitcast i8*%qr to i8**
store i8*%qq,i8**%qs,align 8
%qt=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%qu=getelementptr inbounds i8,i8*%qk,i64 16
%qv=bitcast i8*%qu to i8**
store i8*%qt,i8**%qv,align 8
%qw=getelementptr inbounds i8,i8*%qk,i64 24
%qx=bitcast i8*%qw to i32*
store i32 6,i32*%qx,align 4
%qy=call i8*@sml_alloc(i32 inreg 20)#0
%qz=getelementptr inbounds i8,i8*%qy,i64 -4
%qA=bitcast i8*%qz to i32*
store i32 1342177296,i32*%qA,align 4
store i8*%qy,i8**%e,align 8
%qB=getelementptr inbounds i8,i8*%qy,i64 4
%qC=bitcast i8*%qB to i32*
store i32 0,i32*%qC,align 1
%qD=bitcast i8*%qy to i32*
store i32 19,i32*%qD,align 4
%qE=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qF=getelementptr inbounds i8,i8*%qy,i64 8
%qG=bitcast i8*%qF to i8**
store i8*%qE,i8**%qG,align 8
%qH=getelementptr inbounds i8,i8*%qy,i64 16
%qI=bitcast i8*%qH to i32*
store i32 2,i32*%qI,align 4
%qJ=call i8*@sml_alloc(i32 inreg 20)#0
%qK=getelementptr inbounds i8,i8*%qJ,i64 -4
%qL=bitcast i8*%qK to i32*
store i32 1342177296,i32*%qL,align 4
store i8*%qJ,i8**%f,align 8
%qM=getelementptr inbounds i8,i8*%qJ,i64 4
%qN=bitcast i8*%qM to i32*
store i32 0,i32*%qN,align 1
%qO=bitcast i8*%qJ to i32*
store i32 1,i32*%qO,align 4
%qP=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%qQ=getelementptr inbounds i8,i8*%qJ,i64 8
%qR=bitcast i8*%qQ to i8**
store i8*%qP,i8**%qR,align 8
%qS=getelementptr inbounds i8,i8*%qJ,i64 16
%qT=bitcast i8*%qS to i32*
store i32 2,i32*%qT,align 4
%qU=call i8*@sml_alloc(i32 inreg 20)#0
%qV=getelementptr inbounds i8,i8*%qU,i64 -4
%qW=bitcast i8*%qV to i32*
store i32 1342177296,i32*%qW,align 4
%qX=load i8*,i8**%d,align 8
%qY=bitcast i8*%qU to i8**
store i8*%qX,i8**%qY,align 8
%qZ=load i8*,i8**%f,align 8
%q0=getelementptr inbounds i8,i8*%qU,i64 8
%q1=bitcast i8*%q0 to i8**
store i8*%qZ,i8**%q1,align 8
%q2=getelementptr inbounds i8,i8*%qU,i64 16
%q3=bitcast i8*%q2 to i32*
store i32 3,i32*%q3,align 4
ret i8*%qU
q4:
%q5=getelementptr inbounds i8,i8*%r,i64 8
%q6=bitcast i8*%q5 to i8**
%q7=load i8*,i8**%q6,align 8
%q8=bitcast i8*%q7 to i8**
%q9=load i8*,i8**%q8,align 8
%ra=getelementptr inbounds i8,i8*%q7,i64 8
%rb=bitcast i8*%ra to i8**
%rc=load i8*,i8**%rb,align 8
store i8*%rc,i8**%e,align 8
%rd=load i8*,i8**%d,align 8
%re=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%k,align 8
%rf=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%re,i8*inreg%rd,i8*inreg%q9)
%rg=bitcast i8*%rf to i8**
%rh=load i8*,i8**%rg,align 8
store i8*%rh,i8**%d,align 8
%ri=getelementptr inbounds i8,i8*%rf,i64 8
%rj=bitcast i8*%ri to i8**
%rk=load i8*,i8**%rj,align 8
store i8*%rk,i8**%f,align 8
%rl=call i8*@sml_alloc(i32 inreg 20)#0
%rm=getelementptr inbounds i8,i8*%rl,i64 -4
%rn=bitcast i8*%rm to i32*
store i32 1342177296,i32*%rn,align 4
store i8*%rl,i8**%g,align 8
%ro=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%rp=bitcast i8*%rl to i8**
store i8*%ro,i8**%rp,align 8
%rq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rr=getelementptr inbounds i8,i8*%rl,i64 8
%rs=bitcast i8*%rr to i8**
store i8*%rq,i8**%rs,align 8
%rt=getelementptr inbounds i8,i8*%rl,i64 16
%ru=bitcast i8*%rt to i32*
store i32 3,i32*%ru,align 4
%rv=call i8*@sml_alloc(i32 inreg 20)#0
%rw=getelementptr inbounds i8,i8*%rv,i64 -4
%rx=bitcast i8*%rw to i32*
store i32 1342177296,i32*%rx,align 4
store i8*%rv,i8**%e,align 8
%ry=getelementptr inbounds i8,i8*%rv,i64 4
%rz=bitcast i8*%ry to i32*
store i32 0,i32*%rz,align 1
%rA=bitcast i8*%rv to i32*
store i32 10,i32*%rA,align 4
%rB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rC=getelementptr inbounds i8,i8*%rv,i64 8
%rD=bitcast i8*%rC to i8**
store i8*%rB,i8**%rD,align 8
%rE=getelementptr inbounds i8,i8*%rv,i64 16
%rF=bitcast i8*%rE to i32*
store i32 2,i32*%rF,align 4
%rG=call i8*@sml_alloc(i32 inreg 20)#0
%rH=getelementptr inbounds i8,i8*%rG,i64 -4
%rI=bitcast i8*%rH to i32*
store i32 1342177296,i32*%rI,align 4
store i8*%rG,i8**%f,align 8
%rJ=getelementptr inbounds i8,i8*%rG,i64 4
%rK=bitcast i8*%rJ to i32*
store i32 0,i32*%rK,align 1
%rL=bitcast i8*%rG to i32*
store i32 1,i32*%rL,align 4
%rM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rN=getelementptr inbounds i8,i8*%rG,i64 8
%rO=bitcast i8*%rN to i8**
store i8*%rM,i8**%rO,align 8
%rP=getelementptr inbounds i8,i8*%rG,i64 16
%rQ=bitcast i8*%rP to i32*
store i32 2,i32*%rQ,align 4
%rR=call i8*@sml_alloc(i32 inreg 20)#0
%rS=getelementptr inbounds i8,i8*%rR,i64 -4
%rT=bitcast i8*%rS to i32*
store i32 1342177296,i32*%rT,align 4
%rU=load i8*,i8**%d,align 8
%rV=bitcast i8*%rR to i8**
store i8*%rU,i8**%rV,align 8
%rW=load i8*,i8**%f,align 8
%rX=getelementptr inbounds i8,i8*%rR,i64 8
%rY=bitcast i8*%rX to i8**
store i8*%rW,i8**%rY,align 8
%rZ=getelementptr inbounds i8,i8*%rR,i64 16
%r0=bitcast i8*%rZ to i32*
store i32 3,i32*%r0,align 4
ret i8*%rR
r1:
%r2=getelementptr inbounds i8,i8*%r,i64 8
%r3=bitcast i8*%r2 to i8**
%r4=load i8*,i8**%r3,align 8
%r5=bitcast i8*%r4 to i8**
%r6=load i8*,i8**%r5,align 8
%r7=getelementptr inbounds i8,i8*%r4,i64 8
%r8=bitcast i8*%r7 to i8**
%r9=load i8*,i8**%r8,align 8
store i8*%r9,i8**%e,align 8
%sa=load i8*,i8**%d,align 8
%sb=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%k,align 8
%sc=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%sb,i8*inreg%sa,i8*inreg%r6)
%sd=bitcast i8*%sc to i8**
%se=load i8*,i8**%sd,align 8
store i8*%se,i8**%d,align 8
%sf=getelementptr inbounds i8,i8*%sc,i64 8
%sg=bitcast i8*%sf to i8**
%sh=load i8*,i8**%sg,align 8
store i8*%sh,i8**%f,align 8
%si=call i8*@sml_alloc(i32 inreg 20)#0
%sj=getelementptr inbounds i8,i8*%si,i64 -4
%sk=bitcast i8*%sj to i32*
store i32 1342177296,i32*%sk,align 4
store i8*%si,i8**%g,align 8
%sl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%sm=bitcast i8*%si to i8**
store i8*%sl,i8**%sm,align 8
%sn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%so=getelementptr inbounds i8,i8*%si,i64 8
%sp=bitcast i8*%so to i8**
store i8*%sn,i8**%sp,align 8
%sq=getelementptr inbounds i8,i8*%si,i64 16
%sr=bitcast i8*%sq to i32*
store i32 3,i32*%sr,align 4
%ss=call i8*@sml_alloc(i32 inreg 20)#0
%st=getelementptr inbounds i8,i8*%ss,i64 -4
%su=bitcast i8*%st to i32*
store i32 1342177296,i32*%su,align 4
store i8*%ss,i8**%e,align 8
%sv=getelementptr inbounds i8,i8*%ss,i64 4
%sw=bitcast i8*%sv to i32*
store i32 0,i32*%sw,align 1
%sx=bitcast i8*%ss to i32*
store i32 9,i32*%sx,align 4
%sy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%sz=getelementptr inbounds i8,i8*%ss,i64 8
%sA=bitcast i8*%sz to i8**
store i8*%sy,i8**%sA,align 8
%sB=getelementptr inbounds i8,i8*%ss,i64 16
%sC=bitcast i8*%sB to i32*
store i32 2,i32*%sC,align 4
%sD=call i8*@sml_alloc(i32 inreg 20)#0
%sE=getelementptr inbounds i8,i8*%sD,i64 -4
%sF=bitcast i8*%sE to i32*
store i32 1342177296,i32*%sF,align 4
store i8*%sD,i8**%f,align 8
%sG=getelementptr inbounds i8,i8*%sD,i64 4
%sH=bitcast i8*%sG to i32*
store i32 0,i32*%sH,align 1
%sI=bitcast i8*%sD to i32*
store i32 1,i32*%sI,align 4
%sJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sK=getelementptr inbounds i8,i8*%sD,i64 8
%sL=bitcast i8*%sK to i8**
store i8*%sJ,i8**%sL,align 8
%sM=getelementptr inbounds i8,i8*%sD,i64 16
%sN=bitcast i8*%sM to i32*
store i32 2,i32*%sN,align 4
%sO=call i8*@sml_alloc(i32 inreg 20)#0
%sP=getelementptr inbounds i8,i8*%sO,i64 -4
%sQ=bitcast i8*%sP to i32*
store i32 1342177296,i32*%sQ,align 4
%sR=load i8*,i8**%d,align 8
%sS=bitcast i8*%sO to i8**
store i8*%sR,i8**%sS,align 8
%sT=load i8*,i8**%f,align 8
%sU=getelementptr inbounds i8,i8*%sO,i64 8
%sV=bitcast i8*%sU to i8**
store i8*%sT,i8**%sV,align 8
%sW=getelementptr inbounds i8,i8*%sO,i64 16
%sX=bitcast i8*%sW to i32*
store i32 3,i32*%sX,align 4
ret i8*%sO
sY:
store i8*null,i8**%k,align 8
%sZ=getelementptr inbounds i8,i8*%r,i64 8
%s0=bitcast i8*%sZ to i8**
%s1=load i8*,i8**%s0,align 8
%s2=bitcast i8*%s1 to i8**
%s3=load i8*,i8**%s2,align 8
store i8*%s3,i8**%d,align 8
%s4=getelementptr inbounds i8,i8*%s1,i64 8
%s5=bitcast i8*%s4 to i8**
%s6=load i8*,i8**%s5,align 8
store i8*%s6,i8**%e,align 8
%s7=bitcast i8*%s3 to i8**
%s8=load i8*,i8**%s7,align 8
store i8*%s8,i8**%f,align 8
%s9=getelementptr inbounds i8,i8*%s3,i64 8
%ta=bitcast i8*%s9 to i8**
%tb=load i8*,i8**%ta,align 8
store i8*%tb,i8**%g,align 8
%tc=call fastcc i8*@_SMLFN11RecordLabel3Map9singletonE(i32 inreg 1,i32 inreg 8)
%td=getelementptr inbounds i8,i8*%tc,i64 16
%te=bitcast i8*%td to i8*(i8*,i8*)**
%tf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%te,align 8
%tg=bitcast i8*%tc to i8**
%th=load i8*,i8**%tg,align 8
store i8*%th,i8**%h,align 8
%ti=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tj=call fastcc i8*@_SMLFN11RecordLabel3Set9singletonE(i8*inreg%ti)
store i8*%tj,i8**%g,align 8
%tk=call i8*@sml_alloc(i32 inreg 20)#0
%tl=getelementptr inbounds i8,i8*%tk,i64 -4
%tm=bitcast i8*%tl to i32*
store i32 1342177296,i32*%tm,align 4
%tn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%to=bitcast i8*%tk to i8**
store i8*%tn,i8**%to,align 8
%tp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tq=getelementptr inbounds i8,i8*%tk,i64 8
%tr=bitcast i8*%tq to i8**
store i8*%tp,i8**%tr,align 8
%ts=getelementptr inbounds i8,i8*%tk,i64 16
%tt=bitcast i8*%ts to i32*
store i32 3,i32*%tt,align 4
%tu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tv=call fastcc i8*%tf(i8*inreg%tu,i8*inreg%tk)
store i8*%tv,i8**%f,align 8
%tw=call i8*@sml_alloc(i32 inreg 20)#0
%tx=getelementptr inbounds i8,i8*%tw,i64 -4
%ty=bitcast i8*%tx to i32*
store i32 1342177296,i32*%ty,align 4
store i8*%tw,i8**%g,align 8
%tz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%tA=bitcast i8*%tw to i8**
store i8*%tz,i8**%tA,align 8
%tB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tC=getelementptr inbounds i8,i8*%tw,i64 8
%tD=bitcast i8*%tC to i8**
store i8*%tB,i8**%tD,align 8
%tE=getelementptr inbounds i8,i8*%tw,i64 16
%tF=bitcast i8*%tE to i32*
store i32 3,i32*%tF,align 4
%tG=call i8*@sml_alloc(i32 inreg 20)#0
%tH=getelementptr inbounds i8,i8*%tG,i64 -4
%tI=bitcast i8*%tH to i32*
store i32 1342177296,i32*%tI,align 4
store i8*%tG,i8**%e,align 8
%tJ=getelementptr inbounds i8,i8*%tG,i64 4
%tK=bitcast i8*%tJ to i32*
store i32 0,i32*%tK,align 1
%tL=bitcast i8*%tG to i32*
store i32 4,i32*%tL,align 4
%tM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%tN=getelementptr inbounds i8,i8*%tG,i64 8
%tO=bitcast i8*%tN to i8**
store i8*%tM,i8**%tO,align 8
%tP=getelementptr inbounds i8,i8*%tG,i64 16
%tQ=bitcast i8*%tP to i32*
store i32 2,i32*%tQ,align 4
%tR=call i8*@sml_alloc(i32 inreg 20)#0
%tS=getelementptr inbounds i8,i8*%tR,i64 -4
%tT=bitcast i8*%tS to i32*
store i32 1342177296,i32*%tT,align 4
store i8*%tR,i8**%d,align 8
%tU=getelementptr inbounds i8,i8*%tR,i64 4
%tV=bitcast i8*%tU to i32*
store i32 0,i32*%tV,align 1
%tW=bitcast i8*%tR to i32*
store i32 1,i32*%tW,align 4
%tX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%tY=getelementptr inbounds i8,i8*%tR,i64 8
%tZ=bitcast i8*%tY to i8**
store i8*%tX,i8**%tZ,align 8
%t0=getelementptr inbounds i8,i8*%tR,i64 16
%t1=bitcast i8*%t0 to i32*
store i32 2,i32*%t1,align 4
%t2=call i8*@sml_alloc(i32 inreg 20)#0
%t3=getelementptr inbounds i8,i8*%t2,i64 -4
%t4=bitcast i8*%t3 to i32*
store i32 1342177296,i32*%t4,align 4
store i8*%t2,i8**%e,align 8
%t5=bitcast i8*%t2 to i8**
store i8*null,i8**%t5,align 8
%t6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%t7=getelementptr inbounds i8,i8*%t2,i64 8
%t8=bitcast i8*%t7 to i8**
store i8*%t6,i8**%t8,align 8
%t9=getelementptr inbounds i8,i8*%t2,i64 16
%ua=bitcast i8*%t9 to i32*
store i32 3,i32*%ua,align 4
%ub=call i8*@sml_alloc(i32 inreg 20)#0
%uc=getelementptr inbounds i8,i8*%ub,i64 -4
%ud=bitcast i8*%uc to i32*
store i32 1342177296,i32*%ud,align 4
%ue=load i8*,i8**%e,align 8
%uf=bitcast i8*%ub to i8**
store i8*%ue,i8**%uf,align 8
%ug=load i8*,i8**%d,align 8
%uh=getelementptr inbounds i8,i8*%ub,i64 8
%ui=bitcast i8*%uh to i8**
store i8*%ug,i8**%ui,align 8
%uj=getelementptr inbounds i8,i8*%ub,i64 16
%uk=bitcast i8*%uj to i32*
store i32 3,i32*%uk,align 4
ret i8*%ub
ul:
%um=getelementptr inbounds i8,i8*%r,i64 8
%un=bitcast i8*%um to i8**
%uo=load i8*,i8**%un,align 8
%up=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%uq=getelementptr inbounds i8,i8*%up,i64 8
%ur=bitcast i8*%uq to i8**
%us=load i8*,i8**%ur,align 8
store i8*%us,i8**%d,align 8
%ut=bitcast i8*%uo to i8**
%uu=load i8*,i8**%ut,align 8
store i8*%uu,i8**%e,align 8
%uv=getelementptr inbounds i8,i8*%uo,i64 8
%uw=bitcast i8*%uv to i8**
%ux=load i8*,i8**%uw,align 8
store i8*%ux,i8**%f,align 8
%uy=call i8*@sml_alloc(i32 inreg 20)#0
%uz=getelementptr inbounds i8,i8*%uy,i64 -4
%uA=bitcast i8*%uz to i32*
store i32 1342177296,i32*%uA,align 4
store i8*%uy,i8**%g,align 8
%uB=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%uC=bitcast i8*%uy to i8**
store i8*%uB,i8**%uC,align 8
%uD=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%uE=getelementptr inbounds i8,i8*%uy,i64 8
%uF=bitcast i8*%uE to i8**
store i8*%uD,i8**%uF,align 8
%uG=getelementptr inbounds i8,i8*%uy,i64 16
%uH=bitcast i8*%uG to i32*
store i32 3,i32*%uH,align 4
%uI=call i8*@sml_alloc(i32 inreg 20)#0
%uJ=getelementptr inbounds i8,i8*%uI,i64 -4
%uK=bitcast i8*%uJ to i32*
store i32 1342177296,i32*%uK,align 4
store i8*%uI,i8**%e,align 8
%uL=getelementptr inbounds i8,i8*%uI,i64 4
%uM=bitcast i8*%uL to i32*
store i32 0,i32*%uM,align 1
%uN=bitcast i8*%uI to i32*
store i32 3,i32*%uN,align 4
%uO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%uP=getelementptr inbounds i8,i8*%uI,i64 8
%uQ=bitcast i8*%uP to i8**
store i8*%uO,i8**%uQ,align 8
%uR=getelementptr inbounds i8,i8*%uI,i64 16
%uS=bitcast i8*%uR to i32*
store i32 2,i32*%uS,align 4
%uT=call i8*@sml_alloc(i32 inreg 20)#0
%uU=getelementptr inbounds i8,i8*%uT,i64 -4
%uV=bitcast i8*%uU to i32*
store i32 1342177296,i32*%uV,align 4
store i8*%uT,i8**%f,align 8
%uW=getelementptr inbounds i8,i8*%uT,i64 4
%uX=bitcast i8*%uW to i32*
store i32 0,i32*%uX,align 1
%uY=bitcast i8*%uT to i32*
store i32 1,i32*%uY,align 4
%uZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%u0=getelementptr inbounds i8,i8*%uT,i64 8
%u1=bitcast i8*%u0 to i8**
store i8*%uZ,i8**%u1,align 8
%u2=getelementptr inbounds i8,i8*%uT,i64 16
%u3=bitcast i8*%u2 to i32*
store i32 2,i32*%u3,align 4
%u4=call i8*@sml_alloc(i32 inreg 20)#0
%u5=getelementptr inbounds i8,i8*%u4,i64 -4
%u6=bitcast i8*%u5 to i32*
store i32 1342177296,i32*%u6,align 4
%u7=load i8*,i8**%d,align 8
%u8=bitcast i8*%u4 to i8**
store i8*%u7,i8**%u8,align 8
%u9=load i8*,i8**%f,align 8
%va=getelementptr inbounds i8,i8*%u4,i64 8
%vb=bitcast i8*%va to i8**
store i8*%u9,i8**%vb,align 8
%vc=getelementptr inbounds i8,i8*%u4,i64 16
%vd=bitcast i8*%vc to i32*
store i32 3,i32*%vd,align 4
ret i8*%u4
ve:
%vf=getelementptr inbounds i8,i8*%r,i64 8
%vg=bitcast i8*%vf to i8**
%vh=load i8*,i8**%vg,align 8
store i8*%vh,i8**%d,align 8
%vi=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%vj=getelementptr inbounds i8,i8*%vi,i64 8
%vk=bitcast i8*%vj to i8**
%vl=load i8*,i8**%vk,align 8
store i8*%vl,i8**%e,align 8
%vm=call i8*@sml_alloc(i32 inreg 20)#0
%vn=getelementptr inbounds i8,i8*%vm,i64 -4
%vo=bitcast i8*%vn to i32*
store i32 1342177296,i32*%vo,align 4
store i8*%vm,i8**%f,align 8
%vp=bitcast i8*%vm to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@ii,i64 0,i32 2)to i8*),i8**%vp,align 8
%vq=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vr=getelementptr inbounds i8,i8*%vm,i64 8
%vs=bitcast i8*%vr to i8**
store i8*%vq,i8**%vs,align 8
%vt=getelementptr inbounds i8,i8*%vm,i64 16
%vu=bitcast i8*%vt to i32*
store i32 3,i32*%vu,align 4
%vv=call i8*@sml_alloc(i32 inreg 20)#0
%vw=getelementptr inbounds i8,i8*%vv,i64 -4
%vx=bitcast i8*%vw to i32*
store i32 1342177296,i32*%vx,align 4
store i8*%vv,i8**%d,align 8
%vy=getelementptr inbounds i8,i8*%vv,i64 4
%vz=bitcast i8*%vy to i32*
store i32 0,i32*%vz,align 1
%vA=bitcast i8*%vv to i32*
store i32 6,i32*%vA,align 4
%vB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%vC=getelementptr inbounds i8,i8*%vv,i64 8
%vD=bitcast i8*%vC to i8**
store i8*%vB,i8**%vD,align 8
%vE=getelementptr inbounds i8,i8*%vv,i64 16
%vF=bitcast i8*%vE to i32*
store i32 2,i32*%vF,align 4
%vG=call i8*@sml_alloc(i32 inreg 20)#0
%vH=getelementptr inbounds i8,i8*%vG,i64 -4
%vI=bitcast i8*%vH to i32*
store i32 1342177296,i32*%vI,align 4
store i8*%vG,i8**%f,align 8
%vJ=bitcast i8*%vG to i64*
store i64 0,i64*%vJ,align 4
%vK=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vL=getelementptr inbounds i8,i8*%vG,i64 8
%vM=bitcast i8*%vL to i8**
store i8*%vK,i8**%vM,align 8
%vN=getelementptr inbounds i8,i8*%vG,i64 16
%vO=bitcast i8*%vN to i32*
store i32 2,i32*%vO,align 4
%vP=call i8*@sml_alloc(i32 inreg 20)#0
%vQ=getelementptr inbounds i8,i8*%vP,i64 -4
%vR=bitcast i8*%vQ to i32*
store i32 1342177296,i32*%vR,align 4
%vS=load i8*,i8**%e,align 8
%vT=bitcast i8*%vP to i8**
store i8*%vS,i8**%vT,align 8
%vU=load i8*,i8**%f,align 8
%vV=getelementptr inbounds i8,i8*%vP,i64 8
%vW=bitcast i8*%vV to i8**
store i8*%vU,i8**%vW,align 8
%vX=getelementptr inbounds i8,i8*%vP,i64 16
%vY=bitcast i8*%vX to i32*
store i32 3,i32*%vY,align 4
ret i8*%vP
vZ:
%v0=getelementptr inbounds i8,i8*%r,i64 8
%v1=bitcast i8*%v0 to i8**
%v2=load i8*,i8**%v1,align 8
store i8*%v2,i8**%d,align 8
%v3=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%v4=getelementptr inbounds i8,i8*%v3,i64 8
%v5=bitcast i8*%v4 to i8**
%v6=load i8*,i8**%v5,align 8
store i8*%v6,i8**%e,align 8
%v7=call i8*@sml_alloc(i32 inreg 20)#0
%v8=getelementptr inbounds i8,i8*%v7,i64 -4
%v9=bitcast i8*%v8 to i32*
store i32 1342177296,i32*%v9,align 4
store i8*%v7,i8**%f,align 8
%wa=bitcast i8*%v7 to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@ih,i64 0,i32 2)to i8*),i8**%wa,align 8
%wb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wc=getelementptr inbounds i8,i8*%v7,i64 8
%wd=bitcast i8*%wc to i8**
store i8*%wb,i8**%wd,align 8
%we=getelementptr inbounds i8,i8*%v7,i64 16
%wf=bitcast i8*%we to i32*
store i32 3,i32*%wf,align 4
%wg=call i8*@sml_alloc(i32 inreg 20)#0
%wh=getelementptr inbounds i8,i8*%wg,i64 -4
%wi=bitcast i8*%wh to i32*
store i32 1342177296,i32*%wi,align 4
store i8*%wg,i8**%d,align 8
%wj=getelementptr inbounds i8,i8*%wg,i64 4
%wk=bitcast i8*%wj to i32*
store i32 0,i32*%wk,align 1
%wl=bitcast i8*%wg to i32*
store i32 6,i32*%wl,align 4
%wm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wn=getelementptr inbounds i8,i8*%wg,i64 8
%wo=bitcast i8*%wn to i8**
store i8*%wm,i8**%wo,align 8
%wp=getelementptr inbounds i8,i8*%wg,i64 16
%wq=bitcast i8*%wp to i32*
store i32 2,i32*%wq,align 4
%wr=call i8*@sml_alloc(i32 inreg 20)#0
%ws=getelementptr inbounds i8,i8*%wr,i64 -4
%wt=bitcast i8*%ws to i32*
store i32 1342177296,i32*%wt,align 4
store i8*%wr,i8**%f,align 8
%wu=bitcast i8*%wr to i64*
store i64 0,i64*%wu,align 4
%wv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ww=getelementptr inbounds i8,i8*%wr,i64 8
%wx=bitcast i8*%ww to i8**
store i8*%wv,i8**%wx,align 8
%wy=getelementptr inbounds i8,i8*%wr,i64 16
%wz=bitcast i8*%wy to i32*
store i32 2,i32*%wz,align 4
%wA=call i8*@sml_alloc(i32 inreg 20)#0
%wB=getelementptr inbounds i8,i8*%wA,i64 -4
%wC=bitcast i8*%wB to i32*
store i32 1342177296,i32*%wC,align 4
%wD=load i8*,i8**%e,align 8
%wE=bitcast i8*%wA to i8**
store i8*%wD,i8**%wE,align 8
%wF=load i8*,i8**%f,align 8
%wG=getelementptr inbounds i8,i8*%wA,i64 8
%wH=bitcast i8*%wG to i8**
store i8*%wF,i8**%wH,align 8
%wI=getelementptr inbounds i8,i8*%wA,i64 16
%wJ=bitcast i8*%wI to i32*
store i32 3,i32*%wJ,align 4
ret i8*%wA
wK:
%wL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%wM=getelementptr inbounds i8,i8*%wL,i64 8
%wN=bitcast i8*%wM to i8**
%wO=load i8*,i8**%wN,align 8
store i8*%wO,i8**%d,align 8
%wP=getelementptr inbounds i8,i8*%r,i64 8
%wQ=bitcast i8*%wP to i8**
%wR=load i8*,i8**%wQ,align 8
store i8*%wR,i8**%e,align 8
%wS=call i8*@sml_alloc(i32 inreg 20)#0
%wT=getelementptr inbounds i8,i8*%wS,i64 -4
%wU=bitcast i8*%wT to i32*
store i32 1342177296,i32*%wU,align 4
store i8*%wS,i8**%f,align 8
%wV=getelementptr inbounds i8,i8*%wS,i64 4
%wW=bitcast i8*%wV to i32*
store i32 0,i32*%wW,align 1
%wX=bitcast i8*%wS to i32*
store i32 17,i32*%wX,align 4
%wY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wZ=getelementptr inbounds i8,i8*%wS,i64 8
%w0=bitcast i8*%wZ to i8**
store i8*%wY,i8**%w0,align 8
%w1=getelementptr inbounds i8,i8*%wS,i64 16
%w2=bitcast i8*%w1 to i32*
store i32 2,i32*%w2,align 4
%w3=call i8*@sml_alloc(i32 inreg 20)#0
%w4=getelementptr inbounds i8,i8*%w3,i64 -4
%w5=bitcast i8*%w4 to i32*
store i32 1342177296,i32*%w5,align 4
store i8*%w3,i8**%e,align 8
%w6=getelementptr inbounds i8,i8*%w3,i64 4
%w7=bitcast i8*%w6 to i32*
store i32 0,i32*%w7,align 1
%w8=bitcast i8*%w3 to i32*
store i32 1,i32*%w8,align 4
%w9=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xa=getelementptr inbounds i8,i8*%w3,i64 8
%xb=bitcast i8*%xa to i8**
store i8*%w9,i8**%xb,align 8
%xc=getelementptr inbounds i8,i8*%w3,i64 16
%xd=bitcast i8*%xc to i32*
store i32 2,i32*%xd,align 4
%xe=call i8*@sml_alloc(i32 inreg 20)#0
%xf=getelementptr inbounds i8,i8*%xe,i64 -4
%xg=bitcast i8*%xf to i32*
store i32 1342177296,i32*%xg,align 4
%xh=load i8*,i8**%d,align 8
%xi=bitcast i8*%xe to i8**
store i8*%xh,i8**%xi,align 8
%xj=load i8*,i8**%e,align 8
%xk=getelementptr inbounds i8,i8*%xe,i64 8
%xl=bitcast i8*%xk to i8**
store i8*%xj,i8**%xl,align 8
%xm=getelementptr inbounds i8,i8*%xe,i64 16
%xn=bitcast i8*%xm to i32*
store i32 3,i32*%xn,align 4
ret i8*%xe
xo:
%xp=getelementptr inbounds i8,i8*%r,i64 8
%xq=bitcast i8*%xp to i8**
%xr=load i8*,i8**%xq,align 8
%xs=bitcast i8*%xr to i8**
%xt=load i8*,i8**%xs,align 8
%xu=icmp eq i8*%xt,null
br i1%xu,label%xQ,label%xv
xv:
%xw=bitcast i8*%xt to i32*
%xx=load i32,i32*%xw,align 4
switch i32%xx,label%xy[
i32 1,label%DR
i32 5,label%CR
i32 3,label%BR
i32 2,label%AR
i32 0,label%zV
i32 4,label%xQ
]
xy:
store i8*null,i8**%k,align 8
call void@sml_matchcomp_bug()
%xz=load i8*,i8**@_SMLZ5Match,align 8
store i8*%xz,i8**%d,align 8
%xA=call i8*@sml_alloc(i32 inreg 20)#0
%xB=getelementptr inbounds i8,i8*%xA,i64 -4
%xC=bitcast i8*%xB to i32*
store i32 1342177296,i32*%xC,align 4
store i8*%xA,i8**%e,align 8
%xD=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xE=bitcast i8*%xA to i8**
store i8*%xD,i8**%xE,align 8
%xF=getelementptr inbounds i8,i8*%xA,i64 8
%xG=bitcast i8*%xF to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@iI,i64 0,i32 2,i64 0),i8**%xG,align 8
%xH=getelementptr inbounds i8,i8*%xA,i64 16
%xI=bitcast i8*%xH to i32*
store i32 3,i32*%xI,align 4
%xJ=call i8*@sml_alloc(i32 inreg 60)#0
%xK=getelementptr inbounds i8,i8*%xJ,i64 -4
%xL=bitcast i8*%xK to i32*
store i32 1342177336,i32*%xL,align 4
%xM=getelementptr inbounds i8,i8*%xJ,i64 56
%xN=bitcast i8*%xM to i32*
store i32 1,i32*%xN,align 4
%xO=load i8*,i8**%e,align 8
%xP=bitcast i8*%xJ to i8**
store i8*%xO,i8**%xP,align 8
call void@sml_raise(i8*inreg%xJ)#1
unreachable
xQ:
%xR=getelementptr inbounds i8,i8*%xr,i64 8
%xS=bitcast i8*%xR to i8**
%xT=load i8*,i8**%xS,align 8
store i8*%xT,i8**%d,align 8
%xU=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%xU,i8**%e,align 8
%xV=call i8*@sml_alloc(i32 inreg 20)#0
%xW=getelementptr inbounds i8,i8*%xV,i64 -4
%xX=bitcast i8*%xW to i32*
store i32 1342177296,i32*%xX,align 4
store i8*%xV,i8**%g,align 8
%xY=load i8*,i8**%e,align 8
%xZ=bitcast i8*%xV to i8**
store i8*%xY,i8**%xZ,align 8
%x0=getelementptr inbounds i8,i8*%xV,i64 8
%x1=bitcast i8*%x0 to i8**
store i8*null,i8**%x1,align 8
%x2=getelementptr inbounds i8,i8*%xV,i64 16
%x3=bitcast i8*%x2 to i32*
store i32 3,i32*%x3,align 4
%x4=call i8*@sml_alloc(i32 inreg 20)#0
%x5=getelementptr inbounds i8,i8*%x4,i64 -4
%x6=bitcast i8*%x5 to i32*
store i32 1342177296,i32*%x6,align 4
store i8*%x4,i8**%f,align 8
%x7=getelementptr inbounds i8,i8*%x4,i64 4
%x8=bitcast i8*%x7 to i32*
store i32 0,i32*%x8,align 1
%x9=bitcast i8*%x4 to i32*
store i32 2,i32*%x9,align 4
%ya=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%yb=getelementptr inbounds i8,i8*%x4,i64 8
%yc=bitcast i8*%yb to i8**
store i8*%ya,i8**%yc,align 8
%yd=getelementptr inbounds i8,i8*%x4,i64 16
%ye=bitcast i8*%yd to i32*
store i32 2,i32*%ye,align 4
%yf=call i8*@sml_alloc(i32 inreg 20)#0
%yg=getelementptr inbounds i8,i8*%yf,i64 -4
%yh=bitcast i8*%yg to i32*
store i32 1342177296,i32*%yh,align 4
store i8*%yf,i8**%g,align 8
%yi=bitcast i8*%yf to i8**
store i8*null,i8**%yi,align 8
%yj=load i8*,i8**%d,align 8
%yk=getelementptr inbounds i8,i8*%yf,i64 8
%yl=bitcast i8*%yk to i8**
store i8*%yj,i8**%yl,align 8
%ym=getelementptr inbounds i8,i8*%yf,i64 16
%yn=bitcast i8*%ym to i32*
store i32 3,i32*%yn,align 4
%yo=call i8*@sml_alloc(i32 inreg 20)#0
%yp=getelementptr inbounds i8,i8*%yo,i64 -4
%yq=bitcast i8*%yp to i32*
store i32 1342177296,i32*%yq,align 4
store i8*%yo,i8**%h,align 8
%yr=getelementptr inbounds i8,i8*%yo,i64 4
%ys=bitcast i8*%yr to i32*
store i32 0,i32*%ys,align 1
%yt=bitcast i8*%yo to i32*
store i32 2,i32*%yt,align 4
%yu=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%yv=getelementptr inbounds i8,i8*%yo,i64 8
%yw=bitcast i8*%yv to i8**
store i8*%yu,i8**%yw,align 8
%yx=getelementptr inbounds i8,i8*%yo,i64 16
%yy=bitcast i8*%yx to i32*
store i32 2,i32*%yy,align 4
%yz=call i8*@sml_alloc(i32 inreg 28)#0
%yA=getelementptr inbounds i8,i8*%yz,i64 -4
%yB=bitcast i8*%yA to i32*
store i32 1342177304,i32*%yB,align 4
store i8*%yz,i8**%g,align 8
%yC=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%yD=bitcast i8*%yz to i8**
store i8*%yC,i8**%yD,align 8
%yE=load i8*,i8**%d,align 8
%yF=getelementptr inbounds i8,i8*%yz,i64 8
%yG=bitcast i8*%yF to i8**
store i8*%yE,i8**%yG,align 8
%yH=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%yI=getelementptr inbounds i8,i8*%yz,i64 16
%yJ=bitcast i8*%yI to i8**
store i8*%yH,i8**%yJ,align 8
%yK=getelementptr inbounds i8,i8*%yz,i64 24
%yL=bitcast i8*%yK to i32*
store i32 7,i32*%yL,align 4
%yM=call i8*@sml_alloc(i32 inreg 20)#0
%yN=getelementptr inbounds i8,i8*%yM,i64 -4
%yO=bitcast i8*%yN to i32*
store i32 1342177296,i32*%yO,align 4
store i8*%yM,i8**%h,align 8
%yP=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%yQ=bitcast i8*%yM to i8**
store i8*%yP,i8**%yQ,align 8
%yR=getelementptr inbounds i8,i8*%yM,i64 8
%yS=bitcast i8*%yR to i8**
store i8*null,i8**%yS,align 8
%yT=getelementptr inbounds i8,i8*%yM,i64 16
%yU=bitcast i8*%yT to i32*
store i32 3,i32*%yU,align 4
%yV=bitcast i8**%k to i8***
%yW=load i8**,i8***%yV,align 8
store i8*null,i8**%k,align 8
%yX=load i8*,i8**%yW,align 8
store i8*%yX,i8**%f,align 8
%yY=call i8*@sml_alloc(i32 inreg 20)#0
%yZ=getelementptr inbounds i8,i8*%yY,i64 -4
%y0=bitcast i8*%yZ to i32*
store i32 1342177296,i32*%y0,align 4
store i8*%yY,i8**%g,align 8
%y1=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%y2=bitcast i8*%yY to i8**
store i8*%y1,i8**%y2,align 8
%y3=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%y4=getelementptr inbounds i8,i8*%yY,i64 8
%y5=bitcast i8*%y4 to i8**
store i8*%y3,i8**%y5,align 8
%y6=getelementptr inbounds i8,i8*%yY,i64 16
%y7=bitcast i8*%y6 to i32*
store i32 3,i32*%y7,align 4
%y8=call i8*@sml_alloc(i32 inreg 20)#0
%y9=getelementptr inbounds i8,i8*%y8,i64 -4
%za=bitcast i8*%y9 to i32*
store i32 1342177296,i32*%za,align 4
store i8*%y8,i8**%f,align 8
%zb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zc=bitcast i8*%y8 to i8**
store i8*%zb,i8**%zc,align 8
%zd=getelementptr inbounds i8,i8*%y8,i64 8
%ze=bitcast i8*%zd to i8**
store i8*null,i8**%ze,align 8
%zf=getelementptr inbounds i8,i8*%y8,i64 16
%zg=bitcast i8*%zf to i32*
store i32 3,i32*%zg,align 4
%zh=call i8*@sml_alloc(i32 inreg 20)#0
%zi=getelementptr inbounds i8,i8*%zh,i64 -4
%zj=bitcast i8*%zi to i32*
store i32 1342177296,i32*%zj,align 4
store i8*%zh,i8**%e,align 8
%zk=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%zl=bitcast i8*%zh to i8**
store i8*%zk,i8**%zl,align 8
%zm=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zn=getelementptr inbounds i8,i8*%zh,i64 8
%zo=bitcast i8*%zn to i8**
store i8*%zm,i8**%zo,align 8
%zp=getelementptr inbounds i8,i8*%zh,i64 16
%zq=bitcast i8*%zp to i32*
store i32 3,i32*%zq,align 4
%zr=call i8*@sml_alloc(i32 inreg 20)#0
%zs=getelementptr inbounds i8,i8*%zr,i64 -4
%zt=bitcast i8*%zs to i32*
store i32 1342177296,i32*%zt,align 4
store i8*%zr,i8**%d,align 8
%zu=getelementptr inbounds i8,i8*%zr,i64 4
%zv=bitcast i8*%zu to i32*
store i32 0,i32*%zv,align 1
%zw=bitcast i8*%zr to i32*
store i32 16,i32*%zw,align 4
%zx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%zy=getelementptr inbounds i8,i8*%zr,i64 8
%zz=bitcast i8*%zy to i8**
store i8*%zx,i8**%zz,align 8
%zA=getelementptr inbounds i8,i8*%zr,i64 16
%zB=bitcast i8*%zA to i32*
store i32 2,i32*%zB,align 4
%zC=call i8*@sml_alloc(i32 inreg 20)#0
%zD=getelementptr inbounds i8,i8*%zC,i64 -4
%zE=bitcast i8*%zD to i32*
store i32 1342177296,i32*%zE,align 4
store i8*%zC,i8**%e,align 8
%zF=bitcast i8*%zC to i64*
store i64 0,i64*%zF,align 4
%zG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zH=getelementptr inbounds i8,i8*%zC,i64 8
%zI=bitcast i8*%zH to i8**
store i8*%zG,i8**%zI,align 8
%zJ=getelementptr inbounds i8,i8*%zC,i64 16
%zK=bitcast i8*%zJ to i32*
store i32 2,i32*%zK,align 4
%zL=call i8*@sml_alloc(i32 inreg 20)#0
%zM=getelementptr inbounds i8,i8*%zL,i64 -4
%zN=bitcast i8*%zM to i32*
store i32 1342177296,i32*%zN,align 4
%zO=load i8*,i8**%g,align 8
%zP=bitcast i8*%zL to i8**
store i8*%zO,i8**%zP,align 8
%zQ=load i8*,i8**%e,align 8
%zR=getelementptr inbounds i8,i8*%zL,i64 8
%zS=bitcast i8*%zR to i8**
store i8*%zQ,i8**%zS,align 8
%zT=getelementptr inbounds i8,i8*%zL,i64 16
%zU=bitcast i8*%zT to i32*
store i32 3,i32*%zU,align 4
ret i8*%zL
zV:
%zW=getelementptr inbounds i8,i8*%xt,i64 4
%zX=load i8,i8*%zW,align 1
%zY=getelementptr inbounds i8,i8*%xr,i64 8
%zZ=bitcast i8*%zY to i8**
%z0=load i8*,i8**%zZ,align 8
store i8*%z0,i8**%d,align 8
%z1=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%z2=getelementptr inbounds i8,i8*%z1,i64 8
%z3=bitcast i8*%z2 to i8**
%z4=load i8*,i8**%z3,align 8
store i8*%z4,i8**%e,align 8
%z5=call i8*@sml_alloc(i32 inreg 12)#0
%z6=getelementptr inbounds i8,i8*%z5,i64 -4
%z7=bitcast i8*%z6 to i32*
store i32 1342177288,i32*%z7,align 4
store i8*%z5,i8**%g,align 8
%z8=getelementptr inbounds i8,i8*%z5,i64 5
call void@llvm.memset.p0i8.i32(i8*%z8,i8 0,i32 3,i1 false)
%z9=bitcast i8*%z5 to i32*
store i32 1,i32*%z9,align 4
%Aa=getelementptr inbounds i8,i8*%z5,i64 4
store i8%zX,i8*%Aa,align 1
%Ab=getelementptr inbounds i8,i8*%z5,i64 8
%Ac=bitcast i8*%Ab to i32*
store i32 0,i32*%Ac,align 4
%Ad=call i8*@sml_alloc(i32 inreg 20)#0
%Ae=getelementptr inbounds i8,i8*%Ad,i64 -4
%Af=bitcast i8*%Ae to i32*
store i32 1342177296,i32*%Af,align 4
store i8*%Ad,i8**%f,align 8
%Ag=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Ah=bitcast i8*%Ad to i8**
store i8*%Ag,i8**%Ah,align 8
%Ai=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Aj=getelementptr inbounds i8,i8*%Ad,i64 8
%Ak=bitcast i8*%Aj to i8**
store i8*%Ai,i8**%Ak,align 8
%Al=getelementptr inbounds i8,i8*%Ad,i64 16
%Am=bitcast i8*%Al to i32*
store i32 3,i32*%Am,align 4
%An=call i8*@sml_alloc(i32 inreg 20)#0
%Ao=getelementptr inbounds i8,i8*%An,i64 -4
%Ap=bitcast i8*%Ao to i32*
store i32 1342177296,i32*%Ap,align 4
store i8*%An,i8**%d,align 8
%Aq=getelementptr inbounds i8,i8*%An,i64 4
%Ar=bitcast i8*%Aq to i32*
store i32 0,i32*%Ar,align 1
%As=bitcast i8*%An to i32*
store i32 6,i32*%As,align 4
%At=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Au=getelementptr inbounds i8,i8*%An,i64 8
%Av=bitcast i8*%Au to i8**
store i8*%At,i8**%Av,align 8
%Aw=getelementptr inbounds i8,i8*%An,i64 16
%Ax=bitcast i8*%Aw to i32*
store i32 2,i32*%Ax,align 4
%Ay=call i8*@sml_alloc(i32 inreg 20)#0
%Az=getelementptr inbounds i8,i8*%Ay,i64 -4
%AA=bitcast i8*%Az to i32*
store i32 1342177296,i32*%AA,align 4
store i8*%Ay,i8**%f,align 8
%AB=bitcast i8*%Ay to i64*
store i64 0,i64*%AB,align 4
%AC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AD=getelementptr inbounds i8,i8*%Ay,i64 8
%AE=bitcast i8*%AD to i8**
store i8*%AC,i8**%AE,align 8
%AF=getelementptr inbounds i8,i8*%Ay,i64 16
%AG=bitcast i8*%AF to i32*
store i32 2,i32*%AG,align 4
%AH=call i8*@sml_alloc(i32 inreg 20)#0
%AI=getelementptr inbounds i8,i8*%AH,i64 -4
%AJ=bitcast i8*%AI to i32*
store i32 1342177296,i32*%AJ,align 4
%AK=load i8*,i8**%e,align 8
%AL=bitcast i8*%AH to i8**
store i8*%AK,i8**%AL,align 8
%AM=load i8*,i8**%f,align 8
%AN=getelementptr inbounds i8,i8*%AH,i64 8
%AO=bitcast i8*%AN to i8**
store i8*%AM,i8**%AO,align 8
%AP=getelementptr inbounds i8,i8*%AH,i64 16
%AQ=bitcast i8*%AP to i32*
store i32 3,i32*%AQ,align 4
ret i8*%AH
AR:
%AS=getelementptr inbounds i8,i8*%xt,i64 8
%AT=bitcast i8*%AS to i8**
%AU=load i8*,i8**%AT,align 8
store i8*%AU,i8**%d,align 8
%AV=getelementptr inbounds i8,i8*%xr,i64 8
%AW=bitcast i8*%AV to i8**
%AX=load i8*,i8**%AW,align 8
store i8*%AX,i8**%e,align 8
%AY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%AZ=getelementptr inbounds i8,i8*%AY,i64 8
%A0=bitcast i8*%AZ to i8**
%A1=load i8*,i8**%A0,align 8
store i8*%A1,i8**%f,align 8
%A2=call i8*@sml_alloc(i32 inreg 20)#0
%A3=getelementptr inbounds i8,i8*%A2,i64 -4
%A4=bitcast i8*%A3 to i32*
store i32 1342177296,i32*%A4,align 4
store i8*%A2,i8**%g,align 8
%A5=getelementptr inbounds i8,i8*%A2,i64 4
%A6=bitcast i8*%A5 to i32*
store i32 0,i32*%A6,align 1
%A7=bitcast i8*%A2 to i32*
store i32 3,i32*%A7,align 4
%A8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%A9=getelementptr inbounds i8,i8*%A2,i64 8
%Ba=bitcast i8*%A9 to i8**
store i8*%A8,i8**%Ba,align 8
%Bb=getelementptr inbounds i8,i8*%A2,i64 16
%Bc=bitcast i8*%Bb to i32*
store i32 2,i32*%Bc,align 4
%Bd=call i8*@sml_alloc(i32 inreg 20)#0
%Be=getelementptr inbounds i8,i8*%Bd,i64 -4
%Bf=bitcast i8*%Be to i32*
store i32 1342177296,i32*%Bf,align 4
store i8*%Bd,i8**%d,align 8
%Bg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Bh=bitcast i8*%Bd to i8**
store i8*%Bg,i8**%Bh,align 8
%Bi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Bj=getelementptr inbounds i8,i8*%Bd,i64 8
%Bk=bitcast i8*%Bj to i8**
store i8*%Bi,i8**%Bk,align 8
%Bl=getelementptr inbounds i8,i8*%Bd,i64 16
%Bm=bitcast i8*%Bl to i32*
store i32 3,i32*%Bm,align 4
%Bn=call i8*@sml_alloc(i32 inreg 20)#0
%Bo=getelementptr inbounds i8,i8*%Bn,i64 -4
%Bp=bitcast i8*%Bo to i32*
store i32 1342177296,i32*%Bp,align 4
store i8*%Bn,i8**%e,align 8
%Bq=getelementptr inbounds i8,i8*%Bn,i64 4
%Br=bitcast i8*%Bq to i32*
store i32 0,i32*%Br,align 1
%Bs=bitcast i8*%Bn to i32*
store i32 6,i32*%Bs,align 4
%Bt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Bu=getelementptr inbounds i8,i8*%Bn,i64 8
%Bv=bitcast i8*%Bu to i8**
store i8*%Bt,i8**%Bv,align 8
%Bw=getelementptr inbounds i8,i8*%Bn,i64 16
%Bx=bitcast i8*%Bw to i32*
store i32 2,i32*%Bx,align 4
%By=call i8*@sml_alloc(i32 inreg 20)#0
%Bz=getelementptr inbounds i8,i8*%By,i64 -4
%BA=bitcast i8*%Bz to i32*
store i32 1342177296,i32*%BA,align 4
store i8*%By,i8**%d,align 8
%BB=bitcast i8*%By to i64*
store i64 0,i64*%BB,align 4
%BC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%BD=getelementptr inbounds i8,i8*%By,i64 8
%BE=bitcast i8*%BD to i8**
store i8*%BC,i8**%BE,align 8
%BF=getelementptr inbounds i8,i8*%By,i64 16
%BG=bitcast i8*%BF to i32*
store i32 2,i32*%BG,align 4
%BH=call i8*@sml_alloc(i32 inreg 20)#0
%BI=getelementptr inbounds i8,i8*%BH,i64 -4
%BJ=bitcast i8*%BI to i32*
store i32 1342177296,i32*%BJ,align 4
%BK=load i8*,i8**%f,align 8
%BL=bitcast i8*%BH to i8**
store i8*%BK,i8**%BL,align 8
%BM=load i8*,i8**%d,align 8
%BN=getelementptr inbounds i8,i8*%BH,i64 8
%BO=bitcast i8*%BN to i8**
store i8*%BM,i8**%BO,align 8
%BP=getelementptr inbounds i8,i8*%BH,i64 16
%BQ=bitcast i8*%BP to i32*
store i32 3,i32*%BQ,align 4
ret i8*%BH
BR:
%BS=getelementptr inbounds i8,i8*%xt,i64 8
%BT=bitcast i8*%BS to i8**
%BU=load i8*,i8**%BT,align 8
store i8*%BU,i8**%d,align 8
%BV=getelementptr inbounds i8,i8*%xr,i64 8
%BW=bitcast i8*%BV to i8**
%BX=load i8*,i8**%BW,align 8
store i8*%BX,i8**%e,align 8
%BY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%BZ=getelementptr inbounds i8,i8*%BY,i64 8
%B0=bitcast i8*%BZ to i8**
%B1=load i8*,i8**%B0,align 8
store i8*%B1,i8**%f,align 8
%B2=call i8*@sml_alloc(i32 inreg 20)#0
%B3=getelementptr inbounds i8,i8*%B2,i64 -4
%B4=bitcast i8*%B3 to i32*
store i32 1342177296,i32*%B4,align 4
store i8*%B2,i8**%g,align 8
%B5=getelementptr inbounds i8,i8*%B2,i64 4
%B6=bitcast i8*%B5 to i32*
store i32 0,i32*%B6,align 1
%B7=bitcast i8*%B2 to i32*
store i32 4,i32*%B7,align 4
%B8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%B9=getelementptr inbounds i8,i8*%B2,i64 8
%Ca=bitcast i8*%B9 to i8**
store i8*%B8,i8**%Ca,align 8
%Cb=getelementptr inbounds i8,i8*%B2,i64 16
%Cc=bitcast i8*%Cb to i32*
store i32 2,i32*%Cc,align 4
%Cd=call i8*@sml_alloc(i32 inreg 20)#0
%Ce=getelementptr inbounds i8,i8*%Cd,i64 -4
%Cf=bitcast i8*%Ce to i32*
store i32 1342177296,i32*%Cf,align 4
store i8*%Cd,i8**%d,align 8
%Cg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Ch=bitcast i8*%Cd to i8**
store i8*%Cg,i8**%Ch,align 8
%Ci=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Cj=getelementptr inbounds i8,i8*%Cd,i64 8
%Ck=bitcast i8*%Cj to i8**
store i8*%Ci,i8**%Ck,align 8
%Cl=getelementptr inbounds i8,i8*%Cd,i64 16
%Cm=bitcast i8*%Cl to i32*
store i32 3,i32*%Cm,align 4
%Cn=call i8*@sml_alloc(i32 inreg 20)#0
%Co=getelementptr inbounds i8,i8*%Cn,i64 -4
%Cp=bitcast i8*%Co to i32*
store i32 1342177296,i32*%Cp,align 4
store i8*%Cn,i8**%e,align 8
%Cq=getelementptr inbounds i8,i8*%Cn,i64 4
%Cr=bitcast i8*%Cq to i32*
store i32 0,i32*%Cr,align 1
%Cs=bitcast i8*%Cn to i32*
store i32 6,i32*%Cs,align 4
%Ct=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Cu=getelementptr inbounds i8,i8*%Cn,i64 8
%Cv=bitcast i8*%Cu to i8**
store i8*%Ct,i8**%Cv,align 8
%Cw=getelementptr inbounds i8,i8*%Cn,i64 16
%Cx=bitcast i8*%Cw to i32*
store i32 2,i32*%Cx,align 4
%Cy=call i8*@sml_alloc(i32 inreg 20)#0
%Cz=getelementptr inbounds i8,i8*%Cy,i64 -4
%CA=bitcast i8*%Cz to i32*
store i32 1342177296,i32*%CA,align 4
store i8*%Cy,i8**%d,align 8
%CB=bitcast i8*%Cy to i64*
store i64 0,i64*%CB,align 4
%CC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%CD=getelementptr inbounds i8,i8*%Cy,i64 8
%CE=bitcast i8*%CD to i8**
store i8*%CC,i8**%CE,align 8
%CF=getelementptr inbounds i8,i8*%Cy,i64 16
%CG=bitcast i8*%CF to i32*
store i32 2,i32*%CG,align 4
%CH=call i8*@sml_alloc(i32 inreg 20)#0
%CI=getelementptr inbounds i8,i8*%CH,i64 -4
%CJ=bitcast i8*%CI to i32*
store i32 1342177296,i32*%CJ,align 4
%CK=load i8*,i8**%f,align 8
%CL=bitcast i8*%CH to i8**
store i8*%CK,i8**%CL,align 8
%CM=load i8*,i8**%d,align 8
%CN=getelementptr inbounds i8,i8*%CH,i64 8
%CO=bitcast i8*%CN to i8**
store i8*%CM,i8**%CO,align 8
%CP=getelementptr inbounds i8,i8*%CH,i64 16
%CQ=bitcast i8*%CP to i32*
store i32 3,i32*%CQ,align 4
ret i8*%CH
CR:
%CS=getelementptr inbounds i8,i8*%xt,i64 8
%CT=bitcast i8*%CS to i8**
%CU=load i8*,i8**%CT,align 8
store i8*%CU,i8**%d,align 8
%CV=getelementptr inbounds i8,i8*%xr,i64 8
%CW=bitcast i8*%CV to i8**
%CX=load i8*,i8**%CW,align 8
store i8*%CX,i8**%e,align 8
%CY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%CZ=getelementptr inbounds i8,i8*%CY,i64 8
%C0=bitcast i8*%CZ to i8**
%C1=load i8*,i8**%C0,align 8
store i8*%C1,i8**%f,align 8
%C2=call i8*@sml_alloc(i32 inreg 20)#0
%C3=getelementptr inbounds i8,i8*%C2,i64 -4
%C4=bitcast i8*%C3 to i32*
store i32 1342177296,i32*%C4,align 4
store i8*%C2,i8**%g,align 8
%C5=getelementptr inbounds i8,i8*%C2,i64 4
%C6=bitcast i8*%C5 to i32*
store i32 0,i32*%C6,align 1
%C7=bitcast i8*%C2 to i32*
store i32 5,i32*%C7,align 4
%C8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C9=getelementptr inbounds i8,i8*%C2,i64 8
%Da=bitcast i8*%C9 to i8**
store i8*%C8,i8**%Da,align 8
%Db=getelementptr inbounds i8,i8*%C2,i64 16
%Dc=bitcast i8*%Db to i32*
store i32 2,i32*%Dc,align 4
%Dd=call i8*@sml_alloc(i32 inreg 20)#0
%De=getelementptr inbounds i8,i8*%Dd,i64 -4
%Df=bitcast i8*%De to i32*
store i32 1342177296,i32*%Df,align 4
store i8*%Dd,i8**%d,align 8
%Dg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Dh=bitcast i8*%Dd to i8**
store i8*%Dg,i8**%Dh,align 8
%Di=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Dj=getelementptr inbounds i8,i8*%Dd,i64 8
%Dk=bitcast i8*%Dj to i8**
store i8*%Di,i8**%Dk,align 8
%Dl=getelementptr inbounds i8,i8*%Dd,i64 16
%Dm=bitcast i8*%Dl to i32*
store i32 3,i32*%Dm,align 4
%Dn=call i8*@sml_alloc(i32 inreg 20)#0
%Do=getelementptr inbounds i8,i8*%Dn,i64 -4
%Dp=bitcast i8*%Do to i32*
store i32 1342177296,i32*%Dp,align 4
store i8*%Dn,i8**%e,align 8
%Dq=getelementptr inbounds i8,i8*%Dn,i64 4
%Dr=bitcast i8*%Dq to i32*
store i32 0,i32*%Dr,align 1
%Ds=bitcast i8*%Dn to i32*
store i32 6,i32*%Ds,align 4
%Dt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Du=getelementptr inbounds i8,i8*%Dn,i64 8
%Dv=bitcast i8*%Du to i8**
store i8*%Dt,i8**%Dv,align 8
%Dw=getelementptr inbounds i8,i8*%Dn,i64 16
%Dx=bitcast i8*%Dw to i32*
store i32 2,i32*%Dx,align 4
%Dy=call i8*@sml_alloc(i32 inreg 20)#0
%Dz=getelementptr inbounds i8,i8*%Dy,i64 -4
%DA=bitcast i8*%Dz to i32*
store i32 1342177296,i32*%DA,align 4
store i8*%Dy,i8**%d,align 8
%DB=bitcast i8*%Dy to i64*
store i64 0,i64*%DB,align 4
%DC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%DD=getelementptr inbounds i8,i8*%Dy,i64 8
%DE=bitcast i8*%DD to i8**
store i8*%DC,i8**%DE,align 8
%DF=getelementptr inbounds i8,i8*%Dy,i64 16
%DG=bitcast i8*%DF to i32*
store i32 2,i32*%DG,align 4
%DH=call i8*@sml_alloc(i32 inreg 20)#0
%DI=getelementptr inbounds i8,i8*%DH,i64 -4
%DJ=bitcast i8*%DI to i32*
store i32 1342177296,i32*%DJ,align 4
%DK=load i8*,i8**%f,align 8
%DL=bitcast i8*%DH to i8**
store i8*%DK,i8**%DL,align 8
%DM=load i8*,i8**%d,align 8
%DN=getelementptr inbounds i8,i8*%DH,i64 8
%DO=bitcast i8*%DN to i8**
store i8*%DM,i8**%DO,align 8
%DP=getelementptr inbounds i8,i8*%DH,i64 16
%DQ=bitcast i8*%DP to i32*
store i32 3,i32*%DQ,align 4
ret i8*%DH
DR:
%DS=getelementptr inbounds i8,i8*%xt,i64 8
%DT=bitcast i8*%DS to i8**
%DU=load i8*,i8**%DT,align 8
store i8*%DU,i8**%d,align 8
%DV=getelementptr inbounds i8,i8*%xr,i64 8
%DW=bitcast i8*%DV to i8**
%DX=load i8*,i8**%DW,align 8
store i8*%DX,i8**%e,align 8
%DY=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%DZ=getelementptr inbounds i8,i8*%DY,i64 8
%D0=bitcast i8*%DZ to i8**
%D1=load i8*,i8**%D0,align 8
store i8*%D1,i8**%f,align 8
%D2=call i8*@sml_alloc(i32 inreg 20)#0
%D3=getelementptr inbounds i8,i8*%D2,i64 -4
%D4=bitcast i8*%D3 to i32*
store i32 1342177296,i32*%D4,align 4
store i8*%D2,i8**%g,align 8
%D5=getelementptr inbounds i8,i8*%D2,i64 4
%D6=bitcast i8*%D5 to i32*
store i32 0,i32*%D6,align 1
%D7=bitcast i8*%D2 to i32*
store i32 2,i32*%D7,align 4
%D8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%D9=getelementptr inbounds i8,i8*%D2,i64 8
%Ea=bitcast i8*%D9 to i8**
store i8*%D8,i8**%Ea,align 8
%Eb=getelementptr inbounds i8,i8*%D2,i64 16
%Ec=bitcast i8*%Eb to i32*
store i32 2,i32*%Ec,align 4
%Ed=call i8*@sml_alloc(i32 inreg 20)#0
%Ee=getelementptr inbounds i8,i8*%Ed,i64 -4
%Ef=bitcast i8*%Ee to i32*
store i32 1342177296,i32*%Ef,align 4
store i8*%Ed,i8**%d,align 8
%Eg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Eh=bitcast i8*%Ed to i8**
store i8*%Eg,i8**%Eh,align 8
%Ei=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ej=getelementptr inbounds i8,i8*%Ed,i64 8
%Ek=bitcast i8*%Ej to i8**
store i8*%Ei,i8**%Ek,align 8
%El=getelementptr inbounds i8,i8*%Ed,i64 16
%Em=bitcast i8*%El to i32*
store i32 3,i32*%Em,align 4
%En=call i8*@sml_alloc(i32 inreg 20)#0
%Eo=getelementptr inbounds i8,i8*%En,i64 -4
%Ep=bitcast i8*%Eo to i32*
store i32 1342177296,i32*%Ep,align 4
store i8*%En,i8**%e,align 8
%Eq=getelementptr inbounds i8,i8*%En,i64 4
%Er=bitcast i8*%Eq to i32*
store i32 0,i32*%Er,align 1
%Es=bitcast i8*%En to i32*
store i32 6,i32*%Es,align 4
%Et=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Eu=getelementptr inbounds i8,i8*%En,i64 8
%Ev=bitcast i8*%Eu to i8**
store i8*%Et,i8**%Ev,align 8
%Ew=getelementptr inbounds i8,i8*%En,i64 16
%Ex=bitcast i8*%Ew to i32*
store i32 2,i32*%Ex,align 4
%Ey=call i8*@sml_alloc(i32 inreg 20)#0
%Ez=getelementptr inbounds i8,i8*%Ey,i64 -4
%EA=bitcast i8*%Ez to i32*
store i32 1342177296,i32*%EA,align 4
store i8*%Ey,i8**%d,align 8
%EB=bitcast i8*%Ey to i64*
store i64 0,i64*%EB,align 4
%EC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ED=getelementptr inbounds i8,i8*%Ey,i64 8
%EE=bitcast i8*%ED to i8**
store i8*%EC,i8**%EE,align 8
%EF=getelementptr inbounds i8,i8*%Ey,i64 16
%EG=bitcast i8*%EF to i32*
store i32 2,i32*%EG,align 4
%EH=call i8*@sml_alloc(i32 inreg 20)#0
%EI=getelementptr inbounds i8,i8*%EH,i64 -4
%EJ=bitcast i8*%EI to i32*
store i32 1342177296,i32*%EJ,align 4
%EK=load i8*,i8**%f,align 8
%EL=bitcast i8*%EH to i8**
store i8*%EK,i8**%EL,align 8
%EM=load i8*,i8**%d,align 8
%EN=getelementptr inbounds i8,i8*%EH,i64 8
%EO=bitcast i8*%EN to i8**
store i8*%EM,i8**%EO,align 8
%EP=getelementptr inbounds i8,i8*%EH,i64 16
%EQ=bitcast i8*%EP to i32*
store i32 3,i32*%EQ,align 4
ret i8*%EH
ER:
%ES=getelementptr inbounds i8,i8*%r,i64 8
%ET=bitcast i8*%ES to i8**
%EU=load i8*,i8**%ET,align 8
store i8*%EU,i8**%e,align 8
%EV=load i8*,i8**%d,align 8
%EW=load i8*,i8**%k,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%k,align 8
%EX=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%EW,i8*inreg%EV)
%EY=getelementptr inbounds i8,i8*%EX,i64 16
%EZ=bitcast i8*%EY to i8*(i8*,i8*)**
%E0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%EZ,align 8
%E1=bitcast i8*%EX to i8**
%E2=load i8*,i8**%E1,align 8
store i8*%E2,i8**%d,align 8
%E3=call i8*@sml_alloc(i32 inreg 4)#0
%E4=bitcast i8*%E3 to i32*
%E5=getelementptr inbounds i8,i8*%E3,i64 -4
%E6=bitcast i8*%E5 to i32*
store i32 4,i32*%E6,align 4
store i32 2,i32*%E4,align 4
%E7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E8=call fastcc i8*%E0(i8*inreg%E7,i8*inreg%E3)
%E9=getelementptr inbounds i8,i8*%E8,i64 16
%Fa=bitcast i8*%E9 to i8*(i8*,i8*)**
%Fb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%Fa,align 8
%Fc=bitcast i8*%E8 to i8**
%Fd=load i8*,i8**%Fc,align 8
%Fe=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Ff=call fastcc i8*%Fb(i8*inreg%Fd,i8*inreg%Fe)
%Fg=bitcast i8*%Ff to i8**
%Fh=load i8*,i8**%Fg,align 8
store i8*%Fh,i8**%d,align 8
%Fi=getelementptr inbounds i8,i8*%Ff,i64 8
%Fj=bitcast i8*%Fi to i8**
%Fk=load i8*,i8**%Fj,align 8
store i8*%Fk,i8**%e,align 8
%Fl=call i8*@sml_alloc(i32 inreg 20)#0
%Fm=getelementptr inbounds i8,i8*%Fl,i64 -4
%Fn=bitcast i8*%Fm to i32*
store i32 1342177296,i32*%Fn,align 4
store i8*%Fl,i8**%f,align 8
%Fo=getelementptr inbounds i8,i8*%Fl,i64 4
%Fp=bitcast i8*%Fo to i32*
store i32 0,i32*%Fp,align 1
%Fq=bitcast i8*%Fl to i32*
store i32 1,i32*%Fq,align 4
%Fr=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Fs=getelementptr inbounds i8,i8*%Fl,i64 8
%Ft=bitcast i8*%Fs to i8**
store i8*%Fr,i8**%Ft,align 8
%Fu=getelementptr inbounds i8,i8*%Fl,i64 16
%Fv=bitcast i8*%Fu to i32*
store i32 2,i32*%Fv,align 4
%Fw=call i8*@sml_alloc(i32 inreg 20)#0
%Fx=getelementptr inbounds i8,i8*%Fw,i64 -4
%Fy=bitcast i8*%Fx to i32*
store i32 1342177296,i32*%Fy,align 4
%Fz=load i8*,i8**%d,align 8
%FA=bitcast i8*%Fw to i8**
store i8*%Fz,i8**%FA,align 8
%FB=load i8*,i8**%f,align 8
%FC=getelementptr inbounds i8,i8*%Fw,i64 8
%FD=bitcast i8*%FC to i8**
store i8*%FB,i8**%FD,align 8
%FE=getelementptr inbounds i8,i8*%Fw,i64 16
%FF=bitcast i8*%FE to i32*
store i32 3,i32*%FF,align 4
ret i8*%Fw
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%g,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%o,label%k
k:
call void@sml_check(i32 inreg%i)
%l=load i8*,i8**%e,align 8
%m=load i8*,i8**%d,align 8
%n=load i8*,i8**%g,align 8
br label%o
o:
%p=phi i8*[%n,%k],[%a,%q]
%r=phi i8*[%m,%k],[%b,%q]
%s=phi i8*[%l,%k],[%c,%q]
store i8*null,i8**%e,align 8
store i8*null,i8**%d,align 8
%t=call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%p,i8*inreg%r,i8*inreg%s)
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%t,i64 8
%x=bitcast i8*%w to i8**
%y=load i8*,i8**%x,align 8
%z=load i8*,i8**%g,align 8
%A=getelementptr inbounds i8,i8*%z,i64 24
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
%D=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%C,i8*inreg%y)
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=getelementptr inbounds i8,i8*%D,i64 8
%H=bitcast i8*%G to i8**
%I=load i8*,i8**%H,align 8
store i8*%I,i8**%f,align 8
%J=call i8*@sml_alloc(i32 inreg 20)#0
%K=getelementptr inbounds i8,i8*%J,i64 -4
%L=bitcast i8*%K to i32*
store i32 1342177296,i32*%L,align 4
store i8*%J,i8**%h,align 8
%M=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%N=bitcast i8*%J to i8**
store i8*%M,i8**%N,align 8
%O=getelementptr inbounds i8,i8*%J,i64 8
%P=bitcast i8*%O to i8**
store i8*null,i8**%P,align 8
%Q=getelementptr inbounds i8,i8*%J,i64 16
%R=bitcast i8*%Q to i32*
store i32 3,i32*%R,align 4
%S=call i8*@sml_alloc(i32 inreg 20)#0
%T=getelementptr inbounds i8,i8*%S,i64 -4
%U=bitcast i8*%T to i32*
store i32 1342177296,i32*%U,align 4
store i8*%S,i8**%e,align 8
%V=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%W=bitcast i8*%S to i8**
store i8*%V,i8**%W,align 8
%X=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Y=getelementptr inbounds i8,i8*%S,i64 8
%Z=bitcast i8*%Y to i8**
store i8*%X,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%S,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
store i8*%ah,i8**%d,align 8
%ai=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%aj=getelementptr inbounds i8,i8*%ai,i64 16
%ak=bitcast i8*%aj to i8*(i8*,i8*)**
%al=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ak,align 8
%am=bitcast i8*%ai to i8**
%an=load i8*,i8**%am,align 8
%ao=call fastcc i8*%al(i8*inreg%an,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iJ,i64 0,i32 2)to i8*))
%ap=getelementptr inbounds i8,i8*%ao,i64 16
%aq=bitcast i8*%ap to i8*(i8*,i8*)**
%ar=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aq,align 8
%as=bitcast i8*%ao to i8**
%at=load i8*,i8**%as,align 8
%au=load i8*,i8**%e,align 8
%av=call fastcc i8*%ar(i8*inreg%at,i8*inreg%au)
%aw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ax=call fastcc i8*%af(i8*inreg%aw,i8*inreg%av)
store i8*%ax,i8**%d,align 8
%ay=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%az=getelementptr inbounds i8,i8*%ay,i64 16
%aA=bitcast i8*%az to i8*(i8*,i8*)**
%aB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aA,align 8
%aC=bitcast i8*%ay to i8**
%aD=load i8*,i8**%aC,align 8
%aE=call fastcc i8*%aB(i8*inreg%aD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iK,i64 0,i32 2)to i8*))
%aF=getelementptr inbounds i8,i8*%aE,i64 16
%aG=bitcast i8*%aF to i8*(i8*,i8*)**
%aH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aG,align 8
%aI=bitcast i8*%aE to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=bitcast i8**%g to i8***
%aL=load i8**,i8***%aK,align 8
store i8*null,i8**%g,align 8
%aM=load i8*,i8**%aL,align 8
%aN=call fastcc i8*%aH(i8*inreg%aJ,i8*inreg%aM)
%aO=getelementptr inbounds i8,i8*%aN,i64 16
%aP=bitcast i8*%aO to i8*(i8*,i8*)**
%aQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aP,align 8
%aR=bitcast i8*%aN to i8**
%aS=load i8*,i8**%aR,align 8
%aT=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aU=call fastcc i8*%aQ(i8*inreg%aS,i8*inreg%aT)
store i8*%aU,i8**%e,align 8
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
store i8*%aV,i8**%g,align 8
%aY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aZ=bitcast i8*%aV to i8**
store i8*%aY,i8**%aZ,align 8
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=getelementptr inbounds i8,i8*%aV,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aV,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 3,i32*%a4,align 4
%a5=call i8*@sml_alloc(i32 inreg 20)#0
%a6=getelementptr inbounds i8,i8*%a5,i64 -4
%a7=bitcast i8*%a6 to i32*
store i32 1342177296,i32*%a7,align 4
%a8=load i8*,i8**%g,align 8
%a9=bitcast i8*%a5 to i8**
store i8*%a8,i8**%a9,align 8
%ba=load i8*,i8**%f,align 8
%bb=getelementptr inbounds i8,i8*%a5,i64 8
%bc=bitcast i8*%bb to i8**
store i8*%ba,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a5,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
ret i8*%a5
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2396(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%h,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%p,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
%o=load i8*,i8**%h,align 8
br label%p
p:
%q=phi i8*[%o,%m],[%a,%r]
%s=phi i8*[%n,%m],[%c,%r]
%t=bitcast i8*%s to i8**
%u=load i8*,i8**%t,align 8
store i8*%u,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%s,i64 8
%w=bitcast i8*%v to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=getelementptr inbounds i8,i8*%q,i64 16
%z=bitcast i8*%y to i8**
%A=load i8*,i8**%z,align 8
store i8*%A,i8**%i,align 8
%B=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%C=getelementptr inbounds i8,i8*%B,i64 16
%D=bitcast i8*%C to i8*(i8*,i8*)**
%E=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%D,align 8
%F=bitcast i8*%B to i8**
%G=load i8*,i8**%F,align 8
store i8*%G,i8**%g,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%j,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%N=getelementptr inbounds i8,i8*%H,i64 8
%O=bitcast i8*%N to i8**
store i8*%M,i8**%O,align 8
%P=getelementptr inbounds i8,i8*%H,i64 16
%Q=bitcast i8*%P to i32*
store i32 3,i32*%Q,align 4
%R=call i8*@sml_alloc(i32 inreg 28)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177304,i32*%T,align 4
%U=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%R,i64 8
%X=bitcast i8*%W to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2507 to void(...)*),void(...)**%X,align 8
%Y=getelementptr inbounds i8,i8*%R,i64 16
%Z=bitcast i8*%Y to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL11elabOrderByE_2507 to void(...)*),void(...)**%Z,align 8
%aa=getelementptr inbounds i8,i8*%R,i64 24
%ab=bitcast i8*%aa to i32*
store i32 -2147483647,i32*%ab,align 4
%ac=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ad=call fastcc i8*%E(i8*inreg%ac,i8*inreg%R)
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ak=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%aj)
%al=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%am=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%al,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iL,i64 0,i32 2)to i8*),i8*inreg%ak)
%an=bitcast i8*%am to i8**
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%d,align 8
%ap=getelementptr inbounds i8,i8*%am,i64 8
%aq=bitcast i8*%ap to i8**
%ar=load i8*,i8**%aq,align 8
store i8*%ar,i8**%e,align 8
%as=call i8*@sml_alloc(i32 inreg 20)#0
%at=getelementptr inbounds i8,i8*%as,i64 -4
%au=bitcast i8*%at to i32*
store i32 1342177296,i32*%au,align 4
store i8*%as,i8**%g,align 8
%av=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aw=bitcast i8*%as to i8**
store i8*%av,i8**%aw,align 8
%ax=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ay=getelementptr inbounds i8,i8*%as,i64 8
%az=bitcast i8*%ay to i8**
store i8*%ax,i8**%az,align 8
%aA=getelementptr inbounds i8,i8*%as,i64 16
%aB=bitcast i8*%aA to i32*
store i32 3,i32*%aB,align 4
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%e,align 8
%aF=getelementptr inbounds i8,i8*%aC,i64 4
%aG=bitcast i8*%aF to i32*
store i32 0,i32*%aG,align 1
%aH=bitcast i8*%aC to i32*
store i32 21,i32*%aH,align 4
%aI=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 8
%aK=bitcast i8*%aJ to i8**
store i8*%aI,i8**%aK,align 8
%aL=getelementptr inbounds i8,i8*%aC,i64 16
%aM=bitcast i8*%aL to i32*
store i32 2,i32*%aM,align 4
%aN=call i8*@sml_alloc(i32 inreg 20)#0
%aO=getelementptr inbounds i8,i8*%aN,i64 -4
%aP=bitcast i8*%aO to i32*
store i32 1342177296,i32*%aP,align 4
%aQ=load i8*,i8**%d,align 8
%aR=bitcast i8*%aN to i8**
store i8*%aQ,i8**%aR,align 8
%aS=load i8*,i8**%e,align 8
%aT=getelementptr inbounds i8,i8*%aN,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aN,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
ret i8*%aN
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2397(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
x:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%o,align 8
%p=load atomic i32,i32*@sml_check_flag unordered,align 4
%q=icmp eq i32%p,0
br i1%q,label%v,label%r
r:
call void@sml_check(i32 inreg%p)
%s=load i8*,i8**%e,align 8
%t=load i8*,i8**%d,align 8
%u=load i8*,i8**%o,align 8
br label%v
v:
%w=phi i8*[%u,%r],[%a,%x]
%y=phi i8*[%t,%r],[%b,%x]
%z=phi i8*[%s,%r],[%c,%x]
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%e,align 8
%C=getelementptr inbounds i8,i8*%z,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=getelementptr inbounds i8,i8*%z,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
%I=bitcast i8*%H to i8**
%J=load i8*,i8**%I,align 8
%K=getelementptr inbounds i8,i8*%H,i64 8
%L=bitcast i8*%K to i8**
%M=load i8*,i8**%L,align 8
store i8*%M,i8**%g,align 8
%N=getelementptr inbounds i8,i8*%H,i64 16
%O=bitcast i8*%N to i8**
%P=load i8*,i8**%O,align 8
store i8*%P,i8**%h,align 8
%Q=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%w,i8*inreg%y,i8*inreg%J)
%R=bitcast i8*%Q to i8**
%S=load i8*,i8**%R,align 8
store i8*%S,i8**%i,align 8
%T=getelementptr inbounds i8,i8*%Q,i64 8
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
store i8*%V,i8**%j,align 8
%W=load i8*,i8**%e,align 8
%X=icmp eq i8*%W,null
br i1%X,label%Y,label%ai
Y:
store i8*null,i8**%e,align 8
%Z=load i8*,i8**%o,align 8
%aa=getelementptr inbounds i8,i8*%Z,i64 8
%ab=bitcast i8*%aa to i8**
%ac=load i8*,i8**%ab,align 8
store i8*%ac,i8**%d,align 8
%ad=call i8*@sml_alloc(i32 inreg 20)#0
%ae=getelementptr inbounds i8,i8*%ad,i64 -4
%af=bitcast i8*%ae to i32*
store i32 1342177296,i32*%af,align 4
%ag=load i8*,i8**%d,align 8
%ah=bitcast i8*%ad to i8**
store i8*%ag,i8**%ah,align 8
br label%bG
ai:
%aj=bitcast i8*%W to i8**
%ak=load i8*,i8**%aj,align 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%ak,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 16
%ar=bitcast i8*%aq to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%k,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 24
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
store i8*%av,i8**%l,align 8
%aw=icmp eq i8*%ap,null
br i1%aw,label%ax,label%aH
ax:
%ay=load i8*,i8**%o,align 8
%az=getelementptr inbounds i8,i8*%ay,i64 8
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%d,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
%aF=load i8*,i8**%d,align 8
%aG=bitcast i8*%aC to i8**
store i8*%aF,i8**%aG,align 8
br label%a5
aH:
%aI=bitcast i8*%ap to i8**
%aJ=load i8*,i8**%aI,align 8
%aK=load i8*,i8**%d,align 8
%aL=load i8*,i8**%o,align 8
store i8*null,i8**%d,align 8
%aM=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%aL,i8*inreg%aK,i8*inreg%aJ)
%aN=bitcast i8*%aM to i8**
%aO=load i8*,i8**%aN,align 8
store i8*%aO,i8**%d,align 8
%aP=getelementptr inbounds i8,i8*%aM,i64 8
%aQ=bitcast i8*%aP to i8**
%aR=load i8*,i8**%aQ,align 8
store i8*%aR,i8**%m,align 8
%aS=call i8*@sml_alloc(i32 inreg 12)#0
%aT=getelementptr inbounds i8,i8*%aS,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177288,i32*%aU,align 4
store i8*%aS,i8**%n,align 8
%aV=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aW=bitcast i8*%aS to i8**
store i8*%aV,i8**%aW,align 8
%aX=getelementptr inbounds i8,i8*%aS,i64 8
%aY=bitcast i8*%aX to i32*
store i32 1,i32*%aY,align 4
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
%a2=load i8*,i8**%d,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
br label%a5
a5:
%a6=phi i8*[%aZ,%aH],[%aC,%ax]
%a7=phi i8*[%a4,%aH],[null,%ax]
%a8=phi i8*[%a2,%aH],[%aF,%ax]
%a9=getelementptr inbounds i8,i8*%a6,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a7,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 16
%bc=bitcast i8*%bb to i32*
store i32 3,i32*%bc,align 4
store i8*%a8,i8**%d,align 8
store i8*%a7,i8**%m,align 8
%bd=call i8*@sml_alloc(i32 inreg 36)#0
%be=getelementptr inbounds i8,i8*%bd,i64 -4
%bf=bitcast i8*%be to i32*
store i32 1342177312,i32*%bf,align 4
store i8*%bd,i8**%n,align 8
%bg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bh=bitcast i8*%bd to i8**
store i8*%bg,i8**%bh,align 8
%bi=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bj=getelementptr inbounds i8,i8*%bd,i64 8
%bk=bitcast i8*%bj to i8**
store i8*%bi,i8**%bk,align 8
%bl=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bm=getelementptr inbounds i8,i8*%bd,i64 16
%bn=bitcast i8*%bm to i8**
store i8*%bl,i8**%bn,align 8
%bo=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%bp=getelementptr inbounds i8,i8*%bd,i64 24
%bq=bitcast i8*%bp to i8**
store i8*%bo,i8**%bq,align 8
%br=getelementptr inbounds i8,i8*%bd,i64 32
%bs=bitcast i8*%br to i32*
store i32 15,i32*%bs,align 4
%bt=call i8*@sml_alloc(i32 inreg 12)#0
%bu=getelementptr inbounds i8,i8*%bt,i64 -4
%bv=bitcast i8*%bu to i32*
store i32 1342177288,i32*%bv,align 4
store i8*%bt,i8**%e,align 8
%bw=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%bx=bitcast i8*%bt to i8**
store i8*%bw,i8**%bx,align 8
%by=getelementptr inbounds i8,i8*%bt,i64 8
%bz=bitcast i8*%by to i32*
store i32 1,i32*%bz,align 4
%bA=call i8*@sml_alloc(i32 inreg 20)#0
%bB=getelementptr inbounds i8,i8*%bA,i64 -4
%bC=bitcast i8*%bB to i32*
store i32 1342177296,i32*%bC,align 4
%bD=load i8*,i8**%d,align 8
%bE=bitcast i8*%bA to i8**
store i8*%bD,i8**%bE,align 8
%bF=load i8*,i8**%e,align 8
br label%bG
bG:
%bH=phi i8*[%bA,%a5],[%ad,%Y]
%bI=phi i8*[%bF,%a5],[null,%Y]
%bJ=phi i8*[%bD,%a5],[%ag,%Y]
%bK=getelementptr inbounds i8,i8*%bH,i64 8
%bL=bitcast i8*%bK to i8**
store i8*%bI,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bH,i64 16
%bN=bitcast i8*%bM to i32*
store i32 3,i32*%bN,align 4
store i8*%bJ,i8**%d,align 8
store i8*%bI,i8**%e,align 8
%bO=call i8*@sml_alloc(i32 inreg 20)#0
%bP=getelementptr inbounds i8,i8*%bO,i64 -4
%bQ=bitcast i8*%bP to i32*
store i32 1342177296,i32*%bQ,align 4
store i8*%bO,i8**%k,align 8
%bR=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bS=bitcast i8*%bO to i8**
store i8*%bR,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bO,i64 8
%bU=bitcast i8*%bT to i8**
store i8*null,i8**%bU,align 8
%bV=getelementptr inbounds i8,i8*%bO,i64 16
%bW=bitcast i8*%bV to i32*
store i32 3,i32*%bW,align 4
%bX=call i8*@sml_alloc(i32 inreg 20)#0
%bY=getelementptr inbounds i8,i8*%bX,i64 -4
%bZ=bitcast i8*%bY to i32*
store i32 1342177296,i32*%bZ,align 4
store i8*%bX,i8**%d,align 8
%b0=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%b1=bitcast i8*%bX to i8**
store i8*%b0,i8**%b1,align 8
%b2=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%b3=getelementptr inbounds i8,i8*%bX,i64 8
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bX,i64 16
%b6=bitcast i8*%b5 to i32*
store i32 3,i32*%b6,align 4
%b7=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%b8=getelementptr inbounds i8,i8*%b7,i64 16
%b9=bitcast i8*%b8 to i8*(i8*,i8*)**
%ca=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b9,align 8
%cb=bitcast i8*%b7 to i8**
%cc=load i8*,i8**%cb,align 8
store i8*%cc,i8**%i,align 8
%cd=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ce=getelementptr inbounds i8,i8*%cd,i64 16
%cf=bitcast i8*%ce to i8*(i8*,i8*)**
%cg=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cf,align 8
%ch=bitcast i8*%cd to i8**
%ci=load i8*,i8**%ch,align 8
%cj=call fastcc i8*%cg(i8*inreg%ci,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iM,i64 0,i32 2)to i8*))
%ck=getelementptr inbounds i8,i8*%cj,i64 16
%cl=bitcast i8*%ck to i8*(i8*,i8*)**
%cm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cl,align 8
%cn=bitcast i8*%cj to i8**
%co=load i8*,i8**%cn,align 8
%cp=load i8*,i8**%d,align 8
%cq=call fastcc i8*%cm(i8*inreg%co,i8*inreg%cp)
%cr=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cs=call fastcc i8*%ca(i8*inreg%cr,i8*inreg%cq)
store i8*%cs,i8**%i,align 8
%ct=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cu=getelementptr inbounds i8,i8*%ct,i64 16
%cv=bitcast i8*%cu to i8*(i8*,i8*)**
%cw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cv,align 8
%cx=bitcast i8*%ct to i8**
%cy=load i8*,i8**%cx,align 8
%cz=call fastcc i8*%cw(i8*inreg%cy,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iN,i64 0,i32 2)to i8*))
%cA=getelementptr inbounds i8,i8*%cz,i64 16
%cB=bitcast i8*%cA to i8*(i8*,i8*)**
%cC=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cB,align 8
%cD=bitcast i8*%cz to i8**
%cE=load i8*,i8**%cD,align 8
%cF=bitcast i8**%o to i8***
%cG=load i8**,i8***%cF,align 8
store i8*null,i8**%o,align 8
%cH=load i8*,i8**%cG,align 8
%cI=call fastcc i8*%cC(i8*inreg%cE,i8*inreg%cH)
%cJ=getelementptr inbounds i8,i8*%cI,i64 16
%cK=bitcast i8*%cJ to i8*(i8*,i8*)**
%cL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cK,align 8
%cM=bitcast i8*%cI to i8**
%cN=load i8*,i8**%cM,align 8
%cO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cP=call fastcc i8*%cL(i8*inreg%cN,i8*inreg%cO)
store i8*%cP,i8**%d,align 8
%cQ=call i8*@sml_alloc(i32 inreg 20)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177296,i32*%cS,align 4
store i8*%cQ,i8**%k,align 8
%cT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cQ,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 28)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177304,i32*%c2,align 4
store i8*%c0,i8**%d,align 8
%c3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c9=getelementptr inbounds i8,i8*%c0,i64 16
%da=bitcast i8*%c9 to i8**
store i8*%c8,i8**%da,align 8
%db=getelementptr inbounds i8,i8*%c0,i64 24
%dc=bitcast i8*%db to i32*
store i32 7,i32*%dc,align 4
%dd=call i8*@sml_alloc(i32 inreg 28)#0
%de=getelementptr inbounds i8,i8*%dd,i64 -4
%df=bitcast i8*%de to i32*
store i32 1342177304,i32*%df,align 4
store i8*%dd,i8**%g,align 8
%dg=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dh=bitcast i8*%dd to i8**
store i8*%dg,i8**%dh,align 8
%di=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dj=getelementptr inbounds i8,i8*%dd,i64 8
%dk=bitcast i8*%dj to i8**
store i8*%di,i8**%dk,align 8
%dl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dm=getelementptr inbounds i8,i8*%dd,i64 16
%dn=bitcast i8*%dm to i8**
store i8*%dl,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dd,i64 24
%dp=bitcast i8*%do to i32*
store i32 7,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177296,i32*%ds,align 4
store i8*%dq,i8**%d,align 8
%dt=getelementptr inbounds i8,i8*%dq,i64 4
%du=bitcast i8*%dt to i32*
store i32 0,i32*%du,align 1
%dv=bitcast i8*%dq to i32*
store i32 18,i32*%dv,align 4
%dw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 8
%dy=bitcast i8*%dx to i8**
store i8*%dw,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dq,i64 16
%dA=bitcast i8*%dz to i32*
store i32 2,i32*%dA,align 4
%dB=call i8*@sml_alloc(i32 inreg 20)#0
%dC=getelementptr inbounds i8,i8*%dB,i64 -4
%dD=bitcast i8*%dC to i32*
store i32 1342177296,i32*%dD,align 4
%dE=load i8*,i8**%k,align 8
%dF=bitcast i8*%dB to i8**
store i8*%dE,i8**%dF,align 8
%dG=load i8*,i8**%d,align 8
%dH=getelementptr inbounds i8,i8*%dB,i64 8
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dB,i64 16
%dK=bitcast i8*%dJ to i32*
store i32 3,i32*%dK,align 4
ret i8*%dB
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2398(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
s:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%l,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%q,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
br label%q
q:
%r=phi i8*[%p,%o],[%c,%s]
%t=bitcast i8*%r to i8**
%u=load i8*,i8**%t,align 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
%x=getelementptr inbounds i8,i8*%u,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%e,align 8
%A=getelementptr inbounds i8,i8*%r,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%f,align 8
%D=getelementptr inbounds i8,i8*%r,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%g,align 8
%G=icmp eq i8*%w,null
br i1%G,label%H,label%R
H:
%I=load i8*,i8**%l,align 8
%J=getelementptr inbounds i8,i8*%I,i64 8
%K=bitcast i8*%J to i8**
%L=load i8*,i8**%K,align 8
store i8*%L,i8**%h,align 8
%M=call i8*@sml_alloc(i32 inreg 20)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177296,i32*%O,align 4
%P=load i8*,i8**%h,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
br label%ap
R:
%S=bitcast i8*%w to i8**
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%d,align 8
%V=load i8*,i8**%l,align 8
%W=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%V,i8*inreg%U,i8*inreg%T)
%X=bitcast i8*%W to i8**
%Y=load i8*,i8**%X,align 8
store i8*%Y,i8**%h,align 8
%Z=getelementptr inbounds i8,i8*%W,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
store i8*%ab,i8**%i,align 8
%ac=call i8*@sml_alloc(i32 inreg 12)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177288,i32*%ae,align 4
store i8*%ac,i8**%j,align 8
%af=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to i32*
store i32 1,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
%am=load i8*,i8**%h,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
br label%ap
ap:
%aq=phi i8*[%aj,%R],[%M,%H]
%ar=phi i8*[%ao,%R],[null,%H]
%as=phi i8*[%am,%R],[%P,%H]
%at=getelementptr inbounds i8,i8*%aq,i64 8
%au=bitcast i8*%at to i8**
store i8*%ar,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%aq,i64 16
%aw=bitcast i8*%av to i32*
store i32 3,i32*%aw,align 4
store i8*%as,i8**%h,align 8
store i8*%ar,i8**%i,align 8
%ax=load i8*,i8**%g,align 8
%ay=icmp eq i8*%ax,null
br i1%ay,label%az,label%aJ
az:
store i8*null,i8**%g,align 8
%aA=load i8*,i8**%l,align 8
%aB=getelementptr inbounds i8,i8*%aA,i64 8
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%d,align 8
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
%aH=load i8*,i8**%d,align 8
%aI=bitcast i8*%aE to i8**
store i8*%aH,i8**%aI,align 8
br label%bm
aJ:
%aK=bitcast i8*%ax to i8**
%aL=load i8*,i8**%aK,align 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
%aO=getelementptr inbounds i8,i8*%aL,i64 8
%aP=bitcast i8*%aO to i8**
%aQ=load i8*,i8**%aP,align 8
store i8*%aQ,i8**%g,align 8
%aR=load i8*,i8**%d,align 8
%aS=load i8*,i8**%l,align 8
store i8*null,i8**%d,align 8
%aT=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%aS,i8*inreg%aR,i8*inreg%aN)
%aU=bitcast i8*%aT to i8**
%aV=load i8*,i8**%aU,align 8
store i8*%aV,i8**%d,align 8
%aW=getelementptr inbounds i8,i8*%aT,i64 8
%aX=bitcast i8*%aW to i8**
%aY=load i8*,i8**%aX,align 8
store i8*%aY,i8**%j,align 8
%aZ=call i8*@sml_alloc(i32 inreg 20)#0
%a0=getelementptr inbounds i8,i8*%aZ,i64 -4
%a1=bitcast i8*%a0 to i32*
store i32 1342177296,i32*%a1,align 4
store i8*%aZ,i8**%k,align 8
%a2=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%a3=bitcast i8*%aZ to i8**
store i8*%a2,i8**%a3,align 8
%a4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a5=getelementptr inbounds i8,i8*%aZ,i64 8
%a6=bitcast i8*%a5 to i8**
store i8*%a4,i8**%a6,align 8
%a7=getelementptr inbounds i8,i8*%aZ,i64 16
%a8=bitcast i8*%a7 to i32*
store i32 3,i32*%a8,align 4
%a9=call i8*@sml_alloc(i32 inreg 12)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177288,i32*%bb,align 4
store i8*%a9,i8**%g,align 8
%bc=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i32*
store i32 1,i32*%bf,align 4
%bg=call i8*@sml_alloc(i32 inreg 20)#0
%bh=getelementptr inbounds i8,i8*%bg,i64 -4
%bi=bitcast i8*%bh to i32*
store i32 1342177296,i32*%bi,align 4
%bj=load i8*,i8**%d,align 8
%bk=bitcast i8*%bg to i8**
store i8*%bj,i8**%bk,align 8
%bl=load i8*,i8**%g,align 8
br label%bm
bm:
%bn=phi i8*[%bg,%aJ],[%aE,%az]
%bo=phi i8*[%bl,%aJ],[null,%az]
%bp=phi i8*[%bj,%aJ],[%aH,%az]
%bq=getelementptr inbounds i8,i8*%bn,i64 8
%br=bitcast i8*%bq to i8**
store i8*%bo,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bn,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
store i8*%bp,i8**%d,align 8
store i8*%bo,i8**%g,align 8
%bu=call i8*@sml_alloc(i32 inreg 20)#0
%bv=getelementptr inbounds i8,i8*%bu,i64 -4
%bw=bitcast i8*%bv to i32*
store i32 1342177296,i32*%bw,align 4
store i8*%bu,i8**%j,align 8
%bx=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%by=bitcast i8*%bu to i8**
store i8*%bx,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bu,i64 8
%bA=bitcast i8*%bz to i8**
store i8*null,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bu,i64 16
%bC=bitcast i8*%bB to i32*
store i32 3,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 20)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177296,i32*%bF,align 4
store i8*%bD,i8**%d,align 8
%bG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bJ=getelementptr inbounds i8,i8*%bD,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bD,i64 16
%bM=bitcast i8*%bL to i32*
store i32 3,i32*%bM,align 4
%bN=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
store i8*%bS,i8**%h,align 8
%bT=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bU=getelementptr inbounds i8,i8*%bT,i64 16
%bV=bitcast i8*%bU to i8*(i8*,i8*)**
%bW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bV,align 8
%bX=bitcast i8*%bT to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=call fastcc i8*%bW(i8*inreg%bY,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iO,i64 0,i32 2)to i8*))
%b0=getelementptr inbounds i8,i8*%bZ,i64 16
%b1=bitcast i8*%b0 to i8*(i8*,i8*)**
%b2=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b1,align 8
%b3=bitcast i8*%bZ to i8**
%b4=load i8*,i8**%b3,align 8
%b5=load i8*,i8**%d,align 8
%b6=call fastcc i8*%b2(i8*inreg%b4,i8*inreg%b5)
%b7=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b8=call fastcc i8*%bQ(i8*inreg%b7,i8*inreg%b6)
store i8*%b8,i8**%h,align 8
%b9=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%ca=getelementptr inbounds i8,i8*%b9,i64 16
%cb=bitcast i8*%ca to i8*(i8*,i8*)**
%cc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cb,align 8
%cd=bitcast i8*%b9 to i8**
%ce=load i8*,i8**%cd,align 8
%cf=call fastcc i8*%cc(i8*inreg%ce,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iP,i64 0,i32 2)to i8*))
%cg=getelementptr inbounds i8,i8*%cf,i64 16
%ch=bitcast i8*%cg to i8*(i8*,i8*)**
%ci=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ch,align 8
%cj=bitcast i8*%cf to i8**
%ck=load i8*,i8**%cj,align 8
%cl=bitcast i8**%l to i8***
%cm=load i8**,i8***%cl,align 8
store i8*null,i8**%l,align 8
%cn=load i8*,i8**%cm,align 8
%co=call fastcc i8*%ci(i8*inreg%ck,i8*inreg%cn)
%cp=getelementptr inbounds i8,i8*%co,i64 16
%cq=bitcast i8*%cp to i8*(i8*,i8*)**
%cr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cq,align 8
%cs=bitcast i8*%co to i8**
%ct=load i8*,i8**%cs,align 8
%cu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cv=call fastcc i8*%cr(i8*inreg%ct,i8*inreg%cu)
store i8*%cv,i8**%d,align 8
%cw=call i8*@sml_alloc(i32 inreg 20)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177296,i32*%cy,align 4
store i8*%cw,i8**%j,align 8
%cz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cw,i64 16
%cF=bitcast i8*%cE to i32*
store i32 3,i32*%cF,align 4
%cG=call i8*@sml_alloc(i32 inreg 20)#0
%cH=getelementptr inbounds i8,i8*%cG,i64 -4
%cI=bitcast i8*%cH to i32*
store i32 1342177296,i32*%cI,align 4
store i8*%cG,i8**%d,align 8
%cJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cK=bitcast i8*%cG to i8**
store i8*%cJ,i8**%cK,align 8
%cL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cM=getelementptr inbounds i8,i8*%cG,i64 8
%cN=bitcast i8*%cM to i8**
store i8*%cL,i8**%cN,align 8
%cO=getelementptr inbounds i8,i8*%cG,i64 16
%cP=bitcast i8*%cO to i32*
store i32 3,i32*%cP,align 4
%cQ=call i8*@sml_alloc(i32 inreg 28)#0
%cR=getelementptr inbounds i8,i8*%cQ,i64 -4
%cS=bitcast i8*%cR to i32*
store i32 1342177304,i32*%cS,align 4
store i8*%cQ,i8**%e,align 8
%cT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cU=bitcast i8*%cQ to i8**
store i8*%cT,i8**%cU,align 8
%cV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cW=getelementptr inbounds i8,i8*%cQ,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cZ=getelementptr inbounds i8,i8*%cQ,i64 16
%c0=bitcast i8*%cZ to i8**
store i8*%cY,i8**%c0,align 8
%c1=getelementptr inbounds i8,i8*%cQ,i64 24
%c2=bitcast i8*%c1 to i32*
store i32 7,i32*%c2,align 4
%c3=call i8*@sml_alloc(i32 inreg 20)#0
%c4=getelementptr inbounds i8,i8*%c3,i64 -4
%c5=bitcast i8*%c4 to i32*
store i32 1342177296,i32*%c5,align 4
store i8*%c3,i8**%d,align 8
%c6=getelementptr inbounds i8,i8*%c3,i64 4
%c7=bitcast i8*%c6 to i32*
store i32 0,i32*%c7,align 1
%c8=bitcast i8*%c3 to i32*
store i32 15,i32*%c8,align 4
%c9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%da=getelementptr inbounds i8,i8*%c3,i64 8
%db=bitcast i8*%da to i8**
store i8*%c9,i8**%db,align 8
%dc=getelementptr inbounds i8,i8*%c3,i64 16
%dd=bitcast i8*%dc to i32*
store i32 2,i32*%dd,align 4
%de=call i8*@sml_alloc(i32 inreg 20)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177296,i32*%dg,align 4
%dh=load i8*,i8**%j,align 8
%di=bitcast i8*%de to i8**
store i8*%dh,i8**%di,align 8
%dj=load i8*,i8**%d,align 8
%dk=getelementptr inbounds i8,i8*%de,i64 8
%dl=bitcast i8*%dk to i8**
store i8*%dj,i8**%dl,align 8
%dm=getelementptr inbounds i8,i8*%de,i64 16
%dn=bitcast i8*%dm to i32*
store i32 3,i32*%dn,align 4
ret i8*%de
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2399(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
t:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%j,align 8
%m=load atomic i32,i32*@sml_check_flag unordered,align 4
%n=icmp eq i32%m,0
br i1%n,label%r,label%o
o:
call void@sml_check(i32 inreg%m)
%p=load i8*,i8**%e,align 8
%q=load i8*,i8**%j,align 8
br label%r
r:
%s=phi i8*[%q,%o],[%a,%t]
%u=phi i8*[%p,%o],[%c,%t]
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%u,i64 8
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=bitcast i8*%z to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%f,align 8
%C=getelementptr inbounds i8,i8*%z,i64 8
%D=bitcast i8*%C to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%g,align 8
%F=getelementptr inbounds i8,i8*%u,i64 16
%G=bitcast i8*%F to i8**
%H=load i8*,i8**%G,align 8
store i8*%H,i8**%h,align 8
%I=getelementptr inbounds i8,i8*%s,i64 16
%J=bitcast i8*%I to i8**
%K=load i8*,i8**%J,align 8
store i8*%K,i8**%k,align 8
%L=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%M=getelementptr inbounds i8,i8*%L,i64 16
%N=bitcast i8*%M to i8*(i8*,i8*)**
%O=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%N,align 8
%P=bitcast i8*%L to i8**
%Q=load i8*,i8**%P,align 8
store i8*%Q,i8**%i,align 8
%R=call i8*@sml_alloc(i32 inreg 20)#0
%S=getelementptr inbounds i8,i8*%R,i64 -4
%T=bitcast i8*%S to i32*
store i32 1342177296,i32*%T,align 4
store i8*%R,i8**%l,align 8
%U=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%V=bitcast i8*%R to i8**
store i8*%U,i8**%V,align 8
%W=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%X=getelementptr inbounds i8,i8*%R,i64 8
%Y=bitcast i8*%X to i8**
store i8*%W,i8**%Y,align 8
%Z=getelementptr inbounds i8,i8*%R,i64 16
%aa=bitcast i8*%Z to i32*
store i32 3,i32*%aa,align 4
%ab=call i8*@sml_alloc(i32 inreg 28)#0
%ac=getelementptr inbounds i8,i8*%ab,i64 -4
%ad=bitcast i8*%ac to i32*
store i32 1342177304,i32*%ad,align 4
%ae=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%af=bitcast i8*%ab to i8**
store i8*%ae,i8**%af,align 8
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2518 to void(...)*),void(...)**%ah,align 8
%ai=getelementptr inbounds i8,i8*%ab,i64 16
%aj=bitcast i8*%ai to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL10elabSelectE_2518 to void(...)*),void(...)**%aj,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 24
%al=bitcast i8*%ak to i32*
store i32 -2147483647,i32*%al,align 4
%am=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%an=call fastcc i8*%O(i8*inreg%am,i8*inreg%ab)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%d,align 8
%at=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aA=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%az)
%aB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%aC=call fastcc i8*%aq(i8*inreg%aB,i8*inreg%aA)
%aD=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%aE=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%aD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iQ,i64 0,i32 2)to i8*),i8*inreg%aC)
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%d,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 8
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%f,align 8
%aK=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%aL=getelementptr inbounds i8,i8*%aK,i64 16
%aM=bitcast i8*%aL to i8*(i8*,i8*)**
%aN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aM,align 8
%aO=bitcast i8*%aK to i8**
%aP=load i8*,i8**%aO,align 8
%aQ=call fastcc i8*%aN(i8*inreg%aP,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iR,i64 0,i32 2)to i8*))
%aR=getelementptr inbounds i8,i8*%aQ,i64 16
%aS=bitcast i8*%aR to i8*(i8*,i8*)**
%aT=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aS,align 8
%aU=bitcast i8*%aQ to i8**
%aV=load i8*,i8**%aU,align 8
%aW=load i8*,i8**%f,align 8
%aX=call fastcc i8*%aT(i8*inreg%aV,i8*inreg%aW)
%aY=getelementptr inbounds i8,i8*%aX,i64 16
%aZ=bitcast i8*%aY to i8*(i8*,i8*)**
%a0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aZ,align 8
%a1=bitcast i8*%aX to i8**
%a2=load i8*,i8**%a1,align 8
%a3=load i8*,i8**%g,align 8
%a4=call fastcc i8*%a0(i8*inreg%a2,i8*inreg%a3)
%a5=getelementptr inbounds i8,i8*%a4,i64 16
%a6=bitcast i8*%a5 to i8*(i8*,i8*)**
%a7=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a6,align 8
%a8=bitcast i8*%a4 to i8**
%a9=load i8*,i8**%a8,align 8
%ba=call fastcc i8*%a7(i8*inreg%a9,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iT,i64 0,i32 2)to i8*))
%bb=call i8*@sml_alloc(i32 inreg 20)#0
%bc=getelementptr inbounds i8,i8*%bb,i64 -4
%bd=bitcast i8*%bc to i32*
store i32 1342177296,i32*%bd,align 4
store i8*%bb,i8**%i,align 8
%be=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bf=bitcast i8*%bb to i8**
store i8*%be,i8**%bf,align 8
%bg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bh=getelementptr inbounds i8,i8*%bb,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%bb,i64 16
%bk=bitcast i8*%bj to i32*
store i32 3,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 28)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177304,i32*%bn,align 4
store i8*%bl,i8**%f,align 8
%bo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%br=getelementptr inbounds i8,i8*%bl,i64 8
%bs=bitcast i8*%br to i8**
store i8*%bq,i8**%bs,align 8
%bt=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 16
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=getelementptr inbounds i8,i8*%bl,i64 24
%bx=bitcast i8*%bw to i32*
store i32 7,i32*%bx,align 4
%by=call i8*@sml_alloc(i32 inreg 20)#0
%bz=getelementptr inbounds i8,i8*%by,i64 -4
%bA=bitcast i8*%bz to i32*
store i32 1342177296,i32*%bA,align 4
store i8*%by,i8**%e,align 8
%bB=getelementptr inbounds i8,i8*%by,i64 4
%bC=bitcast i8*%bB to i32*
store i32 0,i32*%bC,align 1
%bD=bitcast i8*%by to i32*
store i32 25,i32*%bD,align 4
%bE=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bF=getelementptr inbounds i8,i8*%by,i64 8
%bG=bitcast i8*%bF to i8**
store i8*%bE,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%by,i64 16
%bI=bitcast i8*%bH to i32*
store i32 2,i32*%bI,align 4
%bJ=call i8*@sml_alloc(i32 inreg 20)#0
%bK=getelementptr inbounds i8,i8*%bJ,i64 -4
%bL=bitcast i8*%bK to i32*
store i32 1342177296,i32*%bL,align 4
%bM=load i8*,i8**%d,align 8
%bN=bitcast i8*%bJ to i8**
store i8*%bM,i8**%bN,align 8
%bO=load i8*,i8**%e,align 8
%bP=getelementptr inbounds i8,i8*%bJ,i64 8
%bQ=bitcast i8*%bP to i8**
store i8*%bO,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bJ,i64 16
%bS=bitcast i8*%bR to i32*
store i32 3,i32*%bS,align 4
ret i8*%bJ
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
t:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%l,align 8
%n=load atomic i32,i32*@sml_check_flag unordered,align 4
%o=icmp eq i32%n,0
br i1%o,label%r,label%p
p:
call void@sml_check(i32 inreg%n)
%q=load i8*,i8**%e,align 8
br label%r
r:
%s=phi i8*[%q,%p],[%c,%t]
store i8*null,i8**%e,align 8
%u=bitcast i8*%s to i32*
%v=load i32,i32*%u,align 4
switch i32%v,label%w[
i32 0,label%gO
i32 1,label%W
i32 2,label%O
]
w:
store i8*null,i8**%l,align 8
call void@sml_matchcomp_bug()
%x=load i8*,i8**@_SMLZ5Match,align 8
store i8*%x,i8**%d,align 8
%y=call i8*@sml_alloc(i32 inreg 20)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177296,i32*%A,align 4
store i8*%y,i8**%e,align 8
%B=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@i0,i64 0,i32 2,i64 0),i8**%E,align 8
%F=getelementptr inbounds i8,i8*%y,i64 16
%G=bitcast i8*%F to i32*
store i32 3,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 60)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177336,i32*%J,align 4
%K=getelementptr inbounds i8,i8*%H,i64 56
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=load i8*,i8**%e,align 8
%N=bitcast i8*%H to i8**
store i8*%M,i8**%N,align 8
call void@sml_raise(i8*inreg%H)#1
unreachable
O:
%P=load i8*,i8**%d,align 8
%Q=getelementptr inbounds i8,i8*%s,i64 8
%R=bitcast i8*%Q to i8***
%S=load i8**,i8***%R,align 8
%T=load i8*,i8**%S,align 8
%U=load i8*,i8**%l,align 8
%V=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2394(i8*inreg%U,i8*inreg%P,i8*inreg%T)
ret i8*%V
W:
%X=getelementptr inbounds i8,i8*%s,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8*%ab to i32*
%ad=load i32,i32*%ac,align 4
%ae=icmp eq i32%ad,2
br i1%ae,label%af,label%gT
af:
%ag=getelementptr inbounds i8,i8*%ab,i64 8
%ah=bitcast i8*%ag to i8***
%ai=load i8**,i8***%ah,align 8
%aj=load i8*,i8**%ai,align 8
%ak=bitcast i8*%aj to i32*
%al=load i32,i32*%ak,align 4
%am=icmp eq i32%al,8
br i1%am,label%an,label%gT
an:
%ao=getelementptr inbounds i8,i8*%aj,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%e,align 8
%ar=getelementptr inbounds i8,i8*%Z,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=bitcast i8*%at to i8**
%av=load i8*,i8**%au,align 8
%aw=getelementptr inbounds i8,i8*%at,i64 8
%ax=bitcast i8*%aw to i8**
%ay=load i8*,i8**%ax,align 8
store i8*%ay,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%Z,i64 16
%aA=bitcast i8*%az to i8**
%aB=load i8*,i8**%aA,align 8
store i8*%aB,i8**%g,align 8
%aC=load i8*,i8**%d,align 8
%aD=load i8*,i8**%l,align 8
%aE=call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%aD,i8*inreg%aC,i8*inreg%av)
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%h,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 8
%aI=bitcast i8*%aH to i8**
%aJ=load i8*,i8**%aI,align 8
store i8*%aJ,i8**%i,align 8
%aK=load i8*,i8**%d,align 8
%aL=load i8*,i8**%f,align 8
%aM=load i8*,i8**%l,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%aN=call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%aM,i8*inreg%aK,i8*inreg%aL)
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%d,align 8
%aQ=getelementptr inbounds i8,i8*%aN,i64 8
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%f,align 8
%aT=load i8*,i8**%i,align 8
%aU=bitcast i8*%aT to i32*
%aV=load i32,i32*%aU,align 4
%aW=icmp eq i32%aV,0
br i1%aW,label%aX,label%ea
aX:
%aY=bitcast i8*%aS to i32*
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
%a1=load i8*,i8**%a0,align 8
store i8*%a1,i8**%j,align 8
%a2=load i32,i32*%aY,align 4
%a3=icmp eq i32%a2,0
br i1%a3,label%a5,label%a4
a4:
store i8*null,i8**%j,align 8
br label%ea
a5:
store i8*null,i8**%i,align 8
%a6=getelementptr inbounds i8,i8*%aS,i64 8
%a7=bitcast i8*%a6 to i8**
%a8=load i8*,i8**%a7,align 8
store i8*%a8,i8**%f,align 8
%a9=call i8*@sml_alloc(i32 inreg 20)#0
%ba=getelementptr inbounds i8,i8*%a9,i64 -4
%bb=bitcast i8*%ba to i32*
store i32 1342177296,i32*%bb,align 4
store i8*%a9,i8**%i,align 8
%bc=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bd=bitcast i8*%a9 to i8**
store i8*%bc,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a9,i64 8
%bf=bitcast i8*%be to i8**
store i8*null,i8**%bf,align 8
%bg=getelementptr inbounds i8,i8*%a9,i64 16
%bh=bitcast i8*%bg to i32*
store i32 3,i32*%bh,align 4
%bi=call i8*@sml_alloc(i32 inreg 20)#0
%bj=getelementptr inbounds i8,i8*%bi,i64 -4
%bk=bitcast i8*%bj to i32*
store i32 1342177296,i32*%bk,align 4
store i8*%bi,i8**%d,align 8
%bl=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bm=bitcast i8*%bi to i8**
store i8*%bl,i8**%bm,align 8
%bn=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bo=getelementptr inbounds i8,i8*%bi,i64 8
%bp=bitcast i8*%bo to i8**
store i8*%bn,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bi,i64 16
%br=bitcast i8*%bq to i32*
store i32 3,i32*%br,align 4
%bs=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%bt=getelementptr inbounds i8,i8*%bs,i64 16
%bu=bitcast i8*%bt to i8*(i8*,i8*)**
%bv=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bu,align 8
%bw=bitcast i8*%bs to i8**
%bx=load i8*,i8**%bw,align 8
store i8*%bx,i8**%h,align 8
%by=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bz=getelementptr inbounds i8,i8*%by,i64 16
%bA=bitcast i8*%bz to i8*(i8*,i8*)**
%bB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bA,align 8
%bC=bitcast i8*%by to i8**
%bD=load i8*,i8**%bC,align 8
%bE=call fastcc i8*%bB(i8*inreg%bD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iY,i64 0,i32 2)to i8*))
%bF=getelementptr inbounds i8,i8*%bE,i64 16
%bG=bitcast i8*%bF to i8*(i8*,i8*)**
%bH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bG,align 8
%bI=bitcast i8*%bE to i8**
%bJ=load i8*,i8**%bI,align 8
%bK=load i8*,i8**%d,align 8
%bL=call fastcc i8*%bH(i8*inreg%bJ,i8*inreg%bK)
%bM=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bN=call fastcc i8*%bv(i8*inreg%bM,i8*inreg%bL)
store i8*%bN,i8**%h,align 8
%bO=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bP=getelementptr inbounds i8,i8*%bO,i64 16
%bQ=bitcast i8*%bP to i8*(i8*,i8*)**
%bR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bQ,align 8
%bS=bitcast i8*%bO to i8**
%bT=load i8*,i8**%bS,align 8
%bU=call fastcc i8*%bR(i8*inreg%bT,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iZ,i64 0,i32 2)to i8*))
%bV=getelementptr inbounds i8,i8*%bU,i64 16
%bW=bitcast i8*%bV to i8*(i8*,i8*)**
%bX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bW,align 8
%bY=bitcast i8*%bU to i8**
%bZ=load i8*,i8**%bY,align 8
%b0=bitcast i8**%l to i8***
%b1=load i8**,i8***%b0,align 8
store i8*null,i8**%l,align 8
%b2=load i8*,i8**%b1,align 8
%b3=call fastcc i8*%bX(i8*inreg%bZ,i8*inreg%b2)
%b4=getelementptr inbounds i8,i8*%b3,i64 16
%b5=bitcast i8*%b4 to i8*(i8*,i8*)**
%b6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b5,align 8
%b7=bitcast i8*%b3 to i8**
%b8=load i8*,i8**%b7,align 8
%b9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ca=call fastcc i8*%b6(i8*inreg%b8,i8*inreg%b9)
store i8*%ca,i8**%i,align 8
%cb=call i8*@sml_alloc(i32 inreg 20)#0
%cc=getelementptr inbounds i8,i8*%cb,i64 -4
%cd=bitcast i8*%cc to i32*
store i32 1342177296,i32*%cd,align 4
store i8*%cb,i8**%d,align 8
%ce=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cf=bitcast i8*%cb to i8**
store i8*%ce,i8**%cf,align 8
%cg=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ch=getelementptr inbounds i8,i8*%cb,i64 8
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%cb,i64 16
%ck=bitcast i8*%cj to i32*
store i32 3,i32*%ck,align 4
%cl=load i8*,i8**%e,align 8
%cm=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%cl)
store i8*%cm,i8**%h,align 8
%cn=call i8*@sml_alloc(i32 inreg 20)#0
%co=getelementptr inbounds i8,i8*%cn,i64 -4
%cp=bitcast i8*%co to i32*
store i32 1342177296,i32*%cp,align 4
store i8*%cn,i8**%i,align 8
%cq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cr=bitcast i8*%cn to i8**
store i8*%cq,i8**%cr,align 8
%cs=getelementptr inbounds i8,i8*%cn,i64 8
%ct=bitcast i8*%cs to i8**
store i8*null,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cn,i64 16
%cv=bitcast i8*%cu to i32*
store i32 3,i32*%cv,align 4
%cw=call i8*@sml_alloc(i32 inreg 20)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177296,i32*%cy,align 4
store i8*%cw,i8**%e,align 8
%cz=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=getelementptr inbounds i8,i8*%cw,i64 16
%cF=bitcast i8*%cE to i32*
store i32 3,i32*%cF,align 4
%cG=call i8*@sml_alloc(i32 inreg 20)#0
%cH=getelementptr inbounds i8,i8*%cG,i64 -4
%cI=bitcast i8*%cH to i32*
store i32 1342177296,i32*%cI,align 4
store i8*%cG,i8**%h,align 8
%cJ=getelementptr inbounds i8,i8*%cG,i64 4
%cK=bitcast i8*%cJ to i32*
store i32 0,i32*%cK,align 1
%cL=bitcast i8*%cG to i32*
store i32 16,i32*%cL,align 4
%cM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cN=getelementptr inbounds i8,i8*%cG,i64 8
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cG,i64 16
%cQ=bitcast i8*%cP to i32*
store i32 2,i32*%cQ,align 4
%cR=call i8*@sml_alloc(i32 inreg 20)#0
%cS=getelementptr inbounds i8,i8*%cR,i64 -4
%cT=bitcast i8*%cS to i32*
store i32 1342177296,i32*%cT,align 4
store i8*%cR,i8**%e,align 8
%cU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cV=bitcast i8*%cR to i8**
store i8*%cU,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cR,i64 8
%cX=bitcast i8*%cW to i8**
store i8*null,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cR,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 3,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
store i8*%c0,i8**%f,align 8
%c3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=call i8*@sml_alloc(i32 inreg 20)#0
%db=getelementptr inbounds i8,i8*%da,i64 -4
%dc=bitcast i8*%db to i32*
store i32 1342177296,i32*%dc,align 4
store i8*%da,i8**%e,align 8
%dd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%de=bitcast i8*%da to i8**
store i8*%dd,i8**%de,align 8
%df=load i8*,i8**%g,align 8
%dg=getelementptr inbounds i8,i8*%da,i64 8
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%da,i64 16
%dj=bitcast i8*%di to i32*
store i32 3,i32*%dj,align 4
%dk=call i8*@sml_alloc(i32 inreg 20)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177296,i32*%dm,align 4
store i8*%dk,i8**%f,align 8
%dn=getelementptr inbounds i8,i8*%dk,i64 4
%do=bitcast i8*%dn to i32*
store i32 0,i32*%do,align 1
%dp=bitcast i8*%dk to i32*
store i32 28,i32*%dp,align 4
%dq=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dr=getelementptr inbounds i8,i8*%dk,i64 8
%ds=bitcast i8*%dr to i8**
store i8*%dq,i8**%ds,align 8
%dt=getelementptr inbounds i8,i8*%dk,i64 16
%du=bitcast i8*%dt to i32*
store i32 2,i32*%du,align 4
%dv=call i8*@sml_alloc(i32 inreg 28)#0
%dw=getelementptr inbounds i8,i8*%dv,i64 -4
%dx=bitcast i8*%dw to i32*
store i32 1342177304,i32*%dx,align 4
store i8*%dv,i8**%e,align 8
%dy=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dz=bitcast i8*%dv to i8**
store i8*%dy,i8**%dz,align 8
%dA=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dB=getelementptr inbounds i8,i8*%dv,i64 8
%dC=bitcast i8*%dB to i8**
store i8*%dA,i8**%dC,align 8
%dD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dE=getelementptr inbounds i8,i8*%dv,i64 16
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dv,i64 24
%dH=bitcast i8*%dG to i32*
store i32 7,i32*%dH,align 4
%dI=call i8*@sml_alloc(i32 inreg 20)#0
%dJ=getelementptr inbounds i8,i8*%dI,i64 -4
%dK=bitcast i8*%dJ to i32*
store i32 1342177296,i32*%dK,align 4
store i8*%dI,i8**%f,align 8
%dL=bitcast i8*%dI to i64*
store i64 0,i64*%dL,align 4
%dM=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dN=getelementptr inbounds i8,i8*%dI,i64 8
%dO=bitcast i8*%dN to i8**
store i8*%dM,i8**%dO,align 8
%dP=getelementptr inbounds i8,i8*%dI,i64 16
%dQ=bitcast i8*%dP to i32*
store i32 2,i32*%dQ,align 4
%dR=call i8*@sml_alloc(i32 inreg 20)#0
%dS=getelementptr inbounds i8,i8*%dR,i64 -4
%dT=bitcast i8*%dS to i32*
store i32 1342177296,i32*%dT,align 4
store i8*%dR,i8**%e,align 8
%dU=bitcast i8*%dR to i64*
store i64 0,i64*%dU,align 4
%dV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dW=getelementptr inbounds i8,i8*%dR,i64 8
%dX=bitcast i8*%dW to i8**
store i8*%dV,i8**%dX,align 8
%dY=getelementptr inbounds i8,i8*%dR,i64 16
%dZ=bitcast i8*%dY to i32*
store i32 2,i32*%dZ,align 4
%d0=call i8*@sml_alloc(i32 inreg 20)#0
%d1=getelementptr inbounds i8,i8*%d0,i64 -4
%d2=bitcast i8*%d1 to i32*
store i32 1342177296,i32*%d2,align 4
%d3=load i8*,i8**%d,align 8
%d4=bitcast i8*%d0 to i8**
store i8*%d3,i8**%d4,align 8
%d5=load i8*,i8**%e,align 8
%d6=getelementptr inbounds i8,i8*%d0,i64 8
%d7=bitcast i8*%d6 to i8**
store i8*%d5,i8**%d7,align 8
%d8=getelementptr inbounds i8,i8*%d0,i64 16
%d9=bitcast i8*%d8 to i32*
store i32 3,i32*%d9,align 4
ret i8*%d0
ea:
%eb=load i8*,i8**%l,align 8
%ec=getelementptr inbounds i8,i8*%eb,i64 24
%ed=bitcast i8*%ec to i8**
%ee=load i8*,i8**%ed,align 8
store i8*null,i8**%i,align 8
%ef=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%ee,i8*inreg%aT)
%eg=bitcast i8*%ef to i8**
%eh=load i8*,i8**%eg,align 8
store i8*%eh,i8**%i,align 8
%ei=getelementptr inbounds i8,i8*%ef,i64 8
%ej=bitcast i8*%ei to i8**
%ek=load i8*,i8**%ej,align 8
store i8*%ek,i8**%j,align 8
%el=load i8*,i8**%l,align 8
%em=getelementptr inbounds i8,i8*%el,i64 24
%en=bitcast i8*%em to i8**
%eo=load i8*,i8**%en,align 8
%ep=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eq=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%eo,i8*inreg%ep)
%er=bitcast i8*%eq to i8**
%es=load i8*,i8**%er,align 8
store i8*%es,i8**%f,align 8
%et=getelementptr inbounds i8,i8*%eq,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
store i8*%ev,i8**%k,align 8
%ew=call i8*@sml_alloc(i32 inreg 20)#0
%ex=getelementptr inbounds i8,i8*%ew,i64 -4
%ey=bitcast i8*%ex to i32*
store i32 1342177296,i32*%ey,align 4
store i8*%ew,i8**%m,align 8
%ez=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eA=bitcast i8*%ew to i8**
store i8*%ez,i8**%eA,align 8
%eB=getelementptr inbounds i8,i8*%ew,i64 8
%eC=bitcast i8*%eB to i8**
store i8*null,i8**%eC,align 8
%eD=getelementptr inbounds i8,i8*%ew,i64 16
%eE=bitcast i8*%eD to i32*
store i32 3,i32*%eE,align 4
%eF=call i8*@sml_alloc(i32 inreg 20)#0
%eG=getelementptr inbounds i8,i8*%eF,i64 -4
%eH=bitcast i8*%eG to i32*
store i32 1342177296,i32*%eH,align 4
store i8*%eF,i8**%f,align 8
%eI=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eJ=bitcast i8*%eF to i8**
store i8*%eI,i8**%eJ,align 8
%eK=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%eL=getelementptr inbounds i8,i8*%eF,i64 8
%eM=bitcast i8*%eL to i8**
store i8*%eK,i8**%eM,align 8
%eN=getelementptr inbounds i8,i8*%eF,i64 16
%eO=bitcast i8*%eN to i32*
store i32 3,i32*%eO,align 4
%eP=call i8*@sml_alloc(i32 inreg 20)#0
%eQ=getelementptr inbounds i8,i8*%eP,i64 -4
%eR=bitcast i8*%eQ to i32*
store i32 1342177296,i32*%eR,align 4
store i8*%eP,i8**%m,align 8
%eS=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eT=bitcast i8*%eP to i8**
store i8*%eS,i8**%eT,align 8
%eU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eV=getelementptr inbounds i8,i8*%eP,i64 8
%eW=bitcast i8*%eV to i8**
store i8*%eU,i8**%eW,align 8
%eX=getelementptr inbounds i8,i8*%eP,i64 16
%eY=bitcast i8*%eX to i32*
store i32 3,i32*%eY,align 4
%eZ=call i8*@sml_alloc(i32 inreg 20)#0
%e0=getelementptr inbounds i8,i8*%eZ,i64 -4
%e1=bitcast i8*%e0 to i32*
store i32 1342177296,i32*%e1,align 4
store i8*%eZ,i8**%d,align 8
%e2=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%e3=bitcast i8*%eZ to i8**
store i8*%e2,i8**%e3,align 8
%e4=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%e5=getelementptr inbounds i8,i8*%eZ,i64 8
%e6=bitcast i8*%e5 to i8**
store i8*%e4,i8**%e6,align 8
%e7=getelementptr inbounds i8,i8*%eZ,i64 16
%e8=bitcast i8*%e7 to i32*
store i32 3,i32*%e8,align 4
%e9=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%fa=getelementptr inbounds i8,i8*%e9,i64 16
%fb=bitcast i8*%fa to i8*(i8*,i8*)**
%fc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fb,align 8
%fd=bitcast i8*%e9 to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%f,align 8
%ff=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fg=getelementptr inbounds i8,i8*%ff,i64 16
%fh=bitcast i8*%fg to i8*(i8*,i8*)**
%fi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fh,align 8
%fj=bitcast i8*%ff to i8**
%fk=load i8*,i8**%fj,align 8
%fl=call fastcc i8*%fi(i8*inreg%fk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iW,i64 0,i32 2)to i8*))
%fm=getelementptr inbounds i8,i8*%fl,i64 16
%fn=bitcast i8*%fm to i8*(i8*,i8*)**
%fo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fn,align 8
%fp=bitcast i8*%fl to i8**
%fq=load i8*,i8**%fp,align 8
%fr=load i8*,i8**%d,align 8
%fs=call fastcc i8*%fo(i8*inreg%fq,i8*inreg%fr)
%ft=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fu=call fastcc i8*%fc(i8*inreg%ft,i8*inreg%fs)
store i8*%fu,i8**%f,align 8
%fv=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fw=getelementptr inbounds i8,i8*%fv,i64 16
%fx=bitcast i8*%fw to i8*(i8*,i8*)**
%fy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fx,align 8
%fz=bitcast i8*%fv to i8**
%fA=load i8*,i8**%fz,align 8
%fB=call fastcc i8*%fy(i8*inreg%fA,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@iX,i64 0,i32 2)to i8*))
%fC=getelementptr inbounds i8,i8*%fB,i64 16
%fD=bitcast i8*%fC to i8*(i8*,i8*)**
%fE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fD,align 8
%fF=bitcast i8*%fB to i8**
%fG=load i8*,i8**%fF,align 8
%fH=bitcast i8**%l to i8***
%fI=load i8**,i8***%fH,align 8
store i8*null,i8**%l,align 8
%fJ=load i8*,i8**%fI,align 8
%fK=call fastcc i8*%fE(i8*inreg%fG,i8*inreg%fJ)
%fL=getelementptr inbounds i8,i8*%fK,i64 16
%fM=bitcast i8*%fL to i8*(i8*,i8*)**
%fN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fM,align 8
%fO=bitcast i8*%fK to i8**
%fP=load i8*,i8**%fO,align 8
%fQ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fR=call fastcc i8*%fN(i8*inreg%fP,i8*inreg%fQ)
store i8*%fR,i8**%d,align 8
%fS=call i8*@sml_alloc(i32 inreg 20)#0
%fT=getelementptr inbounds i8,i8*%fS,i64 -4
%fU=bitcast i8*%fT to i32*
store i32 1342177296,i32*%fU,align 4
store i8*%fS,i8**%h,align 8
%fV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fW=bitcast i8*%fS to i8**
store i8*%fV,i8**%fW,align 8
%fX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fY=getelementptr inbounds i8,i8*%fS,i64 8
%fZ=bitcast i8*%fY to i8**
store i8*%fX,i8**%fZ,align 8
%f0=getelementptr inbounds i8,i8*%fS,i64 16
%f1=bitcast i8*%f0 to i32*
store i32 3,i32*%f1,align 4
%f2=call i8*@sml_alloc(i32 inreg 36)#0
%f3=getelementptr inbounds i8,i8*%f2,i64 -4
%f4=bitcast i8*%f3 to i32*
store i32 1342177312,i32*%f4,align 4
store i8*%f2,i8**%d,align 8
%f5=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%f6=bitcast i8*%f2 to i8**
store i8*%f5,i8**%f6,align 8
%f7=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%f8=getelementptr inbounds i8,i8*%f2,i64 8
%f9=bitcast i8*%f8 to i8**
store i8*%f7,i8**%f9,align 8
%ga=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%gb=getelementptr inbounds i8,i8*%f2,i64 16
%gc=bitcast i8*%gb to i8**
store i8*%ga,i8**%gc,align 8
%gd=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ge=getelementptr inbounds i8,i8*%f2,i64 24
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=getelementptr inbounds i8,i8*%f2,i64 32
%gh=bitcast i8*%gg to i32*
store i32 15,i32*%gh,align 4
%gi=call i8*@sml_alloc(i32 inreg 20)#0
%gj=getelementptr inbounds i8,i8*%gi,i64 -4
%gk=bitcast i8*%gj to i32*
store i32 1342177296,i32*%gk,align 4
store i8*%gi,i8**%e,align 8
%gl=getelementptr inbounds i8,i8*%gi,i64 4
%gm=bitcast i8*%gl to i32*
store i32 0,i32*%gm,align 1
%gn=bitcast i8*%gi to i32*
store i32 1,i32*%gn,align 4
%go=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gp=getelementptr inbounds i8,i8*%gi,i64 8
%gq=bitcast i8*%gp to i8**
store i8*%go,i8**%gq,align 8
%gr=getelementptr inbounds i8,i8*%gi,i64 16
%gs=bitcast i8*%gr to i32*
store i32 2,i32*%gs,align 4
%gt=call i8*@sml_alloc(i32 inreg 20)#0
%gu=getelementptr inbounds i8,i8*%gt,i64 -4
%gv=bitcast i8*%gu to i32*
store i32 1342177296,i32*%gv,align 4
store i8*%gt,i8**%d,align 8
%gw=getelementptr inbounds i8,i8*%gt,i64 4
%gx=bitcast i8*%gw to i32*
store i32 0,i32*%gx,align 1
%gy=bitcast i8*%gt to i32*
store i32 1,i32*%gy,align 4
%gz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gA=getelementptr inbounds i8,i8*%gt,i64 8
%gB=bitcast i8*%gA to i8**
store i8*%gz,i8**%gB,align 8
%gC=getelementptr inbounds i8,i8*%gt,i64 16
%gD=bitcast i8*%gC to i32*
store i32 2,i32*%gD,align 4
%gE=call i8*@sml_alloc(i32 inreg 20)#0
%gF=getelementptr inbounds i8,i8*%gE,i64 -4
%gG=bitcast i8*%gF to i32*
store i32 1342177296,i32*%gG,align 4
%gH=load i8*,i8**%h,align 8
%gI=bitcast i8*%gE to i8**
store i8*%gH,i8**%gI,align 8
%gJ=load i8*,i8**%d,align 8
%gK=getelementptr inbounds i8,i8*%gE,i64 8
%gL=bitcast i8*%gK to i8**
store i8*%gJ,i8**%gL,align 8
%gM=getelementptr inbounds i8,i8*%gE,i64 16
%gN=bitcast i8*%gM to i32*
store i32 3,i32*%gN,align 4
ret i8*%gE
gO:
%gP=call fastcc i8*@_SMLLLN12ElaborateSQL8getSpineE_2388(i8*inreg%s)
%gQ=load i8*,i8**%d,align 8
%gR=load i8*,i8**%l,align 8
%gS=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2401(i8*inreg%gR,i8*inreg%gQ,i8*inreg%gP)
ret i8*%gS
gT:
store i8*null,i8**%l,align 8
%gU=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%gU,i8**%d,align 8
%gV=call i8*@sml_alloc(i32 inreg 28)#0
%gW=getelementptr inbounds i8,i8*%gV,i64 -4
%gX=bitcast i8*%gW to i32*
store i32 1342177304,i32*%gX,align 4
store i8*%gV,i8**%e,align 8
%gY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gZ=bitcast i8*%gV to i8**
store i8*%gY,i8**%gZ,align 8
%g0=getelementptr inbounds i8,i8*%gV,i64 8
%g1=bitcast i8*%g0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@iU,i64 0,i32 2,i64 0),i8**%g1,align 8
%g2=getelementptr inbounds i8,i8*%gV,i64 16
%g3=bitcast i8*%g2 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[18x i8]}>,<{[4x i8],i32,[18x i8]}>*@iV,i64 0,i32 2,i64 0),i8**%g3,align 8
%g4=getelementptr inbounds i8,i8*%gV,i64 24
%g5=bitcast i8*%g4 to i32*
store i32 7,i32*%g5,align 4
%g6=call i8*@sml_alloc(i32 inreg 60)#0
%g7=getelementptr inbounds i8,i8*%g6,i64 -4
%g8=bitcast i8*%g7 to i32*
store i32 1342177336,i32*%g8,align 4
%g9=getelementptr inbounds i8,i8*%g6,i64 56
%ha=bitcast i8*%g9 to i32*
store i32 1,i32*%ha,align 4
%hb=load i8*,i8**%e,align 8
%hc=bitcast i8*%g6 to i8**
store i8*%hb,i8**%hc,align 8
call void@sml_raise(i8*inreg%g6)#1
unreachable
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2401(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
v:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%m,align 8
%o=load atomic i32,i32*@sml_check_flag unordered,align 4
%p=icmp eq i32%o,0
br i1%p,label%t,label%q
q:
call void@sml_check(i32 inreg%o)
%r=load i8*,i8**%e,align 8
%s=load i8*,i8**%d,align 8
br label%t
t:
%u=phi i8*[%s,%q],[%b,%v]
%w=phi i8*[%r,%q],[%c,%v]
store i8*null,i8**%e,align 8
%x=icmp eq i8*%w,null
br i1%x,label%y,label%S
y:
store i8*null,i8**%m,align 8
%z=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%z,i8**%d,align 8
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
store i8*%A,i8**%e,align 8
%D=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@ja,i64 0,i32 2,i64 0),i8**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[10x i8]}>,<{[4x i8],i32,[10x i8]}>*@jb,i64 0,i32 2,i64 0),i8**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 7,i32*%K,align 4
%L=call i8*@sml_alloc(i32 inreg 60)#0
%M=getelementptr inbounds i8,i8*%L,i64 -4
%N=bitcast i8*%M to i32*
store i32 1342177336,i32*%N,align 4
%O=getelementptr inbounds i8,i8*%L,i64 56
%P=bitcast i8*%O to i32*
store i32 1,i32*%P,align 4
%Q=load i8*,i8**%e,align 8
%R=bitcast i8*%L to i8**
store i8*%Q,i8**%R,align 8
call void@sml_raise(i8*inreg%L)#1
unreachable
S:
%T=bitcast i8*%w to i8**
%U=load i8*,i8**%T,align 8
%V=bitcast i8*%U to i32*
%W=load i32,i32*%V,align 4
%X=icmp eq i32%W,2
br i1%X,label%Y,label%hn
Y:
%Z=getelementptr inbounds i8,i8*%U,i64 8
%aa=bitcast i8*%Z to i8**
%ab=load i8*,i8**%aa,align 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=bitcast i8*%ad to i32*
%af=load i32,i32*%ae,align 4
switch i32%af,label%hn[
i32 8,label%cS
i32 13,label%ag
]
ag:
%ah=getelementptr inbounds i8,i8*%ad,i64 8
%ai=bitcast i8*%ah to i8**
%aj=load i8*,i8**%ai,align 8
store i8*%aj,i8**%e,align 8
%ak=getelementptr inbounds i8,i8*%ab,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%f,align 8
%an=getelementptr inbounds i8,i8*%w,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
%aq=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%ar=call fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2401(i8*inreg%aq,i8*inreg%u,i8*inreg%ap)
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
store i8*%at,i8**%d,align 8
%au=getelementptr inbounds i8,i8*%ar,i64 8
%av=bitcast i8*%au to i8**
%aw=load i8*,i8**%av,align 8
%ax=load i8*,i8**%m,align 8
%ay=getelementptr inbounds i8,i8*%ax,i64 24
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%aA,i8*inreg%aw)
%aC=bitcast i8*%aB to i8**
%aD=load i8*,i8**%aC,align 8
store i8*%aD,i8**%g,align 8
%aE=getelementptr inbounds i8,i8*%aB,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
store i8*%aG,i8**%h,align 8
%aH=call fastcc i8*@_SMLLLN12ElaborateSQL6getLocE_1281(i8*inreg%aG)
store i8*%aH,i8**%i,align 8
%aI=call i8*@sml_alloc(i32 inreg 20)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177296,i32*%aK,align 4
%aL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=getelementptr inbounds i8,i8*%aI,i64 16
%aR=bitcast i8*%aQ to i32*
store i32 3,i32*%aR,align 4
%aS=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%aI)
store i8*%aS,i8**%f,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%i,align 8
%aW=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aT,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*null,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aT,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 3,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=getelementptr inbounds i8,i8*%a2,i64 -4
%a4=bitcast i8*%a3 to i32*
store i32 1342177296,i32*%a4,align 4
store i8*%a2,i8**%g,align 8
%a5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a6=bitcast i8*%a2 to i8**
store i8*%a5,i8**%a6,align 8
%a7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%a8=getelementptr inbounds i8,i8*%a2,i64 8
%a9=bitcast i8*%a8 to i8**
store i8*%a7,i8**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a2,i64 16
%bb=bitcast i8*%ba to i32*
store i32 3,i32*%bb,align 4
%bc=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%bd=getelementptr inbounds i8,i8*%bc,i64 16
%be=bitcast i8*%bd to i8*(i8*,i8*)**
%bf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%be,align 8
%bg=bitcast i8*%bc to i8**
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%d,align 8
%bi=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8*(i8*,i8*)**
%bl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bk,align 8
%bm=bitcast i8*%bi to i8**
%bn=load i8*,i8**%bm,align 8
%bo=call fastcc i8*%bl(i8*inreg%bn,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i8,i64 0,i32 2)to i8*))
%bp=getelementptr inbounds i8,i8*%bo,i64 16
%bq=bitcast i8*%bp to i8*(i8*,i8*)**
%br=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bq,align 8
%bs=bitcast i8*%bo to i8**
%bt=load i8*,i8**%bs,align 8
%bu=load i8*,i8**%g,align 8
%bv=call fastcc i8*%br(i8*inreg%bt,i8*inreg%bu)
%bw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bx=call fastcc i8*%bf(i8*inreg%bw,i8*inreg%bv)
store i8*%bx,i8**%d,align 8
%by=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%bz=getelementptr inbounds i8,i8*%by,i64 16
%bA=bitcast i8*%bz to i8*(i8*,i8*)**
%bB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bA,align 8
%bC=bitcast i8*%by to i8**
%bD=load i8*,i8**%bC,align 8
%bE=call fastcc i8*%bB(i8*inreg%bD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i9,i64 0,i32 2)to i8*))
%bF=getelementptr inbounds i8,i8*%bE,i64 16
%bG=bitcast i8*%bF to i8*(i8*,i8*)**
%bH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bG,align 8
%bI=bitcast i8*%bE to i8**
%bJ=load i8*,i8**%bI,align 8
%bK=bitcast i8**%m to i8***
%bL=load i8**,i8***%bK,align 8
store i8*null,i8**%m,align 8
%bM=load i8*,i8**%bL,align 8
%bN=call fastcc i8*%bH(i8*inreg%bJ,i8*inreg%bM)
%bO=getelementptr inbounds i8,i8*%bN,i64 16
%bP=bitcast i8*%bO to i8*(i8*,i8*)**
%bQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bP,align 8
%bR=bitcast i8*%bN to i8**
%bS=load i8*,i8**%bR,align 8
%bT=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bU=call fastcc i8*%bQ(i8*inreg%bS,i8*inreg%bT)
store i8*%bU,i8**%g,align 8
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%i,align 8
%bY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
%b5=call i8*@sml_alloc(i32 inreg 36)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177312,i32*%b7,align 4
store i8*%b5,i8**%d,align 8
%b8=getelementptr inbounds i8,i8*%b5,i64 4
%b9=bitcast i8*%b8 to i32*
store i32 0,i32*%b9,align 1
%ca=bitcast i8*%b5 to i32*
store i32 1,i32*%ca,align 4
%cb=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cc=getelementptr inbounds i8,i8*%b5,i64 8
%cd=bitcast i8*%cc to i8**
store i8*%cb,i8**%cd,align 8
%ce=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cf=getelementptr inbounds i8,i8*%b5,i64 16
%cg=bitcast i8*%cf to i8**
store i8*%ce,i8**%cg,align 8
%ch=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ci=getelementptr inbounds i8,i8*%b5,i64 24
%cj=bitcast i8*%ci to i8**
store i8*%ch,i8**%cj,align 8
%ck=getelementptr inbounds i8,i8*%b5,i64 32
%cl=bitcast i8*%ck to i32*
store i32 14,i32*%cl,align 4
%cm=call i8*@sml_alloc(i32 inreg 20)#0
%cn=getelementptr inbounds i8,i8*%cm,i64 -4
%co=bitcast i8*%cn to i32*
store i32 1342177296,i32*%co,align 4
store i8*%cm,i8**%e,align 8
%cp=getelementptr inbounds i8,i8*%cm,i64 4
%cq=bitcast i8*%cp to i32*
store i32 0,i32*%cq,align 1
%cr=bitcast i8*%cm to i32*
store i32 27,i32*%cr,align 4
%cs=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ct=getelementptr inbounds i8,i8*%cm,i64 8
%cu=bitcast i8*%ct to i8**
store i8*%cs,i8**%cu,align 8
%cv=getelementptr inbounds i8,i8*%cm,i64 16
%cw=bitcast i8*%cv to i32*
store i32 2,i32*%cw,align 4
%cx=call i8*@sml_alloc(i32 inreg 20)#0
%cy=getelementptr inbounds i8,i8*%cx,i64 -4
%cz=bitcast i8*%cy to i32*
store i32 1342177296,i32*%cz,align 4
store i8*%cx,i8**%d,align 8
%cA=getelementptr inbounds i8,i8*%cx,i64 4
%cB=bitcast i8*%cA to i32*
store i32 0,i32*%cB,align 1
%cC=bitcast i8*%cx to i32*
store i32 1,i32*%cC,align 4
%cD=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cE=getelementptr inbounds i8,i8*%cx,i64 8
%cF=bitcast i8*%cE to i8**
store i8*%cD,i8**%cF,align 8
%cG=getelementptr inbounds i8,i8*%cx,i64 16
%cH=bitcast i8*%cG to i32*
store i32 2,i32*%cH,align 4
%cI=call i8*@sml_alloc(i32 inreg 20)#0
%cJ=getelementptr inbounds i8,i8*%cI,i64 -4
%cK=bitcast i8*%cJ to i32*
store i32 1342177296,i32*%cK,align 4
%cL=load i8*,i8**%i,align 8
%cM=bitcast i8*%cI to i8**
store i8*%cL,i8**%cM,align 8
%cN=load i8*,i8**%d,align 8
%cO=getelementptr inbounds i8,i8*%cI,i64 8
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=getelementptr inbounds i8,i8*%cI,i64 16
%cR=bitcast i8*%cQ to i32*
store i32 3,i32*%cR,align 4
ret i8*%cI
cS:
%cT=getelementptr inbounds i8,i8*%ad,i64 8
%cU=bitcast i8*%cT to i8**
%cV=load i8*,i8**%cU,align 8
store i8*%cV,i8**%e,align 8
%cW=getelementptr inbounds i8,i8*%ab,i64 8
%cX=bitcast i8*%cW to i8**
%cY=load i8*,i8**%cX,align 8
store i8*%cY,i8**%f,align 8
%cZ=getelementptr inbounds i8,i8*%w,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
%c2=icmp eq i8*%c1,null
br i1%c2,label%c3,label%dV
c3:
%c4=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%c5=getelementptr inbounds i8,i8*%c4,i64 8
%c6=bitcast i8*%c5 to i8**
%c7=load i8*,i8**%c6,align 8
store i8*%c7,i8**%d,align 8
%c8=call i8*@sml_alloc(i32 inreg 20)#0
%c9=getelementptr inbounds i8,i8*%c8,i64 -4
%da=bitcast i8*%c9 to i32*
store i32 1342177296,i32*%da,align 4
store i8*%c8,i8**%g,align 8
%db=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dc=bitcast i8*%c8 to i8**
store i8*%db,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c8,i64 8
%de=bitcast i8*%dd to i8**
store i8*null,i8**%de,align 8
%df=getelementptr inbounds i8,i8*%c8,i64 16
%dg=bitcast i8*%df to i32*
store i32 3,i32*%dg,align 4
%dh=call i8*@sml_alloc(i32 inreg 20)#0
%di=getelementptr inbounds i8,i8*%dh,i64 -4
%dj=bitcast i8*%di to i32*
store i32 1342177296,i32*%dj,align 4
store i8*%dh,i8**%e,align 8
%dk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%dl=bitcast i8*%dh to i8**
store i8*%dk,i8**%dl,align 8
%dm=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dn=getelementptr inbounds i8,i8*%dh,i64 8
%do=bitcast i8*%dn to i8**
store i8*%dm,i8**%do,align 8
%dp=getelementptr inbounds i8,i8*%dh,i64 16
%dq=bitcast i8*%dp to i32*
store i32 3,i32*%dq,align 4
%dr=call i8*@sml_alloc(i32 inreg 20)#0
%ds=getelementptr inbounds i8,i8*%dr,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177296,i32*%dt,align 4
store i8*%dr,i8**%f,align 8
%du=getelementptr inbounds i8,i8*%dr,i64 4
%dv=bitcast i8*%du to i32*
store i32 0,i32*%dv,align 1
%dw=bitcast i8*%dr to i32*
store i32 16,i32*%dw,align 4
%dx=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dy=getelementptr inbounds i8,i8*%dr,i64 8
%dz=bitcast i8*%dy to i8**
store i8*%dx,i8**%dz,align 8
%dA=getelementptr inbounds i8,i8*%dr,i64 16
%dB=bitcast i8*%dA to i32*
store i32 2,i32*%dB,align 4
%dC=call i8*@sml_alloc(i32 inreg 20)#0
%dD=getelementptr inbounds i8,i8*%dC,i64 -4
%dE=bitcast i8*%dD to i32*
store i32 1342177296,i32*%dE,align 4
store i8*%dC,i8**%e,align 8
%dF=bitcast i8*%dC to i64*
store i64 0,i64*%dF,align 4
%dG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dH=getelementptr inbounds i8,i8*%dC,i64 8
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dC,i64 16
%dK=bitcast i8*%dJ to i32*
store i32 2,i32*%dK,align 4
%dL=call i8*@sml_alloc(i32 inreg 20)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177296,i32*%dN,align 4
%dO=load i8*,i8**%d,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=load i8*,i8**%e,align 8
%dR=getelementptr inbounds i8,i8*%dL,i64 8
%dS=bitcast i8*%dR to i8**
store i8*%dQ,i8**%dS,align 8
%dT=getelementptr inbounds i8,i8*%dL,i64 16
%dU=bitcast i8*%dT to i32*
store i32 3,i32*%dU,align 4
ret i8*%dL
dV:
%dW=bitcast i8*%c1 to i8**
%dX=load i8*,i8**%dW,align 8
store i8*%dX,i8**%g,align 8
%dY=getelementptr inbounds i8,i8*%c1,i64 8
%dZ=bitcast i8*%dY to i8**
%d0=load i8*,i8**%dZ,align 8
store i8*%d0,i8**%h,align 8
%d1=bitcast i8*%dX to i32*
%d2=load i32,i32*%d1,align 4
switch i32%d2,label%d3[
i32 0,label%ez
i32 1,label%es
i32 2,label%el
]
d3:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%d4=load i8*,i8**@_SMLZ5Match,align 8
store i8*%d4,i8**%d,align 8
%d5=call i8*@sml_alloc(i32 inreg 20)#0
%d6=getelementptr inbounds i8,i8*%d5,i64 -4
%d7=bitcast i8*%d6 to i32*
store i32 1342177296,i32*%d7,align 4
store i8*%d5,i8**%e,align 8
%d8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d9=bitcast i8*%d5 to i8**
store i8*%d8,i8**%d9,align 8
%ea=getelementptr inbounds i8,i8*%d5,i64 8
%eb=bitcast i8*%ea to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@i6,i64 0,i32 2,i64 0),i8**%eb,align 8
%ec=getelementptr inbounds i8,i8*%d5,i64 16
%ed=bitcast i8*%ec to i32*
store i32 3,i32*%ed,align 4
%ee=call i8*@sml_alloc(i32 inreg 60)#0
%ef=getelementptr inbounds i8,i8*%ee,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 1342177336,i32*%eg,align 4
%eh=getelementptr inbounds i8,i8*%ee,i64 56
%ei=bitcast i8*%eh to i32*
store i32 1,i32*%ei,align 4
%ej=load i8*,i8**%e,align 8
%ek=bitcast i8*%ee to i8**
store i8*%ej,i8**%ek,align 8
call void@sml_raise(i8*inreg%ee)#1
unreachable
el:
%em=getelementptr inbounds i8,i8*%dX,i64 8
%en=bitcast i8*%em to i8**
%eo=load i8*,i8**%en,align 8
%ep=getelementptr inbounds i8,i8*%eo,i64 8
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
store i8*%er,i8**%i,align 8
br label%eG
es:
%et=getelementptr inbounds i8,i8*%dX,i64 8
%eu=bitcast i8*%et to i8**
%ev=load i8*,i8**%eu,align 8
%ew=getelementptr inbounds i8,i8*%ev,i64 16
%ex=bitcast i8*%ew to i8**
%ey=load i8*,i8**%ex,align 8
store i8*%ey,i8**%i,align 8
br label%eG
ez:
%eA=getelementptr inbounds i8,i8*%dX,i64 8
%eB=bitcast i8*%eA to i8**
%eC=load i8*,i8**%eB,align 8
%eD=getelementptr inbounds i8,i8*%eC,i64 16
%eE=bitcast i8*%eD to i8**
%eF=load i8*,i8**%eE,align 8
store i8*%eF,i8**%i,align 8
br label%eG
eG:
%eH=call i8*@sml_alloc(i32 inreg 20)#0
%eI=getelementptr inbounds i8,i8*%eH,i64 -4
%eJ=bitcast i8*%eI to i32*
store i32 1342177296,i32*%eJ,align 4
%eK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eL=bitcast i8*%eH to i8**
store i8*%eK,i8**%eL,align 8
%eM=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eN=getelementptr inbounds i8,i8*%eH,i64 8
%eO=bitcast i8*%eN to i8**
store i8*%eM,i8**%eO,align 8
%eP=getelementptr inbounds i8,i8*%eH,i64 16
%eQ=bitcast i8*%eP to i32*
store i32 3,i32*%eQ,align 4
%eR=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%eH)
store i8*%eR,i8**%f,align 8
%eS=load i8*,i8**%d,align 8
%eT=load i8*,i8**%g,align 8
%eU=load i8*,i8**%m,align 8
store i8*null,i8**%g,align 8
%eV=call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%eU,i8*inreg%eS,i8*inreg%eT)
%eW=bitcast i8*%eV to i8**
%eX=load i8*,i8**%eW,align 8
store i8*%eX,i8**%g,align 8
%eY=getelementptr inbounds i8,i8*%eV,i64 8
%eZ=bitcast i8*%eY to i8**
%e0=load i8*,i8**%eZ,align 8
%e1=bitcast i8*%e0 to i32*
%e2=load i32,i32*%e1,align 4
switch i32%e2,label%e3[
i32 1,label%gy
i32 0,label%fl
]
e3:
store i8*null,i8**%e,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%e4=load i8*,i8**@_SMLZ5Match,align 8
store i8*%e4,i8**%d,align 8
%e5=call i8*@sml_alloc(i32 inreg 20)#0
%e6=getelementptr inbounds i8,i8*%e5,i64 -4
%e7=bitcast i8*%e6 to i32*
store i32 1342177296,i32*%e7,align 4
store i8*%e5,i8**%e,align 8
%e8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%e9=bitcast i8*%e5 to i8**
store i8*%e8,i8**%e9,align 8
%fa=getelementptr inbounds i8,i8*%e5,i64 8
%fb=bitcast i8*%fa to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@i7,i64 0,i32 2,i64 0),i8**%fb,align 8
%fc=getelementptr inbounds i8,i8*%e5,i64 16
%fd=bitcast i8*%fc to i32*
store i32 3,i32*%fd,align 4
%fe=call i8*@sml_alloc(i32 inreg 60)#0
%ff=getelementptr inbounds i8,i8*%fe,i64 -4
%fg=bitcast i8*%ff to i32*
store i32 1342177336,i32*%fg,align 4
%fh=getelementptr inbounds i8,i8*%fe,i64 56
%fi=bitcast i8*%fh to i32*
store i32 1,i32*%fi,align 4
%fj=load i8*,i8**%e,align 8
%fk=bitcast i8*%fe to i8**
store i8*%fj,i8**%fk,align 8
call void@sml_raise(i8*inreg%fe)#1
unreachable
fl:
%fm=getelementptr inbounds i8,i8*%e0,i64 8
%fn=bitcast i8*%fm to i8**
%fo=load i8*,i8**%fn,align 8
store i8*%fo,i8**%i,align 8
%fp=call i8*@sml_alloc(i32 inreg 20)#0
%fq=getelementptr inbounds i8,i8*%fp,i64 -4
%fr=bitcast i8*%fq to i32*
store i32 1342177296,i32*%fr,align 4
store i8*%fp,i8**%j,align 8
%fs=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ft=bitcast i8*%fp to i8**
store i8*%fs,i8**%ft,align 8
%fu=getelementptr inbounds i8,i8*%fp,i64 8
%fv=bitcast i8*%fu to i8**
store i8*null,i8**%fv,align 8
%fw=getelementptr inbounds i8,i8*%fp,i64 16
%fx=bitcast i8*%fw to i32*
store i32 3,i32*%fx,align 4
%fy=call i8*@sml_alloc(i32 inreg 20)#0
%fz=getelementptr inbounds i8,i8*%fy,i64 -4
%fA=bitcast i8*%fz to i32*
store i32 1342177296,i32*%fA,align 4
store i8*%fy,i8**%e,align 8
%fB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fC=bitcast i8*%fy to i8**
store i8*%fB,i8**%fC,align 8
%fD=load i8*,i8**%f,align 8
%fE=getelementptr inbounds i8,i8*%fy,i64 8
%fF=bitcast i8*%fE to i8**
store i8*%fD,i8**%fF,align 8
%fG=getelementptr inbounds i8,i8*%fy,i64 16
%fH=bitcast i8*%fG to i32*
store i32 3,i32*%fH,align 4
%fI=call i8*@sml_alloc(i32 inreg 20)#0
%fJ=getelementptr inbounds i8,i8*%fI,i64 -4
%fK=bitcast i8*%fJ to i32*
store i32 1342177296,i32*%fK,align 4
store i8*%fI,i8**%j,align 8
%fL=getelementptr inbounds i8,i8*%fI,i64 4
%fM=bitcast i8*%fL to i32*
store i32 0,i32*%fM,align 1
%fN=bitcast i8*%fI to i32*
store i32 16,i32*%fN,align 4
%fO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fP=getelementptr inbounds i8,i8*%fI,i64 8
%fQ=bitcast i8*%fP to i8**
store i8*%fO,i8**%fQ,align 8
%fR=getelementptr inbounds i8,i8*%fI,i64 16
%fS=bitcast i8*%fR to i32*
store i32 2,i32*%fS,align 4
%fT=call i8*@sml_alloc(i32 inreg 28)#0
%fU=getelementptr inbounds i8,i8*%fT,i64 -4
%fV=bitcast i8*%fU to i32*
store i32 1342177304,i32*%fV,align 4
store i8*%fT,i8**%e,align 8
%fW=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%fX=bitcast i8*%fT to i8**
store i8*%fW,i8**%fX,align 8
%fY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%fZ=getelementptr inbounds i8,i8*%fT,i64 8
%f0=bitcast i8*%fZ to i8**
store i8*%fY,i8**%f0,align 8
%f1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f2=getelementptr inbounds i8,i8*%fT,i64 16
%f3=bitcast i8*%f2 to i8**
store i8*%f1,i8**%f3,align 8
%f4=getelementptr inbounds i8,i8*%fT,i64 24
%f5=bitcast i8*%f4 to i32*
store i32 7,i32*%f5,align 4
%f6=call i8*@sml_alloc(i32 inreg 20)#0
%f7=getelementptr inbounds i8,i8*%f6,i64 -4
%f8=bitcast i8*%f7 to i32*
store i32 1342177296,i32*%f8,align 4
store i8*%f6,i8**%f,align 8
%f9=bitcast i8*%f6 to i64*
store i64 0,i64*%f9,align 4
%ga=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gb=getelementptr inbounds i8,i8*%f6,i64 8
%gc=bitcast i8*%gb to i8**
store i8*%ga,i8**%gc,align 8
%gd=getelementptr inbounds i8,i8*%f6,i64 16
%ge=bitcast i8*%gd to i32*
store i32 2,i32*%ge,align 4
%gf=call i8*@sml_alloc(i32 inreg 20)#0
%gg=getelementptr inbounds i8,i8*%gf,i64 -4
%gh=bitcast i8*%gg to i32*
store i32 1342177296,i32*%gh,align 4
store i8*%gf,i8**%e,align 8
%gi=bitcast i8*%gf to i64*
store i64 0,i64*%gi,align 4
%gj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gk=getelementptr inbounds i8,i8*%gf,i64 8
%gl=bitcast i8*%gk to i8**
store i8*%gj,i8**%gl,align 8
%gm=getelementptr inbounds i8,i8*%gf,i64 16
%gn=bitcast i8*%gm to i32*
store i32 2,i32*%gn,align 4
%go=call i8*@sml_alloc(i32 inreg 20)#0
%gp=getelementptr inbounds i8,i8*%go,i64 -4
%gq=bitcast i8*%gp to i32*
store i32 1342177296,i32*%gq,align 4
%gr=load i8*,i8**%g,align 8
%gs=bitcast i8*%go to i8**
store i8*%gr,i8**%gs,align 8
%gt=load i8*,i8**%e,align 8
%gu=getelementptr inbounds i8,i8*%go,i64 8
%gv=bitcast i8*%gu to i8**
store i8*%gt,i8**%gv,align 8
%gw=getelementptr inbounds i8,i8*%go,i64 16
%gx=bitcast i8*%gw to i32*
store i32 3,i32*%gx,align 4
br label%ht
gy:
%gz=getelementptr inbounds i8,i8*%e0,i64 8
%gA=bitcast i8*%gz to i8**
%gB=load i8*,i8**%gA,align 8
store i8*%gB,i8**%i,align 8
%gC=call i8*@sml_alloc(i32 inreg 36)#0
%gD=getelementptr inbounds i8,i8*%gC,i64 -4
%gE=bitcast i8*%gD to i32*
store i32 1342177312,i32*%gE,align 4
store i8*%gC,i8**%j,align 8
%gF=bitcast i8*%gC to i64*
store i64 0,i64*%gF,align 4
%gG=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%gH=getelementptr inbounds i8,i8*%gC,i64 8
%gI=bitcast i8*%gH to i8**
store i8*%gG,i8**%gI,align 8
%gJ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%gK=getelementptr inbounds i8,i8*%gC,i64 16
%gL=bitcast i8*%gK to i8**
store i8*%gJ,i8**%gL,align 8
%gM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gN=getelementptr inbounds i8,i8*%gC,i64 24
%gO=bitcast i8*%gN to i8**
store i8*%gM,i8**%gO,align 8
%gP=getelementptr inbounds i8,i8*%gC,i64 32
%gQ=bitcast i8*%gP to i32*
store i32 14,i32*%gQ,align 4
%gR=call i8*@sml_alloc(i32 inreg 20)#0
%gS=getelementptr inbounds i8,i8*%gR,i64 -4
%gT=bitcast i8*%gS to i32*
store i32 1342177296,i32*%gT,align 4
store i8*%gR,i8**%e,align 8
%gU=getelementptr inbounds i8,i8*%gR,i64 4
%gV=bitcast i8*%gU to i32*
store i32 0,i32*%gV,align 1
%gW=bitcast i8*%gR to i32*
store i32 27,i32*%gW,align 4
%gX=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%gY=getelementptr inbounds i8,i8*%gR,i64 8
%gZ=bitcast i8*%gY to i8**
store i8*%gX,i8**%gZ,align 8
%g0=getelementptr inbounds i8,i8*%gR,i64 16
%g1=bitcast i8*%g0 to i32*
store i32 2,i32*%g1,align 4
%g2=call i8*@sml_alloc(i32 inreg 20)#0
%g3=getelementptr inbounds i8,i8*%g2,i64 -4
%g4=bitcast i8*%g3 to i32*
store i32 1342177296,i32*%g4,align 4
store i8*%g2,i8**%f,align 8
%g5=getelementptr inbounds i8,i8*%g2,i64 4
%g6=bitcast i8*%g5 to i32*
store i32 0,i32*%g6,align 1
%g7=bitcast i8*%g2 to i32*
store i32 1,i32*%g7,align 4
%g8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%g9=getelementptr inbounds i8,i8*%g2,i64 8
%ha=bitcast i8*%g9 to i8**
store i8*%g8,i8**%ha,align 8
%hb=getelementptr inbounds i8,i8*%g2,i64 16
%hc=bitcast i8*%hb to i32*
store i32 2,i32*%hc,align 4
%hd=call i8*@sml_alloc(i32 inreg 20)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177296,i32*%hf,align 4
%hg=load i8*,i8**%g,align 8
%hh=bitcast i8*%hd to i8**
store i8*%hg,i8**%hh,align 8
%hi=load i8*,i8**%f,align 8
%hj=getelementptr inbounds i8,i8*%hd,i64 8
%hk=bitcast i8*%hj to i8**
store i8*%hi,i8**%hk,align 8
%hl=getelementptr inbounds i8,i8*%hd,i64 16
%hm=bitcast i8*%hl to i32*
store i32 3,i32*%hm,align 4
br label%ht
hn:
%ho=getelementptr inbounds i8,i8*%w,i64 8
%hp=bitcast i8*%ho to i8**
%hq=load i8*,i8**%hp,align 8
store i8*%hq,i8**%e,align 8
%hr=load i8*,i8**%m,align 8
%hs=call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%hr,i8*inreg%u,i8*inreg%U)
br label%ht
ht:
%hu=phi i8*[%hs,%hn],[%hd,%gy],[%go,%fl]
%hv=phi i8**[%e,%hn],[%h,%gy],[%h,%fl]
%hw=bitcast i8**%m to i8***
br label%hx
hx:
%hy=phi i8*[%nK,%nJ],[%hu,%ht]
%hz=phi i8**[%h,%nJ],[%hv,%ht]
%hA=load i8*,i8**%hz,align 8
%hB=bitcast i8*%hy to i8**
%hC=load i8*,i8**%hB,align 8
store i8*%hC,i8**%e,align 8
%hD=getelementptr inbounds i8,i8*%hy,i64 8
%hE=bitcast i8*%hD to i8**
%hF=load i8*,i8**%hE,align 8
store i8*%hF,i8**%f,align 8
%hG=icmp eq i8*%hA,null
br i1%hG,label%hH,label%hI
hH:
ret i8*%hy
hI:
%hJ=bitcast i8*%hA to i8**
%hK=load i8*,i8**%hJ,align 8
store i8*%hK,i8**%g,align 8
%hL=getelementptr inbounds i8,i8*%hA,i64 8
%hM=bitcast i8*%hL to i8**
%hN=load i8*,i8**%hM,align 8
store i8*%hN,i8**%h,align 8
%hO=bitcast i8*%hF to i32*
%hP=load i32,i32*%hO,align 4
%hQ=icmp ult i32%hP,2
br i1%hQ,label%h9,label%hR
hR:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%hS=load i8*,i8**@_SMLZ5Match,align 8
store i8*%hS,i8**%d,align 8
%hT=call i8*@sml_alloc(i32 inreg 20)#0
%hU=getelementptr inbounds i8,i8*%hT,i64 -4
%hV=bitcast i8*%hU to i32*
store i32 1342177296,i32*%hV,align 4
store i8*%hT,i8**%e,align 8
%hW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hX=bitcast i8*%hT to i8**
store i8*%hW,i8**%hX,align 8
%hY=getelementptr inbounds i8,i8*%hT,i64 8
%hZ=bitcast i8*%hY to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@i1,i64 0,i32 2,i64 0),i8**%hZ,align 8
%h0=getelementptr inbounds i8,i8*%hT,i64 16
%h1=bitcast i8*%h0 to i32*
store i32 3,i32*%h1,align 4
%h2=call i8*@sml_alloc(i32 inreg 60)#0
%h3=getelementptr inbounds i8,i8*%h2,i64 -4
%h4=bitcast i8*%h3 to i32*
store i32 1342177336,i32*%h4,align 4
%h5=getelementptr inbounds i8,i8*%h2,i64 56
%h6=bitcast i8*%h5 to i32*
store i32 1,i32*%h6,align 4
%h7=load i8*,i8**%e,align 8
%h8=bitcast i8*%h2 to i8**
store i8*%h7,i8**%h8,align 8
call void@sml_raise(i8*inreg%h2)#1
unreachable
h9:
%ia=getelementptr inbounds i8,i8*%hF,i64 8
%ib=bitcast i8*%ia to i8**
%ic=load i8*,i8**%ib,align 8
%id=call fastcc i8*@_SMLLLN12ElaborateSQL6getLocE_1281(i8*inreg%ic)
store i8*%id,i8**%i,align 8
%ie=load i8*,i8**%g,align 8
%if=bitcast i8*%ie to i32*
%ig=load i32,i32*%if,align 4
switch i32%ig,label%ih[
i32 0,label%iN
i32 1,label%iG
i32 2,label%iz
]
ih:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%ii=load i8*,i8**@_SMLZ5Match,align 8
store i8*%ii,i8**%d,align 8
%ij=call i8*@sml_alloc(i32 inreg 20)#0
%ik=getelementptr inbounds i8,i8*%ij,i64 -4
%il=bitcast i8*%ik to i32*
store i32 1342177296,i32*%il,align 4
store i8*%ij,i8**%e,align 8
%im=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%in=bitcast i8*%ij to i8**
store i8*%im,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%ij,i64 8
%ip=bitcast i8*%io to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@i6,i64 0,i32 2,i64 0),i8**%ip,align 8
%iq=getelementptr inbounds i8,i8*%ij,i64 16
%ir=bitcast i8*%iq to i32*
store i32 3,i32*%ir,align 4
%is=call i8*@sml_alloc(i32 inreg 60)#0
%it=getelementptr inbounds i8,i8*%is,i64 -4
%iu=bitcast i8*%it to i32*
store i32 1342177336,i32*%iu,align 4
%iv=getelementptr inbounds i8,i8*%is,i64 56
%iw=bitcast i8*%iv to i32*
store i32 1,i32*%iw,align 4
%ix=load i8*,i8**%e,align 8
%iy=bitcast i8*%is to i8**
store i8*%ix,i8**%iy,align 8
call void@sml_raise(i8*inreg%is)#1
unreachable
iz:
%iA=getelementptr inbounds i8,i8*%ie,i64 8
%iB=bitcast i8*%iA to i8**
%iC=load i8*,i8**%iB,align 8
%iD=getelementptr inbounds i8,i8*%iC,i64 8
%iE=bitcast i8*%iD to i8**
%iF=load i8*,i8**%iE,align 8
store i8*%iF,i8**%j,align 8
br label%iU
iG:
%iH=getelementptr inbounds i8,i8*%ie,i64 8
%iI=bitcast i8*%iH to i8**
%iJ=load i8*,i8**%iI,align 8
%iK=getelementptr inbounds i8,i8*%iJ,i64 16
%iL=bitcast i8*%iK to i8**
%iM=load i8*,i8**%iL,align 8
store i8*%iM,i8**%j,align 8
br label%iU
iN:
%iO=getelementptr inbounds i8,i8*%ie,i64 8
%iP=bitcast i8*%iO to i8**
%iQ=load i8*,i8**%iP,align 8
%iR=getelementptr inbounds i8,i8*%iQ,i64 16
%iS=bitcast i8*%iR to i8**
%iT=load i8*,i8**%iS,align 8
store i8*%iT,i8**%j,align 8
br label%iU
iU:
%iV=call i8*@sml_alloc(i32 inreg 20)#0
%iW=getelementptr inbounds i8,i8*%iV,i64 -4
%iX=bitcast i8*%iW to i32*
store i32 1342177296,i32*%iX,align 4
%iY=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%iZ=bitcast i8*%iV to i8**
store i8*%iY,i8**%iZ,align 8
%i0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%i1=getelementptr inbounds i8,i8*%iV,i64 8
%i2=bitcast i8*%i1 to i8**
store i8*%i0,i8**%i2,align 8
%i3=getelementptr inbounds i8,i8*%iV,i64 16
%i4=bitcast i8*%i3 to i32*
store i32 3,i32*%i4,align 4
%i5=call fastcc i8*@_SMLFN3Loc9mergeLocsE(i8*inreg%iV)
store i8*%i5,i8**%i,align 8
%i6=load i8*,i8**%d,align 8
%i7=load i8*,i8**%g,align 8
%i8=load i8*,i8**%m,align 8
store i8*null,i8**%g,align 8
%i9=call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2400(i8*inreg%i8,i8*inreg%i6,i8*inreg%i7)
%ja=bitcast i8*%i9 to i8**
%jb=load i8*,i8**%ja,align 8
store i8*%jb,i8**%g,align 8
%jc=getelementptr inbounds i8,i8*%i9,i64 8
%jd=bitcast i8*%jc to i8**
%je=load i8*,i8**%jd,align 8
store i8*%je,i8**%j,align 8
%jf=load i8*,i8**%f,align 8
%jg=bitcast i8*%jf to i32*
%jh=load i32,i32*%jg,align 4
%ji=icmp eq i32%jh,0
br i1%ji,label%jj,label%lg
jj:
%jk=getelementptr inbounds i8,i8*%jf,i64 8
%jl=bitcast i8*%jk to i8**
%jm=load i8*,i8**%jl,align 8
store i8*%jm,i8**%k,align 8
%jn=bitcast i8*%je to i32*
%jo=load i32,i32*%jn,align 4
%jp=icmp eq i32%jo,0
br i1%jp,label%jr,label%jq
jq:
store i8*null,i8**%k,align 8
br label%lg
jr:
store i8*null,i8**%j,align 8
%js=getelementptr inbounds i8,i8*%je,i64 8
%jt=bitcast i8*%js to i8**
%ju=load i8*,i8**%jt,align 8
store i8*%ju,i8**%f,align 8
%jv=call i8*@sml_alloc(i32 inreg 20)#0
%jw=getelementptr inbounds i8,i8*%jv,i64 -4
%jx=bitcast i8*%jw to i32*
store i32 1342177296,i32*%jx,align 4
store i8*%jv,i8**%j,align 8
%jy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%jz=bitcast i8*%jv to i8**
store i8*%jy,i8**%jz,align 8
%jA=getelementptr inbounds i8,i8*%jv,i64 8
%jB=bitcast i8*%jA to i8**
store i8*null,i8**%jB,align 8
%jC=getelementptr inbounds i8,i8*%jv,i64 16
%jD=bitcast i8*%jC to i32*
store i32 3,i32*%jD,align 4
%jE=call i8*@sml_alloc(i32 inreg 20)#0
%jF=getelementptr inbounds i8,i8*%jE,i64 -4
%jG=bitcast i8*%jF to i32*
store i32 1342177296,i32*%jG,align 4
store i8*%jE,i8**%g,align 8
%jH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%jI=bitcast i8*%jE to i8**
store i8*%jH,i8**%jI,align 8
%jJ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jK=getelementptr inbounds i8,i8*%jE,i64 8
%jL=bitcast i8*%jK to i8**
store i8*%jJ,i8**%jL,align 8
%jM=getelementptr inbounds i8,i8*%jE,i64 16
%jN=bitcast i8*%jM to i32*
store i32 3,i32*%jN,align 4
%jO=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%jP=getelementptr inbounds i8,i8*%jO,i64 16
%jQ=bitcast i8*%jP to i8*(i8*,i8*)**
%jR=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jQ,align 8
%jS=bitcast i8*%jO to i8**
%jT=load i8*,i8**%jS,align 8
store i8*%jT,i8**%e,align 8
%jU=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jV=getelementptr inbounds i8,i8*%jU,i64 16
%jW=bitcast i8*%jV to i8*(i8*,i8*)**
%jX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jW,align 8
%jY=bitcast i8*%jU to i8**
%jZ=load i8*,i8**%jY,align 8
%j0=call fastcc i8*%jX(i8*inreg%jZ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i4,i64 0,i32 2)to i8*))
%j1=getelementptr inbounds i8,i8*%j0,i64 16
%j2=bitcast i8*%j1 to i8*(i8*,i8*)**
%j3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%j2,align 8
%j4=bitcast i8*%j0 to i8**
%j5=load i8*,i8**%j4,align 8
%j6=load i8*,i8**%g,align 8
%j7=call fastcc i8*%j3(i8*inreg%j5,i8*inreg%j6)
%j8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%j9=call fastcc i8*%jR(i8*inreg%j8,i8*inreg%j7)
store i8*%j9,i8**%e,align 8
%ka=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%kb=getelementptr inbounds i8,i8*%ka,i64 16
%kc=bitcast i8*%kb to i8*(i8*,i8*)**
%kd=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kc,align 8
%ke=bitcast i8*%ka to i8**
%kf=load i8*,i8**%ke,align 8
%kg=call fastcc i8*%kd(i8*inreg%kf,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i5,i64 0,i32 2)to i8*))
%kh=getelementptr inbounds i8,i8*%kg,i64 16
%ki=bitcast i8*%kh to i8*(i8*,i8*)**
%kj=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ki,align 8
%kk=bitcast i8*%kg to i8**
%kl=load i8*,i8**%kk,align 8
%km=load i8**,i8***%hw,align 8
%kn=load i8*,i8**%km,align 8
%ko=call fastcc i8*%kj(i8*inreg%kl,i8*inreg%kn)
%kp=getelementptr inbounds i8,i8*%ko,i64 16
%kq=bitcast i8*%kp to i8*(i8*,i8*)**
%kr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kq,align 8
%ks=bitcast i8*%ko to i8**
%kt=load i8*,i8**%ks,align 8
%ku=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kv=call fastcc i8*%kr(i8*inreg%kt,i8*inreg%ku)
store i8*%kv,i8**%g,align 8
%kw=call i8*@sml_alloc(i32 inreg 20)#0
%kx=getelementptr inbounds i8,i8*%kw,i64 -4
%ky=bitcast i8*%kx to i32*
store i32 1342177296,i32*%ky,align 4
store i8*%kw,i8**%j,align 8
%kz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kA=bitcast i8*%kw to i8**
store i8*%kz,i8**%kA,align 8
%kB=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%kC=getelementptr inbounds i8,i8*%kw,i64 8
%kD=bitcast i8*%kC to i8**
store i8*%kB,i8**%kD,align 8
%kE=getelementptr inbounds i8,i8*%kw,i64 16
%kF=bitcast i8*%kE to i32*
store i32 3,i32*%kF,align 4
%kG=call i8*@sml_alloc(i32 inreg 28)#0
%kH=getelementptr inbounds i8,i8*%kG,i64 -4
%kI=bitcast i8*%kH to i32*
store i32 1342177304,i32*%kI,align 4
store i8*%kG,i8**%e,align 8
%kJ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kK=bitcast i8*%kG to i8**
store i8*%kJ,i8**%kK,align 8
%kL=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%kM=getelementptr inbounds i8,i8*%kG,i64 8
%kN=bitcast i8*%kM to i8**
store i8*%kL,i8**%kN,align 8
%kO=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kP=getelementptr inbounds i8,i8*%kG,i64 16
%kQ=bitcast i8*%kP to i8**
store i8*%kO,i8**%kQ,align 8
%kR=getelementptr inbounds i8,i8*%kG,i64 24
%kS=bitcast i8*%kR to i32*
store i32 7,i32*%kS,align 4
%kT=call i8*@sml_alloc(i32 inreg 20)#0
%kU=getelementptr inbounds i8,i8*%kT,i64 -4
%kV=bitcast i8*%kU to i32*
store i32 1342177296,i32*%kV,align 4
store i8*%kT,i8**%f,align 8
%kW=bitcast i8*%kT to i64*
store i64 0,i64*%kW,align 4
%kX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%kY=getelementptr inbounds i8,i8*%kT,i64 8
%kZ=bitcast i8*%kY to i8**
store i8*%kX,i8**%kZ,align 8
%k0=getelementptr inbounds i8,i8*%kT,i64 16
%k1=bitcast i8*%k0 to i32*
store i32 2,i32*%k1,align 4
%k2=call i8*@sml_alloc(i32 inreg 20)#0
%k3=getelementptr inbounds i8,i8*%k2,i64 -4
%k4=bitcast i8*%k3 to i32*
store i32 1342177296,i32*%k4,align 4
store i8*%k2,i8**%e,align 8
%k5=bitcast i8*%k2 to i64*
store i64 0,i64*%k5,align 4
%k6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%k7=getelementptr inbounds i8,i8*%k2,i64 8
%k8=bitcast i8*%k7 to i8**
store i8*%k6,i8**%k8,align 8
%k9=getelementptr inbounds i8,i8*%k2,i64 16
%la=bitcast i8*%k9 to i32*
store i32 2,i32*%la,align 4
%lb=call i8*@sml_alloc(i32 inreg 20)#0
%lc=getelementptr inbounds i8,i8*%lb,i64 -4
%ld=bitcast i8*%lc to i32*
store i32 1342177296,i32*%ld,align 4
%le=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lf=bitcast i8*%lb to i8**
store i8*%le,i8**%lf,align 8
br label%nJ
lg:
%lh=load i8*,i8**%m,align 8
%li=getelementptr inbounds i8,i8*%lh,i64 24
%lj=bitcast i8*%li to i8**
%lk=load i8*,i8**%lj,align 8
store i8*null,i8**%f,align 8
%ll=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%lk,i8*inreg%jf)
%lm=bitcast i8*%ll to i8**
%ln=load i8*,i8**%lm,align 8
store i8*%ln,i8**%f,align 8
%lo=getelementptr inbounds i8,i8*%ll,i64 8
%lp=bitcast i8*%lo to i8**
%lq=load i8*,i8**%lp,align 8
store i8*%lq,i8**%k,align 8
%lr=load i8*,i8**%m,align 8
%ls=getelementptr inbounds i8,i8*%lr,i64 24
%lt=bitcast i8*%ls to i8**
%lu=load i8*,i8**%lt,align 8
%lv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lw=call fastcc i8*@_SMLLLN12ElaborateSQL5toSQLE_2387(i8*inreg%lu,i8*inreg%lv)
%lx=bitcast i8*%lw to i8**
%ly=load i8*,i8**%lx,align 8
store i8*%ly,i8**%j,align 8
%lz=getelementptr inbounds i8,i8*%lw,i64 8
%lA=bitcast i8*%lz to i8**
%lB=load i8*,i8**%lA,align 8
store i8*%lB,i8**%l,align 8
%lC=call i8*@sml_alloc(i32 inreg 20)#0
%lD=getelementptr inbounds i8,i8*%lC,i64 -4
%lE=bitcast i8*%lD to i32*
store i32 1342177296,i32*%lE,align 4
store i8*%lC,i8**%n,align 8
%lF=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lG=bitcast i8*%lC to i8**
store i8*%lF,i8**%lG,align 8
%lH=getelementptr inbounds i8,i8*%lC,i64 8
%lI=bitcast i8*%lH to i8**
store i8*null,i8**%lI,align 8
%lJ=getelementptr inbounds i8,i8*%lC,i64 16
%lK=bitcast i8*%lJ to i32*
store i32 3,i32*%lK,align 4
%lL=call i8*@sml_alloc(i32 inreg 20)#0
%lM=getelementptr inbounds i8,i8*%lL,i64 -4
%lN=bitcast i8*%lM to i32*
store i32 1342177296,i32*%lN,align 4
store i8*%lL,i8**%j,align 8
%lO=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%lP=bitcast i8*%lL to i8**
store i8*%lO,i8**%lP,align 8
%lQ=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%lR=getelementptr inbounds i8,i8*%lL,i64 8
%lS=bitcast i8*%lR to i8**
store i8*%lQ,i8**%lS,align 8
%lT=getelementptr inbounds i8,i8*%lL,i64 16
%lU=bitcast i8*%lT to i32*
store i32 3,i32*%lU,align 4
%lV=call i8*@sml_alloc(i32 inreg 20)#0
%lW=getelementptr inbounds i8,i8*%lV,i64 -4
%lX=bitcast i8*%lW to i32*
store i32 1342177296,i32*%lX,align 4
store i8*%lV,i8**%g,align 8
%lY=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%lZ=bitcast i8*%lV to i8**
store i8*%lY,i8**%lZ,align 8
%l0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%l1=getelementptr inbounds i8,i8*%lV,i64 8
%l2=bitcast i8*%l1 to i8**
store i8*%l0,i8**%l2,align 8
%l3=getelementptr inbounds i8,i8*%lV,i64 16
%l4=bitcast i8*%l3 to i32*
store i32 3,i32*%l4,align 4
%l5=call i8*@sml_alloc(i32 inreg 20)#0
%l6=getelementptr inbounds i8,i8*%l5,i64 -4
%l7=bitcast i8*%l6 to i32*
store i32 1342177296,i32*%l7,align 4
store i8*%l5,i8**%f,align 8
%l8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%l9=bitcast i8*%l5 to i8**
store i8*%l8,i8**%l9,align 8
%ma=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%mb=getelementptr inbounds i8,i8*%l5,i64 8
%mc=bitcast i8*%mb to i8**
store i8*%ma,i8**%mc,align 8
%md=getelementptr inbounds i8,i8*%l5,i64 16
%me=bitcast i8*%md to i32*
store i32 3,i32*%me,align 4
%mf=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%mg=getelementptr inbounds i8,i8*%mf,i64 16
%mh=bitcast i8*%mg to i8*(i8*,i8*)**
%mi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mh,align 8
%mj=bitcast i8*%mf to i8**
%mk=load i8*,i8**%mj,align 8
store i8*%mk,i8**%e,align 8
%ml=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%mm=getelementptr inbounds i8,i8*%ml,i64 16
%mn=bitcast i8*%mm to i8*(i8*,i8*)**
%mo=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mn,align 8
%mp=bitcast i8*%ml to i8**
%mq=load i8*,i8**%mp,align 8
%mr=call fastcc i8*%mo(i8*inreg%mq,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i2,i64 0,i32 2)to i8*))
%ms=getelementptr inbounds i8,i8*%mr,i64 16
%mt=bitcast i8*%ms to i8*(i8*,i8*)**
%mu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mt,align 8
%mv=bitcast i8*%mr to i8**
%mw=load i8*,i8**%mv,align 8
%mx=load i8*,i8**%f,align 8
%my=call fastcc i8*%mu(i8*inreg%mw,i8*inreg%mx)
%mz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%mA=call fastcc i8*%mi(i8*inreg%mz,i8*inreg%my)
store i8*%mA,i8**%e,align 8
%mB=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%mC=getelementptr inbounds i8,i8*%mB,i64 16
%mD=bitcast i8*%mC to i8*(i8*,i8*)**
%mE=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mD,align 8
%mF=bitcast i8*%mB to i8**
%mG=load i8*,i8**%mF,align 8
%mH=call fastcc i8*%mE(i8*inreg%mG,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@i3,i64 0,i32 2)to i8*))
%mI=getelementptr inbounds i8,i8*%mH,i64 16
%mJ=bitcast i8*%mI to i8*(i8*,i8*)**
%mK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mJ,align 8
%mL=bitcast i8*%mH to i8**
%mM=load i8*,i8**%mL,align 8
%mN=load i8**,i8***%hw,align 8
%mO=load i8*,i8**%mN,align 8
%mP=call fastcc i8*%mK(i8*inreg%mM,i8*inreg%mO)
%mQ=getelementptr inbounds i8,i8*%mP,i64 16
%mR=bitcast i8*%mQ to i8*(i8*,i8*)**
%mS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mR,align 8
%mT=bitcast i8*%mP to i8**
%mU=load i8*,i8**%mT,align 8
%mV=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%mW=call fastcc i8*%mS(i8*inreg%mU,i8*inreg%mV)
store i8*%mW,i8**%f,align 8
%mX=call i8*@sml_alloc(i32 inreg 20)#0
%mY=getelementptr inbounds i8,i8*%mX,i64 -4
%mZ=bitcast i8*%mY to i32*
store i32 1342177296,i32*%mZ,align 4
store i8*%mX,i8**%g,align 8
%m0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%m1=bitcast i8*%mX to i8**
store i8*%m0,i8**%m1,align 8
%m2=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%m3=getelementptr inbounds i8,i8*%mX,i64 8
%m4=bitcast i8*%m3 to i8**
store i8*%m2,i8**%m4,align 8
%m5=getelementptr inbounds i8,i8*%mX,i64 16
%m6=bitcast i8*%m5 to i32*
store i32 3,i32*%m6,align 4
%m7=call i8*@sml_alloc(i32 inreg 28)#0
%m8=getelementptr inbounds i8,i8*%m7,i64 -4
%m9=bitcast i8*%m8 to i32*
store i32 1342177304,i32*%m9,align 4
store i8*%m7,i8**%e,align 8
%na=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%nb=bitcast i8*%m7 to i8**
store i8*%na,i8**%nb,align 8
%nc=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%nd=getelementptr inbounds i8,i8*%m7,i64 8
%ne=bitcast i8*%nd to i8**
store i8*%nc,i8**%ne,align 8
%nf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ng=getelementptr inbounds i8,i8*%m7,i64 16
%nh=bitcast i8*%ng to i8**
store i8*%nf,i8**%nh,align 8
%ni=getelementptr inbounds i8,i8*%m7,i64 24
%nj=bitcast i8*%ni to i32*
store i32 7,i32*%nj,align 4
%nk=call i8*@sml_alloc(i32 inreg 20)#0
%nl=getelementptr inbounds i8,i8*%nk,i64 -4
%nm=bitcast i8*%nl to i32*
store i32 1342177296,i32*%nm,align 4
store i8*%nk,i8**%f,align 8
%nn=bitcast i8*%nk to i64*
store i64 0,i64*%nn,align 4
%no=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%np=getelementptr inbounds i8,i8*%nk,i64 8
%nq=bitcast i8*%np to i8**
store i8*%no,i8**%nq,align 8
%nr=getelementptr inbounds i8,i8*%nk,i64 16
%ns=bitcast i8*%nr to i32*
store i32 2,i32*%ns,align 4
%nt=call i8*@sml_alloc(i32 inreg 20)#0
%nu=getelementptr inbounds i8,i8*%nt,i64 -4
%nv=bitcast i8*%nu to i32*
store i32 1342177296,i32*%nv,align 4
store i8*%nt,i8**%e,align 8
%nw=getelementptr inbounds i8,i8*%nt,i64 4
%nx=bitcast i8*%nw to i32*
store i32 0,i32*%nx,align 1
%ny=bitcast i8*%nt to i32*
store i32 1,i32*%ny,align 4
%nz=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%nA=getelementptr inbounds i8,i8*%nt,i64 8
%nB=bitcast i8*%nA to i8**
store i8*%nz,i8**%nB,align 8
%nC=getelementptr inbounds i8,i8*%nt,i64 16
%nD=bitcast i8*%nC to i32*
store i32 2,i32*%nD,align 4
%nE=call i8*@sml_alloc(i32 inreg 20)#0
%nF=getelementptr inbounds i8,i8*%nE,i64 -4
%nG=bitcast i8*%nF to i32*
store i32 1342177296,i32*%nG,align 4
%nH=load i8*,i8**%g,align 8
%nI=bitcast i8*%nE to i8**
store i8*%nH,i8**%nI,align 8
br label%nJ
nJ:
%nK=phi i8*[%nE,%lg],[%lb,%jr]
%nL=load i8*,i8**%e,align 8
%nM=getelementptr inbounds i8,i8*%nK,i64 8
%nN=bitcast i8*%nM to i8**
store i8*%nL,i8**%nN,align 8
%nO=getelementptr inbounds i8,i8*%nK,i64 16
%nP=bitcast i8*%nO to i32*
store i32 3,i32*%nP,align 4
br label%hx
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2402(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
q:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%b,i8**%d,align 8
store i8*%c,i8**%e,align 8
store i8*%a,i8**%i,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%e,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%c,%q]
store i8*null,i8**%e,align 8
%r=icmp eq i8*%p,null
br i1%r,label%s,label%M
s:
store i8*null,i8**%i,align 8
%t=load i8*,i8**@_SMLZN3Bug3BugE,align 8
store i8*%t,i8**%d,align 8
%u=call i8*@sml_alloc(i32 inreg 28)#0
%v=getelementptr inbounds i8,i8*%u,i64 -4
%w=bitcast i8*%v to i32*
store i32 1342177304,i32*%w,align 4
store i8*%u,i8**%e,align 8
%x=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%y=bitcast i8*%u to i8**
store i8*%x,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%u,i64 8
%A=bitcast i8*%z to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jg,i64 0,i32 2,i64 0),i8**%A,align 8
%B=getelementptr inbounds i8,i8*%u,i64 16
%C=bitcast i8*%B to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[13x i8]}>,<{[4x i8],i32,[13x i8]}>*@jh,i64 0,i32 2,i64 0),i8**%C,align 8
%D=getelementptr inbounds i8,i8*%u,i64 24
%E=bitcast i8*%D to i32*
store i32 7,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 60)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177336,i32*%H,align 4
%I=getelementptr inbounds i8,i8*%F,i64 56
%J=bitcast i8*%I to i32*
store i32 1,i32*%J,align 4
%K=load i8*,i8**%e,align 8
%L=bitcast i8*%F to i8**
store i8*%K,i8**%L,align 8
call void@sml_raise(i8*inreg%F)#1
unreachable
M:
%N=bitcast i8*%p to i8**
%O=load i8*,i8**%N,align 8
%P=bitcast i8*%O to i32*
%Q=load i32,i32*%P,align 4
switch i32%Q,label%R[
i32 1,label%dA
i32 0,label%aj
]
R:
store i8*null,i8**%i,align 8
call void@sml_matchcomp_bug()
%S=load i8*,i8**@_SMLZ5Match,align 8
store i8*%S,i8**%d,align 8
%T=call i8*@sml_alloc(i32 inreg 20)#0
%U=getelementptr inbounds i8,i8*%T,i64 -4
%V=bitcast i8*%U to i32*
store i32 1342177296,i32*%V,align 4
store i8*%T,i8**%e,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=bitcast i8*%T to i8**
store i8*%W,i8**%X,align 8
%Y=getelementptr inbounds i8,i8*%T,i64 8
%Z=bitcast i8*%Y to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%T,i64 16
%ab=bitcast i8*%aa to i32*
store i32 3,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 60)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177336,i32*%ae,align 4
%af=getelementptr inbounds i8,i8*%ac,i64 56
%ag=bitcast i8*%af to i32*
store i32 1,i32*%ag,align 4
%ah=load i8*,i8**%e,align 8
%ai=bitcast i8*%ac to i8**
store i8*%ah,i8**%ai,align 8
call void@sml_raise(i8*inreg%ac)#1
unreachable
aj:
%ak=getelementptr inbounds i8,i8*%O,i64 8
%al=bitcast i8*%ak to i8**
%am=load i8*,i8**%al,align 8
store i8*%am,i8**%e,align 8
%an=getelementptr inbounds i8,i8*%p,i64 8
%ao=bitcast i8*%an to i8**
%ap=load i8*,i8**%ao,align 8
store i8*%ap,i8**%f,align 8
%aq=icmp eq i8*%ap,null
br i1%aq,label%ar,label%ba
ar:
store i8*null,i8**%f,align 8
%as=load i8*,i8**%d,align 8
%at=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
%au=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%at,i8*inreg%as,i8*inreg%am)
%av=bitcast i8*%au to i32*
%aw=load i32,i32*%av,align 4
%ax=icmp eq i32%aw,7
%ay=getelementptr inbounds i8,i8*%au,i64 8
%az=bitcast i8*%ay to i8**
%aA=load i8*,i8**%az,align 8
%aB=bitcast i8*%aA to i8**
%aC=load i8*,i8**%aB,align 8
store i8*%aC,i8**%d,align 8
%aD=getelementptr inbounds i8,i8*%aA,i64 8
%aE=bitcast i8*%aD to i8**
%aF=load i8*,i8**%aE,align 8
store i8*%aF,i8**%e,align 8
%aG=call i8*@sml_alloc(i32 inreg 20)#0
%aH=getelementptr inbounds i8,i8*%aG,i64 -4
%aI=bitcast i8*%aH to i32*
store i32 1342177296,i32*%aI,align 4
br i1%ax,label%aR,label%aJ
aJ:
%aK=load i8*,i8**%d,align 8
%aL=bitcast i8*%aG to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aG,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=getelementptr inbounds i8,i8*%aG,i64 16
%aQ=bitcast i8*%aP to i32*
store i32 3,i32*%aQ,align 4
ret i8*%aG
aR:
store i8*%aG,i8**%f,align 8
%aS=getelementptr inbounds i8,i8*%aG,i64 4
%aT=bitcast i8*%aS to i32*
store i32 0,i32*%aT,align 1
%aU=bitcast i8*%aG to i32*
store i32 23,i32*%aU,align 4
%aV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aW=getelementptr inbounds i8,i8*%aG,i64 8
%aX=bitcast i8*%aW to i8**
store i8*%aV,i8**%aX,align 8
%aY=getelementptr inbounds i8,i8*%aG,i64 16
%aZ=bitcast i8*%aY to i32*
store i32 2,i32*%aZ,align 4
%a0=call i8*@sml_alloc(i32 inreg 20)#0
%a1=getelementptr inbounds i8,i8*%a0,i64 -4
%a2=bitcast i8*%a1 to i32*
store i32 1342177296,i32*%a2,align 4
%a3=load i8*,i8**%d,align 8
%a4=bitcast i8*%a0 to i8**
store i8*%a3,i8**%a4,align 8
%a5=load i8*,i8**%f,align 8
%a6=getelementptr inbounds i8,i8*%a0,i64 8
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a0,i64 16
%a9=bitcast i8*%a8 to i32*
store i32 3,i32*%a9,align 4
ret i8*%a0
ba:
%bb=load i8*,i8**%d,align 8
%bc=load i8*,i8**%i,align 8
%bd=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%bc,i8*inreg%bb,i8*inreg%am)
%be=getelementptr inbounds i8,i8*%bd,i64 8
%bf=bitcast i8*%be to i8**
%bg=load i8*,i8**%bf,align 8
%bh=bitcast i8*%bd to i32*
%bi=load i32,i32*%bh,align 4
%bj=bitcast i8*%bg to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%g,align 8
%bl=getelementptr inbounds i8,i8*%bg,i64 8
%bm=bitcast i8*%bl to i8**
%bn=load i8*,i8**%bm,align 8
store i8*%bn,i8**%h,align 8
%bo=icmp eq i32%bi,7
br i1%bo,label%bp,label%bB
bp:
%bq=call i8*@sml_alloc(i32 inreg 20)#0
%br=bitcast i8*%bq to i32*
%bs=getelementptr inbounds i8,i8*%bq,i64 -4
%bt=bitcast i8*%bs to i32*
store i32 1342177296,i32*%bt,align 4
%bu=getelementptr inbounds i8,i8*%bq,i64 4
%bv=bitcast i8*%bu to i32*
store i32 0,i32*%bv,align 1
store i32 23,i32*%br,align 4
%bw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bx=getelementptr inbounds i8,i8*%bq,i64 8
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bq,i64 16
%bA=bitcast i8*%bz to i32*
store i32 2,i32*%bA,align 4
br label%bB
bB:
%bC=phi i8*[%bq,%bp],[%bn,%ba]
store i8*%bC,i8**%h,align 8
%bD=load i8*,i8**%d,align 8
%bE=load i8*,i8**%f,align 8
%bF=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%bG=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2402(i8*inreg%bF,i8*inreg%bD,i8*inreg%bE)
%bH=bitcast i8*%bG to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%d,align 8
%bJ=getelementptr inbounds i8,i8*%bG,i64 8
%bK=bitcast i8*%bJ to i8**
%bL=load i8*,i8**%bK,align 8
store i8*%bL,i8**%f,align 8
%bM=call i8*@sml_alloc(i32 inreg 20)#0
%bN=getelementptr inbounds i8,i8*%bM,i64 -4
%bO=bitcast i8*%bN to i32*
store i32 1342177296,i32*%bO,align 4
store i8*%bM,i8**%j,align 8
%bP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bQ=bitcast i8*%bM to i8**
store i8*%bP,i8**%bQ,align 8
%bR=getelementptr inbounds i8,i8*%bM,i64 8
%bS=bitcast i8*%bR to i8**
store i8*null,i8**%bS,align 8
%bT=getelementptr inbounds i8,i8*%bM,i64 16
%bU=bitcast i8*%bT to i32*
store i32 3,i32*%bU,align 4
%bV=call i8*@sml_alloc(i32 inreg 20)#0
%bW=getelementptr inbounds i8,i8*%bV,i64 -4
%bX=bitcast i8*%bW to i32*
store i32 1342177296,i32*%bX,align 4
store i8*%bV,i8**%d,align 8
%bY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bZ=bitcast i8*%bV to i8**
store i8*%bY,i8**%bZ,align 8
%b0=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b1=getelementptr inbounds i8,i8*%bV,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bV,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 3,i32*%b4,align 4
%b5=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%b6=getelementptr inbounds i8,i8*%b5,i64 16
%b7=bitcast i8*%b6 to i8*(i8*,i8*)**
%b8=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b7,align 8
%b9=bitcast i8*%b5 to i8**
%ca=load i8*,i8**%b9,align 8
store i8*%ca,i8**%g,align 8
%cb=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cc=getelementptr inbounds i8,i8*%cb,i64 16
%cd=bitcast i8*%cc to i8*(i8*,i8*)**
%ce=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cd,align 8
%cf=bitcast i8*%cb to i8**
%cg=load i8*,i8**%cf,align 8
%ch=call fastcc i8*%ce(i8*inreg%cg,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@je,i64 0,i32 2)to i8*))
%ci=getelementptr inbounds i8,i8*%ch,i64 16
%cj=bitcast i8*%ci to i8*(i8*,i8*)**
%ck=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cj,align 8
%cl=bitcast i8*%ch to i8**
%cm=load i8*,i8**%cl,align 8
%cn=load i8*,i8**%d,align 8
%co=call fastcc i8*%ck(i8*inreg%cm,i8*inreg%cn)
%cp=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cq=call fastcc i8*%b8(i8*inreg%cp,i8*inreg%co)
store i8*%cq,i8**%g,align 8
%cr=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%cs=getelementptr inbounds i8,i8*%cr,i64 16
%ct=bitcast i8*%cs to i8*(i8*,i8*)**
%cu=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ct,align 8
%cv=bitcast i8*%cr to i8**
%cw=load i8*,i8**%cv,align 8
%cx=call fastcc i8*%cu(i8*inreg%cw,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jf,i64 0,i32 2)to i8*))
%cy=getelementptr inbounds i8,i8*%cx,i64 16
%cz=bitcast i8*%cy to i8*(i8*,i8*)**
%cA=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cz,align 8
%cB=bitcast i8*%cx to i8**
%cC=load i8*,i8**%cB,align 8
%cD=bitcast i8**%i to i8***
%cE=load i8**,i8***%cD,align 8
store i8*null,i8**%i,align 8
%cF=load i8*,i8**%cE,align 8
%cG=call fastcc i8*%cA(i8*inreg%cC,i8*inreg%cF)
%cH=getelementptr inbounds i8,i8*%cG,i64 16
%cI=bitcast i8*%cH to i8*(i8*,i8*)**
%cJ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cI,align 8
%cK=bitcast i8*%cG to i8**
%cL=load i8*,i8**%cK,align 8
%cM=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cN=call fastcc i8*%cJ(i8*inreg%cL,i8*inreg%cM)
store i8*%cN,i8**%d,align 8
%cO=call i8*@sml_alloc(i32 inreg 20)#0
%cP=getelementptr inbounds i8,i8*%cO,i64 -4
%cQ=bitcast i8*%cP to i32*
store i32 1342177296,i32*%cQ,align 4
store i8*%cO,i8**%i,align 8
%cR=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cS=bitcast i8*%cO to i8**
store i8*%cR,i8**%cS,align 8
%cT=load i8*,i8**%d,align 8
%cU=getelementptr inbounds i8,i8*%cO,i64 8
%cV=bitcast i8*%cU to i8**
store i8*%cT,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cO,i64 16
%cX=bitcast i8*%cW to i32*
store i32 3,i32*%cX,align 4
%cY=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cZ=getelementptr inbounds i8,i8*%cY,i64 8
%c0=bitcast i8*%cZ to i8**
%c1=load i8*,i8**%c0,align 8
store i8*%c1,i8**%d,align 8
%c2=call i8*@sml_alloc(i32 inreg 28)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177304,i32*%c4,align 4
store i8*%c2,i8**%e,align 8
%c5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%c6=bitcast i8*%c2 to i8**
store i8*%c5,i8**%c6,align 8
%c7=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%c8=getelementptr inbounds i8,i8*%c2,i64 8
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%db=getelementptr inbounds i8,i8*%c2,i64 16
%dc=bitcast i8*%db to i8**
store i8*%da,i8**%dc,align 8
%dd=getelementptr inbounds i8,i8*%c2,i64 24
%de=bitcast i8*%dd to i32*
store i32 7,i32*%de,align 4
%df=call i8*@sml_alloc(i32 inreg 20)#0
%dg=getelementptr inbounds i8,i8*%df,i64 -4
%dh=bitcast i8*%dg to i32*
store i32 1342177296,i32*%dh,align 4
store i8*%df,i8**%d,align 8
%di=getelementptr inbounds i8,i8*%df,i64 4
%dj=bitcast i8*%di to i32*
store i32 0,i32*%dj,align 1
%dk=bitcast i8*%df to i32*
store i32 26,i32*%dk,align 4
%dl=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dm=getelementptr inbounds i8,i8*%df,i64 8
%dn=bitcast i8*%dm to i8**
store i8*%dl,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%df,i64 16
%dp=bitcast i8*%do to i32*
store i32 2,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=getelementptr inbounds i8,i8*%dq,i64 -4
%ds=bitcast i8*%dr to i32*
store i32 1342177296,i32*%ds,align 4
%dt=load i8*,i8**%i,align 8
%du=bitcast i8*%dq to i8**
store i8*%dt,i8**%du,align 8
%dv=load i8*,i8**%d,align 8
%dw=getelementptr inbounds i8,i8*%dq,i64 8
%dx=bitcast i8*%dw to i8**
store i8*%dv,i8**%dx,align 8
%dy=getelementptr inbounds i8,i8*%dq,i64 16
%dz=bitcast i8*%dy to i32*
store i32 3,i32*%dz,align 4
ret i8*%dq
dA:
%dB=getelementptr inbounds i8,i8*%O,i64 8
%dC=bitcast i8*%dB to i8**
%dD=load i8*,i8**%dC,align 8
store i8*%dD,i8**%e,align 8
%dE=getelementptr inbounds i8,i8*%p,i64 8
%dF=bitcast i8*%dE to i8**
%dG=load i8*,i8**%dF,align 8
store i8*%dG,i8**%f,align 8
%dH=icmp eq i8*%dG,null
br i1%dH,label%dI,label%d4
dI:
store i8*null,i8**%f,align 8
%dJ=load i8*,i8**%d,align 8
%dK=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%i,align 8
%dL=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%dK,i8*inreg%dJ)
%dM=getelementptr inbounds i8,i8*%dL,i64 16
%dN=bitcast i8*%dM to i8*(i8*,i8*)**
%dO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dN,align 8
%dP=bitcast i8*%dL to i8**
%dQ=load i8*,i8**%dP,align 8
store i8*%dQ,i8**%d,align 8
%dR=call i8*@sml_alloc(i32 inreg 4)#0
%dS=bitcast i8*%dR to i32*
%dT=getelementptr inbounds i8,i8*%dR,i64 -4
%dU=bitcast i8*%dT to i32*
store i32 4,i32*%dU,align 4
store i32 0,i32*%dS,align 4
%dV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dW=call fastcc i8*%dO(i8*inreg%dV,i8*inreg%dR)
%dX=getelementptr inbounds i8,i8*%dW,i64 16
%dY=bitcast i8*%dX to i8*(i8*,i8*)**
%dZ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dY,align 8
%d0=bitcast i8*%dW to i8**
%d1=load i8*,i8**%d0,align 8
%d2=load i8*,i8**%e,align 8
%d3=tail call fastcc i8*%dZ(i8*inreg%d1,i8*inreg%d2)
ret i8*%d3
d4:
%d5=load i8*,i8**%d,align 8
%d6=load i8*,i8**%i,align 8
%d7=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%d6,i8*inreg%d5)
%d8=getelementptr inbounds i8,i8*%d7,i64 16
%d9=bitcast i8*%d8 to i8*(i8*,i8*)**
%ea=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%d9,align 8
%eb=bitcast i8*%d7 to i8**
%ec=load i8*,i8**%eb,align 8
store i8*%ec,i8**%g,align 8
%ed=call i8*@sml_alloc(i32 inreg 4)#0
%ee=bitcast i8*%ed to i32*
%ef=getelementptr inbounds i8,i8*%ed,i64 -4
%eg=bitcast i8*%ef to i32*
store i32 4,i32*%eg,align 4
store i32 0,i32*%ee,align 4
%eh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ei=call fastcc i8*%ea(i8*inreg%eh,i8*inreg%ed)
%ej=getelementptr inbounds i8,i8*%ei,i64 16
%ek=bitcast i8*%ej to i8*(i8*,i8*)**
%el=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ek,align 8
%em=bitcast i8*%ei to i8**
%en=load i8*,i8**%em,align 8
%eo=load i8*,i8**%e,align 8
%ep=call fastcc i8*%el(i8*inreg%en,i8*inreg%eo)
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
store i8*%er,i8**%g,align 8
%es=getelementptr inbounds i8,i8*%ep,i64 8
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%h,align 8
%ev=load i8*,i8**%d,align 8
%ew=load i8*,i8**%f,align 8
%ex=load i8*,i8**%i,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%ey=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2402(i8*inreg%ex,i8*inreg%ev,i8*inreg%ew)
%ez=bitcast i8*%ey to i8**
%eA=load i8*,i8**%ez,align 8
store i8*%eA,i8**%d,align 8
%eB=getelementptr inbounds i8,i8*%ey,i64 8
%eC=bitcast i8*%eB to i8**
%eD=load i8*,i8**%eC,align 8
store i8*%eD,i8**%f,align 8
%eE=call i8*@sml_alloc(i32 inreg 20)#0
%eF=getelementptr inbounds i8,i8*%eE,i64 -4
%eG=bitcast i8*%eF to i32*
store i32 1342177296,i32*%eG,align 4
store i8*%eE,i8**%j,align 8
%eH=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eI=bitcast i8*%eE to i8**
store i8*%eH,i8**%eI,align 8
%eJ=getelementptr inbounds i8,i8*%eE,i64 8
%eK=bitcast i8*%eJ to i8**
store i8*null,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eE,i64 16
%eM=bitcast i8*%eL to i32*
store i32 3,i32*%eM,align 4
%eN=call i8*@sml_alloc(i32 inreg 20)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177296,i32*%eP,align 4
store i8*%eN,i8**%d,align 8
%eQ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%eR=bitcast i8*%eN to i8**
store i8*%eQ,i8**%eR,align 8
%eS=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%eT=getelementptr inbounds i8,i8*%eN,i64 8
%eU=bitcast i8*%eT to i8**
store i8*%eS,i8**%eU,align 8
%eV=getelementptr inbounds i8,i8*%eN,i64 16
%eW=bitcast i8*%eV to i32*
store i32 3,i32*%eW,align 4
%eX=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%eY=getelementptr inbounds i8,i8*%eX,i64 16
%eZ=bitcast i8*%eY to i8*(i8*,i8*)**
%e0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%eZ,align 8
%e1=bitcast i8*%eX to i8**
%e2=load i8*,i8**%e1,align 8
store i8*%e2,i8**%g,align 8
%e3=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%e4=getelementptr inbounds i8,i8*%e3,i64 16
%e5=bitcast i8*%e4 to i8*(i8*,i8*)**
%e6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%e5,align 8
%e7=bitcast i8*%e3 to i8**
%e8=load i8*,i8**%e7,align 8
%e9=call fastcc i8*%e6(i8*inreg%e8,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jc,i64 0,i32 2)to i8*))
%fa=getelementptr inbounds i8,i8*%e9,i64 16
%fb=bitcast i8*%fa to i8*(i8*,i8*)**
%fc=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fb,align 8
%fd=bitcast i8*%e9 to i8**
%fe=load i8*,i8**%fd,align 8
%ff=load i8*,i8**%d,align 8
%fg=call fastcc i8*%fc(i8*inreg%fe,i8*inreg%ff)
%fh=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fi=call fastcc i8*%e0(i8*inreg%fh,i8*inreg%fg)
store i8*%fi,i8**%g,align 8
%fj=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%fk=getelementptr inbounds i8,i8*%fj,i64 16
%fl=bitcast i8*%fk to i8*(i8*,i8*)**
%fm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fl,align 8
%fn=bitcast i8*%fj to i8**
%fo=load i8*,i8**%fn,align 8
%fp=call fastcc i8*%fm(i8*inreg%fo,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jd,i64 0,i32 2)to i8*))
%fq=getelementptr inbounds i8,i8*%fp,i64 16
%fr=bitcast i8*%fq to i8*(i8*,i8*)**
%fs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fr,align 8
%ft=bitcast i8*%fp to i8**
%fu=load i8*,i8**%ft,align 8
%fv=bitcast i8**%i to i8***
%fw=load i8**,i8***%fv,align 8
store i8*null,i8**%i,align 8
%fx=load i8*,i8**%fw,align 8
%fy=call fastcc i8*%fs(i8*inreg%fu,i8*inreg%fx)
%fz=getelementptr inbounds i8,i8*%fy,i64 16
%fA=bitcast i8*%fz to i8*(i8*,i8*)**
%fB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fA,align 8
%fC=bitcast i8*%fy to i8**
%fD=load i8*,i8**%fC,align 8
%fE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fF=call fastcc i8*%fB(i8*inreg%fD,i8*inreg%fE)
store i8*%fF,i8**%d,align 8
%fG=call i8*@sml_alloc(i32 inreg 20)#0
%fH=getelementptr inbounds i8,i8*%fG,i64 -4
%fI=bitcast i8*%fH to i32*
store i32 1342177296,i32*%fI,align 4
store i8*%fG,i8**%i,align 8
%fJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%fK=bitcast i8*%fG to i8**
store i8*%fJ,i8**%fK,align 8
%fL=load i8*,i8**%d,align 8
%fM=getelementptr inbounds i8,i8*%fG,i64 8
%fN=bitcast i8*%fM to i8**
store i8*%fL,i8**%fN,align 8
%fO=getelementptr inbounds i8,i8*%fG,i64 16
%fP=bitcast i8*%fO to i32*
store i32 3,i32*%fP,align 4
%fQ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fR=getelementptr inbounds i8,i8*%fQ,i64 8
%fS=bitcast i8*%fR to i8**
%fT=load i8*,i8**%fS,align 8
store i8*%fT,i8**%d,align 8
%fU=call i8*@sml_alloc(i32 inreg 28)#0
%fV=getelementptr inbounds i8,i8*%fU,i64 -4
%fW=bitcast i8*%fV to i32*
store i32 1342177304,i32*%fW,align 4
store i8*%fU,i8**%e,align 8
%fX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%fY=bitcast i8*%fU to i8**
store i8*%fX,i8**%fY,align 8
%fZ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f0=getelementptr inbounds i8,i8*%fU,i64 8
%f1=bitcast i8*%f0 to i8**
store i8*%fZ,i8**%f1,align 8
%f2=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%f3=getelementptr inbounds i8,i8*%fU,i64 16
%f4=bitcast i8*%f3 to i8**
store i8*%f2,i8**%f4,align 8
%f5=getelementptr inbounds i8,i8*%fU,i64 24
%f6=bitcast i8*%f5 to i32*
store i32 7,i32*%f6,align 4
%f7=call i8*@sml_alloc(i32 inreg 20)#0
%f8=getelementptr inbounds i8,i8*%f7,i64 -4
%f9=bitcast i8*%f8 to i32*
store i32 1342177296,i32*%f9,align 4
store i8*%f7,i8**%d,align 8
%ga=getelementptr inbounds i8,i8*%f7,i64 4
%gb=bitcast i8*%ga to i32*
store i32 0,i32*%gb,align 1
%gc=bitcast i8*%f7 to i32*
store i32 26,i32*%gc,align 4
%gd=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ge=getelementptr inbounds i8,i8*%f7,i64 8
%gf=bitcast i8*%ge to i8**
store i8*%gd,i8**%gf,align 8
%gg=getelementptr inbounds i8,i8*%f7,i64 16
%gh=bitcast i8*%gg to i32*
store i32 2,i32*%gh,align 4
%gi=call i8*@sml_alloc(i32 inreg 20)#0
%gj=getelementptr inbounds i8,i8*%gi,i64 -4
%gk=bitcast i8*%gj to i32*
store i32 1342177296,i32*%gk,align 4
%gl=load i8*,i8**%i,align 8
%gm=bitcast i8*%gi to i8**
store i8*%gl,i8**%gm,align 8
%gn=load i8*,i8**%d,align 8
%go=getelementptr inbounds i8,i8*%gi,i64 8
%gp=bitcast i8*%go to i8**
store i8*%gn,i8**%gp,align 8
%gq=getelementptr inbounds i8,i8*%gi,i64 16
%gr=bitcast i8*%gq to i32*
store i32 3,i32*%gr,align 4
ret i8*%gi
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%a,i8*inreg%b,i8*inreg%c)#2 gc"smlsharp"{
r:
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
%l=alloca i8*,align 8
%m=alloca i8*,align 8
%n=alloca i8*,align 8
%o=alloca i8*,align 8
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
call void@llvm.gcroot(i8**%l,i8*null)#0
call void@llvm.gcroot(i8**%m,i8*null)#0
call void@llvm.gcroot(i8**%n,i8*null)#0
call void@llvm.gcroot(i8**%o,i8*null)#0
store i8*%a,i8**%m,align 8
store i8*%b,i8**%d,align 8
br label%p
p:
%q=phi i8*[%aw,%av],[%c,%r]
store i8*%q,i8**%e,align 8
%s=load atomic i32,i32*@sml_check_flag unordered,align 4
%t=icmp eq i32%s,0
br i1%t,label%w,label%u
u:
call void@sml_check(i32 inreg%s)
%v=load i8*,i8**%e,align 8
br label%w
w:
%x=phi i8*[%v,%u],[%q,%p]
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
%A=getelementptr inbounds i8,i8*%x,i64 8
%B=bitcast i8*%A to i8**
%C=load i8*,i8**%B,align 8
store i8*%C,i8**%e,align 8
%D=bitcast i8*%z to i32*
%E=load i32,i32*%D,align 4
switch i32%E,label%F[
i32 3,label%DT
i32 10,label%DB
i32 12,label%Dj
i32 4,label%CY
i32 15,label%B1
i32 9,label%BJ
i32 8,label%Br
i32 7,label%A9
i32 5,label%so
i32 6,label%oV
i32 14,label%hT
i32 2,label%co
i32 0,label%bP
i32 1,label%bg
i32 11,label%aH
i32 13,label%X
]
F:
store i8*null,i8**%e,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%G=load i8*,i8**@_SMLZ5Match,align 8
store i8*%G,i8**%d,align 8
%H=call i8*@sml_alloc(i32 inreg 20)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177296,i32*%J,align 4
store i8*%H,i8**%e,align 8
%K=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jD,i64 0,i32 2,i64 0),i8**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to i32*
store i32 3,i32*%P,align 4
%Q=call i8*@sml_alloc(i32 inreg 60)#0
%R=getelementptr inbounds i8,i8*%Q,i64 -4
%S=bitcast i8*%R to i32*
store i32 1342177336,i32*%S,align 4
%T=getelementptr inbounds i8,i8*%Q,i64 56
%U=bitcast i8*%T to i32*
store i32 1,i32*%U,align 4
%V=load i8*,i8**%e,align 8
%W=bitcast i8*%Q to i8**
store i8*%V,i8**%W,align 8
call void@sml_raise(i8*inreg%Q)#1
unreachable
X:
store i8*null,i8**%e,align 8
%Y=getelementptr inbounds i8,i8*%z,i64 8
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=icmp eq i8*%aa,null
br i1%ab,label%Eb,label%ac
ac:
%ad=bitcast i8*%aa to i8**
%ae=load i8*,i8**%ad,align 8
%af=bitcast i8*%ae to i32*
%ag=load i32,i32*%af,align 4
%ah=icmp eq i32%ag,0
br i1%ah,label%ai,label%Eb
ai:
%aj=getelementptr inbounds i8,i8*%ae,i64 8
%ak=bitcast i8*%aj to i8**
%al=load i8*,i8**%ak,align 8
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%e,align 8
%ao=getelementptr inbounds i8,i8*%al,i64 8
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%f,align 8
%ar=getelementptr inbounds i8,i8*%aa,i64 8
%as=bitcast i8*%ar to i8**
%at=load i8*,i8**%as,align 8
%au=icmp eq i8*%at,null
br i1%au,label%av,label%aG
av:
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
%az=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aA=bitcast i8*%aw to i8**
store i8*%az,i8**%aA,align 8
%aB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aC=getelementptr inbounds i8,i8*%aw,i64 8
%aD=bitcast i8*%aC to i8**
store i8*%aB,i8**%aD,align 8
%aE=getelementptr inbounds i8,i8*%aw,i64 16
%aF=bitcast i8*%aE to i32*
store i32 3,i32*%aF,align 4
br label%p
aG:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
br label%Eb
aH:
%aI=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%aJ=getelementptr inbounds i8,i8*%aI,i64 8
%aK=bitcast i8*%aJ to i8**
%aL=load i8*,i8**%aK,align 8
store i8*%aL,i8**%d,align 8
%aM=call i8*@sml_alloc(i32 inreg 20)#0
%aN=getelementptr inbounds i8,i8*%aM,i64 -4
%aO=bitcast i8*%aN to i32*
store i32 1342177296,i32*%aO,align 4
store i8*%aM,i8**%f,align 8
%aP=getelementptr inbounds i8,i8*%aM,i64 4
%aQ=bitcast i8*%aP to i32*
store i32 0,i32*%aQ,align 1
%aR=bitcast i8*%aM to i32*
store i32 24,i32*%aR,align 4
%aS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aT=getelementptr inbounds i8,i8*%aM,i64 8
%aU=bitcast i8*%aT to i8**
store i8*%aS,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aM,i64 16
%aW=bitcast i8*%aV to i32*
store i32 2,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 20)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177296,i32*%aZ,align 4
store i8*%aX,i8**%e,align 8
%a0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a3=getelementptr inbounds i8,i8*%aX,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=getelementptr inbounds i8,i8*%aX,i64 16
%a6=bitcast i8*%a5 to i32*
store i32 3,i32*%a6,align 4
%a7=call i8*@sml_alloc(i32 inreg 20)#0
%a8=getelementptr inbounds i8,i8*%a7,i64 -4
%a9=bitcast i8*%a8 to i32*
store i32 1342177296,i32*%a9,align 4
%ba=bitcast i8*%a7 to i64*
store i64 0,i64*%ba,align 4
%bb=load i8*,i8**%e,align 8
%bc=getelementptr inbounds i8,i8*%a7,i64 8
%bd=bitcast i8*%bc to i8**
store i8*%bb,i8**%bd,align 8
%be=getelementptr inbounds i8,i8*%a7,i64 16
%bf=bitcast i8*%be to i32*
store i32 2,i32*%bf,align 4
ret i8*%a7
bg:
%bh=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bi=getelementptr inbounds i8,i8*%bh,i64 8
%bj=bitcast i8*%bi to i8**
%bk=load i8*,i8**%bj,align 8
store i8*%bk,i8**%d,align 8
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%f,align 8
%bo=getelementptr inbounds i8,i8*%bl,i64 4
%bp=bitcast i8*%bo to i32*
store i32 0,i32*%bp,align 1
%bq=bitcast i8*%bl to i32*
store i32 5,i32*%bq,align 4
%br=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bl,i64 16
%bv=bitcast i8*%bu to i32*
store i32 2,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 20)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177296,i32*%by,align 4
store i8*%bw,i8**%e,align 8
%bz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bC=getelementptr inbounds i8,i8*%bw,i64 8
%bD=bitcast i8*%bC to i8**
store i8*%bB,i8**%bD,align 8
%bE=getelementptr inbounds i8,i8*%bw,i64 16
%bF=bitcast i8*%bE to i32*
store i32 3,i32*%bF,align 4
%bG=call i8*@sml_alloc(i32 inreg 20)#0
%bH=getelementptr inbounds i8,i8*%bG,i64 -4
%bI=bitcast i8*%bH to i32*
store i32 1342177296,i32*%bI,align 4
%bJ=bitcast i8*%bG to i64*
store i64 0,i64*%bJ,align 4
%bK=load i8*,i8**%e,align 8
%bL=getelementptr inbounds i8,i8*%bG,i64 8
%bM=bitcast i8*%bL to i8**
store i8*%bK,i8**%bM,align 8
%bN=getelementptr inbounds i8,i8*%bG,i64 16
%bO=bitcast i8*%bN to i32*
store i32 2,i32*%bO,align 4
ret i8*%bG
bP:
%bQ=load i8*,i8**%m,align 8
store i8*null,i8**%m,align 8
%bR=getelementptr inbounds i8,i8*%bQ,i64 8
%bS=bitcast i8*%bR to i8**
%bT=load i8*,i8**%bS,align 8
store i8*%bT,i8**%d,align 8
%bU=call i8*@sml_alloc(i32 inreg 20)#0
%bV=getelementptr inbounds i8,i8*%bU,i64 -4
%bW=bitcast i8*%bV to i32*
store i32 1342177296,i32*%bW,align 4
store i8*%bU,i8**%f,align 8
%bX=getelementptr inbounds i8,i8*%bU,i64 4
%bY=bitcast i8*%bX to i32*
store i32 0,i32*%bY,align 1
%bZ=bitcast i8*%bU to i32*
store i32 2,i32*%bZ,align 4
%b0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b1=getelementptr inbounds i8,i8*%bU,i64 8
%b2=bitcast i8*%b1 to i8**
store i8*%b0,i8**%b2,align 8
%b3=getelementptr inbounds i8,i8*%bU,i64 16
%b4=bitcast i8*%b3 to i32*
store i32 2,i32*%b4,align 4
%b5=call i8*@sml_alloc(i32 inreg 20)#0
%b6=getelementptr inbounds i8,i8*%b5,i64 -4
%b7=bitcast i8*%b6 to i32*
store i32 1342177296,i32*%b7,align 4
store i8*%b5,i8**%e,align 8
%b8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b9=bitcast i8*%b5 to i8**
store i8*%b8,i8**%b9,align 8
%ca=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cb=getelementptr inbounds i8,i8*%b5,i64 8
%cc=bitcast i8*%cb to i8**
store i8*%ca,i8**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b5,i64 16
%ce=bitcast i8*%cd to i32*
store i32 3,i32*%ce,align 4
%cf=call i8*@sml_alloc(i32 inreg 20)#0
%cg=getelementptr inbounds i8,i8*%cf,i64 -4
%ch=bitcast i8*%cg to i32*
store i32 1342177296,i32*%ch,align 4
%ci=bitcast i8*%cf to i64*
store i64 0,i64*%ci,align 4
%cj=load i8*,i8**%e,align 8
%ck=getelementptr inbounds i8,i8*%cf,i64 8
%cl=bitcast i8*%ck to i8**
store i8*%cj,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%cf,i64 16
%cn=bitcast i8*%cm to i32*
store i32 2,i32*%cn,align 4
ret i8*%cf
co:
%cp=getelementptr inbounds i8,i8*%z,i64 8
%cq=bitcast i8*%cp to i8**
%cr=load i8*,i8**%cq,align 8
%cs=bitcast i8*%cr to i8**
%ct=load i8*,i8**%cs,align 8
%cu=getelementptr inbounds i8,i8*%cr,i64 8
%cv=bitcast i8*%cu to i8**
%cw=load i8*,i8**%cv,align 8
store i8*%cw,i8**%f,align 8
%cx=bitcast i8*%ct to i8**
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%g,align 8
%cz=getelementptr inbounds i8,i8*%ct,i64 8
%cA=bitcast i8*%cz to i8**
%cB=load i8*,i8**%cA,align 8
store i8*%cB,i8**%h,align 8
%cC=getelementptr inbounds i8,i8*%ct,i64 16
%cD=bitcast i8*%cC to i8**
%cE=load i8*,i8**%cD,align 8
store i8*%cE,i8**%i,align 8
%cF=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%cy)
store i8*%cF,i8**%j,align 8
%cG=call i8*@sml_alloc(i32 inreg 20)#0
%cH=getelementptr inbounds i8,i8*%cG,i64 -4
%cI=bitcast i8*%cH to i32*
store i32 1342177296,i32*%cI,align 4
store i8*%cG,i8**%k,align 8
%cJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cK=bitcast i8*%cG to i8**
store i8*%cJ,i8**%cK,align 8
%cL=getelementptr inbounds i8,i8*%cG,i64 8
%cM=bitcast i8*%cL to i8**
store i8*null,i8**%cM,align 8
%cN=getelementptr inbounds i8,i8*%cG,i64 16
%cO=bitcast i8*%cN to i32*
store i32 3,i32*%cO,align 4
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
store i8*%cP,i8**%l,align 8
%cS=getelementptr inbounds i8,i8*%cP,i64 4
%cT=bitcast i8*%cS to i32*
store i32 0,i32*%cT,align 1
%cU=bitcast i8*%cP to i32*
store i32 15,i32*%cU,align 4
%cV=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cW=getelementptr inbounds i8,i8*%cP,i64 8
%cX=bitcast i8*%cW to i8**
store i8*%cV,i8**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cP,i64 16
%cZ=bitcast i8*%cY to i32*
store i32 2,i32*%cZ,align 4
%c0=call i8*@sml_alloc(i32 inreg 20)#0
%c1=getelementptr inbounds i8,i8*%c0,i64 -4
%c2=bitcast i8*%c1 to i32*
store i32 1342177296,i32*%c2,align 4
store i8*%c0,i8**%g,align 8
%c3=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%c4=bitcast i8*%c0 to i8**
store i8*%c3,i8**%c4,align 8
%c5=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%c6=getelementptr inbounds i8,i8*%c0,i64 8
%c7=bitcast i8*%c6 to i8**
store i8*%c5,i8**%c7,align 8
%c8=getelementptr inbounds i8,i8*%c0,i64 16
%c9=bitcast i8*%c8 to i32*
store i32 3,i32*%c9,align 4
%da=load i8*,i8**%d,align 8
%db=load i8*,i8**%m,align 8
%dc=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%db,i8*inreg%da)
%dd=getelementptr inbounds i8,i8*%dc,i64 16
%de=bitcast i8*%dd to i8*(i8*,i8*)**
%df=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%de,align 8
%dg=bitcast i8*%dc to i8**
%dh=load i8*,i8**%dg,align 8
store i8*%dh,i8**%j,align 8
%di=call i8*@sml_alloc(i32 inreg 4)#0
%dj=bitcast i8*%di to i32*
%dk=getelementptr inbounds i8,i8*%di,i64 -4
%dl=bitcast i8*%dk to i32*
store i32 4,i32*%dl,align 4
store i32 1,i32*%dj,align 4
%dm=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dn=call fastcc i8*%df(i8*inreg%dm,i8*inreg%di)
%do=getelementptr inbounds i8,i8*%dn,i64 16
%dp=bitcast i8*%do to i8*(i8*,i8*)**
%dq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dp,align 8
%dr=bitcast i8*%dn to i8**
%ds=load i8*,i8**%dr,align 8
%dt=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%du=call fastcc i8*%dq(i8*inreg%ds,i8*inreg%dt)
%dv=bitcast i8*%du to i8**
%dw=load i8*,i8**%dv,align 8
store i8*%dw,i8**%g,align 8
%dx=getelementptr inbounds i8,i8*%du,i64 8
%dy=bitcast i8*%dx to i8**
%dz=load i8*,i8**%dy,align 8
store i8*%dz,i8**%j,align 8
%dA=call i8*@sml_alloc(i32 inreg 28)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177304,i32*%dC,align 4
store i8*%dA,i8**%k,align 8
%dD=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dE=bitcast i8*%dA to i8**
store i8*%dD,i8**%dE,align 8
%dF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%dG=getelementptr inbounds i8,i8*%dA,i64 8
%dH=bitcast i8*%dG to i8**
store i8*%dF,i8**%dH,align 8
%dI=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%dJ=getelementptr inbounds i8,i8*%dA,i64 16
%dK=bitcast i8*%dJ to i8**
store i8*%dI,i8**%dK,align 8
%dL=getelementptr inbounds i8,i8*%dA,i64 24
%dM=bitcast i8*%dL to i32*
store i32 7,i32*%dM,align 4
%dN=load i8*,i8**%f,align 8
%dO=icmp eq i8*%dN,null
store i8*null,i8**%f,align 8
br i1%dO,label%dP,label%dZ
dP:
%dQ=load i8*,i8**%m,align 8
%dR=getelementptr inbounds i8,i8*%dQ,i64 8
%dS=bitcast i8*%dR to i8**
%dT=load i8*,i8**%dS,align 8
store i8*%dT,i8**%d,align 8
%dU=call i8*@sml_alloc(i32 inreg 20)#0
%dV=getelementptr inbounds i8,i8*%dU,i64 -4
%dW=bitcast i8*%dV to i32*
store i32 1342177296,i32*%dW,align 4
%dX=load i8*,i8**%d,align 8
%dY=bitcast i8*%dU to i8**
store i8*%dX,i8**%dY,align 8
br label%fS
dZ:
%d0=bitcast i8*%dN to i8**
%d1=load i8*,i8**%d0,align 8
%d2=bitcast i8*%d1 to i32*
%d3=load i32,i32*%d2,align 4
switch i32%d3,label%d4[
i32 1,label%e8
i32 0,label%em
]
d4:
store i8*null,i8**%e,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%k,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%d5=load i8*,i8**@_SMLZ5Match,align 8
store i8*%d5,i8**%d,align 8
%d6=call i8*@sml_alloc(i32 inreg 20)#0
%d7=getelementptr inbounds i8,i8*%d6,i64 -4
%d8=bitcast i8*%d7 to i32*
store i32 1342177296,i32*%d8,align 4
store i8*%d6,i8**%e,align 8
%d9=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ea=bitcast i8*%d6 to i8**
store i8*%d9,i8**%ea,align 8
%eb=getelementptr inbounds i8,i8*%d6,i64 8
%ec=bitcast i8*%eb to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d6,i64 16
%ee=bitcast i8*%ed to i32*
store i32 3,i32*%ee,align 4
%ef=call i8*@sml_alloc(i32 inreg 60)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177336,i32*%eh,align 4
%ei=getelementptr inbounds i8,i8*%ef,i64 56
%ej=bitcast i8*%ei to i32*
store i32 1,i32*%ej,align 4
%ek=load i8*,i8**%e,align 8
%el=bitcast i8*%ef to i8**
store i8*%ek,i8**%el,align 8
call void@sml_raise(i8*inreg%ef)#1
unreachable
em:
%en=getelementptr inbounds i8,i8*%d1,i64 8
%eo=bitcast i8*%en to i8**
%ep=load i8*,i8**%eo,align 8
%eq=bitcast i8*%ep to i8**
%er=load i8*,i8**%eq,align 8
%es=getelementptr inbounds i8,i8*%ep,i64 8
%et=bitcast i8*%es to i8**
%eu=load i8*,i8**%et,align 8
store i8*%eu,i8**%f,align 8
%ev=load i8*,i8**%d,align 8
%ew=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%ex=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%ew,i8*inreg%ev,i8*inreg%er)
%ey=bitcast i8*%ex to i8**
%ez=load i8*,i8**%ey,align 8
store i8*%ez,i8**%d,align 8
%eA=getelementptr inbounds i8,i8*%ex,i64 8
%eB=bitcast i8*%eA to i8**
%eC=load i8*,i8**%eB,align 8
store i8*%eC,i8**%h,align 8
%eD=call i8*@sml_alloc(i32 inreg 20)#0
%eE=getelementptr inbounds i8,i8*%eD,i64 -4
%eF=bitcast i8*%eE to i32*
store i32 1342177296,i32*%eF,align 4
store i8*%eD,i8**%i,align 8
%eG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%eH=bitcast i8*%eD to i8**
store i8*%eG,i8**%eH,align 8
%eI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%eJ=getelementptr inbounds i8,i8*%eD,i64 8
%eK=bitcast i8*%eJ to i8**
store i8*%eI,i8**%eK,align 8
%eL=getelementptr inbounds i8,i8*%eD,i64 16
%eM=bitcast i8*%eL to i32*
store i32 3,i32*%eM,align 4
%eN=call i8*@sml_alloc(i32 inreg 20)#0
%eO=getelementptr inbounds i8,i8*%eN,i64 -4
%eP=bitcast i8*%eO to i32*
store i32 1342177296,i32*%eP,align 4
store i8*%eN,i8**%f,align 8
%eQ=getelementptr inbounds i8,i8*%eN,i64 4
%eR=bitcast i8*%eQ to i32*
store i32 0,i32*%eR,align 1
%eS=bitcast i8*%eN to i32*
store i32 30,i32*%eS,align 4
%eT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%eU=getelementptr inbounds i8,i8*%eN,i64 8
%eV=bitcast i8*%eU to i8**
store i8*%eT,i8**%eV,align 8
%eW=getelementptr inbounds i8,i8*%eN,i64 16
%eX=bitcast i8*%eW to i32*
store i32 2,i32*%eX,align 4
%eY=call i8*@sml_alloc(i32 inreg 20)#0
%eZ=getelementptr inbounds i8,i8*%eY,i64 -4
%e0=bitcast i8*%eZ to i32*
store i32 1342177296,i32*%e0,align 4
%e1=load i8*,i8**%d,align 8
%e2=bitcast i8*%eY to i8**
store i8*%e1,i8**%e2,align 8
%e3=load i8*,i8**%f,align 8
%e4=getelementptr inbounds i8,i8*%eY,i64 8
%e5=bitcast i8*%e4 to i8**
store i8*%e3,i8**%e5,align 8
%e6=getelementptr inbounds i8,i8*%eY,i64 16
%e7=bitcast i8*%e6 to i32*
store i32 3,i32*%e7,align 4
br label%fC
e8:
%e9=getelementptr inbounds i8,i8*%d1,i64 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
store i8*%fb,i8**%f,align 8
%fc=load i8*,i8**%d,align 8
%fd=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%fe=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%fd,i8*inreg%fc)
%ff=getelementptr inbounds i8,i8*%fe,i64 16
%fg=bitcast i8*%ff to i8*(i8*,i8*)**
%fh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fg,align 8
%fi=bitcast i8*%fe to i8**
%fj=load i8*,i8**%fi,align 8
store i8*%fj,i8**%d,align 8
%fk=call i8*@sml_alloc(i32 inreg 4)#0
%fl=bitcast i8*%fk to i32*
%fm=getelementptr inbounds i8,i8*%fk,i64 -4
%fn=bitcast i8*%fm to i32*
store i32 4,i32*%fn,align 4
store i32 9,i32*%fl,align 4
%fo=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fp=call fastcc i8*%fh(i8*inreg%fo,i8*inreg%fk)
%fq=getelementptr inbounds i8,i8*%fp,i64 16
%fr=bitcast i8*%fq to i8*(i8*,i8*)**
%fs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fr,align 8
%ft=bitcast i8*%fp to i8**
%fu=load i8*,i8**%ft,align 8
%fv=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fw=call fastcc i8*%fs(i8*inreg%fu,i8*inreg%fv)
%fx=bitcast i8*%fw to i8**
%fy=load i8*,i8**%fx,align 8
%fz=getelementptr inbounds i8,i8*%fw,i64 8
%fA=bitcast i8*%fz to i8**
%fB=load i8*,i8**%fA,align 8
br label%fC
fC:
%fD=phi i8*[%e3,%em],[%fB,%e8]
%fE=phi i8*[%e1,%em],[%fy,%e8]
store i8*%fE,i8**%d,align 8
store i8*%fD,i8**%f,align 8
%fF=call i8*@sml_alloc(i32 inreg 12)#0
%fG=getelementptr inbounds i8,i8*%fF,i64 -4
%fH=bitcast i8*%fG to i32*
store i32 1342177288,i32*%fH,align 4
store i8*%fF,i8**%h,align 8
%fI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%fJ=bitcast i8*%fF to i8**
store i8*%fI,i8**%fJ,align 8
%fK=getelementptr inbounds i8,i8*%fF,i64 8
%fL=bitcast i8*%fK to i32*
store i32 1,i32*%fL,align 4
%fM=call i8*@sml_alloc(i32 inreg 20)#0
%fN=getelementptr inbounds i8,i8*%fM,i64 -4
%fO=bitcast i8*%fN to i32*
store i32 1342177296,i32*%fO,align 4
%fP=load i8*,i8**%d,align 8
%fQ=bitcast i8*%fM to i8**
store i8*%fP,i8**%fQ,align 8
%fR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
br label%fS
fS:
%fT=phi i8*[%fM,%fC],[%dU,%dP]
%fU=phi i8*[%fR,%fC],[null,%dP]
%fV=phi i8*[%fP,%fC],[%dX,%dP]
%fW=getelementptr inbounds i8,i8*%fT,i64 8
%fX=bitcast i8*%fW to i8**
store i8*%fU,i8**%fX,align 8
%fY=getelementptr inbounds i8,i8*%fT,i64 16
%fZ=bitcast i8*%fY to i32*
store i32 3,i32*%fZ,align 4
store i8*%fV,i8**%d,align 8
store i8*%fU,i8**%f,align 8
%f0=call i8*@sml_alloc(i32 inreg 20)#0
%f1=getelementptr inbounds i8,i8*%f0,i64 -4
%f2=bitcast i8*%f1 to i32*
store i32 1342177296,i32*%f2,align 4
store i8*%f0,i8**%h,align 8
%f3=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%f4=bitcast i8*%f0 to i8**
store i8*%f3,i8**%f4,align 8
%f5=getelementptr inbounds i8,i8*%f0,i64 8
%f6=bitcast i8*%f5 to i8**
store i8*null,i8**%f6,align 8
%f7=getelementptr inbounds i8,i8*%f0,i64 16
%f8=bitcast i8*%f7 to i32*
store i32 3,i32*%f8,align 4
%f9=call i8*@sml_alloc(i32 inreg 20)#0
%ga=getelementptr inbounds i8,i8*%f9,i64 -4
%gb=bitcast i8*%ga to i32*
store i32 1342177296,i32*%gb,align 4
store i8*%f9,i8**%d,align 8
%gc=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gd=bitcast i8*%f9 to i8**
store i8*%gc,i8**%gd,align 8
%ge=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%gf=getelementptr inbounds i8,i8*%f9,i64 8
%gg=bitcast i8*%gf to i8**
store i8*%ge,i8**%gg,align 8
%gh=getelementptr inbounds i8,i8*%f9,i64 16
%gi=bitcast i8*%gh to i32*
store i32 3,i32*%gi,align 4
%gj=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%gk=getelementptr inbounds i8,i8*%gj,i64 16
%gl=bitcast i8*%gk to i8*(i8*,i8*)**
%gm=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gl,align 8
%gn=bitcast i8*%gj to i8**
%go=load i8*,i8**%gn,align 8
store i8*%go,i8**%g,align 8
%gp=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gq=getelementptr inbounds i8,i8*%gp,i64 16
%gr=bitcast i8*%gq to i8*(i8*,i8*)**
%gs=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gr,align 8
%gt=bitcast i8*%gp to i8**
%gu=load i8*,i8**%gt,align 8
%gv=call fastcc i8*%gs(i8*inreg%gu,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jB,i64 0,i32 2)to i8*))
%gw=getelementptr inbounds i8,i8*%gv,i64 16
%gx=bitcast i8*%gw to i8*(i8*,i8*)**
%gy=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gx,align 8
%gz=bitcast i8*%gv to i8**
%gA=load i8*,i8**%gz,align 8
%gB=load i8*,i8**%d,align 8
%gC=call fastcc i8*%gy(i8*inreg%gA,i8*inreg%gB)
%gD=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gE=call fastcc i8*%gm(i8*inreg%gD,i8*inreg%gC)
store i8*%gE,i8**%g,align 8
%gF=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%gG=getelementptr inbounds i8,i8*%gF,i64 16
%gH=bitcast i8*%gG to i8*(i8*,i8*)**
%gI=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gH,align 8
%gJ=bitcast i8*%gF to i8**
%gK=load i8*,i8**%gJ,align 8
%gL=call fastcc i8*%gI(i8*inreg%gK,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jC,i64 0,i32 2)to i8*))
%gM=getelementptr inbounds i8,i8*%gL,i64 16
%gN=bitcast i8*%gM to i8*(i8*,i8*)**
%gO=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gN,align 8
%gP=bitcast i8*%gL to i8**
%gQ=load i8*,i8**%gP,align 8
%gR=bitcast i8**%m to i8***
%gS=load i8**,i8***%gR,align 8
store i8*null,i8**%m,align 8
%gT=load i8*,i8**%gS,align 8
%gU=call fastcc i8*%gO(i8*inreg%gQ,i8*inreg%gT)
%gV=getelementptr inbounds i8,i8*%gU,i64 16
%gW=bitcast i8*%gV to i8*(i8*,i8*)**
%gX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gW,align 8
%gY=bitcast i8*%gU to i8**
%gZ=load i8*,i8**%gY,align 8
%g0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g1=call fastcc i8*%gX(i8*inreg%gZ,i8*inreg%g0)
store i8*%g1,i8**%d,align 8
%g2=call i8*@sml_alloc(i32 inreg 20)#0
%g3=getelementptr inbounds i8,i8*%g2,i64 -4
%g4=bitcast i8*%g3 to i32*
store i32 1342177296,i32*%g4,align 4
store i8*%g2,i8**%h,align 8
%g5=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%g6=bitcast i8*%g2 to i8**
store i8*%g5,i8**%g6,align 8
%g7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%g8=getelementptr inbounds i8,i8*%g2,i64 8
%g9=bitcast i8*%g8 to i8**
store i8*%g7,i8**%g9,align 8
%ha=getelementptr inbounds i8,i8*%g2,i64 16
%hb=bitcast i8*%ha to i32*
store i32 3,i32*%hb,align 4
%hc=call i8*@sml_alloc(i32 inreg 28)#0
%hd=getelementptr inbounds i8,i8*%hc,i64 -4
%he=bitcast i8*%hd to i32*
store i32 1342177304,i32*%he,align 4
store i8*%hc,i8**%d,align 8
%hf=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hg=bitcast i8*%hc to i8**
store i8*%hf,i8**%hg,align 8
%hh=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%hi=getelementptr inbounds i8,i8*%hc,i64 8
%hj=bitcast i8*%hi to i8**
store i8*%hh,i8**%hj,align 8
%hk=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hl=getelementptr inbounds i8,i8*%hc,i64 16
%hm=bitcast i8*%hl to i8**
store i8*%hk,i8**%hm,align 8
%hn=getelementptr inbounds i8,i8*%hc,i64 24
%ho=bitcast i8*%hn to i32*
store i32 7,i32*%ho,align 4
%hp=call i8*@sml_alloc(i32 inreg 20)#0
%hq=getelementptr inbounds i8,i8*%hp,i64 -4
%hr=bitcast i8*%hq to i32*
store i32 1342177296,i32*%hr,align 4
store i8*%hp,i8**%e,align 8
%hs=getelementptr inbounds i8,i8*%hp,i64 4
%ht=bitcast i8*%hs to i32*
store i32 0,i32*%ht,align 1
%hu=bitcast i8*%hp to i32*
store i32 7,i32*%hu,align 4
%hv=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hw=getelementptr inbounds i8,i8*%hp,i64 8
%hx=bitcast i8*%hw to i8**
store i8*%hv,i8**%hx,align 8
%hy=getelementptr inbounds i8,i8*%hp,i64 16
%hz=bitcast i8*%hy to i32*
store i32 2,i32*%hz,align 4
%hA=call i8*@sml_alloc(i32 inreg 20)#0
%hB=getelementptr inbounds i8,i8*%hA,i64 -4
%hC=bitcast i8*%hB to i32*
store i32 1342177296,i32*%hC,align 4
store i8*%hA,i8**%d,align 8
%hD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%hE=bitcast i8*%hA to i8**
store i8*%hD,i8**%hE,align 8
%hF=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hG=getelementptr inbounds i8,i8*%hA,i64 8
%hH=bitcast i8*%hG to i8**
store i8*%hF,i8**%hH,align 8
%hI=getelementptr inbounds i8,i8*%hA,i64 16
%hJ=bitcast i8*%hI to i32*
store i32 3,i32*%hJ,align 4
%hK=call i8*@sml_alloc(i32 inreg 20)#0
%hL=getelementptr inbounds i8,i8*%hK,i64 -4
%hM=bitcast i8*%hL to i32*
store i32 1342177296,i32*%hM,align 4
%hN=bitcast i8*%hK to i64*
store i64 0,i64*%hN,align 4
%hO=load i8*,i8**%d,align 8
%hP=getelementptr inbounds i8,i8*%hK,i64 8
%hQ=bitcast i8*%hP to i8**
store i8*%hO,i8**%hQ,align 8
%hR=getelementptr inbounds i8,i8*%hK,i64 16
%hS=bitcast i8*%hR to i32*
store i32 2,i32*%hS,align 4
ret i8*%hK
hT:
%hU=getelementptr inbounds i8,i8*%z,i64 8
%hV=bitcast i8*%hU to i8**
%hW=load i8*,i8**%hV,align 8
%hX=bitcast i8*%hW to i8**
%hY=load i8*,i8**%hX,align 8
%hZ=getelementptr inbounds i8,i8*%hW,i64 8
%h0=bitcast i8*%hZ to i8**
%h1=load i8*,i8**%h0,align 8
%h2=bitcast i8*%h1 to i8**
%h3=load i8*,i8**%h2,align 8
store i8*%h3,i8**%e,align 8
%h4=getelementptr inbounds i8,i8*%h1,i64 8
%h5=bitcast i8*%h4 to i8**
%h6=load i8*,i8**%h5,align 8
store i8*%h6,i8**%f,align 8
%h7=getelementptr inbounds i8,i8*%hW,i64 16
%h8=bitcast i8*%h7 to i8**
%h9=load i8*,i8**%h8,align 8
store i8*%h9,i8**%g,align 8
%ia=bitcast i8*%hY to i8**
%ib=load i8*,i8**%ia,align 8
store i8*%ib,i8**%h,align 8
%ic=getelementptr inbounds i8,i8*%hY,i64 8
%id=bitcast i8*%ic to i8**
%ie=load i8*,i8**%id,align 8
store i8*%ie,i8**%i,align 8
%if=getelementptr inbounds i8,i8*%hY,i64 16
%ig=bitcast i8*%if to i8**
%ih=load i8*,i8**%ig,align 8
store i8*%ih,i8**%j,align 8
%ii=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%ib)
store i8*%ii,i8**%k,align 8
%ij=call i8*@sml_alloc(i32 inreg 20)#0
%ik=getelementptr inbounds i8,i8*%ij,i64 -4
%il=bitcast i8*%ik to i32*
store i32 1342177296,i32*%il,align 4
store i8*%ij,i8**%l,align 8
%im=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%in=bitcast i8*%ij to i8**
store i8*%im,i8**%in,align 8
%io=getelementptr inbounds i8,i8*%ij,i64 8
%ip=bitcast i8*%io to i8**
store i8*null,i8**%ip,align 8
%iq=getelementptr inbounds i8,i8*%ij,i64 16
%ir=bitcast i8*%iq to i32*
store i32 3,i32*%ir,align 4
%is=call i8*@sml_alloc(i32 inreg 20)#0
%it=getelementptr inbounds i8,i8*%is,i64 -4
%iu=bitcast i8*%it to i32*
store i32 1342177296,i32*%iu,align 4
store i8*%is,i8**%n,align 8
%iv=getelementptr inbounds i8,i8*%is,i64 4
%iw=bitcast i8*%iv to i32*
store i32 0,i32*%iw,align 1
%ix=bitcast i8*%is to i32*
store i32 15,i32*%ix,align 4
%iy=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%iz=getelementptr inbounds i8,i8*%is,i64 8
%iA=bitcast i8*%iz to i8**
store i8*%iy,i8**%iA,align 8
%iB=getelementptr inbounds i8,i8*%is,i64 16
%iC=bitcast i8*%iB to i32*
store i32 2,i32*%iC,align 4
%iD=call i8*@sml_alloc(i32 inreg 20)#0
%iE=getelementptr inbounds i8,i8*%iD,i64 -4
%iF=bitcast i8*%iE to i32*
store i32 1342177296,i32*%iF,align 4
store i8*%iD,i8**%h,align 8
%iG=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%iH=bitcast i8*%iD to i8**
store i8*%iG,i8**%iH,align 8
%iI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%iJ=getelementptr inbounds i8,i8*%iD,i64 8
%iK=bitcast i8*%iJ to i8**
store i8*%iI,i8**%iK,align 8
%iL=getelementptr inbounds i8,i8*%iD,i64 16
%iM=bitcast i8*%iL to i32*
store i32 3,i32*%iM,align 4
%iN=load i8*,i8**%d,align 8
%iO=load i8*,i8**%m,align 8
%iP=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%iO,i8*inreg%iN)
%iQ=getelementptr inbounds i8,i8*%iP,i64 16
%iR=bitcast i8*%iQ to i8*(i8*,i8*)**
%iS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%iR,align 8
%iT=bitcast i8*%iP to i8**
%iU=load i8*,i8**%iT,align 8
store i8*%iU,i8**%k,align 8
%iV=call i8*@sml_alloc(i32 inreg 4)#0
%iW=bitcast i8*%iV to i32*
%iX=getelementptr inbounds i8,i8*%iV,i64 -4
%iY=bitcast i8*%iX to i32*
store i32 4,i32*%iY,align 4
store i32 1,i32*%iW,align 4
%iZ=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%i0=call fastcc i8*%iS(i8*inreg%iZ,i8*inreg%iV)
%i1=getelementptr inbounds i8,i8*%i0,i64 16
%i2=bitcast i8*%i1 to i8*(i8*,i8*)**
%i3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%i2,align 8
%i4=bitcast i8*%i0 to i8**
%i5=load i8*,i8**%i4,align 8
%i6=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%i7=call fastcc i8*%i3(i8*inreg%i5,i8*inreg%i6)
%i8=bitcast i8*%i7 to i8**
%i9=load i8*,i8**%i8,align 8
store i8*%i9,i8**%h,align 8
%ja=getelementptr inbounds i8,i8*%i7,i64 8
%jb=bitcast i8*%ja to i8**
%jc=load i8*,i8**%jb,align 8
store i8*%jc,i8**%k,align 8
%jd=call i8*@sml_alloc(i32 inreg 28)#0
%je=getelementptr inbounds i8,i8*%jd,i64 -4
%jf=bitcast i8*%je to i32*
store i32 1342177304,i32*%jf,align 4
store i8*%jd,i8**%l,align 8
%jg=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%jh=bitcast i8*%jd to i8**
store i8*%jg,i8**%jh,align 8
%ji=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%jj=getelementptr inbounds i8,i8*%jd,i64 8
%jk=bitcast i8*%jj to i8**
store i8*%ji,i8**%jk,align 8
%jl=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%jm=getelementptr inbounds i8,i8*%jd,i64 16
%jn=bitcast i8*%jm to i8**
store i8*%jl,i8**%jn,align 8
%jo=getelementptr inbounds i8,i8*%jd,i64 24
%jp=bitcast i8*%jo to i32*
store i32 7,i32*%jp,align 4
%jq=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%jr=getelementptr inbounds i8,i8*%jq,i64 16
%js=bitcast i8*%jr to i8*(i8*,i8*)**
%jt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%js,align 8
%ju=bitcast i8*%jq to i8**
%jv=load i8*,i8**%ju,align 8
%jw=call fastcc i8*%jt(i8*inreg%jv,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ju,i64 0,i32 2)to i8*))
%jx=getelementptr inbounds i8,i8*%jw,i64 16
%jy=bitcast i8*%jx to i8*(i8*,i8*)**
%jz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jy,align 8
%jA=bitcast i8*%jw to i8**
%jB=load i8*,i8**%jA,align 8
%jC=load i8*,i8**%e,align 8
%jD=call fastcc i8*%jz(i8*inreg%jB,i8*inreg%jC)
%jE=getelementptr inbounds i8,i8*%jD,i64 16
%jF=bitcast i8*%jE to i8*(i8*,i8*)**
%jG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jF,align 8
%jH=bitcast i8*%jD to i8**
%jI=load i8*,i8**%jH,align 8
%jJ=load i8*,i8**%f,align 8
%jK=call fastcc i8*%jG(i8*inreg%jI,i8*inreg%jJ)
%jL=getelementptr inbounds i8,i8*%jK,i64 16
%jM=bitcast i8*%jL to i8*(i8*,i8*)**
%jN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jM,align 8
%jO=bitcast i8*%jK to i8**
%jP=load i8*,i8**%jO,align 8
%jQ=call fastcc i8*%jN(i8*inreg%jP,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jw,i64 0,i32 2)to i8*))
%jR=load i8*,i8**%m,align 8
%jS=getelementptr inbounds i8,i8*%jR,i64 16
%jT=bitcast i8*%jS to i8**
%jU=load i8*,i8**%jT,align 8
store i8*%jU,i8**%j,align 8
%jV=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%jW=getelementptr inbounds i8,i8*%jV,i64 16
%jX=bitcast i8*%jW to i8*(i8*,i8*)**
%jY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%jX,align 8
%jZ=bitcast i8*%jV to i8**
%j0=load i8*,i8**%jZ,align 8
store i8*%j0,i8**%i,align 8
%j1=call i8*@sml_alloc(i32 inreg 20)#0
%j2=getelementptr inbounds i8,i8*%j1,i64 -4
%j3=bitcast i8*%j2 to i32*
store i32 1342177296,i32*%j3,align 4
store i8*%j1,i8**%k,align 8
%j4=load i8*,i8**%d,align 8
%j5=bitcast i8*%j1 to i8**
store i8*%j4,i8**%j5,align 8
%j6=load i8*,i8**%m,align 8
%j7=getelementptr inbounds i8,i8*%j1,i64 8
%j8=bitcast i8*%j7 to i8**
store i8*%j6,i8**%j8,align 8
%j9=getelementptr inbounds i8,i8*%j1,i64 16
%ka=bitcast i8*%j9 to i32*
store i32 3,i32*%ka,align 4
%kb=call i8*@sml_alloc(i32 inreg 28)#0
%kc=getelementptr inbounds i8,i8*%kb,i64 -4
%kd=bitcast i8*%kc to i32*
store i32 1342177304,i32*%kd,align 4
%ke=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%kf=bitcast i8*%kb to i8**
store i8*%ke,i8**%kf,align 8
%kg=getelementptr inbounds i8,i8*%kb,i64 8
%kh=bitcast i8*%kg to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2594 to void(...)*),void(...)**%kh,align 8
%ki=getelementptr inbounds i8,i8*%kb,i64 16
%kj=bitcast i8*%ki to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2594 to void(...)*),void(...)**%kj,align 8
%kk=getelementptr inbounds i8,i8*%kb,i64 24
%kl=bitcast i8*%kk to i32*
store i32 -2147483647,i32*%kl,align 4
%km=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%kn=call fastcc i8*%jY(i8*inreg%km,i8*inreg%kb)
%ko=getelementptr inbounds i8,i8*%kn,i64 16
%kp=bitcast i8*%ko to i8*(i8*,i8*)**
%kq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%kp,align 8
%kr=bitcast i8*%kn to i8**
%ks=load i8*,i8**%kr,align 8
%kt=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ku=call fastcc i8*%kq(i8*inreg%ks,i8*inreg%kt)
%kv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%kw=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%kv,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jx,i64 0,i32 2)to i8*),i8*inreg%ku)
%kx=bitcast i8*%kw to i8**
%ky=load i8*,i8**%kx,align 8
store i8*%ky,i8**%e,align 8
%kz=getelementptr inbounds i8,i8*%kw,i64 8
%kA=bitcast i8*%kz to i8**
%kB=load i8*,i8**%kA,align 8
store i8*%kB,i8**%i,align 8
%kC=load i8*,i8**%g,align 8
%kD=icmp eq i8*%kC,null
store i8*null,i8**%g,align 8
br i1%kD,label%kE,label%kO
kE:
%kF=load i8*,i8**%m,align 8
%kG=getelementptr inbounds i8,i8*%kF,i64 8
%kH=bitcast i8*%kG to i8**
%kI=load i8*,i8**%kH,align 8
store i8*%kI,i8**%d,align 8
%kJ=call i8*@sml_alloc(i32 inreg 20)#0
%kK=getelementptr inbounds i8,i8*%kJ,i64 -4
%kL=bitcast i8*%kK to i32*
store i32 1342177296,i32*%kL,align 4
%kM=load i8*,i8**%d,align 8
%kN=bitcast i8*%kJ to i8**
store i8*%kM,i8**%kN,align 8
br label%mH
kO:
%kP=bitcast i8*%kC to i8**
%kQ=load i8*,i8**%kP,align 8
%kR=bitcast i8*%kQ to i32*
%kS=load i32,i32*%kR,align 4
switch i32%kS,label%kT[
i32 1,label%lX
i32 0,label%lb
]
kT:
store i8*null,i8**%f,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%i,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%kU=load i8*,i8**@_SMLZ5Match,align 8
store i8*%kU,i8**%d,align 8
%kV=call i8*@sml_alloc(i32 inreg 20)#0
%kW=getelementptr inbounds i8,i8*%kV,i64 -4
%kX=bitcast i8*%kW to i32*
store i32 1342177296,i32*%kX,align 4
store i8*%kV,i8**%e,align 8
%kY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%kZ=bitcast i8*%kV to i8**
store i8*%kY,i8**%kZ,align 8
%k0=getelementptr inbounds i8,i8*%kV,i64 8
%k1=bitcast i8*%k0 to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jA,i64 0,i32 2,i64 0),i8**%k1,align 8
%k2=getelementptr inbounds i8,i8*%kV,i64 16
%k3=bitcast i8*%k2 to i32*
store i32 3,i32*%k3,align 4
%k4=call i8*@sml_alloc(i32 inreg 60)#0
%k5=getelementptr inbounds i8,i8*%k4,i64 -4
%k6=bitcast i8*%k5 to i32*
store i32 1342177336,i32*%k6,align 4
%k7=getelementptr inbounds i8,i8*%k4,i64 56
%k8=bitcast i8*%k7 to i32*
store i32 1,i32*%k8,align 4
%k9=load i8*,i8**%e,align 8
%la=bitcast i8*%k4 to i8**
store i8*%k9,i8**%la,align 8
call void@sml_raise(i8*inreg%k4)#1
unreachable
lb:
%lc=getelementptr inbounds i8,i8*%kQ,i64 8
%ld=bitcast i8*%lc to i8**
%le=load i8*,i8**%ld,align 8
%lf=bitcast i8*%le to i8**
%lg=load i8*,i8**%lf,align 8
%lh=getelementptr inbounds i8,i8*%le,i64 8
%li=bitcast i8*%lh to i8**
%lj=load i8*,i8**%li,align 8
store i8*%lj,i8**%g,align 8
%lk=load i8*,i8**%d,align 8
%ll=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%lm=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%ll,i8*inreg%lk,i8*inreg%lg)
%ln=bitcast i8*%lm to i8**
%lo=load i8*,i8**%ln,align 8
store i8*%lo,i8**%d,align 8
%lp=getelementptr inbounds i8,i8*%lm,i64 8
%lq=bitcast i8*%lp to i8**
%lr=load i8*,i8**%lq,align 8
store i8*%lr,i8**%j,align 8
%ls=call i8*@sml_alloc(i32 inreg 20)#0
%lt=getelementptr inbounds i8,i8*%ls,i64 -4
%lu=bitcast i8*%lt to i32*
store i32 1342177296,i32*%lu,align 4
store i8*%ls,i8**%k,align 8
%lv=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%lw=bitcast i8*%ls to i8**
store i8*%lv,i8**%lw,align 8
%lx=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ly=getelementptr inbounds i8,i8*%ls,i64 8
%lz=bitcast i8*%ly to i8**
store i8*%lx,i8**%lz,align 8
%lA=getelementptr inbounds i8,i8*%ls,i64 16
%lB=bitcast i8*%lA to i32*
store i32 3,i32*%lB,align 4
%lC=call i8*@sml_alloc(i32 inreg 20)#0
%lD=getelementptr inbounds i8,i8*%lC,i64 -4
%lE=bitcast i8*%lD to i32*
store i32 1342177296,i32*%lE,align 4
store i8*%lC,i8**%g,align 8
%lF=getelementptr inbounds i8,i8*%lC,i64 4
%lG=bitcast i8*%lF to i32*
store i32 0,i32*%lG,align 1
%lH=bitcast i8*%lC to i32*
store i32 30,i32*%lH,align 4
%lI=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%lJ=getelementptr inbounds i8,i8*%lC,i64 8
%lK=bitcast i8*%lJ to i8**
store i8*%lI,i8**%lK,align 8
%lL=getelementptr inbounds i8,i8*%lC,i64 16
%lM=bitcast i8*%lL to i32*
store i32 2,i32*%lM,align 4
%lN=call i8*@sml_alloc(i32 inreg 20)#0
%lO=getelementptr inbounds i8,i8*%lN,i64 -4
%lP=bitcast i8*%lO to i32*
store i32 1342177296,i32*%lP,align 4
%lQ=load i8*,i8**%d,align 8
%lR=bitcast i8*%lN to i8**
store i8*%lQ,i8**%lR,align 8
%lS=load i8*,i8**%g,align 8
%lT=getelementptr inbounds i8,i8*%lN,i64 8
%lU=bitcast i8*%lT to i8**
store i8*%lS,i8**%lU,align 8
%lV=getelementptr inbounds i8,i8*%lN,i64 16
%lW=bitcast i8*%lV to i32*
store i32 3,i32*%lW,align 4
br label%mr
lX:
%lY=getelementptr inbounds i8,i8*%kQ,i64 8
%lZ=bitcast i8*%lY to i8**
%l0=load i8*,i8**%lZ,align 8
store i8*%l0,i8**%g,align 8
%l1=load i8*,i8**%d,align 8
%l2=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%l3=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%l2,i8*inreg%l1)
%l4=getelementptr inbounds i8,i8*%l3,i64 16
%l5=bitcast i8*%l4 to i8*(i8*,i8*)**
%l6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%l5,align 8
%l7=bitcast i8*%l3 to i8**
%l8=load i8*,i8**%l7,align 8
store i8*%l8,i8**%d,align 8
%l9=call i8*@sml_alloc(i32 inreg 4)#0
%ma=bitcast i8*%l9 to i32*
%mb=getelementptr inbounds i8,i8*%l9,i64 -4
%mc=bitcast i8*%mb to i32*
store i32 4,i32*%mc,align 4
store i32 9,i32*%ma,align 4
%md=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%me=call fastcc i8*%l6(i8*inreg%md,i8*inreg%l9)
%mf=getelementptr inbounds i8,i8*%me,i64 16
%mg=bitcast i8*%mf to i8*(i8*,i8*)**
%mh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%mg,align 8
%mi=bitcast i8*%me to i8**
%mj=load i8*,i8**%mi,align 8
%mk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ml=call fastcc i8*%mh(i8*inreg%mj,i8*inreg%mk)
%mm=bitcast i8*%ml to i8**
%mn=load i8*,i8**%mm,align 8
%mo=getelementptr inbounds i8,i8*%ml,i64 8
%mp=bitcast i8*%mo to i8**
%mq=load i8*,i8**%mp,align 8
br label%mr
mr:
%ms=phi i8*[%lS,%lb],[%mq,%lX]
%mt=phi i8*[%lQ,%lb],[%mn,%lX]
store i8*%mt,i8**%d,align 8
store i8*%ms,i8**%g,align 8
%mu=call i8*@sml_alloc(i32 inreg 12)#0
%mv=getelementptr inbounds i8,i8*%mu,i64 -4
%mw=bitcast i8*%mv to i32*
store i32 1342177288,i32*%mw,align 4
store i8*%mu,i8**%j,align 8
%mx=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%my=bitcast i8*%mu to i8**
store i8*%mx,i8**%my,align 8
%mz=getelementptr inbounds i8,i8*%mu,i64 8
%mA=bitcast i8*%mz to i32*
store i32 1,i32*%mA,align 4
%mB=call i8*@sml_alloc(i32 inreg 20)#0
%mC=getelementptr inbounds i8,i8*%mB,i64 -4
%mD=bitcast i8*%mC to i32*
store i32 1342177296,i32*%mD,align 4
%mE=load i8*,i8**%d,align 8
%mF=bitcast i8*%mB to i8**
store i8*%mE,i8**%mF,align 8
%mG=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
br label%mH
mH:
%mI=phi i8*[%mB,%mr],[%kJ,%kE]
%mJ=phi i8*[%mG,%mr],[null,%kE]
%mK=phi i8*[%mE,%mr],[%kM,%kE]
%mL=getelementptr inbounds i8,i8*%mI,i64 8
%mM=bitcast i8*%mL to i8**
store i8*%mJ,i8**%mM,align 8
%mN=getelementptr inbounds i8,i8*%mI,i64 16
%mO=bitcast i8*%mN to i32*
store i32 3,i32*%mO,align 4
store i8*%mK,i8**%d,align 8
store i8*%mJ,i8**%g,align 8
%mP=call i8*@sml_alloc(i32 inreg 20)#0
%mQ=getelementptr inbounds i8,i8*%mP,i64 -4
%mR=bitcast i8*%mQ to i32*
store i32 1342177296,i32*%mR,align 4
store i8*%mP,i8**%j,align 8
%mS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%mT=bitcast i8*%mP to i8**
store i8*%mS,i8**%mT,align 8
%mU=getelementptr inbounds i8,i8*%mP,i64 8
%mV=bitcast i8*%mU to i8**
store i8*null,i8**%mV,align 8
%mW=getelementptr inbounds i8,i8*%mP,i64 16
%mX=bitcast i8*%mW to i32*
store i32 3,i32*%mX,align 4
%mY=call i8*@sml_alloc(i32 inreg 20)#0
%mZ=getelementptr inbounds i8,i8*%mY,i64 -4
%m0=bitcast i8*%mZ to i32*
store i32 1342177296,i32*%m0,align 4
store i8*%mY,i8**%k,align 8
%m1=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%m2=bitcast i8*%mY to i8**
store i8*%m1,i8**%m2,align 8
%m3=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%m4=getelementptr inbounds i8,i8*%mY,i64 8
%m5=bitcast i8*%m4 to i8**
store i8*%m3,i8**%m5,align 8
%m6=getelementptr inbounds i8,i8*%mY,i64 16
%m7=bitcast i8*%m6 to i32*
store i32 3,i32*%m7,align 4
%m8=call i8*@sml_alloc(i32 inreg 20)#0
%m9=getelementptr inbounds i8,i8*%m8,i64 -4
%na=bitcast i8*%m9 to i32*
store i32 1342177296,i32*%na,align 4
store i8*%m8,i8**%d,align 8
%nb=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%nc=bitcast i8*%m8 to i8**
store i8*%nb,i8**%nc,align 8
%nd=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%ne=getelementptr inbounds i8,i8*%m8,i64 8
%nf=bitcast i8*%ne to i8**
store i8*%nd,i8**%nf,align 8
%ng=getelementptr inbounds i8,i8*%m8,i64 16
%nh=bitcast i8*%ng to i32*
store i32 3,i32*%nh,align 4
%ni=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%nj=getelementptr inbounds i8,i8*%ni,i64 16
%nk=bitcast i8*%nj to i8*(i8*,i8*)**
%nl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nk,align 8
%nm=bitcast i8*%ni to i8**
%nn=load i8*,i8**%nm,align 8
store i8*%nn,i8**%e,align 8
%no=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%np=getelementptr inbounds i8,i8*%no,i64 16
%nq=bitcast i8*%np to i8*(i8*,i8*)**
%nr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nq,align 8
%ns=bitcast i8*%no to i8**
%nt=load i8*,i8**%ns,align 8
%nu=call fastcc i8*%nr(i8*inreg%nt,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jy,i64 0,i32 2)to i8*))
%nv=getelementptr inbounds i8,i8*%nu,i64 16
%nw=bitcast i8*%nv to i8*(i8*,i8*)**
%nx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nw,align 8
%ny=bitcast i8*%nu to i8**
%nz=load i8*,i8**%ny,align 8
%nA=load i8*,i8**%d,align 8
%nB=call fastcc i8*%nx(i8*inreg%nz,i8*inreg%nA)
%nC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%nD=call fastcc i8*%nl(i8*inreg%nC,i8*inreg%nB)
store i8*%nD,i8**%e,align 8
%nE=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%nF=getelementptr inbounds i8,i8*%nE,i64 16
%nG=bitcast i8*%nF to i8*(i8*,i8*)**
%nH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nG,align 8
%nI=bitcast i8*%nE to i8**
%nJ=load i8*,i8**%nI,align 8
%nK=call fastcc i8*%nH(i8*inreg%nJ,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jz,i64 0,i32 2)to i8*))
%nL=getelementptr inbounds i8,i8*%nK,i64 16
%nM=bitcast i8*%nL to i8*(i8*,i8*)**
%nN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nM,align 8
%nO=bitcast i8*%nK to i8**
%nP=load i8*,i8**%nO,align 8
%nQ=bitcast i8**%m to i8***
%nR=load i8**,i8***%nQ,align 8
store i8*null,i8**%m,align 8
%nS=load i8*,i8**%nR,align 8
%nT=call fastcc i8*%nN(i8*inreg%nP,i8*inreg%nS)
%nU=getelementptr inbounds i8,i8*%nT,i64 16
%nV=bitcast i8*%nU to i8*(i8*,i8*)**
%nW=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%nV,align 8
%nX=bitcast i8*%nT to i8**
%nY=load i8*,i8**%nX,align 8
%nZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n0=call fastcc i8*%nW(i8*inreg%nY,i8*inreg%nZ)
store i8*%n0,i8**%d,align 8
%n1=call i8*@sml_alloc(i32 inreg 20)#0
%n2=getelementptr inbounds i8,i8*%n1,i64 -4
%n3=bitcast i8*%n2 to i32*
store i32 1342177296,i32*%n3,align 4
store i8*%n1,i8**%h,align 8
%n4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%n5=bitcast i8*%n1 to i8**
store i8*%n4,i8**%n5,align 8
%n6=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%n7=getelementptr inbounds i8,i8*%n1,i64 8
%n8=bitcast i8*%n7 to i8**
store i8*%n6,i8**%n8,align 8
%n9=getelementptr inbounds i8,i8*%n1,i64 16
%oa=bitcast i8*%n9 to i32*
store i32 3,i32*%oa,align 4
%ob=call i8*@sml_alloc(i32 inreg 36)#0
%oc=getelementptr inbounds i8,i8*%ob,i64 -4
%od=bitcast i8*%oc to i32*
store i32 1342177312,i32*%od,align 4
store i8*%ob,i8**%d,align 8
%oe=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%of=bitcast i8*%ob to i8**
store i8*%oe,i8**%of,align 8
%og=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%oh=getelementptr inbounds i8,i8*%ob,i64 8
%oi=bitcast i8*%oh to i8**
store i8*%og,i8**%oi,align 8
%oj=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%ok=getelementptr inbounds i8,i8*%ob,i64 16
%ol=bitcast i8*%ok to i8**
store i8*%oj,i8**%ol,align 8
%om=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%on=getelementptr inbounds i8,i8*%ob,i64 24
%oo=bitcast i8*%on to i8**
store i8*%om,i8**%oo,align 8
%op=getelementptr inbounds i8,i8*%ob,i64 32
%oq=bitcast i8*%op to i32*
store i32 15,i32*%oq,align 4
%or=call i8*@sml_alloc(i32 inreg 20)#0
%os=getelementptr inbounds i8,i8*%or,i64 -4
%ot=bitcast i8*%os to i32*
store i32 1342177296,i32*%ot,align 4
store i8*%or,i8**%e,align 8
%ou=getelementptr inbounds i8,i8*%or,i64 4
%ov=bitcast i8*%ou to i32*
store i32 0,i32*%ov,align 1
%ow=bitcast i8*%or to i32*
store i32 29,i32*%ow,align 4
%ox=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%oy=getelementptr inbounds i8,i8*%or,i64 8
%oz=bitcast i8*%oy to i8**
store i8*%ox,i8**%oz,align 8
%oA=getelementptr inbounds i8,i8*%or,i64 16
%oB=bitcast i8*%oA to i32*
store i32 2,i32*%oB,align 4
%oC=call i8*@sml_alloc(i32 inreg 20)#0
%oD=getelementptr inbounds i8,i8*%oC,i64 -4
%oE=bitcast i8*%oD to i32*
store i32 1342177296,i32*%oE,align 4
store i8*%oC,i8**%d,align 8
%oF=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%oG=bitcast i8*%oC to i8**
store i8*%oF,i8**%oG,align 8
%oH=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%oI=getelementptr inbounds i8,i8*%oC,i64 8
%oJ=bitcast i8*%oI to i8**
store i8*%oH,i8**%oJ,align 8
%oK=getelementptr inbounds i8,i8*%oC,i64 16
%oL=bitcast i8*%oK to i32*
store i32 3,i32*%oL,align 4
%oM=call i8*@sml_alloc(i32 inreg 20)#0
%oN=getelementptr inbounds i8,i8*%oM,i64 -4
%oO=bitcast i8*%oN to i32*
store i32 1342177296,i32*%oO,align 4
%oP=bitcast i8*%oM to i64*
store i64 0,i64*%oP,align 4
%oQ=load i8*,i8**%d,align 8
%oR=getelementptr inbounds i8,i8*%oM,i64 8
%oS=bitcast i8*%oR to i8**
store i8*%oQ,i8**%oS,align 8
%oT=getelementptr inbounds i8,i8*%oM,i64 16
%oU=bitcast i8*%oT to i32*
store i32 2,i32*%oU,align 4
ret i8*%oM
oV:
%oW=getelementptr inbounds i8,i8*%z,i64 8
%oX=bitcast i8*%oW to i8**
%oY=load i8*,i8**%oX,align 8
%oZ=bitcast i8*%oY to i8**
%o0=load i8*,i8**%oZ,align 8
%o1=getelementptr inbounds i8,i8*%oY,i64 8
%o2=bitcast i8*%o1 to i8**
%o3=load i8*,i8**%o2,align 8
store i8*%o3,i8**%f,align 8
%o4=bitcast i8*%o0 to i8**
%o5=load i8*,i8**%o4,align 8
store i8*%o5,i8**%g,align 8
%o6=getelementptr inbounds i8,i8*%o0,i64 8
%o7=bitcast i8*%o6 to i8**
%o8=load i8*,i8**%o7,align 8
store i8*%o8,i8**%h,align 8
%o9=getelementptr inbounds i8,i8*%o0,i64 16
%pa=bitcast i8*%o9 to i8**
%pb=load i8*,i8**%pa,align 8
store i8*%pb,i8**%i,align 8
%pc=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%o5)
store i8*%pc,i8**%j,align 8
%pd=call i8*@sml_alloc(i32 inreg 20)#0
%pe=getelementptr inbounds i8,i8*%pd,i64 -4
%pf=bitcast i8*%pe to i32*
store i32 1342177296,i32*%pf,align 4
store i8*%pd,i8**%k,align 8
%pg=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ph=bitcast i8*%pd to i8**
store i8*%pg,i8**%ph,align 8
%pi=getelementptr inbounds i8,i8*%pd,i64 8
%pj=bitcast i8*%pi to i8**
store i8*null,i8**%pj,align 8
%pk=getelementptr inbounds i8,i8*%pd,i64 16
%pl=bitcast i8*%pk to i32*
store i32 3,i32*%pl,align 4
%pm=call i8*@sml_alloc(i32 inreg 20)#0
%pn=getelementptr inbounds i8,i8*%pm,i64 -4
%po=bitcast i8*%pn to i32*
store i32 1342177296,i32*%po,align 4
store i8*%pm,i8**%l,align 8
%pp=getelementptr inbounds i8,i8*%pm,i64 4
%pq=bitcast i8*%pp to i32*
store i32 0,i32*%pq,align 1
%pr=bitcast i8*%pm to i32*
store i32 15,i32*%pr,align 4
%ps=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%pt=getelementptr inbounds i8,i8*%pm,i64 8
%pu=bitcast i8*%pt to i8**
store i8*%ps,i8**%pu,align 8
%pv=getelementptr inbounds i8,i8*%pm,i64 16
%pw=bitcast i8*%pv to i32*
store i32 2,i32*%pw,align 4
%px=call i8*@sml_alloc(i32 inreg 20)#0
%py=getelementptr inbounds i8,i8*%px,i64 -4
%pz=bitcast i8*%py to i32*
store i32 1342177296,i32*%pz,align 4
store i8*%px,i8**%g,align 8
%pA=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%pB=bitcast i8*%px to i8**
store i8*%pA,i8**%pB,align 8
%pC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%pD=getelementptr inbounds i8,i8*%px,i64 8
%pE=bitcast i8*%pD to i8**
store i8*%pC,i8**%pE,align 8
%pF=getelementptr inbounds i8,i8*%px,i64 16
%pG=bitcast i8*%pF to i32*
store i32 3,i32*%pG,align 4
%pH=load i8*,i8**%d,align 8
%pI=load i8*,i8**%m,align 8
%pJ=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%pI,i8*inreg%pH)
%pK=getelementptr inbounds i8,i8*%pJ,i64 16
%pL=bitcast i8*%pK to i8*(i8*,i8*)**
%pM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pL,align 8
%pN=bitcast i8*%pJ to i8**
%pO=load i8*,i8**%pN,align 8
store i8*%pO,i8**%j,align 8
%pP=call i8*@sml_alloc(i32 inreg 4)#0
%pQ=bitcast i8*%pP to i32*
%pR=getelementptr inbounds i8,i8*%pP,i64 -4
%pS=bitcast i8*%pR to i32*
store i32 4,i32*%pS,align 4
store i32 1,i32*%pQ,align 4
%pT=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%pU=call fastcc i8*%pM(i8*inreg%pT,i8*inreg%pP)
%pV=getelementptr inbounds i8,i8*%pU,i64 16
%pW=bitcast i8*%pV to i8*(i8*,i8*)**
%pX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%pW,align 8
%pY=bitcast i8*%pU to i8**
%pZ=load i8*,i8**%pY,align 8
%p0=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%p1=call fastcc i8*%pX(i8*inreg%pZ,i8*inreg%p0)
%p2=bitcast i8*%p1 to i8**
%p3=load i8*,i8**%p2,align 8
store i8*%p3,i8**%g,align 8
%p4=getelementptr inbounds i8,i8*%p1,i64 8
%p5=bitcast i8*%p4 to i8**
%p6=load i8*,i8**%p5,align 8
store i8*%p6,i8**%j,align 8
%p7=call i8*@sml_alloc(i32 inreg 28)#0
%p8=getelementptr inbounds i8,i8*%p7,i64 -4
%p9=bitcast i8*%p8 to i32*
store i32 1342177304,i32*%p9,align 4
store i8*%p7,i8**%k,align 8
%qa=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%qb=bitcast i8*%p7 to i8**
store i8*%qa,i8**%qb,align 8
%qc=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qd=getelementptr inbounds i8,i8*%p7,i64 8
%qe=bitcast i8*%qd to i8**
store i8*%qc,i8**%qe,align 8
%qf=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%qg=getelementptr inbounds i8,i8*%p7,i64 16
%qh=bitcast i8*%qg to i8**
store i8*%qf,i8**%qh,align 8
%qi=getelementptr inbounds i8,i8*%p7,i64 24
%qj=bitcast i8*%qi to i32*
store i32 7,i32*%qj,align 4
%qk=load i8*,i8**%d,align 8
%ql=load i8*,i8**%f,align 8
%qm=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%f,align 8
%qn=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%qm,i8*inreg%qk,i8*inreg%ql)
%qo=bitcast i8*%qn to i8**
%qp=load i8*,i8**%qo,align 8
store i8*%qp,i8**%d,align 8
%qq=getelementptr inbounds i8,i8*%qn,i64 8
%qr=bitcast i8*%qq to i8**
%qs=load i8*,i8**%qr,align 8
store i8*%qs,i8**%f,align 8
%qt=call i8*@sml_alloc(i32 inreg 20)#0
%qu=getelementptr inbounds i8,i8*%qt,i64 -4
%qv=bitcast i8*%qu to i32*
store i32 1342177296,i32*%qv,align 4
store i8*%qt,i8**%h,align 8
%qw=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%qx=bitcast i8*%qt to i8**
store i8*%qw,i8**%qx,align 8
%qy=getelementptr inbounds i8,i8*%qt,i64 8
%qz=bitcast i8*%qy to i8**
store i8*null,i8**%qz,align 8
%qA=getelementptr inbounds i8,i8*%qt,i64 16
%qB=bitcast i8*%qA to i32*
store i32 3,i32*%qB,align 4
%qC=call i8*@sml_alloc(i32 inreg 20)#0
%qD=getelementptr inbounds i8,i8*%qC,i64 -4
%qE=bitcast i8*%qD to i32*
store i32 1342177296,i32*%qE,align 4
store i8*%qC,i8**%d,align 8
%qF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%qG=bitcast i8*%qC to i8**
store i8*%qF,i8**%qG,align 8
%qH=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%qI=getelementptr inbounds i8,i8*%qC,i64 8
%qJ=bitcast i8*%qI to i8**
store i8*%qH,i8**%qJ,align 8
%qK=getelementptr inbounds i8,i8*%qC,i64 16
%qL=bitcast i8*%qK to i32*
store i32 3,i32*%qL,align 4
%qM=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%qN=getelementptr inbounds i8,i8*%qM,i64 16
%qO=bitcast i8*%qN to i8*(i8*,i8*)**
%qP=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qO,align 8
%qQ=bitcast i8*%qM to i8**
%qR=load i8*,i8**%qQ,align 8
store i8*%qR,i8**%g,align 8
%qS=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%qT=getelementptr inbounds i8,i8*%qS,i64 16
%qU=bitcast i8*%qT to i8*(i8*,i8*)**
%qV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%qU,align 8
%qW=bitcast i8*%qS to i8**
%qX=load i8*,i8**%qW,align 8
%qY=call fastcc i8*%qV(i8*inreg%qX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@js,i64 0,i32 2)to i8*))
%qZ=getelementptr inbounds i8,i8*%qY,i64 16
%q0=bitcast i8*%qZ to i8*(i8*,i8*)**
%q1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q0,align 8
%q2=bitcast i8*%qY to i8**
%q3=load i8*,i8**%q2,align 8
%q4=load i8*,i8**%d,align 8
%q5=call fastcc i8*%q1(i8*inreg%q3,i8*inreg%q4)
%q6=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%q7=call fastcc i8*%qP(i8*inreg%q6,i8*inreg%q5)
store i8*%q7,i8**%g,align 8
%q8=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%q9=getelementptr inbounds i8,i8*%q8,i64 16
%ra=bitcast i8*%q9 to i8*(i8*,i8*)**
%rb=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ra,align 8
%rc=bitcast i8*%q8 to i8**
%rd=load i8*,i8**%rc,align 8
%re=call fastcc i8*%rb(i8*inreg%rd,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jt,i64 0,i32 2)to i8*))
%rf=getelementptr inbounds i8,i8*%re,i64 16
%rg=bitcast i8*%rf to i8*(i8*,i8*)**
%rh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rg,align 8
%ri=bitcast i8*%re to i8**
%rj=load i8*,i8**%ri,align 8
%rk=bitcast i8**%m to i8***
%rl=load i8**,i8***%rk,align 8
store i8*null,i8**%m,align 8
%rm=load i8*,i8**%rl,align 8
%rn=call fastcc i8*%rh(i8*inreg%rj,i8*inreg%rm)
%ro=getelementptr inbounds i8,i8*%rn,i64 16
%rp=bitcast i8*%ro to i8*(i8*,i8*)**
%rq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%rp,align 8
%rr=bitcast i8*%rn to i8**
%rs=load i8*,i8**%rr,align 8
%rt=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%ru=call fastcc i8*%rq(i8*inreg%rs,i8*inreg%rt)
store i8*%ru,i8**%d,align 8
%rv=call i8*@sml_alloc(i32 inreg 20)#0
%rw=getelementptr inbounds i8,i8*%rv,i64 -4
%rx=bitcast i8*%rw to i32*
store i32 1342177296,i32*%rx,align 4
store i8*%rv,i8**%h,align 8
%ry=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%rz=bitcast i8*%rv to i8**
store i8*%ry,i8**%rz,align 8
%rA=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%rB=getelementptr inbounds i8,i8*%rv,i64 8
%rC=bitcast i8*%rB to i8**
store i8*%rA,i8**%rC,align 8
%rD=getelementptr inbounds i8,i8*%rv,i64 16
%rE=bitcast i8*%rD to i32*
store i32 3,i32*%rE,align 4
%rF=call i8*@sml_alloc(i32 inreg 36)#0
%rG=getelementptr inbounds i8,i8*%rF,i64 -4
%rH=bitcast i8*%rG to i32*
store i32 1342177312,i32*%rH,align 4
store i8*%rF,i8**%d,align 8
%rI=bitcast i8*%rF to i8**
store i8*null,i8**%rI,align 8
%rJ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%rK=getelementptr inbounds i8,i8*%rF,i64 8
%rL=bitcast i8*%rK to i8**
store i8*%rJ,i8**%rL,align 8
%rM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%rN=getelementptr inbounds i8,i8*%rF,i64 16
%rO=bitcast i8*%rN to i8**
store i8*%rM,i8**%rO,align 8
%rP=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%rQ=getelementptr inbounds i8,i8*%rF,i64 24
%rR=bitcast i8*%rQ to i8**
store i8*%rP,i8**%rR,align 8
%rS=getelementptr inbounds i8,i8*%rF,i64 32
%rT=bitcast i8*%rS to i32*
store i32 15,i32*%rT,align 4
%rU=call i8*@sml_alloc(i32 inreg 20)#0
%rV=getelementptr inbounds i8,i8*%rU,i64 -4
%rW=bitcast i8*%rV to i32*
store i32 1342177296,i32*%rW,align 4
store i8*%rU,i8**%e,align 8
%rX=getelementptr inbounds i8,i8*%rU,i64 4
%rY=bitcast i8*%rX to i32*
store i32 0,i32*%rY,align 1
%rZ=bitcast i8*%rU to i32*
store i32 12,i32*%rZ,align 4
%r0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%r1=getelementptr inbounds i8,i8*%rU,i64 8
%r2=bitcast i8*%r1 to i8**
store i8*%r0,i8**%r2,align 8
%r3=getelementptr inbounds i8,i8*%rU,i64 16
%r4=bitcast i8*%r3 to i32*
store i32 2,i32*%r4,align 4
%r5=call i8*@sml_alloc(i32 inreg 20)#0
%r6=getelementptr inbounds i8,i8*%r5,i64 -4
%r7=bitcast i8*%r6 to i32*
store i32 1342177296,i32*%r7,align 4
store i8*%r5,i8**%d,align 8
%r8=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%r9=bitcast i8*%r5 to i8**
store i8*%r8,i8**%r9,align 8
%sa=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%sb=getelementptr inbounds i8,i8*%r5,i64 8
%sc=bitcast i8*%sb to i8**
store i8*%sa,i8**%sc,align 8
%sd=getelementptr inbounds i8,i8*%r5,i64 16
%se=bitcast i8*%sd to i32*
store i32 3,i32*%se,align 4
%sf=call i8*@sml_alloc(i32 inreg 20)#0
%sg=getelementptr inbounds i8,i8*%sf,i64 -4
%sh=bitcast i8*%sg to i32*
store i32 1342177296,i32*%sh,align 4
%si=bitcast i8*%sf to i64*
store i64 0,i64*%si,align 4
%sj=load i8*,i8**%d,align 8
%sk=getelementptr inbounds i8,i8*%sf,i64 8
%sl=bitcast i8*%sk to i8**
store i8*%sj,i8**%sl,align 8
%sm=getelementptr inbounds i8,i8*%sf,i64 16
%sn=bitcast i8*%sm to i32*
store i32 2,i32*%sn,align 4
ret i8*%sf
so:
%sp=getelementptr inbounds i8,i8*%z,i64 8
%sq=bitcast i8*%sp to i8**
%sr=load i8*,i8**%sq,align 8
%ss=bitcast i8*%sr to i8**
%st=load i8*,i8**%ss,align 8
%su=getelementptr inbounds i8,i8*%sr,i64 8
%sv=bitcast i8*%su to i8**
%sw=load i8*,i8**%sv,align 8
%sx=bitcast i8*%sw to i8**
%sy=load i8*,i8**%sx,align 8
store i8*%sy,i8**%e,align 8
%sz=getelementptr inbounds i8,i8*%sw,i64 8
%sA=bitcast i8*%sz to i8**
%sB=load i8*,i8**%sA,align 8
store i8*%sB,i8**%f,align 8
%sC=getelementptr inbounds i8,i8*%sr,i64 16
%sD=bitcast i8*%sC to i8**
%sE=load i8*,i8**%sD,align 8
store i8*%sE,i8**%g,align 8
%sF=bitcast i8*%st to i8**
%sG=load i8*,i8**%sF,align 8
store i8*%sG,i8**%h,align 8
%sH=getelementptr inbounds i8,i8*%st,i64 8
%sI=bitcast i8*%sH to i8**
%sJ=load i8*,i8**%sI,align 8
store i8*%sJ,i8**%i,align 8
%sK=getelementptr inbounds i8,i8*%st,i64 16
%sL=bitcast i8*%sK to i8**
%sM=load i8*,i8**%sL,align 8
store i8*%sM,i8**%j,align 8
%sN=call fastcc i8*@_SMLFN6Symbol11symbolToLocE(i8*inreg%sG)
store i8*%sN,i8**%k,align 8
%sO=call i8*@sml_alloc(i32 inreg 20)#0
%sP=getelementptr inbounds i8,i8*%sO,i64 -4
%sQ=bitcast i8*%sP to i32*
store i32 1342177296,i32*%sQ,align 4
store i8*%sO,i8**%l,align 8
%sR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%sS=bitcast i8*%sO to i8**
store i8*%sR,i8**%sS,align 8
%sT=getelementptr inbounds i8,i8*%sO,i64 8
%sU=bitcast i8*%sT to i8**
store i8*null,i8**%sU,align 8
%sV=getelementptr inbounds i8,i8*%sO,i64 16
%sW=bitcast i8*%sV to i32*
store i32 3,i32*%sW,align 4
%sX=call i8*@sml_alloc(i32 inreg 20)#0
%sY=getelementptr inbounds i8,i8*%sX,i64 -4
%sZ=bitcast i8*%sY to i32*
store i32 1342177296,i32*%sZ,align 4
store i8*%sX,i8**%n,align 8
%s0=getelementptr inbounds i8,i8*%sX,i64 4
%s1=bitcast i8*%s0 to i32*
store i32 0,i32*%s1,align 1
%s2=bitcast i8*%sX to i32*
store i32 15,i32*%s2,align 4
%s3=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%s4=getelementptr inbounds i8,i8*%sX,i64 8
%s5=bitcast i8*%s4 to i8**
store i8*%s3,i8**%s5,align 8
%s6=getelementptr inbounds i8,i8*%sX,i64 16
%s7=bitcast i8*%s6 to i32*
store i32 2,i32*%s7,align 4
%s8=call i8*@sml_alloc(i32 inreg 20)#0
%s9=getelementptr inbounds i8,i8*%s8,i64 -4
%ta=bitcast i8*%s9 to i32*
store i32 1342177296,i32*%ta,align 4
store i8*%s8,i8**%h,align 8
%tb=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%tc=bitcast i8*%s8 to i8**
store i8*%tb,i8**%tc,align 8
%td=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%te=getelementptr inbounds i8,i8*%s8,i64 8
%tf=bitcast i8*%te to i8**
store i8*%td,i8**%tf,align 8
%tg=getelementptr inbounds i8,i8*%s8,i64 16
%th=bitcast i8*%tg to i32*
store i32 3,i32*%th,align 4
%ti=load i8*,i8**%d,align 8
%tj=load i8*,i8**%m,align 8
%tk=call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2390(i8*inreg%tj,i8*inreg%ti)
%tl=getelementptr inbounds i8,i8*%tk,i64 16
%tm=bitcast i8*%tl to i8*(i8*,i8*)**
%tn=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tm,align 8
%to=bitcast i8*%tk to i8**
%tp=load i8*,i8**%to,align 8
store i8*%tp,i8**%k,align 8
%tq=call i8*@sml_alloc(i32 inreg 4)#0
%tr=bitcast i8*%tq to i32*
%ts=getelementptr inbounds i8,i8*%tq,i64 -4
%tt=bitcast i8*%ts to i32*
store i32 4,i32*%tt,align 4
store i32 1,i32*%tr,align 4
%tu=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%tv=call fastcc i8*%tn(i8*inreg%tu,i8*inreg%tq)
%tw=getelementptr inbounds i8,i8*%tv,i64 16
%tx=bitcast i8*%tw to i8*(i8*,i8*)**
%ty=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tx,align 8
%tz=bitcast i8*%tv to i8**
%tA=load i8*,i8**%tz,align 8
%tB=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%tC=call fastcc i8*%ty(i8*inreg%tA,i8*inreg%tB)
%tD=bitcast i8*%tC to i8**
%tE=load i8*,i8**%tD,align 8
store i8*%tE,i8**%h,align 8
%tF=getelementptr inbounds i8,i8*%tC,i64 8
%tG=bitcast i8*%tF to i8**
%tH=load i8*,i8**%tG,align 8
store i8*%tH,i8**%k,align 8
%tI=call i8*@sml_alloc(i32 inreg 28)#0
%tJ=getelementptr inbounds i8,i8*%tI,i64 -4
%tK=bitcast i8*%tJ to i32*
store i32 1342177304,i32*%tK,align 4
store i8*%tI,i8**%l,align 8
%tL=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%tM=bitcast i8*%tI to i8**
store i8*%tL,i8**%tM,align 8
%tN=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%tO=getelementptr inbounds i8,i8*%tI,i64 8
%tP=bitcast i8*%tO to i8**
store i8*%tN,i8**%tP,align 8
%tQ=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%tR=getelementptr inbounds i8,i8*%tI,i64 16
%tS=bitcast i8*%tR to i8**
store i8*%tQ,i8**%tS,align 8
%tT=getelementptr inbounds i8,i8*%tI,i64 24
%tU=bitcast i8*%tT to i32*
store i32 7,i32*%tU,align 4
%tV=call fastcc i8*@_SMLFN14UserErrorUtils27checkRecordLabelDuplicationE(i32 inreg 1,i32 inreg 8)
%tW=getelementptr inbounds i8,i8*%tV,i64 16
%tX=bitcast i8*%tW to i8*(i8*,i8*)**
%tY=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%tX,align 8
%tZ=bitcast i8*%tV to i8**
%t0=load i8*,i8**%tZ,align 8
%t1=call fastcc i8*%tY(i8*inreg%t0,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@ji,i64 0,i32 2)to i8*))
%t2=getelementptr inbounds i8,i8*%t1,i64 16
%t3=bitcast i8*%t2 to i8*(i8*,i8*)**
%t4=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t3,align 8
%t5=bitcast i8*%t1 to i8**
%t6=load i8*,i8**%t5,align 8
%t7=load i8*,i8**%e,align 8
%t8=call fastcc i8*%t4(i8*inreg%t6,i8*inreg%t7)
%t9=getelementptr inbounds i8,i8*%t8,i64 16
%ua=bitcast i8*%t9 to i8*(i8*,i8*)**
%ub=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ua,align 8
%uc=bitcast i8*%t8 to i8**
%ud=load i8*,i8**%uc,align 8
%ue=load i8*,i8**%f,align 8
%uf=call fastcc i8*%ub(i8*inreg%ud,i8*inreg%ue)
%ug=getelementptr inbounds i8,i8*%uf,i64 16
%uh=bitcast i8*%ug to i8*(i8*,i8*)**
%ui=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%uh,align 8
%uj=bitcast i8*%uf to i8**
%uk=load i8*,i8**%uj,align 8
%ul=call fastcc i8*%ui(i8*inreg%uk,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jk,i64 0,i32 2)to i8*))
%um=load i8*,i8**%g,align 8
%un=bitcast i8*%um to i32*
%uo=load i32,i32*%un,align 4
switch i32%uo,label%up[
i32 1,label%xZ
i32 2,label%wW
i32 0,label%uH
]
up:
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%h,align 8
store i8*null,i8**%l,align 8
store i8*null,i8**%m,align 8
call void@sml_matchcomp_bug()
%uq=load i8*,i8**@_SMLZ5Match,align 8
store i8*%uq,i8**%d,align 8
%ur=call i8*@sml_alloc(i32 inreg 20)#0
%us=getelementptr inbounds i8,i8*%ur,i64 -4
%ut=bitcast i8*%us to i32*
store i32 1342177296,i32*%ut,align 4
store i8*%ur,i8**%e,align 8
%uu=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uv=bitcast i8*%ur to i8**
store i8*%uu,i8**%uv,align 8
%uw=getelementptr inbounds i8,i8*%ur,i64 8
%ux=bitcast i8*%uw to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[74x i8]}>,<{[4x i8],i32,[74x i8]}>*@jr,i64 0,i32 2,i64 0),i8**%ux,align 8
%uy=getelementptr inbounds i8,i8*%ur,i64 16
%uz=bitcast i8*%uy to i32*
store i32 3,i32*%uz,align 4
%uA=call i8*@sml_alloc(i32 inreg 60)#0
%uB=getelementptr inbounds i8,i8*%uA,i64 -4
%uC=bitcast i8*%uB to i32*
store i32 1342177336,i32*%uC,align 4
%uD=getelementptr inbounds i8,i8*%uA,i64 56
%uE=bitcast i8*%uD to i32*
store i32 1,i32*%uE,align 4
%uF=load i8*,i8**%e,align 8
%uG=bitcast i8*%uA to i8**
store i8*%uF,i8**%uG,align 8
call void@sml_raise(i8*inreg%uA)#1
unreachable
uH:
store i8*null,i8**%g,align 8
%uI=getelementptr inbounds i8,i8*%um,i64 8
%uJ=bitcast i8*%uI to i8**
%uK=load i8*,i8**%uJ,align 8
%uL=load i8*,i8**%d,align 8
%uM=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
%uN=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%uM,i8*inreg%uL,i8*inreg%uK)
%uO=bitcast i8*%uN to i8**
%uP=load i8*,i8**%uO,align 8
store i8*%uP,i8**%d,align 8
%uQ=getelementptr inbounds i8,i8*%uN,i64 8
%uR=bitcast i8*%uQ to i8**
%uS=load i8*,i8**%uR,align 8
store i8*%uS,i8**%g,align 8
%uT=call i8*@sml_alloc(i32 inreg 20)#0
%uU=getelementptr inbounds i8,i8*%uT,i64 -4
%uV=bitcast i8*%uU to i32*
store i32 1342177296,i32*%uV,align 4
store i8*%uT,i8**%i,align 8
%uW=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%uX=bitcast i8*%uT to i8**
store i8*%uW,i8**%uX,align 8
%uY=getelementptr inbounds i8,i8*%uT,i64 8
%uZ=bitcast i8*%uY to i8**
store i8*null,i8**%uZ,align 8
%u0=getelementptr inbounds i8,i8*%uT,i64 16
%u1=bitcast i8*%u0 to i32*
store i32 3,i32*%u1,align 4
%u2=call i8*@sml_alloc(i32 inreg 20)#0
%u3=getelementptr inbounds i8,i8*%u2,i64 -4
%u4=bitcast i8*%u3 to i32*
store i32 1342177296,i32*%u4,align 4
store i8*%u2,i8**%d,align 8
%u5=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%u6=bitcast i8*%u2 to i8**
store i8*%u5,i8**%u6,align 8
%u7=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%u8=getelementptr inbounds i8,i8*%u2,i64 8
%u9=bitcast i8*%u8 to i8**
store i8*%u7,i8**%u9,align 8
%va=getelementptr inbounds i8,i8*%u2,i64 16
%vb=bitcast i8*%va to i32*
store i32 3,i32*%vb,align 4
%vc=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%vd=getelementptr inbounds i8,i8*%vc,i64 16
%ve=bitcast i8*%vd to i8*(i8*,i8*)**
%vf=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ve,align 8
%vg=bitcast i8*%vc to i8**
%vh=load i8*,i8**%vg,align 8
store i8*%vh,i8**%h,align 8
%vi=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%vj=getelementptr inbounds i8,i8*%vi,i64 16
%vk=bitcast i8*%vj to i8*(i8*,i8*)**
%vl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vk,align 8
%vm=bitcast i8*%vi to i8**
%vn=load i8*,i8**%vm,align 8
%vo=call fastcc i8*%vl(i8*inreg%vn,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jp,i64 0,i32 2)to i8*))
%vp=getelementptr inbounds i8,i8*%vo,i64 16
%vq=bitcast i8*%vp to i8*(i8*,i8*)**
%vr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vq,align 8
%vs=bitcast i8*%vo to i8**
%vt=load i8*,i8**%vs,align 8
%vu=load i8*,i8**%d,align 8
%vv=call fastcc i8*%vr(i8*inreg%vt,i8*inreg%vu)
%vw=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%vx=call fastcc i8*%vf(i8*inreg%vw,i8*inreg%vv)
store i8*%vx,i8**%h,align 8
%vy=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%vz=getelementptr inbounds i8,i8*%vy,i64 16
%vA=bitcast i8*%vz to i8*(i8*,i8*)**
%vB=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vA,align 8
%vC=bitcast i8*%vy to i8**
%vD=load i8*,i8**%vC,align 8
%vE=call fastcc i8*%vB(i8*inreg%vD,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jq,i64 0,i32 2)to i8*))
%vF=getelementptr inbounds i8,i8*%vE,i64 16
%vG=bitcast i8*%vF to i8*(i8*,i8*)**
%vH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vG,align 8
%vI=bitcast i8*%vE to i8**
%vJ=load i8*,i8**%vI,align 8
%vK=bitcast i8**%m to i8***
%vL=load i8**,i8***%vK,align 8
store i8*null,i8**%m,align 8
%vM=load i8*,i8**%vL,align 8
%vN=call fastcc i8*%vH(i8*inreg%vJ,i8*inreg%vM)
%vO=getelementptr inbounds i8,i8*%vN,i64 16
%vP=bitcast i8*%vO to i8*(i8*,i8*)**
%vQ=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%vP,align 8
%vR=bitcast i8*%vN to i8**
%vS=load i8*,i8**%vR,align 8
%vT=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%vU=call fastcc i8*%vQ(i8*inreg%vS,i8*inreg%vT)
store i8*%vU,i8**%d,align 8
%vV=call i8*@sml_alloc(i32 inreg 20)#0
%vW=getelementptr inbounds i8,i8*%vV,i64 -4
%vX=bitcast i8*%vW to i32*
store i32 1342177296,i32*%vX,align 4
store i8*%vV,i8**%i,align 8
%vY=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%vZ=bitcast i8*%vV to i8**
store i8*%vY,i8**%vZ,align 8
%v0=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%v1=getelementptr inbounds i8,i8*%vV,i64 8
%v2=bitcast i8*%v1 to i8**
store i8*%v0,i8**%v2,align 8
%v3=getelementptr inbounds i8,i8*%vV,i64 16
%v4=bitcast i8*%v3 to i32*
store i32 3,i32*%v4,align 4
%v5=call i8*@sml_alloc(i32 inreg 12)#0
%v6=getelementptr inbounds i8,i8*%v5,i64 -4
%v7=bitcast i8*%v6 to i32*
store i32 1342177288,i32*%v7,align 4
store i8*%v5,i8**%h,align 8
%v8=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v9=bitcast i8*%v5 to i8**
store i8*%v8,i8**%v9,align 8
%wa=getelementptr inbounds i8,i8*%v5,i64 8
%wb=bitcast i8*%wa to i32*
store i32 1,i32*%wb,align 4
%wc=call i8*@sml_alloc(i32 inreg 36)#0
%wd=getelementptr inbounds i8,i8*%wc,i64 -4
%we=bitcast i8*%wd to i32*
store i32 1342177312,i32*%we,align 4
store i8*%wc,i8**%d,align 8
%wf=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%wg=bitcast i8*%wc to i8**
store i8*%wf,i8**%wg,align 8
%wh=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%wi=getelementptr inbounds i8,i8*%wc,i64 8
%wj=bitcast i8*%wi to i8**
store i8*%wh,i8**%wj,align 8
%wk=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%wl=getelementptr inbounds i8,i8*%wc,i64 16
%wm=bitcast i8*%wl to i8**
store i8*%wk,i8**%wm,align 8
%wn=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%wo=getelementptr inbounds i8,i8*%wc,i64 24
%wp=bitcast i8*%wo to i8**
store i8*%wn,i8**%wp,align 8
%wq=getelementptr inbounds i8,i8*%wc,i64 32
%wr=bitcast i8*%wq to i32*
store i32 15,i32*%wr,align 4
%ws=call i8*@sml_alloc(i32 inreg 20)#0
%wt=getelementptr inbounds i8,i8*%ws,i64 -4
%wu=bitcast i8*%wt to i32*
store i32 1342177296,i32*%wu,align 4
store i8*%ws,i8**%e,align 8
%wv=getelementptr inbounds i8,i8*%ws,i64 4
%ww=bitcast i8*%wv to i32*
store i32 0,i32*%ww,align 1
%wx=bitcast i8*%ws to i32*
store i32 12,i32*%wx,align 4
%wy=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%wz=getelementptr inbounds i8,i8*%ws,i64 8
%wA=bitcast i8*%wz to i8**
store i8*%wy,i8**%wA,align 8
%wB=getelementptr inbounds i8,i8*%ws,i64 16
%wC=bitcast i8*%wB to i32*
store i32 2,i32*%wC,align 4
%wD=call i8*@sml_alloc(i32 inreg 20)#0
%wE=getelementptr inbounds i8,i8*%wD,i64 -4
%wF=bitcast i8*%wE to i32*
store i32 1342177296,i32*%wF,align 4
store i8*%wD,i8**%d,align 8
%wG=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%wH=bitcast i8*%wD to i8**
store i8*%wG,i8**%wH,align 8
%wI=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%wJ=getelementptr inbounds i8,i8*%wD,i64 8
%wK=bitcast i8*%wJ to i8**
store i8*%wI,i8**%wK,align 8
%wL=getelementptr inbounds i8,i8*%wD,i64 16
%wM=bitcast i8*%wL to i32*
store i32 3,i32*%wM,align 4
%wN=call i8*@sml_alloc(i32 inreg 20)#0
%wO=getelementptr inbounds i8,i8*%wN,i64 -4
%wP=bitcast i8*%wO to i32*
store i32 1342177296,i32*%wP,align 4
%wQ=bitcast i8*%wN to i64*
store i64 0,i64*%wQ,align 4
%wR=load i8*,i8**%d,align 8
%wS=getelementptr inbounds i8,i8*%wN,i64 8
%wT=bitcast i8*%wS to i8**
store i8*%wR,i8**%wT,align 8
%wU=getelementptr inbounds i8,i8*%wN,i64 16
%wV=bitcast i8*%wU to i32*
store i32 2,i32*%wV,align 4
ret i8*%wN
wW:
store i8*null,i8**%m,align 8
store i8*null,i8**%g,align 8
%wX=getelementptr inbounds i8,i8*%um,i64 8
%wY=bitcast i8*%wX to i8**
%wZ=load i8*,i8**%wY,align 8
%w0=bitcast i8*%wZ to i8**
%w1=load i8*,i8**%w0,align 8
store i8*%w1,i8**%d,align 8
%w2=getelementptr inbounds i8,i8*%wZ,i64 8
%w3=bitcast i8*%w2 to i8**
%w4=load i8*,i8**%w3,align 8
store i8*%w4,i8**%f,align 8
%w5=call i8*@sml_alloc(i32 inreg 20)#0
%w6=getelementptr inbounds i8,i8*%w5,i64 -4
%w7=bitcast i8*%w6 to i32*
store i32 1342177296,i32*%w7,align 4
store i8*%w5,i8**%g,align 8
%w8=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%w9=bitcast i8*%w5 to i8**
store i8*%w8,i8**%w9,align 8
%xa=load i8*,i8**%f,align 8
%xb=getelementptr inbounds i8,i8*%w5,i64 8
%xc=bitcast i8*%xb to i8**
store i8*%xa,i8**%xc,align 8
%xd=getelementptr inbounds i8,i8*%w5,i64 16
%xe=bitcast i8*%xd to i32*
store i32 3,i32*%xe,align 4
%xf=call i8*@sml_alloc(i32 inreg 36)#0
%xg=getelementptr inbounds i8,i8*%xf,i64 -4
%xh=bitcast i8*%xg to i32*
store i32 1342177312,i32*%xh,align 4
store i8*%xf,i8**%d,align 8
%xi=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%xj=bitcast i8*%xf to i8**
store i8*%xi,i8**%xj,align 8
%xk=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%xl=getelementptr inbounds i8,i8*%xf,i64 8
%xm=bitcast i8*%xl to i8**
store i8*%xk,i8**%xm,align 8
%xn=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%xo=getelementptr inbounds i8,i8*%xf,i64 16
%xp=bitcast i8*%xo to i8**
store i8*%xn,i8**%xp,align 8
%xq=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%xr=getelementptr inbounds i8,i8*%xf,i64 24
%xs=bitcast i8*%xr to i8**
store i8*%xq,i8**%xs,align 8
%xt=getelementptr inbounds i8,i8*%xf,i64 32
%xu=bitcast i8*%xt to i32*
store i32 15,i32*%xu,align 4
%xv=call i8*@sml_alloc(i32 inreg 20)#0
%xw=getelementptr inbounds i8,i8*%xv,i64 -4
%xx=bitcast i8*%xw to i32*
store i32 1342177296,i32*%xx,align 4
store i8*%xv,i8**%e,align 8
%xy=getelementptr inbounds i8,i8*%xv,i64 4
%xz=bitcast i8*%xy to i32*
store i32 0,i32*%xz,align 1
%xA=bitcast i8*%xv to i32*
store i32 14,i32*%xA,align 4
%xB=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%xC=getelementptr inbounds i8,i8*%xv,i64 8
%xD=bitcast i8*%xC to i8**
store i8*%xB,i8**%xD,align 8
%xE=getelementptr inbounds i8,i8*%xv,i64 16
%xF=bitcast i8*%xE to i32*
store i32 2,i32*%xF,align 4
%xG=call i8*@sml_alloc(i32 inreg 20)#0
%xH=getelementptr inbounds i8,i8*%xG,i64 -4
%xI=bitcast i8*%xH to i32*
store i32 1342177296,i32*%xI,align 4
store i8*%xG,i8**%d,align 8
%xJ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%xK=bitcast i8*%xG to i8**
store i8*%xJ,i8**%xK,align 8
%xL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%xM=getelementptr inbounds i8,i8*%xG,i64 8
%xN=bitcast i8*%xM to i8**
store i8*%xL,i8**%xN,align 8
%xO=getelementptr inbounds i8,i8*%xG,i64 16
%xP=bitcast i8*%xO to i32*
store i32 3,i32*%xP,align 4
%xQ=call i8*@sml_alloc(i32 inreg 20)#0
%xR=getelementptr inbounds i8,i8*%xQ,i64 -4
%xS=bitcast i8*%xR to i32*
store i32 1342177296,i32*%xS,align 4
%xT=bitcast i8*%xQ to i64*
store i64 0,i64*%xT,align 4
%xU=load i8*,i8**%d,align 8
%xV=getelementptr inbounds i8,i8*%xQ,i64 8
%xW=bitcast i8*%xV to i8**
store i8*%xU,i8**%xW,align 8
%xX=getelementptr inbounds i8,i8*%xQ,i64 16
%xY=bitcast i8*%xX to i32*
store i32 2,i32*%xY,align 4
ret i8*%xQ
xZ:
%x0=getelementptr inbounds i8,i8*%um,i64 8
%x1=bitcast i8*%x0 to i8**
%x2=load i8*,i8**%x1,align 8
store i8*%x2,i8**%g,align 8
%x3=call fastcc i8*@_SMLFN4List6lengthE(i32 inreg 1,i32 inreg 8)
%x4=getelementptr inbounds i8,i8*%x3,i64 16
%x5=bitcast i8*%x4 to i8*(i8*,i8*)**
%x6=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%x5,align 8
%x7=bitcast i8*%x3 to i8**
%x8=load i8*,i8**%x7,align 8
%x9=load i8*,i8**%e,align 8
%ya=call fastcc i8*%x6(i8*inreg%x8,i8*inreg%x9)
%yb=bitcast i8*%ya to i32*
%yc=load i32,i32*%yb,align 4
%yd=load i8*,i8**%m,align 8
%ye=getelementptr inbounds i8,i8*%yd,i64 16
%yf=bitcast i8*%ye to i8**
%yg=load i8*,i8**%yf,align 8
store i8*%yg,i8**%n,align 8
%yh=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%yi=getelementptr inbounds i8,i8*%yh,i64 16
%yj=bitcast i8*%yi to i8*(i8*,i8*)**
%yk=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%yj,align 8
%yl=bitcast i8*%yh to i8**
%ym=load i8*,i8**%yl,align 8
store i8*%ym,i8**%k,align 8
%yn=load i8*,i8**%m,align 8
%yo=getelementptr inbounds i8,i8*%yn,i64 8
%yp=bitcast i8*%yo to i8**
%yq=load i8*,i8**%yp,align 8
store i8*%yq,i8**%i,align 8
%yr=getelementptr inbounds i8,i8*%yn,i64 16
%ys=bitcast i8*%yr to i8**
%yt=load i8*,i8**%ys,align 8
store i8*%yt,i8**%j,align 8
%yu=call i8*@sml_alloc(i32 inreg 44)#0
%yv=getelementptr inbounds i8,i8*%yu,i64 -4
%yw=bitcast i8*%yv to i32*
store i32 1342177320,i32*%yw,align 4
store i8*%yu,i8**%o,align 8
%yx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%yy=bitcast i8*%yu to i8**
store i8*%yx,i8**%yy,align 8
%yz=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%yA=getelementptr inbounds i8,i8*%yu,i64 8
%yB=bitcast i8*%yA to i8**
store i8*%yz,i8**%yB,align 8
%yC=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%yD=getelementptr inbounds i8,i8*%yu,i64 16
%yE=bitcast i8*%yD to i8**
store i8*%yC,i8**%yE,align 8
%yF=load i8*,i8**%m,align 8
%yG=getelementptr inbounds i8,i8*%yu,i64 24
%yH=bitcast i8*%yG to i8**
store i8*%yF,i8**%yH,align 8
%yI=getelementptr inbounds i8,i8*%yu,i64 32
%yJ=bitcast i8*%yI to i32*
store i32%yc,i32*%yJ,align 4
%yK=getelementptr inbounds i8,i8*%yu,i64 40
%yL=bitcast i8*%yK to i32*
store i32 15,i32*%yL,align 4
%yM=call i8*@sml_alloc(i32 inreg 28)#0
%yN=getelementptr inbounds i8,i8*%yM,i64 -4
%yO=bitcast i8*%yN to i32*
store i32 1342177304,i32*%yO,align 4
%yP=load i8*,i8**%o,align 8
store i8*null,i8**%o,align 8
%yQ=bitcast i8*%yM to i8**
store i8*%yP,i8**%yQ,align 8
%yR=getelementptr inbounds i8,i8*%yM,i64 8
%yS=bitcast i8*%yR to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2573 to void(...)*),void(...)**%yS,align 8
%yT=getelementptr inbounds i8,i8*%yM,i64 16
%yU=bitcast i8*%yT to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL7elabSQLE_2573 to void(...)*),void(...)**%yU,align 8
%yV=getelementptr inbounds i8,i8*%yM,i64 24
%yW=bitcast i8*%yV to i32*
store i32 -2147483647,i32*%yW,align 4
%yX=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%yY=call fastcc i8*%yk(i8*inreg%yX,i8*inreg%yM)
%yZ=getelementptr inbounds i8,i8*%yY,i64 16
%y0=bitcast i8*%yZ to i8*(i8*,i8*)**
%y1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y0,align 8
%y2=bitcast i8*%yY to i8**
%y3=load i8*,i8**%y2,align 8
%y4=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%y5=call fastcc i8*%y1(i8*inreg%y3,i8*inreg%y4)
%y6=load i8*,i8**%n,align 8
store i8*null,i8**%n,align 8
%y7=call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2385(i8*inreg%y6,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jl,i64 0,i32 2)to i8*),i8*inreg%y5)
%y8=bitcast i8*%y7 to i8**
%y9=load i8*,i8**%y8,align 8
store i8*%y9,i8**%d,align 8
%za=getelementptr inbounds i8,i8*%y7,i64 8
%zb=bitcast i8*%za to i8**
%zc=load i8*,i8**%zb,align 8
store i8*%zc,i8**%g,align 8
%zd=call i8*@sml_alloc(i32 inreg 20)#0
%ze=getelementptr inbounds i8,i8*%zd,i64 -4
%zf=bitcast i8*%ze to i32*
store i32 1342177296,i32*%zf,align 4
store i8*%zd,i8**%i,align 8
%zg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%zh=bitcast i8*%zd to i8**
store i8*%zg,i8**%zh,align 8
%zi=getelementptr inbounds i8,i8*%zd,i64 8
%zj=bitcast i8*%zi to i8**
store i8*null,i8**%zj,align 8
%zk=getelementptr inbounds i8,i8*%zd,i64 16
%zl=bitcast i8*%zk to i32*
store i32 3,i32*%zl,align 4
%zm=call i8*@sml_alloc(i32 inreg 20)#0
%zn=getelementptr inbounds i8,i8*%zm,i64 -4
%zo=bitcast i8*%zn to i32*
store i32 1342177296,i32*%zo,align 4
store i8*%zm,i8**%d,align 8
%zp=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%zq=bitcast i8*%zm to i8**
store i8*%zp,i8**%zq,align 8
%zr=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%zs=getelementptr inbounds i8,i8*%zm,i64 8
%zt=bitcast i8*%zs to i8**
store i8*%zr,i8**%zt,align 8
%zu=getelementptr inbounds i8,i8*%zm,i64 16
%zv=bitcast i8*%zu to i32*
store i32 3,i32*%zv,align 4
%zw=call fastcc i8*@_SMLFN4List6concatE(i32 inreg 1,i32 inreg 8)
%zx=getelementptr inbounds i8,i8*%zw,i64 16
%zy=bitcast i8*%zx to i8*(i8*,i8*)**
%zz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zy,align 8
%zA=bitcast i8*%zw to i8**
%zB=load i8*,i8**%zA,align 8
store i8*%zB,i8**%h,align 8
%zC=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%zD=getelementptr inbounds i8,i8*%zC,i64 16
%zE=bitcast i8*%zD to i8*(i8*,i8*)**
%zF=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zE,align 8
%zG=bitcast i8*%zC to i8**
%zH=load i8*,i8**%zG,align 8
%zI=call fastcc i8*%zF(i8*inreg%zH,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jn,i64 0,i32 2)to i8*))
%zJ=getelementptr inbounds i8,i8*%zI,i64 16
%zK=bitcast i8*%zJ to i8*(i8*,i8*)**
%zL=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zK,align 8
%zM=bitcast i8*%zI to i8**
%zN=load i8*,i8**%zM,align 8
%zO=load i8*,i8**%d,align 8
%zP=call fastcc i8*%zL(i8*inreg%zN,i8*inreg%zO)
%zQ=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%zR=call fastcc i8*%zz(i8*inreg%zQ,i8*inreg%zP)
store i8*%zR,i8**%h,align 8
%zS=call fastcc i8*@_SMLFN4List5foldlE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%zT=getelementptr inbounds i8,i8*%zS,i64 16
%zU=bitcast i8*%zT to i8*(i8*,i8*)**
%zV=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%zU,align 8
%zW=bitcast i8*%zS to i8**
%zX=load i8*,i8**%zW,align 8
%zY=call fastcc i8*%zV(i8*inreg%zX,i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jo,i64 0,i32 2)to i8*))
%zZ=getelementptr inbounds i8,i8*%zY,i64 16
%z0=bitcast i8*%zZ to i8*(i8*,i8*)**
%z1=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z0,align 8
%z2=bitcast i8*%zY to i8**
%z3=load i8*,i8**%z2,align 8
%z4=bitcast i8**%m to i8***
%z5=load i8**,i8***%z4,align 8
store i8*null,i8**%m,align 8
%z6=load i8*,i8**%z5,align 8
%z7=call fastcc i8*%z1(i8*inreg%z3,i8*inreg%z6)
%z8=getelementptr inbounds i8,i8*%z7,i64 16
%z9=bitcast i8*%z8 to i8*(i8*,i8*)**
%Aa=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%z9,align 8
%Ab=bitcast i8*%z7 to i8**
%Ac=load i8*,i8**%Ab,align 8
%Ad=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Ae=call fastcc i8*%Aa(i8*inreg%Ac,i8*inreg%Ad)
store i8*%Ae,i8**%d,align 8
%Af=call i8*@sml_alloc(i32 inreg 20)#0
%Ag=getelementptr inbounds i8,i8*%Af,i64 -4
%Ah=bitcast i8*%Ag to i32*
store i32 1342177296,i32*%Ah,align 4
store i8*%Af,i8**%i,align 8
%Ai=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%Aj=bitcast i8*%Af to i8**
store i8*%Ai,i8**%Aj,align 8
%Ak=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%Al=getelementptr inbounds i8,i8*%Af,i64 8
%Am=bitcast i8*%Al to i8**
store i8*%Ak,i8**%Am,align 8
%An=getelementptr inbounds i8,i8*%Af,i64 16
%Ao=bitcast i8*%An to i32*
store i32 3,i32*%Ao,align 4
%Ap=call i8*@sml_alloc(i32 inreg 36)#0
%Aq=getelementptr inbounds i8,i8*%Ap,i64 -4
%Ar=bitcast i8*%Aq to i32*
store i32 1342177312,i32*%Ar,align 4
store i8*%Ap,i8**%d,align 8
%As=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%At=bitcast i8*%Ap to i8**
store i8*%As,i8**%At,align 8
%Au=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Av=getelementptr inbounds i8,i8*%Ap,i64 8
%Aw=bitcast i8*%Av to i8**
store i8*%Au,i8**%Aw,align 8
%Ax=load i8*,i8**%l,align 8
store i8*null,i8**%l,align 8
%Ay=getelementptr inbounds i8,i8*%Ap,i64 16
%Az=bitcast i8*%Ay to i8**
store i8*%Ax,i8**%Az,align 8
%AA=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%AB=getelementptr inbounds i8,i8*%Ap,i64 24
%AC=bitcast i8*%AB to i8**
store i8*%AA,i8**%AC,align 8
%AD=getelementptr inbounds i8,i8*%Ap,i64 32
%AE=bitcast i8*%AD to i32*
store i32 15,i32*%AE,align 4
%AF=call i8*@sml_alloc(i32 inreg 20)#0
%AG=getelementptr inbounds i8,i8*%AF,i64 -4
%AH=bitcast i8*%AG to i32*
store i32 1342177296,i32*%AH,align 4
store i8*%AF,i8**%e,align 8
%AI=getelementptr inbounds i8,i8*%AF,i64 4
%AJ=bitcast i8*%AI to i32*
store i32 0,i32*%AJ,align 1
%AK=bitcast i8*%AF to i32*
store i32 13,i32*%AK,align 4
%AL=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%AM=getelementptr inbounds i8,i8*%AF,i64 8
%AN=bitcast i8*%AM to i8**
store i8*%AL,i8**%AN,align 8
%AO=getelementptr inbounds i8,i8*%AF,i64 16
%AP=bitcast i8*%AO to i32*
store i32 2,i32*%AP,align 4
%AQ=call i8*@sml_alloc(i32 inreg 20)#0
%AR=getelementptr inbounds i8,i8*%AQ,i64 -4
%AS=bitcast i8*%AR to i32*
store i32 1342177296,i32*%AS,align 4
store i8*%AQ,i8**%d,align 8
%AT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%AU=bitcast i8*%AQ to i8**
store i8*%AT,i8**%AU,align 8
%AV=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%AW=getelementptr inbounds i8,i8*%AQ,i64 8
%AX=bitcast i8*%AW to i8**
store i8*%AV,i8**%AX,align 8
%AY=getelementptr inbounds i8,i8*%AQ,i64 16
%AZ=bitcast i8*%AY to i32*
store i32 3,i32*%AZ,align 4
%A0=call i8*@sml_alloc(i32 inreg 20)#0
%A1=getelementptr inbounds i8,i8*%A0,i64 -4
%A2=bitcast i8*%A1 to i32*
store i32 1342177296,i32*%A2,align 4
%A3=bitcast i8*%A0 to i64*
store i64 0,i64*%A3,align 4
%A4=load i8*,i8**%d,align 8
%A5=getelementptr inbounds i8,i8*%A0,i64 8
%A6=bitcast i8*%A5 to i8**
store i8*%A4,i8**%A6,align 8
%A7=getelementptr inbounds i8,i8*%A0,i64 16
%A8=bitcast i8*%A7 to i32*
store i32 2,i32*%A8,align 4
ret i8*%A0
A9:
store i8*null,i8**%e,align 8
%Ba=getelementptr inbounds i8,i8*%z,i64 8
%Bb=bitcast i8*%Ba to i8**
%Bc=load i8*,i8**%Bb,align 8
%Bd=load i8*,i8**%d,align 8
%Be=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Bf=call fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2398(i8*inreg%Be,i8*inreg%Bd,i8*inreg%Bc)
store i8*%Bf,i8**%d,align 8
%Bg=call i8*@sml_alloc(i32 inreg 20)#0
%Bh=bitcast i8*%Bg to i32*
%Bi=getelementptr inbounds i8,i8*%Bg,i64 -4
%Bj=bitcast i8*%Bi to i32*
store i32 1342177296,i32*%Bj,align 4
%Bk=getelementptr inbounds i8,i8*%Bg,i64 4
%Bl=bitcast i8*%Bk to i32*
store i32 0,i32*%Bl,align 1
store i32 4,i32*%Bh,align 4
%Bm=load i8*,i8**%d,align 8
%Bn=getelementptr inbounds i8,i8*%Bg,i64 8
%Bo=bitcast i8*%Bn to i8**
store i8*%Bm,i8**%Bo,align 8
%Bp=getelementptr inbounds i8,i8*%Bg,i64 16
%Bq=bitcast i8*%Bp to i32*
store i32 2,i32*%Bq,align 4
ret i8*%Bg
Br:
store i8*null,i8**%e,align 8
%Bs=getelementptr inbounds i8,i8*%z,i64 8
%Bt=bitcast i8*%Bs to i8**
%Bu=load i8*,i8**%Bt,align 8
%Bv=load i8*,i8**%d,align 8
%Bw=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Bx=call fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2397(i8*inreg%Bw,i8*inreg%Bv,i8*inreg%Bu)
store i8*%Bx,i8**%d,align 8
%By=call i8*@sml_alloc(i32 inreg 20)#0
%Bz=bitcast i8*%By to i32*
%BA=getelementptr inbounds i8,i8*%By,i64 -4
%BB=bitcast i8*%BA to i32*
store i32 1342177296,i32*%BB,align 4
%BC=getelementptr inbounds i8,i8*%By,i64 4
%BD=bitcast i8*%BC to i32*
store i32 0,i32*%BD,align 1
store i32 5,i32*%Bz,align 4
%BE=load i8*,i8**%d,align 8
%BF=getelementptr inbounds i8,i8*%By,i64 8
%BG=bitcast i8*%BF to i8**
store i8*%BE,i8**%BG,align 8
%BH=getelementptr inbounds i8,i8*%By,i64 16
%BI=bitcast i8*%BH to i32*
store i32 2,i32*%BI,align 4
ret i8*%By
BJ:
store i8*null,i8**%e,align 8
%BK=getelementptr inbounds i8,i8*%z,i64 8
%BL=bitcast i8*%BK to i8**
%BM=load i8*,i8**%BL,align 8
%BN=load i8*,i8**%d,align 8
%BO=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%BP=call fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2396(i8*inreg%BO,i8*inreg%BN,i8*inreg%BM)
store i8*%BP,i8**%d,align 8
%BQ=call i8*@sml_alloc(i32 inreg 20)#0
%BR=bitcast i8*%BQ to i32*
%BS=getelementptr inbounds i8,i8*%BQ,i64 -4
%BT=bitcast i8*%BS to i32*
store i32 1342177296,i32*%BT,align 4
%BU=getelementptr inbounds i8,i8*%BQ,i64 4
%BV=bitcast i8*%BU to i32*
store i32 0,i32*%BV,align 1
store i32 6,i32*%BR,align 4
%BW=load i8*,i8**%d,align 8
%BX=getelementptr inbounds i8,i8*%BQ,i64 8
%BY=bitcast i8*%BX to i8**
store i8*%BW,i8**%BY,align 8
%BZ=getelementptr inbounds i8,i8*%BQ,i64 16
%B0=bitcast i8*%BZ to i32*
store i32 2,i32*%B0,align 4
ret i8*%BQ
B1:
%B2=getelementptr inbounds i8,i8*%z,i64 8
%B3=bitcast i8*%B2 to i8**
%B4=load i8*,i8**%B3,align 8
%B5=bitcast i8*%B4 to i8**
%B6=load i8*,i8**%B5,align 8
%B7=getelementptr inbounds i8,i8*%B4,i64 8
%B8=bitcast i8*%B7 to i8**
%B9=load i8*,i8**%B8,align 8
store i8*%B9,i8**%e,align 8
%Ca=load i8*,i8**%d,align 8
%Cb=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Cc=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%Cb,i8*inreg%Ca,i8*inreg%B6)
%Cd=bitcast i8*%Cc to i8**
%Ce=load i8*,i8**%Cd,align 8
store i8*%Ce,i8**%d,align 8
%Cf=getelementptr inbounds i8,i8*%Cc,i64 8
%Cg=bitcast i8*%Cf to i8**
%Ch=load i8*,i8**%Cg,align 8
store i8*%Ch,i8**%f,align 8
%Ci=call i8*@sml_alloc(i32 inreg 20)#0
%Cj=getelementptr inbounds i8,i8*%Ci,i64 -4
%Ck=bitcast i8*%Cj to i32*
store i32 1342177296,i32*%Ck,align 4
store i8*%Ci,i8**%g,align 8
%Cl=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Cm=bitcast i8*%Ci to i8**
store i8*%Cl,i8**%Cm,align 8
%Cn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%Co=getelementptr inbounds i8,i8*%Ci,i64 8
%Cp=bitcast i8*%Co to i8**
store i8*%Cn,i8**%Cp,align 8
%Cq=getelementptr inbounds i8,i8*%Ci,i64 16
%Cr=bitcast i8*%Cq to i32*
store i32 3,i32*%Cr,align 4
%Cs=call i8*@sml_alloc(i32 inreg 20)#0
%Ct=getelementptr inbounds i8,i8*%Cs,i64 -4
%Cu=bitcast i8*%Ct to i32*
store i32 1342177296,i32*%Cu,align 4
store i8*%Cs,i8**%f,align 8
%Cv=getelementptr inbounds i8,i8*%Cs,i64 4
%Cw=bitcast i8*%Cv to i32*
store i32 0,i32*%Cw,align 1
%Cx=bitcast i8*%Cs to i32*
store i32 30,i32*%Cx,align 4
%Cy=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Cz=getelementptr inbounds i8,i8*%Cs,i64 8
%CA=bitcast i8*%Cz to i8**
store i8*%Cy,i8**%CA,align 8
%CB=getelementptr inbounds i8,i8*%Cs,i64 16
%CC=bitcast i8*%CB to i32*
store i32 2,i32*%CC,align 4
%CD=call i8*@sml_alloc(i32 inreg 20)#0
%CE=getelementptr inbounds i8,i8*%CD,i64 -4
%CF=bitcast i8*%CE to i32*
store i32 1342177296,i32*%CF,align 4
store i8*%CD,i8**%e,align 8
%CG=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%CH=bitcast i8*%CD to i8**
store i8*%CG,i8**%CH,align 8
%CI=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%CJ=getelementptr inbounds i8,i8*%CD,i64 8
%CK=bitcast i8*%CJ to i8**
store i8*%CI,i8**%CK,align 8
%CL=getelementptr inbounds i8,i8*%CD,i64 16
%CM=bitcast i8*%CL to i32*
store i32 3,i32*%CM,align 4
%CN=call i8*@sml_alloc(i32 inreg 20)#0
%CO=bitcast i8*%CN to i32*
%CP=getelementptr inbounds i8,i8*%CN,i64 -4
%CQ=bitcast i8*%CP to i32*
store i32 1342177296,i32*%CQ,align 4
%CR=getelementptr inbounds i8,i8*%CN,i64 4
%CS=bitcast i8*%CR to i32*
store i32 0,i32*%CS,align 1
store i32 9,i32*%CO,align 4
%CT=load i8*,i8**%e,align 8
%CU=getelementptr inbounds i8,i8*%CN,i64 8
%CV=bitcast i8*%CU to i8**
store i8*%CT,i8**%CV,align 8
%CW=getelementptr inbounds i8,i8*%CN,i64 16
%CX=bitcast i8*%CW to i32*
store i32 2,i32*%CX,align 4
ret i8*%CN
CY:
store i8*null,i8**%e,align 8
%CZ=getelementptr inbounds i8,i8*%z,i64 8
%C0=bitcast i8*%CZ to i8**
%C1=load i8*,i8**%C0,align 8
%C2=load i8*,i8**%d,align 8
%C3=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%C4=call fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2392(i8*inreg%C3,i8*inreg%C2,i8*inreg%C1)
%C5=getelementptr inbounds i8,i8*%C4,i64 8
%C6=bitcast i8*%C5 to i8**
%C7=load i8*,i8**%C6,align 8
store i8*%C7,i8**%d,align 8
%C8=call i8*@sml_alloc(i32 inreg 20)#0
%C9=bitcast i8*%C8 to i32*
%Da=getelementptr inbounds i8,i8*%C8,i64 -4
%Db=bitcast i8*%Da to i32*
store i32 1342177296,i32*%Db,align 4
%Dc=getelementptr inbounds i8,i8*%C8,i64 4
%Dd=bitcast i8*%Dc to i32*
store i32 0,i32*%Dd,align 1
store i32 3,i32*%C9,align 4
%De=load i8*,i8**%d,align 8
%Df=getelementptr inbounds i8,i8*%C8,i64 8
%Dg=bitcast i8*%Df to i8**
store i8*%De,i8**%Dg,align 8
%Dh=getelementptr inbounds i8,i8*%C8,i64 16
%Di=bitcast i8*%Dh to i32*
store i32 2,i32*%Di,align 4
ret i8*%C8
Dj:
store i8*null,i8**%e,align 8
%Dk=getelementptr inbounds i8,i8*%z,i64 8
%Dl=bitcast i8*%Dk to i8**
%Dm=load i8*,i8**%Dl,align 8
%Dn=load i8*,i8**%d,align 8
%Do=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Dp=call fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2399(i8*inreg%Do,i8*inreg%Dn,i8*inreg%Dm)
store i8*%Dp,i8**%d,align 8
%Dq=call i8*@sml_alloc(i32 inreg 20)#0
%Dr=bitcast i8*%Dq to i32*
%Ds=getelementptr inbounds i8,i8*%Dq,i64 -4
%Dt=bitcast i8*%Ds to i32*
store i32 1342177296,i32*%Dt,align 4
%Du=getelementptr inbounds i8,i8*%Dq,i64 4
%Dv=bitcast i8*%Du to i32*
store i32 0,i32*%Dv,align 1
store i32 8,i32*%Dr,align 4
%Dw=load i8*,i8**%d,align 8
%Dx=getelementptr inbounds i8,i8*%Dq,i64 8
%Dy=bitcast i8*%Dx to i8**
store i8*%Dw,i8**%Dy,align 8
%Dz=getelementptr inbounds i8,i8*%Dq,i64 16
%DA=bitcast i8*%Dz to i32*
store i32 2,i32*%DA,align 4
ret i8*%Dq
DB:
store i8*null,i8**%e,align 8
%DC=getelementptr inbounds i8,i8*%z,i64 8
%DD=bitcast i8*%DC to i8**
%DE=load i8*,i8**%DD,align 8
%DF=load i8*,i8**%d,align 8
%DG=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%DH=call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2393(i8*inreg%DG,i8*inreg%DF,i8*inreg%DE)
store i8*%DH,i8**%d,align 8
%DI=call i8*@sml_alloc(i32 inreg 20)#0
%DJ=bitcast i8*%DI to i32*
%DK=getelementptr inbounds i8,i8*%DI,i64 -4
%DL=bitcast i8*%DK to i32*
store i32 1342177296,i32*%DL,align 4
%DM=getelementptr inbounds i8,i8*%DI,i64 4
%DN=bitcast i8*%DM to i32*
store i32 0,i32*%DN,align 1
store i32 7,i32*%DJ,align 4
%DO=load i8*,i8**%d,align 8
%DP=getelementptr inbounds i8,i8*%DI,i64 8
%DQ=bitcast i8*%DP to i8**
store i8*%DO,i8**%DQ,align 8
%DR=getelementptr inbounds i8,i8*%DI,i64 16
%DS=bitcast i8*%DR to i32*
store i32 2,i32*%DS,align 4
ret i8*%DI
DT:
store i8*null,i8**%e,align 8
%DU=getelementptr inbounds i8,i8*%z,i64 8
%DV=bitcast i8*%DU to i8**
%DW=load i8*,i8**%DV,align 8
%DX=load i8*,i8**%d,align 8
%DY=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%DZ=call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2395(i8*inreg%DY,i8*inreg%DX,i8*inreg%DW)
store i8*%DZ,i8**%d,align 8
%D0=call i8*@sml_alloc(i32 inreg 20)#0
%D1=bitcast i8*%D0 to i32*
%D2=getelementptr inbounds i8,i8*%D0,i64 -4
%D3=bitcast i8*%D2 to i32*
store i32 1342177296,i32*%D3,align 4
%D4=getelementptr inbounds i8,i8*%D0,i64 4
%D5=bitcast i8*%D4 to i32*
store i32 0,i32*%D5,align 1
store i32 2,i32*%D1,align 4
%D6=load i8*,i8**%d,align 8
%D7=getelementptr inbounds i8,i8*%D0,i64 8
%D8=bitcast i8*%D7 to i8**
store i8*%D6,i8**%D8,align 8
%D9=getelementptr inbounds i8,i8*%D0,i64 16
%Ea=bitcast i8*%D9 to i32*
store i32 2,i32*%Ea,align 4
ret i8*%D0
Eb:
%Ec=load i8*,i8**%d,align 8
%Ed=load i8*,i8**%m,align 8
store i8*null,i8**%d,align 8
store i8*null,i8**%m,align 8
%Ee=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2402(i8*inreg%Ed,i8*inreg%Ec,i8*inreg%aa)
store i8*%Ee,i8**%d,align 8
%Ef=call i8*@sml_alloc(i32 inreg 20)#0
%Eg=getelementptr inbounds i8,i8*%Ef,i64 -4
%Eh=bitcast i8*%Eg to i32*
store i32 1342177296,i32*%Eh,align 4
%Ei=bitcast i8*%Ef to i64*
store i64 0,i64*%Ei,align 4
%Ej=load i8*,i8**%d,align 8
%Ek=getelementptr inbounds i8,i8*%Ef,i64 8
%El=bitcast i8*%Ek to i8**
store i8*%Ej,i8**%El,align 8
%Em=getelementptr inbounds i8,i8*%Ef,i64 16
%En=bitcast i8*%Em to i32*
store i32 2,i32*%En,align 4
ret i8*%Ef
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2613(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2616(i8*inreg%a)#4 gc"smlsharp"{
%b=alloca i8*,align 8
%c=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
call void@llvm.gcroot(i8**%c,i8*null)#0
store i8*%a,i8**%b,align 8
%d=call i8*@sml_alloc(i32 inreg 20)#0
%e=getelementptr inbounds i8,i8*%d,i64 -4
%f=bitcast i8*%e to i32*
store i32 1342177296,i32*%f,align 4
store i8*%d,i8**%c,align 8
%g=bitcast i8*%d to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,[4x i8],i8*,i32}>,<{[4x i8],i32,i32,[4x i8],i8*,i32}>*@jL,i64 0,i32 2)to i8*),i8**%g,align 8
%h=load i8*,i8**%b,align 8
store i8*null,i8**%b,align 8
%i=getelementptr inbounds i8,i8*%d,i64 8
%j=bitcast i8*%i to i8**
store i8*%h,i8**%j,align 8
%k=getelementptr inbounds i8,i8*%d,i64 16
%l=bitcast i8*%k to i32*
store i32 3,i32*%l,align 4
%m=call i8*@sml_alloc(i32 inreg 20)#0
%n=bitcast i8*%m to i32*
%o=getelementptr inbounds i8,i8*%m,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
%q=getelementptr inbounds i8,i8*%m,i64 4
%r=bitcast i8*%q to i32*
store i32 0,i32*%r,align 1
store i32 2,i32*%n,align 4
%s=load i8*,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%m,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=getelementptr inbounds i8,i8*%m,i64 16
%w=bitcast i8*%v to i32*
store i32 2,i32*%w,align 4
ret i8*%m
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2618(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2619(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=bitcast i8*%o to i8**
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%d,align 8
%r=getelementptr inbounds i8,i8*%o,i64 8
%s=bitcast i8*%r to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%t,i64 16
%v=bitcast i8*%u to i8*(i8*,i8*)**
%w=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%v,align 8
%x=bitcast i8*%t to i8**
%y=load i8*,i8**%x,align 8
store i8*null,i8**%c,align 8
%z=load i8*,i8**%n,align 8
%A=call fastcc i8*%w(i8*inreg%y,i8*inreg%z)
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%d,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%c,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2620(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 3,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2621(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%l=bitcast i8*%h to i8**
store i8*%k,i8**%l,align 8
%m=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%n=getelementptr inbounds i8,i8*%h,i64 8
%o=bitcast i8*%n to i8**
store i8*%m,i8**%o,align 8
%p=getelementptr inbounds i8,i8*%h,i64 16
%q=bitcast i8*%p to i32*
store i32 3,i32*%q,align 4
%r=call i8*@sml_alloc(i32 inreg 20)#0
%s=bitcast i8*%r to i32*
%t=getelementptr inbounds i8,i8*%r,i64 -4
%u=bitcast i8*%t to i32*
store i32 1342177296,i32*%u,align 4
%v=getelementptr inbounds i8,i8*%r,i64 4
%w=bitcast i8*%v to i32*
store i32 0,i32*%w,align 1
store i32 3,i32*%s,align 4
%x=load i8*,i8**%e,align 8
%y=getelementptr inbounds i8,i8*%r,i64 8
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=getelementptr inbounds i8,i8*%r,i64 16
%B=bitcast i8*%A to i32*
store i32 2,i32*%B,align 4
ret i8*%r
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2622(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 2,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2623(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%a to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2624(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%n,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2625(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%o
l:
call void@sml_check(i32 inreg%h)
%m=bitcast i8**%d to i8***
%n=load i8**,i8***%m,align 8
br label%o
o:
%p=phi i8**[%n,%l],[%k,%j]
%q=load i8*,i8**%p,align 8
store i8*%q,i8**%e,align 8
%r=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%s=getelementptr inbounds i8,i8*%r,i64 16
%t=bitcast i8*%s to i8*(i8*,i8*)**
%u=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%t,align 8
%v=bitcast i8*%r to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%f,align 8
%x=call i8*@sml_alloc(i32 inreg 12)#0
%y=getelementptr inbounds i8,i8*%x,i64 -4
%z=bitcast i8*%y to i32*
store i32 1342177288,i32*%z,align 4
store i8*%x,i8**%g,align 8
%A=load i8*,i8**%c,align 8
%B=bitcast i8*%x to i8**
store i8*%A,i8**%B,align 8
%C=getelementptr inbounds i8,i8*%x,i64 8
%D=bitcast i8*%C to i32*
store i32 1,i32*%D,align 4
%E=call i8*@sml_alloc(i32 inreg 28)#0
%F=getelementptr inbounds i8,i8*%E,i64 -4
%G=bitcast i8*%F to i32*
store i32 1342177304,i32*%G,align 4
%H=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%I=bitcast i8*%E to i8**
store i8*%H,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%E,i64 8
%K=bitcast i8*%J to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2624 to void(...)*),void(...)**%K,align 8
%L=getelementptr inbounds i8,i8*%E,i64 16
%M=bitcast i8*%L to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2624 to void(...)*),void(...)**%M,align 8
%N=getelementptr inbounds i8,i8*%E,i64 24
%O=bitcast i8*%N to i32*
store i32 -2147483647,i32*%O,align 4
%P=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Q=call fastcc i8*%u(i8*inreg%P,i8*inreg%E)
%R=getelementptr inbounds i8,i8*%Q,i64 16
%S=bitcast i8*%R to i8*(i8*,i8*)**
%T=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%S,align 8
%U=bitcast i8*%Q to i8**
%V=load i8*,i8**%U,align 8
%W=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%X=getelementptr inbounds i8,i8*%W,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
%aa=call fastcc i8*%T(i8*inreg%V,i8*inreg%Z)
store i8*%aa,i8**%d,align 8
%ab=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@M,i64 0,i32 2)to i8*))
%ac=getelementptr inbounds i8,i8*%ab,i64 16
%ad=bitcast i8*%ac to i8*(i8*,i8*)**
%ae=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ad,align 8
%af=bitcast i8*%ab to i8**
%ag=load i8*,i8**%af,align 8
%ah=load i8*,i8**%c,align 8
%ai=call fastcc i8*%ae(i8*inreg%ag,i8*inreg%ah)
store i8*%ai,i8**%f,align 8
%aj=call i8*@sml_alloc(i32 inreg 28)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177304,i32*%al,align 4
store i8*%aj,i8**%g,align 8
%am=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%an=bitcast i8*%aj to i8**
store i8*%am,i8**%an,align 8
%ao=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ap=getelementptr inbounds i8,i8*%aj,i64 8
%aq=bitcast i8*%ap to i8**
store i8*%ao,i8**%aq,align 8
%ar=load i8*,i8**%c,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i8**
store i8*%ar,i8**%at,align 8
%au=getelementptr inbounds i8,i8*%aj,i64 24
%av=bitcast i8*%au to i32*
store i32 7,i32*%av,align 4
%aw=call i8*@sml_alloc(i32 inreg 20)#0
%ax=getelementptr inbounds i8,i8*%aw,i64 -4
%ay=bitcast i8*%ax to i32*
store i32 1342177296,i32*%ay,align 4
store i8*%aw,i8**%f,align 8
%az=getelementptr inbounds i8,i8*%aw,i64 4
%aA=bitcast i8*%az to i32*
store i32 0,i32*%aA,align 1
%aB=bitcast i8*%aw to i32*
store i32 1,i32*%aB,align 4
%aC=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aD=getelementptr inbounds i8,i8*%aw,i64 8
%aE=bitcast i8*%aD to i8**
store i8*%aC,i8**%aE,align 8
%aF=getelementptr inbounds i8,i8*%aw,i64 16
%aG=bitcast i8*%aF to i32*
store i32 2,i32*%aG,align 4
%aH=call i8*@sml_alloc(i32 inreg 28)#0
%aI=getelementptr inbounds i8,i8*%aH,i64 -4
%aJ=bitcast i8*%aI to i32*
store i32 1342177304,i32*%aJ,align 4
store i8*%aH,i8**%d,align 8
%aK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aL=bitcast i8*%aH to i8**
store i8*%aK,i8**%aL,align 8
%aM=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aN=getelementptr inbounds i8,i8*%aH,i64 8
%aO=bitcast i8*%aN to i8**
store i8*%aM,i8**%aO,align 8
%aP=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aQ=getelementptr inbounds i8,i8*%aH,i64 16
%aR=bitcast i8*%aQ to i8**
store i8*%aP,i8**%aR,align 8
%aS=getelementptr inbounds i8,i8*%aH,i64 24
%aT=bitcast i8*%aS to i32*
store i32 7,i32*%aT,align 4
%aU=call i8*@sml_alloc(i32 inreg 20)#0
%aV=bitcast i8*%aU to i32*
%aW=getelementptr inbounds i8,i8*%aU,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
%aY=getelementptr inbounds i8,i8*%aU,i64 4
%aZ=bitcast i8*%aY to i32*
store i32 0,i32*%aZ,align 1
store i32 5,i32*%aV,align 4
%a0=load i8*,i8**%d,align 8
%a1=getelementptr inbounds i8,i8*%aU,i64 8
%a2=bitcast i8*%a1 to i8**
store i8*%a0,i8**%a2,align 8
%a3=getelementptr inbounds i8,i8*%aU,i64 16
%a4=bitcast i8*%a3 to i32*
store i32 2,i32*%a4,align 4
ret i8*%aU
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2626(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%n,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2627(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%h=load atomic i32,i32*@sml_check_flag unordered,align 4
%i=icmp eq i32%h,0
br i1%i,label%j,label%l
j:
%k=bitcast i8*%a to i8**
br label%p
l:
call void@sml_check(i32 inreg%h)
%m=load i8*,i8**%c,align 8
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%l],[%k,%j]
%r=phi i8*[%m,%l],[%b,%j]
%s=load i8*,i8**%q,align 8
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
%y=call fastcc i8*%v(i8*inreg%x,i8*inreg%r)
store i8*%y,i8**%e,align 8
%z=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%A=getelementptr inbounds i8,i8*%z,i64 16
%B=bitcast i8*%A to i8*(i8*,i8*)**
%C=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%B,align 8
%D=bitcast i8*%z to i8**
%E=load i8*,i8**%D,align 8
store i8*%E,i8**%f,align 8
%F=call i8*@sml_alloc(i32 inreg 12)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177288,i32*%H,align 4
store i8*%F,i8**%g,align 8
%I=load i8*,i8**%c,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to i32*
store i32 1,i32*%L,align 4
%M=call i8*@sml_alloc(i32 inreg 28)#0
%N=getelementptr inbounds i8,i8*%M,i64 -4
%O=bitcast i8*%N to i32*
store i32 1342177304,i32*%O,align 4
%P=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%Q=bitcast i8*%M to i8**
store i8*%P,i8**%Q,align 8
%R=getelementptr inbounds i8,i8*%M,i64 8
%S=bitcast i8*%R to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2626 to void(...)*),void(...)**%S,align 8
%T=getelementptr inbounds i8,i8*%M,i64 16
%U=bitcast i8*%T to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2626 to void(...)*),void(...)**%U,align 8
%V=getelementptr inbounds i8,i8*%M,i64 24
%W=bitcast i8*%V to i32*
store i32 -2147483647,i32*%W,align 4
%X=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Y=call fastcc i8*%C(i8*inreg%X,i8*inreg%M)
%Z=getelementptr inbounds i8,i8*%Y,i64 16
%aa=bitcast i8*%Z to i8*(i8*,i8*)**
%ab=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%aa,align 8
%ac=bitcast i8*%Y to i8**
%ad=load i8*,i8**%ac,align 8
%ae=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%af=getelementptr inbounds i8,i8*%ae,i64 8
%ag=bitcast i8*%af to i8**
%ah=load i8*,i8**%ag,align 8
%ai=call fastcc i8*%ab(i8*inreg%ad,i8*inreg%ah)
store i8*%ai,i8**%d,align 8
%aj=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@P,i64 0,i32 2)to i8*))
%ak=getelementptr inbounds i8,i8*%aj,i64 16
%al=bitcast i8*%ak to i8*(i8*,i8*)**
%am=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%al,align 8
%an=bitcast i8*%aj to i8**
%ao=load i8*,i8**%an,align 8
%ap=load i8*,i8**%c,align 8
%aq=call fastcc i8*%am(i8*inreg%ao,i8*inreg%ap)
store i8*%aq,i8**%f,align 8
%ar=call i8*@sml_alloc(i32 inreg 28)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177304,i32*%at,align 4
store i8*%ar,i8**%g,align 8
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=load i8*,i8**%c,align 8
%aA=getelementptr inbounds i8,i8*%ar,i64 16
%aB=bitcast i8*%aA to i8**
store i8*%az,i8**%aB,align 8
%aC=getelementptr inbounds i8,i8*%ar,i64 24
%aD=bitcast i8*%aC to i32*
store i32 7,i32*%aD,align 4
%aE=call i8*@sml_alloc(i32 inreg 20)#0
%aF=getelementptr inbounds i8,i8*%aE,i64 -4
%aG=bitcast i8*%aF to i32*
store i32 1342177296,i32*%aG,align 4
store i8*%aE,i8**%f,align 8
%aH=getelementptr inbounds i8,i8*%aE,i64 4
%aI=bitcast i8*%aH to i32*
store i32 0,i32*%aI,align 1
%aJ=bitcast i8*%aE to i32*
store i32 1,i32*%aJ,align 4
%aK=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aL=getelementptr inbounds i8,i8*%aE,i64 8
%aM=bitcast i8*%aL to i8**
store i8*%aK,i8**%aM,align 8
%aN=getelementptr inbounds i8,i8*%aE,i64 16
%aO=bitcast i8*%aN to i32*
store i32 2,i32*%aO,align 4
%aP=call i8*@sml_alloc(i32 inreg 28)#0
%aQ=getelementptr inbounds i8,i8*%aP,i64 -4
%aR=bitcast i8*%aQ to i32*
store i32 1342177304,i32*%aR,align 4
store i8*%aP,i8**%d,align 8
%aS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aT=bitcast i8*%aP to i8**
store i8*%aS,i8**%aT,align 8
%aU=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aV=getelementptr inbounds i8,i8*%aP,i64 8
%aW=bitcast i8*%aV to i8**
store i8*%aU,i8**%aW,align 8
%aX=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%aY=getelementptr inbounds i8,i8*%aP,i64 16
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aP,i64 24
%a1=bitcast i8*%a0 to i32*
store i32 7,i32*%a1,align 4
%a2=call i8*@sml_alloc(i32 inreg 20)#0
%a3=bitcast i8*%a2 to i32*
%a4=getelementptr inbounds i8,i8*%a2,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177296,i32*%a5,align 4
%a6=getelementptr inbounds i8,i8*%a2,i64 4
%a7=bitcast i8*%a6 to i32*
store i32 0,i32*%a7,align 1
store i32 24,i32*%a3,align 4
%a8=load i8*,i8**%d,align 8
%a9=getelementptr inbounds i8,i8*%a2,i64 8
%ba=bitcast i8*%a9 to i8**
store i8*%a8,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a2,i64 16
%bc=bitcast i8*%bb to i32*
store i32 2,i32*%bc,align 4
ret i8*%a2
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2628(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%n,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2629(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
store i8*%a,i8**%c,align 8
store i8*%b,i8**%d,align 8
%e=load atomic i32,i32*@sml_check_flag unordered,align 4
%f=icmp eq i32%e,0
br i1%f,label%g,label%i
g:
%h=bitcast i8*%a to i8**
br label%m
i:
call void@sml_check(i32 inreg%e)
%j=load i8*,i8**%d,align 8
%k=bitcast i8**%c to i8***
%l=load i8**,i8***%k,align 8
br label%m
m:
%n=phi i8**[%l,%i],[%h,%g]
%o=phi i8*[%j,%i],[%b,%g]
%p=getelementptr inbounds i8,i8*%o,i64 16
%q=bitcast i8*%p to i8*(i8*,i8*)**
%r=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%q,align 8
%s=bitcast i8*%o to i8**
%t=load i8*,i8**%s,align 8
%u=load i8*,i8**%n,align 8
%v=tail call fastcc i8*%r(i8*inreg%t,i8*inreg%u)
ret i8*%v
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2630(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%i=load atomic i32,i32*@sml_check_flag unordered,align 4
%j=icmp eq i32%i,0
br i1%j,label%k,label%m
k:
%l=bitcast i8*%a to i8**
br label%p
m:
call void@sml_check(i32 inreg%i)
%n=bitcast i8**%d to i8***
%o=load i8**,i8***%n,align 8
br label%p
p:
%q=phi i8**[%o,%m],[%l,%k]
%r=load i8*,i8**%q,align 8
store i8*%r,i8**%e,align 8
%s=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%t=getelementptr inbounds i8,i8*%s,i64 16
%u=bitcast i8*%t to i8*(i8*,i8*)**
%v=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%u,align 8
%w=bitcast i8*%s to i8**
%x=load i8*,i8**%w,align 8
store i8*%x,i8**%f,align 8
%y=call i8*@sml_alloc(i32 inreg 12)#0
%z=getelementptr inbounds i8,i8*%y,i64 -4
%A=bitcast i8*%z to i32*
store i32 1342177288,i32*%A,align 4
store i8*%y,i8**%g,align 8
%B=load i8*,i8**%c,align 8
%C=bitcast i8*%y to i8**
store i8*%B,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%y,i64 8
%E=bitcast i8*%D to i32*
store i32 1,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2628 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2628 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
%Q=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%R=call fastcc i8*%v(i8*inreg%Q,i8*inreg%F)
%S=getelementptr inbounds i8,i8*%R,i64 16
%T=bitcast i8*%S to i8*(i8*,i8*)**
%U=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%T,align 8
%V=bitcast i8*%R to i8**
%W=load i8*,i8**%V,align 8
%X=load i8*,i8**%d,align 8
%Y=getelementptr inbounds i8,i8*%X,i64 16
%Z=bitcast i8*%Y to i8**
%aa=load i8*,i8**%Z,align 8
%ab=call fastcc i8*%U(i8*inreg%W,i8*inreg%aa)
store i8*%ab,i8**%f,align 8
%ac=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@M,i64 0,i32 2)to i8*))
%ad=getelementptr inbounds i8,i8*%ac,i64 16
%ae=bitcast i8*%ad to i8*(i8*,i8*)**
%af=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ae,align 8
%ag=bitcast i8*%ac to i8**
%ah=load i8*,i8**%ag,align 8
%ai=load i8*,i8**%c,align 8
%aj=call fastcc i8*%af(i8*inreg%ah,i8*inreg%ai)
store i8*%aj,i8**%g,align 8
%ak=call i8*@sml_alloc(i32 inreg 28)#0
%al=getelementptr inbounds i8,i8*%ak,i64 -4
%am=bitcast i8*%al to i32*
store i32 1342177304,i32*%am,align 4
store i8*%ak,i8**%h,align 8
%an=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ao=bitcast i8*%ak to i8**
store i8*%an,i8**%ao,align 8
%ap=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aq=getelementptr inbounds i8,i8*%ak,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=load i8*,i8**%c,align 8
%at=getelementptr inbounds i8,i8*%ak,i64 16
%au=bitcast i8*%at to i8**
store i8*%as,i8**%au,align 8
%av=getelementptr inbounds i8,i8*%ak,i64 24
%aw=bitcast i8*%av to i32*
store i32 7,i32*%aw,align 4
%ax=call i8*@sml_alloc(i32 inreg 20)#0
%ay=getelementptr inbounds i8,i8*%ax,i64 -4
%az=bitcast i8*%ay to i32*
store i32 1342177296,i32*%az,align 4
store i8*%ax,i8**%g,align 8
%aA=getelementptr inbounds i8,i8*%ax,i64 4
%aB=bitcast i8*%aA to i32*
store i32 0,i32*%aB,align 1
%aC=bitcast i8*%ax to i32*
store i32 1,i32*%aC,align 4
%aD=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aE=getelementptr inbounds i8,i8*%ax,i64 8
%aF=bitcast i8*%aE to i8**
store i8*%aD,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%ax,i64 16
%aH=bitcast i8*%aG to i32*
store i32 2,i32*%aH,align 4
%aI=call i8*@sml_alloc(i32 inreg 28)#0
%aJ=getelementptr inbounds i8,i8*%aI,i64 -4
%aK=bitcast i8*%aJ to i32*
store i32 1342177304,i32*%aK,align 4
store i8*%aI,i8**%f,align 8
%aL=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aM=bitcast i8*%aI to i8**
store i8*%aL,i8**%aM,align 8
%aN=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aO=getelementptr inbounds i8,i8*%aI,i64 8
%aP=bitcast i8*%aO to i8**
store i8*%aN,i8**%aP,align 8
%aQ=load i8*,i8**%c,align 8
%aR=getelementptr inbounds i8,i8*%aI,i64 16
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aI,i64 24
%aU=bitcast i8*%aT to i32*
store i32 7,i32*%aU,align 4
%aV=call i8*@sml_alloc(i32 inreg 20)#0
%aW=getelementptr inbounds i8,i8*%aV,i64 -4
%aX=bitcast i8*%aW to i32*
store i32 1342177296,i32*%aX,align 4
store i8*%aV,i8**%e,align 8
%aY=getelementptr inbounds i8,i8*%aV,i64 4
%aZ=bitcast i8*%aY to i32*
store i32 0,i32*%aZ,align 1
%a0=bitcast i8*%aV to i32*
store i32 5,i32*%a0,align 4
%a1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%a2=getelementptr inbounds i8,i8*%aV,i64 8
%a3=bitcast i8*%a2 to i8**
store i8*%a1,i8**%a3,align 8
%a4=getelementptr inbounds i8,i8*%aV,i64 16
%a5=bitcast i8*%a4 to i32*
store i32 2,i32*%a5,align 4
%a6=call i8*@sml_alloc(i32 inreg 20)#0
%a7=getelementptr inbounds i8,i8*%a6,i64 -4
%a8=bitcast i8*%a7 to i32*
store i32 1342177296,i32*%a8,align 4
store i8*%a6,i8**%h,align 8
%a9=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ba=bitcast i8*%a6 to i8**
store i8*%a9,i8**%ba,align 8
%bb=getelementptr inbounds i8,i8*%a6,i64 8
%bc=bitcast i8*%bb to i8**
store i8*null,i8**%bc,align 8
%bd=getelementptr inbounds i8,i8*%a6,i64 16
%be=bitcast i8*%bd to i32*
store i32 3,i32*%be,align 4
%bf=load i8*,i8**%d,align 8
%bg=getelementptr inbounds i8,i8*%bf,i64 8
%bh=bitcast i8*%bg to i8**
%bi=load i8*,i8**%bh,align 8
%bj=getelementptr inbounds i8,i8*%bi,i64 16
%bk=bitcast i8*%bj to i8*(i8*,i8*)**
%bl=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bk,align 8
%bm=bitcast i8*%bi to i8**
%bn=load i8*,i8**%bm,align 8
%bo=load i8*,i8**%c,align 8
%bp=call fastcc i8*%bl(i8*inreg%bn,i8*inreg%bo)
store i8*%bp,i8**%e,align 8
%bq=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%br=getelementptr inbounds i8,i8*%bq,i64 16
%bs=bitcast i8*%br to i8*(i8*,i8*)**
%bt=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bs,align 8
%bu=bitcast i8*%bq to i8**
%bv=load i8*,i8**%bu,align 8
store i8*%bv,i8**%f,align 8
%bw=call i8*@sml_alloc(i32 inreg 12)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177288,i32*%by,align 4
store i8*%bw,i8**%g,align 8
%bz=load i8*,i8**%c,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to i32*
store i32 1,i32*%bC,align 4
%bD=call i8*@sml_alloc(i32 inreg 28)#0
%bE=getelementptr inbounds i8,i8*%bD,i64 -4
%bF=bitcast i8*%bE to i32*
store i32 1342177304,i32*%bF,align 4
%bG=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bH=bitcast i8*%bD to i8**
store i8*%bG,i8**%bH,align 8
%bI=getelementptr inbounds i8,i8*%bD,i64 8
%bJ=bitcast i8*%bI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2629 to void(...)*),void(...)**%bJ,align 8
%bK=getelementptr inbounds i8,i8*%bD,i64 16
%bL=bitcast i8*%bK to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2629 to void(...)*),void(...)**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bD,i64 24
%bN=bitcast i8*%bM to i32*
store i32 -2147483647,i32*%bN,align 4
%bO=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bP=call fastcc i8*%bt(i8*inreg%bO,i8*inreg%bD)
%bQ=getelementptr inbounds i8,i8*%bP,i64 16
%bR=bitcast i8*%bQ to i8*(i8*,i8*)**
%bS=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bR,align 8
%bT=bitcast i8*%bP to i8**
%bU=load i8*,i8**%bT,align 8
%bV=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%bW=getelementptr inbounds i8,i8*%bV,i64 24
%bX=bitcast i8*%bW to i8**
%bY=load i8*,i8**%bX,align 8
%bZ=call fastcc i8*%bS(i8*inreg%bU,i8*inreg%bY)
store i8*%bZ,i8**%d,align 8
%b0=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@P,i64 0,i32 2)to i8*))
%b1=getelementptr inbounds i8,i8*%b0,i64 16
%b2=bitcast i8*%b1 to i8*(i8*,i8*)**
%b3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%b2,align 8
%b4=bitcast i8*%b0 to i8**
%b5=load i8*,i8**%b4,align 8
%b6=load i8*,i8**%c,align 8
%b7=call fastcc i8*%b3(i8*inreg%b5,i8*inreg%b6)
store i8*%b7,i8**%f,align 8
%b8=call i8*@sml_alloc(i32 inreg 28)#0
%b9=getelementptr inbounds i8,i8*%b8,i64 -4
%ca=bitcast i8*%b9 to i32*
store i32 1342177304,i32*%ca,align 4
store i8*%b8,i8**%g,align 8
%cb=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cc=bitcast i8*%b8 to i8**
store i8*%cb,i8**%cc,align 8
%cd=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ce=getelementptr inbounds i8,i8*%b8,i64 8
%cf=bitcast i8*%ce to i8**
store i8*%cd,i8**%cf,align 8
%cg=load i8*,i8**%c,align 8
%ch=getelementptr inbounds i8,i8*%b8,i64 16
%ci=bitcast i8*%ch to i8**
store i8*%cg,i8**%ci,align 8
%cj=getelementptr inbounds i8,i8*%b8,i64 24
%ck=bitcast i8*%cj to i32*
store i32 7,i32*%ck,align 4
%cl=call i8*@sml_alloc(i32 inreg 20)#0
%cm=getelementptr inbounds i8,i8*%cl,i64 -4
%cn=bitcast i8*%cm to i32*
store i32 1342177296,i32*%cn,align 4
store i8*%cl,i8**%f,align 8
%co=getelementptr inbounds i8,i8*%cl,i64 4
%cp=bitcast i8*%co to i32*
store i32 0,i32*%cp,align 1
%cq=bitcast i8*%cl to i32*
store i32 1,i32*%cq,align 4
%cr=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cs=getelementptr inbounds i8,i8*%cl,i64 8
%ct=bitcast i8*%cs to i8**
store i8*%cr,i8**%ct,align 8
%cu=getelementptr inbounds i8,i8*%cl,i64 16
%cv=bitcast i8*%cu to i32*
store i32 2,i32*%cv,align 4
%cw=call i8*@sml_alloc(i32 inreg 28)#0
%cx=getelementptr inbounds i8,i8*%cw,i64 -4
%cy=bitcast i8*%cx to i32*
store i32 1342177304,i32*%cy,align 4
store i8*%cw,i8**%d,align 8
%cz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cA=bitcast i8*%cw to i8**
store i8*%cz,i8**%cA,align 8
%cB=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cC=getelementptr inbounds i8,i8*%cw,i64 8
%cD=bitcast i8*%cC to i8**
store i8*%cB,i8**%cD,align 8
%cE=load i8*,i8**%c,align 8
%cF=getelementptr inbounds i8,i8*%cw,i64 16
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=getelementptr inbounds i8,i8*%cw,i64 24
%cI=bitcast i8*%cH to i32*
store i32 7,i32*%cI,align 4
%cJ=call i8*@sml_alloc(i32 inreg 20)#0
%cK=getelementptr inbounds i8,i8*%cJ,i64 -4
%cL=bitcast i8*%cK to i32*
store i32 1342177296,i32*%cL,align 4
store i8*%cJ,i8**%e,align 8
%cM=getelementptr inbounds i8,i8*%cJ,i64 4
%cN=bitcast i8*%cM to i32*
store i32 0,i32*%cN,align 1
%cO=bitcast i8*%cJ to i32*
store i32 24,i32*%cO,align 4
%cP=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cQ=getelementptr inbounds i8,i8*%cJ,i64 8
%cR=bitcast i8*%cQ to i8**
store i8*%cP,i8**%cR,align 8
%cS=getelementptr inbounds i8,i8*%cJ,i64 16
%cT=bitcast i8*%cS to i32*
store i32 2,i32*%cT,align 4
%cU=call i8*@sml_alloc(i32 inreg 28)#0
%cV=getelementptr inbounds i8,i8*%cU,i64 -4
%cW=bitcast i8*%cV to i32*
store i32 1342177304,i32*%cW,align 4
store i8*%cU,i8**%d,align 8
%cX=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cY=bitcast i8*%cU to i8**
store i8*%cX,i8**%cY,align 8
%cZ=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c0=getelementptr inbounds i8,i8*%cU,i64 8
%c1=bitcast i8*%c0 to i8**
store i8*%cZ,i8**%c1,align 8
%c2=load i8*,i8**%c,align 8
%c3=getelementptr inbounds i8,i8*%cU,i64 16
%c4=bitcast i8*%c3 to i8**
store i8*%c2,i8**%c4,align 8
%c5=getelementptr inbounds i8,i8*%cU,i64 24
%c6=bitcast i8*%c5 to i32*
store i32 7,i32*%c6,align 4
%c7=call i8*@sml_alloc(i32 inreg 20)#0
%c8=getelementptr inbounds i8,i8*%c7,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 1342177296,i32*%c9,align 4
store i8*%c7,i8**%e,align 8
%da=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%db=bitcast i8*%c7 to i8**
store i8*%da,i8**%db,align 8
%dc=getelementptr inbounds i8,i8*%c7,i64 8
%dd=bitcast i8*%dc to i8**
store i8*null,i8**%dd,align 8
%de=getelementptr inbounds i8,i8*%c7,i64 16
%df=bitcast i8*%de to i32*
store i32 3,i32*%df,align 4
%dg=call i8*@sml_alloc(i32 inreg 20)#0
%dh=getelementptr inbounds i8,i8*%dg,i64 -4
%di=bitcast i8*%dh to i32*
store i32 1342177296,i32*%di,align 4
store i8*%dg,i8**%d,align 8
%dj=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dk=bitcast i8*%dg to i8**
store i8*%dj,i8**%dk,align 8
%dl=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dm=getelementptr inbounds i8,i8*%dg,i64 8
%dn=bitcast i8*%dm to i8**
store i8*%dl,i8**%dn,align 8
%do=getelementptr inbounds i8,i8*%dg,i64 16
%dp=bitcast i8*%do to i32*
store i32 3,i32*%dp,align 4
%dq=call i8*@sml_alloc(i32 inreg 20)#0
%dr=bitcast i8*%dq to i32*
%ds=getelementptr inbounds i8,i8*%dq,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177296,i32*%dt,align 4
%du=getelementptr inbounds i8,i8*%dq,i64 4
%dv=bitcast i8*%du to i32*
store i32 0,i32*%dv,align 1
store i32 10,i32*%dr,align 4
%dw=load i8*,i8**%d,align 8
%dx=getelementptr inbounds i8,i8*%dq,i64 8
%dy=bitcast i8*%dx to i8**
store i8*%dw,i8**%dy,align 8
%dz=getelementptr inbounds i8,i8*%dq,i64 16
%dA=bitcast i8*%dz to i32*
store i32 2,i32*%dA,align 4
ret i8*%dq
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2631(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
store i8*%b,i8**%c,align 8
%f=bitcast i8*%a to i8**
%g=load i8*,i8**%f,align 8
store i8*%g,i8**%d,align 8
%h=call i8*@sml_alloc(i32 inreg 20)#0
%i=getelementptr inbounds i8,i8*%h,i64 -4
%j=bitcast i8*%i to i32*
store i32 1342177296,i32*%j,align 4
store i8*%h,i8**%e,align 8
%k=bitcast i8*%h to i8**
store i8*null,i8**%k,align 8
%l=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%m=getelementptr inbounds i8,i8*%h,i64 8
%n=bitcast i8*%m to i8**
store i8*%l,i8**%n,align 8
%o=getelementptr inbounds i8,i8*%h,i64 16
%p=bitcast i8*%o to i32*
store i32 3,i32*%p,align 4
%q=call i8*@sml_alloc(i32 inreg 20)#0
%r=getelementptr inbounds i8,i8*%q,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
store i8*%q,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%q,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
%v=bitcast i8*%q to i32*
store i32 1,i32*%v,align 4
%w=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%q,i64 8
%y=bitcast i8*%x to i8**
store i8*%w,i8**%y,align 8
%z=getelementptr inbounds i8,i8*%q,i64 16
%A=bitcast i8*%z to i32*
store i32 2,i32*%A,align 4
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
%E=load i8*,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=load i8*,i8**%d,align 8
%H=getelementptr inbounds i8,i8*%B,i64 8
%I=bitcast i8*%H to i8**
store i8*%G,i8**%I,align 8
%J=getelementptr inbounds i8,i8*%B,i64 16
%K=bitcast i8*%J to i32*
store i32 3,i32*%K,align 4
ret i8*%B
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2632(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
store i8*%a,i8**%d,align 8
store i8*%b,i8**%c,align 8
%j=load atomic i32,i32*@sml_check_flag unordered,align 4
%k=icmp eq i32%j,0
br i1%k,label%m,label%l
l:
call void@sml_check(i32 inreg%j)
br label%m
m:
%n=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%o=getelementptr inbounds i8,i8*%n,i64 16
%p=bitcast i8*%o to i8*(i8*,i8*)**
%q=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%p,align 8
%r=bitcast i8*%n to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%e,align 8
%t=call i8*@sml_alloc(i32 inreg 12)#0
%u=getelementptr inbounds i8,i8*%t,i64 -4
%v=bitcast i8*%u to i32*
store i32 1342177288,i32*%v,align 4
store i8*%t,i8**%f,align 8
%w=load i8*,i8**%c,align 8
%x=bitcast i8*%t to i8**
store i8*%w,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%t,i64 8
%z=bitcast i8*%y to i32*
store i32 1,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2631 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2631 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
%L=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%M=call fastcc i8*%q(i8*inreg%L,i8*inreg%A)
%N=getelementptr inbounds i8,i8*%M,i64 16
%O=bitcast i8*%N to i8*(i8*,i8*)**
%P=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%O,align 8
%Q=bitcast i8*%M to i8**
%R=load i8*,i8**%Q,align 8
%S=load i8*,i8**%d,align 8
%T=getelementptr inbounds i8,i8*%S,i64 16
%U=bitcast i8*%T to i8**
%V=load i8*,i8**%U,align 8
%W=call fastcc i8*%P(i8*inreg%R,i8*inreg%V)
store i8*%W,i8**%e,align 8
%X=bitcast i8**%d to i8***
%Y=load i8**,i8***%X,align 8
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%f,align 8
%aa=call i8*@sml_alloc(i32 inreg 20)#0
%ab=getelementptr inbounds i8,i8*%aa,i64 -4
%ac=bitcast i8*%ab to i32*
store i32 1342177296,i32*%ac,align 4
store i8*%aa,i8**%g,align 8
%ad=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ae=bitcast i8*%aa to i8**
store i8*%ad,i8**%ae,align 8
%af=getelementptr inbounds i8,i8*%aa,i64 8
%ag=bitcast i8*%af to i8**
store i8*null,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%aa,i64 16
%ai=bitcast i8*%ah to i32*
store i32 3,i32*%ai,align 4
%aj=call i8*@sml_alloc(i32 inreg 20)#0
%ak=getelementptr inbounds i8,i8*%aj,i64 -4
%al=bitcast i8*%ak to i32*
store i32 1342177296,i32*%al,align 4
store i8*%aj,i8**%i,align 8
%am=getelementptr inbounds i8,i8*%aj,i64 4
%an=bitcast i8*%am to i32*
store i32 0,i32*%an,align 1
%ao=bitcast i8*%aj to i32*
store i32 2,i32*%ao,align 4
%ap=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aq=getelementptr inbounds i8,i8*%aj,i64 8
%ar=bitcast i8*%aq to i8**
store i8*%ap,i8**%ar,align 8
%as=getelementptr inbounds i8,i8*%aj,i64 16
%at=bitcast i8*%as to i32*
store i32 2,i32*%at,align 4
%au=load i8*,i8**%d,align 8
%av=getelementptr inbounds i8,i8*%au,i64 24
%aw=bitcast i8*%av to i8**
%ax=load i8*,i8**%aw,align 8
%ay=load i8*,i8**%c,align 8
%az=call fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2630(i8*inreg%ax,i8*inreg%ay)
store i8*%az,i8**%f,align 8
%aA=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%aA,i8**%g,align 8
%aB=call i8*@sml_alloc(i32 inreg 28)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177304,i32*%aD,align 4
store i8*%aB,i8**%h,align 8
%aE=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aH=getelementptr inbounds i8,i8*%aB,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 16
%aL=bitcast i8*%aK to i8**
store i8*%aJ,i8**%aL,align 8
%aM=getelementptr inbounds i8,i8*%aB,i64 24
%aN=bitcast i8*%aM to i32*
store i32 7,i32*%aN,align 4
%aO=call i8*@sml_alloc(i32 inreg 20)#0
%aP=getelementptr inbounds i8,i8*%aO,i64 -4
%aQ=bitcast i8*%aP to i32*
store i32 1342177296,i32*%aQ,align 4
store i8*%aO,i8**%g,align 8
%aR=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aS=bitcast i8*%aO to i8**
store i8*%aR,i8**%aS,align 8
%aT=getelementptr inbounds i8,i8*%aO,i64 8
%aU=bitcast i8*%aT to i8**
store i8*null,i8**%aU,align 8
%aV=getelementptr inbounds i8,i8*%aO,i64 16
%aW=bitcast i8*%aV to i32*
store i32 3,i32*%aW,align 4
%aX=call i8*@sml_alloc(i32 inreg 28)#0
%aY=getelementptr inbounds i8,i8*%aX,i64 -4
%aZ=bitcast i8*%aY to i32*
store i32 1342177304,i32*%aZ,align 4
store i8*%aX,i8**%f,align 8
%a0=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%a1=bitcast i8*%aX to i8**
store i8*%a0,i8**%a1,align 8
%a2=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%a3=getelementptr inbounds i8,i8*%aX,i64 8
%a4=bitcast i8*%a3 to i8**
store i8*%a2,i8**%a4,align 8
%a5=load i8*,i8**%c,align 8
%a6=getelementptr inbounds i8,i8*%aX,i64 16
%a7=bitcast i8*%a6 to i8**
store i8*%a5,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%aX,i64 24
%a9=bitcast i8*%a8 to i32*
store i32 7,i32*%a9,align 4
%ba=call i8*@sml_alloc(i32 inreg 20)#0
%bb=getelementptr inbounds i8,i8*%ba,i64 -4
%bc=bitcast i8*%bb to i32*
store i32 1342177296,i32*%bc,align 4
store i8*%ba,i8**%e,align 8
%bd=getelementptr inbounds i8,i8*%ba,i64 4
%be=bitcast i8*%bd to i32*
store i32 0,i32*%be,align 1
%bf=bitcast i8*%ba to i32*
store i32 12,i32*%bf,align 4
%bg=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bh=getelementptr inbounds i8,i8*%ba,i64 8
%bi=bitcast i8*%bh to i8**
store i8*%bg,i8**%bi,align 8
%bj=getelementptr inbounds i8,i8*%ba,i64 16
%bk=bitcast i8*%bj to i32*
store i32 2,i32*%bk,align 4
%bl=call i8*@sml_alloc(i32 inreg 20)#0
%bm=getelementptr inbounds i8,i8*%bl,i64 -4
%bn=bitcast i8*%bm to i32*
store i32 1342177296,i32*%bn,align 4
store i8*%bl,i8**%f,align 8
%bo=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bp=bitcast i8*%bl to i8**
store i8*%bo,i8**%bp,align 8
%bq=getelementptr inbounds i8,i8*%bl,i64 8
%br=bitcast i8*%bq to i8**
store i8*null,i8**%br,align 8
%bs=getelementptr inbounds i8,i8*%bl,i64 16
%bt=bitcast i8*%bs to i32*
store i32 3,i32*%bt,align 4
%bu=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bP,i64 0,i32 2)to i8*))
%bv=getelementptr inbounds i8,i8*%bu,i64 16
%bw=bitcast i8*%bv to i8*(i8*,i8*)**
%bx=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bw,align 8
%by=bitcast i8*%bu to i8**
%bz=load i8*,i8**%by,align 8
%bA=load i8*,i8**%c,align 8
%bB=call fastcc i8*%bx(i8*inreg%bz,i8*inreg%bA)
store i8*%bB,i8**%e,align 8
%bC=call i8*@sml_alloc(i32 inreg 20)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177296,i32*%bE,align 4
store i8*%bC,i8**%g,align 8
%bF=getelementptr inbounds i8,i8*%bC,i64 4
%bG=bitcast i8*%bF to i32*
store i32 0,i32*%bG,align 1
%bH=bitcast i8*%bC to i32*
store i32 25,i32*%bH,align 4
%bI=load i8*,i8**%e,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 8
%bK=bitcast i8*%bJ to i8**
store i8*%bI,i8**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bC,i64 16
%bM=bitcast i8*%bL to i32*
store i32 2,i32*%bM,align 4
%bN=load i8**,i8***%X,align 8
%bO=load i8*,i8**%bN,align 8
store i8*%bO,i8**%e,align 8
%bP=call i8*@sml_alloc(i32 inreg 20)#0
%bQ=getelementptr inbounds i8,i8*%bP,i64 -4
%bR=bitcast i8*%bQ to i32*
store i32 1342177296,i32*%bR,align 4
store i8*%bP,i8**%h,align 8
%bS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bT=bitcast i8*%bP to i8**
store i8*%bS,i8**%bT,align 8
%bU=getelementptr inbounds i8,i8*%bP,i64 8
%bV=bitcast i8*%bU to i8**
store i8*null,i8**%bV,align 8
%bW=getelementptr inbounds i8,i8*%bP,i64 16
%bX=bitcast i8*%bW to i32*
store i32 3,i32*%bX,align 4
%bY=call i8*@sml_alloc(i32 inreg 20)#0
%bZ=getelementptr inbounds i8,i8*%bY,i64 -4
%b0=bitcast i8*%bZ to i32*
store i32 1342177296,i32*%b0,align 4
store i8*%bY,i8**%e,align 8
%b1=getelementptr inbounds i8,i8*%bY,i64 4
%b2=bitcast i8*%b1 to i32*
store i32 0,i32*%b2,align 1
%b3=bitcast i8*%bY to i32*
store i32 25,i32*%b3,align 4
%b4=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%b5=getelementptr inbounds i8,i8*%bY,i64 8
%b6=bitcast i8*%b5 to i8**
store i8*%b4,i8**%b6,align 8
%b7=getelementptr inbounds i8,i8*%bY,i64 16
%b8=bitcast i8*%b7 to i32*
store i32 2,i32*%b8,align 4
%b9=call i8*@sml_alloc(i32 inreg 20)#0
%ca=getelementptr inbounds i8,i8*%b9,i64 -4
%cb=bitcast i8*%ca to i32*
store i32 1342177296,i32*%cb,align 4
store i8*%b9,i8**%h,align 8
%cc=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cd=bitcast i8*%b9 to i8**
store i8*%cc,i8**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b9,i64 8
%cf=bitcast i8*%ce to i8**
store i8*null,i8**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b9,i64 16
%ch=bitcast i8*%cg to i32*
store i32 3,i32*%ch,align 4
%ci=call i8*@sml_alloc(i32 inreg 28)#0
%cj=getelementptr inbounds i8,i8*%ci,i64 -4
%ck=bitcast i8*%cj to i32*
store i32 1342177304,i32*%ck,align 4
store i8*%ci,i8**%e,align 8
%cl=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cm=bitcast i8*%ci to i8**
store i8*%cl,i8**%cm,align 8
%cn=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%co=getelementptr inbounds i8,i8*%ci,i64 8
%cp=bitcast i8*%co to i8**
store i8*%cn,i8**%cp,align 8
%cq=load i8*,i8**%c,align 8
%cr=getelementptr inbounds i8,i8*%ci,i64 16
%cs=bitcast i8*%cr to i8**
store i8*%cq,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%ci,i64 24
%cu=bitcast i8*%ct to i32*
store i32 7,i32*%cu,align 4
%cv=call i8*@sml_alloc(i32 inreg 20)#0
%cw=getelementptr inbounds i8,i8*%cv,i64 -4
%cx=bitcast i8*%cw to i32*
store i32 1342177296,i32*%cx,align 4
store i8*%cv,i8**%g,align 8
%cy=bitcast i8*%cv to i64*
store i64 0,i64*%cy,align 4
%cz=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cA=getelementptr inbounds i8,i8*%cv,i64 8
%cB=bitcast i8*%cA to i8**
store i8*%cz,i8**%cB,align 8
%cC=getelementptr inbounds i8,i8*%cv,i64 16
%cD=bitcast i8*%cC to i32*
store i32 2,i32*%cD,align 4
%cE=load i8*,i8**%d,align 8
%cF=getelementptr inbounds i8,i8*%cE,i64 8
%cG=bitcast i8*%cF to i8**
%cH=load i8*,i8**%cG,align 8
%cI=getelementptr inbounds i8,i8*%cH,i64 16
%cJ=bitcast i8*%cI to i8*(i8*,i8*)**
%cK=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%cJ,align 8
store i8*null,i8**%d,align 8
%cL=bitcast i8*%cH to i8**
%cM=load i8*,i8**%cL,align 8
%cN=load i8*,i8**%c,align 8
%cO=call fastcc i8*%cK(i8*inreg%cM,i8*inreg%cN)
store i8*%cO,i8**%d,align 8
%cP=call i8*@sml_alloc(i32 inreg 20)#0
%cQ=getelementptr inbounds i8,i8*%cP,i64 -4
%cR=bitcast i8*%cQ to i32*
store i32 1342177296,i32*%cR,align 4
store i8*%cP,i8**%e,align 8
%cS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cT=bitcast i8*%cP to i8**
store i8*%cS,i8**%cT,align 8
%cU=getelementptr inbounds i8,i8*%cP,i64 8
%cV=bitcast i8*%cU to i8**
store i8*null,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cP,i64 16
%cX=bitcast i8*%cW to i32*
store i32 3,i32*%cX,align 4
%cY=call i8*@sml_alloc(i32 inreg 28)#0
%cZ=getelementptr inbounds i8,i8*%cY,i64 -4
%c0=bitcast i8*%cZ to i32*
store i32 1342177304,i32*%c0,align 4
store i8*%cY,i8**%d,align 8
%c1=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%c2=bitcast i8*%cY to i8**
store i8*%c1,i8**%c2,align 8
%c3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%c4=getelementptr inbounds i8,i8*%cY,i64 8
%c5=bitcast i8*%c4 to i8**
store i8*%c3,i8**%c5,align 8
%c6=load i8*,i8**%c,align 8
%c7=getelementptr inbounds i8,i8*%cY,i64 16
%c8=bitcast i8*%c7 to i8**
store i8*%c6,i8**%c8,align 8
%c9=getelementptr inbounds i8,i8*%cY,i64 24
%da=bitcast i8*%c9 to i32*
store i32 7,i32*%da,align 4
%db=call i8*@sml_alloc(i32 inreg 20)#0
%dc=getelementptr inbounds i8,i8*%db,i64 -4
%dd=bitcast i8*%dc to i32*
store i32 1342177296,i32*%dd,align 4
store i8*%db,i8**%e,align 8
%de=bitcast i8*%db to i64*
store i64 0,i64*%de,align 4
%df=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dg=getelementptr inbounds i8,i8*%db,i64 8
%dh=bitcast i8*%dg to i8**
store i8*%df,i8**%dh,align 8
%di=getelementptr inbounds i8,i8*%db,i64 16
%dj=bitcast i8*%di to i32*
store i32 2,i32*%dj,align 4
%dk=call i8*@sml_alloc(i32 inreg 28)#0
%dl=getelementptr inbounds i8,i8*%dk,i64 -4
%dm=bitcast i8*%dl to i32*
store i32 1342177304,i32*%dm,align 4
store i8*%dk,i8**%d,align 8
%dn=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%do=bitcast i8*%dk to i8**
store i8*%dn,i8**%do,align 8
%dp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%dq=getelementptr inbounds i8,i8*%dk,i64 8
%dr=bitcast i8*%dq to i8**
store i8*%dp,i8**%dr,align 8
%ds=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%dt=getelementptr inbounds i8,i8*%dk,i64 16
%du=bitcast i8*%dt to i8**
store i8*%ds,i8**%du,align 8
%dv=getelementptr inbounds i8,i8*%dk,i64 24
%dw=bitcast i8*%dv to i32*
store i32 7,i32*%dw,align 4
%dx=call i8*@sml_alloc(i32 inreg 20)#0
%dy=bitcast i8*%dx to i32*
%dz=getelementptr inbounds i8,i8*%dx,i64 -4
%dA=bitcast i8*%dz to i32*
store i32 1342177296,i32*%dA,align 4
%dB=getelementptr inbounds i8,i8*%dx,i64 4
%dC=bitcast i8*%dB to i32*
store i32 0,i32*%dC,align 1
store i32 13,i32*%dy,align 4
%dD=load i8*,i8**%d,align 8
%dE=getelementptr inbounds i8,i8*%dx,i64 8
%dF=bitcast i8*%dE to i8**
store i8*%dD,i8**%dF,align 8
%dG=getelementptr inbounds i8,i8*%dx,i64 16
%dH=bitcast i8*%dG to i32*
store i32 2,i32*%dH,align 4
ret i8*%dx
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2633(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%e,align 8
store i8*%b,i8**%c,align 8
%k=getelementptr inbounds i8,i8*%a,i64 16
%l=bitcast i8*%k to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%f,align 8
%n=call i8*@sml_alloc(i32 inreg 20)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177296,i32*%p,align 4
store i8*%n,i8**%d,align 8
%q=load i8*,i8**%f,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=getelementptr inbounds i8,i8*%n,i64 8
%t=bitcast i8*%s to i8**
store i8*null,i8**%t,align 8
%u=getelementptr inbounds i8,i8*%n,i64 16
%v=bitcast i8*%u to i32*
store i32 3,i32*%v,align 4
%w=load i8*,i8**%e,align 8
%x=getelementptr inbounds i8,i8*%w,i64 24
%y=bitcast i8*%x to i8**
%z=load i8*,i8**%y,align 8
store i8*%z,i8**%f,align 8
%A=call i8*@sml_alloc(i32 inreg 12)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177288,i32*%C,align 4
store i8*%A,i8**%g,align 8
%D=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to i32*
store i32 1,i32*%G,align 4
%H=call i8*@sml_alloc(i32 inreg 28)#0
%I=getelementptr inbounds i8,i8*%H,i64 -4
%J=bitcast i8*%I to i32*
store i32 1342177304,i32*%J,align 4
%K=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%L=bitcast i8*%H to i8**
store i8*%K,i8**%L,align 8
%M=getelementptr inbounds i8,i8*%H,i64 8
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2622 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%H,i64 16
%P=bitcast i8*%O to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2622 to void(...)*),void(...)**%P,align 8
%Q=getelementptr inbounds i8,i8*%H,i64 24
%R=bitcast i8*%Q to i32*
store i32 -2147483647,i32*%R,align 4
%S=bitcast i8**%e to i8***
%T=load i8**,i8***%S,align 8
%U=load i8*,i8**%T,align 8
store i8*%U,i8**%f,align 8
%V=call i8*@sml_alloc(i32 inreg 12)#0
%W=getelementptr inbounds i8,i8*%V,i64 -4
%X=bitcast i8*%W to i32*
store i32 1342177288,i32*%X,align 4
store i8*%V,i8**%g,align 8
%Y=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%Z=bitcast i8*%V to i8**
store i8*%Y,i8**%Z,align 8
%aa=getelementptr inbounds i8,i8*%V,i64 8
%ab=bitcast i8*%aa to i32*
store i32 1,i32*%ab,align 4
%ac=call i8*@sml_alloc(i32 inreg 28)#0
%ad=getelementptr inbounds i8,i8*%ac,i64 -4
%ae=bitcast i8*%ad to i32*
store i32 1342177304,i32*%ae,align 4
%af=load i8*,i8**%g,align 8
%ag=bitcast i8*%ac to i8**
store i8*%af,i8**%ag,align 8
%ah=getelementptr inbounds i8,i8*%ac,i64 8
%ai=bitcast i8*%ah to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2623 to void(...)*),void(...)**%ai,align 8
%aj=getelementptr inbounds i8,i8*%ac,i64 16
%ak=bitcast i8*%aj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2623 to void(...)*),void(...)**%ak,align 8
%al=getelementptr inbounds i8,i8*%ac,i64 24
%am=bitcast i8*%al to i32*
store i32 -2147483647,i32*%am,align 4
%an=load i8**,i8***%S,align 8
%ao=load i8*,i8**%an,align 8
store i8*%ao,i8**%f,align 8
%ap=getelementptr inbounds i8*,i8**%an,i64 4
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%g,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
store i8*%ar,i8**%h,align 8
%au=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=call i8*@sml_alloc(i32 inreg 28)#0
%aC=getelementptr inbounds i8,i8*%aB,i64 -4
%aD=bitcast i8*%aC to i32*
store i32 1342177304,i32*%aD,align 4
%aE=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aF=bitcast i8*%aB to i8**
store i8*%aE,i8**%aF,align 8
%aG=getelementptr inbounds i8,i8*%aB,i64 8
%aH=bitcast i8*%aG to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2625 to void(...)*),void(...)**%aH,align 8
%aI=getelementptr inbounds i8,i8*%aB,i64 16
%aJ=bitcast i8*%aI to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2625 to void(...)*),void(...)**%aJ,align 8
%aK=getelementptr inbounds i8,i8*%aB,i64 24
%aL=bitcast i8*%aK to i32*
store i32 -2147483647,i32*%aL,align 4
%aM=load i8*,i8**%e,align 8
%aN=getelementptr inbounds i8,i8*%aM,i64 8
%aO=bitcast i8*%aN to i8**
%aP=load i8*,i8**%aO,align 8
store i8*%aP,i8**%f,align 8
%aQ=getelementptr inbounds i8,i8*%aM,i64 40
%aR=bitcast i8*%aQ to i8**
%aS=load i8*,i8**%aR,align 8
store i8*%aS,i8**%g,align 8
%aT=call i8*@sml_alloc(i32 inreg 20)#0
%aU=getelementptr inbounds i8,i8*%aT,i64 -4
%aV=bitcast i8*%aU to i32*
store i32 1342177296,i32*%aV,align 4
store i8*%aT,i8**%h,align 8
%aW=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aX=bitcast i8*%aT to i8**
store i8*%aW,i8**%aX,align 8
%aY=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%aZ=getelementptr inbounds i8,i8*%aT,i64 8
%a0=bitcast i8*%aZ to i8**
store i8*%aY,i8**%a0,align 8
%a1=getelementptr inbounds i8,i8*%aT,i64 16
%a2=bitcast i8*%a1 to i32*
store i32 3,i32*%a2,align 4
%a3=call i8*@sml_alloc(i32 inreg 28)#0
%a4=getelementptr inbounds i8,i8*%a3,i64 -4
%a5=bitcast i8*%a4 to i32*
store i32 1342177304,i32*%a5,align 4
%a6=load i8*,i8**%h,align 8
%a7=bitcast i8*%a3 to i8**
store i8*%a6,i8**%a7,align 8
%a8=getelementptr inbounds i8,i8*%a3,i64 8
%a9=bitcast i8*%a8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2627 to void(...)*),void(...)**%a9,align 8
%ba=getelementptr inbounds i8,i8*%a3,i64 16
%bb=bitcast i8*%ba to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2627 to void(...)*),void(...)**%bb,align 8
%bc=getelementptr inbounds i8,i8*%a3,i64 24
%bd=bitcast i8*%bc to i32*
store i32 -2147483647,i32*%bd,align 4
%be=load i8**,i8***%S,align 8
%bf=load i8*,i8**%be,align 8
store i8*%bf,i8**%f,align 8
%bg=getelementptr inbounds i8*,i8**%be,i64 1
%bh=load i8*,i8**%bg,align 8
store i8*%bh,i8**%g,align 8
%bi=getelementptr inbounds i8*,i8**%be,i64 4
%bj=load i8*,i8**%bi,align 8
store i8*%bj,i8**%h,align 8
%bk=getelementptr inbounds i8*,i8**%be,i64 5
%bl=load i8*,i8**%bk,align 8
store i8*%bl,i8**%i,align 8
%bm=call i8*@sml_alloc(i32 inreg 36)#0
%bn=getelementptr inbounds i8,i8*%bm,i64 -4
%bo=bitcast i8*%bn to i32*
store i32 1342177312,i32*%bo,align 4
store i8*%bm,i8**%j,align 8
%bp=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bq=bitcast i8*%bm to i8**
store i8*%bp,i8**%bq,align 8
%br=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%bs=getelementptr inbounds i8,i8*%bm,i64 8
%bt=bitcast i8*%bs to i8**
store i8*%br,i8**%bt,align 8
%bu=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bv=getelementptr inbounds i8,i8*%bm,i64 16
%bw=bitcast i8*%bv to i8**
store i8*%bu,i8**%bw,align 8
%bx=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%by=getelementptr inbounds i8,i8*%bm,i64 24
%bz=bitcast i8*%by to i8**
store i8*%bx,i8**%bz,align 8
%bA=getelementptr inbounds i8,i8*%bm,i64 32
%bB=bitcast i8*%bA to i32*
store i32 15,i32*%bB,align 4
%bC=call i8*@sml_alloc(i32 inreg 28)#0
%bD=getelementptr inbounds i8,i8*%bC,i64 -4
%bE=bitcast i8*%bD to i32*
store i32 1342177304,i32*%bE,align 4
%bF=load i8*,i8**%j,align 8
%bG=bitcast i8*%bC to i8**
store i8*%bF,i8**%bG,align 8
%bH=getelementptr inbounds i8,i8*%bC,i64 8
%bI=bitcast i8*%bH to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2630 to void(...)*),void(...)**%bI,align 8
%bJ=getelementptr inbounds i8,i8*%bC,i64 16
%bK=bitcast i8*%bJ to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2630 to void(...)*),void(...)**%bK,align 8
%bL=getelementptr inbounds i8,i8*%bC,i64 24
%bM=bitcast i8*%bL to i32*
store i32 -2147483647,i32*%bM,align 4
%bN=load i8*,i8**%e,align 8
%bO=getelementptr inbounds i8,i8*%bN,i64 24
%bP=bitcast i8*%bO to i8**
%bQ=load i8*,i8**%bP,align 8
store i8*%bQ,i8**%e,align 8
%bR=call i8*@sml_alloc(i32 inreg 36)#0
%bS=getelementptr inbounds i8,i8*%bR,i64 -4
%bT=bitcast i8*%bS to i32*
store i32 1342177312,i32*%bT,align 4
store i8*%bR,i8**%f,align 8
%bU=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bV=bitcast i8*%bR to i8**
store i8*%bU,i8**%bV,align 8
%bW=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%bX=getelementptr inbounds i8,i8*%bR,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%b0=getelementptr inbounds i8,i8*%bR,i64 16
%b1=bitcast i8*%b0 to i8**
store i8*%bZ,i8**%b1,align 8
%b2=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%b3=getelementptr inbounds i8,i8*%bR,i64 24
%b4=bitcast i8*%b3 to i8**
store i8*%b2,i8**%b4,align 8
%b5=getelementptr inbounds i8,i8*%bR,i64 32
%b6=bitcast i8*%b5 to i32*
store i32 15,i32*%b6,align 4
%b7=call i8*@sml_alloc(i32 inreg 28)#0
%b8=getelementptr inbounds i8,i8*%b7,i64 -4
%b9=bitcast i8*%b8 to i32*
store i32 1342177304,i32*%b9,align 4
%ca=load i8*,i8**%f,align 8
%cb=bitcast i8*%b7 to i8**
store i8*%ca,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b7,i64 8
%cd=bitcast i8*%cc to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2632 to void(...)*),void(...)**%cd,align 8
%ce=getelementptr inbounds i8,i8*%b7,i64 16
%cf=bitcast i8*%ce to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2632 to void(...)*),void(...)**%cf,align 8
%cg=getelementptr inbounds i8,i8*%b7,i64 24
%ch=bitcast i8*%cg to i32*
store i32 -2147483647,i32*%ch,align 4
ret i8*%b7
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2634(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
%e=bitcast i8*%a to i8**
%f=load i8*,i8**%e,align 8
store i8*%f,i8**%c,align 8
%g=call i8*@sml_alloc(i32 inreg 20)#0
%h=getelementptr inbounds i8,i8*%g,i64 -4
%i=bitcast i8*%h to i32*
store i32 1342177296,i32*%i,align 4
store i8*%g,i8**%d,align 8
%j=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%k=bitcast i8*%g to i8**
store i8*%j,i8**%k,align 8
%l=getelementptr inbounds i8,i8*%g,i64 8
%m=bitcast i8*%l to i8**
store i8*null,i8**%m,align 8
%n=getelementptr inbounds i8,i8*%g,i64 16
%o=bitcast i8*%n to i32*
store i32 3,i32*%o,align 4
%p=call i8*@sml_alloc(i32 inreg 20)#0
%q=bitcast i8*%p to i32*
%r=getelementptr inbounds i8,i8*%p,i64 -4
%s=bitcast i8*%r to i32*
store i32 1342177296,i32*%s,align 4
%t=getelementptr inbounds i8,i8*%p,i64 4
%u=bitcast i8*%t to i32*
store i32 0,i32*%u,align 1
store i32 25,i32*%q,align 4
%v=load i8*,i8**%d,align 8
%w=getelementptr inbounds i8,i8*%p,i64 8
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i32*
store i32 2,i32*%z,align 4
ret i8*%p
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2636(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
r:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
%k=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
call void@llvm.gcroot(i8**%k,i8*null)#0
store i8*%a,i8**%f,align 8
store i8*%b,i8**%c,align 8
%l=load atomic i32,i32*@sml_check_flag unordered,align 4
%m=icmp eq i32%l,0
br i1%m,label%p,label%n
n:
call void@sml_check(i32 inreg%l)
%o=load i8*,i8**%c,align 8
br label%p
p:
%q=phi i8*[%o,%n],[%b,%r]
%s=bitcast i8*%q to i8**
%t=load i8*,i8**%s,align 8
%u=getelementptr inbounds i8,i8*%q,i64 8
%v=bitcast i8*%u to i8**
%w=load i8*,i8**%v,align 8
store i8*%w,i8**%c,align 8
%x=bitcast i8*%t to i32*
%y=load i32,i32*%x,align 4
switch i32%y,label%z[
i32 2,label%fw
i32 0,label%eJ
i32 1,label%R
]
z:
store i8*null,i8**%f,align 8
call void@sml_matchcomp_bug()
%A=load i8*,i8**@_SMLZ5Match,align 8
store i8*%A,i8**%c,align 8
%B=call i8*@sml_alloc(i32 inreg 20)#0
%C=getelementptr inbounds i8,i8*%B,i64 -4
%D=bitcast i8*%C to i32*
store i32 1342177296,i32*%D,align 4
store i8*%B,i8**%d,align 8
%E=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%F=bitcast i8*%B to i8**
store i8*%E,i8**%F,align 8
%G=getelementptr inbounds i8,i8*%B,i64 8
%H=bitcast i8*%G to i8**
store i8*getelementptr inbounds(<{[4x i8],i32,[73x i8]}>,<{[4x i8],i32,[73x i8]}>*@jN,i64 0,i32 2,i64 0),i8**%H,align 8
%I=getelementptr inbounds i8,i8*%B,i64 16
%J=bitcast i8*%I to i32*
store i32 3,i32*%J,align 4
%K=call i8*@sml_alloc(i32 inreg 60)#0
%L=getelementptr inbounds i8,i8*%K,i64 -4
%M=bitcast i8*%L to i32*
store i32 1342177336,i32*%M,align 4
%N=getelementptr inbounds i8,i8*%K,i64 56
%O=bitcast i8*%N to i32*
store i32 1,i32*%O,align 4
%P=load i8*,i8**%d,align 8
%Q=bitcast i8*%K to i8**
store i8*%P,i8**%Q,align 8
call void@sml_raise(i8*inreg%K)#1
unreachable
R:
%S=getelementptr inbounds i8,i8*%t,i64 8
%T=bitcast i8*%S to i8**
%U=load i8*,i8**%T,align 8
%V=bitcast i8*%U to i8**
%W=load i8*,i8**%V,align 8
%X=getelementptr inbounds i8,i8*%U,i64 8
%Y=bitcast i8*%X to i8**
%Z=load i8*,i8**%Y,align 8
store i8*%Z,i8**%d,align 8
%aa=load i8*,i8**%f,align 8
%ab=getelementptr inbounds i8,i8*%aa,i64 8
%ac=bitcast i8*%ab to i8**
%ad=load i8*,i8**%ac,align 8
%ae=getelementptr inbounds i8,i8*%ad,i64 16
%af=bitcast i8*%ae to i8*(i8*,i8*)**
%ag=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%af,align 8
%ah=bitcast i8*%ad to i8**
%ai=load i8*,i8**%ah,align 8
%aj=call fastcc i8*%ag(i8*inreg%ai,i8*inreg%W)
store i8*%aj,i8**%e,align 8
%ak=load i8*,i8**%f,align 8
%al=getelementptr inbounds i8,i8*%ak,i64 24
%am=bitcast i8*%al to i8**
%an=load i8*,i8**%am,align 8
store i8*%an,i8**%g,align 8
%ao=getelementptr inbounds i8,i8*%ak,i64 16
%ap=bitcast i8*%ao to i8**
%aq=load i8*,i8**%ap,align 8
store i8*%aq,i8**%f,align 8
%ar=call i8*@sml_alloc(i32 inreg 20)#0
%as=getelementptr inbounds i8,i8*%ar,i64 -4
%at=bitcast i8*%as to i32*
store i32 1342177296,i32*%at,align 4
%au=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%av=bitcast i8*%ar to i8**
store i8*%au,i8**%av,align 8
%aw=load i8*,i8**%c,align 8
%ax=getelementptr inbounds i8,i8*%ar,i64 8
%ay=bitcast i8*%ax to i8**
store i8*%aw,i8**%ay,align 8
%az=getelementptr inbounds i8,i8*%ar,i64 16
%aA=bitcast i8*%az to i32*
store i32 3,i32*%aA,align 4
%aB=load i8*,i8**%g,align 8
%aC=load i8*,i8**%f,align 8
store i8*null,i8**%g,align 8
store i8*null,i8**%f,align 8
%aD=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%aB,i8*inreg%aC,i8*inreg%ar)
%aE=getelementptr inbounds i8,i8*%aD,i64 8
%aF=bitcast i8*%aE to i8**
%aG=load i8*,i8**%aF,align 8
%aH=bitcast i8*%aD to i32*
%aI=load i32,i32*%aH,align 4
%aJ=bitcast i8*%aG to i8**
%aK=load i8*,i8**%aJ,align 8
store i8*%aK,i8**%d,align 8
%aL=getelementptr inbounds i8,i8*%aG,i64 8
%aM=bitcast i8*%aL to i8**
%aN=load i8*,i8**%aM,align 8
store i8*%aN,i8**%f,align 8
%aO=icmp eq i32%aI,7
br i1%aO,label%aQ,label%aP
aP:
store i8*null,i8**%f,align 8
br label%a2
aQ:
%aR=call i8*@sml_alloc(i32 inreg 20)#0
%aS=bitcast i8*%aR to i32*
%aT=getelementptr inbounds i8,i8*%aR,i64 -4
%aU=bitcast i8*%aT to i32*
store i32 1342177296,i32*%aU,align 4
%aV=getelementptr inbounds i8,i8*%aR,i64 4
%aW=bitcast i8*%aV to i32*
store i32 0,i32*%aW,align 1
store i32 23,i32*%aS,align 4
%aX=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aY=getelementptr inbounds i8,i8*%aR,i64 8
%aZ=bitcast i8*%aY to i8**
store i8*%aX,i8**%aZ,align 8
%a0=getelementptr inbounds i8,i8*%aR,i64 16
%a1=bitcast i8*%a0 to i32*
store i32 2,i32*%a1,align 4
br label%a2
a2:
%a3=phi i8*[%aN,%aP],[%aR,%aQ]
%a4=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2372(i8*inreg%a3)
store i8*%a4,i8**%f,align 8
%a5=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%a6=call fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2379(i8*inreg%a5)
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bd=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%bc)
store i8*%bd,i8**%d,align 8
%be=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%be,i8**%f,align 8
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
store i8*%bf,i8**%g,align 8
%bi=bitcast i8*%bf to i64*
store i64 0,i64*%bi,align 4
%bj=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to i32*
store i32 2,i32*%bn,align 4
%bo=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%bo,i8**%f,align 8
%bp=call i8*@sml_alloc(i32 inreg 12)#0
%bq=getelementptr inbounds i8,i8*%bp,i64 -4
%br=bitcast i8*%bq to i32*
store i32 1342177288,i32*%br,align 4
store i8*%bp,i8**%h,align 8
%bs=load i8*,i8**%g,align 8
%bt=bitcast i8*%bp to i8**
store i8*%bs,i8**%bt,align 8
%bu=getelementptr inbounds i8,i8*%bp,i64 8
%bv=bitcast i8*%bu to i32*
store i32 1,i32*%bv,align 4
%bw=call i8*@sml_alloc(i32 inreg 28)#0
%bx=getelementptr inbounds i8,i8*%bw,i64 -4
%by=bitcast i8*%bx to i32*
store i32 1342177304,i32*%by,align 4
store i8*%bw,i8**%i,align 8
%bz=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bA=bitcast i8*%bw to i8**
store i8*%bz,i8**%bA,align 8
%bB=getelementptr inbounds i8,i8*%bw,i64 8
%bC=bitcast i8*%bB to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2620 to void(...)*),void(...)**%bC,align 8
%bD=getelementptr inbounds i8,i8*%bw,i64 16
%bE=bitcast i8*%bD to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2620 to void(...)*),void(...)**%bE,align 8
%bF=getelementptr inbounds i8,i8*%bw,i64 24
%bG=bitcast i8*%bF to i32*
store i32 -2147483647,i32*%bG,align 4
%bH=call i8*@sml_alloc(i32 inreg 20)#0
%bI=getelementptr inbounds i8,i8*%bH,i64 -4
%bJ=bitcast i8*%bI to i32*
store i32 1342177296,i32*%bJ,align 4
store i8*%bH,i8**%j,align 8
%bK=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bL=bitcast i8*%bH to i8**
store i8*%bK,i8**%bL,align 8
%bM=getelementptr inbounds i8,i8*%bH,i64 8
%bN=bitcast i8*%bM to i8**
store i8*null,i8**%bN,align 8
%bO=getelementptr inbounds i8,i8*%bH,i64 16
%bP=bitcast i8*%bO to i32*
store i32 3,i32*%bP,align 4
%bQ=call i8*@sml_alloc(i32 inreg 20)#0
%bR=getelementptr inbounds i8,i8*%bQ,i64 -4
%bS=bitcast i8*%bR to i32*
store i32 1342177296,i32*%bS,align 4
store i8*%bQ,i8**%h,align 8
%bT=bitcast i8*%bQ to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),i8**%bT,align 8
%bU=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bV=getelementptr inbounds i8,i8*%bQ,i64 8
%bW=bitcast i8*%bV to i8**
store i8*%bU,i8**%bW,align 8
%bX=getelementptr inbounds i8,i8*%bQ,i64 16
%bY=bitcast i8*%bX to i32*
store i32 3,i32*%bY,align 4
%bZ=call i8*@sml_alloc(i32 inreg 12)#0
%b0=getelementptr inbounds i8,i8*%bZ,i64 -4
%b1=bitcast i8*%b0 to i32*
store i32 1342177288,i32*%b1,align 4
store i8*%bZ,i8**%i,align 8
%b2=load i8*,i8**%g,align 8
%b3=bitcast i8*%bZ to i8**
store i8*%b2,i8**%b3,align 8
%b4=getelementptr inbounds i8,i8*%bZ,i64 8
%b5=bitcast i8*%b4 to i32*
store i32 1,i32*%b5,align 4
%b6=call i8*@sml_alloc(i32 inreg 28)#0
%b7=getelementptr inbounds i8,i8*%b6,i64 -4
%b8=bitcast i8*%b7 to i32*
store i32 1342177304,i32*%b8,align 4
store i8*%b6,i8**%j,align 8
%b9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ca=bitcast i8*%b6 to i8**
store i8*%b9,i8**%ca,align 8
%cb=getelementptr inbounds i8,i8*%b6,i64 8
%cc=bitcast i8*%cb to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2621 to void(...)*),void(...)**%cc,align 8
%cd=getelementptr inbounds i8,i8*%b6,i64 16
%ce=bitcast i8*%cd to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2621 to void(...)*),void(...)**%ce,align 8
%cf=getelementptr inbounds i8,i8*%b6,i64 24
%cg=bitcast i8*%cf to i32*
store i32 -2147483647,i32*%cg,align 4
%ch=call i8*@sml_alloc(i32 inreg 20)#0
%ci=getelementptr inbounds i8,i8*%ch,i64 -4
%cj=bitcast i8*%ci to i32*
store i32 1342177296,i32*%cj,align 4
store i8*%ch,i8**%k,align 8
%ck=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cl=bitcast i8*%ch to i8**
store i8*%ck,i8**%cl,align 8
%cm=getelementptr inbounds i8,i8*%ch,i64 8
%cn=bitcast i8*%cm to i8**
store i8*null,i8**%cn,align 8
%co=getelementptr inbounds i8,i8*%ch,i64 16
%cp=bitcast i8*%co to i32*
store i32 3,i32*%cp,align 4
%cq=call i8*@sml_alloc(i32 inreg 20)#0
%cr=getelementptr inbounds i8,i8*%cq,i64 -4
%cs=bitcast i8*%cr to i32*
store i32 1342177296,i32*%cs,align 4
store i8*%cq,i8**%i,align 8
%ct=bitcast i8*%cq to i8**
store i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@fR,i64 0,i32 2)to i8*),i8**%ct,align 8
%cu=load i8*,i8**%k,align 8
store i8*null,i8**%k,align 8
%cv=getelementptr inbounds i8,i8*%cq,i64 8
%cw=bitcast i8*%cv to i8**
store i8*%cu,i8**%cw,align 8
%cx=getelementptr inbounds i8,i8*%cq,i64 16
%cy=bitcast i8*%cx to i32*
store i32 3,i32*%cy,align 4
%cz=call i8*@sml_alloc(i32 inreg 52)#0
%cA=getelementptr inbounds i8,i8*%cz,i64 -4
%cB=bitcast i8*%cA to i32*
store i32 1342177328,i32*%cB,align 4
store i8*%cz,i8**%j,align 8
%cC=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cD=bitcast i8*%cz to i8**
store i8*%cC,i8**%cD,align 8
%cE=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%cF=getelementptr inbounds i8,i8*%cz,i64 8
%cG=bitcast i8*%cF to i8**
store i8*%cE,i8**%cG,align 8
%cH=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cI=getelementptr inbounds i8,i8*%cz,i64 16
%cJ=bitcast i8*%cI to i8**
store i8*%cH,i8**%cJ,align 8
%cK=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cL=getelementptr inbounds i8,i8*%cz,i64 24
%cM=bitcast i8*%cL to i8**
store i8*%cK,i8**%cM,align 8
%cN=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cO=getelementptr inbounds i8,i8*%cz,i64 32
%cP=bitcast i8*%cO to i8**
store i8*%cN,i8**%cP,align 8
%cQ=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cR=getelementptr inbounds i8,i8*%cz,i64 40
%cS=bitcast i8*%cR to i8**
store i8*%cQ,i8**%cS,align 8
%cT=getelementptr inbounds i8,i8*%cz,i64 48
%cU=bitcast i8*%cT to i32*
store i32 63,i32*%cU,align 4
%cV=call i8*@sml_alloc(i32 inreg 28)#0
%cW=getelementptr inbounds i8,i8*%cV,i64 -4
%cX=bitcast i8*%cW to i32*
store i32 1342177304,i32*%cX,align 4
%cY=load i8*,i8**%j,align 8
%cZ=bitcast i8*%cV to i8**
store i8*%cY,i8**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cV,i64 8
%c1=bitcast i8*%c0 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2633 to void(...)*),void(...)**%c1,align 8
%c2=getelementptr inbounds i8,i8*%cV,i64 16
%c3=bitcast i8*%c2 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2633 to void(...)*),void(...)**%c3,align 8
%c4=getelementptr inbounds i8,i8*%cV,i64 24
%c5=bitcast i8*%c4 to i32*
store i32 -2147483647,i32*%c5,align 4
%c6=call fastcc i8*@_SMLFN6Symbol8generateE(i32 inreg 0)
store i8*%c6,i8**%d,align 8
%c7=call i8*@sml_alloc(i32 inreg 12)#0
%c8=getelementptr inbounds i8,i8*%c7,i64 -4
%c9=bitcast i8*%c8 to i32*
store i32 1342177288,i32*%c9,align 4
store i8*%c7,i8**%e,align 8
%da=load i8*,i8**%d,align 8
%db=bitcast i8*%c7 to i8**
store i8*%da,i8**%db,align 8
%dc=getelementptr inbounds i8,i8*%c7,i64 8
%dd=bitcast i8*%dc to i32*
store i32 1,i32*%dd,align 4
%de=call i8*@sml_alloc(i32 inreg 28)#0
%df=getelementptr inbounds i8,i8*%de,i64 -4
%dg=bitcast i8*%df to i32*
store i32 1342177304,i32*%dg,align 4
%dh=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%di=bitcast i8*%de to i8**
store i8*%dh,i8**%di,align 8
%dj=getelementptr inbounds i8,i8*%de,i64 8
%dk=bitcast i8*%dj to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2634 to void(...)*),void(...)**%dk,align 8
%dl=getelementptr inbounds i8,i8*%de,i64 16
%dm=bitcast i8*%dl to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2634 to void(...)*),void(...)**%dm,align 8
%dn=getelementptr inbounds i8,i8*%de,i64 24
%do=bitcast i8*%dn to i32*
store i32 -2147483647,i32*%do,align 4
%dp=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%dq=call fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2633(i8*inreg%dp,i8*inreg%de)
store i8*%dq,i8**%e,align 8
%dr=call i8*@sml_alloc(i32 inreg 20)#0
%ds=getelementptr inbounds i8,i8*%dr,i64 -4
%dt=bitcast i8*%ds to i32*
store i32 1342177296,i32*%dt,align 4
store i8*%dr,i8**%f,align 8
%du=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dv=bitcast i8*%dr to i8**
store i8*%du,i8**%dv,align 8
%dw=getelementptr inbounds i8,i8*%dr,i64 8
%dx=bitcast i8*%dw to i8**
store i8*null,i8**%dx,align 8
%dy=getelementptr inbounds i8,i8*%dr,i64 16
%dz=bitcast i8*%dy to i32*
store i32 3,i32*%dz,align 4
%dA=call i8*@sml_alloc(i32 inreg 20)#0
%dB=getelementptr inbounds i8,i8*%dA,i64 -4
%dC=bitcast i8*%dB to i32*
store i32 1342177296,i32*%dC,align 4
store i8*%dA,i8**%d,align 8
%dD=getelementptr inbounds i8,i8*%dA,i64 4
%dE=bitcast i8*%dD to i32*
store i32 0,i32*%dE,align 1
%dF=bitcast i8*%dA to i32*
store i32 2,i32*%dF,align 4
%dG=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%dH=getelementptr inbounds i8,i8*%dA,i64 8
%dI=bitcast i8*%dH to i8**
store i8*%dG,i8**%dI,align 8
%dJ=getelementptr inbounds i8,i8*%dA,i64 16
%dK=bitcast i8*%dJ to i32*
store i32 2,i32*%dK,align 4
%dL=call i8*@sml_alloc(i32 inreg 20)#0
%dM=getelementptr inbounds i8,i8*%dL,i64 -4
%dN=bitcast i8*%dM to i32*
store i32 1342177296,i32*%dN,align 4
store i8*%dL,i8**%f,align 8
%dO=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%dP=bitcast i8*%dL to i8**
store i8*%dO,i8**%dP,align 8
%dQ=getelementptr inbounds i8,i8*%dL,i64 8
%dR=bitcast i8*%dQ to i8**
store i8*null,i8**%dR,align 8
%dS=getelementptr inbounds i8,i8*%dL,i64 16
%dT=bitcast i8*%dS to i32*
store i32 3,i32*%dT,align 4
%dU=load i8*,i8**%e,align 8
%dV=getelementptr inbounds i8,i8*%dU,i64 16
%dW=bitcast i8*%dV to i8*(i8*,i8*)**
%dX=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%dW,align 8
store i8*null,i8**%e,align 8
%dY=bitcast i8*%dU to i8**
%dZ=load i8*,i8**%dY,align 8
%d0=load i8*,i8**%c,align 8
%d1=call fastcc i8*%dX(i8*inreg%dZ,i8*inreg%d0)
store i8*%d1,i8**%d,align 8
%d2=call i8*@sml_alloc(i32 inreg 28)#0
%d3=getelementptr inbounds i8,i8*%d2,i64 -4
%d4=bitcast i8*%d3 to i32*
store i32 1342177304,i32*%d4,align 4
store i8*%d2,i8**%e,align 8
%d5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%d6=bitcast i8*%d2 to i8**
store i8*%d5,i8**%d6,align 8
%d7=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%d8=getelementptr inbounds i8,i8*%d2,i64 8
%d9=bitcast i8*%d8 to i8**
store i8*%d7,i8**%d9,align 8
%ea=load i8*,i8**%c,align 8
%eb=getelementptr inbounds i8,i8*%d2,i64 16
%ec=bitcast i8*%eb to i8**
store i8*%ea,i8**%ec,align 8
%ed=getelementptr inbounds i8,i8*%d2,i64 24
%ee=bitcast i8*%ed to i32*
store i32 7,i32*%ee,align 4
%ef=call i8*@sml_alloc(i32 inreg 20)#0
%eg=getelementptr inbounds i8,i8*%ef,i64 -4
%eh=bitcast i8*%eg to i32*
store i32 1342177296,i32*%eh,align 4
store i8*%ef,i8**%f,align 8
%ei=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ej=bitcast i8*%ef to i8**
store i8*%ei,i8**%ej,align 8
%ek=getelementptr inbounds i8,i8*%ef,i64 8
%el=bitcast i8*%ek to i8**
store i8*null,i8**%el,align 8
%em=getelementptr inbounds i8,i8*%ef,i64 16
%en=bitcast i8*%em to i32*
store i32 3,i32*%en,align 4
%eo=call i8*@sml_alloc(i32 inreg 20)#0
%ep=getelementptr inbounds i8,i8*%eo,i64 -4
%eq=bitcast i8*%ep to i32*
store i32 1342177296,i32*%eq,align 4
store i8*%eo,i8**%d,align 8
%er=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%es=bitcast i8*%eo to i8**
store i8*%er,i8**%es,align 8
%et=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%eu=getelementptr inbounds i8,i8*%eo,i64 8
%ev=bitcast i8*%eu to i8**
store i8*%et,i8**%ev,align 8
%ew=getelementptr inbounds i8,i8*%eo,i64 16
%ex=bitcast i8*%ew to i32*
store i32 3,i32*%ex,align 4
%ey=call i8*@sml_alloc(i32 inreg 20)#0
%ez=bitcast i8*%ey to i32*
%eA=getelementptr inbounds i8,i8*%ey,i64 -4
%eB=bitcast i8*%eA to i32*
store i32 1342177296,i32*%eB,align 4
%eC=getelementptr inbounds i8,i8*%ey,i64 4
%eD=bitcast i8*%eC to i32*
store i32 0,i32*%eD,align 1
store i32 10,i32*%ez,align 4
%eE=load i8*,i8**%d,align 8
%eF=getelementptr inbounds i8,i8*%ey,i64 8
%eG=bitcast i8*%eF to i8**
store i8*%eE,i8**%eG,align 8
%eH=getelementptr inbounds i8,i8*%ey,i64 16
%eI=bitcast i8*%eH to i32*
store i32 2,i32*%eI,align 4
ret i8*%ey
eJ:
%eK=load i8*,i8**%f,align 8
%eL=getelementptr inbounds i8,i8*%eK,i64 24
%eM=bitcast i8*%eL to i8**
%eN=load i8*,i8**%eM,align 8
store i8*%eN,i8**%e,align 8
%eO=getelementptr inbounds i8,i8*%eK,i64 16
%eP=bitcast i8*%eO to i8**
%eQ=load i8*,i8**%eP,align 8
store i8*%eQ,i8**%f,align 8
%eR=getelementptr inbounds i8,i8*%t,i64 8
%eS=bitcast i8*%eR to i8**
%eT=load i8*,i8**%eS,align 8
store i8*%eT,i8**%d,align 8
%eU=call i8*@sml_alloc(i32 inreg 20)#0
%eV=getelementptr inbounds i8,i8*%eU,i64 -4
%eW=bitcast i8*%eV to i32*
store i32 1342177296,i32*%eW,align 4
%eX=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%eY=bitcast i8*%eU to i8**
store i8*%eX,i8**%eY,align 8
%eZ=load i8*,i8**%c,align 8
%e0=getelementptr inbounds i8,i8*%eU,i64 8
%e1=bitcast i8*%e0 to i8**
store i8*%eZ,i8**%e1,align 8
%e2=getelementptr inbounds i8,i8*%eU,i64 16
%e3=bitcast i8*%e2 to i32*
store i32 3,i32*%e3,align 4
%e4=load i8*,i8**%e,align 8
%e5=load i8*,i8**%f,align 8
store i8*null,i8**%e,align 8
store i8*null,i8**%f,align 8
%e6=call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2403(i8*inreg%e4,i8*inreg%e5,i8*inreg%eU)
%e7=getelementptr inbounds i8,i8*%e6,i64 8
%e8=bitcast i8*%e7 to i8**
%e9=load i8*,i8**%e8,align 8
%fa=bitcast i8*%e9 to i8**
%fb=load i8*,i8**%fa,align 8
%fc=getelementptr inbounds i8,i8*%e9,i64 8
%fd=bitcast i8*%fc to i8**
%fe=load i8*,i8**%fd,align 8
store i8*%fe,i8**%d,align 8
%ff=call fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2379(i8*inreg%fb)
%fg=getelementptr inbounds i8,i8*%ff,i64 16
%fh=bitcast i8*%fg to i8*(i8*,i8*)**
%fi=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fh,align 8
%fj=bitcast i8*%ff to i8**
%fk=load i8*,i8**%fj,align 8
store i8*%fk,i8**%e,align 8
%fl=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%fm=call fastcc i8*@_SMLLLN12ElaborateSQL10queryToExpE_2372(i8*inreg%fl)
%fn=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fo=call fastcc i8*%fi(i8*inreg%fn,i8*inreg%fm)
%fp=getelementptr inbounds i8,i8*%fo,i64 16
%fq=bitcast i8*%fp to i8*(i8*,i8*)**
%fr=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fq,align 8
%fs=bitcast i8*%fo to i8**
%ft=load i8*,i8**%fs,align 8
%fu=load i8*,i8**%c,align 8
%fv=tail call fastcc i8*%fr(i8*inreg%ft,i8*inreg%fu)
ret i8*%fv
fw:
%fx=getelementptr inbounds i8,i8*%t,i64 8
%fy=bitcast i8*%fx to i8**
%fz=load i8*,i8**%fy,align 8
%fA=bitcast i8*%fz to i8**
%fB=load i8*,i8**%fA,align 8
%fC=getelementptr inbounds i8,i8*%fz,i64 8
%fD=bitcast i8*%fC to i8**
%fE=load i8*,i8**%fD,align 8
store i8*%fE,i8**%d,align 8
%fF=icmp eq i8*%fB,null
br i1%fF,label%fG,label%fH
fG:
store i8*null,i8**%f,align 8
br label%gc
fH:
%fI=bitcast i8**%f to i8***
%fJ=load i8**,i8***%fI,align 8
%fK=load i8*,i8**%fJ,align 8
%fL=getelementptr inbounds i8,i8*%fK,i64 16
%fM=bitcast i8*%fL to i8*(i8*,i8*)**
%fN=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%fM,align 8
store i8*null,i8**%f,align 8
%fO=bitcast i8**%fJ to i8***
%fP=load i8**,i8***%fO,align 8
%fQ=load i8*,i8**%fP,align 8
%fR=bitcast i8*%fB to i8**
%fS=load i8*,i8**%fR,align 8
%fT=call fastcc i8*%fN(i8*inreg%fQ,i8*inreg%fS)
store i8*%fT,i8**%e,align 8
%fU=call i8*@sml_alloc(i32 inreg 12)#0
%fV=getelementptr inbounds i8,i8*%fU,i64 -4
%fW=bitcast i8*%fV to i32*
store i32 1342177288,i32*%fW,align 4
store i8*%fU,i8**%f,align 8
%fX=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%fY=bitcast i8*%fU to i8**
store i8*%fX,i8**%fY,align 8
%fZ=getelementptr inbounds i8,i8*%fU,i64 8
%f0=bitcast i8*%fZ to i32*
store i32 1,i32*%f0,align 4
%f1=call i8*@sml_alloc(i32 inreg 28)#0
%f2=getelementptr inbounds i8,i8*%f1,i64 -4
%f3=bitcast i8*%f2 to i32*
store i32 1342177304,i32*%f3,align 4
%f4=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%f5=bitcast i8*%f1 to i8**
store i8*%f4,i8**%f5,align 8
%f6=getelementptr inbounds i8,i8*%f1,i64 8
%f7=bitcast i8*%f6 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2613 to void(...)*),void(...)**%f7,align 8
%f8=getelementptr inbounds i8,i8*%f1,i64 16
%f9=bitcast i8*%f8 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2613 to void(...)*),void(...)**%f9,align 8
%ga=getelementptr inbounds i8,i8*%f1,i64 24
%gb=bitcast i8*%ga to i32*
store i32 -2147483647,i32*%gb,align 4
br label%gc
gc:
%gd=phi i8*[%f1,%fH],[bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@jM,i64 0,i32 2)to i8*),%fG]
store i8*%gd,i8**%e,align 8
%ge=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bV,i64 0,i32 2)to i8*))
%gf=getelementptr inbounds i8,i8*%ge,i64 16
%gg=bitcast i8*%gf to i8*(i8*,i8*)**
%gh=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%gg,align 8
%gi=bitcast i8*%ge to i8**
%gj=load i8*,i8**%gi,align 8
%gk=load i8*,i8**%c,align 8
%gl=call fastcc i8*%gh(i8*inreg%gj,i8*inreg%gk)
store i8*%gl,i8**%f,align 8
%gm=call i8*@sml_alloc(i32 inreg 20)#0
%gn=getelementptr inbounds i8,i8*%gm,i64 -4
%go=bitcast i8*%gn to i32*
store i32 1342177296,i32*%go,align 4
store i8*%gm,i8**%g,align 8
%gp=getelementptr inbounds i8,i8*%gm,i64 4
%gq=bitcast i8*%gp to i32*
store i32 0,i32*%gq,align 1
%gr=bitcast i8*%gm to i32*
store i32 25,i32*%gr,align 4
%gs=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gt=getelementptr inbounds i8,i8*%gm,i64 8
%gu=bitcast i8*%gt to i8**
store i8*%gs,i8**%gu,align 8
%gv=getelementptr inbounds i8,i8*%gm,i64 16
%gw=bitcast i8*%gv to i32*
store i32 2,i32*%gw,align 4
%gx=call i8*@sml_alloc(i32 inreg 28)#0
%gy=getelementptr inbounds i8,i8*%gx,i64 -4
%gz=bitcast i8*%gy to i32*
store i32 1342177304,i32*%gz,align 4
store i8*%gx,i8**%f,align 8
%gA=load i8*,i8**%c,align 8
%gB=bitcast i8*%gx to i8**
store i8*%gA,i8**%gB,align 8
%gC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gD=getelementptr inbounds i8,i8*%gx,i64 8
%gE=bitcast i8*%gD to i8**
store i8*%gC,i8**%gE,align 8
%gF=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%gG=getelementptr inbounds i8,i8*%gx,i64 16
%gH=bitcast i8*%gG to i8**
store i8*%gF,i8**%gH,align 8
%gI=getelementptr inbounds i8,i8*%gx,i64 24
%gJ=bitcast i8*%gI to i32*
store i32 7,i32*%gJ,align 4
%gK=call i8*@sml_alloc(i32 inreg 20)#0
%gL=getelementptr inbounds i8,i8*%gK,i64 -4
%gM=bitcast i8*%gL to i32*
store i32 1342177296,i32*%gM,align 4
store i8*%gK,i8**%d,align 8
%gN=getelementptr inbounds i8,i8*%gK,i64 4
%gO=bitcast i8*%gN to i32*
store i32 0,i32*%gO,align 1
%gP=bitcast i8*%gK to i32*
store i32 23,i32*%gP,align 4
%gQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%gR=getelementptr inbounds i8,i8*%gK,i64 8
%gS=bitcast i8*%gR to i8**
store i8*%gQ,i8**%gS,align 8
%gT=getelementptr inbounds i8,i8*%gK,i64 16
%gU=bitcast i8*%gT to i32*
store i32 2,i32*%gU,align 4
%gV=call i8*@sml_alloc(i32 inreg 12)#0
%gW=getelementptr inbounds i8,i8*%gV,i64 -4
%gX=bitcast i8*%gW to i32*
store i32 1342177288,i32*%gX,align 4
store i8*%gV,i8**%f,align 8
%gY=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%gZ=bitcast i8*%gV to i8**
store i8*%gY,i8**%gZ,align 8
%g0=getelementptr inbounds i8,i8*%gV,i64 8
%g1=bitcast i8*%g0 to i32*
store i32 1,i32*%g1,align 4
%g2=call i8*@sml_alloc(i32 inreg 28)#0
%g3=getelementptr inbounds i8,i8*%g2,i64 -4
%g4=bitcast i8*%g3 to i32*
store i32 1342177304,i32*%g4,align 4
store i8*%g2,i8**%d,align 8
%g5=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%g6=bitcast i8*%g2 to i8**
store i8*%g5,i8**%g6,align 8
%g7=getelementptr inbounds i8,i8*%g2,i64 8
%g8=bitcast i8*%g7 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2618 to void(...)*),void(...)**%g8,align 8
%g9=getelementptr inbounds i8,i8*%g2,i64 16
%ha=bitcast i8*%g9 to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2618 to void(...)*),void(...)**%ha,align 8
%hb=getelementptr inbounds i8,i8*%g2,i64 24
%hc=bitcast i8*%hb to i32*
store i32 -2147483647,i32*%hc,align 4
%hd=call i8*@sml_alloc(i32 inreg 20)#0
%he=getelementptr inbounds i8,i8*%hd,i64 -4
%hf=bitcast i8*%he to i32*
store i32 1342177296,i32*%hf,align 4
store i8*%hd,i8**%f,align 8
%hg=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hh=bitcast i8*%hd to i8**
store i8*%hg,i8**%hh,align 8
%hi=getelementptr inbounds i8,i8*%hd,i64 8
%hj=bitcast i8*%hi to i8**
store i8*null,i8**%hj,align 8
%hk=getelementptr inbounds i8,i8*%hd,i64 16
%hl=bitcast i8*%hk to i32*
store i32 3,i32*%hl,align 4
%hm=call i8*@sml_alloc(i32 inreg 20)#0
%hn=getelementptr inbounds i8,i8*%hm,i64 -4
%ho=bitcast i8*%hn to i32*
store i32 1342177296,i32*%ho,align 4
store i8*%hm,i8**%d,align 8
%hp=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hq=bitcast i8*%hm to i8**
store i8*%hp,i8**%hq,align 8
%hr=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%hs=getelementptr inbounds i8,i8*%hm,i64 8
%ht=bitcast i8*%hs to i8**
store i8*%hr,i8**%ht,align 8
%hu=getelementptr inbounds i8,i8*%hm,i64 16
%hv=bitcast i8*%hu to i32*
store i32 3,i32*%hv,align 4
%hw=call fastcc i8*@_SMLFN11RecordLabel9tupleListE(i32 inreg 1,i32 inreg 8)
%hx=getelementptr inbounds i8,i8*%hw,i64 16
%hy=bitcast i8*%hx to i8*(i8*,i8*)**
%hz=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hy,align 8
%hA=bitcast i8*%hw to i8**
%hB=load i8*,i8**%hA,align 8
%hC=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%hD=call fastcc i8*%hz(i8*inreg%hB,i8*inreg%hC)
store i8*%hD,i8**%d,align 8
%hE=call fastcc i8*@_SMLFN6Symbol12mkLongsymbolE(i8*inreg bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,i8*,i32}>,<{[4x i8],i32,i8*,i8*,i32}>*@bM,i64 0,i32 2)to i8*))
%hF=getelementptr inbounds i8,i8*%hE,i64 16
%hG=bitcast i8*%hF to i8*(i8*,i8*)**
%hH=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hG,align 8
%hI=bitcast i8*%hE to i8**
%hJ=load i8*,i8**%hI,align 8
%hK=load i8*,i8**%c,align 8
%hL=call fastcc i8*%hH(i8*inreg%hJ,i8*inreg%hK)
store i8*%hL,i8**%e,align 8
%hM=call i8*@sml_alloc(i32 inreg 20)#0
%hN=getelementptr inbounds i8,i8*%hM,i64 -4
%hO=bitcast i8*%hN to i32*
store i32 1342177296,i32*%hO,align 4
store i8*%hM,i8**%f,align 8
%hP=getelementptr inbounds i8,i8*%hM,i64 4
%hQ=bitcast i8*%hP to i32*
store i32 0,i32*%hQ,align 1
%hR=bitcast i8*%hM to i32*
store i32 25,i32*%hR,align 4
%hS=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%hT=getelementptr inbounds i8,i8*%hM,i64 8
%hU=bitcast i8*%hT to i8**
store i8*%hS,i8**%hU,align 8
%hV=getelementptr inbounds i8,i8*%hM,i64 16
%hW=bitcast i8*%hV to i32*
store i32 2,i32*%hW,align 4
%hX=call fastcc i8*@_SMLFN4List3mapE(i32 inreg 1,i32 inreg 8,i32 inreg 1,i32 inreg 8)
%hY=getelementptr inbounds i8,i8*%hX,i64 16
%hZ=bitcast i8*%hY to i8*(i8*,i8*)**
%h0=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%hZ,align 8
%h1=bitcast i8*%hX to i8**
%h2=load i8*,i8**%h1,align 8
store i8*%h2,i8**%e,align 8
%h3=call i8*@sml_alloc(i32 inreg 12)#0
%h4=getelementptr inbounds i8,i8*%h3,i64 -4
%h5=bitcast i8*%h4 to i32*
store i32 1342177288,i32*%h5,align 4
store i8*%h3,i8**%g,align 8
%h6=load i8*,i8**%c,align 8
%h7=bitcast i8*%h3 to i8**
store i8*%h6,i8**%h7,align 8
%h8=getelementptr inbounds i8,i8*%h3,i64 8
%h9=bitcast i8*%h8 to i32*
store i32 1,i32*%h9,align 4
%ia=call i8*@sml_alloc(i32 inreg 28)#0
%ib=getelementptr inbounds i8,i8*%ia,i64 -4
%ic=bitcast i8*%ib to i32*
store i32 1342177304,i32*%ic,align 4
%id=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%ie=bitcast i8*%ia to i8**
store i8*%id,i8**%ie,align 8
%if=getelementptr inbounds i8,i8*%ia,i64 8
%ig=bitcast i8*%if to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2619 to void(...)*),void(...)**%ig,align 8
%ih=getelementptr inbounds i8,i8*%ia,i64 16
%ii=bitcast i8*%ih to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2619 to void(...)*),void(...)**%ii,align 8
%ij=getelementptr inbounds i8,i8*%ia,i64 24
%ik=bitcast i8*%ij to i32*
store i32 -2147483647,i32*%ik,align 4
%il=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%im=call fastcc i8*%h0(i8*inreg%il,i8*inreg%ia)
%in=getelementptr inbounds i8,i8*%im,i64 16
%io=bitcast i8*%in to i8*(i8*,i8*)**
%ip=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%io,align 8
%iq=bitcast i8*%im to i8**
%ir=load i8*,i8**%iq,align 8
%is=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%it=call fastcc i8*%ip(i8*inreg%ir,i8*inreg%is)
store i8*%it,i8**%d,align 8
%iu=call i8*@sml_alloc(i32 inreg 20)#0
%iv=getelementptr inbounds i8,i8*%iu,i64 -4
%iw=bitcast i8*%iv to i32*
store i32 1342177296,i32*%iw,align 4
store i8*%iu,i8**%e,align 8
%ix=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iy=bitcast i8*%iu to i8**
store i8*%ix,i8**%iy,align 8
%iz=load i8*,i8**%c,align 8
%iA=getelementptr inbounds i8,i8*%iu,i64 8
%iB=bitcast i8*%iA to i8**
store i8*%iz,i8**%iB,align 8
%iC=getelementptr inbounds i8,i8*%iu,i64 16
%iD=bitcast i8*%iC to i32*
store i32 3,i32*%iD,align 4
%iE=call i8*@sml_alloc(i32 inreg 20)#0
%iF=getelementptr inbounds i8,i8*%iE,i64 -4
%iG=bitcast i8*%iF to i32*
store i32 1342177296,i32*%iG,align 4
store i8*%iE,i8**%d,align 8
%iH=getelementptr inbounds i8,i8*%iE,i64 4
%iI=bitcast i8*%iH to i32*
store i32 0,i32*%iI,align 1
%iJ=bitcast i8*%iE to i32*
store i32 15,i32*%iJ,align 4
%iK=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%iL=getelementptr inbounds i8,i8*%iE,i64 8
%iM=bitcast i8*%iL to i8**
store i8*%iK,i8**%iM,align 8
%iN=getelementptr inbounds i8,i8*%iE,i64 16
%iO=bitcast i8*%iN to i32*
store i32 2,i32*%iO,align 4
%iP=call i8*@sml_alloc(i32 inreg 20)#0
%iQ=getelementptr inbounds i8,i8*%iP,i64 -4
%iR=bitcast i8*%iQ to i32*
store i32 1342177296,i32*%iR,align 4
store i8*%iP,i8**%e,align 8
%iS=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%iT=bitcast i8*%iP to i8**
store i8*%iS,i8**%iT,align 8
%iU=getelementptr inbounds i8,i8*%iP,i64 8
%iV=bitcast i8*%iU to i8**
store i8*null,i8**%iV,align 8
%iW=getelementptr inbounds i8,i8*%iP,i64 16
%iX=bitcast i8*%iW to i32*
store i32 3,i32*%iX,align 4
%iY=call i8*@sml_alloc(i32 inreg 28)#0
%iZ=getelementptr inbounds i8,i8*%iY,i64 -4
%i0=bitcast i8*%iZ to i32*
store i32 1342177304,i32*%i0,align 4
store i8*%iY,i8**%d,align 8
%i1=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%i2=bitcast i8*%iY to i8**
store i8*%i1,i8**%i2,align 8
%i3=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%i4=getelementptr inbounds i8,i8*%iY,i64 8
%i5=bitcast i8*%i4 to i8**
store i8*%i3,i8**%i5,align 8
%i6=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%i7=getelementptr inbounds i8,i8*%iY,i64 16
%i8=bitcast i8*%i7 to i8**
store i8*%i6,i8**%i8,align 8
%i9=getelementptr inbounds i8,i8*%iY,i64 24
%ja=bitcast i8*%i9 to i32*
store i32 7,i32*%ja,align 4
%jb=call i8*@sml_alloc(i32 inreg 20)#0
%jc=getelementptr inbounds i8,i8*%jb,i64 -4
%jd=bitcast i8*%jc to i32*
store i32 1342177296,i32*%jd,align 4
%je=bitcast i8*%jb to i64*
store i64 0,i64*%je,align 4
%jf=load i8*,i8**%d,align 8
%jg=getelementptr inbounds i8,i8*%jb,i64 8
%jh=bitcast i8*%jg to i8**
store i8*%jf,i8**%jh,align 8
%ji=getelementptr inbounds i8,i8*%jb,i64 16
%jj=bitcast i8*%ji to i32*
store i32 2,i32*%jj,align 4
ret i8*%jb
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2637(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
q:
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
%h=alloca i8*,align 8
%i=alloca i8*,align 8
%j=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
call void@llvm.gcroot(i8**%h,i8*null)#0
call void@llvm.gcroot(i8**%i,i8*null)#0
call void@llvm.gcroot(i8**%j,i8*null)#0
store i8*%a,i8**%g,align 8
store i8*%b,i8**%c,align 8
%k=load atomic i32,i32*@sml_check_flag unordered,align 4
%l=icmp eq i32%k,0
br i1%l,label%o,label%m
m:
call void@sml_check(i32 inreg%k)
%n=load i8*,i8**%c,align 8
br label%o
o:
%p=phi i8*[%n,%m],[%b,%q]
%r=bitcast i8*%p to i8**
%s=load i8*,i8**%r,align 8
store i8*%s,i8**%c,align 8
%t=getelementptr inbounds i8,i8*%p,i64 8
%u=bitcast i8*%t to i8**
%v=load i8*,i8**%u,align 8
store i8*%v,i8**%d,align 8
%w=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%x=getelementptr inbounds i8,i8*%w,i64 16
%y=bitcast i8*%x to i8*(i8*,i8*)**
%z=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%y,align 8
%A=bitcast i8*%w to i8**
%B=load i8*,i8**%A,align 8
store i8*%B,i8**%j,align 8
%C=load i8*,i8**%g,align 8
%D=getelementptr inbounds i8,i8*%C,i64 16
%E=bitcast i8*%D to i8**
%F=load i8*,i8**%E,align 8
store i8*%F,i8**%e,align 8
%G=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[5x i8]}>,<{[4x i8],i32,[5x i8]}>*@jE,i64 0,i32 2,i64 0))
%H=getelementptr inbounds i8,i8*%G,i64 16
%I=bitcast i8*%H to i8*(i8*,i8*)**
%J=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%I,align 8
%K=bitcast i8*%G to i8**
%L=load i8*,i8**%K,align 8
%M=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%N=call fastcc i8*%J(i8*inreg%L,i8*inreg%M)
store i8*%N,i8**%f,align 8
%O=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%O,i8**%h,align 8
%P=call i8*@sml_alloc(i32 inreg 20)#0
%Q=getelementptr inbounds i8,i8*%P,i64 -4
%R=bitcast i8*%Q to i32*
store i32 1342177296,i32*%R,align 4
store i8*%P,i8**%i,align 8
%S=bitcast i8*%P to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jG,i64 0,i32 2)to i8*),i8**%S,align 8
%T=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%U=getelementptr inbounds i8,i8*%P,i64 8
%V=bitcast i8*%U to i8**
store i8*%T,i8**%V,align 8
%W=getelementptr inbounds i8,i8*%P,i64 16
%X=bitcast i8*%W to i32*
store i32 3,i32*%X,align 4
%Y=call i8*@sml_alloc(i32 inreg 28)#0
%Z=getelementptr inbounds i8,i8*%Y,i64 -4
%aa=bitcast i8*%Z to i32*
store i32 1342177304,i32*%aa,align 4
%ab=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%ac=bitcast i8*%Y to i8**
store i8*%ab,i8**%ac,align 8
%ad=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%ae=getelementptr inbounds i8,i8*%Y,i64 8
%af=bitcast i8*%ae to i8**
store i8*%ad,i8**%af,align 8
%ag=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ah=getelementptr inbounds i8,i8*%Y,i64 16
%ai=bitcast i8*%ah to i8**
store i8*%ag,i8**%ai,align 8
%aj=getelementptr inbounds i8,i8*%Y,i64 24
%ak=bitcast i8*%aj to i32*
store i32 7,i32*%ak,align 4
%al=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%am=call fastcc i8*%z(i8*inreg%al,i8*inreg%Y)
store i8*%am,i8**%e,align 8
%an=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%ao=getelementptr inbounds i8,i8*%an,i64 16
%ap=bitcast i8*%ao to i8*(i8*,i8*)**
%aq=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%ap,align 8
%ar=bitcast i8*%an to i8**
%as=load i8*,i8**%ar,align 8
store i8*%as,i8**%j,align 8
%at=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[3x i8]}>,<{[4x i8],i32,[3x i8]}>*@jF,i64 0,i32 2,i64 0))
%au=getelementptr inbounds i8,i8*%at,i64 16
%av=bitcast i8*%au to i8*(i8*,i8*)**
%aw=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%av,align 8
%ax=bitcast i8*%at to i8**
%ay=load i8*,i8**%ax,align 8
%az=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%aA=call fastcc i8*%aw(i8*inreg%ay,i8*inreg%az)
store i8*%aA,i8**%f,align 8
%aB=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%aB,i8**%h,align 8
%aC=call i8*@sml_alloc(i32 inreg 20)#0
%aD=getelementptr inbounds i8,i8*%aC,i64 -4
%aE=bitcast i8*%aD to i32*
store i32 1342177296,i32*%aE,align 4
store i8*%aC,i8**%i,align 8
%aF=bitcast i8*%aC to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jG,i64 0,i32 2)to i8*),i8**%aF,align 8
%aG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%aH=getelementptr inbounds i8,i8*%aC,i64 8
%aI=bitcast i8*%aH to i8**
store i8*%aG,i8**%aI,align 8
%aJ=getelementptr inbounds i8,i8*%aC,i64 16
%aK=bitcast i8*%aJ to i32*
store i32 3,i32*%aK,align 4
%aL=call i8*@sml_alloc(i32 inreg 28)#0
%aM=getelementptr inbounds i8,i8*%aL,i64 -4
%aN=bitcast i8*%aM to i32*
store i32 1342177304,i32*%aN,align 4
%aO=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%aP=bitcast i8*%aL to i8**
store i8*%aO,i8**%aP,align 8
%aQ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%aR=getelementptr inbounds i8,i8*%aL,i64 8
%aS=bitcast i8*%aR to i8**
store i8*%aQ,i8**%aS,align 8
%aT=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%aU=getelementptr inbounds i8,i8*%aL,i64 16
%aV=bitcast i8*%aU to i8**
store i8*%aT,i8**%aV,align 8
%aW=getelementptr inbounds i8,i8*%aL,i64 24
%aX=bitcast i8*%aW to i32*
store i32 7,i32*%aX,align 4
%aY=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%aZ=call fastcc i8*%aq(i8*inreg%aY,i8*inreg%aL)
store i8*%aZ,i8**%e,align 8
%a0=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%a1=getelementptr inbounds i8,i8*%a0,i64 16
%a2=bitcast i8*%a1 to i8*(i8*,i8*)**
%a3=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a2,align 8
%a4=bitcast i8*%a0 to i8**
%a5=load i8*,i8**%a4,align 8
store i8*%a5,i8**%j,align 8
%a6=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[2x i8]}>,<{[4x i8],i32,[2x i8]}>*@jH,i64 0,i32 2,i64 0))
%a7=getelementptr inbounds i8,i8*%a6,i64 16
%a8=bitcast i8*%a7 to i8*(i8*,i8*)**
%a9=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%a8,align 8
%ba=bitcast i8*%a6 to i8**
%bb=load i8*,i8**%ba,align 8
%bc=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%bd=call fastcc i8*%a9(i8*inreg%bb,i8*inreg%bc)
store i8*%bd,i8**%f,align 8
%be=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%be,i8**%h,align 8
%bf=call i8*@sml_alloc(i32 inreg 20)#0
%bg=getelementptr inbounds i8,i8*%bf,i64 -4
%bh=bitcast i8*%bg to i32*
store i32 1342177296,i32*%bh,align 4
store i8*%bf,i8**%i,align 8
%bi=bitcast i8*%bf to i8**
store i8*bitcast(i32*getelementptr inbounds(<{[4x i8],i32,i32,i32,i32}>,<{[4x i8],i32,i32,i32,i32}>*@jI,i64 0,i32 2)to i8*),i8**%bi,align 8
%bj=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bk=getelementptr inbounds i8,i8*%bf,i64 8
%bl=bitcast i8*%bk to i8**
store i8*%bj,i8**%bl,align 8
%bm=getelementptr inbounds i8,i8*%bf,i64 16
%bn=bitcast i8*%bm to i32*
store i32 3,i32*%bn,align 4
%bo=call i8*@sml_alloc(i32 inreg 28)#0
%bp=getelementptr inbounds i8,i8*%bo,i64 -4
%bq=bitcast i8*%bp to i32*
store i32 1342177304,i32*%bq,align 4
%br=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%bs=bitcast i8*%bo to i8**
store i8*%br,i8**%bs,align 8
%bt=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%bu=getelementptr inbounds i8,i8*%bo,i64 8
%bv=bitcast i8*%bu to i8**
store i8*%bt,i8**%bv,align 8
%bw=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%bx=getelementptr inbounds i8,i8*%bo,i64 16
%by=bitcast i8*%bx to i8**
store i8*%bw,i8**%by,align 8
%bz=getelementptr inbounds i8,i8*%bo,i64 24
%bA=bitcast i8*%bz to i32*
store i32 7,i32*%bA,align 4
%bB=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%bC=call fastcc i8*%a3(i8*inreg%bB,i8*inreg%bo)
store i8*%bC,i8**%e,align 8
%bD=call fastcc i8*@_SMLFN9SymbolEnv6insertE(i32 inreg 1,i32 inreg 8)
%bE=getelementptr inbounds i8,i8*%bD,i64 16
%bF=bitcast i8*%bE to i8*(i8*,i8*)**
%bG=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bF,align 8
%bH=bitcast i8*%bD to i8**
%bI=load i8*,i8**%bH,align 8
store i8*%bI,i8**%j,align 8
%bJ=call fastcc i8*@_SMLFN6Symbol8mkSymbolE(i8*inreg getelementptr inbounds(<{[4x i8],i32,[4x i8]}>,<{[4x i8],i32,[4x i8]}>*@jJ,i64 0,i32 2,i64 0))
%bK=getelementptr inbounds i8,i8*%bJ,i64 16
%bL=bitcast i8*%bK to i8*(i8*,i8*)**
%bM=load i8*(i8*,i8*)*,i8*(i8*,i8*)**%bL,align 8
%bN=bitcast i8*%bJ to i8**
%bO=load i8*,i8**%bN,align 8
%bP=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
%bQ=call fastcc i8*%bM(i8*inreg%bO,i8*inreg%bP)
store i8*%bQ,i8**%f,align 8
%bR=load i8*,i8**@_SMLZN3Loc5nolocE,align 8
store i8*%bR,i8**%h,align 8
%bS=call i8*@sml_alloc(i32 inreg 20)#0
%bT=getelementptr inbounds i8,i8*%bS,i64 -4
%bU=bitcast i8*%bT to i32*
store i32 1342177296,i32*%bU,align 4
store i8*%bS,i8**%i,align 8
%bV=bitcast i8*%bS to i8**
store i8*null,i8**%bV,align 8
%bW=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%bX=getelementptr inbounds i8,i8*%bS,i64 8
%bY=bitcast i8*%bX to i8**
store i8*%bW,i8**%bY,align 8
%bZ=getelementptr inbounds i8,i8*%bS,i64 16
%b0=bitcast i8*%bZ to i32*
store i32 3,i32*%b0,align 4
%b1=call i8*@sml_alloc(i32 inreg 28)#0
%b2=getelementptr inbounds i8,i8*%b1,i64 -4
%b3=bitcast i8*%b2 to i32*
store i32 1342177304,i32*%b3,align 4
%b4=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%b5=bitcast i8*%b1 to i8**
store i8*%b4,i8**%b5,align 8
%b6=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%b7=getelementptr inbounds i8,i8*%b1,i64 8
%b8=bitcast i8*%b7 to i8**
store i8*%b6,i8**%b8,align 8
%b9=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%ca=getelementptr inbounds i8,i8*%b1,i64 16
%cb=bitcast i8*%ca to i8**
store i8*%b9,i8**%cb,align 8
%cc=getelementptr inbounds i8,i8*%b1,i64 24
%cd=bitcast i8*%cc to i32*
store i32 7,i32*%cd,align 4
%ce=load i8*,i8**%j,align 8
store i8*null,i8**%j,align 8
%cf=call fastcc i8*%bG(i8*inreg%ce,i8*inreg%b1)
store i8*%cf,i8**%e,align 8
%cg=bitcast i8**%g to i8***
%ch=load i8**,i8***%cg,align 8
%ci=load i8*,i8**%ch,align 8
store i8*%ci,i8**%h,align 8
%cj=call i8*@sml_alloc(i32 inreg 28)#0
%ck=getelementptr inbounds i8,i8*%cj,i64 -4
%cl=bitcast i8*%ck to i32*
store i32 1342177304,i32*%cl,align 4
store i8*%cj,i8**%f,align 8
%cm=load i8*,i8**%h,align 8
%cn=bitcast i8*%cj to i8**
store i8*%cm,i8**%cn,align 8
%co=load i8*,i8**%e,align 8
%cp=getelementptr inbounds i8,i8*%cj,i64 8
%cq=bitcast i8*%cp to i8**
store i8*%co,i8**%cq,align 8
%cr=getelementptr inbounds i8,i8*%cj,i64 16
%cs=bitcast i8*%cr to i8**
store i8*null,i8**%cs,align 8
%ct=getelementptr inbounds i8,i8*%cj,i64 24
%cu=bitcast i8*%ct to i32*
store i32 7,i32*%cu,align 4
%cv=load i8**,i8***%cg,align 8
%cw=load i8*,i8**%cv,align 8
store i8*%cw,i8**%e,align 8
%cx=getelementptr inbounds i8*,i8**%cv,i64 1
%cy=load i8*,i8**%cx,align 8
store i8*%cy,i8**%h,align 8
%cz=getelementptr inbounds i8*,i8**%cv,i64 3
%cA=load i8*,i8**%cz,align 8
store i8*%cA,i8**%g,align 8
%cB=call i8*@sml_alloc(i32 inreg 36)#0
%cC=getelementptr inbounds i8,i8*%cB,i64 -4
%cD=bitcast i8*%cC to i32*
store i32 1342177312,i32*%cD,align 4
store i8*%cB,i8**%i,align 8
%cE=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%cF=bitcast i8*%cB to i8**
store i8*%cE,i8**%cF,align 8
%cG=load i8*,i8**%h,align 8
store i8*null,i8**%h,align 8
%cH=getelementptr inbounds i8,i8*%cB,i64 8
%cI=bitcast i8*%cH to i8**
store i8*%cG,i8**%cI,align 8
%cJ=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%cK=getelementptr inbounds i8,i8*%cB,i64 16
%cL=bitcast i8*%cK to i8**
store i8*%cJ,i8**%cL,align 8
%cM=load i8*,i8**%g,align 8
store i8*null,i8**%g,align 8
%cN=getelementptr inbounds i8,i8*%cB,i64 24
%cO=bitcast i8*%cN to i8**
store i8*%cM,i8**%cO,align 8
%cP=getelementptr inbounds i8,i8*%cB,i64 32
%cQ=bitcast i8*%cP to i32*
store i32 15,i32*%cQ,align 4
%cR=call i8*@sml_alloc(i32 inreg 28)#0
%cS=getelementptr inbounds i8,i8*%cR,i64 -4
%cT=bitcast i8*%cS to i32*
store i32 1342177304,i32*%cT,align 4
%cU=load i8*,i8**%i,align 8
store i8*null,i8**%i,align 8
%cV=bitcast i8*%cR to i8**
store i8*%cU,i8**%cV,align 8
%cW=getelementptr inbounds i8,i8*%cR,i64 8
%cX=bitcast i8*%cW to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2636 to void(...)*),void(...)**%cX,align 8
%cY=getelementptr inbounds i8,i8*%cR,i64 16
%cZ=bitcast i8*%cY to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2636 to void(...)*),void(...)**%cZ,align 8
%c0=getelementptr inbounds i8,i8*%cR,i64 24
%c1=bitcast i8*%c0 to i32*
store i32 -2147483647,i32*%c1,align 4
store i8*%cU,i8**%e,align 8
%c2=call i8*@sml_alloc(i32 inreg 20)#0
%c3=getelementptr inbounds i8,i8*%c2,i64 -4
%c4=bitcast i8*%c3 to i32*
store i32 1342177296,i32*%c4,align 4
%c5=load i8*,i8**%c,align 8
%c6=bitcast i8*%c2 to i8**
store i8*%c5,i8**%c6,align 8
%c7=load i8*,i8**%d,align 8
%c8=getelementptr inbounds i8,i8*%c2,i64 8
%c9=bitcast i8*%c8 to i8**
store i8*%c7,i8**%c9,align 8
%da=getelementptr inbounds i8,i8*%c2,i64 16
%db=bitcast i8*%da to i32*
store i32 3,i32*%db,align 4
%dc=load i8*,i8**%e,align 8
%dd=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2636(i8*inreg%dc,i8*inreg%c2)
ret i8*%dd
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2638(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
%g=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
call void@llvm.gcroot(i8**%g,i8*null)#0
store i8*%b,i8**%c,align 8
%h=bitcast i8*%a to i8**
%i=load i8*,i8**%h,align 8
store i8*%i,i8**%d,align 8
%j=getelementptr inbounds i8,i8*%a,i64 8
%k=bitcast i8*%j to i8**
%l=load i8*,i8**%k,align 8
store i8*%l,i8**%e,align 8
%m=getelementptr inbounds i8,i8*%a,i64 16
%n=bitcast i8*%m to i8**
%o=load i8*,i8**%n,align 8
store i8*%o,i8**%f,align 8
%p=call i8*@sml_alloc(i32 inreg 36)#0
%q=getelementptr inbounds i8,i8*%p,i64 -4
%r=bitcast i8*%q to i32*
store i32 1342177312,i32*%r,align 4
store i8*%p,i8**%g,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=bitcast i8*%p to i8**
store i8*%s,i8**%t,align 8
%u=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%v=getelementptr inbounds i8,i8*%p,i64 8
%w=bitcast i8*%v to i8**
store i8*%u,i8**%w,align 8
%x=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%y=getelementptr inbounds i8,i8*%p,i64 16
%z=bitcast i8*%y to i8**
store i8*%x,i8**%z,align 8
%A=load i8*,i8**%f,align 8
store i8*null,i8**%f,align 8
%B=getelementptr inbounds i8,i8*%p,i64 24
%C=bitcast i8*%B to i8**
store i8*%A,i8**%C,align 8
%D=getelementptr inbounds i8,i8*%p,i64 32
%E=bitcast i8*%D to i32*
store i32 15,i32*%E,align 4
%F=call i8*@sml_alloc(i32 inreg 28)#0
%G=getelementptr inbounds i8,i8*%F,i64 -4
%H=bitcast i8*%G to i32*
store i32 1342177304,i32*%H,align 4
%I=load i8*,i8**%g,align 8
%J=bitcast i8*%F to i8**
store i8*%I,i8**%J,align 8
%K=getelementptr inbounds i8,i8*%F,i64 8
%L=bitcast i8*%K to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2637 to void(...)*),void(...)**%L,align 8
%M=getelementptr inbounds i8,i8*%F,i64 16
%N=bitcast i8*%M to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2637 to void(...)*),void(...)**%N,align 8
%O=getelementptr inbounds i8,i8*%F,i64 24
%P=bitcast i8*%O to i32*
store i32 -2147483647,i32*%P,align 4
ret i8*%F
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2639(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=alloca i8*,align 8
%d=alloca i8*,align 8
%e=alloca i8*,align 8
%f=alloca i8*,align 8
call void@llvm.gcroot(i8**%c,i8*null)#0
call void@llvm.gcroot(i8**%d,i8*null)#0
call void@llvm.gcroot(i8**%e,i8*null)#0
call void@llvm.gcroot(i8**%f,i8*null)#0
%g=bitcast i8*%b to i8**
%h=load i8*,i8**%g,align 8
store i8*%h,i8**%c,align 8
%i=getelementptr inbounds i8,i8*%b,i64 8
%j=bitcast i8*%i to i8**
%k=load i8*,i8**%j,align 8
store i8*%k,i8**%d,align 8
%l=bitcast i8*%a to i8**
%m=load i8*,i8**%l,align 8
store i8*%m,i8**%e,align 8
%n=call i8*@sml_alloc(i32 inreg 28)#0
%o=getelementptr inbounds i8,i8*%n,i64 -4
%p=bitcast i8*%o to i32*
store i32 1342177304,i32*%p,align 4
store i8*%n,i8**%f,align 8
%q=load i8*,i8**%c,align 8
store i8*null,i8**%c,align 8
%r=bitcast i8*%n to i8**
store i8*%q,i8**%r,align 8
%s=load i8*,i8**%d,align 8
store i8*null,i8**%d,align 8
%t=getelementptr inbounds i8,i8*%n,i64 8
%u=bitcast i8*%t to i8**
store i8*%s,i8**%u,align 8
%v=load i8*,i8**%e,align 8
store i8*null,i8**%e,align 8
%w=getelementptr inbounds i8,i8*%n,i64 16
%x=bitcast i8*%w to i8**
store i8*%v,i8**%x,align 8
%y=getelementptr inbounds i8,i8*%n,i64 24
%z=bitcast i8*%y to i32*
store i32 7,i32*%z,align 4
%A=call i8*@sml_alloc(i32 inreg 28)#0
%B=getelementptr inbounds i8,i8*%A,i64 -4
%C=bitcast i8*%B to i32*
store i32 1342177304,i32*%C,align 4
%D=load i8*,i8**%f,align 8
%E=bitcast i8*%A to i8**
store i8*%D,i8**%E,align 8
%F=getelementptr inbounds i8,i8*%A,i64 8
%G=bitcast i8*%F to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2638 to void(...)*),void(...)**%G,align 8
%H=getelementptr inbounds i8,i8*%A,i64 16
%I=bitcast i8*%H to void(...)**
store void(...)*bitcast(i8*(i8*,i8*)*@_SMLLLN12ElaborateSQL12elaborateExpE_2638 to void(...)*),void(...)**%I,align 8
%J=getelementptr inbounds i8,i8*%A,i64 24
%K=bitcast i8*%J to i32*
store i32 -2147483647,i32*%K,align 4
ret i8*%A
}
define fastcc i8*@_SMLFN12ElaborateSQL12elaborateExpE(i8*inreg%a)local_unnamed_addr#2 gc"smlsharp"{
i:
%b=alloca i8*,align 8
call void@llvm.gcroot(i8**%b,i8*null)#0
store i8*%a,i8**%b,align 8
%c=load atomic i32,i32*@sml_check_flag unordered,align 4
%d=icmp eq i32%c,0
br i1%d,label%g,label%e
e:
call void@sml_check(i32 inreg%c)
%f=load i8*,i8**%b,align 8
br label%g
g:
%h=phi i8*[%f,%e],[%a,%i]
%j=load i8**,i8***bitcast(i8**getelementptr inbounds(<{[4x i8],i32,[1x i8*]}>,<{[4x i8],i32,[1x i8*]}>*@_SML_gvar836bb75000f35849_ElaborateSQL,i64 0,i32 2,i64 0)to i8***),align 8
%k=load i8*,i8**%j,align 8
%l=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2639(i8*inreg%k,i8*inreg%h)
ret i8*%l
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL6TyWildE_2641(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL6TyWildE_1194(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7PatWildE_2642(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7PatWildE_1196(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4UnitE_2643(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL4UnitE_1198(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11LabelStringE_2644(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11LabelStringE_1201(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9UnitTupleE_2645(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9UnitTupleE_1204(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4PairE_2646(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL4PairE_1208(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4ConsE_2648(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL4ConsE_1216(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL3NilE_2649(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL3NilE_1218(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4NoneE_2650(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL4NoneE_1220(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL4TrueE_2651(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL4TrueE_1222(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5FalseE_2652(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL5FalseE_1224(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11Var__compareE_2659(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11Var__compareE_1250(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL16Var__closeCommandE_2660(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL16Var__closeCommandE_1252(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__NULLE_2661(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8Con__NULLE_1254(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__JOINE_2662(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8Con__JOINE_1256(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13Con__INNERJOINE_2663(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL13Con__INNERJOINE_1258(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Con__ASCE_2664(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7Con__ASCE_1260(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8Con__DESCE_2665(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8Con__DESCE_1262(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7Con__ALLE_2666(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7Con__ALLE_1264(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12Con__DISTINCTE_2667(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL12Con__DISTINCTE_1266(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9singletonE_2669(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9singletonE_1271(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5unionE_2670(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1273(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL5unionE_2671(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL5unionE_1275(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_2674(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10tableNamesE_1283(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_2677(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1307(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_2678(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10nestedPairE_1309(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_2680(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL13nestedCompareE_1315(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2682(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1678(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2683(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1681(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2684(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1686(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL3cmp_2685(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL3cmp_1691(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2686(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1700(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2687(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2688(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2689(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2690(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLL7compare_2691(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2692(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2693(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2694(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2695(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLL3cmp_2696(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*bitcast(i8**getelementptr inbounds(<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>,<{[4x i8],i32,i8*,void(...)*,void(...)*,i32}>*@f2,i64 0,i32 2)to i8*)
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2697(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2698(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2699(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1773(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2700(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1778(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2701(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1783(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2702(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2703(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1805(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2704(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1808(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2705(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1821(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2706(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_1824(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2707(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10queryToToyE_2708(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_2709(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1864(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_2710(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1870(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_2711(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10tableToToyE_1874(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2714(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2117(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2715(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2123(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2716(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2129(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2717(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2135(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2718(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2141(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2719(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2147(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2720(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2153(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2721(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2159(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2722(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2169(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2723(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=load i8,i8*%b,align 1
%d=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2175(i8 inreg%c)
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2724(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2181(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL4keys_2725(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL4keys_2193(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2726(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2221(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2727(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2226(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2728(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2232(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2729(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2239(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL11fieldToTerm_2730(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL11fieldToTerm_2242(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2731(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2253(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2732(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2258(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_2733(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11queryToTermE_1888(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_2734(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11tableToTermE_1889(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL17insertValueToTermE_2735(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL17insertValueToTermE_1890(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12havingToTermE_2736(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL12havingToTermE_1891(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL13groupByToTermE_2737(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL13groupByToTermE_1892(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2741(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8makeBindE_2376(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2743(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2744(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8elabListE_2383(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2746(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2747(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2408(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2748(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i32*
%d=load i32,i32*%c,align 4
%e=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabEmbedE_2411(i8*inreg%a,i32 inreg%d)
ret i8*%e
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2749(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2750(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabTableE_2419(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2751(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2752(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL8elabFromE_2426(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2753(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2754(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2434(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL1l_2755(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL1l_2442(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL15representatives_2756(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLL15representatives_2444(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2757(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2758(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2448(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabQueryE_2759(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN12ElaborateSQL9elabQueryE_2450(i8*inreg%a,i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2760(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2761(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2458(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2762(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2763(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2462(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL5error_2764(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
tail call fastcc void@_SMLLL5error_2472(i8*inreg%b)
%c=tail call i8*@sml_alloc(i32 inreg 4)#0
%d=bitcast i8*%c to i32*
%e=getelementptr inbounds i8,i8*%c,i64 -4
%f=bitcast i8*%e to i32*
store i32 4,i32*%f,align 4
store i32 0,i32*%d,align 4
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2765(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i32@_SMLLLN12ElaborateSQL7elabExpE_2477(i8*inreg%b)
%d=tail call i8*@sml_alloc(i32 inreg 4)#0
%e=bitcast i8*%d to i32*
%f=getelementptr inbounds i8,i8*%d,i64 -4
%g=bitcast i8*%f to i32*
store i32 4,i32*%g,align 4
store i32%c,i32*%e,align 4
ret i8*%d
}
define internal fastcc i8*@_SMLLL4exps_2766(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL4exps_2767(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL4exps_2482(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2768(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2769(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2487(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2770(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2771(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2772(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2493(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2773(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabExpE_2498(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2774(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2775(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL14elabExpToQueryE_2503(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2776(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL11elabOrderByE_2505(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2777(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2778(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10elabOffsetE_2510(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2779(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2780(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabLimitE_2514(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2781(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2516(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2782(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2783(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL10elabSelectE_2522(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2784(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2785(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2528(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2786(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2787(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elabInfixExpE_2532(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL4left_2788(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL4left_2789(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL4left_2539(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLL4left_2790(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLL4left_2791(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLL4left_2543(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2792(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2793(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL9elabSpineE_2549(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2794(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2795(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2555(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2796(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2797(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSeqE_2559(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2798(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
ret i8*%b
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2799(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2567(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2800(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2569(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2801(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2802(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2576(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2803(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2804(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2580(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2805(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2806(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2585(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2807(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2808(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2590(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2809(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2592(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2810(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2811(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2598(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2812(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=bitcast i8*%b to i8**
%d=load i8*,i8**%c,align 8
ret i8*%d
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2813(i8*inreg%a,i8*inreg%b)#2 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL7elabSQLE_2603(i8*inreg%b)
ret i8*%c
}
define internal fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2814(i8*inreg%a,i8*inreg%b)#4 gc"smlsharp"{
%c=tail call fastcc i8*@_SMLLLN12ElaborateSQL12elaborateExpE_2616(i8*inreg%b)
ret i8*%c
}
declare void@llvm.memset.p0i8.i32(i8*,i8,i32,i1)#0
attributes#0={nounwind}
attributes#1={noreturn}
attributes#2={uwtable}
attributes#3={noreturn nounwind}
attributes#4={nounwind uwtable}
